<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub All Languages Daily Trending</title>
    <description>Daily Trending of All Languages in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 01:28:50 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>ethereum/solidity</title>
      <link>https://github.com/ethereum/solidity</link>
      <description>&lt;p&gt;Solidity, the Smart Contract Programming Language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Solidity Contract-Oriented Programming Language&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://matrix.to/#/%23ethereum_solidity:gitter.im&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Matrix%20-chat-brightgreen?style=plastic&amp;amp;logo=matrix&quot; alt=&quot;Matrix Chat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/ethereum/solidity&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitter%20-chat-brightgreen?style=plastic&amp;amp;logo=gitter&quot; alt=&quot;Gitter Chat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://forum.soliditylang.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Solidity_Forum%20-discuss-brightgreen?style=plastic&amp;amp;logo=discourse&quot; alt=&quot;Solidity&amp;nbsp;Forum&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://X.com/solidity_lang&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/solidity_lang?style=plastic&amp;amp;logo=x&quot; alt=&quot;X Follow&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://fosstodon.org/@solidity&quot;&gt;&lt;img src=&quot;https://img.shields.io/mastodon/follow/000335908?domain=https%3A%2F%2Ffosstodon.org%2F&amp;amp;logo=mastodon&amp;amp;style=plastic&quot; alt=&quot;Mastodon Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can talk to us on Gitter and Matrix, tweet at us on X (previously Twitter) or create a new topic in the Solidity forum. Questions, feedback, and suggestions are welcome!&lt;/p&gt; 
&lt;p&gt;Solidity is a statically-typed, contract-oriented, high-level language for implementing smart contracts on the Ethereum platform.&lt;/p&gt; 
&lt;p&gt;For a good overview and starting point, please check out the official &lt;a href=&quot;https://soliditylang.org&quot;&gt;Solidity Language Portal&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum/solidity/develop/#background&quot;&gt;Background&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum/solidity/develop/#build-and-install&quot;&gt;Build and Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum/solidity/develop/#example&quot;&gt;Example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum/solidity/develop/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum/solidity/develop/#development&quot;&gt;Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum/solidity/develop/#maintainers&quot;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum/solidity/develop/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ethereum/solidity/develop/#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Background&lt;/h2&gt; 
&lt;p&gt;Solidity is a statically-typed curly-braces programming language designed for developing smart contracts that run on the Ethereum Virtual Machine. Smart contracts are programs that are executed inside a peer-to-peer network where nobody has special authority over the execution, and thus they allow anyone to implement tokens of value, ownership, voting, and other kinds of logic.&lt;/p&gt; 
&lt;p&gt;When deploying contracts, you should use the latest released version of Solidity. This is because breaking changes, as well as new features and bug fixes, are introduced regularly. We currently use a 0.x version number &lt;a href=&quot;https://semver.org/#spec-item-4&quot;&gt;to indicate this fast pace of change&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Build and Install&lt;/h2&gt; 
&lt;p&gt;Instructions about how to build and install the Solidity compiler can be found in the &lt;a href=&quot;https://docs.soliditylang.org/en/latest/installing-solidity.html#building-from-source&quot;&gt;Solidity documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;A &quot;Hello World&quot; program in Solidity is of even less use than in other languages, but still:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-solidity&quot;&gt;// SPDX-License-Identifier: MIT
pragma solidity &amp;gt;=0.6.0 &amp;lt;0.9.0;

contract HelloWorld {
    function helloWorld() external pure returns (string memory) {
        return &quot;Hello, World!&quot;;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get started with Solidity, you can use &lt;a href=&quot;https://remix.ethereum.org/&quot;&gt;Remix&lt;/a&gt;, which is a browser-based IDE. Here are some example contracts:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.soliditylang.org/en/latest/solidity-by-example.html#voting&quot;&gt;Voting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.soliditylang.org/en/latest/solidity-by-example.html#blind-auction&quot;&gt;Blind Auction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.soliditylang.org/en/latest/solidity-by-example.html#safe-remote-purchase&quot;&gt;Safe remote purchase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.soliditylang.org/en/latest/solidity-by-example.html#micropayment-channel&quot;&gt;Micropayment Channel&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The Solidity documentation is hosted using &lt;a href=&quot;https://docs.soliditylang.org&quot;&gt;Read the Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Solidity is still under development. Contributions are always welcome! Please follow the &lt;a href=&quot;https://docs.soliditylang.org/en/latest/contributing.html&quot;&gt;Developer&#39;s Guide&lt;/a&gt; if you want to help.&lt;/p&gt; 
&lt;p&gt;You can find our current feature and bug priorities for forthcoming releases in the &lt;a href=&quot;https://github.com/ethereum/solidity/projects&quot;&gt;projects section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;The Solidity programming language and compiler are open-source community projects governed by a core team. The core team is sponsored by the &lt;a href=&quot;https://ethereum.foundation/&quot;&gt;Ethereum Foundation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Solidity is licensed under &lt;a href=&quot;https://raw.githubusercontent.com/ethereum/solidity/develop/LICENSE.txt&quot;&gt;GNU General Public License v3.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Some third-party code has its &lt;a href=&quot;https://raw.githubusercontent.com/ethereum/solidity/develop/cmake/templates/license.h.in&quot;&gt;own licensing terms&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;The security policy may be &lt;a href=&quot;https://raw.githubusercontent.com/ethereum/solidity/develop/SECURITY.md&quot;&gt;found here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hpcaitech/Open-Sora</title>
      <link>https://github.com/hpcaitech/Open-Sora</link>
      <description>&lt;p&gt;Open-Sora: Democratizing Efficient Video Production for All&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/readme/icon.png&quot; width=&quot;250&quot;&gt; &lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/hpcaitech/Open-Sora?style=social&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://arxiv.org/abs/2503.09642v1&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Tech%20Report%202.0&amp;amp;message=Arxiv&amp;amp;color=red&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://arxiv.org/abs/2412.20404&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Tech%20Report%201.2&amp;amp;message=Arxiv&amp;amp;color=red&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://hpcaitech.github.io/Open-Sora/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gallery-View-orange?logo=&amp;amp;&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://discord.gg/kZakZzrSUT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-join-blueviolet?logo=discord&amp;amp;&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://join.slack.com/t/colossalaiworkspace/shared_invite/zt-247ipg9fk-KRRYmUl~u2ll2637WRURVA&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Slack-ColossalAI-blueviolet?logo=slack&amp;amp;&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://x.com/YangYou1991/status/1899973689460044010&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Twitter-Discuss-blue?logo=twitter&amp;amp;&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/public_assets/main/colossalai/img/WeChat.png&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E5%BE%AE%E4%BF%A1-%E5%B0%8F%E5%8A%A9%E6%89%8B%E5%8A%A0%E7%BE%A4-green?logo=wechat&amp;amp;&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Open-Sora: Democratizing Efficient Video Production for All&lt;/h2&gt; 
&lt;p&gt;We design and implement &lt;strong&gt;Open-Sora&lt;/strong&gt;, an initiative dedicated to &lt;strong&gt;efficiently&lt;/strong&gt; producing high-quality video. We hope to make the model, tools and all details accessible to all. By embracing &lt;strong&gt;open-source&lt;/strong&gt; principles, Open-Sora not only democratizes access to advanced video generation techniques, but also offers a streamlined and user-friendly platform that simplifies the complexities of video generation. With Open-Sora, our goal is to foster innovation, creativity, and inclusivity within the field of content creation.&lt;/p&gt; 
&lt;p&gt;🎬 For a professional AI video-generation product, try &lt;a href=&quot;https://video-ocean.com/&quot;&gt;Video Ocean&lt;/a&gt; — powered by a superior model.&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://video-ocean.com/&quot;&gt; &lt;img src=&quot;https://github.com/hpcaitech/public_assets/raw/main/colossalai/img/3.gif&quot; width=&quot;850&quot;&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://hpc-ai.com/?utm_source=github&amp;amp;utm_medium=social&amp;amp;utm_campaign=promotion-opensora&quot;&gt; &lt;img src=&quot;https://github.com/hpcaitech/public_assets/raw/main/colossalai/img/1.gif&quot; width=&quot;850&quot;&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;!-- [[中文文档](/docs/zh_CN/README.md)] [[潞晨云](https://cloud.luchentech.com/)|[OpenSora镜像](https://cloud.luchentech.com/doc/docs/image/open-sora/)|[视频教程](https://www.bilibili.com/video/BV1ow4m1e7PX/?vd_source=c6b752764cd36ff0e535a768e35d98d2)] --&gt; 
&lt;h2&gt;📰 News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;[2025.03.12]&lt;/strong&gt; 🔥 We released &lt;strong&gt;Open-Sora 2.0&lt;/strong&gt; (11B). 🎬 11B model achieves &lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/#evaluation&quot;&gt;on-par performance&lt;/a&gt; with 11B HunyuanVideo &amp;amp; 30B Step-Video on 📐VBench &amp;amp; 📊Human Preference. 🛠️ Fully open-source: checkpoints and training codes for training with only &lt;strong&gt;$200K&lt;/strong&gt;. &lt;a href=&quot;https://arxiv.org/abs/2503.09642v1&quot;&gt;[report]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025.02.20]&lt;/strong&gt; 🔥 We released &lt;strong&gt;Open-Sora 1.3&lt;/strong&gt; (1B). With the upgraded VAE and Transformer architecture, the quality of our generated videos has been greatly improved 🚀. &lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/#open-sora-13-model-weights&quot;&gt;[checkpoints]&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/docs/report_04.md&quot;&gt;[report]&lt;/a&gt; &lt;a href=&quot;https://huggingface.co/spaces/hpcai-tech/open-sora&quot;&gt;[demo]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2024.12.23]&lt;/strong&gt; The development cost of video generation models has saved by 50%! Open-source solutions are now available with H200 GPU vouchers. &lt;a href=&quot;https://company.hpc-ai.com/blog/the-development-cost-of-video-generation-models-has-saved-by-50-open-source-solutions-are-now-available-with-h200-gpu-vouchers&quot;&gt;[blog]&lt;/a&gt; &lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/raw/main/scripts/train.py&quot;&gt;[code]&lt;/a&gt; &lt;a href=&quot;https://colossalai.org/zh-Hans/docs/get_started/bonus/&quot;&gt;[vouchers]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2024.06.17]&lt;/strong&gt; We released &lt;strong&gt;Open-Sora 1.2&lt;/strong&gt;, which includes &lt;strong&gt;3D-VAE&lt;/strong&gt;, &lt;strong&gt;rectified flow&lt;/strong&gt;, and &lt;strong&gt;score condition&lt;/strong&gt;. The video quality is greatly improved. &lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/#open-sora-12-model-weights&quot;&gt;[checkpoints]&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/docs/report_03.md&quot;&gt;[report]&lt;/a&gt; &lt;a href=&quot;https://arxiv.org/abs/2412.20404&quot;&gt;[arxiv]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2024.04.25]&lt;/strong&gt; 🤗 We released the &lt;a href=&quot;https://huggingface.co/spaces/hpcai-tech/open-sora&quot;&gt;Gradio demo for Open-Sora&lt;/a&gt; on Hugging Face Spaces.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2024.04.25]&lt;/strong&gt; We released &lt;strong&gt;Open-Sora 1.1&lt;/strong&gt;, which supports &lt;strong&gt;2s~15s, 144p to 720p, any aspect ratio&lt;/strong&gt; text-to-image, &lt;strong&gt;text-to-video, image-to-video, video-to-video, infinite time&lt;/strong&gt; generation. In addition, a full video processing pipeline is released. &lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/#open-sora-11-model-weights&quot;&gt;[checkpoints]&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/docs/report_02.md&quot;&gt;[report]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2024.03.18]&lt;/strong&gt; We released &lt;strong&gt;Open-Sora 1.0&lt;/strong&gt;, a fully open-source project for video generation. Open-Sora 1.0 supports a full pipeline of video data preprocessing, training with &lt;a href=&quot;https://github.com/hpcaitech/ColossalAI&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/readme/colossal_ai.png&quot; width=&quot;8%&quot;&gt;&lt;/a&gt; acceleration, inference, and more. Our model can produce 2s 512x512 videos with only 3 days training. &lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/#open-sora-10-model-weights&quot;&gt;[checkpoints]&lt;/a&gt; &lt;a href=&quot;https://hpc-ai.com/blog/open-sora-v1.0&quot;&gt;[blog]&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/docs/report_01.md&quot;&gt;[report]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2024.03.04]&lt;/strong&gt; Open-Sora provides training with 46% cost reduction. &lt;a href=&quot;https://hpc-ai.com/blog/open-sora&quot;&gt;[blog]&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📍 Since Open-Sora is under active development, we remain different branchs for different versions. The latest version is &lt;a href=&quot;https://github.com/hpcaitech/Open-Sora&quot;&gt;main&lt;/a&gt;. Old versions include: &lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/tree/opensora/v1.0&quot;&gt;v1.0&lt;/a&gt;, &lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/tree/opensora/v1.1&quot;&gt;v1.1&lt;/a&gt;, &lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/tree/opensora/v1.2&quot;&gt;v1.2&lt;/a&gt;, &lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/tree/opensora/v1.3&quot;&gt;v1.3&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🎥 Latest Demo&lt;/h2&gt; 
&lt;p&gt;Demos are presented in compressed GIF format for convenience. For original quality samples and their corresponding prompts, please visit our &lt;a href=&quot;https://hpcaitech.github.io/Open-Sora/&quot;&gt;Gallery&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;5s 1024×576&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;5s 576×1024&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;5s 576×1024&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/8g9y9h?autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v2.0/ft_0001_1_1.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/k50mnv?autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v2.0/movie_0160.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/bzrn9n?autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v2.0/movie_0017.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/dsv8da?autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v2.0/ft_0012_1_1.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/3wif07?autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v2.0/douyin_0005.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/us2w7h?autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v2.0/movie_0037.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/yfwk8i?autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v2.0/ft_0055_1_1.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/jgjil0?autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v2.0/sora_0019.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/lsoai1?autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v2.0/movie_0463.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;OpenSora 1.3 Demo&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;&lt;strong&gt;5s 720×1280&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;5s 720×1280&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;5s 720×1280&lt;/strong&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/r0imrp?quality=highest&amp;amp;autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.3/demo_tomato.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/hfvjkh?quality=highest&amp;amp;autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.3/demo_fisherman.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/kutmma?quality=highest&amp;amp;autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.3/demo_girl2.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/osn1la?quality=highest&amp;amp;autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.3/demo_grape.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/l1pzws?quality=highest&amp;amp;autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.3/demo_mushroom.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/2vqari?quality=highest&amp;amp;autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.3/demo_parrot.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/1in7d6?quality=highest&amp;amp;autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.3/demo_trans.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/e9bi4o?quality=highest&amp;amp;autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.3/demo_bear.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/09z7xi?quality=highest&amp;amp;autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.3/demo_futureflower.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/16c3hk?quality=highest&amp;amp;autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.3/demo_fire.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/wi250w?quality=highest&amp;amp;autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.3/demo_man.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://streamable.com/e/vw5b64?quality=highest&amp;amp;autoplay=1&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.3/demo_black.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;OpenSora 1.2 Demo&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;&lt;strong&gt;4s 720×1280&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;4s 720×1280&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;4s 720×1280&lt;/strong&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/7895aab6-ed23-488c-8486-091480c26327&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.2/sample_0013.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/20f07c7b-182b-4562-bbee-f1df74c86c9a&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.2/sample_1718.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/3d897e0d-dc21-453a-b911-b3bda838acc2&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.2/sample_0087.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/644bf938-96ce-44aa-b797-b3c0b513d64c&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.2/sample_0052.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/272d88ac-4b4a-484d-a665-8d07431671d0&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.2/sample_1719.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/ebbac621-c34e-4bb4-9543-1c34f8989764&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.2/sample_0002.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/a1e3a1a3-4abd-45f5-8df2-6cced69da4ca&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.2/sample_0011.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/d6ce9c13-28e1-4dff-9644-cc01f5f11926&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.2/sample_0004.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/561978f8-f1b0-4f4d-ae7b-45bec9001b4a&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.2/sample_0061.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;OpenSora 1.1 Demo&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;&lt;strong&gt;2s 240×426&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;2s 240×426&lt;/strong&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora-dev/assets/99191637/c31ebc52-de39-4a4e-9b1e-9211d45e05b2&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.1/sample_16x240x426_9.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora-dev/assets/99191637/c31ebc52-de39-4a4e-9b1e-9211d45e05b2&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.1/sora_16x240x426_26.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora-dev/assets/99191637/f7ce4aaa-528f-40a8-be7a-72e61eaacbbd&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.1/sora_16x240x426_27.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora-dev/assets/99191637/5d58d71e-1fda-4d90-9ad3-5f2f7b75c6a9&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.1/sora_16x240x426_40.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;&lt;strong&gt;2s 426×240&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;4s 480×854&lt;/strong&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora-dev/assets/99191637/34ecb4a0-4eef-4286-ad4c-8e3a87e5a9fd&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.1/sora_16x426x240_24.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora-dev/assets/99191637/c1619333-25d7-42ba-a91c-18dbc1870b18&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.1/sample_32x480x854_9.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;&lt;strong&gt;16s 320×320&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;16s 224×448&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;2s 426×240&lt;/strong&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/3cab536e-9b43-4b33-8da8-a0f9cf842ff2&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.1/sample_16s_320x320.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/9fb0b9e0-c6f4-4935-b29e-4cac10b373c4&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.1/sample_16s_224x448.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora-dev/assets/99191637/3e892ad2-9543-4049-b005-643a4c1bf3bf&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.1/sora_16x426x240_3.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;OpenSora 1.0 Demo&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;&lt;strong&gt;2s 512×512&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;2s 512×512&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;2s 512×512&lt;/strong&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/de1963d3-b43b-4e68-a670-bb821ebb6f80&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.0/sample_0.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/13f8338f-3d42-4b71-8142-d234fbd746cc&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.0/sample_1.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/fa6a65a6-e32a-4d64-9a9e-eabb0ebb8c16&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.0/sample_2.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;A serene night scene in a forested area. [...] The video is a time-lapse, capturing the transition from day to night, with the lake and forest serving as a constant backdrop.&lt;/td&gt; 
    &lt;td&gt;A soaring drone footage captures the majestic beauty of a coastal cliff, [...] The water gently laps at the rock base and the greenery that clings to the top of the cliff.&lt;/td&gt; 
    &lt;td&gt;The majestic beauty of a waterfall cascading down a cliff into a serene lake. [...] The camera angle provides a bird&#39;s eye view of the waterfall.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/64232f84-1b36-4750-a6c0-3e610fa9aa94&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.0/sample_3.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/983a1965-a374-41a7-a76b-c07941a6c1e9&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.0/sample_4.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/assets/99191637/ec10c879-9767-4c31-865f-2e8d6cf11e65&quot;&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v1.0/sample_5.gif&quot; width=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;A bustling city street at night, filled with the glow of car headlights and the ambient light of streetlights. [...]&lt;/td&gt; 
    &lt;td&gt;The vibrant beauty of a sunflower field. The sunflowers are arranged in neat rows, creating a sense of order and symmetry. [...]&lt;/td&gt; 
    &lt;td&gt;A serene underwater scene featuring a sea turtle swimming through a coral reef. The turtle, with its greenish-brown shell [...]&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;Videos are downsampled to &lt;code&gt;.gif&lt;/code&gt; for display. Click for original videos. Prompts are trimmed for display, see &lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/assets/texts/t2v_samples.txt&quot;&gt;here&lt;/a&gt; for full prompts.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;🔆 Reports&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://arxiv.org/abs/2503.09642v1&quot;&gt;Tech Report of Open-Sora 2.0&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/docs/train.md&quot;&gt;Step by step to train or finetune your own model&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/docs/ae.md&quot;&gt;Step by step to train and evaluate an video autoencoder&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/docs/hcae.md&quot;&gt;Visit the high compression video autoencoder&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Reports of previous version (better see in according branch): 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/docs/report_04.md&quot;&gt;Open-Sora 1.3&lt;/a&gt;: shift-window attention, unified spatial-temporal VAE, etc.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/docs/report_03.md&quot;&gt;Open-Sora 1.2&lt;/a&gt;, &lt;a href=&quot;https://arxiv.org/abs/2412.20404&quot;&gt;Tech Report&lt;/a&gt;: rectified flow, 3d-VAE, score condition, evaluation, etc.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/docs/report_02.md&quot;&gt;Open-Sora 1.1&lt;/a&gt;: multi-resolution/length/aspect-ratio, image/video conditioning/editing, data preprocessing, etc.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/docs/report_01.md&quot;&gt;Open-Sora 1.0&lt;/a&gt;: architecture, captioning, etc.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📍 Since Open-Sora is under active development, we remain different branchs for different versions. The latest version is &lt;a href=&quot;https://github.com/hpcaitech/Open-Sora&quot;&gt;main&lt;/a&gt;. Old versions include: &lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/tree/opensora/v1.0&quot;&gt;v1.0&lt;/a&gt;, &lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/tree/opensora/v1.1&quot;&gt;v1.1&lt;/a&gt;, &lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/tree/opensora/v1.2&quot;&gt;v1.2&lt;/a&gt;, &lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/tree/opensora/v1.3&quot;&gt;v1.3&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# create a virtual env and activate (conda as an example)
conda create -n opensora python=3.10
conda activate opensora

# download the repo
git clone https://github.com/hpcaitech/Open-Sora
cd Open-Sora

# Ensure torch &amp;gt;= 2.4.0
pip install -v . # for development mode, `pip install -v -e .`
pip install xformers==0.0.27.post2 --index-url https://download.pytorch.org/whl/cu121 # install xformers according to your cuda version
pip install flash-attn --no-build-isolation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optionally, you can install flash attention 3 for faster speed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/Dao-AILab/flash-attention # 4f0640d5
cd flash-attention/hopper
python setup.py install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Model Download&lt;/h3&gt; 
&lt;p&gt;Our 11B model supports 256px and 768px resolution. Both T2V and I2V are supported by one model. 🤗 &lt;a href=&quot;https://huggingface.co/hpcai-tech/Open-Sora-v2&quot;&gt;Huggingface&lt;/a&gt; 🤖 &lt;a href=&quot;https://modelscope.cn/models/luchentech/Open-Sora-v2&quot;&gt;ModelScope&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Download from huggingface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pip install &quot;huggingface_hub[cli]&quot;
huggingface-cli download hpcai-tech/Open-Sora-v2 --local-dir ./ckpts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Download from ModelScope:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pip install modelscope
modelscope download hpcai-tech/Open-Sora-v2 --local_dir ./ckpts
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Text-to-Video Generation&lt;/h3&gt; 
&lt;p&gt;Our model is optimized for image-to-video generation, but it can also be used for text-to-video generation. To generate high quality videos, with the help of flux text-to-image model, we build a text-to-image-to-video pipeline. For 256x256 resolution:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Generate one given prompt
torchrun --nproc_per_node 1 --standalone scripts/diffusion/inference.py configs/diffusion/inference/t2i2v_256px.py --save-dir samples --prompt &quot;raining, sea&quot;

# Save memory with offloading
torchrun --nproc_per_node 1 --standalone scripts/diffusion/inference.py configs/diffusion/inference/t2i2v_256px.py --save-dir samples --prompt &quot;raining, sea&quot; --offload True

# Generation with csv
torchrun --nproc_per_node 1 --standalone scripts/diffusion/inference.py configs/diffusion/inference/t2i2v_256px.py --save-dir samples --dataset.data-path assets/texts/example.csv
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For 768x768 resolution:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# One GPU
torchrun --nproc_per_node 1 --standalone scripts/diffusion/inference.py configs/diffusion/inference/t2i2v_768px.py --save-dir samples --prompt &quot;raining, sea&quot;

# Multi-GPU with colossalai sp
torchrun --nproc_per_node 8 --standalone scripts/diffusion/inference.py configs/diffusion/inference/t2i2v_768px.py --save-dir samples --prompt &quot;raining, sea&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can adjust the generation aspect ratio by &lt;code&gt;--aspect_ratio&lt;/code&gt; and the generation length by &lt;code&gt;--num_frames&lt;/code&gt;. Candidate values for aspect_ratio includes &lt;code&gt;16:9&lt;/code&gt;, &lt;code&gt;9:16&lt;/code&gt;, &lt;code&gt;1:1&lt;/code&gt;, &lt;code&gt;2.39:1&lt;/code&gt;. Candidate values for num_frames should be &lt;code&gt;4k+1&lt;/code&gt; and less than 129.&lt;/p&gt; 
&lt;p&gt;You can also run direct text-to-video by:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# One GPU for 256px
torchrun --nproc_per_node 1 --standalone scripts/diffusion/inference.py configs/diffusion/inference/256px.py --prompt &quot;raining, sea&quot;
# Multi-GPU for 768px
torchrun --nproc_per_node 8 --standalone scripts/diffusion/inference.py configs/diffusion/inference/768px.py --prompt &quot;raining, sea&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Image-to-Video Generation&lt;/h3&gt; 
&lt;p&gt;Given a prompt and a reference image, you can generate a video with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 256px
torchrun --nproc_per_node 1 --standalone scripts/diffusion/inference.py configs/diffusion/inference/256px.py --cond_type i2v_head --prompt &quot;A plump pig wallows in a muddy pond on a rustic farm, its pink snout poking out as it snorts contentedly. The camera captures the pig&#39;s playful splashes, sending ripples through the water under the midday sun. Wooden fences and a red barn stand in the background, framed by rolling green hills. The pig&#39;s muddy coat glistens in the sunlight, showcasing the simple pleasures of its carefree life.&quot; --ref assets/texts/i2v.png

# 256px with csv
torchrun --nproc_per_node 1 --standalone scripts/diffusion/inference.py configs/diffusion/inference/256px.py --cond_type i2v_head --dataset.data-path assets/texts/i2v.csv

# Multi-GPU 768px
torchrun --nproc_per_node 8 --standalone scripts/diffusion/inference.py configs/diffusion/inference/768px.py --cond_type i2v_head --dataset.data-path assets/texts/i2v.csv
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Advanced Usage&lt;/h2&gt; 
&lt;h3&gt;Motion Score&lt;/h3&gt; 
&lt;p&gt;During training, we provide motion score into the text prompt. During inference, you can use the following command to generate videos with motion score (the default score is 4):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;torchrun --nproc_per_node 1 --standalone scripts/diffusion/inference.py configs/diffusion/inference/t2i2v_256px.py --save-dir samples --prompt &quot;raining, sea&quot; --motion-score 4
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We also provide a dynamic motion score evaluator. After setting your OpenAI API key, you can use the following command to evaluate the motion score of a video:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;torchrun --nproc_per_node 1 --standalone scripts/diffusion/inference.py configs/diffusion/inference/t2i2v_256px.py --save-dir samples --prompt &quot;raining, sea&quot; --motion-score dynamic
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Score&lt;/th&gt; 
   &lt;th&gt;1&lt;/th&gt; 
   &lt;th&gt;4&lt;/th&gt; 
   &lt;th&gt;7&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v2.0/motion_score_1.gif&quot; width=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v2.0/motion_score_4.gif&quot; width=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/demo/v2.0/motion_score_7.gif&quot; width=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Prompt Refine&lt;/h3&gt; 
&lt;p&gt;We take advantage of ChatGPT to refine the prompt. You can use the following command to refine the prompt. The function is available for both text-to-video and image-to-video generation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;export OPENAI_API_KEY=sk-xxxx
torchrun --nproc_per_node 1 --standalone scripts/diffusion/inference.py configs/diffusion/inference/t2i2v_256px.py --save-dir samples --prompt &quot;raining, sea&quot; --refine-prompt True
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reproductivity&lt;/h3&gt; 
&lt;p&gt;To make the results reproducible, you can set the random seed by:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;torchrun --nproc_per_node 1 --standalone scripts/diffusion/inference.py configs/diffusion/inference/t2i2v_256px.py --save-dir samples --prompt &quot;raining, sea&quot; --sampling_option.seed 42 --seed 42
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use &lt;code&gt;--num-sample k&lt;/code&gt; to generate &lt;code&gt;k&lt;/code&gt; samples for each prompt.&lt;/p&gt; 
&lt;h2&gt;Computational Efficiency&lt;/h2&gt; 
&lt;p&gt;We test the computational efficiency of text-to-video on H100/H800 GPU. For 256x256, we use colossalai&#39;s tensor parallelism, and &lt;code&gt;--offload True&lt;/code&gt; is used. For 768x768, we use colossalai&#39;s sequence parallelism. All use number of steps 50. The results are presented in the format: $\color{blue}{\text{Total time (s)}}/\color{red}{\text{peak GPU memory (GB)}}$&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Resolution&lt;/th&gt; 
   &lt;th&gt;1x GPU&lt;/th&gt; 
   &lt;th&gt;2x GPUs&lt;/th&gt; 
   &lt;th&gt;4x GPUs&lt;/th&gt; 
   &lt;th&gt;8x GPUs&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;256x256&lt;/td&gt; 
   &lt;td&gt;$\color{blue}{60}/\color{red}{52.5}$&lt;/td&gt; 
   &lt;td&gt;$\color{blue}{40}/\color{red}{44.3}$&lt;/td&gt; 
   &lt;td&gt;$\color{blue}{34}/\color{red}{44.3}$&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;768x768&lt;/td&gt; 
   &lt;td&gt;$\color{blue}{1656}/\color{red}{60.3}$&lt;/td&gt; 
   &lt;td&gt;$\color{blue}{863}/\color{red}{48.3}$&lt;/td&gt; 
   &lt;td&gt;$\color{blue}{466}/\color{red}{44.3}$&lt;/td&gt; 
   &lt;td&gt;$\color{blue}{276}/\color{red}{44.3}$&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Evaluation&lt;/h2&gt; 
&lt;p&gt;On &lt;a href=&quot;https://huggingface.co/spaces/Vchitect/VBench_Leaderboard&quot;&gt;VBench&lt;/a&gt;, Open-Sora 2.0 significantly narrows the gap with OpenAI’s Sora, reducing it from 4.52% → 0.69% compared to Open-Sora 1.2.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/readme/v2_vbench.png&quot; alt=&quot;VBench&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Human preference results show our model is on par with HunyuanVideo 11B and Step-Video 30B.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/readme/v2_winrate.png&quot; alt=&quot;Win Rate&quot;&gt;&lt;/p&gt; 
&lt;p&gt;With strong performance, Open-Sora 2.0 is cost-effective.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/hpcaitech/Open-Sora-Demo/raw/main/readme/v2_cost.png&quot; alt=&quot;Cost&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful contributors:&lt;/p&gt; 
&lt;a href=&quot;https://github.com/hpcaitech/Open-Sora/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=hpcaitech/Open-Sora&quot;&gt; &lt;/a&gt; 
&lt;p&gt;If you wish to contribute to this project, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/hpcaitech/Open-Sora/main/CONTRIBUTING.md&quot;&gt;Contribution Guideline&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;Here we only list a few of the projects. For other works and datasets, please refer to our report.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hpcaitech/ColossalAI&quot;&gt;ColossalAI&lt;/a&gt;: A powerful large model parallel acceleration and optimization system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebookresearch/DiT&quot;&gt;DiT&lt;/a&gt;: Scalable Diffusion Models with Transformers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NUS-HPC-AI-Lab/OpenDiT&quot;&gt;OpenDiT&lt;/a&gt;: An acceleration for DiT training. We adopt valuable acceleration strategies for training progress from OpenDiT.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PixArt-alpha/PixArt-alpha&quot;&gt;PixArt&lt;/a&gt;: An open-source DiT-based text-to-image model.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/black-forest-labs/flux&quot;&gt;Flux&lt;/a&gt;: A powerful text-to-image generation model.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Vchitect/Latte&quot;&gt;Latte&lt;/a&gt;: An attempt to efficiently train DiT for video.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tencent/HunyuanVideo/tree/main?tab=readme-ov-file&quot;&gt;HunyuanVideo&lt;/a&gt;: Open-Source text-to-video model.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://huggingface.co/stabilityai/sd-vae-ft-mse-original&quot;&gt;StabilityAI VAE&lt;/a&gt;: A powerful image VAE model.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mit-han-lab/efficientvit&quot;&gt;DC-AE&lt;/a&gt;: Deep Compression AutoEncoder for image compression.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/openai/CLIP&quot;&gt;CLIP&lt;/a&gt;: A powerful text-image embedding model.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/google-research/text-to-text-transfer-transformer&quot;&gt;T5&lt;/a&gt;: A powerful text encoder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/haotian-liu/LLaVA&quot;&gt;LLaVA&lt;/a&gt;: A powerful image captioning model based on &lt;a href=&quot;https://huggingface.co/mistralai/Mistral-7B-v0.1&quot;&gt;Mistral-7B&lt;/a&gt; and &lt;a href=&quot;https://huggingface.co/01-ai/Yi-34B&quot;&gt;Yi-34B&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/magic-research/PLLaVA&quot;&gt;PLLaVA&lt;/a&gt;: A powerful video captioning model.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mira-space/MiraData&quot;&gt;MiraData&lt;/a&gt;: A large-scale video dataset with long durations and structured caption.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bibtex&quot;&gt;@article{opensora,
  title={Open-sora: Democratizing efficient video production for all},
  author={Zheng, Zangwei and Peng, Xiangyu and Yang, Tianji and Shen, Chenhui and Li, Shenggui and Liu, Hongxin and Zhou, Yukun and Li, Tianyi and You, Yang},
  journal={arXiv preprint arXiv:2412.20404},
  year={2024}
}

@article{opensora2,
    title={Open-Sora 2.0: Training a Commercial-Level Video Generation Model in $200k}, 
    author={Xiangyu Peng and Zangwei Zheng and Chenhui Shen and Tom Young and Xinying Guo and Binluo Wang and Hang Xu and Hongxin Liu and Mingyan Jiang and Wenjun Li and Yuhui Wang and Anbang Ye and Gang Ren and Qianran Ma and Wanying Liang and Xiang Lian and Xiwen Wu and Yuting Zhong and Zhuangyan Li and Chaoyu Gong and Guojun Lei and Leijun Cheng and Limin Zhang and Minghao Li and Ruijie Zhang and Silan Hu and Shijie Huang and Xiaokang Wang and Yuanheng Zhao and Yuqi Wang and Ziang Wei and Yang You},
    year={2025},
    journal={arXiv preprint arXiv:2503.09642},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://star-history.com/#hpcaitech/Open-Sora&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=hpcaitech/Open-Sora&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/openai-python</title>
      <link>https://github.com/openai/openai-python</link>
      <description>&lt;p&gt;The official Python library for the OpenAI API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI Python API library&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://pypi.org/project/openai/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/openai.svg?sanitize=true&quot; alt=&quot;PyPI version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The OpenAI Python library provides convenient access to the OpenAI REST API from any Python 3.8+ application. The library includes type definitions for all request params and response fields, and offers both synchronous and asynchronous clients powered by &lt;a href=&quot;https://github.com/encode/httpx&quot;&gt;httpx&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It is generated from our &lt;a href=&quot;https://github.com/openai/openai-openapi&quot;&gt;OpenAPI specification&lt;/a&gt; with &lt;a href=&quot;https://stainlessapi.com/&quot;&gt;Stainless&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The REST API documentation can be found on &lt;a href=&quot;https://platform.openai.com/docs/api-reference&quot;&gt;platform.openai.com&lt;/a&gt;. The full API of this library can be found in &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-python/main/api.md&quot;&gt;api.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# install from PyPI
pip install openai
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The full API of this library can be found in &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-python/main/api.md&quot;&gt;api.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The primary API for interacting with OpenAI models is the &lt;a href=&quot;https://platform.openai.com/docs/api-reference/responses&quot;&gt;Responses API&lt;/a&gt;. You can generate text from the model with the code below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import os
from openai import OpenAI

client = OpenAI(
    # This is the default and can be omitted
    api_key=os.environ.get(&quot;OPENAI_API_KEY&quot;),
)

response = client.responses.create(
    model=&quot;gpt-4o&quot;,
    instructions=&quot;You are a coding assistant that talks like a pirate.&quot;,
    input=&quot;How do I check if a Python object is an instance of a class?&quot;,
)

print(response.output_text)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The previous standard (supported indefinitely) for generating text is the &lt;a href=&quot;https://platform.openai.com/docs/api-reference/chat&quot;&gt;Chat Completions API&lt;/a&gt;. You can use that API to generate text from the model with the code below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from openai import OpenAI

client = OpenAI()

completion = client.chat.completions.create(
    model=&quot;gpt-4o&quot;,
    messages=[
        {&quot;role&quot;: &quot;developer&quot;, &quot;content&quot;: &quot;Talk like a pirate.&quot;},
        {
            &quot;role&quot;: &quot;user&quot;,
            &quot;content&quot;: &quot;How do I check if a Python object is an instance of a class?&quot;,
        },
    ],
)

print(completion.choices[0].message.content)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;While you can provide an &lt;code&gt;api_key&lt;/code&gt; keyword argument, we recommend using &lt;a href=&quot;https://pypi.org/project/python-dotenv/&quot;&gt;python-dotenv&lt;/a&gt; to add &lt;code&gt;OPENAI_API_KEY=&quot;My API Key&quot;&lt;/code&gt; to your &lt;code&gt;.env&lt;/code&gt; file so that your API key is not stored in source control. &lt;a href=&quot;https://platform.openai.com/settings/organization/api-keys&quot;&gt;Get an API key here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Vision&lt;/h3&gt; 
&lt;p&gt;With an image URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;prompt = &quot;What is in this image?&quot;
img_url = &quot;https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/2023_06_08_Raccoon1.jpg/1599px-2023_06_08_Raccoon1.jpg&quot;

response = client.responses.create(
    model=&quot;gpt-4o-mini&quot;,
    input=[
        {
            &quot;role&quot;: &quot;user&quot;,
            &quot;content&quot;: [
                {&quot;type&quot;: &quot;input_text&quot;, &quot;text&quot;: prompt},
                {&quot;type&quot;: &quot;input_image&quot;, &quot;image_url&quot;: f&quot;{img_url}&quot;},
            ],
        }
    ],
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the image as a base64 encoded string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import base64
from openai import OpenAI

client = OpenAI()

prompt = &quot;What is in this image?&quot;
with open(&quot;path/to/image.png&quot;, &quot;rb&quot;) as image_file:
    b64_image = base64.b64encode(image_file.read()).decode(&quot;utf-8&quot;)

response = client.responses.create(
    model=&quot;gpt-4o-mini&quot;,
    input=[
        {
            &quot;role&quot;: &quot;user&quot;,
            &quot;content&quot;: [
                {&quot;type&quot;: &quot;input_text&quot;, &quot;text&quot;: prompt},
                {&quot;type&quot;: &quot;input_image&quot;, &quot;image_url&quot;: f&quot;data:image/png;base64,{b64_image}&quot;},
            ],
        }
    ],
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Async usage&lt;/h2&gt; 
&lt;p&gt;Simply import &lt;code&gt;AsyncOpenAI&lt;/code&gt; instead of &lt;code&gt;OpenAI&lt;/code&gt; and use &lt;code&gt;await&lt;/code&gt; with each API call:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import os
import asyncio
from openai import AsyncOpenAI

client = AsyncOpenAI(
    # This is the default and can be omitted
    api_key=os.environ.get(&quot;OPENAI_API_KEY&quot;),
)


async def main() -&amp;gt; None:
    response = await client.responses.create(
        model=&quot;gpt-4o&quot;, input=&quot;Explain disestablishmentarianism to a smart five year old.&quot;
    )
    print(response.output_text)


asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Functionality between the synchronous and asynchronous clients is otherwise identical.&lt;/p&gt; 
&lt;h2&gt;Streaming responses&lt;/h2&gt; 
&lt;p&gt;We provide support for streaming responses using Server Side Events (SSE).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from openai import OpenAI

client = OpenAI()

stream = client.responses.create(
    model=&quot;gpt-4o&quot;,
    input=&quot;Write a one-sentence bedtime story about a unicorn.&quot;,
    stream=True,
)

for event in stream:
    print(event)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The async client uses the exact same interface.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import asyncio
from openai import AsyncOpenAI

client = AsyncOpenAI()


async def main():
    stream = client.responses.create(
        model=&quot;gpt-4o&quot;,
        input=&quot;Write a one-sentence bedtime story about a unicorn.&quot;,
        stream=True,
    )

    for event in stream:
        print(event)


asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Realtime API beta&lt;/h2&gt; 
&lt;p&gt;The Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports text and audio as both input and output, as well as &lt;a href=&quot;https://platform.openai.com/docs/guides/function-calling&quot;&gt;function calling&lt;/a&gt; through a WebSocket connection.&lt;/p&gt; 
&lt;p&gt;Under the hood the SDK uses the &lt;a href=&quot;https://websockets.readthedocs.io/en/stable/&quot;&gt;&lt;code&gt;websockets&lt;/code&gt;&lt;/a&gt; library to manage connections.&lt;/p&gt; 
&lt;p&gt;The Realtime API works through a combination of client-sent events and server-sent events. Clients can send events to do things like update session configuration or send text and audio inputs. Server events confirm when audio responses have completed, or when a text response from the model has been received. A full event reference can be found &lt;a href=&quot;https://platform.openai.com/docs/api-reference/realtime-client-events&quot;&gt;here&lt;/a&gt; and a guide can be found &lt;a href=&quot;https://platform.openai.com/docs/guides/realtime&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Basic text based example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-py&quot;&gt;import asyncio
from openai import AsyncOpenAI

async def main():
    client = AsyncOpenAI()

    async with client.beta.realtime.connect(model=&quot;gpt-4o-realtime-preview&quot;) as connection:
        await connection.session.update(session={&#39;modalities&#39;: [&#39;text&#39;]})

        await connection.conversation.item.create(
            item={
                &quot;type&quot;: &quot;message&quot;,
                &quot;role&quot;: &quot;user&quot;,
                &quot;content&quot;: [{&quot;type&quot;: &quot;input_text&quot;, &quot;text&quot;: &quot;Say hello!&quot;}],
            }
        )
        await connection.response.create()

        async for event in connection:
            if event.type == &#39;response.text.delta&#39;:
                print(event.delta, flush=True, end=&quot;&quot;)

            elif event.type == &#39;response.text.done&#39;:
                print()

            elif event.type == &quot;response.done&quot;:
                break

asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However the real magic of the Realtime API is handling audio inputs / outputs, see this example &lt;a href=&quot;https://github.com/openai/openai-python/raw/main/examples/realtime/push_to_talk_app.py&quot;&gt;TUI script&lt;/a&gt; for a fully fledged example.&lt;/p&gt; 
&lt;h3&gt;Realtime error handling&lt;/h3&gt; 
&lt;p&gt;Whenever an error occurs, the Realtime API will send an &lt;a href=&quot;https://platform.openai.com/docs/guides/realtime-model-capabilities#error-handling&quot;&gt;&lt;code&gt;error&lt;/code&gt; event&lt;/a&gt; and the connection will stay open and remain usable. This means you need to handle it yourself, as &lt;em&gt;no errors are raised directly&lt;/em&gt; by the SDK when an &lt;code&gt;error&lt;/code&gt; event comes in.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-py&quot;&gt;client = AsyncOpenAI()

async with client.beta.realtime.connect(model=&quot;gpt-4o-realtime-preview&quot;) as connection:
    ...
    async for event in connection:
        if event.type == &#39;error&#39;:
            print(event.error.type)
            print(event.error.code)
            print(event.error.event_id)
            print(event.error.message)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using types&lt;/h2&gt; 
&lt;p&gt;Nested request parameters are &lt;a href=&quot;https://docs.python.org/3/library/typing.html#typing.TypedDict&quot;&gt;TypedDicts&lt;/a&gt;. Responses are &lt;a href=&quot;https://docs.pydantic.dev&quot;&gt;Pydantic models&lt;/a&gt; which also provide helper methods for things like:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Serializing back into JSON, &lt;code&gt;model.to_json()&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Converting to a dictionary, &lt;code&gt;model.to_dict()&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Typed requests and responses provide autocomplete and documentation within your editor. If you would like to see type errors in VS Code to help catch bugs earlier, set &lt;code&gt;python.analysis.typeCheckingMode&lt;/code&gt; to &lt;code&gt;basic&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Pagination&lt;/h2&gt; 
&lt;p&gt;List methods in the OpenAI API are paginated.&lt;/p&gt; 
&lt;p&gt;This library provides auto-paginating iterators with each list response, so you do not have to request successive pages manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from openai import OpenAI

client = OpenAI()

all_jobs = []
# Automatically fetches more pages as needed.
for job in client.fine_tuning.jobs.list(
    limit=20,
):
    # Do something with job here
    all_jobs.append(job)
print(all_jobs)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, asynchronously:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import asyncio
from openai import AsyncOpenAI

client = AsyncOpenAI()


async def main() -&amp;gt; None:
    all_jobs = []
    # Iterate through items across all pages, issuing requests as needed.
    async for job in client.fine_tuning.jobs.list(
        limit=20,
    ):
        all_jobs.append(job)
    print(all_jobs)


asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can use the &lt;code&gt;.has_next_page()&lt;/code&gt;, &lt;code&gt;.next_page_info()&lt;/code&gt;, or &lt;code&gt;.get_next_page()&lt;/code&gt; methods for more granular control working with pages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;first_page = await client.fine_tuning.jobs.list(
    limit=20,
)
if first_page.has_next_page():
    print(f&quot;will fetch next page using these details: {first_page.next_page_info()}&quot;)
    next_page = await first_page.get_next_page()
    print(f&quot;number of items we just fetched: {len(next_page.data)}&quot;)

# Remove `await` for non-async usage.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or just work directly with the returned data:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;first_page = await client.fine_tuning.jobs.list(
    limit=20,
)

print(f&quot;next page cursor: {first_page.after}&quot;)  # =&amp;gt; &quot;next page cursor: ...&quot;
for job in first_page.data:
    print(job.id)

# Remove `await` for non-async usage.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Nested params&lt;/h2&gt; 
&lt;p&gt;Nested parameters are dictionaries, typed using &lt;code&gt;TypedDict&lt;/code&gt;, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from openai import OpenAI

client = OpenAI()

response = client.chat.responses.create(
    input=[
        {
            &quot;role&quot;: &quot;user&quot;,
            &quot;content&quot;: &quot;How much ?&quot;,
        }
    ],
    model=&quot;gpt-4o&quot;,
    response_format={&quot;type&quot;: &quot;json_object&quot;},
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;File uploads&lt;/h2&gt; 
&lt;p&gt;Request parameters that correspond to file uploads can be passed as &lt;code&gt;bytes&lt;/code&gt;, a &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; instance or a tuple of &lt;code&gt;(filename, contents, media type)&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from pathlib import Path
from openai import OpenAI

client = OpenAI()

client.files.create(
    file=Path(&quot;input.jsonl&quot;),
    purpose=&quot;fine-tune&quot;,
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The async client uses the exact same interface. If you pass a &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; instance, the file contents will be read asynchronously automatically.&lt;/p&gt; 
&lt;h2&gt;Handling errors&lt;/h2&gt; 
&lt;p&gt;When the library is unable to connect to the API (for example, due to network connection problems or a timeout), a subclass of &lt;code&gt;openai.APIConnectionError&lt;/code&gt; is raised.&lt;/p&gt; 
&lt;p&gt;When the API returns a non-success status code (that is, 4xx or 5xx response), a subclass of &lt;code&gt;openai.APIStatusError&lt;/code&gt; is raised, containing &lt;code&gt;status_code&lt;/code&gt; and &lt;code&gt;response&lt;/code&gt; properties.&lt;/p&gt; 
&lt;p&gt;All errors inherit from &lt;code&gt;openai.APIError&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import openai
from openai import OpenAI

client = OpenAI()

try:
    client.fine_tuning.jobs.create(
        model=&quot;gpt-4o&quot;,
        training_file=&quot;file-abc123&quot;,
    )
except openai.APIConnectionError as e:
    print(&quot;The server could not be reached&quot;)
    print(e.__cause__)  # an underlying Exception, likely raised within httpx.
except openai.RateLimitError as e:
    print(&quot;A 429 status code was received; we should back off a bit.&quot;)
except openai.APIStatusError as e:
    print(&quot;Another non-200-range status code was received&quot;)
    print(e.status_code)
    print(e.response)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Error codes are as follows:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Status Code&lt;/th&gt; 
   &lt;th&gt;Error Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;400&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;BadRequestError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;401&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AuthenticationError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;403&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PermissionDeniedError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;404&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;NotFoundError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;422&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UnprocessableEntityError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;429&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;RateLimitError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;gt;=500&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;InternalServerError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APIConnectionError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Request IDs&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For more information on debugging requests, see &lt;a href=&quot;https://platform.openai.com/docs/api-reference/debugging-requests&quot;&gt;these docs&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;All object responses in the SDK provide a &lt;code&gt;_request_id&lt;/code&gt; property which is added from the &lt;code&gt;x-request-id&lt;/code&gt; response header so that you can quickly log failing requests and report them back to OpenAI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;response = await client.responses.create(
    model=&quot;gpt-4o-mini&quot;,
    input=&quot;Say &#39;this is a test&#39;.&quot;,
)
print(response._request_id)  # req_123
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that unlike other properties that use an &lt;code&gt;_&lt;/code&gt; prefix, the &lt;code&gt;_request_id&lt;/code&gt; property &lt;em&gt;is&lt;/em&gt; public. Unless documented otherwise, &lt;em&gt;all&lt;/em&gt; other &lt;code&gt;_&lt;/code&gt; prefix properties, methods and modules are &lt;em&gt;private&lt;/em&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br&gt; If you need to access request IDs for failed requests you must catch the &lt;code&gt;APIStatusError&lt;/code&gt; exception&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import openai

try:
    completion = await client.chat.completions.create(
        messages=[{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Say this is a test&quot;}], model=&quot;gpt-4&quot;
    )
except openai.APIStatusError as exc:
    print(exc.request_id)  # req_123
    raise exc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Retries&lt;/h2&gt; 
&lt;p&gt;Certain errors are automatically retried 2 times by default, with a short exponential backoff. Connection errors (for example, due to a network connectivity problem), 408 Request Timeout, 409 Conflict, 429 Rate Limit, and &amp;gt;=500 Internal errors are all retried by default.&lt;/p&gt; 
&lt;p&gt;You can use the &lt;code&gt;max_retries&lt;/code&gt; option to configure or disable retry settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from openai import OpenAI

# Configure the default for all requests:
client = OpenAI(
    # default is 2
    max_retries=0,
)

# Or, configure per-request:
client.with_options(max_retries=5).chat.completions.create(
    messages=[
        {
            &quot;role&quot;: &quot;user&quot;,
            &quot;content&quot;: &quot;How can I get the name of the current day in JavaScript?&quot;,
        }
    ],
    model=&quot;gpt-4o&quot;,
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Timeouts&lt;/h2&gt; 
&lt;p&gt;By default requests time out after 10 minutes. You can configure this with a &lt;code&gt;timeout&lt;/code&gt; option, which accepts a float or an &lt;a href=&quot;https://www.python-httpx.org/advanced/timeouts/#fine-tuning-the-configuration&quot;&gt;&lt;code&gt;httpx.Timeout&lt;/code&gt;&lt;/a&gt; object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from openai import OpenAI

# Configure the default for all requests:
client = OpenAI(
    # 20 seconds (default is 10 minutes)
    timeout=20.0,
)

# More granular control:
client = OpenAI(
    timeout=httpx.Timeout(60.0, read=5.0, write=10.0, connect=2.0),
)

# Override per-request:
client.with_options(timeout=5.0).chat.completions.create(
    messages=[
        {
            &quot;role&quot;: &quot;user&quot;,
            &quot;content&quot;: &quot;How can I list all files in a directory using Python?&quot;,
        }
    ],
    model=&quot;gpt-4o&quot;,
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On timeout, an &lt;code&gt;APITimeoutError&lt;/code&gt; is thrown.&lt;/p&gt; 
&lt;p&gt;Note that requests that time out are &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-python/main/#retries&quot;&gt;retried twice by default&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Advanced&lt;/h2&gt; 
&lt;h3&gt;Logging&lt;/h3&gt; 
&lt;p&gt;We use the standard library &lt;a href=&quot;https://docs.python.org/3/library/logging.html&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; module.&lt;/p&gt; 
&lt;p&gt;You can enable logging by setting the environment variable &lt;code&gt;OPENAI_LOG&lt;/code&gt; to &lt;code&gt;info&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ export OPENAI_LOG=info
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or to &lt;code&gt;debug&lt;/code&gt; for more verbose logging.&lt;/p&gt; 
&lt;h3&gt;How to tell whether &lt;code&gt;None&lt;/code&gt; means &lt;code&gt;null&lt;/code&gt; or missing&lt;/h3&gt; 
&lt;p&gt;In an API response, a field may be explicitly &lt;code&gt;null&lt;/code&gt;, or missing entirely; in either case, its value is &lt;code&gt;None&lt;/code&gt; in this library. You can differentiate the two cases with &lt;code&gt;.model_fields_set&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-py&quot;&gt;if response.my_field is None:
  if &#39;my_field&#39; not in response.model_fields_set:
    print(&#39;Got json like {}, without a &quot;my_field&quot; key present at all.&#39;)
  else:
    print(&#39;Got json like {&quot;my_field&quot;: null}.&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Accessing raw response data (e.g. headers)&lt;/h3&gt; 
&lt;p&gt;The &quot;raw&quot; Response object can be accessed by prefixing &lt;code&gt;.with_raw_response.&lt;/code&gt; to any HTTP method call, e.g.,&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-py&quot;&gt;from openai import OpenAI

client = OpenAI()
response = client.chat.completions.with_raw_response.create(
    messages=[{
        &quot;role&quot;: &quot;user&quot;,
        &quot;content&quot;: &quot;Say this is a test&quot;,
    }],
    model=&quot;gpt-4o&quot;,
)
print(response.headers.get(&#39;X-My-Header&#39;))

completion = response.parse()  # get the object that `chat.completions.create()` would have returned
print(completion)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These methods return a &lt;a href=&quot;https://github.com/openai/openai-python/tree/main/src/openai/_legacy_response.py&quot;&gt;&lt;code&gt;LegacyAPIResponse&lt;/code&gt;&lt;/a&gt; object. This is a legacy class as we&#39;re changing it slightly in the next major version.&lt;/p&gt; 
&lt;p&gt;For the sync client this will mostly be the same with the exception of &lt;code&gt;content&lt;/code&gt; &amp;amp; &lt;code&gt;text&lt;/code&gt; will be methods instead of properties. In the async client, all methods will be async.&lt;/p&gt; 
&lt;p&gt;A migration script will be provided &amp;amp; the migration in general should be smooth.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.with_streaming_response&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;The above interface eagerly reads the full response body when you make the request, which may not always be what you want.&lt;/p&gt; 
&lt;p&gt;To stream the response body, use &lt;code&gt;.with_streaming_response&lt;/code&gt; instead, which requires a context manager and only reads the response body once you call &lt;code&gt;.read()&lt;/code&gt;, &lt;code&gt;.text()&lt;/code&gt;, &lt;code&gt;.json()&lt;/code&gt;, &lt;code&gt;.iter_bytes()&lt;/code&gt;, &lt;code&gt;.iter_text()&lt;/code&gt;, &lt;code&gt;.iter_lines()&lt;/code&gt; or &lt;code&gt;.parse()&lt;/code&gt;. In the async client, these are async methods.&lt;/p&gt; 
&lt;p&gt;As such, &lt;code&gt;.with_streaming_response&lt;/code&gt; methods return a different &lt;a href=&quot;https://github.com/openai/openai-python/tree/main/src/openai/_response.py&quot;&gt;&lt;code&gt;APIResponse&lt;/code&gt;&lt;/a&gt; object, and the async client returns an &lt;a href=&quot;https://github.com/openai/openai-python/tree/main/src/openai/_response.py&quot;&gt;&lt;code&gt;AsyncAPIResponse&lt;/code&gt;&lt;/a&gt; object.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;with client.chat.completions.with_streaming_response.create(
    messages=[
        {
            &quot;role&quot;: &quot;user&quot;,
            &quot;content&quot;: &quot;Say this is a test&quot;,
        }
    ],
    model=&quot;gpt-4o&quot;,
) as response:
    print(response.headers.get(&quot;X-My-Header&quot;))

    for line in response.iter_lines():
        print(line)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The context manager is required so that the response will reliably be closed.&lt;/p&gt; 
&lt;h3&gt;Making custom/undocumented requests&lt;/h3&gt; 
&lt;p&gt;This library is typed for convenient access to the documented API.&lt;/p&gt; 
&lt;p&gt;If you need to access undocumented endpoints, params, or response properties, the library can still be used.&lt;/p&gt; 
&lt;h4&gt;Undocumented endpoints&lt;/h4&gt; 
&lt;p&gt;To make requests to undocumented endpoints, you can make requests using &lt;code&gt;client.get&lt;/code&gt;, &lt;code&gt;client.post&lt;/code&gt;, and other http verbs. Options on the client will be respected (such as retries) when making this request.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-py&quot;&gt;import httpx

response = client.post(
    &quot;/foo&quot;,
    cast_to=httpx.Response,
    body={&quot;my_param&quot;: True},
)

print(response.headers.get(&quot;x-foo&quot;))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Undocumented request params&lt;/h4&gt; 
&lt;p&gt;If you want to explicitly send an extra param, you can do so with the &lt;code&gt;extra_query&lt;/code&gt;, &lt;code&gt;extra_body&lt;/code&gt;, and &lt;code&gt;extra_headers&lt;/code&gt; request options.&lt;/p&gt; 
&lt;h4&gt;Undocumented response properties&lt;/h4&gt; 
&lt;p&gt;To access undocumented response properties, you can access the extra fields like &lt;code&gt;response.unknown_prop&lt;/code&gt;. You can also get all the extra fields on the Pydantic model as a dict with &lt;a href=&quot;https://docs.pydantic.dev/latest/api/base_model/#pydantic.BaseModel.model_extra&quot;&gt;&lt;code&gt;response.model_extra&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Configuring the HTTP client&lt;/h3&gt; 
&lt;p&gt;You can directly override the &lt;a href=&quot;https://www.python-httpx.org/api/#client&quot;&gt;httpx client&lt;/a&gt; to customize it for your use case, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for &lt;a href=&quot;https://www.python-httpx.org/advanced/proxies/&quot;&gt;proxies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Custom &lt;a href=&quot;https://www.python-httpx.org/advanced/transports/&quot;&gt;transports&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Additional &lt;a href=&quot;https://www.python-httpx.org/advanced/clients/&quot;&gt;advanced&lt;/a&gt; functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import httpx
from openai import OpenAI, DefaultHttpxClient

client = OpenAI(
    # Or use the `OPENAI_BASE_URL` env var
    base_url=&quot;http://my.test.server.example.com:8083/v1&quot;,
    http_client=DefaultHttpxClient(
        proxy=&quot;http://my.test.proxy.example.com&quot;,
        transport=httpx.HTTPTransport(local_address=&quot;0.0.0.0&quot;),
    ),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also customize the client on a per-request basis by using &lt;code&gt;with_options()&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;client.with_options(http_client=DefaultHttpxClient(...))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Managing HTTP resources&lt;/h3&gt; 
&lt;p&gt;By default the library closes underlying HTTP connections whenever the client is &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#object.__del__&quot;&gt;garbage collected&lt;/a&gt;. You can manually close the client using the &lt;code&gt;.close()&lt;/code&gt; method if desired, or with a context manager that closes when exiting.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-py&quot;&gt;from openai import OpenAI

with OpenAI() as client:
  # make requests here
  ...

# HTTP client is now closed
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Microsoft Azure OpenAI&lt;/h2&gt; 
&lt;p&gt;To use this library with &lt;a href=&quot;https://learn.microsoft.com/azure/ai-services/openai/overview&quot;&gt;Azure OpenAI&lt;/a&gt;, use the &lt;code&gt;AzureOpenAI&lt;/code&gt; class instead of the &lt;code&gt;OpenAI&lt;/code&gt; class.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The Azure API shape differs from the core API shape which means that the static types for responses / params won&#39;t always be correct.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-py&quot;&gt;from openai import AzureOpenAI

# gets the API Key from environment variable AZURE_OPENAI_API_KEY
client = AzureOpenAI(
    # https://learn.microsoft.com/azure/ai-services/openai/reference#rest-api-versioning
    api_version=&quot;2023-07-01-preview&quot;,
    # https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource?pivots=web-portal#create-a-resource
    azure_endpoint=&quot;https://example-endpoint.openai.azure.com&quot;,
)

completion = client.chat.completions.create(
    model=&quot;deployment-name&quot;,  # e.g. gpt-35-instant
    messages=[
        {
            &quot;role&quot;: &quot;user&quot;,
            &quot;content&quot;: &quot;How do I output all files in a directory using Python?&quot;,
        },
    ],
)
print(completion.to_json())
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition to the options provided in the base &lt;code&gt;OpenAI&lt;/code&gt; client, the following options are provided:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;azure_endpoint&lt;/code&gt; (or the &lt;code&gt;AZURE_OPENAI_ENDPOINT&lt;/code&gt; environment variable)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;azure_deployment&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_version&lt;/code&gt; (or the &lt;code&gt;OPENAI_API_VERSION&lt;/code&gt; environment variable)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;azure_ad_token&lt;/code&gt; (or the &lt;code&gt;AZURE_OPENAI_AD_TOKEN&lt;/code&gt; environment variable)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;azure_ad_token_provider&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;An example of using the client with Microsoft Entra ID (formerly known as Azure Active Directory) can be found &lt;a href=&quot;https://github.com/openai/openai-python/raw/main/examples/azure_ad.py&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;This package generally follows &lt;a href=&quot;https://semver.org/spec/v2.0.0.html&quot;&gt;SemVer&lt;/a&gt; conventions, though certain backwards-incompatible changes may be released as minor versions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Changes that only affect static types, without breaking runtime behavior.&lt;/li&gt; 
 &lt;li&gt;Changes to library internals which are technically public but not intended or documented for external use. &lt;em&gt;(Please open a GitHub issue to let us know if you are relying on such internals.)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Changes that we do not expect to impact the vast majority of users in practice.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We take backwards-compatibility seriously and work hard to ensure you can rely on a smooth upgrade experience.&lt;/p&gt; 
&lt;p&gt;We are keen for your feedback; please open an &lt;a href=&quot;https://www.github.com/openai/openai-python/issues&quot;&gt;issue&lt;/a&gt; with questions, bugs, or suggestions.&lt;/p&gt; 
&lt;h3&gt;Determining the installed version&lt;/h3&gt; 
&lt;p&gt;If you&#39;ve upgraded to the latest version but aren&#39;t seeing any new features you were expecting then your python environment is likely still using an older version.&lt;/p&gt; 
&lt;p&gt;You can determine the version that is being used at runtime with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-py&quot;&gt;import openai
print(openai.__version__)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;Python 3.8 or higher.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-python/main/CONTRIBUTING.md&quot;&gt;the contributing documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/RD-Agent</title>
      <link>https://github.com/microsoft/RD-Agent</link>
      <description>&lt;p&gt;Research and development (R&amp;D) is crucial for the enhancement of industrial productivity, especially in the AI era, where the core aspects of R&amp;D are mainly focused on data and models. We are committed to automating these high-value generic R&amp;D processes through our open source R&amp;D automation tool RD-Agent, which lets AI drive data-driven AI.&lt;/p&gt;&lt;hr&gt;&lt;h4 align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/microsoft/RD-Agent/main/docs/_static/logo.png&quot; alt=&quot;RA-Agent logo&quot; style=&quot;width:70%; &quot;&gt; &lt;p&gt;&lt;a href=&quot;https://rdagent.azurewebsites.net&quot; target=&quot;_blank&quot;&gt;🖥️ Live Demo&lt;/a&gt; | &lt;a href=&quot;https://rdagent.azurewebsites.net/factor_loop&quot; target=&quot;_blank&quot;&gt;🎥 Demo Video&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=JJ4JYO3HscM&amp;amp;list=PLALmKB0_N3_i52fhUmPQiL4jsO354uopR&quot; target=&quot;_blank&quot;&gt;▶️YouTube&lt;/a&gt; | &lt;a href=&quot;https://rdagent.readthedocs.io/en/latest/index.html&quot; target=&quot;_blank&quot;&gt;📖 Documentation&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/RD-Agent/main/#-paperwork-list&quot;&gt; 📃 Papers &lt;/a&gt;&lt;/p&gt; &lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/RD-Agent/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/RD-Agent/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/microsoft/RD-Agent/actions/workflows/github-code-scanning/codeql&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/RD-Agent/actions/workflows/github-code-scanning/codeql/badge.svg?sanitize=true&quot; alt=&quot;CodeQL&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/microsoft/RD-Agent/actions/workflows/dependabot/dependabot-updates&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/RD-Agent/actions/workflows/dependabot/dependabot-updates/badge.svg?sanitize=true&quot; alt=&quot;Dependabot Updates&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/microsoft/RD-Agent/actions/workflows/pr.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/RD-Agent/actions/workflows/pr.yml/badge.svg?sanitize=true&quot; alt=&quot;Lint PR Title&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/microsoft/RD-Agent/actions/workflows/release.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/RD-Agent/actions/workflows/release.yml/badge.svg?sanitize=true&quot; alt=&quot;Release.yml&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.org/project/rdagent/#files&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/platform-Linux-blue&quot; alt=&quot;Platform&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.org/project/rdagent/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/rdagent&quot; alt=&quot;PyPI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.org/project/rdagent/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/pyversions/rdagent&quot; alt=&quot;PyPI - Python Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/microsoft/RD-Agent/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/microsoft/RD-Agent&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/microsoft/RD-Agent/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/RD-Agent&quot; alt=&quot;GitHub&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/pre-commit/pre-commit&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&quot; alt=&quot;pre-commit&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://mypy-lang.org/&quot;&gt;&lt;img src=&quot;https://www.mypy-lang.org/static/mypy_badge.svg?sanitize=true&quot; alt=&quot;Checked with mypy&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/astral-sh/ruff&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json&quot; alt=&quot;Ruff&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/ybQ97B6Jjy&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-discord-blue&quot; alt=&quot;Chat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://rdagent.readthedocs.io/en/latest/?badge=latest&quot;&gt;&lt;img src=&quot;https://readthedocs.org/projects/rdagent/badge/?version=latest&quot; alt=&quot;Documentation Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/microsoft/RD-Agent/actions/workflows/readthedocs-preview.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/RD-Agent/actions/workflows/readthedocs-preview.yml/badge.svg?sanitize=true&quot; alt=&quot;Readthedocs Preview&quot;&gt;&lt;/a&gt; 
 &lt;!-- this badge is too long, please place it in the last one to make it pretty --&gt;&lt;/p&gt; 
&lt;h1&gt;📰 News&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;🗞️ News&lt;/th&gt; 
   &lt;th&gt;📝 Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kaggle Scenario release&lt;/td&gt; 
   &lt;td&gt;We release &lt;strong&gt;&lt;a href=&quot;https://rdagent.readthedocs.io/en/latest/scens/kaggle_agent.html&quot;&gt;Kaggle Agent&lt;/a&gt;&lt;/strong&gt;, try the new features!&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Official WeChat group release&lt;/td&gt; 
   &lt;td&gt;We created a WeChat group, welcome to join! (🗪&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/RD-Agent/main/docs/WeChat_QR_code.jpg&quot;&gt;QR Code&lt;/a&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Official Discord release&lt;/td&gt; 
   &lt;td&gt;We launch our first chatting channel in Discord (🗪&lt;a href=&quot;https://discord.gg/ybQ97B6Jjy&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-discord-blue&quot; alt=&quot;Chat&quot;&gt;&lt;/a&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;First release&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;RDAgent&lt;/strong&gt; is released on GitHub&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;🌟 Introduction&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/microsoft/RD-Agent/main/docs/_static/scen.png&quot; alt=&quot;Our focused scenario&quot; style=&quot;width:80%; &quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;RDAgent aims to automate the most critical and valuable aspects of the industrial R&amp;amp;D process, and we begin with focusing on the data-driven scenarios to streamline the development of models and data. Methodologically, we have identified a framework with two key components: &#39;R&#39; for proposing new ideas and &#39;D&#39; for implementing them. We believe that the automatic evolution of R&amp;amp;D will lead to solutions of significant industrial value.&lt;/p&gt; 
&lt;!-- Tag Cloud --&gt; 
&lt;p&gt;R&amp;amp;D is a very general scenario. The advent of RDAgent can be your&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;💰 &lt;strong&gt;Automatic Quant Factory&lt;/strong&gt; (&lt;a href=&quot;https://rdagent.azurewebsites.net/factor_loop&quot;&gt;🎥Demo Video&lt;/a&gt;|&lt;a href=&quot;https://www.youtube.com/watch?v=X4DK2QZKaKY&amp;amp;t=6s&quot;&gt;▶️YouTube&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;Data Mining Agent:&lt;/strong&gt; Iteratively proposing data &amp;amp; models (&lt;a href=&quot;https://rdagent.azurewebsites.net/model_loop&quot;&gt;🎥Demo Video 1&lt;/a&gt;|&lt;a href=&quot;https://www.youtube.com/watch?v=dm0dWL49Bc0&amp;amp;t=104s&quot;&gt;▶️YouTube&lt;/a&gt;) (&lt;a href=&quot;https://rdagent.azurewebsites.net/dmm&quot;&gt;🎥Demo Video 2&lt;/a&gt;|&lt;a href=&quot;https://www.youtube.com/watch?v=VIaSTZuoZg4&quot;&gt;▶️YouTube&lt;/a&gt;) and implementing them by gaining knowledge from data.&lt;/li&gt; 
 &lt;li&gt;🦾 &lt;strong&gt;Research Copilot:&lt;/strong&gt; Auto read research papers (&lt;a href=&quot;https://rdagent.azurewebsites.net/report_model&quot;&gt;🎥Demo Video&lt;/a&gt;|&lt;a href=&quot;https://www.youtube.com/watch?v=BiA2SfdKQ7o&quot;&gt;▶️YouTube&lt;/a&gt;) / financial reports (&lt;a href=&quot;https://rdagent.azurewebsites.net/report_factor&quot;&gt;🎥Demo Video&lt;/a&gt;|&lt;a href=&quot;https://www.youtube.com/watch?v=ECLTXVcSx-c&quot;&gt;▶️YouTube&lt;/a&gt;) and implement model structures or building datasets.&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;Kaggle Agent:&lt;/strong&gt; Auto Model Tuning and Feature Engineering(&lt;a href=&quot;&quot;&gt;🎥Demo Video Coming Soon...&lt;/a&gt;) and implementing them to achieve more in competitions.&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can click the links above to view the demo. We&#39;re continuously adding more methods and scenarios to the project to enhance your R&amp;amp;D processes and boost productivity.&lt;/p&gt; 
&lt;p&gt;Additionally, you can take a closer look at the examples in our &lt;strong&gt;&lt;a href=&quot;https://rdagent.azurewebsites.net/&quot;&gt;🖥️ Live Demo&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://rdagent.azurewebsites.net/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/microsoft/RD-Agent/main/docs/_static/demo.png&quot; alt=&quot;Watch the demo&quot; width=&quot;80%&quot;&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h1&gt;⚡ Quick start&lt;/h1&gt; 
&lt;p&gt;You can try above demos by running the following command:&lt;/p&gt; 
&lt;h3&gt;🐳 Docker installation.&lt;/h3&gt; 
&lt;p&gt;Users must ensure Docker is installed before attempting most scenarios. Please refer to the &lt;a href=&quot;https://docs.docker.com/engine/install/&quot;&gt;official 🐳Docker page&lt;/a&gt; for installation instructions.&lt;/p&gt; 
&lt;h3&gt;🐍 Create a Conda Environment&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new conda environment with Python (3.10 and 3.11 are well-tested in our CI): &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;conda create -n rdagent python=3.10
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Activate the environment: &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;conda activate rdagent
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛠️ Install the RDAgent&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can directly install the RDAgent package from PyPI: &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pip install rdagent
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💊 Health check&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;rdagent provides a health check that currently checks two things. 
  &lt;ul&gt; 
   &lt;li&gt;whether the docker installation was successful.&lt;/li&gt; 
   &lt;li&gt;whether the default port used by the &lt;a href=&quot;https://github.com/microsoft/RD-Agent?tab=readme-ov-file#%EF%B8%8F-monitor-the-application-results&quot;&gt;rdagent ui&lt;/a&gt; is occupied.&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rdagent health_check
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;⚙️ Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The demos requires following ability:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;ChatCompletion&lt;/li&gt; 
   &lt;li&gt;json_mode&lt;/li&gt; 
   &lt;li&gt;embedding query&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For example: If you are using the &lt;code&gt;OpenAI API&lt;/code&gt;, you have to configure your GPT model in the &lt;code&gt;.env&lt;/code&gt; file like this.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cat &amp;lt;&amp;lt; EOF  &amp;gt; .env
OPENAI_API_KEY=&amp;lt;replace_with_your_openai_api_key&amp;gt;
# EMBEDDING_MODEL=text-embedding-3-small
CHAT_MODEL=gpt-4-turbo
EOF
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;However, not every API services support these features by devault. For example: &lt;code&gt;AZURE OpenAI&lt;/code&gt;, you have to configure your GPT model in the &lt;code&gt;.env&lt;/code&gt; file like this.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cat &amp;lt;&amp;lt; EOF  &amp;gt; .env
USE_AZURE=True
EMBEDDING_OPENAI_API_KEY=&amp;lt;replace_with_your_azure_openai_api_key&amp;gt;
EMBEDDING_AZURE_API_BASE=&amp;lt;replace_with_your_azure_endpoint&amp;gt;
EMBEDDING_AZURE_API_VERSION=&amp;lt;replace_with_the_version_of_your_azure_openai_api&amp;gt;
EMBEDDING_MODEL=text-embedding-3-small
CHAT_OPENAI_API_KEY=&amp;lt;replace_with_your_azure_openai_api_key&amp;gt;
CHAT_AZURE_API_BASE=&amp;lt;replace_with_your_azure_endpoint&amp;gt;
CHAT_AZURE_API_VERSION=&amp;lt;replace_with_the_version_of_your_azure_openai_api&amp;gt;
CHAT_MODEL=&amp;lt;replace_it_with_the_name_of_your_azure_chat_model&amp;gt;
EOF
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more configuration information, please refer to the &lt;a href=&quot;https://rdagent.readthedocs.io/en/latest/installation_and_configuration.html&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🚀 Run the Application&lt;/h3&gt; 
&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https://rdagent.azurewebsites.net/&quot;&gt;🖥️ Live Demo&lt;/a&gt;&lt;/strong&gt; is implemented by the following commands(each item represents one demo, you can select the one you prefer):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Run the &lt;strong&gt;Automated Quantitative Trading &amp;amp; Iterative Factors Evolution&lt;/strong&gt;: &lt;a href=&quot;http://github.com/microsoft/qlib&quot;&gt;Qlib&lt;/a&gt; self-loop factor proposal and implementation application&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rdagent fin_factor
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the &lt;strong&gt;Automated Quantitative Trading &amp;amp; Iterative Model Evolution&lt;/strong&gt;: &lt;a href=&quot;http://github.com/microsoft/qlib&quot;&gt;Qlib&lt;/a&gt; self-loop model proposal and implementation application&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rdagent fin_model
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the &lt;strong&gt;Automated Medical Prediction Model Evolution&lt;/strong&gt;: Medical self-loop model proposal and implementation application&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;(1) Apply for an account at &lt;a href=&quot;https://physionet.org/&quot;&gt;PhysioNet&lt;/a&gt;. &lt;br&gt; (2) Request access to FIDDLE preprocessed data: &lt;a href=&quot;https://physionet.org/content/mimic-eicu-fiddle-feature/1.0.0/&quot;&gt;FIDDLE Dataset&lt;/a&gt;. &lt;br&gt; (3) Place your username and password in &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cat &amp;lt;&amp;lt; EOF  &amp;gt;&amp;gt; .env
DM_USERNAME=&amp;lt;your_username&amp;gt;
DM_PASSWORD=&amp;lt;your_password&amp;gt;
EOF
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rdagent med_model
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the &lt;strong&gt;Automated Quantitative Trading &amp;amp; Factors Extraction from Financial Reports&lt;/strong&gt;: Run the &lt;a href=&quot;http://github.com/microsoft/qlib&quot;&gt;Qlib&lt;/a&gt; factor extraction and implementation application based on financial reports&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# 1. Generally, you can run this scenario using the following command:
rdagent fin_factor_report --report_folder=&amp;lt;Your financial reports folder path&amp;gt;

# 2. Specifically, you need to prepare some financial reports first. You can follow this concrete example:
wget https://github.com/SunsetWolf/rdagent_resource/releases/download/reports/all_reports.zip
unzip all_reports.zip -d git_ignore_folder/reports
rdagent fin_factor_report --report_folder=git_ignore_folder/reports
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the &lt;strong&gt;Automated Model Research &amp;amp; Development Copilot&lt;/strong&gt;: model extraction and implementation application&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# 1. Generally, you can run your own papers/reports with the following command:
rdagent general_model &amp;lt;Your paper URL&amp;gt;

# 2. Specifically, you can do it like this. For more details and additional paper examples, use `rdagent general_model -h`:
rdagent general_model  &quot;https://arxiv.org/pdf/2210.09789&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the &lt;strong&gt;Automated Kaggle Model Tuning &amp;amp; Feature Engineering&lt;/strong&gt;: self-loop model proposal and feature engineering implementation application &lt;br&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Using &lt;strong&gt;sf-crime&lt;/strong&gt; &lt;em&gt;(San Francisco Crime Classification)&lt;/em&gt; as an example. &lt;br&gt;&lt;/p&gt; 
   &lt;ol&gt; 
    &lt;li&gt;Register and login on the &lt;a href=&quot;https://www.kaggle.com/&quot;&gt;Kaggle&lt;/a&gt; website. &lt;br&gt;&lt;/li&gt; 
    &lt;li&gt;Configuring the Kaggle API. &lt;br&gt; (1) Click on the avatar (usually in the top right corner of the page) -&amp;gt; &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Create New Token&lt;/code&gt;, A file called &lt;code&gt;kaggle.json&lt;/code&gt; will be downloaded. &lt;br&gt; (2) Move &lt;code&gt;kaggle.json&lt;/code&gt; to &lt;code&gt;~/.config/kaggle/&lt;/code&gt; &lt;br&gt; (3) Modify the permissions of the kaggle.json file. Reference command: &lt;code&gt;chmod 600 ~/.config/kaggle/kaggle.json&lt;/code&gt; &lt;br&gt;&lt;/li&gt; 
    &lt;li&gt;Join the competition: Click &lt;code&gt;Join the competition&lt;/code&gt; -&amp;gt; &lt;code&gt;I Understand and Accept&lt;/code&gt; at the bottom of the &lt;a href=&quot;https://www.kaggle.com/competitions/sf-crime/data&quot;&gt;competition details page&lt;/a&gt;.&lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Generally, you can run the Kaggle competition program with the following command:
rdagent kaggle --competition &amp;lt;your competition name&amp;gt;

# Specifically, you will need to first prepare some competition description files and configure the competition description file path, which you can follow for this specific example:

# 1. Prepare the competition description files
wget https://github.com/SunsetWolf/rdagent_resource/releases/download/kaggle_data/kaggle_data.zip
unzip kaggle_data.zip -d git_ignore_folder/kaggle_data

# 2. Add the competition description file path to the `.env` file.
dotenv set KG_LOCAL_DATA_PATH &quot;$(pwd)/git_ignore_folder/kaggle_data&quot;

# 3. run the application
rdagent kaggle --competition sf-crime
&lt;/code&gt;&lt;/pre&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;strong&gt;Description of the above example:&lt;/strong&gt; &lt;br&gt;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Kaggle competition data, contains two parts: competition description file (json file) and competition dataset (zip file). We prepare the competition description file for you, the competition dataset will be downloaded automatically when you run the program, as in the example. &lt;br&gt;&lt;/li&gt; 
    &lt;li&gt;If you want to download the competition description file automatically, you need to install chromedriver, The instructions for installing chromedriver can be found in the &lt;a href=&quot;https://rdagent.readthedocs.io/en/latest/scens/kaggle_agent.html#example-guide&quot;&gt;documentation&lt;/a&gt;. &lt;br&gt;&lt;/li&gt; 
    &lt;li&gt;The &lt;strong&gt;Competition List Available&lt;/strong&gt; can be found &lt;a href=&quot;https://rdagent.readthedocs.io/en/latest/scens/kaggle_agent.html#competition-list-available&quot;&gt;here&lt;/a&gt;. &lt;br&gt;&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🖥️ Monitor the Application Results&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;You can run the following command for our demo program to see the run logs.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rdagent ui --port 19899 --log_dir &amp;lt;your log folder like &quot;log/&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Although port 19899 is not commonly used, but before you run this demo, you need to check if port 19899 is occupied. If it is, please change it to another port that is not occupied.&lt;/p&gt; &lt;p&gt;You can check if a port is occupied by running the following command.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rdagent health_check
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;🏭 Scenarios&lt;/h1&gt; 
&lt;p&gt;We have applied RD-Agent to multiple valuable data-driven industrial scenarios.&lt;/p&gt; 
&lt;h2&gt;🎯 Goal: Agent for Data-driven R&amp;amp;D&lt;/h2&gt; 
&lt;p&gt;In this project, we are aiming to build an Agent to automate Data-Driven R&amp;amp;D that can&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📄 Read real-world material (reports, papers, etc.) and &lt;strong&gt;extract&lt;/strong&gt; key formulas, descriptions of interested &lt;strong&gt;features&lt;/strong&gt; and &lt;strong&gt;models&lt;/strong&gt;, which are the key components of data-driven R&amp;amp;D .&lt;/li&gt; 
 &lt;li&gt;🛠️ &lt;strong&gt;Implement&lt;/strong&gt; the extracted formulas (e.g., features, factors, and models) in runnable codes. 
  &lt;ul&gt; 
   &lt;li&gt;Due to the limited ability of LLM in implementing at once, build an evolving process for the agent to improve performance by learning from feedback and knowledge.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;💡 Propose &lt;strong&gt;new ideas&lt;/strong&gt; based on current knowledge and observations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- ![Data-Centric R&amp;D Overview](docs/_static/overview.png) --&gt; 
&lt;h2&gt;📈 Scenarios/Demos&lt;/h2&gt; 
&lt;p&gt;In the two key areas of data-driven scenarios, model implementation and data building, our system aims to serve two main roles: 🦾Copilot and 🤖Agent.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The 🦾Copilot follows human instructions to automate repetitive tasks.&lt;/li&gt; 
 &lt;li&gt;The 🤖Agent, being more autonomous, actively proposes ideas for better results in the future.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The supported scenarios are listed below:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Scenario/Target&lt;/th&gt; 
   &lt;th&gt;Model Implementation&lt;/th&gt; 
   &lt;th&gt;Data Building&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;💹 Finance&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🤖 &lt;a href=&quot;https://rdagent.azurewebsites.net/model_loop&quot;&gt;Iteratively Proposing Ideas &amp;amp; Evolving&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=dm0dWL49Bc0&amp;amp;t=104s&quot;&gt;▶️YouTube&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;🤖 &lt;a href=&quot;https://rdagent.azurewebsites.net/factor_loop&quot;&gt;Iteratively Proposing Ideas &amp;amp; Evolving&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=X4DK2QZKaKY&amp;amp;t=6s&quot;&gt;▶️YouTube&lt;/a&gt; &lt;br&gt; 🦾 &lt;a href=&quot;https://rdagent.azurewebsites.net/report_factor&quot;&gt;Auto reports reading &amp;amp; implementation&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ECLTXVcSx-c&quot;&gt;▶️YouTube&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🩺 Medical&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🤖 &lt;a href=&quot;https://rdagent.azurewebsites.net/dmm&quot;&gt;Iteratively Proposing Ideas &amp;amp; Evolving&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=VIaSTZuoZg4&quot;&gt;▶️YouTube&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🏭 General&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🦾 &lt;a href=&quot;https://rdagent.azurewebsites.net/report_model&quot;&gt;Auto paper reading &amp;amp; implementation&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BiA2SfdKQ7o&quot;&gt;▶️YouTube&lt;/a&gt; &lt;br&gt; 🤖 Auto Kaggle Model Tuning&lt;/td&gt; 
   &lt;td&gt;🤖Auto Kaggle feature Engineering&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://rdagent.readthedocs.io/en/latest/scens/kaggle_agent.html#roadmap&quot;&gt;RoadMap&lt;/a&gt;&lt;/strong&gt;: Currently, we are working hard to add new features to the Kaggle scenario.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Different scenarios vary in entrance and configuration. Please check the detailed setup tutorial in the scenarios documents.&lt;/p&gt; 
&lt;p&gt;Here is a gallery of &lt;a href=&quot;https://github.com/SunsetWolf/rdagent_resource/releases/download/demo_traces/demo_traces.zip&quot;&gt;successful explorations&lt;/a&gt; (5 traces showed in &lt;strong&gt;&lt;a href=&quot;https://rdagent.azurewebsites.net/&quot;&gt;🖥️ Live Demo&lt;/a&gt;&lt;/strong&gt;). You can download and view the execution trace using &lt;a href=&quot;https://github.com/microsoft/RD-Agent?tab=readme-ov-file#%EF%B8%8F-monitor-the-application-results&quot;&gt;this command&lt;/a&gt; from the documentation.&lt;/p&gt; 
&lt;p&gt;Please refer to &lt;strong&gt;&lt;a href=&quot;https://rdagent.readthedocs.io/en/latest/scens/catalog.html&quot;&gt;📖readthedocs_scen&lt;/a&gt;&lt;/strong&gt; for more details of the scenarios.&lt;/p&gt; 
&lt;h1&gt;⚙️ Framework&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/microsoft/RD-Agent/main/docs/_static/Framework-RDAgent.png&quot; alt=&quot;Framework-RDAgent&quot; width=&quot;85%&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;Automating the R&amp;amp;D process in data science is a highly valuable yet underexplored area in industry. We propose a framework to push the boundaries of this important research field.&lt;/p&gt; 
&lt;p&gt;The research questions within this framework can be divided into three main categories:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Research Area&lt;/th&gt; 
   &lt;th&gt;Paper/Work List&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Benchmark the R&amp;amp;D abilities&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/RD-Agent/main/#benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Idea proposal:&lt;/strong&gt; Explore new ideas or refine existing ones&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/RD-Agent/main/#research&quot;&gt;Research&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ability to realize ideas:&lt;/strong&gt; Implement and execute ideas&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/RD-Agent/main/#development&quot;&gt;Development&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;We believe that the key to delivering high-quality solutions lies in the ability to evolve R&amp;amp;D capabilities. Agents should learn like human experts, continuously improving their R&amp;amp;D skills.&lt;/p&gt; 
&lt;p&gt;More documents can be found in the &lt;strong&gt;&lt;a href=&quot;https://rdagent.readthedocs.io/&quot;&gt;📖 readthedocs&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h1&gt;📃 Paper/Work list&lt;/h1&gt; 
&lt;h2&gt;📊 Benchmark&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/2404.11276&quot;&gt;Towards Data-Centric Automatic R&amp;amp;D&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-BibTeX&quot;&gt;@misc{chen2024datacentric,
    title={Towards Data-Centric Automatic R&amp;amp;D},
    author={Haotian Chen and Xinjie Shen and Zeqi Ye and Wenjun Feng and Haoxue Wang and Xiao Yang and Xu Yang and Weiqing Liu and Jiang Bian},
    year={2024},
    eprint={2404.11276},
    archivePrefix={arXiv},
    primaryClass={cs.AI}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/494f55d3-de9e-4e73-ba3d-a787e8f9e841&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;🔍 Research&lt;/h2&gt; 
&lt;p&gt;In a data mining expert&#39;s daily research and development process, they propose a hypothesis (e.g., a model structure like RNN can capture patterns in time-series data), design experiments (e.g., finance data contains time-series and we can verify the hypothesis in this scenario), implement the experiment as code (e.g., Pytorch model structure), and then execute the code to get feedback (e.g., metrics, loss curve, etc.). The experts learn from the feedback and improve in the next iteration.&lt;/p&gt; 
&lt;p&gt;Based on the principles above, we have established a basic method framework that continuously proposes hypotheses, verifies them, and gets feedback from the real-world practice. This is the first scientific research automation framework that supports linking with real-world verification.&lt;/p&gt; 
&lt;p&gt;For more detail, please refer to our &lt;strong&gt;&lt;a href=&quot;https://rdagent.azurewebsites.net&quot;&gt;🖥️ Live Demo page&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;🛠️ Development&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/2407.18690&quot;&gt;Collaborative Evolving Strategy for Automatic Data-Centric Development&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-BibTeX&quot;&gt;@misc{yang2024collaborative,
    title={Collaborative Evolving Strategy for Automatic Data-Centric Development},
    author={Xu Yang and Haotian Chen and Wenjun Feng and Haoxue Wang and Zeqi Ye and Xinjie Shen and Xiao Yang and Shizhao Sun and Weiqing Liu and Jiang Bian},
    year={2024},
    eprint={2407.18690},
    archivePrefix={arXiv},
    primaryClass={cs.AI}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/75d9769b-0edd-4caf-9d45-57d1e577054b&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;🤝 Contributing&lt;/h1&gt; 
&lt;h2&gt;📝 Guidelines&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Contributing to this project is straightforward and rewarding. Whether it&#39;s solving an issue, addressing a bug, enhancing documentation, or even correcting a typo, every contribution is valuable and helps improve RDAgent.&lt;/p&gt; 
&lt;p&gt;To get started, you can explore the issues list, or search for &lt;code&gt;TODO:&lt;/code&gt; comments in the codebase by running the command &lt;code&gt;grep -r &quot;TODO:&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;img src=&quot;https://img.shields.io/github/contributors-anon/microsoft/RD-Agent&quot;&gt; 
&lt;a href=&quot;https://github.com/microsoft/RD-Agent/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=microsoft/RD-Agent&amp;amp;max=100&amp;amp;columns=15&quot;&gt; &lt;/a&gt; 
&lt;p&gt;Before we released RD-Agent as an open-source project on GitHub, it was an internal project within our group. Unfortunately, the internal commit history was not preserved when we removed some confidential code. As a result, some contributions from our group members, including Haotian Chen, Wenjun Feng, Haoxue Wang, Zeqi Ye, Xinjie Shen, and Jinhui Li, were not included in the public commits.&lt;/p&gt; 
&lt;h1&gt;⚖️ Legal disclaimer&lt;/h1&gt; 
&lt;p style=&quot;line-height: 1; font-style: italic;&quot;&gt;The RD-agent is provided “as is”, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. The RD-agent is aimed to facilitate research and development process in the financial industry and not ready-to-use for any financial investment or advice. Users shall independently assess and test the risks of the RD-agent in a specific use scenario, ensure the responsible use of AI technology, including but not limited to developing and integrating risk mitigation measures, and comply with all applicable laws and regulations in all applicable jurisdictions. The RD-agent does not provide financial opinions or reflect the opinions of Microsoft, nor is it designed to replace the role of qualified financial professionals in formulating, assessing, and approving finance products. The inputs and outputs of the RD-agent belong to the users and users shall assume all liability under any theory of liability, whether in contract, torts, regulatory, negligence, products liability, or otherwise, associated with use of the RD-agent and any inputs and outputs thereof.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>xpipe-io/xpipe</title>
      <link>https://github.com/xpipe-io/xpipe</link>
      <description>&lt;p&gt;Access your entire server infrastructure from your local desktop&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://xpipe.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; &lt;img src=&quot;https://github.com/xpipe-io/.github/raw/main/img/banner.png&quot; alt=&quot;XPipe Banner&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;XPipe is a new type of shell connection hub and remote file manager that allows you to access your entire server infrastructure from your local machine. It works on top of your installed command-line programs and does not require any setup on your remote systems. So if you normally use CLI tools like &lt;code&gt;ssh&lt;/code&gt;, &lt;code&gt;docker&lt;/code&gt;, &lt;code&gt;kubectl&lt;/code&gt;, etc. to connect to your servers, you can just use XPipe on top of that.&lt;/p&gt; 
&lt;p&gt;XPipe fully integrates with your tools such as your favourite text/code editors, terminals, shells, command-line tools and more. The platform is designed to be extensible, allowing anyone to add easily support for more tools or to implement custom functionality through a modular extension system.&lt;/p&gt; 
&lt;p&gt;It currently supports:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.xpipe.io/guide/ssh&quot;&gt;SSH&lt;/a&gt; connections, config files, and tunnels&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.xpipe.io/guide/docker&quot;&gt;Docker&lt;/a&gt;, &lt;a href=&quot;https://docs.xpipe.io/guide/podman&quot;&gt;Podman&lt;/a&gt;, &lt;a href=&quot;https://docs.xpipe.io/guide/lxc&quot;&gt;LXD&lt;/a&gt;, and &lt;a href=&quot;https://docs.xpipe.io/guide/lxc&quot;&gt;incus&lt;/a&gt; containers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.xpipe.io/guide/proxmox&quot;&gt;Proxmox PVE&lt;/a&gt; virtual machines and containers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.xpipe.io/guide/hyperv&quot;&gt;Hyper-V&lt;/a&gt;, &lt;a href=&quot;https://docs.xpipe.io/guide/kvm&quot;&gt;KVM&lt;/a&gt;, &lt;a href=&quot;https://docs.xpipe.io/guide/vmware&quot;&gt;VMware Player/Workstation/Fusion&lt;/a&gt; virtual machines&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.xpipe.io/guide/kubernetes&quot;&gt;Kubernetes&lt;/a&gt; clusters, pods, and containers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.xpipe.io/guide/tailscale&quot;&gt;Tailscale&lt;/a&gt; and &lt;a href=&quot;https://docs.xpipe.io/guide/teleport&quot;&gt;Teleport&lt;/a&gt; connections&lt;/li&gt; 
 &lt;li&gt;Windows Subsystem for Linux, Cygwin, and MSYS2 environments&lt;/li&gt; 
 &lt;li&gt;Powershell Remote Sessions&lt;/li&gt; 
 &lt;li&gt;RDP and VNC connections&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Connection hub&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Easily connect to and access all kinds of remote connections in one place&lt;/li&gt; 
 &lt;li&gt;Organize all your connections in hierarchical categories so you can keep an overview hundreds of connections&lt;/li&gt; 
 &lt;li&gt;Create specific login environments on any system to instantly jump into a properly set up environment for every use case&lt;/li&gt; 
 &lt;li&gt;Quickly perform various commonly used actions like starting/stopping containers, establishing tunnels, and more&lt;/li&gt; 
 &lt;li&gt;Create desktop shortcuts that automatically open remote connections in your terminal without having to open any GUI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/xpipe-io/.github/raw/main/img/hub_shadow.png&quot; alt=&quot;Connections&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Powerful file management&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Interact with the file system of any remote system using a workflow optimized for professionals&lt;/li&gt; 
 &lt;li&gt;Quickly open a terminal session into any directory in your favourite terminal emulator&lt;/li&gt; 
 &lt;li&gt;Utilize your entire arsenal of locally installed programs to open and edit remote files&lt;/li&gt; 
 &lt;li&gt;Dynamically elevate sessions with sudo when required without having to restart the session&lt;/li&gt; 
 &lt;li&gt;Seamlessly transfer files from and to your system desktop environment&lt;/li&gt; 
 &lt;li&gt;Work and perform transfers on multiple systems at the same time with the built-in tabbed multitasking&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/xpipe-io/.github/raw/main/img/browser_shadow.png&quot; alt=&quot;Browser&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Terminal launcher&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Boots you into a shell session in your favourite terminal with one click. Automatically fills password prompts and more&lt;/li&gt; 
 &lt;li&gt;Comes with support for all commonly used terminal emulators across all operating systems&lt;/li&gt; 
 &lt;li&gt;Supports opening custom terminal emulators as well via a custom command-line spec&lt;/li&gt; 
 &lt;li&gt;Works with all command shells such as bash, zsh, cmd, PowerShell, and more, locally and remote&lt;/li&gt; 
 &lt;li&gt;Connects to a system while the terminal is still starting up, allowing for faster connections than otherwise possible&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/xpipe-io/.github/raw/main/img/terminal_shadow.png&quot; alt=&quot;Terminal&quot;&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/xpipe-io/.github/raw/main/img/terminal.gif&quot; alt=&quot;Terminal launcher&quot;&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Versatile scripting system&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create reusable simple shell scripts, templates, and groups to run on connected remote systems&lt;/li&gt; 
 &lt;li&gt;Automatically make your scripts available in the PATH on any remote system without any setup&lt;/li&gt; 
 &lt;li&gt;Setup shell init environments for connections to fully customize your work environment for every purpose&lt;/li&gt; 
 &lt;li&gt;Open custom shells and custom remote connections by providing your own commands&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/xpipe-io/.github/raw/main/img/scripts_shadow.png&quot; alt=&quot;scripts&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Secure vault&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;All data is stored exclusively on your local system in a cryptographically secure vault. You can also choose to increase security by using a custom master passphrase for further encryption&lt;/li&gt; 
 &lt;li&gt;XPipe is able to retrieve secrets automatically from your password manager via it&#39;s command-line interface.&lt;/li&gt; 
 &lt;li&gt;There are no servers involved, all your information stays on your systems. The XPipe application does not send any personal or sensitive information to outside services.&lt;/li&gt; 
 &lt;li&gt;Vault changes can be pushed and pulled from your own remote git repository by multiple team members across many systems&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Downloads&lt;/h1&gt; 
&lt;p&gt;Note that this is a desktop application that should be run on your local desktop workstation, not on any server or containers. It will be able to connect to your server infrastructure from there.&lt;/p&gt; 
&lt;h2&gt;Windows&lt;/h2&gt; 
&lt;p&gt;Installers are the easiest way to get started and come with an optional automatic update functionality:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-installer-windows-x86_64.msi&quot;&gt;Windows .msi Installer (x86-64)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you don&#39;t like installers, you can also use a portable version that is packaged as an archive:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-portable-windows-x86_64.zip&quot;&gt;Windows .zip Portable (x86-64)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Alternatively, you can also use the following package managers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://community.chocolatey.org/packages/xpipe&quot;&gt;choco&lt;/a&gt; to install it with &lt;code&gt;choco install xpipe&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/winget-cli&quot;&gt;winget&lt;/a&gt; to install it with &lt;code&gt;winget install xpipe-io.xpipe --source winget&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;macOS&lt;/h2&gt; 
&lt;p&gt;Installers are the easiest way to get started and come with an optional automatic update functionality:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-installer-macos-x86_64.pkg&quot;&gt;MacOS .pkg Installer (x86-64)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-installer-macos-arm64.pkg&quot;&gt;MacOS .pkg Installer (ARM 64)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you don&#39;t like installers, you can also use a portable version that is packaged as an archive:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-portable-macos-x86_64.dmg&quot;&gt;MacOS .dmg Portable (x86-64)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-portable-macos-arm64.dmg&quot;&gt;MacOS .dmg Portable (ARM 64)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Alternatively, you can also use &lt;a href=&quot;https://github.com/xpipe-io/homebrew-tap&quot;&gt;Homebrew&lt;/a&gt; to install XPipe with &lt;code&gt;brew install --cask xpipe-io/tap/xpipe&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Linux&lt;/h2&gt; 
&lt;p&gt;You can install XPipe the fastest by pasting the installation command into your terminal. This will perform the setup automatically. The script supports installation via &lt;code&gt;apt&lt;/code&gt;, &lt;code&gt;dnf&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt;, &lt;code&gt;zypper&lt;/code&gt;, &lt;code&gt;rpm&lt;/code&gt;, and &lt;code&gt;pacman&lt;/code&gt; on Linux:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://github.com/xpipe-io/xpipe/raw/master/get-xpipe.sh)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, there are also other installation methods available.&lt;/p&gt; 
&lt;h3&gt;Debian-based distros&lt;/h3&gt; 
&lt;p&gt;The following debian installers are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-installer-linux-x86_64.deb&quot;&gt;Linux .deb Installer (x86-64)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-installer-linux-arm64.deb&quot;&gt;Linux .deb Installer (ARM 64)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that you should use apt to install the package with &lt;code&gt;sudo apt install &amp;lt;file&amp;gt;&lt;/code&gt; as other package managers, for example dpkg, are not able to resolve and install any dependency packages.&lt;/p&gt; 
&lt;h3&gt;RHEL-based distros&lt;/h3&gt; 
&lt;p&gt;The rpm releases are signed with the GPG key &lt;a href=&quot;https://xpipe.io/signatures/crschnick.asc&quot;&gt;https://xpipe.io/signatures/crschnick.asc&lt;/a&gt;. You can import it via &lt;code&gt;rpm --import https://xpipe.io/signatures/crschnick.asc&lt;/code&gt; to allow your rpm-based package manager to verify the release signature.&lt;/p&gt; 
&lt;p&gt;The following rpm installers are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-installer-linux-x86_64.rpm&quot;&gt;Linux .rpm Installer (x86-64)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-installer-linux-arm64.rpm&quot;&gt;Linux .rpm Installer (ARM 64)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The same applies here, you should use a package manager that supports resolving and installing required dependencies if needed.&lt;/p&gt; 
&lt;h3&gt;Arch&lt;/h3&gt; 
&lt;p&gt;There is an official &lt;a href=&quot;https://aur.archlinux.org/packages/xpipe&quot;&gt;AUR package&lt;/a&gt; available that you can either install manually or via an AUR helper such as with &lt;code&gt;yay -S xpipe&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;NixOS&lt;/h3&gt; 
&lt;p&gt;There&#39;s an official &lt;a href=&quot;https://search.nixos.org/packages?channel=unstable&amp;amp;show=xpipe&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=xpipe&quot;&gt;xpipe nixpkg&lt;/a&gt; available that you can install with &lt;code&gt;nix-env -iA nixos.xpipe&lt;/code&gt;. This one is however not always up to date.&lt;/p&gt; 
&lt;p&gt;There is also a custom repository that contains the latest up-to-date releases: &lt;a href=&quot;https://github.com/xpipe-io/nixpkg&quot;&gt;https://github.com/xpipe-io/nixpkg&lt;/a&gt;. You can install XPipe by following the instructions in the linked repository.&lt;/p&gt; 
&lt;h3&gt;Portable&lt;/h3&gt; 
&lt;p&gt;In case you prefer to use an archive version that you can extract anywhere, you can use these:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-portable-linux-x86_64.tar.gz&quot;&gt;Linux .tar.gz Portable (x86-64)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-portable-linux-arm64.tar.gz&quot;&gt;Linux .tar.gz Portable (ARM 64)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Alternatively, there are also AppImages available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-portable-linux-x86_64.AppImage&quot;&gt;Linux .AppImage Portable (x86-64)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xpipe-io/xpipe/releases/latest/download/xpipe-portable-linux-arm64.AppImage&quot;&gt;Linux .AppImage Portable (ARM 64)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that the portable version assumes that you have some basic packages for graphical systems already installed as it is not a perfect standalone version. It should however run on most systems.&lt;/p&gt; 
&lt;h2&gt;Docker container&lt;/h2&gt; 
&lt;p&gt;XPipe is a desktop application first and foremost. It requires a full desktop environment to function with various installed applications such as terminals, editors, shells, CLI tools, and more. So there is no true web-based interface for XPipe.&lt;/p&gt; 
&lt;p&gt;Since it might make sense however to access your XPipe environment from the web, there is also a so-called webtop docker container image for XPipe. &lt;a href=&quot;https://github.com/xpipe-io/xpipe-webtop&quot;&gt;XPipe Webtop&lt;/a&gt; is a web-based desktop environment that can be run in a container and accessed from a browser via KasmVNC. The desktop environment comes with XPipe and various terminals and editors preinstalled and configured.&lt;/p&gt; 
&lt;h1&gt;Further information&lt;/h1&gt; 
&lt;h2&gt;Open source model&lt;/h2&gt; 
&lt;p&gt;XPipe follows an open core model, which essentially means that the main application is open source while certain other components are not. This mainly concerns the features only available in the homelab/professional plan and the shell handling library implementation. Furthermore, some CI pipelines and tests that run on private servers are also not included in the open repository.&lt;/p&gt; 
&lt;p&gt;The distributed XPipe application consists out of two parts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The open-source core that you can find this repository. It is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/xpipe-io/xpipe/master/LICENSE.md&quot;&gt;Apache License 2.0&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The closed-source extensions, mostly for homelab/professional plan features, which are not included in this repository&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Additional features are available in the homelab/professional plan . For more details see &lt;a href=&quot;https://xpipe.io/pricing&quot;&gt;https://xpipe.io/pricing&lt;/a&gt;. If your enterprise puts great emphasis on having access to the full source code, there are also full source-available enterprise options available.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the documentation at &lt;a href=&quot;https://docs.xpipe.io&quot;&gt;https://docs.xpipe.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Discord&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/8y89vS8cRb&quot;&gt;&lt;img src=&quot;https://discordapp.com/api/guilds/979695018782646285/widget.png?style=banner2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>freeCodeCamp/freeCodeCamp</title>
      <link>https://github.com/freeCodeCamp/freeCodeCamp</link>
      <description>&lt;p&gt;freeCodeCamp.org&#39;s open-source codebase and curriculum. Learn to code for free.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.freecodecamp.org/&quot;&gt;&lt;img src=&quot;https://cdn.freecodecamp.org/platform/universal/fcc_banner_new.png&quot; alt=&quot;freeCodeCamp Social Banner&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;Pull Requests Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.firsttimersonly.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/first--timers--only-friendly-blue.svg?sanitize=true&quot; alt=&quot;first-timers-only Friendly&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codetriage.com/freecodecamp/freecodecamp&quot;&gt;&lt;img src=&quot;https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg?sanitize=true&quot; alt=&quot;Open Source Helpers&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitpod.io/from-referrer/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/setup-automated-blue?logo=gitpod&quot; alt=&quot;Setup Automated&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/PRyKn3Vbay&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/692816967895220344?logo=discord&amp;amp;label=Discord&amp;amp;color=5865F2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;freeCodeCamp.org&#39;s open-source codebase and curriculum&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.freecodecamp.org&quot;&gt;freeCodeCamp.org&lt;/a&gt; is a friendly community where you can learn to code for free. It is run by a &lt;a href=&quot;https://www.freecodecamp.org/donate&quot;&gt;donor-supported 501(c)(3) charity&lt;/a&gt; to help millions of busy adults transition into tech. Our community has already helped more than 40,000 people get their first developer job.&lt;/p&gt; 
&lt;p&gt;Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#certifications&quot;&gt;Certifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#the-learning-platform&quot;&gt;The Learning Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-bugs-and-issues&quot;&gt;Reporting Bugs and Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-security-issues-and-responsible-disclosure&quot;&gt;Reporting Security Issues and Responsible Disclosure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#platform-build-and-deployment-status&quot;&gt;Platform, Build and Deployment Status&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Certifications&lt;/h3&gt; 
&lt;p&gt;freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.&lt;/p&gt; 
&lt;p&gt;Each of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you&#39;ve fulfilled all the user stories before you submit it.&lt;/p&gt; 
&lt;p&gt;You can pull in these test suites through &lt;a href=&quot;https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js&quot;&gt;freeCodeCamp&#39;s CDN&lt;/a&gt;. This means you can build these projects on websites like CodePen and Replit - or even on your local computer&#39;s development environment.&lt;/p&gt; 
&lt;p&gt;Once you&#39;ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or resume. And when your prospective employers or freelance clients click that link, they&#39;ll see a verified certification specific to you.&lt;/p&gt; 
&lt;p&gt;The one exception to this is if we discover violations of our &lt;a href=&quot;https://www.freecodecamp.org/news/academic-honesty-policy/&quot;&gt;Academic Honesty Policy&lt;/a&gt;. When we catch people unambiguously plagiarizing (submitting other people&#39;s code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.&lt;/p&gt; 
&lt;p&gt;Here are our twelve core certifications:&lt;/p&gt; 
&lt;h4&gt;1. &lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/&quot;&gt;Responsive Web Design Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-by-building-a-cat-photo-app&quot;&gt;Learn HTML by Building a Cat Photo App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-basic-css-by-building-a-cafe-menu&quot;&gt;Learn Basic CSS by Building a Cafe Menu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-colors-by-building-a-set-of-colored-markers&quot;&gt;Learn CSS Colors by Building a Set of Colored Markers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-forms-by-building-a-registration-form&quot;&gt;Learn HTML Forms by Building a Registration Form&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-the-css-box-model-by-building-a-rothko-painting&quot;&gt;Learn the CSS Box Model by Building a Rothko Painting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-flexbox-by-building-a-photo-gallery&quot;&gt;Learn CSS Flexbox by Building a Photo Gallery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-typography-by-building-a-nutrition-label&quot;&gt;Learn Typography by Building a Nutrition Label&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-accessibility-by-building-a-quiz&quot;&gt;Learn Accessibility by Building a Quiz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet&quot;&gt;Learn More About CSS Pseudo Selectors by Building A Balance Sheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-intermediate-css-by-building-a-picasso-painting&quot;&gt;Learn Intermediate CSS by Building a Picasso Painting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-responsive-web-design-by-building-a-piano&quot;&gt;Learn Responsive Web Design by Building a Piano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-variables-by-building-a-city-skyline&quot;&gt;Learn CSS Variables by Building a City Skyline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-grid-by-building-a-magazine&quot;&gt;Learn CSS Grid by Building a Magazine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-transforms-by-building-a-penguin&quot;&gt;Learn CSS Transforms by Building a Penguin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-animation-by-building-a-ferris-wheel&quot;&gt;Learn CSS Animations by Building a Ferris Wheel&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form&quot;&gt;Survey Form&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page&quot;&gt;Tribute Page&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-technical-documentation-page-project/build-a-technical-documentation-page&quot;&gt;Technical Documentation Page&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page&quot;&gt;Product Landing Page&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-personal-portfolio-webpage-project/build-a-personal-portfolio-webpage&quot;&gt;Personal Portfolio Webpage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2. &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/&quot;&gt;JavaScript Algorithms and Data Structures Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-introductory-javascript-by-building-a-pyramid-generator&quot;&gt;Learn Introductory JavaScript by Building a Pyramid Generator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-javascript-by-building-a-role-playing-game&quot;&gt;Learn Basic JavaScript by Building a Role Playing Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-form-validation-by-building-a-calorie-counter&quot;&gt;Learn Form Validation by Building a Calorie Counter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-string-and-array-methods-by-building-a-music-player&quot;&gt;Learn Basic String and Array Methods by Building a Music Player&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-the-date-object-by-building-a-date-formatter&quot;&gt;Learn the Date Object by Building a Date Formatter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-modern-javascript-methods-by-building-football-team-cards&quot;&gt;Learn Modern JavaScript Methods By Building Football Team Cards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-localstorage-by-building-a-todo-app&quot;&gt;Learn localStorage by Building a Todo App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-recursion-by-building-a-decimal-to-binary-converter&quot;&gt;Learn Recursion by Building a Decimal to Binary Converter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-algorithmic-thinking-by-building-a-number-sorter&quot;&gt;Learn Basic Algorithmic Thinking by Building a Number Sorter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-advanced-array-methods-by-building-a-statistics-calculator&quot;&gt;Learn Advanced Array Methods by Building a Statistics Calculator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-functional-programming-by-building-a-spreadsheet&quot;&gt;Learn Functional Programming by Building a Spreadsheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-regular-expressions-by-building-a-spam-filter&quot;&gt;Learn Regular Expressions by Building a Spam Filter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-oop-by-building-a-shopping-cart&quot;&gt;Learn Basic OOP by Building a Shopping Cart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-intermediate-oop-by-building-a-platformer-game&quot;&gt;Learn Intermediate OOP by Building a Platformer Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#review-algorithmic-thinking-by-building-a-dice-game&quot;&gt;Learn Intermediate Algorithmic Thinking by Building a Dice Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-fetch-and-promises-by-building-an-fcc-authors-page&quot;&gt;Learn Fetch and Promises By Building an fCC Authors Page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard&quot;&gt;Learn Asynchronous Programming by Building an fCC Forum Leaderboard&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-palindrome-checker-project/build-a-palindrome-checker&quot;&gt;Palindrome Checker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-roman-numeral-converter-project/build-a-roman-numeral-converter&quot;&gt;Roman Numeral Converter&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-telephone-number-validator-project/build-a-telephone-number-validator&quot;&gt;Telephone Number Validator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-cash-register-project/build-a-cash-register&quot;&gt;Cash Register&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-pokemon-search-app-project/build-a-pokemon-search-app&quot;&gt;Pokémon Search App&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;3. &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/&quot;&gt;Front End Libraries Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#bootstrap&quot;&gt;Bootstrap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#sass&quot;&gt;Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#react&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#redux&quot;&gt;Redux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#react-and-redux&quot;&gt;React and Redux&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine&quot;&gt;Random Quote Machine&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-markdown-previewer&quot;&gt;Markdown Previewer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-drum-machine&quot;&gt;Drum Machine&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-javascript-calculator&quot;&gt;JavaScript Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-25--5-clock&quot;&gt;25 + 5 Clock&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;4. &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/&quot;&gt;Data Visualization Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/#data-visualization-with-d3&quot;&gt;Data Visualization with D3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/#json-apis-and-ajax&quot;&gt;JSON APIs and Ajax&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-bar-chart&quot;&gt;Bar Chart&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-scatterplot-graph&quot;&gt;Scatterplot Graph&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-heat-map&quot;&gt;Heat Map&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map&quot;&gt;Choropleth Map&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-treemap-diagram&quot;&gt;Treemap Diagram&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;5. &lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/&quot;&gt;Relational Database&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#learn-bash-by-building-a-boilerplate&quot;&gt;Learn Bash by Building a Boilerplate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#learn-relational-databases-by-building-a-mario-database&quot;&gt;Learn Relational Databases by Building a Mario Database&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#learn-bash-scripting-by-building-five-programs&quot;&gt;Learn Bash Scripting by Building Five Programs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-1&quot;&gt;Learn SQL by Building a Student Database: Part 1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-2&quot;&gt;Learn SQL by Building a Student Database: Part 2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#learn-advanced-bash-by-building-a-kitty-ipsum-translator&quot;&gt;Learn Advanced Bash by Building a Kitty Ipsum Translator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#learn-bash-and-sql-by-building-a-bike-rental-shop&quot;&gt;Learn Bash and SQL by Building a Bike Rental Shop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#learn-nano-by-building-a-castle&quot;&gt;Learn Nano by Building a Castle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#learn-git-by-building-an-sql-reference-object&quot;&gt;Learn Git by Building an SQL Reference Object&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#build-a-salon-appointment-scheduler-project&quot;&gt;Salon Appointment Scheduler&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#build-a-celestial-bodies-database-project&quot;&gt;Celestial Bodies Database&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#build-a-periodic-table-database-project&quot;&gt;Periodic Table Database&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#build-a-number-guessing-game-project&quot;&gt;Number Guessing Game&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/relational-database/#build-a-world-cup-database-project&quot;&gt;World Cup Database&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;6. &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/&quot;&gt;Back End Development and APIs Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/#managing-packages-with-npm&quot;&gt;Managing Packages with Npm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/#basic-node-and-express&quot;&gt;Basic Node and Express&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/#mongodb-and-mongoose&quot;&gt;MongoDB and Mongoose&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice&quot;&gt;Timestamp Microservice&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/request-header-parser-microservice&quot;&gt;Request Header Parser&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/url-shortener-microservice&quot;&gt;URL Shortener&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/exercise-tracker&quot;&gt;Exercise Tracker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice&quot;&gt;File Metadata Microservice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;7. &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/&quot;&gt;Quality Assurance Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/#quality-assurance-and-testing-with-chai&quot;&gt;Quality Assurance and Testing with Chai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/#advanced-node-and-express&quot;&gt;Advanced Node and Express&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/metric-imperial-converter&quot;&gt;Metric-Imperial Converter&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/issue-tracker&quot;&gt;Issue Tracker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/personal-library&quot;&gt;Personal Library&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/sudoku-solver&quot;&gt;Sudoku Solver&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/american-british-translator&quot;&gt;American British Translator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;8. &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/&quot;&gt;Scientific Computing with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-string-manipulation-by-building-a-cipher&quot;&gt;Learn String Manipulation by Building a Cipher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm&quot;&gt;Learn How to Work with Numbers and Strings by Implementing the Luhn Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-lambda-functions-by-building-an-expense-tracker&quot;&gt;Learn Lambda Functions by Building an Expense Tracker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-list-comprehension-by-building-a-case-converter-program&quot;&gt;Learn List Comprehension by Building a Case Converter Program&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-the-bisection-method-by-finding-the-square-root-of-a-number&quot;&gt;Learn the Bisection Method by Finding the Square Root of a Number&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-regular-expressions-by-building-a-password-generator&quot;&gt;Learn Regular Expressions by Building a Password Generator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-algorithm-design-by-building-a-shortest-path-algorithm&quot;&gt;Learn Algorithm Design by Building a Shortest Path Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-recursion-by-solving-the-tower-of-hanoi-puzzle&quot;&gt;Learn Recursion by Solving the Tower of Hanoi Puzzle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-data-structures-by-building-the-merge-sort-algorithm&quot;&gt;Learn Data Structures by Building the Merge Sort Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-classes-and-objects-by-building-a-sudoku-solver&quot;&gt;Learn Classes and Objects by Building a Sudoku Solver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-tree-traversal-by-building-a-binary-search-tree&quot;&gt;Learn Tree Traversal by Building a Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-special-methods-by-building-a-vector-space&quot;&gt;Learn Special Methods by Building a Vector Space&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/build-an-arithmetic-formatter-project/build-an-arithmetic-formatter-project&quot;&gt;Arithmetic Formatter&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-time-calculator-project/build-a-time-calculator-project&quot;&gt;Time Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-budget-app-project/build-a-budget-app-project&quot;&gt;Budget App&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-polygon-area-calculator-project/build-a-polygon-area-calculator-project&quot;&gt;Polygon Area Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-probability-calculator-project/build-a-probability-calculator-project&quot;&gt;Probability Calculator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;9. &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/&quot;&gt;Data Analysis with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/#data-analysis-with-python-course&quot;&gt;Data Analysis with Python Course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/#numpy&quot;&gt;NumPy&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/mean-variance-standard-deviation-calculator&quot;&gt;Mean-Variance-Standard Deviation Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/demographic-data-analyzer&quot;&gt;Demographic Data Analyzer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/medical-data-visualizer&quot;&gt;Medical Data Visualizer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/page-view-time-series-visualizer&quot;&gt;Page View Time Series Visualizer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/sea-level-predictor&quot;&gt;Sea Level Predictor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;10. &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/&quot;&gt;Information Security Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/#information-security-with-helmetjs&quot;&gt;Information Security with HelmetJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/#python-for-penetration-testing&quot;&gt;Python for Penetration Testing&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/stock-price-checker&quot;&gt;Stock Price Checker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/anonymous-message-board&quot;&gt;Anonymous Message Board&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/port-scanner&quot;&gt;Port Scanner&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/sha-1-password-cracker&quot;&gt;SHA-1 Password Cracker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/secure-real-time-multiplayer-game&quot;&gt;Secure Real Time Multiplayer Game &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;11. &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/&quot;&gt;Machine Learning with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/#tensorflow&quot;&gt;TensorFlow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/#how-neural-networks-work&quot;&gt;How Neural Networks Work&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/rock-paper-scissors&quot;&gt;Rock Paper Scissors&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/cat-and-dog-image-classifier&quot;&gt;Cat and Dog Image Classifier&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/book-recommendation-engine-using-knn&quot;&gt;Book Recommendation Engine using KNN&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/linear-regression-health-costs-calculator&quot;&gt;Linear Regression Health Costs Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/neural-network-sms-text-classifier&quot;&gt;Neural Network SMS Text Classifier&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;12. &lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/&quot;&gt;College Algebra with Python&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-ratios-and-proportions&quot;&gt;Learn Ratios and Proportions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-how-to-solve-for-x&quot;&gt;Learn How to Solve for X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-fractions-and-decimals&quot;&gt;Learn Fractions and Decimals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-functions-and-graphing&quot;&gt;Learn Functions and Graphing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-linear-functions&quot;&gt;Learn Linear Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-common-factors-and-square-roots&quot;&gt;Learn Common Factors and Square Roots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-how-to-graph-systems-of-equations&quot;&gt;Learn How to Graph Systems of Equations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-how-to-solve-systems-of-equations&quot;&gt;Learn How to Solve Systems of Equations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-applications-of-linear-systems&quot;&gt;Learn Applications of Linear Systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-quadratic-equations&quot;&gt;Learn Quadratic Equations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-parent-graphs-and-polynomials&quot;&gt;Learn Parent Graphs and Polynomials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-business-applications-of-college-algebra&quot;&gt;Learn Business Applications of College Algebra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-simple-and-compound-interest&quot;&gt;Learn Simple and Compound Interest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-exponents-and-logarithms&quot;&gt;Learn Exponents and Logarithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#college-algebra-with-python-conclusion&quot;&gt;College Algebra with Python: Conclusion&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-multi-function-calculator-project&quot;&gt;Multi-Function Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-graphing-calculator-project&quot;&gt;Graphing Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#build-three-math-games-project&quot;&gt;Three Math Games&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-financial-calculator-project&quot;&gt;Financial Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-data-graph-explorer-project&quot;&gt;Data Graph Explorer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Legacy Full Stack Development Certification&lt;/h4&gt; 
&lt;p&gt;Once you have earned the Responsive Web Design, Algorithms and Data Structures, Front End Development Libraries, Data Visualization, Back End Development and APIs, and Legacy Information Security and Quality Assurance certifications, you&#39;ll be able to claim your freeCodeCamp.org Full Stack Development Certification. This distinction signifies that you&#39;ve completed around 1,800 hours of coding with a wide range of web development tools.&lt;/p&gt; 
&lt;h4&gt;Legacy Certifications&lt;/h4&gt; 
&lt;p&gt;We also have 4 legacy certifications dating back to our 2015 curriculum, which are still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Legacy Front End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Data Visualization Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Back End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Information Security and Quality Assurance Certification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Free professional certifications&lt;/h3&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/&quot;&gt;(New) Foundational C# with Microsoft&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#write-your-first-code-using-c-sharp&quot;&gt;Write Your First Code Using C#&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#create-and-run-simple-c-sharp-console-applications&quot;&gt;Create and Run Simple C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#add-logic-to-c-sharp-console-applications&quot;&gt;Add Logic to C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#work-with-variable-data-in-c-sharp-console-applications&quot;&gt;Work with Variable Data in C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#create-methods-in-c-sharp-console-applications&quot;&gt;Create Methods in C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#debug-c-sharp-console-applications&quot;&gt;Debug C# Console Applications&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Exam&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam&quot;&gt;Foundational C# with Microsoft Certification Exam&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;The Learning Platform&lt;/h3&gt; 
&lt;p&gt;This code is running live at &lt;a href=&quot;https://www.freecodecamp.org&quot;&gt;freeCodeCamp.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our community also has:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://forum.freecodecamp.org&quot;&gt;forum&lt;/a&gt; where you can usually get programming help or project feedback within hours.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://youtube.com/freecodecamp&quot;&gt;YouTube channel&lt;/a&gt; with free courses on Python, SQL, Android, and a wide variety of other technologies.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://www.freecodecamp.org/news&quot;&gt;technical publication&lt;/a&gt; with thousands of programming tutorials and articles about mathematics and computer science.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://discord.gg/Z7Fm39aNtZ&quot;&gt;Discord server&lt;/a&gt; where you can hang out and talk with developers and people who are learning to code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.freecodecamp.org/signin&quot;&gt;Join the community here&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Reporting Bugs and Issues&lt;/h3&gt; 
&lt;p&gt;If you think you&#39;ve found a bug, first read the &lt;a href=&quot;https://forum.freecodecamp.org/t/how-to-report-a-bug/19543&quot;&gt;how to report a bug&lt;/a&gt; article and follow its instructions.&lt;/p&gt; 
&lt;p&gt;If you&#39;re confident it&#39;s a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Issues and Responsible Disclosure&lt;/h3&gt; 
&lt;p&gt;We appreciate responsible disclosure of vulnerabilities that might impact the integrity of our platforms and users.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://contribute.freecodecamp.org/#/security&quot;&gt;Read our security policy and follow these steps to report a vulnerability&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;The freeCodeCamp.org community is possible thanks to thousands of kind volunteers like you. We welcome all contributions to the community and are excited to welcome you aboard.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://contribute.freecodecamp.org&quot;&gt;Please follow these steps to contribute&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Recent Contributions:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://repobeats.axiom.co/api/embed/89be0a1a1c8f641c54f9234a7423e7755352c746.svg?sanitize=true&quot; alt=&quot;Alt&quot; title=&quot;Repobeats analytics image&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Copyright © 2025 freeCodeCamp.org&lt;/p&gt; 
&lt;p&gt;The content of this repository is bound by the following licenses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The computer software is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/LICENSE.md&quot;&gt;BSD-3-Clause&lt;/a&gt; license.&lt;/li&gt; 
 &lt;li&gt;The learning resources in the &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/curriculum&quot;&gt;&lt;code&gt;/curriculum&lt;/code&gt;&lt;/a&gt; directory including their subdirectories thereon are copyright © 2025 freeCodeCamp.org&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>nvim-lualine/lualine.nvim</title>
      <link>https://github.com/nvim-lualine/lualine.nvim</link>
      <description>&lt;p&gt;A blazing fast and easy to configure neovim statusline plugin written in pure lua.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lualine.nvim&lt;/h1&gt; 
&lt;!-- panvimdoc-ignore-start --&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/languages/code-size/nvim-lualine/lualine.nvim?style=flat-square&quot; alt=&quot;code size&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/nvim-lualine/lualine.nvim?style=flat-square&quot; alt=&quot;license&quot;&gt; &lt;a href=&quot;https://buymeacoffee.com/shadmansalj&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Buy%20Me%20a%20Coffee-F7941D?style=plastic&amp;amp;logo=buy-me-a-coffee&amp;amp;logoColor=white&quot; alt=&quot;Buy Me a Coffee&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- panvimdoc-ignore-end --&gt; 
&lt;p&gt;A blazing fast and easy to configure Neovim statusline written in Lua.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;lualine.nvim&lt;/code&gt; requires Neovim &amp;gt;= 0.7.&lt;/p&gt; 
&lt;p&gt;For previous versions of neovim please use compatability tags for example compat-nvim-0.5&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Feel free to create an issue/PR if you want to see anything else implemented. If you have some question or need help with configuration, start a &lt;a href=&quot;https://github.com/nvim-lualine/lualine.nvim/discussions&quot;&gt;discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please read &lt;a href=&quot;https://raw.githubusercontent.com/nvim-lualine/lualine.nvim/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; before opening a PR. You can also help with documentation in the &lt;a href=&quot;https://github.com/nvim-lualine/lualine.nvim/wiki&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- panvimdoc-ignore-start --&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;Here is a preview of what lualine can look like.&lt;/p&gt; 
&lt;p&gt; &lt;img width=&quot;700&quot; src=&quot;https://user-images.githubusercontent.com/41551030/108650373-bb025580-74bf-11eb-8682-2c09321dd18e.png&quot;&gt; &lt;img width=&quot;700&quot; src=&quot;https://user-images.githubusercontent.com/41551030/108650377-bd64af80-74bf-11eb-9c55-fbfc51b39fe8.png&quot;&gt; &lt;img width=&quot;700&quot; src=&quot;https://user-images.githubusercontent.com/41551030/108650378-be95dc80-74bf-11eb-9718-82b242ecdd54.png&quot;&gt; &lt;img width=&quot;700&quot; src=&quot;https://user-images.githubusercontent.com/41551030/108650381-bfc70980-74bf-11eb-9245-85c48f0f154a.png&quot;&gt; &lt;img width=&quot;700&quot; src=&quot;https://user-images.githubusercontent.com/41551030/103467925-32372b00-4d54-11eb-88d6-6d39c46854d8.png&quot;&gt; &lt;/p&gt; 
&lt;p&gt;Screenshots of all available themes are listed in &lt;a href=&quot;https://raw.githubusercontent.com/nvim-lualine/lualine.nvim/master/THEMES.md&quot;&gt;THEMES.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For those who want to break the norms, you can create custom looks for lualine.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvim-lualine/lualine.nvim/master/examples/evil_lualine.lua&quot;&gt;evil_lualine&lt;/a&gt; &lt;img width=&quot;700&quot; src=&quot;https://user-images.githubusercontent.com/13149513/113875129-4453ba00-97d8-11eb-8f21-94a9ef565db3.png&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvim-lualine/lualine.nvim/master/examples/slanted-gaps.lua&quot;&gt;slanted-gaps&lt;/a&gt; &lt;img width=&quot;700&quot; src=&quot;https://user-images.githubusercontent.com/13149513/143395518-f6d6f748-c1ca-491b-9dab-246d0a8cf23f.png&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvim-lualine/lualine.nvim/master/examples/bubbles.lua&quot;&gt;bubbles&lt;/a&gt; &lt;img width=&quot;700&quot; src=&quot;https://user-images.githubusercontent.com/20235646/131350468-fc556196-5f46-4bfe-a72e-960f6a58db2c.png&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- panvimdoc-ignore-end --&gt; 
&lt;h2&gt;Performance compared to other plugins&lt;/h2&gt; 
&lt;p&gt;Unlike other statusline plugins, lualine loads only the components you specify, and nothing else.&lt;/p&gt; 
&lt;p&gt;Startup time performance measured with an amazing plugin &lt;a href=&quot;https://github.com/dstein64/vim-startuptime&quot;&gt;dstein64/vim-startuptime&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Times are measured with a clean &lt;code&gt;init.vim&lt;/code&gt; with only &lt;code&gt;vim-startuptime&lt;/code&gt;, &lt;code&gt;vim-plug&lt;/code&gt; and given statusline plugin installed. In control just &lt;code&gt;vim-startuptime&lt;/code&gt; and&lt;code&gt;vim-plug&lt;/code&gt; is installed. And measured time is complete startuptime of vim not time spent on specific plugin. These numbers are the average of 20 runs.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;control&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;lualine&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;lightline&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;airline&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;17.2 ms&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;24.8 ms&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;25.5 ms&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;79.9 ms&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Last Updated On: 18-04-2022&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/junegunn/vim-plug&quot;&gt;vim-plug&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-vim&quot;&gt;Plug &#39;nvim-lualine/lualine.nvim&#39;
&quot; If you want to have icons in your statusline choose one of these
Plug &#39;nvim-tree/nvim-web-devicons&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/wbthomason/packer.nvim&quot;&gt;packer.nvim&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;use {
  &#39;nvim-lualine/lualine.nvim&#39;,
  requires = { &#39;nvim-tree/nvim-web-devicons&#39;, opt = true }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/folke/lazy.nvim&quot;&gt;lazy.nvim&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;{
    &#39;nvim-lualine/lualine.nvim&#39;,
    dependencies = { &#39;nvim-tree/nvim-web-devicons&#39; }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You&#39;ll also need to have a patched font if you want icons.&lt;/p&gt; 
&lt;h2&gt;Usage and customization&lt;/h2&gt; 
&lt;p&gt;Lualine has sections as shown below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;+-------------------------------------------------+
| A | B | C                             X | Y | Z |
+-------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Each sections holds its components e.g. Vim&#39;s current mode.&lt;/p&gt; 
&lt;h3&gt;Configuring lualine in init.vim&lt;/h3&gt; 
&lt;p&gt;All the examples below are in lua. You can use the same examples in &lt;code&gt;.vim&lt;/code&gt; files by wrapping them in lua heredoc like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-vim&quot;&gt;lua &amp;lt;&amp;lt; END
require(&#39;lualine&#39;).setup()
END
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, check out &lt;code&gt;:help lua-heredoc&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Default configuration&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;require(&#39;lualine&#39;).setup {
  options = {
    icons_enabled = true,
    theme = &#39;auto&#39;,
    component_separators = { left = &#39;&#39;, right = &#39;&#39;},
    section_separators = { left = &#39;&#39;, right = &#39;&#39;},
    disabled_filetypes = {
      statusline = {},
      winbar = {},
    },
    ignore_focus = {},
    always_divide_middle = true,
    always_show_tabline = true,
    globalstatus = false,
    refresh = {
      statusline = 100,
      tabline = 100,
      winbar = 100,
    }
  },
  sections = {
    lualine_a = {&#39;mode&#39;},
    lualine_b = {&#39;branch&#39;, &#39;diff&#39;, &#39;diagnostics&#39;},
    lualine_c = {&#39;filename&#39;},
    lualine_x = {&#39;encoding&#39;, &#39;fileformat&#39;, &#39;filetype&#39;},
    lualine_y = {&#39;progress&#39;},
    lualine_z = {&#39;location&#39;}
  },
  inactive_sections = {
    lualine_a = {},
    lualine_b = {},
    lualine_c = {&#39;filename&#39;},
    lualine_x = {&#39;location&#39;},
    lualine_y = {},
    lualine_z = {}
  },
  tabline = {},
  winbar = {},
  inactive_winbar = {},
  extensions = {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to get your current lualine config, you can do so with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;require(&#39;lualine&#39;).get_config()

&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;Starting lualine&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;require(&#39;lualine&#39;).setup()
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;Setting a theme&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;options = { theme = &#39;gruvbox&#39; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All available themes are listed in &lt;a href=&quot;https://raw.githubusercontent.com/nvim-lualine/lualine.nvim/master/THEMES.md&quot;&gt;THEMES.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please create a PR if you managed to port a popular theme before us, &lt;a href=&quot;https://raw.githubusercontent.com/nvim-lualine/lualine.nvim/master/CONTRIBUTING.md&quot;&gt;here is how to do it&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Customizing themes&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;local custom_gruvbox = require&#39;lualine.themes.gruvbox&#39;

-- Change the background of lualine_c section for normal mode
custom_gruvbox.normal.c.bg = &#39;#112233&#39;

require(&#39;lualine&#39;).setup {
  options = { theme  = custom_gruvbox },
  ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Theme structure is available &lt;a href=&quot;https://github.com/nvim-lualine/lualine.nvim/wiki/Writing-a-theme&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Separators&lt;/h3&gt; 
&lt;p&gt;lualine defines two kinds of separators:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;section_separators&lt;/code&gt; - separators between sections&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;component_separators&lt;/code&gt; - separators between the different components in sections&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: if viewing this README in a browser, chances are the characters below will not be visible.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;options = {
  section_separators = { left = &#39;&#39;, right = &#39;&#39; },
  component_separators = { left = &#39;&#39;, right = &#39;&#39; }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here, left refers to the left-most sections (a, b, c), and right refers to the right-most sections (x, y, z).&lt;/p&gt; 
&lt;h4&gt;Disabling separators&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;options = { section_separators = &#39;&#39;, component_separators = &#39;&#39; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;Changing components in lualine sections&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {lualine_a = {&#39;mode&#39;}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Available components&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;branch&lt;/code&gt; (git branch)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;buffers&lt;/code&gt; (shows currently available buffers)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;diagnostics&lt;/code&gt; (diagnostics count from your preferred source)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;diff&lt;/code&gt; (git diff status)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;encoding&lt;/code&gt; (file encoding)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fileformat&lt;/code&gt; (file format)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;filesize&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;filetype&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hostname&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;location&lt;/code&gt; (location in file in line:column format)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mode&lt;/code&gt; (vim mode)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;progress&lt;/code&gt; (%progress in file)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;searchcount&lt;/code&gt; (number of search matches when hlsearch is active)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;selectioncount&lt;/code&gt; (number of selected characters or lines)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tabs&lt;/code&gt; (shows currently available tabs)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;windows&lt;/code&gt; (shows currently available windows)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lsp_status&lt;/code&gt; (shows active LSPs in the current buffer and a progress spinner)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Custom components&lt;/h4&gt; 
&lt;h5&gt;Lua functions as lualine component&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;local function hello()
  return [[hello world]]
end
sections = { lualine_a = { hello } }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Vim functions as lualine component&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = { lualine_a = {&#39;FugitiveHead&#39;} }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Vim&#39;s statusline items as lualine component&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = { lualine_c = {&#39;%=&#39;, &#39;%t%m&#39;, &#39;%3p&#39;} }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Vim variables as lualine component&lt;/h5&gt; 
&lt;p&gt;Variables from &lt;code&gt;g:&lt;/code&gt;, &lt;code&gt;v:&lt;/code&gt;, &lt;code&gt;t:&lt;/code&gt;, &lt;code&gt;w:&lt;/code&gt;, &lt;code&gt;b:&lt;/code&gt;, &lt;code&gt;o:&lt;/code&gt;, &lt;code&gt;to:&lt;/code&gt;, &lt;code&gt;wo:&lt;/code&gt;, &lt;code&gt;bo:&lt;/code&gt; scopes can be used.&lt;/p&gt; 
&lt;p&gt;See &lt;code&gt;:h lua-vim-variables&lt;/code&gt; and &lt;code&gt;:h lua-vim-options&lt;/code&gt; if you are not sure what to use.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = { lualine_a = { &#39;g:coc_status&#39;, &#39;bo:filetype&#39; } }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Lua expressions as lualine component&lt;/h5&gt; 
&lt;p&gt;You can use any valid lua expression as a component including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;oneliners&lt;/li&gt; 
 &lt;li&gt;global variables&lt;/li&gt; 
 &lt;li&gt;require statements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = { lualine_c = { &quot;os.date(&#39;%a&#39;)&quot;, &#39;data&#39;, &quot;require&#39;lsp-status&#39;.status()&quot; } }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; is a global variable in this example.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Component options&lt;/h3&gt; 
&lt;p&gt;Component options can change the way a component behave. There are two kinds of options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;global options affecting all components&lt;/li&gt; 
 &lt;li&gt;local options affecting specific&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Global options can be used as local options (can be applied to specific components) but you cannot use local options as global. Global option used locally overwrites the global, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;    require(&#39;lualine&#39;).setup {
      options = { fmt = string.lower },
      sections = { lualine_a = {
        { &#39;mode&#39;, fmt = function(str) return str:sub(1,1) end } },
                  lualine_b = {&#39;branch&#39;} }
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;mode&lt;/code&gt; will be formatted with the passed function so only first char will be shown . On the other hand branch will be formatted with global formatter &lt;code&gt;string.lower&lt;/code&gt; so it will be showed in lower case.&lt;/p&gt; 
&lt;h4&gt;Available options&lt;/h4&gt; 
&lt;h4&gt;Global options&lt;/h4&gt; 
&lt;p&gt;These are &lt;code&gt;options&lt;/code&gt; that are used in options table. They set behavior of lualine.&lt;/p&gt; 
&lt;p&gt;Values set here are treated as default for other options that work in component level.&lt;/p&gt; 
&lt;p&gt;For example even though &lt;code&gt;icons_enabled&lt;/code&gt; is a general component option. You can set &lt;code&gt;icons_enabled&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; and icons will be disabled on all component. You can still overwrite defaults set in option table by specifying the option value in component.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;options = {
  theme = &#39;auto&#39;, -- lualine theme
  component_separators = { left = &#39;&#39;, right = &#39;&#39; },
  section_separators = { left = &#39;&#39;, right = &#39;&#39; },
  disabled_filetypes = {     -- Filetypes to disable lualine for.
      statusline = {},       -- only ignores the ft for statusline.
      winbar = {},           -- only ignores the ft for winbar.
  },

  ignore_focus = {},         -- If current filetype is in this list it&#39;ll
                             -- always be drawn as inactive statusline
                             -- and the last window will be drawn as active statusline.
                             -- for example if you don&#39;t want statusline of
                             -- your file tree / sidebar window to have active
                             -- statusline you can add their filetypes here.

  always_divide_middle = true, -- When set to true, left sections i.e. &#39;a&#39;,&#39;b&#39; and &#39;c&#39;
                               -- can&#39;t take over the entire statusline even
                               -- if neither of &#39;x&#39;, &#39;y&#39; or &#39;z&#39; are present.

  always_show_tabline = true -- When set to true, if you have configured lualine for displaying tabline
                          -- then tabline will always show. If set to false, then tabline will be displayed
                          -- only when there are more than 1 tab. (see :h showtabline)

  globalstatus = false,        -- enable global statusline (have a single statusline
                               -- at bottom of neovim instead of one for  every window).
                               -- This feature is only available in neovim 0.7 and higher.

  refresh = {                  -- sets how often lualine should refresh it&#39;s contents (in ms)
    statusline = 100,         -- The refresh option sets minimum time that lualine tries
    tabline = 100,            -- to maintain between refresh. It&#39;s not guarantied if situation
    winbar = 100              -- arises that lualine needs to refresh itself before this time
                               -- it&#39;ll do it.

                               -- Also you can force lualine&#39;s refresh by calling refresh function
                               -- like require(&#39;lualine&#39;).refresh()
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;General component options&lt;/h4&gt; 
&lt;p&gt;These are options that control behavior at component level and are available for all components.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;mode&#39;,
      icons_enabled = true, -- Enables the display of icons alongside the component.
      -- Defines the icon to be displayed in front of the component.
      -- Can be string|table
      -- As table it must contain the icon as first entry and can use
      -- color option to custom color the icon. Example:
      -- {&#39;branch&#39;, icon = &#39;&#39;} / {&#39;branch&#39;, icon = {&#39;&#39;, color={fg=&#39;green&#39;}}}

      -- icon position can also be set to the right side from table. Example:
      -- {&#39;branch&#39;, icon = {&#39;&#39;, align=&#39;right&#39;, color={fg=&#39;green&#39;}}}
      icon = nil,

      separator = nil,      -- Determines what separator to use for the component.
                            -- Note:
                            --  When a string is provided it&#39;s treated as component_separator.
                            --  When a table is provided it&#39;s treated as section_separator.
                            --  Passing an empty string disables the separator.
                            --
                            -- These options can be used to set colored separators
                            -- around a component.
                            --
                            -- The options need to be set as such:
                            --   separator = { left = &#39;&#39;, right = &#39;&#39;}
                            --
                            -- Where left will be placed on left side of component,
                            -- and right will be placed on its right.
                            --

      cond = nil,           -- Condition function, the component is loaded when the function returns `true`.

      draw_empty = false,   -- Whether to draw component even if it&#39;s empty.
                            -- Might be useful if you want just the separator.

      -- Defines a custom color for the component:
      --
      -- &#39;highlight_group_name&#39; | { fg = &#39;#rrggbb&#39;|cterm_value(0-255)|&#39;color_name(red)&#39;, bg= &#39;#rrggbb&#39;, gui=&#39;style&#39; } | function
      -- Note:
      --  &#39;|&#39; is synonymous with &#39;or&#39;, meaning a different acceptable format for that placeholder.
      -- color function has to return one of other color types (&#39;highlight_group_name&#39; | { fg = &#39;#rrggbb&#39;|cterm_value(0-255)|&#39;color_name(red)&#39;, bg= &#39;#rrggbb&#39;, gui=&#39;style&#39; })
      -- color functions can be used to have different colors based on state as shown below.
      --
      -- Examples:
      --   color = { fg = &#39;#ffaa88&#39;, bg = &#39;grey&#39;, gui=&#39;italic,bold&#39; },
      --   color = { fg = 204 }   -- When fg/bg are omitted, they default to the your theme&#39;s fg/bg.
      --   color = &#39;WarningMsg&#39;   -- Highlight groups can also be used.
      --   color = function(section)
      --      return { fg = vim.bo.modified and &#39;#aa3355&#39; or &#39;#33aa88&#39; }
      --   end,
      color = nil, -- The default is your theme&#39;s color for that section and mode.

      -- Specify what type a component is, if omitted, lualine will guess it for you.
      --
      -- Available types are:
      --   [format: type_name(example)], mod(branch/filename),
      --   stl(%f/%m), var(g:coc_status/bo:modifiable),
      --   lua_expr(lua expressions), vim_fun(viml function name)
      --
      -- Note:
      -- lua_expr is short for lua-expression and vim_fun is short for vim-function.
      type = nil,

      padding = 1, -- Adds padding to the left and right of components.
                   -- Padding can be specified to left or right independently, e.g.:
                   --   padding = { left = left_padding, right = right_padding }

      fmt = nil,   -- Format function, formats the component&#39;s output.
                   -- This function receives two arguments:
                   -- - string that is going to be displayed and
                   --   that can be changed, enhanced and etc.
                   -- - context object with information you might
                   --   need. E.g. tabnr if used with tabs.
      on_click = nil, -- takes a function that is called when component is clicked with mouse.
                   -- the function receives several arguments
                   -- - number of clicks in case of multiple clicks
                   -- - mouse button used (l(left)/r(right)/m(middle)/...)
                   -- - modifiers pressed (s(shift)/c(ctrl)/a(alt)/m(meta)...)
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Component specific options&lt;/h4&gt; 
&lt;p&gt;These are options that are available on specific components. For example, you have option on &lt;code&gt;diagnostics&lt;/code&gt; component to specify what your diagnostic sources will be.&lt;/p&gt; 
&lt;h4&gt;buffers component options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;buffers&#39;,
      show_filename_only = true,   -- Shows shortened relative path when set to false.
      hide_filename_extension = false,   -- Hide filename extension when set to true.
      show_modified_status = true, -- Shows indicator when the buffer is modified.

      mode = 0, -- 0: Shows buffer name
                -- 1: Shows buffer index
                -- 2: Shows buffer name + buffer index
                -- 3: Shows buffer number
                -- 4: Shows buffer name + buffer number

      max_length = vim.o.columns * 2 / 3, -- Maximum width of buffers component,
                                          -- it can also be a function that returns
                                          -- the value of `max_length` dynamically.
      filetype_names = {
        TelescopePrompt = &#39;Telescope&#39;,
        dashboard = &#39;Dashboard&#39;,
        packer = &#39;Packer&#39;,
        fzf = &#39;FZF&#39;,
        alpha = &#39;Alpha&#39;
      }, -- Shows specific buffer name for that filetype ( { `filetype` = `buffer_name`, ... } )

      -- Automatically updates active buffer color to match color of other components (will be overidden if buffers_color is set)
      use_mode_colors = false,

      buffers_color = {
        -- Same values as the general color option can be used here.
        active = &#39;lualine_{section}_normal&#39;,     -- Color for active buffer.
        inactive = &#39;lualine_{section}_inactive&#39;, -- Color for inactive buffer.
      },

      symbols = {
        modified = &#39; ●&#39;,      -- Text to show when the buffer is modified
        alternate_file = &#39;#&#39;, -- Text to show to identify the alternate file
        directory =  &#39;&#39;,     -- Text to show when the buffer is a directory
      },
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;datetime component options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;datetime&#39;,
      -- options: default, us, uk, iso, or your own format string (&quot;%H:%M&quot;, etc..)
      style = &#39;default&#39;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;diagnostics component options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;diagnostics&#39;,

      -- Table of diagnostic sources, available sources are:
      --   &#39;nvim_lsp&#39;, &#39;nvim_diagnostic&#39;, &#39;nvim_workspace_diagnostic&#39;, &#39;coc&#39;, &#39;ale&#39;, &#39;vim_lsp&#39;.
      -- or a function that returns a table as such:
      --   { error=error_cnt, warn=warn_cnt, info=info_cnt, hint=hint_cnt }
      sources = { &#39;nvim_diagnostic&#39;, &#39;coc&#39; },

      -- Displays diagnostics for the defined severity types
      sections = { &#39;error&#39;, &#39;warn&#39;, &#39;info&#39;, &#39;hint&#39; },

      diagnostics_color = {
        -- Same values as the general color option can be used here.
        error = &#39;DiagnosticError&#39;, -- Changes diagnostics&#39; error color.
        warn  = &#39;DiagnosticWarn&#39;,  -- Changes diagnostics&#39; warn color.
        info  = &#39;DiagnosticInfo&#39;,  -- Changes diagnostics&#39; info color.
        hint  = &#39;DiagnosticHint&#39;,  -- Changes diagnostics&#39; hint color.
      },
      symbols = {error = &#39;E&#39;, warn = &#39;W&#39;, info = &#39;I&#39;, hint = &#39;H&#39;},
      colored = true,           -- Displays diagnostics status in color if set to true.
      update_in_insert = false, -- Update diagnostics in insert mode.
      always_visible = false,   -- Show diagnostics even if there are none.
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;diff component options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;diff&#39;,
      colored = true, -- Displays a colored diff status if set to true
      diff_color = {
        -- Same color values as the general color option can be used here.
        added    = &#39;LuaLineDiffAdd&#39;,    -- Changes the diff&#39;s added color
        modified = &#39;LuaLineDiffChange&#39;, -- Changes the diff&#39;s modified color
        removed  = &#39;LuaLineDiffDelete&#39;, -- Changes the diff&#39;s removed color you
      },
      symbols = {added = &#39;+&#39;, modified = &#39;~&#39;, removed = &#39;-&#39;}, -- Changes the symbols used by the diff.
      source = nil, -- A function that works as a data source for diff.
                    -- It must return a table as such:
                    --   { added = add_count, modified = modified_count, removed = removed_count }
                    -- or nil on failure. count &amp;lt;= 0 won&#39;t be displayed.
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;fileformat component options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;fileformat&#39;,
      symbols = {
        unix = &#39;&#39;, -- e712
        dos = &#39;&#39;,  -- e70f
        mac = &#39;&#39;,  -- e711
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;filename component options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;filename&#39;,
      file_status = true,      -- Displays file status (readonly status, modified status)
      newfile_status = false,  -- Display new file status (new file means no write after created)
      path = 0,                -- 0: Just the filename
                               -- 1: Relative path
                               -- 2: Absolute path
                               -- 3: Absolute path, with tilde as the home directory
                               -- 4: Filename and parent dir, with tilde as the home directory

      shorting_target = 40,    -- Shortens path to leave 40 spaces in the window
                               -- for other components. (terrible name, any suggestions?)
      symbols = {
        modified = &#39;[+]&#39;,      -- Text to show when the file is modified.
        readonly = &#39;[-]&#39;,      -- Text to show when the file is non-modifiable or readonly.
        unnamed = &#39;[No Name]&#39;, -- Text to show for unnamed buffers.
        newfile = &#39;[New]&#39;,     -- Text to show for newly created file before first write
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;filetype component options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;filetype&#39;,
      colored = true,   -- Displays filetype icon in color if set to true
      icon_only = false, -- Display only an icon for filetype
      icon = { align = &#39;right&#39; }, -- Display filetype icon on the right hand side
      -- icon =    {&#39;X&#39;, align=&#39;right&#39;}
      -- Icon string ^ in table is ignored in filetype component
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;encoding component options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;encoding&#39;,
      -- Show &#39;[BOM]&#39; when the file has a byte-order mark
        show_bomb = false,
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;searchcount component options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;searchcount&#39;,
      maxcount = 999,
      timeout = 500,
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;tabs component options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;tabs&#39;,
      tab_max_length = 40,  -- Maximum width of each tab. The content will be shorten dynamically (example: apple/orange -&amp;gt; a/orange)
      max_length = vim.o.columns / 3, -- Maximum width of tabs component.
                                      -- Note:
                                      -- It can also be a function that returns
                                      -- the value of `max_length` dynamically.
      mode = 0, -- 0: Shows tab_nr
                -- 1: Shows tab_name
                -- 2: Shows tab_nr + tab_name

      path = 0, -- 0: just shows the filename
                -- 1: shows the relative path and shorten $HOME to ~
                -- 2: shows the full path
                -- 3: shows the full path and shorten $HOME to ~

      -- Automatically updates active tab color to match color of other components (will be overidden if buffers_color is set)
      use_mode_colors = false,

      tabs_color = {
        -- Same values as the general color option can be used here.
        active = &#39;lualine_{section}_normal&#39;,     -- Color for active tab.
        inactive = &#39;lualine_{section}_inactive&#39;, -- Color for inactive tab.
      },

      show_modified_status = true,  -- Shows a symbol next to the tab name if the file has been modified.
      symbols = {
        modified = &#39;[+]&#39;,  -- Text to show when the file is modified.
      },

      fmt = function(name, context)
        -- Show + if buffer is modified in tab
        local buflist = vim.fn.tabpagebuflist(context.tabnr)
        local winnr = vim.fn.tabpagewinnr(context.tabnr)
        local bufnr = buflist[winnr]
        local mod = vim.fn.getbufvar(bufnr, &#39;&amp;amp;mod&#39;)

        return name .. (mod == 1 and &#39; +&#39; or &#39;&#39;)
      end
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;windows component options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;windows&#39;,
      show_filename_only = true,   -- Shows shortened relative path when set to false.
      show_modified_status = true, -- Shows indicator when the window is modified.

      mode = 0, -- 0: Shows window name
                -- 1: Shows window index
                -- 2: Shows window name + window index

      max_length = vim.o.columns * 2 / 3, -- Maximum width of windows component,
                                          -- it can also be a function that returns
                                          -- the value of `max_length` dynamically.
      filetype_names = {
        TelescopePrompt = &#39;Telescope&#39;,
        dashboard = &#39;Dashboard&#39;,
        packer = &#39;Packer&#39;,
        fzf = &#39;FZF&#39;,
        alpha = &#39;Alpha&#39;
      }, -- Shows specific window name for that filetype ( { `filetype` = `window_name`, ... } )

      disabled_buftypes = { &#39;quickfix&#39;, &#39;prompt&#39; }, -- Hide a window if its buffer&#39;s type is disabled

      -- Automatically updates active window color to match color of other components (will be overidden if buffers_color is set)
      use_mode_colors = false,

      windows_color = {
        -- Same values as the general color option can be used here.
        active = &#39;lualine_{section}_normal&#39;,     -- Color for active window.
        inactive = &#39;lualine_{section}_inactive&#39;, -- Color for inactive window.
      },
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;lsp status component options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;sections = {
  lualine_a = {
    {
      &#39;lsp_status&#39;,
      icon = &#39;&#39;, -- f013
      symbols = {
        -- Standard unicode symbols to cycle through for LSP progress:
        spinner = { &#39;⠋&#39;, &#39;⠙&#39;, &#39;⠹&#39;, &#39;⠸&#39;, &#39;⠼&#39;, &#39;⠴&#39;, &#39;⠦&#39;, &#39;⠧&#39;, &#39;⠇&#39;, &#39;⠏&#39; },
        -- Standard unicode symbol for when LSP is done:
        done = &#39;✓&#39;,
        -- Delimiter inserted between LSP names:
        separator = &#39; &#39;,
      },
      -- List of LSP names to ignore (e.g., `null-ls`):
      ignore_lsp = {},
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;Tabline&lt;/h3&gt; 
&lt;p&gt;You can use lualine to display components in tabline. The configuration for tabline sections is exactly the same as that of the statusline.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;tabline = {
  lualine_a = {},
  lualine_b = {&#39;branch&#39;},
  lualine_c = {&#39;filename&#39;},
  lualine_x = {},
  lualine_y = {},
  lualine_z = {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will show the branch and filename components on top of neovim inside tabline.&lt;/p&gt; 
&lt;p&gt;lualine also provides 2 components, buffers and tabs, that you can use to get a more traditional tabline/bufferline.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;tabline = {
  lualine_a = {&#39;buffers&#39;},
  lualine_b = {&#39;branch&#39;},
  lualine_c = {&#39;filename&#39;},
  lualine_x = {},
  lualine_y = {},
  lualine_z = {&#39;tabs&#39;}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Winbar&lt;/h3&gt; 
&lt;p&gt;From neovim-0.8 you can customize your winbar with lualine. Winbar configuration is similar to statusline.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;winbar = {
  lualine_a = {},
  lualine_b = {},
  lualine_c = {&#39;filename&#39;},
  lualine_x = {},
  lualine_y = {},
  lualine_z = {}
}

inactive_winbar = {
  lualine_a = {},
  lualine_b = {},
  lualine_c = {&#39;filename&#39;},
  lualine_x = {},
  lualine_y = {},
  lualine_z = {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Just like statusline you can separately specify winbar for active and inactive windows. Any lualine component can be placed in winbar. All kinds of custom components supported in statusline are also supported for winbar too. In general You can treat winbar as another lualine statusline that just appears on top of windows instead of at bottom.&lt;/p&gt; 
&lt;h4&gt;Buffers&lt;/h4&gt; 
&lt;p&gt;Shows currently open buffers. Like bufferline . See &lt;a href=&quot;https://raw.githubusercontent.com/nvim-lualine/lualine.nvim/master/#buffers-component-options&quot;&gt;buffers options&lt;/a&gt; for all builtin behaviors of buffers component. You can use &lt;code&gt;:LualineBuffersJump&lt;/code&gt; to jump to buffer based on index of buffer in buffers component. Jumping to non-existent buffer indices generates an error. To avoid these errors &lt;code&gt;LualineBuffersJump&lt;/code&gt; provides &lt;code&gt;&amp;lt;bang&amp;gt;&lt;/code&gt; support, meaning that you can call &lt;code&gt;:LualineBufferJump!&lt;/code&gt; to ignore these errors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-vim&quot;&gt;  :LualineBuffersJump 2  &quot; Jumps to 2nd buffer in buffers component.
  :LualineBuffersJump $  &quot; Jumps to last buffer in buffers component.
  :LualineBuffersJump! 3  &quot; Attempts to jump to 3rd buffer, if it exists.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Tabs&lt;/h4&gt; 
&lt;p&gt;Shows currently open tab. Like usual tabline. See &lt;a href=&quot;https://raw.githubusercontent.com/nvim-lualine/lualine.nvim/master/#tabs-component-options&quot;&gt;tabs options&lt;/a&gt; for all builtin behaviors of tabs component. You can also use &lt;code&gt;:LualineRenameTab&lt;/code&gt; to set a name for a tabpage. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-vim&quot;&gt;:LualineRenameTab Project_K
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It&#39;s useful when you&#39;re using rendering mode 2/3 in tabs. To unname a tabpage run &lt;code&gt;:LualineRenameTab&lt;/code&gt; without argument.&lt;/p&gt; 
&lt;h4&gt;Tabline as statusline&lt;/h4&gt; 
&lt;p&gt;You can also completely move your statusline to a tabline by configuring &lt;code&gt;lualine.tabline&lt;/code&gt; and disabling &lt;code&gt;lualine.sections&lt;/code&gt; and &lt;code&gt;lualine.inactive_sections&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;tabline = {
......
  },
sections = {},
inactive_sections = {},
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want a more sophisticated tabline you can use other tabline plugins with lualine too, for example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/akinsho/nvim-bufferline.lua&quot;&gt;nvim-bufferline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kdheepak/tabline.nvim&quot;&gt;tabline.nvim&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;tabline.nvim even uses lualine&#39;s theme by default 🙌 You can find a bigger list &lt;a href=&quot;https://github.com/rockerBOO/awesome-neovim#tabline&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Extensions&lt;/h3&gt; 
&lt;p&gt;lualine extensions change statusline appearance for a window/buffer with specified filetypes.&lt;/p&gt; 
&lt;p&gt;By default no extensions are loaded to improve performance. You can load extensions with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;extensions = {&#39;quickfix&#39;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Available extensions&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;aerial&lt;/li&gt; 
 &lt;li&gt;chadtree&lt;/li&gt; 
 &lt;li&gt;ctrlspace&lt;/li&gt; 
 &lt;li&gt;fern&lt;/li&gt; 
 &lt;li&gt;fugitive&lt;/li&gt; 
 &lt;li&gt;fzf&lt;/li&gt; 
 &lt;li&gt;lazy&lt;/li&gt; 
 &lt;li&gt;man&lt;/li&gt; 
 &lt;li&gt;mason&lt;/li&gt; 
 &lt;li&gt;mundo&lt;/li&gt; 
 &lt;li&gt;neo-tree&lt;/li&gt; 
 &lt;li&gt;nerdtree&lt;/li&gt; 
 &lt;li&gt;nvim-dap-ui&lt;/li&gt; 
 &lt;li&gt;nvim-tree&lt;/li&gt; 
 &lt;li&gt;oil&lt;/li&gt; 
 &lt;li&gt;overseer&lt;/li&gt; 
 &lt;li&gt;quickfix&lt;/li&gt; 
 &lt;li&gt;symbols-outline&lt;/li&gt; 
 &lt;li&gt;toggleterm&lt;/li&gt; 
 &lt;li&gt;trouble&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Custom extensions&lt;/h4&gt; 
&lt;p&gt;You can define your own extensions. If you believe an extension may be useful to others, then please submit a PR.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;local my_extension = { sections = { lualine_a = {&#39;mode&#39;} }, filetypes = {&#39;lua&#39;} }
require(&#39;lualine&#39;).setup { extensions = { my_extension } }
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;Refreshing lualine&lt;/h3&gt; 
&lt;p&gt;By default lualine refreshes itself based on timer and some events. You can set the interval of the timer with refresh option. However you can also force lualine to refresh at any time by calling &lt;code&gt;lualine.refresh&lt;/code&gt; function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;require(&#39;lualine&#39;).refresh({
  scope = &#39;tabpage&#39;,  -- scope of refresh all/tabpage/window
  place = { &#39;statusline&#39;, &#39;winbar&#39;, &#39;tabline&#39; },  -- lualine segment ro refresh.
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The arguments shown here are default values. So not passing any of them will be treated as if a default value was passed.&lt;/p&gt; 
&lt;p&gt;So you can simply do&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;require(&#39;lualine&#39;).refresh()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Avoid calling &lt;code&gt;lualine.refresh&lt;/code&gt; inside components. Since components are evaluated during refresh, calling refresh while refreshing can have undesirable effects.&lt;/p&gt; 
&lt;h3&gt;Disabling lualine&lt;/h3&gt; 
&lt;p&gt;You can disable lualine for specific filetypes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;options = { disabled_filetypes = {&#39;lua&#39;} }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also disable lualine completely. Note that you need to call this after the setup&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;  require(&#39;lualine&#39;).hide({
    place = {&#39;statusline&#39;, &#39;tabline&#39;, &#39;winbar&#39;}, -- The segment this change applies to.
    unhide = false,  -- whether to re-enable lualine again/
  })
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The arguments show for hide above are default values. Which means even if the hide function is called without arguments it&#39;ll work as if these were passed.&lt;/p&gt; 
&lt;p&gt;So in short to disable lualine completely you can do&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;require(&#39;lualine&#39;).hide()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To enable it again you can do&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;require(&#39;lualine&#39;).hide({unhide=true})
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- panvimdoc-ignore-start --&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;Thanks to these wonderful people, we enjoy this awesome plugin.&lt;/p&gt; 
&lt;a href=&quot;https://github.com/nvim-lualine/lualine.nvim/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=nvim-lualine/lualine.nvim&quot;&gt; &lt;/a&gt; 
&lt;!-- panvimdoc-ignore-end --&gt; 
&lt;h3&gt;Wiki&lt;/h3&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/nvim-lualine/lualine.nvim/wiki&quot;&gt;wiki&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;p&gt;You can find some useful &lt;a href=&quot;https://github.com/nvim-lualine/lualine.nvim/wiki/Component-snippets&quot;&gt;configuration snippets&lt;/a&gt; here. You can also share your awesome snippets with others.&lt;/p&gt; 
&lt;p&gt;If you want to extend lualine with plugins or want to know which ones already do, &lt;a href=&quot;https://github.com/nvim-lualine/lualine.nvim/wiki/Plugins&quot;&gt;wiki/plugins&lt;/a&gt; is for you.&lt;/p&gt; 
&lt;h3&gt;Support&lt;/h3&gt; 
&lt;p&gt;If you find this project useful, consider supporting development:&lt;/p&gt; 
&lt;a href=&quot;https://buymeacoffee.com/shadmansalj&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&quot; alt=&quot;Buy Me a Coffee&quot; width=&quot;200&quot;&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>yuaotian/go-cursor-help</title>
      <link>https://github.com/yuaotian/go-cursor-help</link>
      <description>&lt;p&gt;解决Cursor在免费订阅期间出现以下提示的问题: You&#39;ve reached your trial request limit. / Too many free trial accounts used on this machine. Please upgrade to pro. We have this limit in place to prevent abuse. Please let us know if you believe this is a mistake.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🚀 Cursor Free Trial Reset Tool&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/yuaotian/go-cursor-help/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/yuaotian/go-cursor-help?style=flat-square&amp;amp;logo=github&amp;amp;color=blue&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yuaotian/go-cursor-help/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&amp;amp;logo=bookstack&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yuaotian/go-cursor-help/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/yuaotian/go-cursor-help?style=flat-square&amp;amp;logo=github&quot; alt=&quot;Stars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/README.md&quot;&gt;🌟 English&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/README_CN.md&quot;&gt;🌏 中文&lt;/a&gt;&lt;/p&gt; 
 &lt;img src=&quot;https://ai-cursor.com/wp-content/uploads/2024/09/logo-cursor-ai-png.webp&quot; alt=&quot;Cursor Logo&quot; width=&quot;120&quot;&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;IMPORTANT NOTICE&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;This tool currently supports:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ Cursor v0.44.11 and below&lt;/li&gt; 
  &lt;li&gt;✅ Windows: Latest 0.47.x versions (Supported)&lt;/li&gt; 
  &lt;li&gt;✅ Mac/Linux: Latest 0.47.x versions (Supported, feedback welcome)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Please check your Cursor version before using this tool.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;📦 Version History &amp;amp; Downloads&lt;/b&gt;&lt;/summary&gt; 
 &lt;div class=&quot;version-card&quot; style=&quot;background: linear-gradient(135deg, #6e8efb, #a777e3); border-radius: 8px; padding: 15px; margin: 10px 0; color: white;&quot;&gt; 
  &lt;h3&gt;🌟 Latest Versions&lt;/h3&gt; 
  &lt;ul&gt; 
   &lt;li&gt;v0.45.11 (2025-02-07) - Latest Release&lt;/li&gt; 
   &lt;li&gt;v0.44.11 (2025-01-03) - Most Stable Release&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/CursorHistoryDown.md&quot;&gt;View Full Version History&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;📥 Direct Download Links&lt;/h3&gt; 
 &lt;p&gt;&lt;strong&gt;v0.44.11 (Recommended Stable Version)&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Windows: &lt;a href=&quot;https://downloader.cursor.sh/builds/250103fqxdt5u9z/windows/nsis/x64&quot;&gt;Official&lt;/a&gt; | &lt;a href=&quot;https://download.todesktop.com/230313mzl4w4u92/Cursor%20Setup%200.44.11%20-%20Build%20250103fqxdt5u9z-x64.exe&quot;&gt;Mirror&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Mac: &lt;a href=&quot;https://dl.todesktop.com/230313mzl4w4u92/versions/0.44.11/mac/zip/arm64&quot;&gt;Apple Silicon&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;⚠️ &lt;strong&gt;MAC Address Modification Warning&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For Mac users: This script includes a MAC address modification feature that will:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Modify your network interface&#39;s MAC address&lt;/li&gt; 
  &lt;li&gt;Backup original MAC addresses before modification&lt;/li&gt; 
  &lt;li&gt;This modification may temporarily affect network connectivity&lt;/li&gt; 
  &lt;li&gt;You can skip this step when prompted during execution&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;💾 &lt;strong&gt;Download Cursor v0.44.11&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Windows:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://downloader.cursor.sh/builds/250103fqxdt5u9z/windows/nsis/x64&quot;&gt;Download from Cursor Official&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://download.todesktop.com/230313mzl4w4u92/Cursor%20Setup%200.44.11%20-%20Build%20250103fqxdt5u9z-x64.exe&quot;&gt;Download from ToDesktop&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Mac:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://dl.todesktop.com/230313mzl4w4u92/versions/0.44.11/mac/zip/arm64&quot;&gt;Download for Mac (Apple Silicon)&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🔒 Disable Auto-Update Feature&lt;/b&gt;&lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;To prevent Cursor from automatically updating to unsupported new versions, you can choose to disable the auto-update feature.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;Method 1: Using Built-in Script (Recommended)&lt;/h4&gt; 
 &lt;p&gt;When running the reset tool, the script will ask if you want to disable auto-updates:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[Question] Do you want to disable Cursor auto-update feature?
0) No - Keep default settings (Press Enter)
1) Yes - Disable auto-update
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Select &lt;code&gt;1&lt;/code&gt; to automatically complete the disable operation.&lt;/p&gt; 
 &lt;h4&gt;Method 2: Manual Disable&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Close all Cursor processes&lt;/li&gt; 
  &lt;li&gt;Delete directory: &lt;code&gt;%LOCALAPPDATA%\cursor-updater&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Create a file with the same name (without extension) in the same location&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;strong&gt;macOS:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# NOTE: As tested, this method only works for version 0.45.11 and below.
# Close Cursor
pkill -f &quot;Cursor&quot;
# Replacing app-update.yml with a blank/read-only file
cd /Applications/Cursor.app/Contents/Resources
mv app-update.yml app-update.yml.bak
touch app-update.yml
chmod 444 app-update.yml

# Go to Settings -&amp;gt; Application -&amp;gt; Update, set Mode to none.
# This must be done to prevent Cursor from checking for updates.

# NOTE: The cursor-updater modification method may no longer be effective
# In any case, remove update directory and create blocking file
rm -rf ~/Library/Application\ Support/Caches/cursor-updater
touch ~/Library/Application\ Support/Caches/cursor-updater
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Close Cursor
pkill -f &quot;Cursor&quot;
# Remove update directory and create blocking file
rm -rf ~/.config/cursor-updater
touch ~/.config/cursor-updater
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;⚠️ &lt;strong&gt;Note:&lt;/strong&gt; After disabling auto-updates, you&#39;ll need to manually download and install new versions. It&#39;s recommended to update only after confirming the new version is compatible.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;📝 Description&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;When you encounter any of these messages:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Issue 1: Trial Account Limit &lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/#issue1&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Move%20to%20Solution-Blue?style=plastic&quot; alt=&quot;Back To Top&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Too many free trial accounts used on this machine.
Please upgrade to pro. We have this limit in place
to prevent abuse. Please let us know if you believe
this is a mistake.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Issue 2: API Key Limitation &lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/#issue2&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Move%20to%20Solution-green?style=plastic&quot; alt=&quot;Back To Top&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[New Issue]

Composer relies on custom models that cannot be billed to an API key.
Please disable API keys and use a Pro or Business subscription.
Request ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Issue 3: Trial Request Limit&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This indicates you&#39;ve reached the usage limit during the VIP free trial period:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;You&#39;ve reached your trial request limit.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Issue 4: Claude 3.7 High Load &lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/#issue4&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Move%20to%20Solution-purple?style=plastic&quot; alt=&quot;Back To Top&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;High Load 
We&#39;re experiencing high demand for Claude 3.7 Sonnet right now. Please upgrade to Pro, or switch to the
&#39;default&#39; model, Claude 3.5 sonnet, another model, or try again in a few moments.
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;p id=&quot;issue2&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Solution : Uninstall Cursor Completely And Reinstall (API key Issue)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download &lt;a href=&quot;https://geekuninstaller.com/download&quot;&gt;Geek.exe Uninstaller[Free]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Uninstall Cursor app completely&lt;/li&gt; 
 &lt;li&gt;Re-Install Cursor app&lt;/li&gt; 
 &lt;li&gt;Continue to Solution 1&lt;/li&gt; 
&lt;/ol&gt; 
&lt;br&gt; 
&lt;p id=&quot;issue1&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Temporary Solution:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Solution 1: Quick Reset (Recommended)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Close Cursor application&lt;/li&gt; 
 &lt;li&gt;Run the machine code reset script (see installation instructions below)&lt;/li&gt; 
 &lt;li&gt;Reopen Cursor to continue using&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Solution 2: Account Switch&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;File -&amp;gt; Cursor Settings -&amp;gt; Sign Out&lt;/li&gt; 
 &lt;li&gt;Close Cursor&lt;/li&gt; 
 &lt;li&gt;Run the machine code reset script&lt;/li&gt; 
 &lt;li&gt;Login with a new account&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Solution 3: Network Optimization&lt;/h4&gt; 
&lt;p&gt;If the above solutions don&#39;t work, try:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Switch to low-latency nodes (Recommended regions: Japan, Singapore, US, Hong Kong)&lt;/li&gt; 
 &lt;li&gt;Ensure network stability&lt;/li&gt; 
 &lt;li&gt;Clear browser cache and retry&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Solution 4: Claude 3.7 Access Issue (High Load)&lt;/h4&gt; 
&lt;p&gt;If you see the &quot;High Load&quot; message for Claude 3.7 Sonnet, this indicates Cursor is limiting free trial accounts from using the 3.7 model during certain times of the day. Try:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Switch to a new account created with Gmail, possibly connecting through a different IP address&lt;/li&gt; 
 &lt;li&gt;Try accessing during off-peak hours (typically 5-10 AM or 3-7 PM when restrictions are often lighter)&lt;/li&gt; 
 &lt;li&gt;Consider upgrading to Pro for guaranteed access&lt;/li&gt; 
 &lt;li&gt;Use Claude 3.5 Sonnet as a fallback option&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: These access patterns may change as Cursor adjusts their resource allocation policies.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;💻 System Support&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt; ✅&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;x64 (64-bit)&lt;/li&gt; 
     &lt;li&gt;x86 (32-bit)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt; ✅&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Intel (x64)&lt;/li&gt; 
     &lt;li&gt;Apple Silicon (M1/M2)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt; ✅&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;x64 (64-bit)&lt;/li&gt; 
     &lt;li&gt;x86 (32-bit)&lt;/li&gt; 
     &lt;li&gt;ARM64&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;🚀 One-Click Solution&lt;/h3&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;Global Users&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh | sudo bash 
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh | sudo bash 
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;irm https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div align=&quot;center&quot;&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/run_success.png&quot; alt=&quot;Run Success&quot; width=&quot;600&quot;&gt; 
 &lt;/div&gt; 
&lt;/details&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;China Users (Recommended)&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;Windows Terminal Run and Configuration&lt;/b&gt;&lt;/summary&gt; 
 &lt;h4&gt;How to Open Administrator Terminal in Windows:&lt;/h4&gt; 
 &lt;h5&gt;Method 1: Using Win + X Shortcut&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;1. Press Win + X key combination
2. Select one of these options from the menu:
   - &quot;Windows PowerShell (Administrator)&quot;
   - &quot;Windows Terminal (Administrator)&quot;
   - &quot;Terminal (Administrator)&quot;
   (Options may vary depending on Windows version)
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Method 2: Using Win + R Run Command&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;1. Press Win + R key combination
2. Type powershell or pwsh in the Run dialog
3. Press Ctrl + Shift + Enter to run as administrator
   or type in the opened window: Start-Process pwsh -Verb RunAs
4. Enter the reset script in the administrator terminal:

irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Method 3: Using Search&lt;/h5&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/pwsh_1.png&quot; alt=&quot;Search PowerShell&quot;&gt;&lt;/p&gt; 
  &lt;p&gt;Type pwsh in the search box, right-click and select &quot;Run as administrator&quot; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/pwsh_2.png&quot; alt=&quot;Run as Administrator&quot;&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;Enter the reset script in the administrator terminal:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;🔧 PowerShell Installation Guide&lt;/h3&gt; 
 &lt;p&gt;If PowerShell is not installed on your system, you can install it using one of these methods:&lt;/p&gt; 
 &lt;h4&gt;Method 1: Install via Winget (Recommended)&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open Command Prompt or PowerShell&lt;/li&gt; 
  &lt;li&gt;Run the following command:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;winget install --id Microsoft.PowerShell --source winget
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Method 2: Manual Installation&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Download the installer for your system:&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/PowerShell-7.4.6-win-x64.msi&quot;&gt;PowerShell-7.4.6-win-x64.msi&lt;/a&gt; (64-bit systems)&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/PowerShell-7.4.6-win-x86.msi&quot;&gt;PowerShell-7.4.6-win-x86.msi&lt;/a&gt; (32-bit systems)&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/PowerShell-7.4.6-win-arm64.msi&quot;&gt;PowerShell-7.4.6-win-arm64.msi&lt;/a&gt; (ARM64 systems)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Double-click the downloaded installer and follow the installation prompts&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;💡 If you encounter any issues, please refer to the &lt;a href=&quot;https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows&quot;&gt;Microsoft Official Installation Guide&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;h4&gt;Windows 安装特性:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔍 Automatically detects and uses PowerShell 7 if available&lt;/li&gt; 
 &lt;li&gt;🛡️ Requests administrator privileges via UAC prompt&lt;/li&gt; 
 &lt;li&gt;📝 Falls back to Windows PowerShell if PS7 isn&#39;t found&lt;/li&gt; 
 &lt;li&gt;💡 Provides manual instructions if elevation fails&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;That&#39;s it! The script will:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;✨ Install the tool automatically&lt;/li&gt; 
 &lt;li&gt;🔄 Reset your Cursor trial immediately&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;📦 Manual Installation&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Download the appropriate file for your system from &lt;a href=&quot;https://github.com/yuaotian/go-cursor-help/releases/latest&quot;&gt;releases&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;Windows Packages&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;64-bit: &lt;code&gt;cursor-id-modifier_windows_x64.exe&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;32-bit: &lt;code&gt;cursor-id-modifier_windows_x86.exe&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;macOS Packages&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Intel: &lt;code&gt;cursor-id-modifier_darwin_x64_intel&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;M1/M2: &lt;code&gt;cursor-id-modifier_darwin_arm64_apple_silicon&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Linux Packages&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;64-bit: &lt;code&gt;cursor-id-modifier_linux_x64&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;32-bit: &lt;code&gt;cursor-id-modifier_linux_x86&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;ARM64: &lt;code&gt;cursor-id-modifier_linux_arm64&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;🔧 Technical Details&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Configuration Files&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The program modifies Cursor&#39;s &lt;code&gt;storage.json&lt;/code&gt; config file located at:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Windows: &lt;code&gt;%APPDATA%\Cursor\User\globalStorage\storage.json&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;macOS: &lt;code&gt;~/Library/Application Support/Cursor/User/globalStorage/storage.json&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Linux: &lt;code&gt;~/.config/Cursor/User/globalStorage/storage.json&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Modified Fields&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The tool generates new unique identifiers for:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;telemetry.machineId&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;telemetry.macMachineId&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;telemetry.devDeviceId&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;telemetry.sqmId&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Manual Auto-Update Disable&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Windows users can manually disable the auto-update feature:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Close all Cursor processes&lt;/li&gt; 
  &lt;li&gt;Delete directory: &lt;code&gt;C:\Users\username\AppData\Local\cursor-updater&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Create a file with the same name: &lt;code&gt;cursor-updater&lt;/code&gt; (without extension)&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;macOS/Linux users can try to locate similar &lt;code&gt;cursor-updater&lt;/code&gt; directory in their system and perform the same operation.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Safety Features&lt;/b&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ Safe process termination&lt;/li&gt; 
  &lt;li&gt;✅ Atomic file operations&lt;/li&gt; 
  &lt;li&gt;✅ Error handling and recovery&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Registry Modification Notice&lt;/b&gt;&lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;⚠️ &lt;strong&gt;Important: This tool modifies the Windows Registry&lt;/strong&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;Modified Registry&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Path: &lt;code&gt;Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Cryptography&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Key: &lt;code&gt;MachineGuid&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Potential Impact&lt;/h4&gt; 
 &lt;p&gt;Modifying this registry key may affect:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Windows system&#39;s unique device identification&lt;/li&gt; 
  &lt;li&gt;Device recognition and authorization status of certain software&lt;/li&gt; 
  &lt;li&gt;System features based on hardware identification&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Safety Measures&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Automatic Backup&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Original value is automatically backed up before modification&lt;/li&gt; 
    &lt;li&gt;Backup location: &lt;code&gt;%APPDATA%\Cursor\User\globalStorage\backups&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Backup file format: &lt;code&gt;MachineGuid.backup_YYYYMMDD_HHMMSS&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Manual Recovery Steps&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Open Registry Editor (regedit)&lt;/li&gt; 
    &lt;li&gt;Navigate to: &lt;code&gt;Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Cryptography&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Right-click on &lt;code&gt;MachineGuid&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Select &quot;Modify&quot;&lt;/li&gt; 
    &lt;li&gt;Paste the value from backup file&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h4&gt;Important Notes&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Verify backup file existence before modification&lt;/li&gt; 
  &lt;li&gt;Use backup file to restore original value if needed&lt;/li&gt; 
  &lt;li&gt;Administrator privileges required for registry modification&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;📚 Recommended Reading&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/pnJrH7Ifx4WZvseeP1fcEA&quot;&gt;Cursor Issues Collection and Solutions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/PRPz-qVkFJSgkuEKkTdzwg&quot;&gt;AI Universal Development Assistant Prompt Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;b&gt;If you find this helpful, consider buying me a spicy gluten snack (Latiao) as appreciation~ 💁☕️&lt;/b&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;b&gt;微信赞赏&lt;/b&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/wx_zsm2.png&quot; width=&quot;500&quot; alt=&quot;微信赞赏码&quot;&gt;&lt;br&gt; &lt;small&gt;要到饭咧？啊咧？啊咧？不给也没事~ 请随意打赏&lt;/small&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;b&gt;支付宝赞赏&lt;/b&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/alipay.png&quot; width=&quot;500&quot; alt=&quot;支付宝赞赏码&quot;&gt;&lt;br&gt; &lt;small&gt;如果觉得有帮助,来包辣条犒劳一下吧~&lt;/small&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;b&gt;Alipay&lt;/b&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/alipay_scan_pay.jpg&quot; width=&quot;500&quot; alt=&quot;Alipay&quot;&gt;&lt;br&gt; &lt;em&gt;1 Latiao = 1 AI thought cycle&lt;/em&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;b&gt;WeChat&lt;/b&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/wx_group6.jpg&quot; width=&quot;500&quot; alt=&quot;WeChat&quot;&gt;&lt;br&gt; &lt;em&gt;二维码7天内(3月19日前)有效，过期请加微信&lt;/em&gt; &lt;/td&gt; 
    &lt;!-- &lt;td align=&quot;center&quot;&gt;
&lt;b&gt;ETC&lt;/b&gt;&lt;br&gt;
&lt;img src=&quot;img/etc.png&quot; width=&quot;100&quot; alt=&quot;ETC Address&quot;&gt;&lt;br&gt;
ETC: 0xa2745f4CD5d32310AC01694ABDB28bA32D125a6b
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt; --&gt;  
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;⭐ Project Stats&lt;/h2&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://star-history.com/#yuaotian/go-cursor-help&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=yuaotian/go-cursor-help&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://repobeats.axiom.co/api/embed/ddaa9df9a94b0029ec3fad399e1c1c4e75755477.svg?sanitize=true&quot; alt=&quot;Repobeats analytics image&quot; title=&quot;Repobeats analytics image&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;MIT License&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Copyright (c) 2024&lt;/p&gt; 
 &lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
 &lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>langchain-ai/ollama-deep-researcher</title>
      <link>https://github.com/langchain-ai/ollama-deep-researcher</link>
      <description>&lt;p&gt;Fully local web research and report writing assistant&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ollama Deep Researcher&lt;/h1&gt; 
&lt;p&gt;Ollama Deep Researcher is a fully local web research assistant that uses any LLM hosted by &lt;a href=&quot;https://ollama.com/search&quot;&gt;Ollama&lt;/a&gt;. Give it a topic and it will generate a web search query, gather web search results (via &lt;a href=&quot;https://www.tavily.com/&quot;&gt;Tavily&lt;/a&gt; by default), summarize the results of web search, reflect on the summary to examine knowledge gaps, generate a new search query to address the gaps, search, and improve the summary for a user-defined number of cycles. It will provide the user a final markdown summary with all sources used.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/4308ee9c-abf3-4abb-9d1e-83e7c2c3f187&quot; alt=&quot;research-rabbit&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Short summary: 
 &lt;video src=&quot;https://github.com/user-attachments/assets/02084902-f067-4658-9683-ff312cab7944&quot; controls&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;h2&gt;📺 Video Tutorials&lt;/h2&gt; 
&lt;p&gt;See it in action or build it yourself? Check out these helpful video tutorials:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=sGUjmyfof4Q&quot;&gt;Overview of Ollama Deep Researcher with R1&lt;/a&gt; - Load and test &lt;a href=&quot;https://api-docs.deepseek.com/news/news250120&quot;&gt;DeepSeek R1&lt;/a&gt; &lt;a href=&quot;https://ollama.com/library/deepseek-r1&quot;&gt;distilled models&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=XGuTzHoqlj8&quot;&gt;Building Ollama Deep Researcher from Scratch&lt;/a&gt; - Overview of how this is built.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Quickstart&lt;/h2&gt; 
&lt;h3&gt;Mac&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the Ollama app for Mac &lt;a href=&quot;https://ollama.com/download&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Pull a local LLM from &lt;a href=&quot;https://ollama.com/search&quot;&gt;Ollama&lt;/a&gt;. As an &lt;a href=&quot;https://ollama.com/library/deepseek-r1:8b&quot;&gt;example&lt;/a&gt;:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ollama pull deepseek-r1:8b
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Clone the repository:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/langchain-ai/ollama-deep-researcher.git
cd ollama-deep-researcher
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Select a web search tool:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;By default, it will use &lt;a href=&quot;https://duckduckgo.com/&quot;&gt;DuckDuckGo&lt;/a&gt; for web search, which does not require an API key. But you can also use &lt;a href=&quot;https://tavily.com/&quot;&gt;Tavily&lt;/a&gt; or &lt;a href=&quot;https://www.perplexity.ai/hub/blog/introducing-the-sonar-pro-api&quot;&gt;Perplexity&lt;/a&gt; by adding their API keys to the environment file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cp .env.example .env
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The following environment variables are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;OLLAMA_BASE_URL&lt;/code&gt; - the endpoint of the Ollama service, defaults to &lt;code&gt;http://localhost:11434&lt;/code&gt; if not set&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OLLAMA_MODEL&lt;/code&gt; - the model to use, defaults to &lt;code&gt;llama3.2&lt;/code&gt; if not set&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SEARCH_API&lt;/code&gt; - the search API to use, either &lt;code&gt;duckduckgo&lt;/code&gt; (default) or &lt;code&gt;tavily&lt;/code&gt; or &lt;code&gt;perplexity&lt;/code&gt;. You need to set the corresponding API key if tavily or perplexity is used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TAVILY_API_KEY&lt;/code&gt; - the tavily API key to use&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PERPLEXITY_API_KEY&lt;/code&gt; - the perplexity API key to use&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MAX_WEB_RESEARCH_LOOPS&lt;/code&gt; - the maximum number of research loop steps, defaults to &lt;code&gt;3&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FETCH_FULL_PAGE&lt;/code&gt; - fetch the full page content if using &lt;code&gt;duckduckgo&lt;/code&gt; for the search API, defaults to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;(Recommended) Create a virtual environment:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;python -m venv .venv
source .venv/bin/activate
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;6&quot;&gt; 
 &lt;li&gt;Launch the assistant with the LangGraph server:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install uv package manager
curl -LsSf https://astral.sh/uv/install.sh | sh
uvx --refresh --from &quot;langgraph-cli[inmem]&quot; --with-editable . --python 3.11 langgraph dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the Ollama app for Windows &lt;a href=&quot;https://ollama.com/download&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Pull a local LLM from &lt;a href=&quot;https://ollama.com/search&quot;&gt;Ollama&lt;/a&gt;. As an &lt;a href=&quot;https://ollama.com/library/deepseek-r1:8b&quot;&gt;example&lt;/a&gt;:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;ollama pull deepseek-r1:8b
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Clone the repository:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/langchain-ai/ollama-deep-researcher.git
cd ollama-deep-researcher
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt; &lt;p&gt;Select a web search tool, as above.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;(Recommended) Create a virtual environment: Install &lt;code&gt;Python 3.11&lt;/code&gt; (and add to PATH during installation). Restart your terminal to ensure Python is available, then create and activate a virtual environment:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;python -m venv .venv
.venv\Scripts\Activate.ps1
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;6&quot;&gt; 
 &lt;li&gt;Launch the assistant with the LangGraph server:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;# Install dependencies
pip install -e .
pip install -U &quot;langgraph-cli[inmem]&quot;            

# Start the LangGraph server
langgraph dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using the LangGraph Studio UI&lt;/h3&gt; 
&lt;p&gt;When you launch LangGraph server, you should see the following output and Studio will open in your browser:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Ready!&lt;/p&gt; 
 &lt;p&gt;API: &lt;a href=&quot;http://127.0.0.1:2024&quot;&gt;http://127.0.0.1:2024&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Docs: &lt;a href=&quot;http://127.0.0.1:2024/docs&quot;&gt;http://127.0.0.1:2024/docs&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;LangGraph Studio Web UI: &lt;a href=&quot;https://smith.langchain.com/studio/?baseUrl=http://127.0.0.1:2024&quot;&gt;https://smith.langchain.com/studio/?baseUrl=http://127.0.0.1:2024&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Open &lt;code&gt;LangGraph Studio Web UI&lt;/code&gt; via the URL in the output above.&lt;/p&gt; 
&lt;p&gt;In the &lt;code&gt;configuration&lt;/code&gt; tab:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pick your web search tool (DuckDuckGo, Tavily, or Perplexity) (it will by default be &lt;code&gt;DuckDuckGo&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Set the name of your local LLM to use with Ollama (it will by default be &lt;code&gt;llama3.2&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;You can set the depth of the research iterations (it will by default be &lt;code&gt;3&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img width=&quot;1621&quot; alt=&quot;Screenshot 2025-01-24 at 10 08 31 PM&quot; src=&quot;https://github.com/user-attachments/assets/7cfd0e04-28fd-4cfa-aee5-9a556d74ab21&quot;&gt; 
&lt;p&gt;Give the assistant a topic for research, and you can visualize its process!&lt;/p&gt; 
&lt;img width=&quot;1621&quot; alt=&quot;Screenshot 2025-01-24 at 10 08 22 PM&quot; src=&quot;https://github.com/user-attachments/assets/4de6bd89-4f3b-424c-a9cb-70ebd3d45c5f&quot;&gt; 
&lt;h3&gt;Model Compatibility Note&lt;/h3&gt; 
&lt;p&gt;When selecting a local LLM, note that this application relies on the model&#39;s ability to produce structured JSON output. Some models may have difficulty with this requirement:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Working well&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://ollama.com/library/llama3.2&quot;&gt;Llama2 3.2&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://ollama.com/library/deepseek-r1:8b&quot;&gt;DeepSeek R1 (8B)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Known issues&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://ollama.com/library/deepseek-llm:7b&quot;&gt;DeepSeek R1 (7B)&lt;/a&gt; - Currently has difficulty producing required JSON output&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you &lt;a href=&quot;https://github.com/langchain-ai/ollama-deep-researcher/issues/18&quot;&gt;encounter JSON-related errors&lt;/a&gt; (e.g., &lt;code&gt;KeyError: &#39;query&#39;&lt;/code&gt;), try switching to one of the confirmed working models.&lt;/p&gt; 
&lt;h3&gt;Browser Compatibility Note&lt;/h3&gt; 
&lt;p&gt;When accessing the LangGraph Studio UI:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Firefox is recommended for the best experience&lt;/li&gt; 
 &lt;li&gt;Safari users may encounter security warnings due to mixed content (HTTPS/HTTP)&lt;/li&gt; 
 &lt;li&gt;If you encounter issues, try: 
  &lt;ol&gt; 
   &lt;li&gt;Using Firefox or another browser&lt;/li&gt; 
   &lt;li&gt;Disabling ad-blocking extensions&lt;/li&gt; 
   &lt;li&gt;Checking browser console for specific error messages&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;p&gt;Ollama Deep Researcher is inspired by &lt;a href=&quot;https://arxiv.org/html/2410.04343v1#:~:text=To%20tackle%20this%20issue%2C%20we,used%20to%20generate%20intermediate%20answers.&quot;&gt;IterDRAG&lt;/a&gt;. This approach will decompose a query into sub-queries, retrieve documents for each one, answer the sub-query, and then build on the answer by retrieving docs for the second sub-query. Here, we do similar:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Given a user-provided topic, use a local LLM (via &lt;a href=&quot;https://ollama.com/search&quot;&gt;Ollama&lt;/a&gt;) to generate a web search query&lt;/li&gt; 
 &lt;li&gt;Uses a search engine (configured for &lt;a href=&quot;https://duckduckgo.com/&quot;&gt;DuckDuckGo&lt;/a&gt;, &lt;a href=&quot;https://www.tavily.com/&quot;&gt;Tavily&lt;/a&gt;, or &lt;a href=&quot;https://www.perplexity.ai/hub/blog/introducing-the-sonar-pro-api&quot;&gt;Perplexity&lt;/a&gt;) to find relevant sources&lt;/li&gt; 
 &lt;li&gt;Uses LLM to summarize the findings from web search related to the user-provided research topic&lt;/li&gt; 
 &lt;li&gt;Then, it uses the LLM to reflect on the summary, identifying knowledge gaps&lt;/li&gt; 
 &lt;li&gt;It generates a new search query to address the knowledge gaps&lt;/li&gt; 
 &lt;li&gt;The process repeats, with the summary being iteratively updated with new information from web search&lt;/li&gt; 
 &lt;li&gt;It will repeat down the research rabbit hole&lt;/li&gt; 
 &lt;li&gt;Runs for a configurable number of iterations (see &lt;code&gt;configuration&lt;/code&gt; tab)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Outputs&lt;/h2&gt; 
&lt;p&gt;The output of the graph is a markdown file containing the research summary, with citations to the sources used.&lt;/p&gt; 
&lt;p&gt;All sources gathered during research are saved to the graph state.&lt;/p&gt; 
&lt;p&gt;You can visualize them in the graph state, which is visible in LangGraph Studio:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/e8ac1c0b-9acb-4a75-8c15-4e677e92f6cb&quot; alt=&quot;Screenshot 2024-12-05 at 4 08 59 PM&quot;&gt;&lt;/p&gt; 
&lt;p&gt;The final summary is saved to the graph state as well:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/f6d997d5-9de5-495f-8556-7d3891f6bc96&quot; alt=&quot;Screenshot 2024-12-05 at 4 10 11 PM&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Deployment Options&lt;/h2&gt; 
&lt;p&gt;There are &lt;a href=&quot;https://langchain-ai.github.io/langgraph/concepts/#deployment-options&quot;&gt;various ways&lt;/a&gt; to deploy this graph.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/langchain-ai/langchain-academy/tree/main/module-6&quot;&gt;Module 6&lt;/a&gt; of LangChain Academy for a detailed walkthrough of deployment options with LangGraph.&lt;/p&gt; 
&lt;h2&gt;TypeScript Implementation&lt;/h2&gt; 
&lt;p&gt;A TypeScript port of this project (without Perplexity search) is available at: &lt;a href=&quot;https://github.com/PacoVK/ollama-deep-researcher-ts&quot;&gt;https://github.com/PacoVK/ollama-deep-researcher-ts&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Running as a Docker container&lt;/h2&gt; 
&lt;p&gt;The included &lt;code&gt;Dockerfile&lt;/code&gt; only runs LangChain Studio with ollama-deep-researcher as a service, but does not include Ollama as a dependant service. You must run Ollama separately and configure the &lt;code&gt;OLLAMA_BASE_URL&lt;/code&gt; environment variable. Optionally you can also specify the Ollama model to use by providing the &lt;code&gt;OLLAMA_MODEL&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;p&gt;Clone the repo and build an image:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ docker build -t ollama-deep-researcher .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the container:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ docker run --rm -it -p 2024:2024 \
  -e SEARCH_API=&quot;tavily&quot; \ 
  -e TAVILY_API_KEY=&quot;tvly-***YOUR_KEY_HERE***&quot; \
  -e OLLAMA_BASE_URL=&quot;http://host.docker.internal:11434/&quot; \
  -e OLLAMA_MODEL=&quot;llama3.2&quot; \  
  ollama-deep-researcher
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;NOTE: You will see log message:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;2025-02-10T13:45:04.784915Z [info     ] 🎨 Opening Studio in your browser... [browser_opener] api_variant=local_dev message=🎨 Opening Studio in your browser...
URL: https://smith.langchain.com/studio/?baseUrl=http://0.0.0.0:2024
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;...but the browser will not launch from the container.&lt;/p&gt; 
&lt;p&gt;Instead, visit this link with the correct baseUrl IP address: &lt;a href=&quot;https://smith.langchain.com/studio/thread?baseUrl=http://127.0.0.1:2024&quot;&gt;&lt;code&gt;https://smith.langchain.com/studio/thread?baseUrl=http://127.0.0.1:2024&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>glanceapp/glance</title>
      <link>https://github.com/glanceapp/glance</link>
      <description>&lt;p&gt;A self-hosted dashboard that puts all your feeds in one place&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;em&gt;What if you could see everything at a...&lt;/em&gt;&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Glance&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/#installation&quot;&gt;Install&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md&quot;&gt;Configuration&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/preconfigured-pages.md&quot;&gt;Preconfigured pages&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/themes.md&quot;&gt;Themes&lt;/a&gt; • &lt;a href=&quot;https://discord.com/invite/7KQ7Xa9kJd&quot;&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/readme-main-image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Various widgets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;RSS feeds&lt;/li&gt; 
 &lt;li&gt;Subreddit posts&lt;/li&gt; 
 &lt;li&gt;Hacker News posts&lt;/li&gt; 
 &lt;li&gt;Weather forecasts&lt;/li&gt; 
 &lt;li&gt;YouTube channel uploads&lt;/li&gt; 
 &lt;li&gt;Twitch channels&lt;/li&gt; 
 &lt;li&gt;Market prices&lt;/li&gt; 
 &lt;li&gt;Docker containers status&lt;/li&gt; 
 &lt;li&gt;Server stats&lt;/li&gt; 
 &lt;li&gt;Custom widgets&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md&quot;&gt;and many more...&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fast and lightweight&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Low memory usage&lt;/li&gt; 
 &lt;li&gt;Few dependencies&lt;/li&gt; 
 &lt;li&gt;Minimal vanilla JS&lt;/li&gt; 
 &lt;li&gt;Single &amp;lt;20mb binary available for multiple OSs &amp;amp; architectures and just as small Docker container&lt;/li&gt; 
 &lt;li&gt;Uncached pages usually load within ~1s (depending on internet speed and number of widgets)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tons of customizability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Different layouts&lt;/li&gt; 
 &lt;li&gt;As many pages/tabs as you need&lt;/li&gt; 
 &lt;li&gt;Numerous configuration options for each widget&lt;/li&gt; 
 &lt;li&gt;Multiple styles for some widgets&lt;/li&gt; 
 &lt;li&gt;Custom CSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Optimized for mobile devices&lt;/h3&gt; 
&lt;p&gt;Because you&#39;ll want to take it with you on the go.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/mobile-preview.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Themeable&lt;/h3&gt; 
&lt;p&gt;Easily create your own theme by tweaking a few numbers or choose from one of the &lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/themes.md&quot;&gt;already available themes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/themes-example.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Configuration is done through YAML files, to learn more about how the layout works, how to add more pages and how to configure widgets, visit the &lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md&quot;&gt;configuration documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Preview example configuration file&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;pages:
  - name: Home
    columns:
      - size: small
        widgets:
          - type: calendar
            first-day-of-week: monday

          - type: rss
            limit: 10
            collapse-after: 3
            cache: 12h
            feeds:
              - url: https://selfh.st/rss/
                title: selfh.st
                limit: 4
              - url: https://ciechanow.ski/atom.xml
              - url: https://www.joshwcomeau.com/rss.xml
                title: Josh Comeau
              - url: https://samwho.dev/rss.xml
              - url: https://ishadeed.com/feed.xml
                title: Ahmad Shadeed

          - type: twitch-channels
            channels:
              - theprimeagen
              - j_blow
              - piratesoftware
              - cohhcarnage
              - christitustech
              - EJ_SA

      - size: full
        widgets:
          - type: group
            widgets:
              - type: hacker-news
              - type: lobsters

          - type: videos
            channels:
              - UCXuqSBlHAE6Xw-yeJA0Tunw # Linus Tech Tips
              - UCR-DXc1voovS8nhAvccRZhg # Jeff Geerling
              - UCsBjURrPoezykLs9EqgamOA # Fireship
              - UCBJycsmduvYEL83R_U4JriQ # Marques Brownlee
              - UCHnyfMqiRRG1u-2MsSQLbXA # Veritasium

          - type: group
            widgets:
              - type: reddit
                subreddit: technology
                show-thumbnails: true
              - type: reddit
                subreddit: selfhosted
                show-thumbnails: true

      - size: small
        widgets:
          - type: weather
            location: London, United Kingdom
            units: metric
            hour-format: 12h

          - type: markets
            markets:
              - symbol: SPY
                name: S&amp;amp;P 500
              - symbol: BTC-USD
                name: Bitcoin
              - symbol: NVDA
                name: NVIDIA
              - symbol: AAPL
                name: Apple
              - symbol: MSFT
                name: Microsoft

          - type: releases
            cache: 1d
            repositories:
              - glanceapp/glance
              - go-gitea/gitea
              - immich-app/immich
              - syncthing/syncthing
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Choose one of the following methods:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Docker compose using provided directory structure (recommended)&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Create a new directory called &lt;code&gt;glance&lt;/code&gt; as well as the template files within it by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir glance &amp;amp;&amp;amp; cd glance &amp;amp;&amp;amp; curl -sL https://github.com/glanceapp/docker-compose-template/archive/refs/heads/main.tar.gz | tar -xzf - --strip-components 2
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/glanceapp/docker-compose-template/tree/main/root&quot;&gt;click here to view the files that will be created&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;Then, edit the following files as desired:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; to configure the port, volumes and other containery things&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;config/home.yml&lt;/code&gt; to configure the widgets or layout of the home page&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;config/glance.yml&lt;/code&gt; if you want to change the theme or add more pages&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;details&gt; 
  &lt;summary&gt;Other files you may want to edit&lt;/summary&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;.env&lt;/code&gt; to configure environment variables that will be available inside configuration files&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;assets/user.css&lt;/code&gt; to add custom CSS&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/details&gt; 
 &lt;p&gt;When ready, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you encounter any issues, you can check the logs by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker compose logs
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Docker compose manual&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file with the following contents:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;services:
  glance:
    container_name: glance
    image: glanceapp/glance
    volumes:
      - ./config:/app/config
    ports:
      - 8080:8080
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Then, create a new directory called &lt;code&gt;config&lt;/code&gt; and download the example starting &lt;a href=&quot;https://github.com/glanceapp/glance/raw/main/docs/glance.yml&quot;&gt;&lt;code&gt;glance.yml&lt;/code&gt;&lt;/a&gt; file into it by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir config &amp;amp;&amp;amp; wget -O config/glance.yml https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Feel free to edit the &lt;code&gt;glance.yml&lt;/code&gt; file to your liking, and when ready run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you encounter any issues, you can check the logs by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker logs glance
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Manual binary installation&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Precompiled binaries are available for Linux, Windows and macOS (x86, x86_64, ARM and ARM64 architectures).&lt;/p&gt; 
 &lt;h3&gt;Linux&lt;/h3&gt; 
 &lt;p&gt;Visit the &lt;a href=&quot;https://github.com/glanceapp/glance/releases/latest&quot;&gt;latest release page&lt;/a&gt; for available binaries. You can place the binary in &lt;code&gt;/opt/glance/&lt;/code&gt; and have it start with your server via a &lt;a href=&quot;https://linuxhandbook.com/create-systemd-services/&quot;&gt;systemd service&lt;/a&gt;. By default, when running the binary, it will look for a &lt;code&gt;glance.yml&lt;/code&gt; file in the directory it&#39;s placed in. To specify a different path for the config file, use the &lt;code&gt;--config&lt;/code&gt; option:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;/opt/glance/glance --config /etc/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To grab a starting template for the config file, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;wget https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Windows&lt;/h3&gt; 
 &lt;p&gt;Download and extract the executable from the &lt;a href=&quot;https://github.com/glanceapp/glance/releases/latest&quot;&gt;latest release&lt;/a&gt; (most likely the file called &lt;code&gt;glance-windows-amd64.zip&lt;/code&gt; if you&#39;re on a 64-bit system) and place it in a folder of your choice. Then, create a new text file called &lt;code&gt;glance.yml&lt;/code&gt; in the same folder and paste the content from &lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml&quot;&gt;here&lt;/a&gt; in it. You should then be able to run the executable and access the dashboard by visiting &lt;code&gt;http://localhost:8080&lt;/code&gt; in your browser.&lt;/p&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Other&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Glance can also be installed through the following 3rd party channels:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://community-scripts.github.io/ProxmoxVE/scripts?id=glance&quot;&gt;Proxmox VE Helper Script&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://search.nixos.org/packages?channel=unstable&amp;amp;show=glance&quot;&gt;NixOS package&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://coolify.io/docs/services/glance/&quot;&gt;Coolify.io&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;Choose one of the following methods:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build binary with Go&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Requirements: &lt;a href=&quot;https://go.dev/dl/&quot;&gt;Go&lt;/a&gt; &amp;gt;= v1.23&lt;/p&gt; 
 &lt;p&gt;To build the project for your current OS and architecture, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;go build -o build/glance .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To build for a specific OS and architecture, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;GOOS=linux GOARCH=amd64 go build -o build/glance .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href=&quot;https://go.dev/doc/install/source#:~:text=$GOOS%20and%20$GOARCH&quot;&gt;&lt;em&gt;click here for a full list of GOOS and GOARCH combinations&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Alternatively, if you just want to run the app without creating a binary, like when you&#39;re testing out changes, you can run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;go run .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build project and Docker image with Docker&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Requirements: &lt;a href=&quot;https://docs.docker.com/engine/install/&quot;&gt;Docker&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;To build the project and image using just Docker, run:&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;(replace &lt;code&gt;owner&lt;/code&gt; with your name or organization)&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker build -t owner/glance:latest .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you wish to push the image to a registry (by default Docker Hub), run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker push owner/glance:latest
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Does the information on the page update automatically?&lt;/strong&gt;&lt;/summary&gt; No, a page refresh is required to update the information. Some things do dynamically update where it makes sense, like the clock widget and the relative time showing how long ago something happened. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;How frequently do widgets update?&lt;/strong&gt;&lt;/summary&gt; No requests are made periodically in the background, information is only fetched upon loading the page and then cached. The default cache lifetime is different for each widget and can be configured. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Can I create my own widgets?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Yes, there are multiple ways to create custom widgets:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;iframe&lt;/code&gt; widget - allows you to embed things from other websites&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;html&lt;/code&gt; widget - allows you to insert your own static HTML&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;extension&lt;/code&gt; widget - fetch HTML from a URL&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;custom-api&lt;/code&gt; widget - fetch JSON from a URL and render it using custom HTML&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Can I change the title of a widget?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Yes, the title of all widgets can be changed by specifying the &lt;code&gt;title&lt;/code&gt; property in the widget&#39;s configuration:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- type: rss
  title: My custom title

- type: markets
  title: My custom title

- type: videos
  title: My custom title

# and so on for all widgets...
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Feature requests&lt;/h2&gt; 
&lt;p&gt;New feature suggestions are always welcome and will be considered, though please keep in mind that some of them may be out of scope for what the project is trying to achieve (or is reasonably capable of). If you have an idea for a new feature and would like to share it, you can do so &lt;a href=&quot;https://github.com/glanceapp/glance/issues/new?template=feature_request.yml&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Feature requests are tagged with one of the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glanceapp/glance/labels/roadmap&quot;&gt;Roadmap&lt;/a&gt; - will be implemented in a future release&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glanceapp/glance/labels/backlog&quot;&gt;Backlog&lt;/a&gt; - may be implemented in the future but needs further feedback or interest from the community&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glanceapp/glance/labels/icebox&quot;&gt;Icebox&lt;/a&gt; - no plans to implement as it doesn&#39;t currently align with the project&#39;s goals or capabilities, may be revised at a later date&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;Contributing guidelines&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before working on a new feature it&#39;s preferable to submit a feature request first and state that you&#39;d like to implement it yourself&lt;/li&gt; 
 &lt;li&gt;Please don&#39;t submit PRs for feature requests that are either in the roadmap&lt;sup&gt;[1]&lt;/sup&gt;, backlog&lt;sup&gt;[2]&lt;/sup&gt; or icebox&lt;sup&gt;[3]&lt;/sup&gt;&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;dev&lt;/code&gt; for the base branch if you&#39;re adding new features or fixing bugs, otherwise use &lt;code&gt;main&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Avoid introducing new dependencies&lt;/li&gt; 
 &lt;li&gt;Avoid making backwards-incompatible configuration changes&lt;/li&gt; 
 &lt;li&gt;Avoid introducing new colors or hard-coding colors, use the standard &lt;code&gt;primary&lt;/code&gt;, &lt;code&gt;positive&lt;/code&gt; and &lt;code&gt;negative&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For icons, try to use &lt;a href=&quot;https://heroicons.com/&quot;&gt;heroicons&lt;/a&gt; where applicable&lt;/li&gt; 
 &lt;li&gt;Provide a screenshot of the changes if UI related where possible&lt;/li&gt; 
 &lt;li&gt;No &lt;code&gt;package.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;&lt;sup&gt;[1] [2] [3]&lt;/sup&gt;&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;[1] The feature likely already has work put into it that may conflict with your implementation&lt;/p&gt; 
 &lt;p&gt;[2] The demand, implementation or functionality for this feature is not yet clear&lt;/p&gt; 
 &lt;p&gt;[3] No plans to add this feature for the time being&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Thank you&lt;/h2&gt; 
&lt;p&gt;To all the people who were generous enough to &lt;a href=&quot;https://github.com/sponsors/glanceapp&quot;&gt;sponsor&lt;/a&gt; the project and to everyone who has contributed in any way, be it PRs, submitting issues, helping others in the discussions or Discord server, creating guides and tools or just mentioning Glance on social media. Your support is greatly appreciated and helps keep the project going.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
