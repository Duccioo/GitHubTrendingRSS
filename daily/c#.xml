<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub C# Daily Trending</title>
    <description>Daily Trending of C# in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 01:29:34 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>icsharpcode/ILSpy</title>
      <link>https://github.com/icsharpcode/ILSpy</link>
      <description>&lt;p&gt;.NET Decompiler with support for PDB generation, ReadyToRun, Metadata (&amp;more) - cross-platform!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ILSpy &lt;a href=&quot;https://nuget.org/packages/ICSharpCode.Decompiler&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ICSharpCode.Decompiler.svg?sanitize=true&quot; alt=&quot;NuGet&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/icsharpcode/ILSpy/workflows/Build%20ILSpy/badge.svg?branch=master&quot; alt=&quot;Build ILSpy&quot;&gt; &lt;a href=&quot;https://hachyderm.io/@ilspy&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?label=Mastodon&amp;amp;query=totalItems&amp;amp;url=https%3A%2F%2Fhachyderm.io%2Fusers%2Filspy%2Ffollowers.json&amp;amp;logo=mastodon&amp;amp;style=flat-square&quot; alt=&quot;Mastodon&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bsky.app/profile/ilspy.bsky.social&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Bluesky-0285FF?logo=bluesky&amp;amp;logoColor=fff&quot; alt=&quot;Bluesky&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://visualstudiogallery.msdn.microsoft.com/8ef1d688-f80c-4380-8004-2ec7f814e7de&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS%20Extension-ILSpy-blue.svg?sanitize=true&quot; alt=&quot;ILSpy VS extension&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;ILSpy is the open-source .NET assembly browser and decompiler.&lt;/p&gt; 
&lt;p&gt;Download: &lt;a href=&quot;https://github.com/icsharpcode/ILSpy/releases&quot;&gt;latest release&lt;/a&gt; | &lt;a href=&quot;https://github.com/icsharpcode/ILSpy/actions?query=workflow%3A%22Build+ILSpy%22+branch%3Amaster+is%3Asuccess+event%3Apush&quot;&gt;latest CI build (master)&lt;/a&gt; | &lt;a href=&quot;https://apps.microsoft.com/store/detail/ilspy-fresh/XP8C26VDWLP4T4&quot;&gt;Microsoft Store (RTM versions only)&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Decompiler Frontends&lt;/h2&gt; 
&lt;p&gt;Aside from the WPF UI ILSpy (downloadable via Releases, see also &lt;a href=&quot;https://github.com/icsharpcode/ILSpy/wiki/Plugins&quot;&gt;plugins&lt;/a&gt;), the following other frontends are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visual Studio 2022 ships with decompilation support for F12 enabled by default (using our engine v8.1).&lt;/li&gt; 
 &lt;li&gt;In Visual Studio 2019, you have to manually enable F12 support. Go to Tools / Options / Text Editor / C# / Advanced and check &quot;Enable navigation to decompiled source&quot;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csharp&quot;&gt;C# for Visual Studio Code&lt;/a&gt; ships with decompilation support as well. To enable, activate the setting &quot;Enable Decompilation Support&quot;.&lt;/li&gt; 
 &lt;li&gt;Our Visual Studio 2022 extension &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=SharpDevelopTeam.ILSpy2022&quot;&gt;marketplace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Our Visual Studio 2017/2019 extension &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=SharpDevelopTeam.ILSpy&quot;&gt;marketplace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Our Visual Studio Code Extension &lt;a href=&quot;https://github.com/icsharpcode/ilspy-vscode&quot;&gt;repository&lt;/a&gt; | &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=icsharpcode.ilspy-vscode&quot;&gt;marketplace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Our Linux/Mac/Windows ILSpy UI based on &lt;a href=&quot;http://www.avaloniaui.net/&quot;&gt;Avalonia&lt;/a&gt; - check out &lt;a href=&quot;https://github.com/icsharpcode/AvaloniaILSpy&quot;&gt;https://github.com/icsharpcode/AvaloniaILSpy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Our &lt;a href=&quot;https://www.nuget.org/packages/ICSharpCode.Decompiler/&quot;&gt;ICSharpCode.Decompiler&lt;/a&gt; NuGet for your own projects&lt;/li&gt; 
 &lt;li&gt;Our dotnet tool for Linux/Mac/Windows - check out &lt;a href=&quot;https://raw.githubusercontent.com/icsharpcode/ILSpy/master/ICSharpCode.ILSpyCmd&quot;&gt;ILSpyCmd&lt;/a&gt; in this repository&lt;/li&gt; 
 &lt;li&gt;Our Linux/Mac/Windows &lt;a href=&quot;https://raw.githubusercontent.com/icsharpcode/ILSpy/master/ICSharpCode.Decompiler.PowerShell&quot;&gt;PowerShell cmdlets&lt;/a&gt; in this repository&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Decompilation to C# (check out the &lt;a href=&quot;https://github.com/icsharpcode/ILSpy/issues/829&quot;&gt;language support status&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Whole-project decompilation&lt;/li&gt; 
 &lt;li&gt;Search for types/methods/properties (learn about the &lt;a href=&quot;https://github.com/icsharpcode/ILSpy/wiki/Search-Options&quot;&gt;options&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Hyperlink-based type/method/property navigation&lt;/li&gt; 
 &lt;li&gt;Base/Derived types navigation, history&lt;/li&gt; 
 &lt;li&gt;Assembly metadata explorer (&lt;a href=&quot;https://github.com/icsharpcode/ILSpy/wiki/Metadata-Explorer&quot;&gt;feature walkthrough&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;BAML to XAML decompiler&lt;/li&gt; 
 &lt;li&gt;ReadyToRun binary support for .NET Core (see the &lt;a href=&quot;https://github.com/icsharpcode/ILSpy/wiki/ILSpy.ReadyToRun&quot;&gt;tutorial&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Extensible via &lt;a href=&quot;https://github.com/icsharpcode/ILSpy/wiki/Plugins&quot;&gt;plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Additional features in DEBUG builds (&lt;a href=&quot;https://github.com/icsharpcode/ILSpy/wiki/Additional-Features-in-DEBUG-Builds&quot;&gt;for the devs&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;ILSpy is distributed under the MIT License. Please see the &lt;a href=&quot;https://raw.githubusercontent.com/icsharpcode/ILSpy/master/doc/ILSpyAboutPage.txt&quot;&gt;About&lt;/a&gt; doc for details, as well as &lt;a href=&quot;https://raw.githubusercontent.com/icsharpcode/ILSpy/master/doc/third-party-notices.txt&quot;&gt;third party notices&lt;/a&gt; for included open-source libraries.&lt;/p&gt; 
&lt;h2&gt;How to build&lt;/h2&gt; 
&lt;h4&gt;Windows:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure Windows PowerShell (at least version) 5.0 or &lt;a href=&quot;https://github.com/PowerShell/PowerShell&quot;&gt;PowerShell&lt;/a&gt; 7+ is installed.&lt;/li&gt; 
 &lt;li&gt;Clone the ILSpy repository using git.&lt;/li&gt; 
 &lt;li&gt;Execute &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; to download the ILSpy-Tests submodule (used by some test cases).&lt;/li&gt; 
 &lt;li&gt;Install Visual Studio (documented version: 17.8). You can install the necessary components in one of 3 ways: 
  &lt;ul&gt; 
   &lt;li&gt;Follow Microsoft&#39;s instructions for &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/install/import-export-installation-configurations?view=vs-2022#import-a-configuration&quot;&gt;importing a configuration&lt;/a&gt;, and import the .vsconfig file located at the root of the solution.&lt;/li&gt; 
   &lt;li&gt;Alternatively, you can open the ILSpy solution (ILSpy.sln) and Visual Studio will &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/install/import-export-installation-configurations?view=vs-2022#automatically-install-missing-components&quot;&gt;prompt you to install the missing components&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Finally, you can manually install the necessary components via the Visual Studio Installer. The workloads/components are as follows: 
    &lt;ul&gt; 
     &lt;li&gt;Workload &quot;.NET Desktop Development&quot;. This workload includes the .NET Framework 4.8 SDK and the .NET Framework 4.7.2 targeting pack, as well as the &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/8.0&quot;&gt;.NET 8.0 SDK&lt;/a&gt; (ILSpy.csproj targets .NET 8.0, but we have net472 projects too). &lt;em&gt;Note: The optional components of this workload are not required for ILSpy&lt;/em&gt;&lt;/li&gt; 
     &lt;li&gt;Workload &quot;Visual Studio extension development&quot; (ILSpy.sln contains a VS extension project) &lt;em&gt;Note: The optional components of this workload are not required for ILSpy&lt;/em&gt;&lt;/li&gt; 
     &lt;li&gt;Individual Component &quot;MSVC v143 - VS 2022 C++ x64/x86 build tools&quot; (or similar) 
      &lt;ul&gt; 
       &lt;li&gt;&lt;em&gt;The VC++ toolset is optional&lt;/em&gt;; if present it is used for &lt;code&gt;editbin.exe&lt;/code&gt; to modify the stack size used by ILSpy.exe from 1MB to 16MB, because the decompiler makes heavy use of recursion, where small stack sizes lead to problems in very complex methods.&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Open ILSpy.sln in Visual Studio. 
    &lt;ul&gt; 
     &lt;li&gt;NuGet package restore will automatically download further dependencies&lt;/li&gt; 
     &lt;li&gt;Run project &quot;ILSpy&quot; for the ILSpy UI&lt;/li&gt; 
     &lt;li&gt;Use the Visual Studio &quot;Test Explorer&quot; to see/run the tests&lt;/li&gt; 
     &lt;li&gt;If you are only interested in a specific subset of ILSpy, you can also use 
      &lt;ul&gt; 
       &lt;li&gt;ILSpy.Wpf.slnf: for the ILSpy WPF frontend&lt;/li&gt; 
       &lt;li&gt;ILSpy.XPlat.slnf: for the cross-platform CLI or PowerShell cmdlets&lt;/li&gt; 
       &lt;li&gt;ILSpy.AddIn.slnf: for the Visual Studio plugin&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Visual Studio includes a version of the .NET SDK that is managed by the Visual Studio installer - once you update, it may get upgraded too. Please note that ILSpy is only compatible with the .NET 8.0 SDK and Visual Studio will refuse to load some projects in the solution (and unit tests will fail). If this problem occurs, please manually install the .NET 8.0 SDK from &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/8.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Unix / Mac:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/8.0&quot;&gt;.NET 8.0 SDK&lt;/a&gt; is installed.&lt;/li&gt; 
 &lt;li&gt;Make sure &lt;a href=&quot;https://github.com/PowerShell/PowerShell&quot;&gt;PowerShell&lt;/a&gt; is installed (formerly known as PowerShell Core)&lt;/li&gt; 
 &lt;li&gt;Clone the repository using git.&lt;/li&gt; 
 &lt;li&gt;Execute &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; to download the ILSpy-Tests submodule (used by some test cases).&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;dotnet build ILSpy.XPlat.slnf&lt;/code&gt; to build the non-Windows flavors of ILSpy (.NET Core Global Tool and PowerShell Core).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to contribute&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report bugs&lt;/li&gt; 
 &lt;li&gt;If you want to contribute a pull request, please add &lt;a href=&quot;https://github.com/icsharpcode/ILSpy/raw/master/BuildTools/pre-commit&quot;&gt;https://github.com/icsharpcode/ILSpy/blob/master/BuildTools/pre-commit&lt;/a&gt; to your &lt;code&gt;.git/hooks&lt;/code&gt; to prevent checking in code with wrong formatting. We use tabs and not spaces. The build server runs the same script, so any pull requests using wrong formatting will fail.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Current and past &lt;a href=&quot;https://github.com/icsharpcode/ILSpy/graphs/contributors&quot;&gt;contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Privacy Policy for ILSpy&lt;/h2&gt; 
&lt;p&gt;ILSpy does not collect any personally identifiable information, nor does it send user files to 3rd party services. ILSpy does not use any APM (Application Performance Management) service to collect telemetry or metrics.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/maui</title>
      <link>https://github.com/dotnet/maui</link>
      <description>&lt;p&gt;.NET MAUI is the .NET Multi-platform App UI, a framework for building native device applications spanning mobile, tablet, and desktop.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Multi-platform App UI (.NET MAUI)&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/xamarin/public/_build/latest?definitionId=57&amp;amp;repoName=dotnet%2Fmaui&amp;amp;branchName=main&quot;&gt;&lt;img src=&quot;https://dev.azure.com/xamarin/public/_apis/build/status/MAUI-public?repoName=dotnet%2Fmaui&amp;amp;branchName=main&amp;amp;label=Public&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://devdiv.visualstudio.com/DevDiv/_build/latest?definitionId=13330&amp;amp;repoName=dotnet%2Fmaui&amp;amp;branchName=main&quot;&gt;&lt;img src=&quot;https://devdiv.visualstudio.com/DevDiv/_apis/build/status/MAUI?repoName=dotnet%2Fmaui&amp;amp;branchName=main&amp;amp;label=Private&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://dotnet.microsoft.com/en-us/apps/maui&quot;&gt;.NET Multi-platform App UI (.NET MAUI)&lt;/a&gt; is a cross-platform framework for creating mobile and desktop apps with C# and XAML. Using .NET MAUI, you can develop apps that can run on Android, iOS, iPadOS, macOS, and Windows from a single shared codebase.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dot.net/maui&quot;&gt;Install .NET MAUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/dotnet/maui&quot;&gt;.NET MAUI Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/maui-samples&quot;&gt;.NET MAUI Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/maui/main/.github/DEVELOPMENT.md&quot;&gt;Development Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;.NET Multi-platform App UI (.NET MAUI) is the evolution of Xamarin.Forms that expand capabilities beyond mobile Android and iOS into desktop apps for Windows and macOS. With .NET MAUI, you can build apps that perform great on any device that runs Windows, macOS, Android, &amp;amp; iOS from a single codebase. Coupled with Visual Studio productivity tools and emulators, .NET and Visual Studio significantly speed up the development process for building apps that target the widest possible set of devices. Use a single development stack that supports the best-of-breed solutions for all modern workloads with a unified SDK, base class libraries, and a toolchain. &lt;a href=&quot;https://docs.microsoft.com/dotnet/maui/what-is-maui&quot;&gt;Read More&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotnet/maui/main/Assets/maui-weather-hero-sm.png&quot; alt=&quot;.NET MAUI Weather App on all platforms&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Current News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;November 13, 2024 - &lt;a href=&quot;https://learn.microsoft.com/dotnet/maui/whats-new/dotnet-9&quot;&gt;What&#39;s new in .NET MAUI for .NET 9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;November 12, 2024 - &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-dotnet-9/#.net-maui-%E2%80%93-enhancing-multi-platform-app-development&quot;&gt;Announcing .NET 9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;October 22, 2024 - &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/dotnet-maui-welcomes-syncfusion-open-source-contributions/&quot;&gt;.NET MAUI Welcomes Syncfusion Open-source Contributions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/category/net-maui/&quot;&gt;.NET MAUI Blog&lt;/a&gt; and visit the &lt;a href=&quot;https://github.com/dotnet/maui/wiki/News&quot;&gt;News&lt;/a&gt; wiki page for more news and updates.&lt;/p&gt; 
&lt;h2&gt;FAQs&lt;/h2&gt; 
&lt;p&gt;Do you have questions? Do not worry; we have prepared a complete &lt;a href=&quot;https://github.com/dotnet/maui/wiki/FAQs&quot;&gt;FAQ&lt;/a&gt; answering the most common questions.&lt;/p&gt; 
&lt;h2&gt;How to Engage, Contribute, and Give Feedback&lt;/h2&gt; 
&lt;p&gt;Some of the best ways to &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/maui/main/.github/CONTRIBUTING.md&quot;&gt;contribute&lt;/a&gt; are to try things out, file issues, join in design conversations, and make pull-requests. Proposals for changes specific to MAUI can be found &lt;a href=&quot;https://github.com/dotnet/maui/issues&quot;&gt;here for discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/maui/main/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/maui/main/.github/CODE_OF_CONDUCT.md&quot;&gt;CODE-OF-CONDUCT&lt;/a&gt; and the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/maui/main/.github/DEVELOPMENT.md&quot;&gt;Development Guide&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AzureAD/microsoft-identity-web</title>
      <link>https://github.com/AzureAD/microsoft-identity-web</link>
      <description>&lt;p&gt;Helps creating protected web apps and web APIs with Microsoft identity platform and Azure AD B2C&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft Identity Web&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Identity.Web&quot;&gt;Microsoft Identity Web&lt;/a&gt; is a library which contains a set of reusable classes used in conjunction with ASP.NET Core for integrating with the &lt;a href=&quot;https://learn.microsoft.com/azure/active-directory/develop/&quot;&gt;Microsoft identity platform&lt;/a&gt; (formerly &lt;em&gt;Azure AD v2.0 endpoint&lt;/em&gt;) and &lt;a href=&quot;https://learn.microsoft.com/azure/active-directory-b2c/&quot;&gt;AAD B2C&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This library is for specific usage with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/wiki/web-apps&quot;&gt;Web applications&lt;/a&gt;, which sign in users and, optionally, call web APIs&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/wiki/web-apis&quot;&gt;Protected web APIs&lt;/a&gt;, which optionally call protected downstream web APIs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Quick links:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/wiki&quot;&gt;Conceptual documentation&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/wiki#getting-started-with-microsoft-identity-web&quot;&gt;Getting Started&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/api/microsoft.identity.web?view=azure-dotnet-preview&quot;&gt;Reference documentation&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/wiki/web-app-samples&quot;&gt;Sample Code Web App&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/wiki/web-api-samples&quot;&gt;Sample Code Web API&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://raw.githubusercontent.com/AzureAD/microsoft-identity-web/master/README.md#community-help-and-support&quot;&gt;Support&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
&lt;/table&gt; 
&lt;h2&gt;Nuget package&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Identity.Web/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Microsoft.Identity.Web.svg?style=flat-square&amp;amp;label=nuget&amp;amp;colorB=00b200&quot; alt=&quot;NuGet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Build Status&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://actions-badge.atrox.dev/AzureAD/microsoft-identity-web/goto&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2FAzureAD%2Fmicrosoft-identity-web%2Fbadge&amp;amp;style=flat&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Release notes, roadmap and SLA&lt;/h2&gt; 
&lt;h3&gt;Release notes and roadmap&lt;/h3&gt; 
&lt;p&gt;The Microsoft Identity Web roadmap is available from &lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/wiki/#roadmap&quot;&gt;Roadmap&lt;/a&gt; in the &lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/wiki&quot;&gt;Wiki pages&lt;/a&gt;, along with release notes.&lt;/p&gt; 
&lt;h3&gt;Support SLA&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Major versions are supported for twelve months after the release of the next major version.&lt;/li&gt; 
 &lt;li&gt;Minor versions older than N-1 are not supported. 
  &lt;blockquote&gt; 
   &lt;p&gt;Minor versions are bugfixes or features with non-breaking (additive) API changes. It is expected apps can upgrade. Therefore, we will not patch old minor versions of the library. You should also confirm, in issue repros, that you are using the latest minor version before the Microsoft Identity Web team spends time investigating an issue.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using Microsoft Identity Web&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The conceptual documentation is currently available from the &lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/wiki&quot;&gt;Wiki pages&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Code samples are available for &lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/wiki/web-app-samples&quot;&gt;web app samples&lt;/a&gt; and &lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/wiki#web-api-samples&quot;&gt;web API samples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Where do I file issues&lt;/h2&gt; 
&lt;p&gt;This is the correct repo to file &lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/issues&quot;&gt;issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community Help and Support&lt;/h2&gt; 
&lt;p&gt;If you find a bug or have a feature or documentation request, please raise the issue on &lt;a href=&quot;https://github.com/AzureAD/microsoft-identity-web/issues&quot;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We use &lt;a href=&quot;http://stackoverflow.com/questions/&quot;&gt;Stack Overflow&lt;/a&gt; with the community to provide support, using the tags &lt;code&gt;web-app&lt;/code&gt;, &lt;code&gt;web-api&lt;/code&gt;, &lt;code&gt;asp.net-core&lt;/code&gt;, &lt;code&gt;microsoft-identity-web&lt;/code&gt;. We highly recommend you ask your questions on Stack Overflow first and browse existing issues to see if someone has asked your question before.&lt;/p&gt; 
&lt;p&gt;To provide a recommendation, visit our &lt;a href=&quot;https://feedback.azure.com/forums/169401-azure-active-directory&quot;&gt;User Voice page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;We enthusiastically welcome contributions and feedback. You can clone the repo and start contributing now. Read our &lt;a href=&quot;https://raw.githubusercontent.com/AzureAD/microsoft-identity-web/master/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Security Library&lt;/h2&gt; 
&lt;p&gt;This library controls how users sign-in and access services. We recommend you always take the latest version of our library in your app when possible. We use &lt;a href=&quot;http://semver.org&quot;&gt;semantic versioning&lt;/a&gt; so you can control the risk associated with updating your app. As an example, always downloading the latest minor version number (e.g. x.&lt;em&gt;y&lt;/em&gt;.x) ensures you get the latest security and feature enhancements, but our API surface remains the same. You can always see the latest version and release notes under the Releases tab of GitHub.&lt;/p&gt; 
&lt;h2&gt;Security Reporting&lt;/h2&gt; 
&lt;p&gt;If you find a security issue with our libraries or services, please report it to &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt; with as much detail as possible. Your submission may be eligible for a bounty through the &lt;a href=&quot;http://aka.ms/bugbounty&quot;&gt;Microsoft Bounty&lt;/a&gt; program. Please do not post security issues to GitHub Issues or any other public site. We will contact you shortly upon receiving the information. We encourage you to get notifications of when security incidents occur by visiting &lt;a href=&quot;https://technet.microsoft.com/en-us/security/dd252948&quot;&gt;this page&lt;/a&gt; and subscribing to Security Advisory Alerts.&lt;/p&gt; 
&lt;h2&gt;Trademarks.&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&quot;https://www.microsoft.com/legal/intellectualproperty/trademarks&quot;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt; 
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License (the &quot;License&quot;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ScottPlot/ScottPlot</title>
      <link>https://github.com/ScottPlot/ScottPlot</link>
      <description>&lt;p&gt;Interactive plotting library for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ScottPlot&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ScottPlot/ScottPlot/actions/workflows/ci.yaml&quot;&gt;&lt;img src=&quot;https://github.com/ScottPlot/ScottPlot/actions/workflows/ci.yaml/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/ScottPlot/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/scottplot?color=004880&amp;amp;label=Downloads&amp;amp;logo=NuGet&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://scottplot.net/discord/&quot;&gt;&lt;img src=&quot;https://badgen.net/discord/members/Dru6fnY2UX?icon=discord&amp;amp;color=5562ea&amp;amp;label=Discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ScottPlot is a free and open-source plotting library for .NET&lt;/strong&gt; that makes it easy to interactively display large datasets. The &lt;a href=&quot;https://scottplot.net/cookbook/5.0/&quot;&gt;&lt;strong&gt;ScottPlot Cookbook&lt;/strong&gt;&lt;/a&gt; demonstrates how to create line plots, bar charts, pie graphs, scatter plots, and more with just a few lines of code. The &lt;strong&gt;&lt;a href=&quot;https://scottplot.net/demo/&quot;&gt;ScottPlot Demo&lt;/a&gt;&lt;/strong&gt; shows how to create plots in GUI environments with advanced interactive behaviors. ScottPlot supports &lt;a href=&quot;https://scottplot.net/quickstart/winforms/&quot;&gt;Windows Forms&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/wpf/&quot;&gt;WPF&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/console/&quot;&gt;Console&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/unoplatform/&quot;&gt;Uno Platform&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/blazor/&quot;&gt;Blazor&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/avalonia/&quot;&gt;Avalonia&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/eto/&quot;&gt;Eto&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/notebook/&quot;&gt;Notebooks&lt;/a&gt;, and &lt;a href=&quot;https://scottplot.net/quickstart/&quot;&gt;more&lt;/a&gt;!&lt;/p&gt; 
&lt;h3&gt;Visit &lt;a href=&quot;https://ScottPlot.NET&quot;&gt;https://ScottPlot.NET&lt;/a&gt; for documentation and additional information&lt;/h3&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://scottplot.net&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ScottPlot/ScottPlot/main/dev/graphics/ScottPlot.gif&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://scottplot.net/cookbook/5.0/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ScottPlot/ScottPlot/main/dev/graphics/cookbook.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;Contributing:&lt;/strong&gt; We welcome contributions from the community! We invite contributions from anyone, including developers who may be new to contributing to open-source projects. Visit &lt;a href=&quot;https://ScottPlot.net/contributing/&quot;&gt;https://ScottPlot.net/contributing/&lt;/a&gt; to get started!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;License:&lt;/strong&gt; ScottPlot was created by &lt;a href=&quot;https://swharden.com/about/&quot;&gt;Scott W Harden&lt;/a&gt; and enhanced by &lt;a href=&quot;https://scottplot.net/changelog/&quot;&gt;many contributions&lt;/a&gt; from the &lt;a href=&quot;https://scottplot.net/contributors/&quot;&gt;open-source community&lt;/a&gt;. It is provided under the permissive &lt;a href=&quot;https://raw.githubusercontent.com/ScottPlot/ScottPlot/main/LICENSE&quot;&gt;MIT license&lt;/a&gt; and is free to modify and use for any purpose.&lt;/p&gt; 
&lt;p&gt;If you enjoy ScottPlot &lt;em&gt;&lt;strong&gt;give us a star!&lt;/strong&gt;&lt;/em&gt; ⭐&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>marticliment/UniGetUI</title>
      <link>https://github.com/marticliment/UniGetUI</link>
      <description>&lt;p&gt;UniGetUI: The Graphical Interface for your package managers. Could be terribly described as a package manager manager to manage your package managers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/icon.png&quot; height=&quot;40&quot;&gt;UniGetUI (formerly WingetUI)&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/releases/latest/download/UniGetUI.Installer.exe&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/marticliment/UniGetUI/3.1.6/total?style=for-the-badge&quot; alt=&quot;Downloads@latest&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/marticliment/UniGetUI/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/marticliment/UniGetUI?style=for-the-badge&quot; alt=&quot;Release Version Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/marticliment/UniGetUI/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/marticliment/UniGetUI?style=for-the-badge&quot; alt=&quot;Issues Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/marticliment/UniGetUI/issues?q=is%3Aissue+is%3Aclosed&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-closed/marticliment/UniGetUI?color=%238256d0&amp;amp;style=for-the-badge&quot; alt=&quot;Closed Issues Badge&quot;&gt;&lt;/a&gt;&lt;br&gt; The main goal of this project is to create an intuitive GUI for the most common CLI package managers for Windows 10 and 11, such as &lt;a href=&quot;https://learn.microsoft.com/en-us/windows/package-manager/&quot;&gt;WinGet&lt;/a&gt;, &lt;a href=&quot;https://scoop.sh/&quot;&gt;Scoop&lt;/a&gt;, &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/&quot;&gt;Pip&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;Npm&lt;/a&gt;, &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-tool-install&quot;&gt;.NET Tool&lt;/a&gt;, &lt;a href=&quot;https://www.powershellgallery.com/&quot;&gt;PowerShell Gallery&lt;/a&gt; and more (Check out the package manager compatibility table)!. With this app, you can easily download, install, update, and uninstall any software published on the supported package managers — and much more!&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#supported-package-managers&quot;&gt;Supported Package Managers Table&lt;/a&gt; for more details!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This project has no connection with any supported package managers — it&#39;s completely unofficial. Be aware that I, the developer of UniGetUI, am NOT responsible for the downloaded software. Proceed with caution&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fmarticliment.com%2Fresources%2Fbadges%2Fdev-status.json&quot; alt=&quot;Endpoint Badge&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/marticliment/WingetUI/dotnet-test.yml?branch=main&amp;amp;style=for-the-badge&amp;amp;label=Tests&quot; alt=&quot;GitHub Actions Workflow Status&quot;&gt;&lt;br&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] &lt;strong&gt;The OFFICIAL website for UniGetUI is &lt;a href=&quot;https://www.marticliment.com/unigetui/&quot;&gt;https://www.marticliment.com/unigetui/&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;Any other website should be considered unofficial, despite what they may say.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Support the developer&lt;/h2&gt; 
&lt;p&gt;It really does make a big difference, and is very much appreciated. Thanks :)&lt;br&gt; &lt;a href=&quot;https://ko-fi.com/P5P86KKPB&quot;&gt;&lt;img src=&quot;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&quot; alt=&quot;ko-fi&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.marticliment.com/unigetui/&quot;&gt;UniGetUI Homepage&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#table-of-contents&quot;&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#update-UniGetUI&quot;&gt;Update UniGetUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#support-the-developer&quot;&gt;Support the developer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#features&quot;&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#supported-package-managers&quot;&gt;Supported Package Managers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#translating-UniGetUI-to-other-languages&quot;&gt;Translating UniGetUI&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#currently-supported-languages&quot;&gt;Currently supported languages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#screenshots&quot;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#frequently-asked-questions&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/raw/main/cli-arguments.md&quot;&gt;Command-line Arguments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://hellogithub.com/repository/46bec642537f449a857215e39a1d64ae&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=46bec642537f449a857215e39a1d64ae&amp;amp;claim_uid=u6sFoX4hC2HztbD&amp;amp;theme=small&quot; alt=&quot;Featured｜HelloGitHub&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;There are multiple ways to install UniGetUI — choose whichever one you prefer!&lt;/p&gt; 
&lt;h3&gt;Microsoft Store installation (recommended)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://apps.microsoft.com/detail/xpfftq032ptphf&quot;&gt;&lt;img alt=&quot;alt_text&quot; width=&quot;240px&quot; src=&quot;https://get.microsoft.com/images/en-us%20dark.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Download UniGetUI installer:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/marticliment/UniGetUI?style=for-the-badge&quot; alt=&quot;GitHub Release&quot;&gt;&lt;/p&gt; 
&lt;p align=&quot;left&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/releases/latest/download/WingetUI.Installer.exe&quot;&gt;Click here to download UniGetUI&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; 
&lt;h3&gt;Install UniGetUI via WinGet:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/winget/v/MartiCliment.UniGetUI?style=for-the-badge&quot; alt=&quot;WinGet Package Version&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;winget install --exact --id MartiCliment.UniGetUI --source winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install UniGetUI via Scoop:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/scoop/v/unigetui?bucket=extras&amp;amp;style=for-the-badge&quot; alt=&quot;Scoop version&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;scoop bucket add extras
scoop install extras/unigetui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install UniGetUI via Chocolatey:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/chocolatey/v/wingetui?style=for-the-badge&quot; alt=&quot;Chocolatey Version&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;choco install wingetui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Update UniGetUI&lt;/h2&gt; 
&lt;p&gt;UniGetUI has a built-in autoupdater. However, it can also be updated like any other package within UniGetUI (since UniGetUI is available from WinGet, Scoop and Chocolatey).&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install, update, and remove software from your system easily at one click: UniGetUI combines the packages from the most used package managers for windows: Winget, Chocolatey, Scoop, Pip, Npm and .NET Tool.&lt;/li&gt; 
 &lt;li&gt;Discover new packages and filter them to easily find the package you want.&lt;/li&gt; 
 &lt;li&gt;View detailed metadata about any package before installing it. Get the direct download URL or the name of the publisher, as well as the size of the download.&lt;/li&gt; 
 &lt;li&gt;Easily bulk-install, update, or uninstall multiple packages at once selecting multiple packages before performing an operation&lt;/li&gt; 
 &lt;li&gt;Automatically update packages, or be notified when updates become available. Skip versions or completely ignore updates on a per-package basis.&lt;/li&gt; 
 &lt;li&gt;Manage your available updates at the touch of a button from the &lt;strong&gt;Widgets pane&lt;/strong&gt; or from &lt;strong&gt;Dev Home&lt;/strong&gt; pane with &lt;a href=&quot;https://apps.microsoft.com/detail/9NB9M5KZ8SLX&quot;&gt;Widgets for UniGetUI&lt;/a&gt;*.&lt;/li&gt; 
 &lt;li&gt;The system tray icon will also show the available updates and installed packages, to efficiently update a program or remove a package from your system.&lt;/li&gt; 
 &lt;li&gt;Easily customize how and where packages are installed. Select different installation options and switches for each package. Install an older version or force to install a 32 bit architecture. [But don&#39;t worry, those options will be saved for future updates for this package*]&lt;/li&gt; 
 &lt;li&gt;Share packages with your friends to show them off that program you found. Here is an example: &lt;a href=&quot;https://marticliment.com/unigetui/share/?pname=Google%20Chrome&amp;amp;pid=Google.Chrome&amp;amp;psource=Winget:%20winget&quot;&gt;Hey @friend, Check out this program!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Export custom lists of packages to then import them to another machine and install those packages with previously specified, custom installation parameters. Setting up machines or configuring a specific software setup has never been easier.&lt;/li&gt; 
 &lt;li&gt;Backup your packages to a local file to easily recover your setup in a matter of seconds when migrating to a new machine*&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Package Managers&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; All package managers do support basic install, update, and uninstall processes, as well as checking for updates, finding new packages, and retrieving details from a package.&lt;/p&gt; 
&lt;img src=&quot;https://marticliment.com/unigetui/extra/supported-managers.svg?sanitize=true&quot;&gt; 
&lt;p&gt;✅: Supported on UniGetUI&lt;br&gt; ☑️: Not directly supported but can be easily achieved&lt;br&gt; ⚠️: May not work in some cases&lt;br&gt; ❌: Not supported by the Package Manager&lt;br&gt; &lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Translating UniGetUI to other languages&lt;/h1&gt; 
&lt;p&gt;To translate UniGetUI to other languages or to update an old translation, please see &lt;a href=&quot;https://github.com/marticliment/UniGetUI/wiki#translating-wingetui&quot;&gt;Translating UniGetUI - UniGetUI Wiki&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;Currently Supported languages&lt;/h2&gt; 
&lt;!-- Autogenerated translations --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Language&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Translated&lt;/th&gt; 
   &lt;th&gt;Translator(s)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/sa.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Arabic - عربي‎&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;90%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Abdu11ahAS&quot;&gt;Abdu11ahAS&lt;/a&gt;, &lt;a href=&quot;https://github.com/Abdullah-Dev115&quot;&gt;Abdullah-Dev115&lt;/a&gt;, &lt;a href=&quot;https://github.com/bassuny3003&quot;&gt;bassuny3003&lt;/a&gt;, &lt;a href=&quot;https://github.com/DaRandomCube&quot;&gt;DaRandomCube&lt;/a&gt;, &lt;a href=&quot;https://github.com/FancyCookin&quot;&gt;FancyCookin&lt;/a&gt;, &lt;a href=&quot;https://github.com/mo9a7i&quot;&gt;mo9a7i&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/bg.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Bulgarian - български&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;47%&lt;/td&gt; 
   &lt;td&gt;Vasil Kolev&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/bd.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Bangla - বাংলা&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;72%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/fluentmoheshwar&quot;&gt;fluentmoheshwar&lt;/a&gt;, &lt;a href=&quot;https://github.com/itz-rj-here&quot;&gt;itz-rj-here&lt;/a&gt;, Mushfiq Iqbal Rayon, Nilavra Bhattacharya, &lt;a href=&quot;https://github.com/samiulislamsharan&quot;&gt;samiulislamsharan&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ad.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Catalan - Català&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/cz.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Czech - Čeština&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/mlisko&quot;&gt;mlisko&lt;/a&gt;, &lt;a href=&quot;https://github.com/panther7&quot;&gt;panther7&lt;/a&gt;, &lt;a href=&quot;https://github.com/xtorlukas&quot;&gt;xtorlukas&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/dk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Danish - Dansk&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;60%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/AAUCrisp&quot;&gt;AAUCrisp&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikkolukas&quot;&gt;mikkolukas&lt;/a&gt;, &lt;a href=&quot;https://github.com/siewers&quot;&gt;siewers&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/de.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; German - Deutsch&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/1270o1&quot;&gt;1270o1&lt;/a&gt;, &lt;a href=&quot;https://github.com/alxhu-dev&quot;&gt;alxhu-dev&lt;/a&gt;, &lt;a href=&quot;https://github.com/Araxxas&quot;&gt;Araxxas&lt;/a&gt;, &lt;a href=&quot;https://github.com/CanePlayz&quot;&gt;CanePlayz&lt;/a&gt;, &lt;a href=&quot;https://github.com/Datacra5H&quot;&gt;Datacra5H&lt;/a&gt;, &lt;a href=&quot;https://github.com/ebnater&quot;&gt;ebnater&lt;/a&gt;, &lt;a href=&quot;https://github.com/martinwilco&quot;&gt;martinwilco&lt;/a&gt;, &lt;a href=&quot;https://github.com/michaelmairegger&quot;&gt;michaelmairegger&lt;/a&gt;, &lt;a href=&quot;https://github.com/Seeloewen&quot;&gt;Seeloewen&lt;/a&gt;, &lt;a href=&quot;https://github.com/tkohlmeier&quot;&gt;tkohlmeier&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/gr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Greek - Ελληνικά&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;84%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/antwnhsx&quot;&gt;antwnhsx&lt;/a&gt;, &lt;a href=&quot;https://github.com/panos78&quot;&gt;panos78&lt;/a&gt;, &lt;a href=&quot;https://github.com/seijind&quot;&gt;seijind&lt;/a&gt;, &lt;a href=&quot;https://github.com/thunderstrike116&quot;&gt;thunderstrike116&lt;/a&gt;, &lt;a href=&quot;https://github.com/wobblerrrgg&quot;&gt;wobblerrrgg&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ee.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Estonian - Eesti&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;49%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/artjom3729&quot;&gt;artjom3729&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/gb.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; English - English&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;, &lt;a href=&quot;https://github.com/ppvnf&quot;&gt;ppvnf&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/es.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Spanish - Castellano&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apazga&quot;&gt;apazga&lt;/a&gt;, &lt;a href=&quot;https://github.com/dalbitresb12&quot;&gt;dalbitresb12&lt;/a&gt;, &lt;a href=&quot;https://github.com/evaneliasyoung&quot;&gt;evaneliasyoung&lt;/a&gt;, &lt;a href=&quot;https://github.com/guplem&quot;&gt;guplem&lt;/a&gt;, &lt;a href=&quot;https://github.com/JMoreno97&quot;&gt;JMoreno97&lt;/a&gt;, &lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;, &lt;a href=&quot;https://github.com/P10Designs&quot;&gt;P10Designs&lt;/a&gt;, &lt;a href=&quot;https://github.com/rubnium&quot;&gt;rubnium&lt;/a&gt;, &lt;a href=&quot;https://github.com/uKER&quot;&gt;uKER&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ir.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Persian - فارسی‎&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;68%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Imorate&quot;&gt;Imorate&lt;/a&gt;, &lt;a href=&quot;https://github.com/itsarian&quot;&gt;itsarian&lt;/a&gt;, &lt;a href=&quot;https://github.com/Mahdi-Hazrati&quot;&gt;Mahdi-Hazrati&lt;/a&gt;, &lt;a href=&quot;https://github.com/moon24-s&quot;&gt;moon24-s&lt;/a&gt;, &lt;a href=&quot;https://github.com/saeed205&quot;&gt;saeed205&lt;/a&gt;, &lt;a href=&quot;https://github.com/smsi2001&quot;&gt;smsi2001&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/fi.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Finnish - Suomi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;98%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/simakuutio&quot;&gt;simakuutio&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/fr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; French - Français&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;BreatFR, &lt;a href=&quot;https://github.com/Entropiness&quot;&gt;Entropiness&lt;/a&gt;, Evans Costa, &lt;a href=&quot;https://github.com/PikPakPik&quot;&gt;PikPakPik&lt;/a&gt;, Rémi Guerrero, &lt;a href=&quot;https://github.com/W1L7dev&quot;&gt;W1L7dev&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Gujarati - ગુજરાતી&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;8%&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Hindi - हिंदी&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;43%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Ashu-r&quot;&gt;Ashu-r&lt;/a&gt;, &lt;a href=&quot;https://github.com/atharva_xoxo&quot;&gt;atharva_xoxo&lt;/a&gt;, &lt;a href=&quot;https://github.com/satanarious&quot;&gt;satanarious&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/hr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Croatian - Hrvatski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;48%&lt;/td&gt; 
   &lt;td&gt;Stjepan Treger&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/il.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Hebrew - עִבְרִית‎&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;80%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/maximunited&quot;&gt;maximunited&lt;/a&gt;, Oryan Hassidim&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/hu.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Hungarian - Magyar&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/gidano&quot;&gt;gidano&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/it.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Italian - Italiano&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;David Senoner, &lt;a href=&quot;https://github.com/giacobot&quot;&gt;giacobot&lt;/a&gt;, &lt;a href=&quot;https://github.com/maicol07&quot;&gt;maicol07&lt;/a&gt;, &lt;a href=&quot;https://github.com/mapi68&quot;&gt;mapi68&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrfranza&quot;&gt;mrfranza&lt;/a&gt;, Rosario Di Mauro&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/id.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Indonesian - Bahasa Indonesia&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;65%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/arthackrc&quot;&gt;arthackrc&lt;/a&gt;, &lt;a href=&quot;https://github.com/joenior&quot;&gt;joenior&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/jp.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Japanese - 日本語&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;80%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/anmoti&quot;&gt;anmoti&lt;/a&gt;, &lt;a href=&quot;https://github.com/nob-swik&quot;&gt;nob-swik&lt;/a&gt;, Nobuhiro Shintaku, sho9029, &lt;a href=&quot;https://github.com/tacostea&quot;&gt;tacostea&lt;/a&gt;, Yuki Takase&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Kannada - ಕನ್ನಡ&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;11%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/skanda890&quot;&gt;skanda890&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/kr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Korean - 한국어&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;66%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/minbert&quot;&gt;minbert&lt;/a&gt;, &lt;a href=&quot;https://github.com/shblue21&quot;&gt;shblue21&lt;/a&gt;, &lt;a href=&quot;https://github.com/VenusGirl&quot;&gt;VenusGirl&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/lt.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Lithuanian - Lietuvių&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;92%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/dziugas1959&quot;&gt;dziugas1959&lt;/a&gt;, Džiugas Januševičius, &lt;a href=&quot;https://github.com/martyn3z&quot;&gt;martyn3z&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/mk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Macedonian - Македонски&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;49%&lt;/td&gt; 
   &lt;td&gt;LordDeatHunter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/no.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Norwegian (bokmål)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;85%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/mikaelkw&quot;&gt;mikaelkw&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/no.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Norwegian (nynorsk)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;79%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/nl.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Dutch - Nederlands&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/abbydiode&quot;&gt;abbydiode&lt;/a&gt;, &lt;a href=&quot;https://github.com/CateyeNL&quot;&gt;CateyeNL&lt;/a&gt;, &lt;a href=&quot;https://github.com/Stephan-P&quot;&gt;Stephan-P&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/pl.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Polish - Polski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;86%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/GrzegorzKi&quot;&gt;GrzegorzKi&lt;/a&gt;, &lt;a href=&quot;https://github.com/KamilZielinski&quot;&gt;KamilZielinski&lt;/a&gt;, &lt;a href=&quot;https://github.com/kwiateusz&quot;&gt;kwiateusz&lt;/a&gt;, &lt;a href=&quot;https://github.com/RegularGvy13&quot;&gt;RegularGvy13&lt;/a&gt;, &lt;a href=&quot;https://github.com/ThePhaseless&quot;&gt;ThePhaseless&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/br.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Portuguese (Brazil)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/maisondasilva&quot;&gt;maisondasilva&lt;/a&gt;, &lt;a href=&quot;https://github.com/ppvnf&quot;&gt;ppvnf&lt;/a&gt;, &lt;a href=&quot;https://github.com/Rodrigo-Matsuura&quot;&gt;Rodrigo-Matsuura&lt;/a&gt;, &lt;a href=&quot;https://github.com/thiagojramos&quot;&gt;thiagojramos&lt;/a&gt;, &lt;a href=&quot;https://github.com/wanderleihuttel&quot;&gt;wanderleihuttel&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/pt.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Portuguese (Portugal)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;90%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/PoetaGA&quot;&gt;PoetaGA&lt;/a&gt;, &lt;a href=&quot;https://github.com/Tiago_Ferreira&quot;&gt;Tiago_Ferreira&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ro.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Romanian - Română&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/David735453&quot;&gt;David735453&lt;/a&gt;, &lt;a href=&quot;https://github.com/SilverGreen93&quot;&gt;SilverGreen93&lt;/a&gt;, TZACANEL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ru.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Russian - Русский&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/bropines&quot;&gt;bropines&lt;/a&gt;, &lt;a href=&quot;https://github.com/Denisskas&quot;&gt;Denisskas&lt;/a&gt;, &lt;a href=&quot;https://github.com/DvladikD&quot;&gt;DvladikD&lt;/a&gt;, &lt;a href=&quot;https://github.com/flatron4eg&quot;&gt;flatron4eg&lt;/a&gt;, Gleb Saygin, Ilia Petrov, &lt;a href=&quot;https://github.com/katrovsky&quot;&gt;katrovsky&lt;/a&gt;, Sergey, sklart, &lt;a href=&quot;https://github.com/solarscream&quot;&gt;solarscream&lt;/a&gt;, &lt;a href=&quot;https://github.com/tapnisu&quot;&gt;tapnisu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Sanskrit - संस्कृत भाषा&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;10%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/skanda890&quot;&gt;skanda890&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/sk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Slovak - Slovenčina&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;10%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Luk164&quot;&gt;Luk164&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/rs.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Serbian - Srpski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;79%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/daVinci13&quot;&gt;daVinci13&lt;/a&gt;, &lt;a href=&quot;https://github.com/momcilovicluka&quot;&gt;momcilovicluka&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/al.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Albanian - Shqip&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/RDN000&quot;&gt;RDN000&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/lk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Sinhala - සිංහල&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;12%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/SashikaSandeepa&quot;&gt;SashikaSandeepa&lt;/a&gt;, &lt;a href=&quot;https://github.com/Savithu-s3&quot;&gt;Savithu-s3&lt;/a&gt;, &lt;a href=&quot;https://github.com/ttheek&quot;&gt;ttheek&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/si.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Slovene - Slovenščina&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;87%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/rumplin&quot;&gt;rumplin&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/se.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Swedish - Svenska&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;55%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/curudel&quot;&gt;curudel&lt;/a&gt;, &lt;a href=&quot;https://github.com/kakmonster&quot;&gt;kakmonster&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ph.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Tagalog - Tagalog&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;11%&lt;/td&gt; 
   &lt;td&gt;lasersPew&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/th.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Thai - ภาษาไทย&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;78%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apaeisara&quot;&gt;apaeisara&lt;/a&gt;, &lt;a href=&quot;https://github.com/dulapahv&quot;&gt;dulapahv&lt;/a&gt;, &lt;a href=&quot;https://github.com/rikoprushka&quot;&gt;rikoprushka&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/tr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Turkish - Türkçe&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ahmetozmtn&quot;&gt;ahmetozmtn&lt;/a&gt;, &lt;a href=&quot;https://github.com/dogancanyr&quot;&gt;dogancanyr&lt;/a&gt;, &lt;a href=&quot;https://github.com/gokberkgs&quot;&gt;gokberkgs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ua.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Ukrainian - Українська&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;Artem Moldovanenko, Operator404, &lt;a href=&quot;https://github.com/Taron-art&quot;&gt;Taron-art&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/pk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Urdu - اردو&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;55%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/digitio&quot;&gt;digitio&lt;/a&gt;, &lt;a href=&quot;https://github.com/digitpk&quot;&gt;digitpk&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/vn.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Vietnamese - Tiếng Việt&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;96%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/aethervn2309&quot;&gt;aethervn2309&lt;/a&gt;, &lt;a href=&quot;https://github.com/legendsjoon&quot;&gt;legendsjoon&lt;/a&gt;, &lt;a href=&quot;https://github.com/long5436&quot;&gt;long5436&lt;/a&gt;, &lt;a href=&quot;https://github.com/txavlog&quot;&gt;txavlog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/cn.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Simplified Chinese (China)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;Aaron Liu, adfnekc, &lt;a href=&quot;https://github.com/Ardenet&quot;&gt;Ardenet&lt;/a&gt;, &lt;a href=&quot;https://github.com/arthurfsy2&quot;&gt;arthurfsy2&lt;/a&gt;, &lt;a href=&quot;https://github.com/bai0012&quot;&gt;bai0012&lt;/a&gt;, BUGP Association, ciaran, CnYeSheng, Cololi, &lt;a href=&quot;https://github.com/dongfengweixiao&quot;&gt;dongfengweixiao&lt;/a&gt;, &lt;a href=&quot;https://github.com/enKl03B&quot;&gt;enKl03B&lt;/a&gt;, &lt;a href=&quot;https://github.com/seanyu0&quot;&gt;seanyu0&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sigechaishijie&quot;&gt;Sigechaishijie&lt;/a&gt;, &lt;a href=&quot;https://github.com/SpaceTimee&quot;&gt;SpaceTimee&lt;/a&gt;, Yisme&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/tw.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Traditional Chinese (Taiwan)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;Aaron Liu, CnYeSheng, Cololi, &lt;a href=&quot;https://github.com/enKl03B&quot;&gt;enKl03B&lt;/a&gt;, &lt;a href=&quot;https://github.com/Henryliu880922&quot;&gt;Henryliu880922&lt;/a&gt;, &lt;a href=&quot;https://github.com/StarsShine11904&quot;&gt;StarsShine11904&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrctw&quot;&gt;yrctw&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Last updated: Sun Mar 16 00:15:11 2025&lt;/p&gt; 
&lt;!-- END Autogenerated translations --&gt; 
&lt;h1&gt;Contributions&lt;/h1&gt; 
&lt;p&gt;UniGetUI wouldn&#39;t have been possible without the help of our dear contributors. From the person who fixed a typo to the person who improved half of the code, UniGetUI wouldn&#39;t be possible without them! &lt;span&gt;😄&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors:&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=marticliment/UniGetUI&quot; alt=&quot;My dear contributors&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Screenshots&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_1.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_2.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_3.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_4.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_5.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_6.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_7.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_8.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_9.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_10.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Frequently asked questions&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: I am unable to install or upgrade a specific Winget package! What should I do?&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;A: This is likely an issue with Winget rather than UniGetUI.&lt;/p&gt; 
&lt;p&gt;Please check if it&#39;s possible to install/upgrade the package through PowerShell or the Command Prompt by using the commands &lt;code&gt;winget upgrade&lt;/code&gt; or &lt;code&gt;winget install&lt;/code&gt;, depending on the situation (for example: &lt;code&gt;winget upgrade --id Microsoft.PowerToys&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;If this doesn&#39;t work, consider asking for help at &lt;a href=&quot;https://github.com/microsoft/winget-cli&quot;&gt;Winget&#39;s project page&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: The name of a package is trimmed with ellipsis — how do I see its full name/id?&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;A: This is a known limitation of Winget.&lt;/p&gt; 
&lt;p&gt;For more details, see this issue: &lt;a href=&quot;https://github.com/microsoft/winget-cli/issues/2603&quot;&gt;https://github.com/microsoft/winget-cli/issues/2603&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: My antivirus is telling me that UniGetUI is a virus! / My browser is blocking the download of UniGetUI!&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;A: A common reason apps (i.e., executables) get blocked and/or detected as a virus — even when there&#39;s nothing malicious about them, like in the case of UniGetUI — is because a relatively large amount of people are not using them.&lt;/p&gt; 
&lt;p&gt;Combine that with the fact that you might be downloading something recently released, and blocking unknown apps is in many cases a good precaution to take to prevent actual malware.&lt;/p&gt; 
&lt;p&gt;Since UniGetUI is open source and safe to use, whitelist the app in the settings of your antivirus/browser.&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: Are Winget/Scoop packages safe?&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;A: UniGetUI, Microsoft, and Scoop aren&#39;t responsible for the packages available for download, which are provided by third parties and can theoretically be compromised.&lt;/p&gt; 
&lt;p&gt;Microsoft has implemented a few checks for the software available on Winget to mitigate the risks of downloading malware. Even so, it&#39;s recommended that you only download software from trusted publishers.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;i&gt;Check out the &lt;a href=&quot;https://github.com/marticliment/UniGetUI/wiki&quot;&gt;Wiki&lt;/a&gt; for more information!&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;h2&gt;Command-line parameters:&lt;/h2&gt; 
&lt;p&gt;Check out the full list of parameters &lt;a href=&quot;https://github.com/marticliment/UniGetUI/raw/main/cli-arguments.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MudBlazor/MudBlazor</title>
      <link>https://github.com/MudBlazor/MudBlazor</link>
      <description>&lt;p&gt;Blazor Component Library based on Material Design principles with an emphasis on ease of use and extensibility&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;content/MudBlazor-GitHub-NoBg-Dark.png&quot;&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;content/MudBlazor-GitHub-NoBg.png&quot;&gt; 
  &lt;img alt=&quot;MudBlazor&quot; src=&quot;https://raw.githubusercontent.com/MudBlazor/MudBlazor/dev/content/MudBlazor-GitHub-NoBg.png&quot;&gt; 
 &lt;/picture&gt; &lt;/h1&gt; 
&lt;h1&gt;Material Design components for Blazor&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/mudblazor/mudblazor/build-test-mudblazor.yml?branch=dev&amp;amp;logo=github&amp;amp;style=flat-square&quot; alt=&quot;GitHub Workflow Status&quot;&gt; &lt;a href=&quot;https://app.codecov.io/github/MudBlazor/MudBlazor&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/MudBlazor/MudBlazor&quot; alt=&quot;Codecov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/summary/overall?id=MudBlazor_MudBlazor&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=MudBlazor_MudBlazor&amp;amp;metric=alert_status&quot; alt=&quot;Quality Gate Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mudblazor/MudBlazor/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/mudblazor/mudblazor?color=594ae2&amp;amp;logo=github&amp;amp;style=flat-square&quot; alt=&quot;GitHub&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mudblazor/MudBlazor/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/mudblazor/mudblazor?color=594ae2&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;GitHub Repo stars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mudblazor/mudblazor&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/mudblazor/mudblazor?color=594ae2&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;GitHub last commit&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mudblazor/mudblazor/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/mudblazor/mudblazor?color=594ae2&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;Contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mudblazor/mudblazor/discussions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/discussions/mudblazor/mudblazor?color=594ae2&amp;amp;logo=github&amp;amp;style=flat-square&quot; alt=&quot;Discussions&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/mudblazor&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/786656789310865418?color=%237289da&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=%237289da&amp;amp;style=flat-square&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/MudBlazor&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/MudBlazor?color=1DA1F2&amp;amp;label=Twitter&amp;amp;logo=Twitter&amp;amp;style=flat-square&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/MudBlazor/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/MudBlazor?color=ff4081&amp;amp;label=nuget%20version&amp;amp;logo=nuget&amp;amp;style=flat-square&quot; alt=&quot;NuGet version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/MudBlazor/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/MudBlazor?color=ff4081&amp;amp;label=nuget%20downloads&amp;amp;logo=nuget&amp;amp;style=flat-square&quot; alt=&quot;NuGet downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;MudBlazor is an ambitious Material Design component framework for Blazor with an emphasis on ease of use and clear structure. It is perfect for .NET developers who want to rapidly build web applications without having to struggle with CSS and Javascript. MudBlazor, being written entirely in C#, empowers you to adapt, fix or extend the framework. There are plenty of examples in the documentation, which makes understanding and learning MudBlazor very easy.&lt;/p&gt; 
&lt;h2&gt;Documentation &amp;amp; Demo&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mudblazor.com&quot;&gt;MudBlazor.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://try.mudblazor.com/&quot;&gt;Try.MudBlazor.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why is MudBlazor so successful?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clean and aesthetic graphic design based on Material Design.&lt;/li&gt; 
 &lt;li&gt;Clear and easy to understand structure.&lt;/li&gt; 
 &lt;li&gt;Good documentation with many examples and source snippets.&lt;/li&gt; 
 &lt;li&gt;All components are written entirely in C#, no JavaScript allowed (except where absolutely necessary).&lt;/li&gt; 
 &lt;li&gt;Users can make beautiful apps without needing CSS (but they can of course use CSS too).&lt;/li&gt; 
 &lt;li&gt;No dependencies on other component libraries, 100% control over components and features.&lt;/li&gt; 
 &lt;li&gt;Stability! We strive for a complete test coverage.&lt;/li&gt; 
 &lt;li&gt;Releases often so developers can get their PRs and fixes in a timely fashion.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;MudBlazor&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;.NET&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;1.x.x - 2.0.x&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;.NET 3.1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Ended 03/2021&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;5.x.x&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;.NET 5&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Ended 01/2022&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;6.x.x&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/6.0&quot;&gt;.NET 6&lt;/a&gt;, &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/7.0&quot;&gt;.NET 7&lt;/a&gt;, &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/8.0&quot;&gt;.NET 8&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Ended 01/2025&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;7.x.x&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/7.0&quot;&gt;.NET 7&lt;/a&gt;, &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/8.0&quot;&gt;.NET 8&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Limited&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;8.x.x&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/8.0&quot;&gt;.NET 8&lt;/a&gt;, &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/9.0&quot;&gt;.NET 9&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you&#39;re updating to a newer version of MudBlazor, make sure to check out the &lt;a href=&quot;https://github.com/MudBlazor/MudBlazor/raw/dev/MIGRATION.md&quot;&gt;Migration Guide&lt;/a&gt; for detailed instructions on handling breaking changes and new features.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Static rendering is not supported - &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/blazor/components/render-modes&quot;&gt;Learn more&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;We cannot guarantee compatibility with browsers no longer maintained by their publishers. For the best experience, use an up-to-date browser - See &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/blazor/supported-platforms&quot;&gt;Blazor supported platforms&lt;/a&gt;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Stats&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://repobeats.axiom.co/api/embed/db53a44092e88fc34a4c0f37db12773b6787ec7e.svg?sanitize=true&quot; alt=&quot;Alt&quot; title=&quot;Repobeats analytics image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;👋 Thanks for wanting to contribute!&lt;br&gt; Contributions from the community are what makes MudBlazor successful.&lt;/p&gt; 
&lt;p&gt;If you are familiar with technologies like C#, Blazor, JavaScript, or CSS, and wish to give something back, please consider submitting a pull request! We try to merge all non-breaking bugfixes and will deliberate the value of new features for the community. Please note there is no guarantee your PR will be merged, so if you want to be sure before investing the work, feel free to &lt;a href=&quot;https://discord.gg/mudblazor&quot;&gt;contact the team&lt;/a&gt; first.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/MudBlazor/MudBlazor/dev/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; to understand our goals and learn more about the internals of the project.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;We have premade templates available at the &lt;a href=&quot;https://github.com/mudblazor/Templates&quot;&gt;MudBlazor.Templates&lt;/a&gt; repository.&lt;/p&gt; 
&lt;p&gt;Full installation instructions can be found &lt;a href=&quot;https://mudblazor.com/getting-started/installation&quot;&gt;on our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Quick Installation Guide&lt;/h3&gt; 
&lt;p&gt;Install Package&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dotnet add package MudBlazor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add the following to &lt;code&gt;_Imports.razor&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-razor&quot;&gt;@using MudBlazor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add the following to the &lt;code&gt;MainLayout.razor&lt;/code&gt; or &lt;code&gt;App.razor&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-razor&quot;&gt;&amp;lt;MudThemeProvider/&amp;gt;
&amp;lt;MudPopoverProvider/&amp;gt;
&amp;lt;MudDialogProvider/&amp;gt;
&amp;lt;MudSnackbarProvider/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add the following to your HTML &lt;code&gt;head&lt;/code&gt; section, it&#39;s either &lt;code&gt;index.html&lt;/code&gt; or &lt;code&gt;_Layout.cshtml&lt;/code&gt;/&lt;code&gt;_Host.cshtml&lt;/code&gt;/&lt;code&gt;App.razor&lt;/code&gt; depending on whether you&#39;re running WebAssembly or Server&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-razor&quot;&gt;&amp;lt;link href=&quot;https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&amp;amp;display=swap&quot; rel=&quot;stylesheet&quot; /&amp;gt;
&amp;lt;link href=&quot;_content/MudBlazor/MudBlazor.min.css&quot; rel=&quot;stylesheet&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, add the following to the default Blazor script at the end of the &lt;code&gt;body&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-razor&quot;&gt;&amp;lt;script src=&quot;_content/MudBlazor/MudBlazor.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add the following to the relevant sections of &lt;code&gt;Program.cs&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;using MudBlazor.Services;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;builder.Services.AddMudServices();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-razor&quot;&gt;&amp;lt;MudText Typo=&quot;Typo.h6&quot;&amp;gt;
    MudBlazor is @Text
&amp;lt;/MudText&amp;gt;

&amp;lt;MudButton Variant=&quot;Variant.Filled&quot; 
           Color=&quot;Color.Primary&quot; 
           OnClick=&quot;ButtonOnClick&quot;&amp;gt;
    @ButtonText
&amp;lt;/MudButton&amp;gt;

@code {
    string Text { get; set; } = &quot;????&quot;;
    string ButtonText { get; set; } = &quot;Click Me&quot;;
    int ClickCount { get; set; }

    void ButtonOnClick()
    {
        ClickCount += 1;
        Text = $&quot;Awesome x {ClickCount}&quot;;
        ButtonText = &quot;Click Me Again&quot;;
    }
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>dotnet/ai-samples</title>
      <link>https://github.com/dotnet/ai-samples</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; 
&lt;p&gt;page_type: sample languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;azdeveloper&lt;/li&gt; 
 &lt;li&gt;bicep&lt;/li&gt; 
 &lt;li&gt;csharp&lt;/li&gt; 
 &lt;li&gt;powershell products:&lt;/li&gt; 
 &lt;li&gt;azure&lt;/li&gt; 
 &lt;li&gt;ai-services&lt;/li&gt; 
 &lt;li&gt;azure-openai urlFragment: ai-samples name: AI Samples for .NET description: .NET samples demonstrating how to use AI in your .NET applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;!-- YAML front-matter schema: https://review.learn.microsoft.com/en-us/help/contribute/samples/process/onboarding?branch=main#supported-metadata-fields-for-readmemd --&gt; 
&lt;h1&gt;AI Samples for .NET&lt;/h1&gt; 
&lt;p&gt;Welcome to the official home for .NET samples demonstrating how to use AI in your .NET applications. If you&#39;re new to AI, start at the top and work your way down. Otherwise, jump in wherever suits your interests.&lt;/p&gt; 
&lt;h3&gt;Microsoft.Extensions.AI (preview)&lt;/h3&gt; 
&lt;p&gt;Microsoft.Extensions.AI is a set of core .NET libraries developed in collaboration with the .NET ecosystem, including Semantic Kernel. These libraries provide a unified layer of C# abstractions for interacting with AI services, such as small and large language models (SLMs and LLMs) and embeddings.&lt;/p&gt; 
&lt;p&gt;Core benefits:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Unified API:&lt;/em&gt; Offers a consistent and standard set of APIs and conventions for integrating AI services into .NET applications.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Flexibility:&lt;/em&gt; Allows .NET library authors to use AI services without forcing a specific AI provider, making it parameterizable with any provider.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Ease of Use:&lt;/em&gt; Enables .NET application developers to experiment with different packages using the same underlying abstractions and to utilize a single API throughout their application.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Componentization:&lt;/em&gt; Facilitates the addition of new capabilities and simplifies the componentization and testing of applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more details, see the &lt;a href=&quot;https://aka.ms/meai-preview-blog&quot;&gt;Introducing Microsoft.Extensions.AI Preview blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Topic&lt;/th&gt; 
   &lt;th&gt;GitHub Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Abstraction implementations&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/microsoft-extensions-ai/abstraction-implementations/README.md&quot;&gt;GitHub Link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Azure OpenAI&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/microsoft-extensions-ai/azure-openai/README.md&quot;&gt;GitHub Link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenAI&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/microsoft-extensions-ai/openai/README.md&quot;&gt;GitHub Link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Azure AI Inference&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/microsoft-extensions-ai/azure-ai-inference/.md&quot;&gt;GitHub Link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ollama&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/microsoft-extensions-ai/ollama/README.md&quot;&gt;GitHub Link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Microsoft.Extensions.AI.Evaluation (preview)&lt;/h3&gt; 
&lt;p&gt;Microsoft.Extensions.AI.Evaluation is a set of .NET libraries that provide the tooling necessary to evaluate the quality and efficacy of LLM responses in your intelligent applications.&lt;/p&gt; 
&lt;p&gt;The Microsoft.Extensions.AI.Evaluation libraries are built on top of core AI abstractions defined in the Microsoft.Extensions.AI libraries above. For more details, see the following blog post: &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/evaluate-the-quality-of-your-ai-applications-with-ease/&quot;&gt;Evaluate the quality of your AI applications with ease&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Topic&lt;/th&gt; 
   &lt;th&gt;GitHub Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Microsoft.Extensions.AI.Evaluation&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/microsoft-extensions-ai-evaluation/api/README.md&quot;&gt;API Usage Examples&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Quickstarts using OpenAI&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;#&lt;/th&gt; 
   &lt;th&gt;Topic&lt;/th&gt; 
   &lt;th&gt;GitHub Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;Text Summary&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/quickstarts/openai/extensions-ai/01-HikeBenefitsSummary/README.md&quot;&gt;Hike Benefits Summary Project&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;Chat App&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/quickstarts/openai/extensions-ai/02-build-chat-app/openai/README.md&quot;&gt;Hiker AI Project&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;Function Calling&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/quickstarts/openai/extensions-ai/04-function-calling/openai/README.md&quot;&gt;Hiker AI Pro&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Quickstarts using the Azure OpenAI SDK&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;#&lt;/th&gt; 
   &lt;th&gt;Topic&lt;/th&gt; 
   &lt;th&gt;GitHub Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;Text Summary&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/quickstarts/azure-openai/extensions-ai/01-HikeBenefitsSummary/README.md&quot;&gt;Hike Benefits Summary Project&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;Chat App&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/quickstarts/azure-openai/extensions-ai/02-build-chat-app/openai/README.md&quot;&gt;Hiker AI Project&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;Function Calling&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/quickstarts/azure-openai/extensions-ai/04-function-calling/openai/README.md&quot;&gt;Hiker AI Pro&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Chat samples&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;#&lt;/th&gt; 
   &lt;th&gt;Topic&lt;/th&gt; 
   &lt;th&gt;GitHub Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;Customer Support&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/chat/CustomerSupport/README.md&quot;&gt;Customer Support Project&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Build 2024 - Infusing your .NET Apps with AI: Practical Tools and Techniques&lt;/h3&gt; 
&lt;p&gt;Discover how to bring AI into your .NET application! This session covers the tools, libraries, and best practices for incorporating LLMs or other AI capabilities to create an &quot;intelligent app&quot;. We&#39;ll explore practical examples, including how to leverage Azure AI services and the .NET AI ecosystem, to enhance your apps with AI.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jrNfKeGSuCg&quot;&gt;Youtube: Infusing your .NET Apps with AI: Practical Tools and Techniques&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Tutorial: Infusing your .NET Apps with AI: Practical Tools and Techniques&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;#&lt;/th&gt; 
   &lt;th&gt;Topic&lt;/th&gt; 
   &lt;th&gt;YouTube Link and Time&lt;/th&gt; 
   &lt;th&gt;GitHub Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;Hello Semantic Kernel&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jrNfKeGSuCg&amp;amp;t=180s&quot;&gt;3m 0s&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/build-2024/01%20-%20Hello%20Semantic%20Kernel&quot;&gt;Hello Semantic Kernel&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;Add Chat History&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jrNfKeGSuCg&amp;amp;t=340s&quot;&gt;5m 40s&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/build-2024/02%20-%20Add%20Chat%20History&quot;&gt;Add Chat History&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;Add Plugin - Function Call&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jrNfKeGSuCg&amp;amp;t=430s&quot;&gt;7m 10s&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/build-2024/03%20-%20Add%20Plugin%20%28Function%20Call%29&quot;&gt;Add Plugin - Function Call&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;Add Logging&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jrNfKeGSuCg&amp;amp;t=565s&quot;&gt;9m 24s&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/build-2024/04%20-%20Add%20Logging&quot;&gt;Add Logging&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;Add Plugin - Bing Search&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jrNfKeGSuCg&amp;amp;t=675s&quot;&gt;11m 15s&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/build-2024/05%20-%20Add%20Plugin%20%28Bing%20Search%29&quot;&gt;Add Plugin - Bing Search&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;Modify Kernel Behavior with Dependency Injection&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jrNfKeGSuCg&amp;amp;t=757s&quot;&gt;12m 37s&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/build-2024/06%20-%20Modifying%20Kernel%20Behavior%20with%20Dependency%20Injection&quot;&gt;Modifying Kernel Behavior with Dependency Injection&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;Using Semantic Kernel in a Web App&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jrNfKeGSuCg&amp;amp;t=957s&quot;&gt;15m 57s&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/src/build-2024/07%20-%20Using%20Semantic%20Kernel%20in%20WebApp&quot;&gt;Using Semantic Kernel in a Web App&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;.NET Foundation&lt;/h2&gt; 
&lt;p&gt;There are many .NET related projects on GitHub.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/dotnet&quot;&gt;.NET home repo&lt;/a&gt;&amp;nbsp;- links to 100s of .NET projects, from Microsoft and the community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/aspnet/core/&quot;&gt;ASP.NET Core home&lt;/a&gt; - the best place to start learning about ASP.NET Core.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This project has adopted the code of conduct defined by the &lt;a href=&quot;http://contributor-covenant.org/&quot;&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community. For more information, see the &lt;a href=&quot;http://www.dotnetfoundation.org/code-of-conduct&quot;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;.NET (including the csharp-notebooks repo) is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/ai-samples/main/LICENSE&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>shaked6540/YoutubePlaylistDownloader</title>
      <link>https://github.com/shaked6540/YoutubePlaylistDownloader</link>
      <description>&lt;p&gt;A tool to download whole playlists, channels or single videos from youtube and also optionally convert them to almost any format you would like&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YouTube Playlist Downloader&lt;/h1&gt; 
&lt;h1&gt;Stand with Israel!&lt;/h1&gt; 
&lt;h2&gt;If the files don&#39;t show up after you download a playlist, try running the program as administrator or change the save directory to a different drive! (C drive is usually protected by windows, save it under D or any other drive)&lt;/h2&gt; 
&lt;h2&gt;What is it?&lt;/h2&gt; 
&lt;p&gt;A simple program to download whole playlists\channels or even single videos from YouTube&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/shaked6540/YoutubePlaylistDownloader/releases/download/1.9.29/YoutubePlaylistDownloader.exe&quot;&gt;Click here to download the installer&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;No ads, open source and free&lt;/li&gt; 
 &lt;li&gt;Convert videos to a lot of popular formats&lt;/li&gt; 
 &lt;li&gt;Themes, and user friendly interface&lt;/li&gt; 
 &lt;li&gt;Automatic tagging of artists, album, title and genre based on the video title&lt;/li&gt; 
 &lt;li&gt;Comfortable update system&lt;/li&gt; 
 &lt;li&gt;Multi-language support: English, Arabic, Chinese, Dutch (NL), French, German, Hebrew, Italian, Polish, Portuguese (BR), Romanian, Russian, Spanish, and Turkish&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/bQw4fVm.gif&quot; alt=&quot;Gif&quot; title=&quot;Gif&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OrchardCMS/OrchardCore</title>
      <link>https://github.com/OrchardCMS/OrchardCore</link>
      <description>&lt;p&gt;Orchard Core is an open-source modular and multi-tenant application framework built with ASP.NET Core, and a content management system (CMS) built on top of that framework.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Orchard Core&lt;/h1&gt; 
&lt;p&gt;Orchard Core is an open-source, modular, multi-tenant application framework and CMS for ASP.NET Core.&lt;/p&gt; 
&lt;p&gt;Orchard Core consists of two distinct projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Orchard Core Framework&lt;/strong&gt;: An application framework for building modular, multi-tenant applications on ASP.NET Core.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orchard Core CMS&lt;/strong&gt;: A Web Content Management System (CMS) built on top of the Orchard Core Framework.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/OrchardCMS/OrchardCore/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-BSD--3--Clause-blue.svg?sanitize=true&quot; alt=&quot;BSD-3-Clause License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.orchardcore.net/&quot;&gt;&lt;img src=&quot;https://readthedocs.org/projects/orchardcore/badge/&quot; alt=&quot;Documentation&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gurubase.io/g/orchard-core&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gurubase-Ask%20Orchard%20Core%20Guru-006BFF&quot; alt=&quot;Gurubase&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://crowdin.com/project/orchard-core&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/orchard-core/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://orchardcore.net/discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/551136772243980291?color=%237289DA&amp;amp;label=OrchardCore&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Build Status&lt;/h2&gt; 
&lt;p&gt;Stable (&lt;code&gt;release/2.1&lt;/code&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/actions?query=workflow%3A%22Release+-+CI%22&quot;&gt;&lt;img src=&quot;https://github.com/OrchardCMS/OrchardCore/actions/workflows/release_ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/OrchardCore.Application.Cms.Targets&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/OrchardCore.Application.Cms.Targets.svg?sanitize=true&quot; alt=&quot;NuGet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Nightly (&lt;code&gt;main&lt;/code&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/actions?query=workflow%3A%22Preview+-+CI%22&quot;&gt;&lt;img src=&quot;https://github.com/OrchardCMS/OrchardCore/actions/workflows/preview_ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cloudsmith.io/~orchardcore/repos/preview/packages/detail/nuget/OrchardCore.Application.Cms.Targets/latest/&quot;&gt;&lt;img src=&quot;https://api-prd.cloudsmith.io/badges/version/orchardcore/preview/nuget/OrchardCore.Application.Cms.Targets/latest/x/?render=true&amp;amp;badge_token=gAAAAABey9hKFD_C-ZIpLvayS3HDsIjIorQluDs53KjIdlxoDz6Ntt1TzvMNJp7a_UWvQbsfN5nS7_0IbxCyqHZsjhmZP6cBkKforo-NqwrH5-E6QCrJ3D8%3D&quot; alt=&quot;Cloudsmith&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Project Status: v2.1.6&lt;/h2&gt; 
&lt;p&gt;The software is production-ready, and capable of serving large mission-critical applications as well, and we&#39;re not aware of any fundamental bugs or missing features we deem crucial. Orchard Core continues to evolve, with each version bringing new improvements, and keeping up with the cutting-edge of .NET.&lt;/p&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://docs.orchardcore.net/en/latest/reference/&quot;&gt;the Reference of Built-in Modules&lt;/a&gt; to see what kind of features Orchard Core provides built-in.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/milestones&quot;&gt;issue milestones&lt;/a&gt; for information on what we have planned for the next releases and what are the priorities.&lt;/p&gt; 
&lt;h2&gt;Getting Started and Documentation&lt;/h2&gt; 
&lt;p&gt;The documentation can be accessed under &lt;a href=&quot;https://docs.orchardcore.net/&quot;&gt;https://docs.orchardcore.net/&lt;/a&gt;. See the homepage for an overview, and &lt;a href=&quot;https://docs.orchardcore.net/en/latest/getting-started/&quot;&gt;the getting started docs&lt;/a&gt; on how to start building apps with Orchard Core. If you&#39;d just like to test drive Orchard Core as a user, check out &lt;a href=&quot;https://docs.orchardcore.net/en/latest/getting-started/test-drive-orchard-core/&quot;&gt;Test drive Orchard Core&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Help and Support&lt;/h2&gt; 
&lt;p&gt;Need assistance with Orchard Core? We&#39;ve got you covered! Here are several ways to connect with our community for support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Search for Answers:&lt;/strong&gt; Use the &lt;a href=&quot;https://gurubase.io/g/orchard-core&quot;&gt;Gurubase AI model&lt;/a&gt; to find answers to your questions quickly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Report Bugs or Suggest Features:&lt;/strong&gt; If you&#39;ve encountered a bug or have an idea for a new feature, please open an issue in our &lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/issues&quot;&gt;issue tracker&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ask Questions or Get Feedback:&lt;/strong&gt; For guidance on specific tasks or to receive feedback on your code, feel free to start a &lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/discussions&quot;&gt;discussion&lt;/a&gt; with the community.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Join the Conversation:&lt;/strong&gt; Connect with other Orchard Core users in real-time on our &lt;a href=&quot;https://orchardcore.net/discord&quot;&gt;Discord server&lt;/a&gt; to chat and share ideas.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We&#39;re here to help you succeed with Orchard Core!&lt;/p&gt; 
&lt;h2&gt;Get in Touch&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/orchardcms&quot;&gt;X (Twitter)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://orchardcore.net/linkedin&quot;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/OrchardCore&quot;&gt;Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://orchardcore.net/discord&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Please report security issues privately, via email, to &lt;a href=&quot;mailto:contact@orchardcore.net&quot;&gt;contact@orchardcore.net&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Local Communities&lt;/h3&gt; 
&lt;p&gt;中文资源&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://shang.qq.com/wpa/qunwpa?idkey=48721591a71ee7586316604a7a4ee99d26fd977c6120370a06585085a5936f62&quot;&gt;&lt;img src=&quot;https://docs.orchardcore.net/en/latest/assets/images/orchard-core-cn-community-logo.png&quot; alt=&quot;Orchard Core CN 中文讨论组&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;It&#39;s great that you&#39;re thinking about contributing to Orchard Core! You&#39;d join &lt;a href=&quot;https://docs.orchardcore.net/en/latest/community/contributors/&quot;&gt;our wonderful community of contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the docs &lt;a href=&quot;https://docs.orchardcore.net/en/latest/contributing/&quot;&gt;on contributing to Orchard Core&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Preview Package Feed&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://cloudsmith.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/OSS%20hosting%20by-cloudsmith-blue?logo=cloudsmith&amp;amp;style=for-the-badge&quot; alt=&quot;Hosted By: Cloudsmith&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;NuGet package repository hosting for the preview feed is graciously provided by &lt;a href=&quot;https://cloudsmith.com&quot;&gt;Cloudsmith&lt;/a&gt;. Check out &lt;a href=&quot;https://docs.orchardcore.net/en/latest/getting-started/preview-package-source/&quot;&gt;the docs on using the preview package feed&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Cloudsmith is the only fully hosted, cloud-native, universal package management solution, that enables your organization to create, store, and share packages in any format, to any place, with total confidence.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://docs.orchardcore.net/en/latest/contributing/#code-of-conduct&quot;&gt;our Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;.NET Foundation&lt;/h2&gt; 
&lt;p&gt;This project is supported by the &lt;a href=&quot;http://www.dotnetfoundation.org&quot;&gt;.NET Foundation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>danielgerlag/workflow-core</title>
      <link>https://github.com/danielgerlag/workflow-core</link>
      <description>&lt;p&gt;Lightweight workflow engine for .NET Standard&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Workflow Core&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://ci.appveyor.com/project/danielgerlag/workflow-core&quot;&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/xnby6p5v4ur04u76?svg=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://api.gitsponsors.com/api/badge/link?p=xj6mObb7nZAJGyuABfd8nD5XWf3SE4oUfw0vmCgSiJeIfNlzJAej0FWX8oFdYm6D7bvZpCf6qANVBNPWid4dRQ==&quot;&gt;&lt;img src=&quot;https://api.gitsponsors.com/api/badge/img?id=73864802&quot; height=&quot;20&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Workflow Core is a light weight embeddable workflow engine targeting .NET Standard. Think: long running processes with multiple tasks that need to track state. It supports pluggable persistence and concurrency providers to allow for multi-node clusters.&lt;/p&gt; 
&lt;h3&gt;Announcements&lt;/h3&gt; 
&lt;h4&gt;New related project: Conductor&lt;/h4&gt; 
&lt;p&gt;Conductor is a stand-alone workflow server as opposed to a library that uses Workflow Core internally. It exposes an API that allows you to store workflow definitions, track running workflows, manage events and define custom steps and scripts for usage in your workflows.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/danielgerlag/conductor&quot;&gt;https://github.com/danielgerlag/conductor&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://workflow-core.readthedocs.io&quot;&gt;Tutorial here.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Fluent API&lt;/h2&gt; 
&lt;p&gt;Define your workflows with the fluent API.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;public class MyWorkflow : IWorkflow
{
    public void Build(IWorkflowBuilder&amp;lt;MyData&amp;gt; builder)
    {    
        builder
           .StartWith&amp;lt;Task1&amp;gt;()
           .Then&amp;lt;Task2&amp;gt;()
           .Then&amp;lt;Task3&amp;gt;();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;JSON / YAML Workflow Definitions&lt;/h2&gt; 
&lt;p&gt;Define your workflows in JSON or YAML, need to install WorkFlowCore.DSL&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;Id&quot;: &quot;HelloWorld&quot;,
  &quot;Version&quot;: 1,
  &quot;Steps&quot;: [
    {
      &quot;Id&quot;: &quot;Hello&quot;,
      &quot;StepType&quot;: &quot;MyApp.HelloWorld, MyApp&quot;,
      &quot;NextStepId&quot;: &quot;Bye&quot;
    },        
    {
      &quot;Id&quot;: &quot;Bye&quot;,
      &quot;StepType&quot;: &quot;MyApp.GoodbyeWorld, MyApp&quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;Id: HelloWorld
Version: 1
Steps:
- Id: Hello
  StepType: MyApp.HelloWorld, MyApp
  NextStepId: Bye
- Id: Bye
  StepType: MyApp.GoodbyeWorld, MyApp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Sample use cases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;New user workflow&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;public class MyData
{
	public string Email { get; set; }
	public string Password { get; set; }
	public string UserId { get; set; }
}

public class MyWorkflow : IWorkflow
{
    public void Build(IWorkflowBuilder&amp;lt;MyData&amp;gt; builder)
    {    
        builder
            .StartWith&amp;lt;CreateUser&amp;gt;()
                .Input(step =&amp;gt; step.Email, data =&amp;gt; data.Email)
                .Input(step =&amp;gt; step.Password, data =&amp;gt; data.Password)
                .Output(data =&amp;gt; data.UserId, step =&amp;gt; step.UserId)
           .Then&amp;lt;SendConfirmationEmail&amp;gt;()
               .WaitFor(&quot;confirmation&quot;, data =&amp;gt; data.UserId)
           .Then&amp;lt;UpdateUser&amp;gt;()
               .Input(step =&amp;gt; step.UserId, data =&amp;gt; data.UserId);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Saga Transactions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;public class MyWorkflow : IWorkflow
{
    public void Build(IWorkflowBuilder&amp;lt;MyData&amp;gt; builder)
    {    
        builder
            .StartWith&amp;lt;CreateCustomer&amp;gt;()
            .Then&amp;lt;PushToSalesforce&amp;gt;()
                .OnError(WorkflowErrorHandling.Retry, TimeSpan.FromMinutes(10))
            .Then&amp;lt;PushToERP&amp;gt;()
                .OnError(WorkflowErrorHandling.Retry, TimeSpan.FromMinutes(10));
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;builder
    .StartWith&amp;lt;LogStart&amp;gt;()
    .Saga(saga =&amp;gt; saga
        .StartWith&amp;lt;Task1&amp;gt;()
            .CompensateWith&amp;lt;UndoTask1&amp;gt;()
        .Then&amp;lt;Task2&amp;gt;()
            .CompensateWith&amp;lt;UndoTask2&amp;gt;()
        .Then&amp;lt;Task3&amp;gt;()
            .CompensateWith&amp;lt;UndoTask3&amp;gt;()
    )
    .OnError(Models.WorkflowErrorHandling.Retry, TimeSpan.FromMinutes(10))
    .Then&amp;lt;LogEnd&amp;gt;();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Persistence&lt;/h2&gt; 
&lt;p&gt;Since workflows are typically long running processes, they will need to be persisted to storage between steps. There are several persistence providers available as separate Nuget packages.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MemoryPersistenceProvider &lt;em&gt;(Default provider, for demo and testing purposes)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Persistence.MongoDB&quot;&gt;MongoDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Providers.Azure&quot;&gt;Cosmos DB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Providers.AWS&quot;&gt;Amazon DynamoDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Persistence.SqlServer&quot;&gt;SQL Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Persistence.PostgreSQL&quot;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Persistence.Sqlite&quot;&gt;Sqlite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Persistence.MySQL&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Providers.Redis&quot;&gt;Redis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Search&lt;/h2&gt; 
&lt;p&gt;A search index provider can be plugged in to Workflow Core, enabling you to index your workflows and search against the data and state of them. These are also available as separate Nuget packages.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/providers/WorkflowCore.Providers.Elasticsearch&quot;&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extensions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/extensions/WorkflowCore.Users&quot;&gt;User (human) workflows&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Samples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample01&quot;&gt;Hello World&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample12&quot;&gt;Multiple outcomes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample03&quot;&gt;Passing Data&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample09&quot;&gt;Parallel ForEach&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample09s&quot;&gt;Sync ForEach&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample10&quot;&gt;While Loop&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample11&quot;&gt;If Statement&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample04&quot;&gt;Events&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample18&quot;&gt;Activity Workers&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample13&quot;&gt;Parallel Tasks&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample17&quot;&gt;Saga Transactions (with compensation)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample16&quot;&gt;Scheduled Background Tasks&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample14&quot;&gt;Recurring Background Tasks&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample15&quot;&gt;Dependency Injection&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample05&quot;&gt;Deferred execution &amp;amp; re-entrant steps&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample02&quot;&gt;Looping&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WebApiSample&quot;&gt;Exposing a REST API&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.Sample08&quot;&gt;Human(User) Workflow&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/src/samples/WorkflowCore.TestSample01&quot;&gt;Testing&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Daniel Gerlag&lt;/strong&gt; - &lt;em&gt;Initial work&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jackie Ja&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Aaron Scribner&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Roberto Paterlini&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielgerlag/conductor&quot;&gt;Conductor&lt;/a&gt; (Stand-alone workflow server built on Workflow Core)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ports&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielgerlag/jworkflow&quot;&gt;JWorkflow (Java)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielgerlag/workflow-es&quot;&gt;workflow-es (Node.js)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielgerlag/liteflow&quot;&gt;liteflow (Python)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&quot;https://raw.githubusercontent.com/danielgerlag/workflow-core/master/LICENSE.md&quot;&gt;LICENSE.md&lt;/a&gt; file for details&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cysharp/UniTask</title>
      <link>https://github.com/Cysharp/UniTask</link>
      <description>&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UniTask&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Cysharp/UniTask/actions&quot;&gt;&lt;img src=&quot;https://github.com/Cysharp/UniTask/workflows/Build-Debug/badge.svg?sanitize=true&quot; alt=&quot;GitHub Actions&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Cysharp/UniTask/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/Cysharp/UniTask.svg?sanitize=true&quot; alt=&quot;Releases&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Cysharp/UniTask/raw/master/README_CN.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/UniTask-%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-red&quot; alt=&quot;Readme_CN&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Struct based &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; and custom AsyncMethodBuilder to achieve zero allocation&lt;/li&gt; 
 &lt;li&gt;Makes all Unity AsyncOperations and Coroutines awaitable&lt;/li&gt; 
 &lt;li&gt;PlayerLoop based task(&lt;code&gt;UniTask.Yield&lt;/code&gt;, &lt;code&gt;UniTask.Delay&lt;/code&gt;, &lt;code&gt;UniTask.DelayFrame&lt;/code&gt;, etc..) that enable replacing all coroutine operations&lt;/li&gt; 
 &lt;li&gt;MonoBehaviour Message Events and uGUI Events as awaitable/async-enumerable&lt;/li&gt; 
 &lt;li&gt;Runs completely on Unity&#39;s PlayerLoop so doesn&#39;t use threads and runs on WebGL, wasm, etc.&lt;/li&gt; 
 &lt;li&gt;Asynchronous LINQ, with Channel and AsyncReactiveProperty&lt;/li&gt; 
 &lt;li&gt;TaskTracker window to prevent memory leaks&lt;/li&gt; 
 &lt;li&gt;Highly compatible behaviour with Task/ValueTask/IValueTaskSource&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For technical details, see blog post: &lt;a href=&quot;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&quot;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ &lt;/a&gt;&lt;br&gt; For advanced tips, see blog post: &lt;a href=&quot;https://medium.com/@neuecc/extends-unitywebrequest-via-async-decorator-pattern-advanced-techniques-of-unitask-ceff9c5ee846&quot;&gt;Extends UnityWebRequest via async decorator pattern — Advanced Techniques of UniTask&lt;/a&gt;&lt;/p&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#basics-of-unitask-and-asyncoperation&quot;&gt;Basics of UniTask and AsyncOperation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&quot;&gt;Cancellation and Exception handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#timeout-handling&quot;&gt;Timeout handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#progress&quot;&gt;Progress&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&quot;&gt;PlayerLoop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#async-void-vs-async-unitaskvoid&quot;&gt;async void vs async UniTaskVoid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasktracker&quot;&gt;UniTaskTracker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#external-assets&quot;&gt;External Assets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#asyncenumerable-and-async-linq&quot;&gt;AsyncEnumerable and Async LINQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#awaitable-events&quot;&gt;Awaitable Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#channel&quot;&gt;Channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#vs-awaitable&quot;&gt;vs Awaitable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unit-testing&quot;&gt;For Unit Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#threadpool-limitation&quot;&gt;ThreadPool limitation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#ienumeratortounitask-limitation&quot;&gt;IEnumerator.ToUniTask limitation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unityeditor&quot;&gt;For UnityEditor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#compare-with-standard-task-api&quot;&gt;Compare with Standard Task API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#pooling-configuration&quot;&gt;Pooling Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#allocation-on-profiler&quot;&gt;Allocation on Profiler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasksynchronizationcontext&quot;&gt;UniTaskSynchronizationContext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#api-references&quot;&gt;API References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&quot;&gt;UPM Package&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#install-via-git-url&quot;&gt;Install via git URL&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#net-core&quot;&gt;.NET Core&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Install via &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&quot;&gt;UPM package&lt;/a&gt; with git reference or asset package(&lt;code&gt;UniTask.*.*.*.unitypackage&lt;/code&gt;) available in &lt;a href=&quot;https://github.com/Cysharp/UniTask/releases&quot;&gt;UniTask/releases&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// extension awaiter/methods can be used by this namespace
using Cysharp.Threading.Tasks;

// You can return type as struct UniTask&amp;lt;T&amp;gt;(or UniTask), it is unity specialized lightweight alternative of Task&amp;lt;T&amp;gt;
// zero allocation and fast excution for zero overhead async/await integrate with Unity
async UniTask&amp;lt;string&amp;gt; DemoAsync()
{
    // You can await Unity&#39;s AsyncObject
    var asset = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;foo&quot;);
    var txt = (await UnityWebRequest.Get(&quot;https://...&quot;).SendWebRequest()).downloadHandler.text;
    await SceneManager.LoadSceneAsync(&quot;scene2&quot;);

    // .WithCancellation enables Cancel, GetCancellationTokenOnDestroy synchornizes with lifetime of GameObject
    // after Unity 2022.2, you can use `destroyCancellationToken` in MonoBehaviour
    var asset2 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;bar&quot;).WithCancellation(this.GetCancellationTokenOnDestroy());

    // .ToUniTask accepts progress callback(and all options), Progress.Create is a lightweight alternative of IProgress&amp;lt;T&amp;gt;
    var asset3 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;baz&quot;).ToUniTask(Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x)));

    // await frame-based operation like a coroutine
    await UniTask.DelayFrame(100); 

    // replacement of yield return new WaitForSeconds/WaitForSecondsRealtime
    await UniTask.Delay(TimeSpan.FromSeconds(10), ignoreTimeScale: false);
    
    // yield any playerloop timing(PreUpdate, Update, LateUpdate, etc...)
    await UniTask.Yield(PlayerLoopTiming.PreLateUpdate);

    // replacement of yield return null
    await UniTask.Yield();
    await UniTask.NextFrame();

    // replacement of WaitForEndOfFrame
#if UNITY_2023_1_OR_NEWER
    await UniTask.WaitForEndOfFrame();
#else
    // requires MonoBehaviour(CoroutineRunner))
    await UniTask.WaitForEndOfFrame(this); // this is MonoBehaviour
#endif

    // replacement of yield return new WaitForFixedUpdate(same as UniTask.Yield(PlayerLoopTiming.FixedUpdate))
    await UniTask.WaitForFixedUpdate();
    
    // replacement of yield return WaitUntil
    await UniTask.WaitUntil(() =&amp;gt; isActive == false);

    // special helper of WaitUntil
    await UniTask.WaitUntilValueChanged(this, x =&amp;gt; x.isActive);

    // You can await IEnumerator coroutines
    await FooCoroutineEnumerator();

    // You can await a standard task
    await Task.Run(() =&amp;gt; 100);

    // Multithreading, run on ThreadPool under this code
    await UniTask.SwitchToThreadPool();

    /* work on ThreadPool */

    // return to MainThread(same as `ObserveOnMainThread` in UniRx)
    await UniTask.SwitchToMainThread();

    // get async webrequest
    async UniTask&amp;lt;string&amp;gt; GetTextAsync(UnityWebRequest req)
    {
        var op = await req.SendWebRequest();
        return op.downloadHandler.text;
    }

    var task1 = GetTextAsync(UnityWebRequest.Get(&quot;http://google.com&quot;));
    var task2 = GetTextAsync(UnityWebRequest.Get(&quot;http://bing.com&quot;));
    var task3 = GetTextAsync(UnityWebRequest.Get(&quot;http://yahoo.com&quot;));

    // concurrent async-wait and get results easily by tuple syntax
    var (google, bing, yahoo) = await UniTask.WhenAll(task1, task2, task3);

    // shorthand of WhenAll, tuple can await directly
    var (google2, bing2, yahoo2) = await (task1, task2, task3);

    // return async-value.(or you can use `UniTask`(no result), `UniTaskVoid`(fire and forget)).
    return (asset as TextAsset)?.text ?? throw new InvalidOperationException(&quot;Asset not found&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Basics of UniTask and AsyncOperation&lt;/h2&gt; 
&lt;p&gt;UniTask features rely on C# 7.0(&lt;a href=&quot;https://github.com/dotnet/roslyn/raw/master/docs/features/task-types.md&quot;&gt;task-like custom async method builder feature&lt;/a&gt;) so the required Unity version is after &lt;code&gt;Unity 2018.3&lt;/code&gt;, the official lowest version supported is &lt;code&gt;Unity 2018.4.13f1&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Why is UniTask(custom task-like object) required? Because Task is too heavy and not matched to Unity threading (single-thread). UniTask does not use threads and SynchronizationContext/ExecutionContext because Unity&#39;s asynchronous object is automaticaly dispatched by Unity&#39;s engine layer. It achieves faster and lower allocation, and is completely integrated with Unity.&lt;/p&gt; 
&lt;p&gt;You can await &lt;code&gt;AsyncOperation&lt;/code&gt;, &lt;code&gt;ResourceRequest&lt;/code&gt;, &lt;code&gt;AssetBundleRequest&lt;/code&gt;, &lt;code&gt;AssetBundleCreateRequest&lt;/code&gt;, &lt;code&gt;UnityWebRequestAsyncOperation&lt;/code&gt;, &lt;code&gt;AsyncGPUReadbackRequest&lt;/code&gt;, &lt;code&gt;IEnumerator&lt;/code&gt; and others when &lt;code&gt;using Cysharp.Threading.Tasks;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;UniTask provides three pattern of extension methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;* await asyncOperation;
* .WithCancellation(CancellationToken);
* .ToUniTask(IProgress, PlayerLoopTiming, CancellationToken);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;WithCancellation&lt;/code&gt; is a simple version of &lt;code&gt;ToUniTask&lt;/code&gt;, both return &lt;code&gt;UniTask&lt;/code&gt;. For details of cancellation, see: &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&quot;&gt;Cancellation and Exception handling&lt;/a&gt; section.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: await directly is returned from native timing of PlayerLoop but WithCancellation and ToUniTask are returned from specified PlayerLoopTiming. For details of timing, see: &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&quot;&gt;PlayerLoop&lt;/a&gt; section.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: AssetBundleRequest has &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;allAssets&lt;/code&gt;, default await returns &lt;code&gt;asset&lt;/code&gt;. If you want to get &lt;code&gt;allAssets&lt;/code&gt;, you can use &lt;code&gt;AwaitForAllAssets()&lt;/code&gt; method.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The type of &lt;code&gt;UniTask&lt;/code&gt; can use utilities like &lt;code&gt;UniTask.WhenAll&lt;/code&gt;, &lt;code&gt;UniTask.WhenAny&lt;/code&gt;, &lt;code&gt;UniTask.WhenEach&lt;/code&gt;. They are like &lt;code&gt;Task.WhenAll&lt;/code&gt;/&lt;code&gt;Task.WhenAny&lt;/code&gt; but the return type is more useful. They return value tuples so you can deconstruct each result and pass multiple types.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTaskVoid LoadManyAsync()
{
    // parallel load.
    var (a, b, c) = await UniTask.WhenAll(
        LoadAsSprite(&quot;foo&quot;),
        LoadAsSprite(&quot;bar&quot;),
        LoadAsSprite(&quot;baz&quot;));
}

async UniTask&amp;lt;Sprite&amp;gt; LoadAsSprite(string path)
{
    var resource = await Resources.LoadAsync&amp;lt;Sprite&amp;gt;(path);
    return (resource as Sprite);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to convert a callback to UniTask, you can use &lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt; which is a lightweight edition of &lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public UniTask&amp;lt;int&amp;gt; WrapByUniTaskCompletionSource()
{
    var utcs = new UniTaskCompletionSource&amp;lt;int&amp;gt;();

    // when complete, call utcs.TrySetResult();
    // when failed, call utcs.TrySetException();
    // when cancel, call utcs.TrySetCanceled();

    return utcs.Task; //return UniTask&amp;lt;int&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can convert Task -&amp;gt; UniTask: &lt;code&gt;AsUniTask&lt;/code&gt;, &lt;code&gt;UniTask&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&amp;lt;AsyncUnit&amp;gt;&lt;/code&gt;: &lt;code&gt;AsAsyncUnitUniTask&lt;/code&gt;, &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;: &lt;code&gt;AsUniTask&lt;/code&gt;. &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;&#39;s conversion cost is free.&lt;/p&gt; 
&lt;p&gt;If you want to convert async to coroutine, you can use &lt;code&gt;.ToCoroutine()&lt;/code&gt;, this is useful if you want to only allow using the coroutine system.&lt;/p&gt; 
&lt;p&gt;UniTask can not await twice. This is a similar constraint to the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask-1?view=netcore-3.1&quot;&gt;ValueTask/IValueTaskSource&lt;/a&gt; introduced in .NET Standard 2.1.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The following operations should never be performed on a ValueTask
  &lt;tresult&gt;
    instance:
  &lt;/tresult&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Awaiting the instance multiple times.&lt;/li&gt; 
  &lt;li&gt;Calling AsTask multiple times.&lt;/li&gt; 
  &lt;li&gt;Using .Result or .GetAwaiter().GetResult() when the operation hasn&#39;t yet completed, or using them multiple times.&lt;/li&gt; 
  &lt;li&gt;Using more than one of these techniques to consume the instance.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;If you do any of the above, the results are undefined.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var task = UniTask.DelayFrame(10);
await task;
await task; // NG, throws Exception
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Store to the class field, you can use &lt;code&gt;UniTask.Lazy&lt;/code&gt; that supports calling multiple times. &lt;code&gt;.Preserve()&lt;/code&gt; allows for multiple calls (internally cached results). This is useful when there are multiple calls in a function scope.&lt;/p&gt; 
&lt;p&gt;Also &lt;code&gt;UniTaskCompletionSource&lt;/code&gt; can await multiple times and await from many callers.&lt;/p&gt; 
&lt;h2&gt;Cancellation and Exception handling&lt;/h2&gt; 
&lt;p&gt;Some UniTask factory methods have a &lt;code&gt;CancellationToken cancellationToken = default&lt;/code&gt; parameter. Also some async operations for Unity have &lt;code&gt;WithCancellation(CancellationToken)&lt;/code&gt; and &lt;code&gt;ToUniTask(..., CancellationToken cancellation = default)&lt;/code&gt; extension methods.&lt;/p&gt; 
&lt;p&gt;You can pass &lt;code&gt;CancellationToken&lt;/code&gt; to parameter by standard &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.cancellationtokensource&quot;&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cts = new CancellationTokenSource();

cancelButton.onClick.AddListener(() =&amp;gt;
{
    cts.Cancel();
});

await UnityWebRequest.Get(&quot;http://google.co.jp&quot;).SendWebRequest().WithCancellation(cts.Token);

await UniTask.DelayFrame(1000, cancellationToken: cts.Token);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;CancellationToken can be created by &lt;code&gt;CancellationTokenSource&lt;/code&gt; or MonoBehaviour&#39;s extension method &lt;code&gt;GetCancellationTokenOnDestroy&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// this CancellationToken lifecycle is same as GameObject.
await UniTask.DelayFrame(1000, cancellationToken: this.GetCancellationTokenOnDestroy());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For propagate Cancellation, all async method recommend to accept &lt;code&gt;CancellationToken cancellationToken&lt;/code&gt; at last argument, and pass &lt;code&gt;CancellationToken&lt;/code&gt; from root to end.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await FooAsync(this.GetCancellationTokenOnDestroy());

// ---

async UniTask FooAsync(CancellationToken cancellationToken)
{
    await BarAsync(cancellationToken);
}

async UniTask BarAsync(CancellationToken cancellationToken)
{
    await UniTask.Delay(TimeSpan.FromSeconds(3), cancellationToken);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;CancellationToken&lt;/code&gt; means lifecycle of async. You can hold your own lifecycle insteadof default CancellationTokenOnDestroy.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class MyBehaviour : MonoBehaviour
{
    CancellationTokenSource disableCancellation = new CancellationTokenSource();
    CancellationTokenSource destroyCancellation = new CancellationTokenSource();

    private void OnEnable()
    {
        if (disableCancellation != null)
        {
            disableCancellation.Dispose();
        }
        disableCancellation = new CancellationTokenSource();
    }

    private void OnDisable()
    {
        disableCancellation.Cancel();
    }

    private void OnDestroy()
    {
        destroyCancellation.Cancel();
        destroyCancellation.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After Unity 2022.2, Unity adds CancellationToken in &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/MonoBehaviour-destroyCancellationToken.html&quot;&gt;MonoBehaviour.destroyCancellationToken&lt;/a&gt; and &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Application-exitCancellationToken.html&quot;&gt;Application.exitCancellationToken&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When cancellation is detected, all methods throw &lt;code&gt;OperationCanceledException&lt;/code&gt; and propagate upstream. When exception(not limited to &lt;code&gt;OperationCanceledException&lt;/code&gt;) is not handled in async method, it is propagated finally to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. The default behaviour of received unhandled exception is to write log as exception. Log level can be changed using &lt;code&gt;UniTaskScheduler.UnobservedExceptionWriteLogType&lt;/code&gt;. If you want to use custom behaviour, set an action to &lt;code&gt;UniTaskScheduler.UnobservedTaskException.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;And also &lt;code&gt;OperationCanceledException&lt;/code&gt; is a special exception, this is silently ignored at &lt;code&gt;UnobservedTaskException&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to cancel behaviour in an async UniTask method, throw &lt;code&gt;OperationCanceledException&lt;/code&gt; manually.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask&amp;lt;int&amp;gt; FooAsync()
{
    await UniTask.Yield();
    throw new OperationCanceledException();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you handle an exception but want to ignore(propagate to global cancellation handling), use an exception filter.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask&amp;lt;int&amp;gt; BarAsync()
{
    try
    {
        var x = await FooAsync();
        return x * 2;
    }
    catch (Exception ex) when (!(ex is OperationCanceledException)) // when (ex is not OperationCanceledException) at C# 9.0
    {
        return -1;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;throws/catch &lt;code&gt;OperationCanceledException&lt;/code&gt; is slightly heavy, so if performance is a concern, use &lt;code&gt;UniTask.SuppressCancellationThrow&lt;/code&gt; to avoid OperationCanceledException throw. It returns &lt;code&gt;(bool IsCanceled, T Result)&lt;/code&gt; instead of throwing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var (isCanceled, _) = await UniTask.DelayFrame(10, cancellationToken: cts.Token).SuppressCancellationThrow();
if (isCanceled)
{
    // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Only suppress throws if you call directly into the most source method. Otherwise, the return value will be converted, but the entire pipeline will not suppress throws.&lt;/p&gt; 
&lt;p&gt;Some features that use Unity&#39;s player loop, such as &lt;code&gt;UniTask.Yield&lt;/code&gt; and &lt;code&gt;UniTask.Delay&lt;/code&gt; etc, determines CancellationToken state on the player loop. This means it does not cancel immediately upon &lt;code&gt;CancellationToken&lt;/code&gt; fired.&lt;/p&gt; 
&lt;p&gt;If you want to change this behaviour, the cancellation to be immediate, set the &lt;code&gt;cancelImmediately&lt;/code&gt; flag as an argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await UniTask.Yield(cancellationToken, cancelImmediately: true);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Setting &lt;code&gt;cancelImmediately&lt;/code&gt; to true and detecting an immediate cancellation is more costly than the default behavior. This is because it uses &lt;code&gt;CancellationToken.Register&lt;/code&gt;; it is heavier than checking CancellationToken on the player loop.&lt;/p&gt; 
&lt;h2&gt;Timeout handling&lt;/h2&gt; 
&lt;p&gt;Timeout is a variation of cancellation. You can set timeout by &lt;code&gt;CancellationTokenSouce.CancelAfterSlim(TimeSpan)&lt;/code&gt; and pass CancellationToken to async methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cts = new CancellationTokenSource();
cts.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.

try
{
    await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest().WithCancellation(cts.Token);
}
catch (OperationCanceledException ex)
{
    if (ex.CancellationToken == cts.Token)
    {
        UnityEngine.Debug.Log(&quot;Timeout&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;CancellationTokenSouce.CancelAfter&lt;/code&gt; is a standard api. However in Unity you should not use it because it depends threading timer. &lt;code&gt;CancelAfterSlim&lt;/code&gt; is UniTask&#39;s extension methods, it uses PlayerLoop instead.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;CancellationTokenSource.CreateLinkedTokenSource&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cancelToken = new CancellationTokenSource();
cancelButton.onClick.AddListener(() =&amp;gt;
{
    cancelToken.Cancel(); // cancel from button click.
});

var timeoutToken = new CancellationTokenSource();
timeoutToken.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.

try
{
    // combine token
    var linkedTokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancelToken.Token, timeoutToken.Token);

    await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest().WithCancellation(linkedTokenSource.Token);
}
catch (OperationCanceledException ex)
{
    if (timeoutToken.IsCancellationRequested)
    {
        UnityEngine.Debug.Log(&quot;Timeout.&quot;);
    }
    else if (cancelToken.IsCancellationRequested)
    {
        UnityEngine.Debug.Log(&quot;Cancel clicked.&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optimize for reduce allocation of CancellationTokenSource for timeout per call async method, you can use UniTask&#39;s &lt;code&gt;TimeoutController&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;TimeoutController timeoutController = new TimeoutController(); // setup to field for reuse.

async UniTask FooAsync()
{
    try
    {
        // you can pass timeoutController.Timeout(TimeSpan) to cancellationToken.
        await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest()
            .WithCancellation(timeoutController.Timeout(TimeSpan.FromSeconds(5)));
        timeoutController.Reset(); // call Reset(Stop timeout timer and ready for reuse) when succeed.
    }
    catch (OperationCanceledException ex)
    {
        if (timeoutController.IsTimeout())
        {
            UnityEngine.Debug.Log(&quot;timeout&quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;new TimeoutController(CancellationToken)&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;TimeoutController timeoutController;
CancellationTokenSource clickCancelSource;

void Start()
{
    this.clickCancelSource = new CancellationTokenSource();
    this.timeoutController = new TimeoutController(clickCancelSource);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: UniTask has &lt;code&gt;.Timeout&lt;/code&gt;, &lt;code&gt;.TimeoutWithoutException&lt;/code&gt; methods however, if possible, do not use these, please pass &lt;code&gt;CancellationToken&lt;/code&gt;. Because &lt;code&gt;.Timeout&lt;/code&gt; work from external of task, can not stop timeoutted task. &lt;code&gt;.Timeout&lt;/code&gt; means ignore result when timeout. If you pass a &lt;code&gt;CancellationToken&lt;/code&gt; to the method, it will act from inside of the task, so it is possible to stop a running task.&lt;/p&gt; 
&lt;h2&gt;Progress&lt;/h2&gt; 
&lt;p&gt;Some async operations for unity have &lt;code&gt;ToUniTask(IProgress&amp;lt;float&amp;gt; progress = null, ...)&lt;/code&gt; extension methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var progress = Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x));

var request = await UnityWebRequest.Get(&quot;http://google.co.jp&quot;)
    .SendWebRequest()
    .ToUniTask(progress: progress);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should not use standard &lt;code&gt;new System.Progress&amp;lt;T&amp;gt;&lt;/code&gt;, because it causes allocation every time. Use &lt;code&gt;Cysharp.Threading.Tasks.Progress&lt;/code&gt; instead. This progress factory has two methods, &lt;code&gt;Create&lt;/code&gt; and &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt;. &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt; calls only when the progress value has changed.&lt;/p&gt; 
&lt;p&gt;Implementing IProgress interface to caller is better as there is no lambda allocation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class Foo : MonoBehaviour, IProgress&amp;lt;float&amp;gt;
{
    public void Report(float value)
    {
        UnityEngine.Debug.Log(value);
    }

    public async UniTaskVoid WebRequest()
    {
        var request = await UnityWebRequest.Get(&quot;http://google.co.jp&quot;)
            .SendWebRequest()
            .ToUniTask(progress: this); // pass this
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;PlayerLoop&lt;/h2&gt; 
&lt;p&gt;UniTask is run on a custom &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/LowLevel.PlayerLoop.html&quot;&gt;PlayerLoop&lt;/a&gt;. UniTask&#39;s playerloop based methods (such as &lt;code&gt;Delay&lt;/code&gt;, &lt;code&gt;DelayFrame&lt;/code&gt;, &lt;code&gt;asyncOperation.ToUniTask&lt;/code&gt;, etc...) accept this &lt;code&gt;PlayerLoopTiming&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public enum PlayerLoopTiming
{
    Initialization = 0,
    LastInitialization = 1,

    EarlyUpdate = 2,
    LastEarlyUpdate = 3,

    FixedUpdate = 4,
    LastFixedUpdate = 5,

    PreUpdate = 6,
    LastPreUpdate = 7,

    Update = 8,
    LastUpdate = 9,

    PreLateUpdate = 10,
    LastPreLateUpdate = 11,

    PostLateUpdate = 12,
    LastPostLateUpdate = 13
    
#if UNITY_2020_2_OR_NEWER
    TimeUpdate = 14,
    LastTimeUpdate = 15,
#endif
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It indicates when to run, you can check &lt;a href=&quot;https://gist.github.com/neuecc/bc3a1cfd4d74501ad057e49efcd7bdae&quot;&gt;PlayerLoopList.md&lt;/a&gt; to Unity&#39;s default playerloop and injected UniTask&#39;s custom loop.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is similar to &lt;code&gt;yield return null&lt;/code&gt; in a coroutine, but it is called before Update(Update and uGUI events(button.onClick, etc...) are called on &lt;code&gt;ScriptRunBehaviourUpdate&lt;/code&gt;, yield return null is called on &lt;code&gt;ScriptRunDelayedDynamicFrameRate&lt;/code&gt;). &lt;code&gt;PlayerLoopTiming.FixedUpdate&lt;/code&gt; is similar to &lt;code&gt;WaitForFixedUpdate&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;PlayerLoopTiming.LastPostLateUpdate&lt;/code&gt; is not equivalent to coroutine&#39;s &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;. Coroutine&#39;s WaitForEndOfFrame seems to run after the PlayerLoop is done. Some methods that require coroutine&#39;s end of frame(&lt;code&gt;Texture2D.ReadPixels&lt;/code&gt;, &lt;code&gt;ScreenCapture.CaptureScreenshotAsTexture&lt;/code&gt;, &lt;code&gt;CommandBuffer&lt;/code&gt;, etc) do not work correctly when replaced with async/await. In these cases, pass MonoBehaviour(coroutine runnner) to &lt;code&gt;UniTask.WaitForEndOfFrame&lt;/code&gt;. For example, &lt;code&gt;await UniTask.WaitForEndOfFrame(this);&lt;/code&gt; is lightweight allocation free alternative of &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;Note: In Unity 2023.1 or newer, &lt;code&gt;await UniTask.WaitForEndOfFrame();&lt;/code&gt; no longer requires MonoBehaviour. It uses &lt;code&gt;UnityEngine.Awaitable.EndOfFrameAsync&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;yield return null&lt;/code&gt; and &lt;code&gt;UniTask.Yield&lt;/code&gt; are similar but different. &lt;code&gt;yield return null&lt;/code&gt; always returns next frame but &lt;code&gt;UniTask.Yield&lt;/code&gt; returns next called. That is, call &lt;code&gt;UniTask.Yield(PlayerLoopTiming.Update)&lt;/code&gt; on &lt;code&gt;PreUpdate&lt;/code&gt;, it returns same frame. &lt;code&gt;UniTask.NextFrame()&lt;/code&gt; guarantees return next frame, you can expect this to behave exactly the same as &lt;code&gt;yield return null&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;UniTask.Yield(without CancellationToken) is a special type, returns &lt;code&gt;YieldAwaitable&lt;/code&gt; and runs on YieldRunner. It is the most lightweight and fastest.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;AsyncOperation&lt;/code&gt; is returned from native timing. For example, await &lt;code&gt;SceneManager.LoadSceneAsync&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.UpdatePreloading&lt;/code&gt; and after being called, the loaded scene&#39;s &lt;code&gt;Start&lt;/code&gt; is called from &lt;code&gt;EarlyUpdate.ScriptRunDelayedStartupFrame&lt;/code&gt;. Also &lt;code&gt;await UnityWebRequest&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.ExecuteMainThreadJobs&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In UniTask, await directly uses native timing, while &lt;code&gt;WithCancellation&lt;/code&gt; and &lt;code&gt;ToUniTask&lt;/code&gt; use specified timing. This is usually not a particular problem, but with &lt;code&gt;LoadSceneAsync&lt;/code&gt;, it causes a different order of Start and continuation after await. So it is recommended not to use &lt;code&gt;LoadSceneAsync.ToUniTask&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When using Unity 2023.1 or newer, ensure you have &lt;code&gt;using UnityEngine;&lt;/code&gt; in the using statements of your file when working with new &lt;code&gt;UnityEngine.Awaitable&lt;/code&gt; methods like &lt;code&gt;SceneManager.LoadSceneAsync&lt;/code&gt;. This prevents compilation errors by avoiding the use of the &lt;code&gt;UnityEngine.AsyncOperation&lt;/code&gt; version.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;In the stacktrace, you can check where it is running in playerloop.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83735571-83caea80-a68b-11ea-8d22-5e22864f0d24.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;By default, UniTask&#39;s PlayerLoop is initialized at &lt;code&gt;[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The order in which methods are called in BeforeSceneLoad is nondeterministic, so if you want to use UniTask in other BeforeSceneLoad methods, you should try to initialize it before this.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// AfterAssembliesLoaded is called before BeforeSceneLoad
[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterAssembliesLoaded)]
public static void InitUniTaskLoop()
{
    var loop = PlayerLoop.GetCurrentPlayerLoop();
    Cysharp.Threading.Tasks.PlayerLoopHelper.Initialize(ref loop);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you import Unity&#39;s &lt;code&gt;Entities&lt;/code&gt; package, that resets the custom player loop to default at &lt;code&gt;BeforeSceneLoad&lt;/code&gt; and injects ECS&#39;s loop. When Unity calls ECS&#39;s inject method after UniTask&#39;s initialize method, UniTask will no longer work.&lt;/p&gt; 
&lt;p&gt;To solve this issue, you can re-initialize the UniTask PlayerLoop after ECS is initialized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Get ECS Loop.
var playerLoop = ScriptBehaviourUpdateOrder.CurrentPlayerLoop;

// Setup UniTask&#39;s PlayerLoop.
PlayerLoopHelper.Initialize(ref playerLoop);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can diagnose whether UniTask&#39;s player loop is ready by calling &lt;code&gt;PlayerLoopHelper.IsInjectedUniTaskPlayerLoop()&lt;/code&gt;. And also &lt;code&gt;PlayerLoopHelper.DumpCurrentPlayerLoop&lt;/code&gt; logs all current playerloops to console.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;void Start()
{
    UnityEngine.Debug.Log(&quot;UniTaskPlayerLoop ready? &quot; + PlayerLoopHelper.IsInjectedUniTaskPlayerLoop());
    PlayerLoopHelper.DumpCurrentPlayerLoop();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can optimize loop cost slightly by remove unuse PlayerLoopTiming injection. You can call &lt;code&gt;PlayerLoopHelper.Initialize(InjectPlayerLoopTimings)&lt;/code&gt; on initialize.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var loop = PlayerLoop.GetCurrentPlayerLoop();
PlayerLoopHelper.Initialize(ref loop, InjectPlayerLoopTimings.Minimum); // minimum is Update | FixedUpdate | LastPostLateUpdate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;InjectPlayerLoopTimings&lt;/code&gt; has three preset, &lt;code&gt;All&lt;/code&gt; and &lt;code&gt;Standard&lt;/code&gt;(All without last except LastPostLateUpdate), &lt;code&gt;Minimum&lt;/code&gt;(&lt;code&gt;Update | FixedUpdate | LastPostLateUpdate&lt;/code&gt;). Default is All and you can combine custom inject timings like &lt;code&gt;InjectPlayerLoopTimings.Update | InjectPlayerLoopTimings.FixedUpdate | InjectPlayerLoopTimings.PreLateUpdate&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can make error to use uninjected &lt;code&gt;PlayerLoopTiming&lt;/code&gt; by &lt;a href=&quot;https://github.com/dotnet/roslyn-analyzers/raw/master/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/BannedApiAnalyzers.Help.md&quot;&gt;Microsoft.CodeAnalysis.BannedApiAnalyzers&lt;/a&gt;. For example, you can setup &lt;code&gt;BannedSymbols.txt&lt;/code&gt; like this for &lt;code&gt;InjectPlayerLoopTimings.Minimum&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;F:Cysharp.Threading.Tasks.PlayerLoopTiming.Initialization; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastInitialization; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.EarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastEarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.d
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastFixedUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PostLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.TimeUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastTimeUpdate; Isn&#39;t injected this PlayerLoop in this project.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can configure &lt;code&gt;RS0030&lt;/code&gt; severity to error.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/109150837-bb933880-77ac-11eb-85ba-4fd15819dbd0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;async void vs async UniTaskVoid&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;async void&lt;/code&gt; is a standard C# task system so it does not run on UniTask systems. It is better not to use it. &lt;code&gt;async UniTaskVoid&lt;/code&gt; is a lightweight version of &lt;code&gt;async UniTask&lt;/code&gt; because it does not have awaitable completion and reports errors immediately to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. If you don&#39;t require awaiting (fire and forget), using &lt;code&gt;UniTaskVoid&lt;/code&gt; is better. Unfortunately to dismiss warning, you&#39;re required to call &lt;code&gt;Forget()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTaskVoid FireAndForgetMethod()
{
    // do anything...
    await UniTask.Yield();
}

public void Caller()
{
    FireAndForgetMethod().Forget();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also UniTask has the &lt;code&gt;Forget&lt;/code&gt; method, it is similar to &lt;code&gt;UniTaskVoid&lt;/code&gt; and has the same effects. However &lt;code&gt;UniTaskVoid&lt;/code&gt; is more efficient if you completely don&#39;t use &lt;code&gt;await&lt;/code&gt;。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask DoAsync()
{
    // do anything...
    await UniTask.Yield();
}

public void Caller()
{
    DoAsync().Forget();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use an async lambda registered to an event, don&#39;t use &lt;code&gt;async void&lt;/code&gt;. Instead you can use &lt;code&gt;UniTask.Action&lt;/code&gt; or &lt;code&gt;UniTask.UnityAction&lt;/code&gt;, both of which create a delegate via &lt;code&gt;async UniTaskVoid&lt;/code&gt; lambda.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Action actEvent;
UnityAction unityEvent; // especially used in uGUI

// Bad: async void
actEvent += async () =&amp;gt; { };
unityEvent += async () =&amp;gt; { };

// Ok: create Action delegate by lambda
actEvent += UniTask.Action(async () =&amp;gt; { await UniTask.Yield(); });
unityEvent += UniTask.UnityAction(async () =&amp;gt; { await UniTask.Yield(); });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;UniTaskVoid&lt;/code&gt; can also be used in MonoBehaviour&#39;s &lt;code&gt;Start&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;class Sample : MonoBehaviour
{
    async UniTaskVoid Start()
    {
        // async init code.
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;UniTaskTracker&lt;/h2&gt; 
&lt;p&gt;useful for checking (leaked) UniTasks. You can open tracker window in &lt;code&gt;Window -&amp;gt; UniTask Tracker&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83527073-4434bf00-a522-11ea-86e9-3b3975b26266.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable AutoReload(Toggle) - Reload automatically.&lt;/li&gt; 
 &lt;li&gt;Reload - Reload view.&lt;/li&gt; 
 &lt;li&gt;GC.Collect - Invoke GC.Collect.&lt;/li&gt; 
 &lt;li&gt;Enable Tracking(Toggle) - Start to track async/await UniTask. Performance impact: low.&lt;/li&gt; 
 &lt;li&gt;Enable StackTrace(Toggle) - Capture StackTrace when task is started. Performance impact: high.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;UniTaskTracker is intended for debugging use only as enabling tracking and capturing stacktraces is useful but has a heavy performance impact. Recommended usage is to enable both tracking and stacktraces to find task leaks and to disable them both when done.&lt;/p&gt; 
&lt;h2&gt;External Assets&lt;/h2&gt; 
&lt;p&gt;By default, UniTask supports TextMeshPro(&lt;code&gt;BindTo(TMP_Text)&lt;/code&gt; and &lt;code&gt;TMP_InputField&lt;/code&gt; event extensions like standard uGUI &lt;code&gt;InputField&lt;/code&gt;), DOTween(&lt;code&gt;Tween&lt;/code&gt; as awaitable) and Addressables(&lt;code&gt;AsyncOperationHandle&lt;/code&gt; and &lt;code&gt;AsyncOperationHandle&amp;lt;T&amp;gt;&lt;/code&gt; as awaitable).&lt;/p&gt; 
&lt;p&gt;There are defined in separated asmdefs like &lt;code&gt;UniTask.TextMeshPro&lt;/code&gt;, &lt;code&gt;UniTask.DOTween&lt;/code&gt;, &lt;code&gt;UniTask.Addressables&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;TextMeshPro and Addressables support are automatically enabled when importing their packages from package manager. However for DOTween support, after importing from the &lt;a href=&quot;https://assetstore.unity.com/packages/tools/animation/dotween-hotween-v2-27676r&quot;&gt;DOTWeen assets&lt;/a&gt; and define the scripting define symbol &lt;code&gt;UNITASK_DOTWEEN_SUPPORT&lt;/code&gt; to enable it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// sequential
await transform.DOMoveX(2, 10);
await transform.DOMoveZ(5, 20);

// parallel with cancellation
var ct = this.GetCancellationTokenOnDestroy();

await UniTask.WhenAll(
    transform.DOMoveX(10, 3).WithCancellation(ct),
    transform.DOScale(10, 3).WithCancellation(ct));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;DOTween support&#39;s default behaviour(&lt;code&gt;await&lt;/code&gt;, &lt;code&gt;WithCancellation&lt;/code&gt;, &lt;code&gt;ToUniTask&lt;/code&gt;) awaits tween is killed. It works on both Complete(true/false) and Kill(true/false). But if you want to reuse tweens (&lt;code&gt;SetAutoKill(false)&lt;/code&gt;), it does not work as expected. If you want to await for another timing, the following extension methods exist in Tween, &lt;code&gt;AwaitForComplete&lt;/code&gt;, &lt;code&gt;AwaitForPause&lt;/code&gt;, &lt;code&gt;AwaitForPlay&lt;/code&gt;, &lt;code&gt;AwaitForRewind&lt;/code&gt;, &lt;code&gt;AwaitForStepComplete&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;AsyncEnumerable and Async LINQ&lt;/h2&gt; 
&lt;p&gt;Unity 2020.2 supports C# 8.0 so you can use &lt;code&gt;await foreach&lt;/code&gt;. This is the new Update notation in the async era.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Unity 2020.2, C# 8.0
await foreach (var _ in UniTaskAsyncEnumerable.EveryUpdate().WithCancellation(token))
{
    Debug.Log(&quot;Update() &quot; + Time.frameCount);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In a C# 7.3 environment, you can use the &lt;code&gt;ForEachAsync&lt;/code&gt; method to work in almost the same way.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// C# 7.3(Unity 2018.3~)
await UniTaskAsyncEnumerable.EveryUpdate().ForEachAsync(_ =&amp;gt;
{
    Debug.Log(&quot;Update() &quot; + Time.frameCount);
}, token);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;UniTask.WhenEach&lt;/code&gt; that is similar to .NET 9&#39;s &lt;code&gt;Task.WhenEach&lt;/code&gt; can consume new way for await multiple tasks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await foreach (var result in UniTask.WhenEach(task1, task2, task3))
{
    // The result is of type WhenEachResult&amp;lt;T&amp;gt;.
    // It contains either `T Result` or `Exception Exception`.
    // You can check `IsCompletedSuccessfully` or `IsFaulted` to determine whether to access `.Result` or `.Exception`.
    // If you want to throw an exception when `IsFaulted` and retrieve the result when successful, use `GetResult()`.
    Debug.Log(result.GetResult());
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UniTaskAsyncEnumerable implements asynchronous LINQ, similar to LINQ in &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; or Rx in &lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt;. All standard LINQ query operators can be applied to asynchronous streams. For example, the following code shows how to apply a Where filter to a button-click asynchronous stream that runs once every two clicks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).ForEachAsync(_ =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Fire and Forget style(for example, event handling), you can also use &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).Subscribe(_ =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Async LINQ is enabled when &lt;code&gt;using Cysharp.Threading.Tasks.Linq;&lt;/code&gt;, and &lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is defined in &lt;code&gt;UniTask.Linq&lt;/code&gt; asmdef.&lt;/p&gt; 
&lt;p&gt;It&#39;s closer to UniRx (Reactive Extensions), but UniTaskAsyncEnumerable is a pull-based asynchronous stream, whereas Rx was a push-based asynchronous stream. Note that although similar, the characteristics are different and the details behave differently along with them.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is the entry point like &lt;code&gt;Enumerable&lt;/code&gt;. In addition to the standard query operators, there are other generators for Unity such as &lt;code&gt;EveryUpdate&lt;/code&gt;, &lt;code&gt;Timer&lt;/code&gt;, &lt;code&gt;TimerFrame&lt;/code&gt;, &lt;code&gt;Interval&lt;/code&gt;, &lt;code&gt;IntervalFrame&lt;/code&gt;, and &lt;code&gt;EveryValueChanged&lt;/code&gt;. And also added additional UniTask original query operators like &lt;code&gt;Append&lt;/code&gt;, &lt;code&gt;Prepend&lt;/code&gt;, &lt;code&gt;DistinctUntilChanged&lt;/code&gt;, &lt;code&gt;ToHashSet&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;CombineLatest&lt;/code&gt;,&lt;code&gt;Merge&lt;/code&gt; &lt;code&gt;Do&lt;/code&gt;, &lt;code&gt;Never&lt;/code&gt;, &lt;code&gt;ForEachAsync&lt;/code&gt;, &lt;code&gt;Pairwise&lt;/code&gt;, &lt;code&gt;Publish&lt;/code&gt;, &lt;code&gt;Queue&lt;/code&gt;, &lt;code&gt;Return&lt;/code&gt;, &lt;code&gt;SkipUntil&lt;/code&gt;, &lt;code&gt;TakeUntil&lt;/code&gt;, &lt;code&gt;SkipUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeLast&lt;/code&gt;, &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The method with Func as an argument has three additional overloads, &lt;code&gt;***Await&lt;/code&gt;, &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Select(Func&amp;lt;T, TR&amp;gt; selector)
SelectAwait(Func&amp;lt;T, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)
SelectAwaitWithCancellation(Func&amp;lt;T, CancellationToken, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use the &lt;code&gt;async&lt;/code&gt; method inside the func, use the &lt;code&gt;***Await&lt;/code&gt; or &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;How to create an async iterator: C# 8.0 supports async iterator(&lt;code&gt;async yield return&lt;/code&gt;) but it only allows &lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; and of course requires C# 8.0. UniTask supports &lt;code&gt;UniTaskAsyncEnumerable.Create&lt;/code&gt; method to create custom async iterator.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// IAsyncEnumerable, C# 8.0 version of async iterator. ( do not use this style, IAsyncEnumerable is not controled in UniTask).
public async IAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate([EnumeratorCancellation]CancellationToken cancelationToken = default)
{
    var frameCount = 0;
    await UniTask.Yield();
    while (!token.IsCancellationRequested)
    {
        yield return frameCount++;
        await UniTask.Yield();
    }
}

// UniTaskAsyncEnumerable.Create and use `await writer.YieldAsync` instead of `yield return`.
public IUniTaskAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate()
{
    // writer(IAsyncWriter&amp;lt;T&amp;gt;) has `YieldAsync(value)` method.
    return UniTaskAsyncEnumerable.Create&amp;lt;int&amp;gt;(async (writer, token) =&amp;gt;
    {
        var frameCount = 0;
        await UniTask.Yield();
        while (!token.IsCancellationRequested)
        {
            await writer.YieldAsync(frameCount++); // instead of `yield return`
            await UniTask.Yield();
        }
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Awaitable Events&lt;/h2&gt; 
&lt;p&gt;All uGUI component implements &lt;code&gt;***AsAsyncEnumerable&lt;/code&gt; to convert asynchronous streams of events.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;async UniTask TripleClick()
{
    // In default, used button.GetCancellationTokenOnDestroy to manage lieftime of async
    await button.OnClickAsync();
    await button.OnClickAsync();
    await button.OnClickAsync();
    Debug.Log(&quot;Three times clicked&quot;);
}

// more efficient way
async UniTask TripleClick()
{
    using (var handler = button.GetAsyncClickEventHandler())
    {
        await handler.OnClickAsync();
        await handler.OnClickAsync();
        await handler.OnClickAsync();
        Debug.Log(&quot;Three times clicked&quot;);
    }
}

// use async LINQ
async UniTask TripleClick(CancellationToken token)
{
    await button.OnClickAsAsyncEnumerable().Take(3).Last();
    Debug.Log(&quot;Three times clicked&quot;);
}

// use async LINQ2
async UniTask TripleClick(CancellationToken token)
{
    await button.OnClickAsAsyncEnumerable().Take(3).ForEachAsync(_ =&amp;gt;
    {
        Debug.Log(&quot;Every clicked&quot;);
    });
    Debug.Log(&quot;Three times clicked, complete.&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All MonoBehaviour message events can convert async-streams by &lt;code&gt;AsyncTriggers&lt;/code&gt; that can be enabled by &lt;code&gt;using Cysharp.Threading.Tasks.Triggers;&lt;/code&gt;. AsyncTrigger can be created using &lt;code&gt;GetAsync***Trigger&lt;/code&gt; and triggers itself as UniTaskAsyncEnumerable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var trigger = this.GetOnCollisionEnterAsyncHandler();
await trigger.OnCollisionEnterAsync();
await trigger.OnCollisionEnterAsync();
await trigger.OnCollisionEnterAsync();

// every moves.
await this.GetAsyncMoveTrigger().ForEachAsync(axisEventData =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;AsyncReactiveProperty&lt;/code&gt;, &lt;code&gt;AsyncReadOnlyReactiveProperty&lt;/code&gt; is UniTask&#39;s version of ReactiveProperty. &lt;code&gt;BindTo&lt;/code&gt; extension method of &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; for binding asynchronous stream values to Unity components(Text/Selectable/TMP/Text).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var rp = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);

// AsyncReactiveProperty itself is IUniTaskAsyncEnumerable, you can query by LINQ
rp.ForEachAsync(x =&amp;gt;
{
    Debug.Log(x);
}, this.GetCancellationTokenOnDestroy()).Forget();

rp.Value = 10; // push 10 to all subscriber
rp.Value = 11; // push 11 to all subscriber

// WithoutCurrent ignore initial value
// BindTo bind stream value to unity components.
rp.WithoutCurrent().BindTo(this.textComponent);

await rp.WaitAsync(); // wait until next value set

// also exists ToReadOnlyAsyncReactiveProperty
var rp2 = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);
var rorp = rp.CombineLatest(rp2, (x, y) =&amp;gt; (x, y)).ToReadOnlyAsyncReactiveProperty(CancellationToken.None);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A pull-type asynchronous stream does not get the next values until the asynchronous processing in the sequence is complete. This could spill data from push-type events such as buttons.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// can not get click event during 3 seconds complete.
await button.OnClickAsAsyncEnumerable().ForEachAwaitAsync(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is useful (prevent double-click) but not useful sometimes.&lt;/p&gt; 
&lt;p&gt;Using the &lt;code&gt;Queue()&lt;/code&gt; method will also queue events during asynchronous processing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// queued message in asynchronous processing
await button.OnClickAsAsyncEnumerable().Queue().ForEachAwaitAsync(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use &lt;code&gt;Subscribe&lt;/code&gt;, fire and forget style.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;button.OnClickAsAsyncEnumerable().Subscribe(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Channel&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Channel&lt;/code&gt; is the same as &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.channels?view=netcore-3.1&quot;&gt;System.Threading.Tasks.Channels&lt;/a&gt; which is similar to a GoLang Channel.&lt;/p&gt; 
&lt;p&gt;Currently it only supports multiple-producer, single-consumer unbounded channels. It can create by &lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For producer(&lt;code&gt;.Writer&lt;/code&gt;), use &lt;code&gt;TryWrite&lt;/code&gt; to push value and &lt;code&gt;TryComplete&lt;/code&gt; to complete channel. For consumer(&lt;code&gt;.Reader&lt;/code&gt;), use &lt;code&gt;TryRead&lt;/code&gt;, &lt;code&gt;WaitToReadAsync&lt;/code&gt;, &lt;code&gt;ReadAsync&lt;/code&gt;, &lt;code&gt;Completion&lt;/code&gt; and &lt;code&gt;ReadAllAsync&lt;/code&gt; to read queued messages.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ReadAllAsync&lt;/code&gt; returns &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; so query LINQ operators. Reader only allows single-consumer but uses &lt;code&gt;.Publish()&lt;/code&gt; query operator to enable multicast message. For example, make pub/sub utility.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class AsyncMessageBroker&amp;lt;T&amp;gt; : IDisposable
{
    Channel&amp;lt;T&amp;gt; channel;

    IConnectableUniTaskAsyncEnumerable&amp;lt;T&amp;gt; multicastSource;
    IDisposable connection;

    public AsyncMessageBroker()
    {
        channel = Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;();
        multicastSource = channel.Reader.ReadAllAsync().Publish();
        connection = multicastSource.Connect(); // Publish returns IConnectableUniTaskAsyncEnumerable.
    }

    public void Publish(T value)
    {
        channel.Writer.TryWrite(value);
    }

    public IUniTaskAsyncEnumerable&amp;lt;T&amp;gt; Subscribe()
    {
        return multicastSource;
    }

    public void Dispose()
    {
        channel.Writer.TryComplete();
        connection.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;vs Awaitable&lt;/h2&gt; 
&lt;p&gt;Unity 6 introduces the awaitable type, &lt;a href=&quot;https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Awaitable.html&quot;&gt;Awaitable&lt;/a&gt;. To put it simply, Awaitable can be considered a subset of UniTask, and in fact, Awaitable&#39;s design was influenced by UniTask. It should be able to handle PlayerLoop-based awaits, pooled Tasks, and support for cancellation with &lt;code&gt;CancellationToken&lt;/code&gt; in a similar way. With its inclusion in the standard library, you may wonder whether to continue using UniTask or migrate to Awaitable. Here&#39;s a brief guide.&lt;/p&gt; 
&lt;p&gt;First, the functionality provided by Awaitable is equivalent to what coroutines offer. Instead of &lt;code&gt;yield return&lt;/code&gt;, you use await; &lt;code&gt;await NextFrameAsync()&lt;/code&gt; replaces &lt;code&gt;yield return null&lt;/code&gt;; and there are equivalents for &lt;code&gt;WaitForSeconds&lt;/code&gt; and &lt;code&gt;EndOfFrame&lt;/code&gt;. However, that&#39;s the extent of it. Being coroutine-based in terms of functionality, it lacks Task-based features. In practical application development using async/await, operations like &lt;code&gt;WhenAll&lt;/code&gt; are essential. Additionally, UniTask enables many frame-based operations (such as &lt;code&gt;DelayFrame&lt;/code&gt;) and more flexible PlayerLoopTiming control, which are not available in Awaitable. Of course, there&#39;s no Tracker Window either.&lt;/p&gt; 
&lt;p&gt;Therefore, I recommend using UniTask for application development. UniTask is a superset of Awaitable and includes many essential features. For library development, where you want to avoid external dependencies, using Awaitable as a return type for methods would be appropriate. Awaitable can be converted to UniTask using &lt;code&gt;AsUniTask&lt;/code&gt;, so there&#39;s no issue in handling Awaitable-based functionality within the UniTask library. Of course, if you don&#39;t need to worry about dependencies, using UniTask would be the best choice even for library development.&lt;/p&gt; 
&lt;h2&gt;For Unit Testing&lt;/h2&gt; 
&lt;p&gt;Unity&#39;s &lt;code&gt;[UnityTest]&lt;/code&gt; attribute can test coroutine(IEnumerator) but can not test async. &lt;code&gt;UniTask.ToCoroutine&lt;/code&gt; bridges async/await to coroutine so you can test async methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[UnityTest]
public IEnumerator DelayIgnore() =&amp;gt; UniTask.ToCoroutine(async () =&amp;gt;
{
    var time = Time.realtimeSinceStartup;

    Time.timeScale = 0.5f;
    try
    {
        await UniTask.Delay(TimeSpan.FromSeconds(3), ignoreTimeScale: true);

        var elapsed = Time.realtimeSinceStartup - time;
        Assert.AreEqual(3, (int)Math.Round(TimeSpan.FromSeconds(elapsed).TotalSeconds, MidpointRounding.ToEven));
    }
    finally
    {
        Time.timeScale = 1.0f;
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UniTask&#39;s own unit tests are written using Unity Test Runner and &lt;a href=&quot;https://github.com/Cysharp/RuntimeUnitTestToolkit&quot;&gt;Cysharp/RuntimeUnitTestToolkit&lt;/a&gt; to integrate with CI and check if IL2CPP is working.&lt;/p&gt; 
&lt;h2&gt;ThreadPool limitation&lt;/h2&gt; 
&lt;p&gt;Most UniTask methods run on a single thread (PlayerLoop), with only &lt;code&gt;UniTask.Run&lt;/code&gt;(&lt;code&gt;Task.Run&lt;/code&gt; equivalent) and &lt;code&gt;UniTask.SwitchToThreadPool&lt;/code&gt; running on a thread pool. If you use a thread pool, it won&#39;t work with WebGL and so on.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;UniTask.Run&lt;/code&gt; is now deprecated. You can use &lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt; instead. And also consider whether you can use &lt;code&gt;UniTask.Create&lt;/code&gt; or &lt;code&gt;UniTask.Void&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;IEnumerator.ToUniTask limitation&lt;/h2&gt; 
&lt;p&gt;You can convert coroutine(IEnumerator) to UniTask(or await directly) but it has some limitations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;WaitForEndOfFrame&lt;/code&gt;/&lt;code&gt;WaitForFixedUpdate&lt;/code&gt;/&lt;code&gt;Coroutine&lt;/code&gt; is not supported.&lt;/li&gt; 
 &lt;li&gt;Consuming loop timing is not the same as &lt;code&gt;StartCoroutine&lt;/code&gt;, it uses the specified &lt;code&gt;PlayerLoopTiming&lt;/code&gt; and the default &lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is run before MonoBehaviour&#39;s &lt;code&gt;Update&lt;/code&gt; and &lt;code&gt;StartCoroutine&lt;/code&gt;&#39;s loop.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you want fully compatible conversion from coroutine to async, use the &lt;code&gt;IEnumerator.ToUniTask(MonoBehaviour coroutineRunner)&lt;/code&gt; overload. It executes StartCoroutine on an instance of the argument MonoBehaviour and waits for it to complete in UniTask.&lt;/p&gt; 
&lt;h2&gt;For UnityEditor&lt;/h2&gt; 
&lt;p&gt;UniTask can run on Unity Editor like an Editor Coroutine. However, there are some limitations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UniTask.Delay&#39;s DelayType.DeltaTime, UnscaledDeltaTime do not work correctly because they can not get deltaTime in editor. Therefore run on EditMode, automatically change DelayType to &lt;code&gt;DelayType.Realtime&lt;/code&gt; that wait for the right time.&lt;/li&gt; 
 &lt;li&gt;All PlayerLoopTiming run on the timing &lt;code&gt;EditorApplication.update&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-batchmode&lt;/code&gt; with &lt;code&gt;-quit&lt;/code&gt; does not work because Unity does not run &lt;code&gt;EditorApplication.update&lt;/code&gt; and quit after a single frame. Instead, don&#39;t use &lt;code&gt;-quit&lt;/code&gt; and quit manually with &lt;code&gt;EditorApplication.Exit(0)&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Compare with Standard Task API&lt;/h2&gt; 
&lt;p&gt;UniTask has many standard Task-like APIs. This table shows what the alternative apis are.&lt;/p&gt; 
&lt;p&gt;Use standard type.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;.NET Type&lt;/th&gt; 
   &lt;th&gt;UniTask Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IProgress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Use UniTask type.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;.NET Type&lt;/th&gt; 
   &lt;th&gt;UniTask Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task&lt;/code&gt;/&lt;code&gt;ValueTask&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;ValueTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;async void&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;async UniTaskVoid&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;+= async () =&amp;gt; { }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Void&lt;/code&gt;, &lt;code&gt;UniTask.Action&lt;/code&gt;, &lt;code&gt;UniTask.UnityAction&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;---&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;AutoResetUniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ManualResetValueTaskSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IValueTaskSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskSource&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IValueTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ValueTask.IsCompleted&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ValueTask&amp;lt;T&amp;gt;.IsCompleted&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;new Progress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Progress.Create&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken.Register(UnsafeRegister)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken.RegisterWithoutCaptureExecutionContext&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfter&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfterSlim&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Channel.CreateUnbounded&amp;lt;T&amp;gt;(false){ SingleReader = true }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncDisposable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Delay&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Delay&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Yield&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Yield&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Run&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenAll&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenAll&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenAny&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenAny&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenEach&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenEach&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.CompletedTask&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.CompletedTask&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromException&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromException&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromResult&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromResult&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromCanceled&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromCanceled&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.ContinueWith&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.ContinueWith&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Pooling Configuration&lt;/h2&gt; 
&lt;p&gt;UniTask aggressively caches async promise objects to achieve zero allocation (for technical details, see blog post &lt;a href=&quot;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&quot;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ&lt;/a&gt;). By default, it caches all promises but you can configure &lt;code&gt;TaskPool.SetMaxPoolSize&lt;/code&gt; to your value, the value indicates cache size per type. &lt;code&gt;TaskPool.GetCacheSizeInfo&lt;/code&gt; returns currently cached objects in pool.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;foreach (var (type, size) in TaskPool.GetCacheSizeInfo())
{
    Debug.Log(type + &quot;:&quot; + size);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Allocation on Profiler&lt;/h2&gt; 
&lt;p&gt;In UnityEditor the profiler shows allocation of compiler generated AsyncStateMachine but it only occurs in debug(development) build. C# Compiler generates AsyncStateMachine as class on Debug build and as struct on Release build.&lt;/p&gt; 
&lt;p&gt;Unity supports Code Optimization option starting in 2020.1 (right, footer).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/89967342-2f944600-dc8c-11ea-99fc-0b74527a16f6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;You can change C# compiler optimization to release to remove AsyncStateMachine allocation in development builds. This optimization option can also be set via &lt;code&gt;Compilation.CompilationPipeline-codeOptimization&lt;/code&gt;, and &lt;code&gt;Compilation.CodeOptimization&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;UniTaskSynchronizationContext&lt;/h2&gt; 
&lt;p&gt;Unity&#39;s default SynchronizationContext(&lt;code&gt;UnitySynchronizationContext&lt;/code&gt;) is a poor implementation for performance. UniTask bypasses &lt;code&gt;SynchronizationContext&lt;/code&gt;(and &lt;code&gt;ExecutionContext&lt;/code&gt;) so it does not use it but if exists in &lt;code&gt;async Task&lt;/code&gt;, still used it. &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is a replacement of &lt;code&gt;UnitySynchronizationContext&lt;/code&gt; which is better for performance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SyncContextInjecter
{
    [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
    public static void Inject()
    {
        SynchronizationContext.SetSynchronizationContext(new UniTaskSynchronizationContext());
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is an optional choice and is not always recommended; &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is less performant than &lt;code&gt;async UniTask&lt;/code&gt; and is not a complete UniTask replacement. It also does not guarantee full behavioral compatibility with the &lt;code&gt;UnitySynchronizationContext&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;API References&lt;/h2&gt; 
&lt;p&gt;UniTask&#39;s API References are hosted at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.html&quot;&gt;cysharp.github.io/UniTask&lt;/a&gt; by &lt;a href=&quot;https://dotnet.github.io/docfx/&quot;&gt;DocFX&lt;/a&gt; and &lt;a href=&quot;https://github.com/Cysharp/DocfxTemplate&quot;&gt;Cysharp/DocfXTemplate&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For example, UniTask&#39;s factory methods can be seen at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.UniTask.html#methods-1&quot;&gt;UniTask#methods&lt;/a&gt;. UniTaskAsyncEnumerable&#39;s factory/extension methods can be seen at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.Linq.UniTaskAsyncEnumerable.html#methods-1&quot;&gt;UniTaskAsyncEnumerable#methods&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;UPM Package&lt;/h2&gt; 
&lt;h3&gt;Install via git URL&lt;/h3&gt; 
&lt;p&gt;Requires a version of unity that supports path query parameter for git packages (Unity &amp;gt;= 2019.3.4f1, Unity &amp;gt;= 2020.1a21). You can add &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&lt;/code&gt; to Package Manager&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/79450714-3aadd100-8020-11ea-8aae-b8d87fc4d7be.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83702872-e0f17c80-a648-11ea-8183-7469dcd4f810.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;or add &lt;code&gt;&quot;com.cysharp.unitask&quot;: &quot;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&quot;&lt;/code&gt; to &lt;code&gt;Packages/manifest.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to set a target version, UniTask uses the &lt;code&gt;*.*.*&lt;/code&gt; release tag so you can specify a version like &lt;code&gt;#2.1.0&lt;/code&gt;. For example &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask#2.1.0&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;.NET Core&lt;/h2&gt; 
&lt;p&gt;For .NET Core, use NuGet.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/UniTask&quot;&gt;UniTask&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;UniTask of .NET Core version is a subset of Unity UniTask with PlayerLoop dependent methods removed.&lt;/p&gt; 
&lt;p&gt;It runs at higher performance than the standard Task/ValueTask, but you should be careful to ignore the ExecutionContext/SynchronizationContext when using it. &lt;code&gt;AsyncLocal&lt;/code&gt; also does not work because it ignores ExecutionContext.&lt;/p&gt; 
&lt;p&gt;If you use UniTask internally, but provide ValueTask as an external API, you can write it like the following(Inspired by &lt;a href=&quot;https://github.com/mgravell/PooledAwait&quot;&gt;PooledAwait&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class ZeroAllocAsyncAwaitInDotNetCore
{
    public ValueTask&amp;lt;int&amp;gt; DoAsync(int x, int y)
    {
        return Core(this, x, y);

        static async UniTask&amp;lt;int&amp;gt; Core(ZeroAllocAsyncAwaitInDotNetCore self, int x, int y)
        {
            // do anything...
            await Task.Delay(TimeSpan.FromSeconds(x + y));
            await UniTask.Yield();

            return 10;
        }
    }
}

// UniTask does not return to original SynchronizationContext but you can use helper `ReturnToCurrentSynchronizationContext`.
public ValueTask TestAsync()
{
    await using (UniTask.ReturnToCurrentSynchronizationContext())
    {
        await UniTask.SwitchToThreadPool();
        // do anything..
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;.NET Core version is intended to allow users to use UniTask as an interface when sharing code with Unity (such as &lt;a href=&quot;https://github.com/Cysharp/MagicOnion/&quot;&gt;Cysharp/MagicOnion&lt;/a&gt;). .NET Core version of UniTask enables smooth code sharing.&lt;/p&gt; 
&lt;p&gt;Utility methods such as WhenAll which are equivalent to UniTask are provided as &lt;a href=&quot;https://github.com/Cysharp/ValueTaskSupplement&quot;&gt;Cysharp/ValueTaskSupplement&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is under the MIT License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Azure-Samples/cognitive-services-speech-sdk</title>
      <link>https://github.com/Azure-Samples/cognitive-services-speech-sdk</link>
      <description>&lt;p&gt;Sample code for the Microsoft Cognitive Services Speech SDK&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; 
&lt;p&gt;page_type: sample languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;cpp&lt;/li&gt; 
 &lt;li&gt;csharp&lt;/li&gt; 
 &lt;li&gt;java&lt;/li&gt; 
 &lt;li&gt;javascript&lt;/li&gt; 
 &lt;li&gt;nodejs&lt;/li&gt; 
 &lt;li&gt;objc&lt;/li&gt; 
 &lt;li&gt;python&lt;/li&gt; 
 &lt;li&gt;swift name: &quot;Microsoft Cognitive Services Speech SDK Samples&quot; description: &quot;Learn how to use the Microsoft Cognitive Services Speech SDK to add speech-enabled features to your apps.&quot; products:&lt;/li&gt; 
 &lt;li&gt;azure&lt;/li&gt; 
 &lt;li&gt;azure-cognitive-services&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;Sample Repository for the Microsoft Cognitive Services Speech SDK&lt;/h1&gt; 
&lt;p&gt;This project hosts the &lt;strong&gt;samples&lt;/strong&gt; for the Microsoft Cognitive Services Speech SDK. To find out more about the Microsoft Cognitive Services Speech SDK itself, please visit the &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;SDK documentation site&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;News&lt;/h2&gt; 
&lt;p&gt;Please check &lt;a href=&quot;https://aka.ms/csspeech/whatsnew&quot;&gt;here&lt;/a&gt; for release notes and older releases.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;This repository hosts samples that help you to get started with several features of the SDK. In addition more complex scenarios are included to give you a head-start on using speech technology in your application.&lt;/p&gt; 
&lt;p&gt;We tested the samples with the latest released version of the SDK on Windows 10, Linux (on &lt;a href=&quot;https://docs.microsoft.com/azure/cognitive-services/speech-service/speech-sdk?tabs=linux&quot;&gt;supported Linux distributions and target architectures&lt;/a&gt;), Android devices (API 23: Android 6.0 Marshmallow or higher), Mac x64 (OS version 10.14 or higher) and Mac M1 arm64 (OS version 11.0 or higher) and iOS 11.4 devices.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;SDK documentation&lt;/a&gt; has extensive sections about getting started, setting up the SDK, as well as the process to acquire the required subscription keys. You will need subscription keys to run the samples on your machines, you therefore should follow the instructions on these pages before continuing.&lt;/p&gt; 
&lt;h2&gt;Get the samples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The easiest way to use these samples without using Git is to download the current version as a &lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/archive/master.zip&quot;&gt;ZIP file&lt;/a&gt;.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;On Windows, before you unzip the archive, right-click it, select &lt;strong&gt;Properties&lt;/strong&gt;, and then select &lt;strong&gt;Unblock&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Be sure to unzip the entire archive, and not just individual samples.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone this sample repository using a Git client.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build and run the samples&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note: the samples make use of the Microsoft Cognitive Services Speech SDK. By downloading the Microsoft Cognitive Services Speech SDK, you acknowledge its license, see &lt;a href=&quot;https://aka.ms/csspeech/license&quot;&gt;Speech SDK license agreement&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Please see the description of each individual sample for instructions on how to build and run it.&lt;/p&gt; 
&lt;h2&gt;Related GitHub repositories&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&quot;&gt;Azure-Samples/Cognitive-Services-Voice-Assistant&lt;/a&gt; - Additional samples and tools to help you build an application that uses Speech SDK&#39;s DialogServiceConnector for voice communication with your &lt;a href=&quot;https://dev.botframework.com/&quot;&gt;Bot-Framework bot&lt;/a&gt; or &lt;a href=&quot;https://docs.microsoft.com/azure/cognitive-services/speech-service/custom-commands&quot;&gt;Custom Command&lt;/a&gt; web application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/cognitive-services-speech-sdk-js&quot;&gt;microsoft/cognitive-services-speech-sdk-js&lt;/a&gt; - JavaScript implementation of Speech SDK&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/cognitive-services-speech-sdk-go&quot;&gt;Microsoft/cognitive-services-speech-sdk-go&lt;/a&gt; - Go implementation of Speech SDK&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Azure-Samples/Speech-Service-Actions-Template&quot;&gt;Azure-Samples/Speech-Service-Actions-Template&lt;/a&gt; - Template to create a repository to develop Azure Custom Speech models with built-in support for DevOps and common software engineering practices&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Speech recognition quickstarts&lt;/h3&gt; 
&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech recognition using a microphone. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Quickstart&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/linux/from-microphone&quot;&gt;Quickstart C++ for Linux&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/from-microphone&quot;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/macos/from-microphone&quot;&gt;Quickstart C++ for macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/from-microphone&quot;&gt;Quickstart C# .NET for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/from-microphone&quot;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/from-microphone&quot;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/unity/from-microphone&quot;&gt;Quickstart C# Unity (Windows or Android)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/android/from-microphone&quot;&gt;Quickstart for Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/from-microphone&quot;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/javascript/browser&quot;&gt;Quickstart JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Web&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/javascript/node&quot;&gt;Quickstart Node.js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a file.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/python/from-microphone&quot;&gt;Quickstart Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/ios/from-microphone&quot;&gt;Quickstart Objective-C iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a file with recorded speech.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/ios/from-microphone&quot;&gt;Quickstart Swift iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/macos/from-microphone&quot;&gt;Quickstart Objective-C macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/macos/from-microphone&quot;&gt;Quickstart Swift macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Speech translation quickstarts&lt;/h3&gt; 
&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech translation using a microphone. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Quickstart&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/translate-speech-to-text&quot;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/translate-speech-to-text&quot;&gt;Quickstart C# .NET Framework for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/translate-speech-to-text&quot;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/translate-speech-to-text&quot;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/translate-speech-to-text&quot;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Speech synthesis quickstarts&lt;/h3&gt; 
&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech synthesis to a speaker. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Quickstart&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/linux/text-to-speech&quot;&gt;Quickstart C++ for Linux&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/text-to-speech&quot;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/macos/text-to-speech&quot;&gt;Quickstart C++ for macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/text-to-speech&quot;&gt;Quickstart C# .NET for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/text-to-speech&quot;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/text-to-speech&quot;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/unity/text-to-speech&quot;&gt;Quickstart for C# Unity (Windows or Android)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to a synthesis result and then rendering to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/android/text-to-speech&quot;&gt;Quickstart for Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/text-to-speech&quot;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/python/text-to-speech&quot;&gt;Quickstart Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/ios/text-to-speech&quot;&gt;Quickstart Objective-C iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to a synthesis result and then rendering to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/ios/text-to-speech&quot;&gt;Quickstart Swift iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/macos/text-to-speech&quot;&gt;Quickstart Objective-C macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/macos/text-to-speech&quot;&gt;Quickstart Swift macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Voice Assistant quickstarts&lt;/h3&gt; 
&lt;p&gt;The following quickstarts demonstrate how to create a custom Voice Assistant. The applications will connect to a previously authored bot configured to use the Direct Line Speech channel, send a voice request, and return a voice response activity (if configured). If you want to build these quickstarts from scratch, please follow the quickstart or basics articles on our &lt;a href=&quot;https://docs.microsoft.com/azure/cognitive-services/speech-service/index-voice-assistants&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See also &lt;a href=&quot;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&quot;&gt;Azure-Samples/Cognitive-Services-Voice-Assistant&lt;/a&gt; for full Voice Assistant samples and tools.&lt;/p&gt; 
&lt;br&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Quickstart&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/virtual-assistant&quot;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/virtual-assistant&quot;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Samples&lt;/h3&gt; 
&lt;p&gt;The following samples demonstrate additional capabilities of the Speech SDK, such as additional modes of speech recognition as well as intent recognition and translation. Voice Assistant samples can be found in a &lt;a href=&quot;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&quot;&gt;separate GitHub repo&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Sample&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/cpp/windows/console&quot;&gt;C++ Console app for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, conversation transcription and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/cpp/linux/compressed-audio-input&quot;&gt;C++ Speech Recognition from MP3/Opus file (Linux only)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition from an MP3/Opus file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/dotnet-windows/console&quot;&gt;C# Console app for .NET Framework on Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/dotnetcore/console&quot;&gt;C# Console app for .NET Core (Windows or Linux)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/java/jre/console&quot;&gt;Java Console app for JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/python/console&quot;&gt;Python Console app&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/speechtotext-uwp&quot;&gt;Speech-to-text UWP sample&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/texttospeech-uwp&quot;&gt;Text-to-speech UWP sample&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech synthesis&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/java/android/sdkdemo/&quot;&gt;Speech recognition sample for Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech and intent recognition&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/js/browser/&quot;&gt;Speech recognition, synthesis, and translation sample for the browser, using JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Web&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/js/node&quot;&gt;Speech recognition and translation sample using JavaScript and Node.js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&quot;&gt;Speech recognition sample for iOS using a connection object&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&quot;&gt;Extended speech recognition sample for iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition using streams etc.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&quot;&gt;Speech synthesis sample for iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech synthesis using streams etc.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/virtualassistant-uwp/&quot;&gt;C# UWP DialogServiceConnector sample for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/unity/speechrecognizer/&quot;&gt;C# Unity sample for Windows or Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation for Unity&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/unity/VirtualAssistantPreview/&quot;&gt;C# Unity SpeechBotConnector sample for Windows or Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition through the SpeechBotConnector and receiving activity responses.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&quot;&gt;C#, C++ and Java DialogServiceConnector samples&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, Android&lt;/td&gt; 
   &lt;td&gt;Additional samples and tools to help you build an application that uses Speech SDK&#39;s DialogServiceConnector for voice communication with your &lt;a href=&quot;https://dev.botframework.com/&quot;&gt;Bot-Framework Bot&lt;/a&gt; or &lt;a href=&quot;https://docs.microsoft.com/azure/cognitive-services/speech-service/custom-commands&quot;&gt;Custom Command&lt;/a&gt; web application.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Samples for using the Speech Service REST API (no Speech SDK installation required):&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Sample&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/batch/&quot;&gt;Batch transcription&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Demonstrates usage of batch transcription from different programming languages&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/batch-synthesis/&quot;&gt;Batch synthesis&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Demonstrates usage of batch synthesis from different programming languages&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Enumerate audio devices&lt;/td&gt; 
   &lt;td&gt;C++, Windows&lt;/td&gt; 
   &lt;td&gt;Shows how to get the Device ID of all connected microphones and loudspeakers. Device ID is required if you want to listen via non-default microphone (Speech Recognition), or play to a non-default loudspeaker (Text-To-Speech) using Speech SDK&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Enumerate audio devices&lt;/td&gt; 
   &lt;td&gt;C# .NET Framework, Windows&lt;/td&gt; 
   &lt;td&gt;-&quot;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Sample data for Custom Speech&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/sampledata/customspeech&quot;&gt;Sample data for Custom Speech&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;Microsoft Cognitive Services Speech Service and SDK Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>seerge/g-helper</title>
      <link>https://github.com/seerge/g-helper</link>
      <description>&lt;p&gt;Lightweight Armoury Crate alternative for Asus laptops and ROG Ally. Control tool for ROG Zephyrus G14, G15, G16, M16, Flow X13, Flow X16, TUF, Strix, Scar and other models&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;G-Helper - Lightweight control tool for Asus laptops&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://u24.gov.ua/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/seerge/g-helper/main/docs/ua.png&quot; alt=&quot;United24&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/seerge/g-helper/releases/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/seerge/g-helper&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/seerge/g-helper/releases/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/seerge/g-helper/total&quot; alt=&quot;Github all releases&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/seerge/g-helper/stargazers/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/seerge/g-helper.svg?style=social&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt; &lt;sup&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/raw/main/docs/README.zh-CN.md&quot;&gt;中文版点这里&lt;/a&gt;&lt;/sup&gt; &lt;sup&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/raw/main/docs/README.ja-JP.md&quot;&gt;日本語はこちら&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; 
&lt;p&gt;Small and lightweight Armoury Crate alternative for Asus laptops offering almost same functionality with a much smaller footprint. Works with all popular models, such as ROG Zephyrus G14, G15, G16, M16, Flow X13, Flow X16, Flow Z13, DUO, TUF Series, Strix or Scar Series, ProArt, Vivobook, Zenbook, ROG Ally or Ally X and many more!&lt;/p&gt; 
&lt;h1&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/releases/latest/download/GHelper.zip&quot;&gt;&lt;span&gt;💾&lt;/span&gt; Download&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;⭐ If you like the app - please spread the word about it online&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Support Project&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://www.paypal.com/donate/?hosted_button_id=Y7UNMPRNLB5X2&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/seerge/g-helper/main/docs/paypal-eur.png&quot; height=&quot;36&quot; alt=&quot;PayPal EUR&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://www.paypal.com/donate/?hosted_button_id=JSMU7DFHFSJMW&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/seerge/g-helper/main/docs/paypal-usd.png&quot; height=&quot;36&quot; alt=&quot;PayPal USD&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://buy.stripe.com/8wM6pt8HbgK50tWbIK&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/seerge/g-helper/main/docs/stripe.png&quot; height=&quot;36&quot; alt=&quot;Stripe&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://buy.stripe.com/6oE29dg9D3Xj7Wo28b&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/seerge/g-helper/main/docs/alipay.png&quot; height=&quot;36&quot; alt=&quot;Alipay&quot;&gt;&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/wiki/Requirements&quot;&gt;Setup and Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/wiki/Troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/wiki/Power-user-settings&quot;&gt;Power User Settings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/releases/latest/download/GHelper.zip&quot;&gt;&lt;img src=&quot;https://github.com/seerge/g-helper/assets/5920850/4d98465a-63a5-4498-ae14-afb3e67e7e82&quot; alt=&quot;G-Helper Download&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;📢&lt;/span&gt; YouTube Reviews and Guides&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=hqe-PjuE-K8&quot;&gt;&lt;img src=&quot;https://i.ytimg.com/vi/hqe-PjuE-K8/hqdefault.jpg&quot; alt=&quot;Youtube review Josh Cravey&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6aVdwJKZSSc&quot;&gt;&lt;img src=&quot;https://i.ytimg.com/vi/6aVdwJKZSSc/hqdefault.jpg&quot; alt=&quot;Youtube review cbutters Tech&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=hqe-PjuE-K8&quot;&gt;Josh Cravey&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6aVdwJKZSSc&quot;&gt;cbutters Tech&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;📰 Articles&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.digitaltrends.com/computing/g-helper-armoury-crate-alternative/&quot;&gt;https://www.digitaltrends.com/computing/g-helper-armoury-crate-alternative/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://binaryfork.com/ghelper-armoury-crate-alternative-10216/&quot;&gt;https://binaryfork.com/ghelper-armoury-crate-alternative-10216/&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;&lt;span&gt;🎁&lt;/span&gt; Advantages&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Seamless and automatic GPU switching&lt;/li&gt; 
 &lt;li&gt;All performance modes can be fully customized with power limits and fan curves&lt;/li&gt; 
 &lt;li&gt;Lightweight. Doesn&#39;t install anything in your system. Just a single exe to run&lt;/li&gt; 
 &lt;li&gt;Simple and clean native UI with easy access to all settings&lt;/li&gt; 
 &lt;li&gt;FN-Lock and custom hotkeys&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/seerge/g-helper/assets/5920850/626a5a6e-fdae-431c-843e-92886c8420ee&quot; alt=&quot;Screenshot 2024-03-11 104354&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;⚡&lt;/span&gt; Features&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Performance modes: Silent - Balanced - Turbo (built-in, with default fan curves)&lt;/li&gt; 
 &lt;li&gt;GPU modes: Eco - Standard - Ultimate - Optimized&lt;/li&gt; 
 &lt;li&gt;Screen refresh rate control with display overdrive (OD)&lt;/li&gt; 
 &lt;li&gt;Custom fan curve editor, power limits and turbo boost selection for every performance mode&lt;/li&gt; 
 &lt;li&gt;Anime Matrix or Slash Lighting control including animated GIFs, clock and Audio visualizer&lt;/li&gt; 
 &lt;li&gt;Backlight animation modes and colors&lt;/li&gt; 
 &lt;li&gt;Hotkey handling&lt;/li&gt; 
 &lt;li&gt;Monitor CPU and GPU temperature, fan speeds and battery status&lt;/li&gt; 
 &lt;li&gt;Battery charge limit to preserve battery health&lt;/li&gt; 
 &lt;li&gt;NVidia GPU overclocking and undervolting&lt;/li&gt; 
 &lt;li&gt;XG Mobile Control&lt;/li&gt; 
 &lt;li&gt;AMD CPU Undervolting&lt;/li&gt; 
 &lt;li&gt;BIOS and Driver Updates&lt;/li&gt; 
 &lt;li&gt;Asus Mice settings&lt;/li&gt; 
 &lt;li&gt;Mini-led multi-zone switch&lt;/li&gt; 
 &lt;li&gt;Flicker-free dimming and Visual Modes&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;span&gt;⚙&lt;/span&gt; Automation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Performance Mode switching when on battery or plugged in&lt;/li&gt; 
 &lt;li&gt;Optimized GPU mode - disables dGPU on battery and enables when plugged in&lt;/li&gt; 
 &lt;li&gt;Auto Screen refresh rate (60Hz on battery and max Hz when plugged)&lt;/li&gt; 
 &lt;li&gt;Keyboard backlight timeout on battery or when plugged in&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;🚀&lt;/span&gt; Performance Modes&lt;/h3&gt; 
&lt;img align=&quot;right&quot; width=&quot;300&quot; src=&quot;https://github.com/seerge/g-helper/assets/5920850/3e119674-db8d-486b-aa65-2bf9b61f9aa6&quot;&gt; 
&lt;p&gt;All Modes are &lt;strong&gt;baked in BIOS&lt;/strong&gt; along with default fan curves and power limits and they are the &lt;strong&gt;same&lt;/strong&gt; as in the Armoury Crate.&lt;/p&gt; 
&lt;p&gt;Each BIOS mode is paired with matching Windows Power Mode. You can adjust this setting under &lt;code&gt;Fans + Power&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Silent&lt;/strong&gt; in BIOS + &lt;strong&gt;Best power efficiency&lt;/strong&gt; power mode&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Balanced&lt;/strong&gt; (Performance in AC) in BIOS + &lt;strong&gt;Balanced&lt;/strong&gt; power mode&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Turbo&lt;/strong&gt; in BIOS + &lt;strong&gt;Best performance&lt;/strong&gt; power mode&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;span&gt;🎮&lt;/span&gt; GPU Modes&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Eco&lt;/strong&gt; : only low power integrated GPU enabled, iGPU drives built in display&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; (MS Hybrid) : iGPU and dGPU enabled, iGPU drives built in display&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ultimate&lt;/strong&gt;: iGPU and dGPU enabled, but dGPU drives built in display (supported on 2022+ models)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Optimized&lt;/strong&gt;: disables dGPU on battery (Eco) and enables when plugged in (Standard)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/seerge/g-helper/assets/5920850/fd69a81e-978d-4d5c-a0a8-26da51f90a5b&quot; alt=&quot;Screenshot 2024-03-11 111818&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/seerge/g-helper/assets/5920850/65c6bdd5-728c-4965-b544-fcf5a85ed6a2&quot; alt=&quot;GPU Modes&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;🐭&lt;/span&gt; Asus Mouse and other peripherals support&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/discussions/900&quot;&gt;Currently supported models&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ROG Chakram X (P708)&lt;/li&gt; 
 &lt;li&gt;ROG Chakram Core (P511)&lt;/li&gt; 
 &lt;li&gt;ROG Gladius II and Gladius II Origin (P502 and P504)&lt;/li&gt; 
 &lt;li&gt;ROG Gladius II Wireless&lt;/li&gt; 
 &lt;li&gt;ROG Gladius III&lt;/li&gt; 
 &lt;li&gt;ROG Gladius III Wireless&lt;/li&gt; 
 &lt;li&gt;ROG Harpe Ace Aim Lab Edition&lt;/li&gt; 
 &lt;li&gt;ROG Keris Wireless&lt;/li&gt; 
 &lt;li&gt;ROG Keris II Ace&lt;/li&gt; 
 &lt;li&gt;ROG Strix Carry (P508)&lt;/li&gt; 
 &lt;li&gt;ROG Strix III Gladius III Aimpoint Wireless (P711)&lt;/li&gt; 
 &lt;li&gt;ROG Strix Impact III (P518)&lt;/li&gt; 
 &lt;li&gt;ROG Spatha X&lt;/li&gt; 
 &lt;li&gt;ROG Strix Impact II Wireless&lt;/li&gt; 
 &lt;li&gt;ROG Pugio&lt;/li&gt; 
 &lt;li&gt;ROG Pugio II&lt;/li&gt; 
 &lt;li&gt;TUF Gaming M4 Wireless (P306)&lt;/li&gt; 
 &lt;li&gt;TUF Gaming M3&lt;/li&gt; 
 &lt;li&gt;TUF Gaming M3 Gen II&lt;/li&gt; 
 &lt;li&gt;TUF Gaming M4 AIR&lt;/li&gt; 
 &lt;li&gt;TUF Gaming M5&lt;/li&gt; 
 &lt;li&gt;TX Gaming Mini&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Huge thanks to &lt;a href=&quot;https://github.com/IceStormNG&quot;&gt;@IceStormNG&lt;/a&gt; 👑 for contribution and research (!).&lt;/p&gt; 
&lt;h3&gt;⌨️ Keybindings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Fn + F5 / Fn + Shift + F5&lt;/code&gt; - Toggle Performance Modes forwards / backwards&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + F5 / Ctrl + Shift + Alt + F5&lt;/code&gt; - Toggle Performance Modes forwards / backwards&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + F12&lt;/code&gt; - Open G-Helper window&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + M1 / M2&lt;/code&gt; - Screen brightness Down / Up&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Shift + M1 / M2&lt;/code&gt; - Backlight brightness Down / Up&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Fn + C&lt;/code&gt; - Fn-Lock&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Fn + Ctrl + F7 / F8&lt;/code&gt; - Flicker-free dimming Down / Up&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Fn + Shift + F7 / F8&lt;/code&gt; - Matrix / Slash Lighting brightness Down / Up&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Fn + Shift + F7 / F8&lt;/code&gt; - Screenpad brightness Down / Up&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + F20&lt;/code&gt; - Mute Microphone&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F13&lt;/code&gt; - Toggle Display Refresh Rate&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F14&lt;/code&gt; - Eco GPU Mode&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F15&lt;/code&gt; - Standard GPU Mode&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F16&lt;/code&gt; - Silent&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F17&lt;/code&gt; - Balanced&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F18&lt;/code&gt; - Turbo&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F19&lt;/code&gt; - Custom 1 (if exists)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F20&lt;/code&gt; - Custom 2 (if exists)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/wiki/Power-user-settings#custom-hotkey-actions&quot;&gt;Custom keybindings / hotkeys&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎮ROG Ally Bindings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;M + DPad Left / Right&lt;/code&gt; - Display Brightness&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;M + DPad Up&lt;/code&gt; - Touch keyboard&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;M + DPad Down&lt;/code&gt; - Show desktop&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;M + Y&lt;/code&gt; - Toggle AMD overay&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;M + X&lt;/code&gt; - Screenshot&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;M + Right Stick Click&lt;/code&gt; - Controller Mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;🔖 Important Notice&lt;/h3&gt; 
&lt;p&gt;G-Helper is &lt;strong&gt;NOT&lt;/strong&gt; an operating system, firmware, or driver. It &lt;strong&gt;DOES NOT&lt;/strong&gt; &quot;run&quot; your hardware in real-time anyhow.&lt;/p&gt; 
&lt;p&gt;It&#39;s an app that lets you select one of the predefined operating modes created by manufacturer (and stored in BIOS) and optionally(!) set some settings that already exist on your device same as Armoury Crate can. It does it by using the Asus System Control Interface &quot;driver&quot; that Armoury uses for it.&lt;/p&gt; 
&lt;p&gt;If you use equivalent mode/settings as in Armoury Crate - the performance or the behavior of your device won&#39;t be different.&lt;/p&gt; 
&lt;p&gt;The role of G-Helper for your laptop is similar to the role of a remote control for your TV.&lt;/p&gt; 
&lt;h3&gt;Libraries and projects used&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/torvalds/linux/raw/master/include/linux/platform_data/x86/asus-wmi.h&quot;&gt;Linux Kernel&lt;/a&gt; for some basic endpoints in ASUS ACPI/WMI interface&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/falahati/NvAPIWrapper&quot;&gt;NvAPIWrapper&lt;/a&gt; for accessing Nvidia API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vddCore/Starlight&quot;&gt;Starlight&lt;/a&gt; for anime matrix communication protocol&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JamesCJ60/Universal-x86-Tuning-Utility&quot;&gt;UXTU&lt;/a&gt; for undervolting using Ryzen System Management Unit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/asus-linux/asusctl&quot;&gt;AsusCtl&lt;/a&gt; for inspiration and some reverse engineering&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Disclaimers&lt;/h3&gt; 
&lt;p&gt;&quot;Asus&quot;, &quot;ROG&quot;, &quot;TUF&quot;, and &quot;Armoury Crate&quot; are trademarked by and belong to AsusTek Computer, Inc. I make no claims to these or any assets belonging to AsusTek Computer and use them purely for informational purposes only.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED “AS IS” AND WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. MISUSE OF THIS SOFTWARE COULD CAUSE SYSTEM INSTABILITY OR MALFUNCTION.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ClosedXML/ClosedXML</title>
      <link>https://github.com/ClosedXML/ClosedXML</link>
      <description>&lt;p&gt;ClosedXML is a .NET library for reading, manipulating and writing Excel 2007+ (.xlsx, .xlsm) files. It aims to provide an intuitive and user-friendly interface to dealing with the underlying OpenXML API.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://github.com/ClosedXML/ClosedXML/raw/develop/resources/logo/readme.png&quot; alt=&quot;ClosedXML&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ClosedXML/ClosedXML/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/release-0.95.4-blue.svg?sanitize=true&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/ClosedXML/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ClosedXML.svg?style=flat&quot; alt=&quot;NuGet version (ClosedXML)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/ClosedXML/ClosedXML/develop/#&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/.NET%20Framework-%3E%3D%204.0-red.svg?sanitize=true&quot; alt=&quot;.NET Framework&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/ClosedXML/ClosedXML/develop/#&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/.NET%20Standard-%3E%3D%202.0-red.svg?sanitize=true&quot; alt=&quot;.NET Standard&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://ci.appveyor.com/project/ClosedXML/ClosedXML/branch/develop/artifacts&quot;&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/wobbmnlbukxejjgb?svg=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codetriage.com/closedxml/closedxml&quot;&gt;&lt;img src=&quot;https://www.codetriage.com/closedxml/closedxml/badges/users.svg?sanitize=true&quot; alt=&quot;Open Source Helpers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://ci.appveyor.com/project/ClosedXML/ClosedXML/branch/develop/artifacts&quot;&gt;💾 Download unstable CI build&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ClosedXML is a .NET library for reading, manipulating and writing Excel 2007+ (.xlsx, .xlsm) files. It aims to provide an intuitive and user-friendly interface to dealing with the underlying &lt;a href=&quot;https://github.com/OfficeDev/Open-XML-SDK&quot;&gt;OpenXML&lt;/a&gt; API.&lt;/p&gt; 
&lt;p&gt;For more information see &lt;a href=&quot;https://closedxml.readthedocs.io/&quot;&gt;the documentation&lt;/a&gt; or &lt;a href=&quot;https://github.com/closedxml/closedxml/wiki&quot;&gt;the wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Release notes &amp;amp; migration guide&lt;/h3&gt; 
&lt;p&gt;The public API is still not stable and it is a very good idea to &lt;strong&gt;read release notes&lt;/strong&gt; and &lt;strong&gt;migration guide&lt;/strong&gt; before each update.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ClosedXML/ClosedXML/releases/tag/0.100.0&quot;&gt;Release notes for 0.100&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://closedxml.readthedocs.io/en/latest/migrations/migrate-to-0.100.html&quot;&gt;Migration guide for 0.100&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ClosedXML/ClosedXML/releases/tag/0.97.0&quot;&gt;Release notes for 0.97&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Performance&lt;/h3&gt; 
&lt;p&gt;Performance matters mostly for large files. For small files, few ms here or there doesn&#39;t matter. The presented data are from generally develop branch (currently &lt;a href=&quot;https://github.com/ClosedXML/ClosedXML/commit/5f7c0d9461352a6a468e5299bfef6eaf82bf37da&quot;&gt;0.103-beta&lt;/a&gt;).&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Runtime details&lt;/summary&gt; ``` BenchmarkDotNet v0.13.8, Windows 11 (10.0.22621.2283/22H2/2022Update/SunValley2) AMD Ryzen 5 5500U with Radeon Graphics, 1 CPU, 12 logical and 6 physical cores .NET SDK 8.0.100-rc.1.23463.5 [Host] : .NET 7.0.11 (7.0.1123.42427), X64 RyuJIT AVX2 ``` 
&lt;/details&gt; 
&lt;h4&gt;Save&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Rows&lt;/th&gt; 
   &lt;th&gt;Columns&lt;/th&gt; 
   &lt;th&gt;Time/Memory to insert data&lt;/th&gt; 
   &lt;th&gt;Save workbook&lt;/th&gt; 
   &lt;th&gt;Total time/memory&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mixed (text/number) workbook.&lt;br&gt;&lt;a href=&quot;https://gist.github.com/jahav/bdc5fe3c90f25544ca6ae1394bbe3561&quot;&gt;Gist&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;250 000&lt;/td&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;1.619 sec / 117 MiB&lt;/td&gt; 
   &lt;td&gt;6.343 sec&lt;/td&gt; 
   &lt;td&gt;7.962 sec / 477 MiB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Text only workbook. &lt;a href=&quot;https://gist.github.com/jahav/257bb2ffd5ab7adfded7e669290d8151&quot;&gt;Gist&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1 000 000&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;6.302 sec / 402 MiB&lt;/td&gt; 
   &lt;td&gt;17.134 sec&lt;/td&gt; 
   &lt;td&gt;23.436 sec / 1880 MiB&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Load&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Rows&lt;/th&gt; 
   &lt;th&gt;Columns&lt;/th&gt; 
   &lt;th&gt;Time to load data&lt;/th&gt; 
   &lt;th&gt;Used memory&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Load mixed workbook (10 text/5 number columns).&lt;/td&gt; 
   &lt;td&gt;250 000&lt;/td&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;15.648 sec&lt;/td&gt; 
   &lt;td&gt;236 MiB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Text only workbook.&lt;/td&gt; 
   &lt;td&gt;1 000 000&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;49.046 sec&lt;/td&gt; 
   &lt;td&gt;801 MiB&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Load tests used files created during save test.&lt;/p&gt; 
&lt;h3&gt;Frequent answers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you get an exception &lt;code&gt;Unable to find font font name or fallback font fallback font name. Install missing fonts or specify a different fallback font through ‘LoadOptions.DefaultGraphicEngine = new DefaultGraphicEngine(“Fallback font name”)’&lt;/code&gt;, see help page about &lt;a href=&quot;https://closedxml.readthedocs.io/en/latest/tips/missing-font.html&quot;&gt;missing fonts&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;ClosedXML is not thread-safe. There is no guarantee that &lt;a href=&quot;https://github.com/ClosedXML/ClosedXML/issues/1662&quot;&gt;parallel operations&lt;/a&gt; will work. The underlying OpenXML library is also not thread-safe.&lt;/li&gt; 
 &lt;li&gt;If you get an exception &lt;code&gt;The type initializer for &#39;Gdip&#39; threw an exception.&lt;/code&gt; on Linux, you have to upgrade to 0.97+.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Install ClosedXML via NuGet&lt;/h3&gt; 
&lt;p&gt;If you want to include ClosedXML in your project, you can &lt;a href=&quot;https://www.nuget.org/packages/ClosedXML&quot;&gt;install it directly from NuGet&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To install ClosedXML, run the following command in the Package Manager Console&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PM&amp;gt; Install-Package ClosedXML
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;What can you do with this?&lt;/h3&gt; 
&lt;p&gt;ClosedXML allows you to create Excel files without the Excel application. The typical example is creating Excel reports on a web server.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;using (var workbook = new XLWorkbook())
{
    var worksheet = workbook.Worksheets.Add(&quot;Sample Sheet&quot;);
    worksheet.Cell(&quot;A1&quot;).Value = &quot;Hello World!&quot;;
    worksheet.Cell(&quot;A2&quot;).FormulaA1 = &quot;=MID(A1, 7, 5)&quot;;
    workbook.SaveAs(&quot;HelloWorld.xlsx&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Extensions&lt;/h3&gt; 
&lt;p&gt;Be sure to check out our &lt;code&gt;ClosedXML&lt;/code&gt; extension projects&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ClosedXML/ClosedXML.Report&quot;&gt;https://github.com/ClosedXML/ClosedXML.Report&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ClosedXML/ClosedXML.Extensions.AspNet&quot;&gt;https://github.com/ClosedXML/ClosedXML.Extensions.AspNet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ClosedXML/ClosedXML.Extensions.Mvc&quot;&gt;https://github.com/ClosedXML/ClosedXML.Extensions.Mvc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ClosedXML/ClosedXML.Extensions.WebApi&quot;&gt;https://github.com/ClosedXML/ClosedXML.Extensions.WebApi&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Developer guidelines&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://ecma-international.org/publications-and-standards/standards/ecma-376/&quot;&gt;OpenXML specification&lt;/a&gt; is a large and complicated beast. In order for ClosedXML, the wrapper around OpenXML, to support all the features, we rely on community contributions. Before opening an issue to request a new feature, we&#39;d like to urge you to try to implement it yourself and log a pull request.&lt;/p&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;https://raw.githubusercontent.com/ClosedXML/ClosedXML/develop/CONTRIBUTING.md&quot;&gt;full developer guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Project originally created by Manuel de Leon&lt;/li&gt; 
 &lt;li&gt;Current maintainer: &lt;a href=&quot;https://github.com/jahav&quot;&gt;Jan Havlíček&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Former maintainer and lead developer: &lt;a href=&quot;https://github.com/igitur&quot;&gt;Francois Botha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Master of Computing Patterns: &lt;a href=&quot;https://github.com/Pankraty&quot;&gt;Aleksei Pankratev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Logo design by &lt;a href=&quot;https://github.com/Tobaloidee&quot;&gt;@Tobaloidee&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks to JetBrains for providing development tools through their &lt;a href=&quot;https://www.jetbrains.com/community/opensource/&quot;&gt;Open Source Program&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/&quot;&gt;&lt;img src=&quot;https://resources.jetbrains.com/storage/products/company/brand/logos/jetbrains.png&quot; alt=&quot;JetBrains logo.&quot; height=&quot;40px&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mono/SkiaSharp</title>
      <link>https://github.com/mono/SkiaSharp</link>
      <description>&lt;p&gt;SkiaSharp is a cross-platform 2D graphics API for .NET platforms based on Google&#39;s Skia Graphics Library. It provides a comprehensive 2D API that can be used across mobile, server and desktop models to render images.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SkiaSharp&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/SkiaSharp&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/SkiaSharp.svg?cacheSeconds=3600&amp;amp;label=SkiaSharp%20nuget&quot; alt=&quot;SkiaSharp&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/HarfBuzzSharp&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/HarfBuzzSharp.svg?cacheSeconds=3600&amp;amp;label=HarfBuzzSharp%20nuget&quot; alt=&quot;HarfBuzzSharp&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/SkiaSharp.Views&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/SkiaSharp.Views.svg?cacheSeconds=3600&amp;amp;label=SkiaSharp.Views%20nuget&quot; alt=&quot;SkiaSharp.Views&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/SkiaSharp.Views.Maui.Controls&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/SkiaSharp.Views.Maui.Controls.svg?cacheSeconds=3600&amp;amp;label=SkiaSharp.Views.Maui.Controls%20nuget&quot; alt=&quot;SkiaSharp.Views.Maui.Controls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/SkiaSharp.Views.Uno&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/SkiaSharp.Views.Uno.svg?cacheSeconds=3600&amp;amp;label=SkiaSharp.Views.Uno%20nuget&quot; alt=&quot;SkiaSharp.Views.Uno&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://aka.ms/dotnet-discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-.NET%20Discord-E60256.svg?sanitize=true&quot; alt=&quot;discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.microsoft.com/dotnet/api/SkiaSharp&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-skiasharp-1faece.svg?sanitize=true&quot; alt=&quot;SkiaSharp API Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.microsoft.com/dotnet/api/SkiaSharp&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-harfbuzzsharp-1faece.svg?sanitize=true&quot; alt=&quot;HarfBuzzSharp API Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.microsoft.com/xamarin/graphics-games/skiasharp/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-guides-1faece.svg?sanitize=true&quot; alt=&quot;SkiaSharp Guides&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/devdiv/DevDiv/_build/latest?definitionId=10789&amp;amp;branchName=main&quot;&gt;&lt;img src=&quot;https://dev.azure.com/devdiv/DevDiv/_apis/build/status/Xamarin/Components/SkiaSharp?branchName=main&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/xamarin/public/_build/latest?definitionId=4&amp;amp;branchName=main&quot;&gt;&lt;img src=&quot;https://dev.azure.com/xamarin/public/_apis/build/status/mono/SkiaSharp/SkiaSharp%20(Public)?branchName=main&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;SkiaSharp is a cross-platform 2D graphics API for .NET platforms based on Google&#39;s Skia Graphics Library (&lt;a href=&quot;https://skia.org/&quot;&gt;skia.org&lt;/a&gt;). It provides a comprehensive 2D API that can be used across mobile, server and desktop models to render images.&lt;/p&gt; 
&lt;p&gt;SkiaSharp provides cross-platform bindings for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;.NET Standard 1.3&lt;/li&gt; 
 &lt;li&gt;.NET Core&lt;/li&gt; 
 &lt;li&gt;.NET 6&lt;/li&gt; 
 &lt;li&gt;Tizen&lt;/li&gt; 
 &lt;li&gt;Android&lt;/li&gt; 
 &lt;li&gt;iOS&lt;/li&gt; 
 &lt;li&gt;tvOS&lt;/li&gt; 
 &lt;li&gt;macOS&lt;/li&gt; 
 &lt;li&gt;Mac Catalyst&lt;/li&gt; 
 &lt;li&gt;WinUI 3 (Windows App SDK / Uno Platform)&lt;/li&gt; 
 &lt;li&gt;Windows Classic Desktop (Windows.Forms / WPF)&lt;/li&gt; 
 &lt;li&gt;Web Assembly (WASM)&lt;/li&gt; 
 &lt;li&gt;Uno Platform (iOS / macOS / Android / WebAssembly)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/SkiaSharp/&quot;&gt;API Documentation&lt;/a&gt; is available on the web to browse.&lt;/p&gt; 
&lt;h2&gt;Using SkiaSharp&lt;/h2&gt; 
&lt;p&gt;SkiaSharp is available as a convenient NuGet package, to use install the package like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;nuget install SkiaSharp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Because there are multiple distros of Linux, and we cannot possibly support them all, we have a separate NuGet package that will contain the supported binaries for a few distros: &lt;a href=&quot;https://www.nuget.org/packages/SkiaSharp.NativeAssets.Linux&quot;&gt;SkiaSharp.NativeAssets.Linux&lt;/a&gt;. (&lt;a href=&quot;https://github.com/mono/SkiaSharp/issues/453&quot;&gt;distros&lt;/a&gt;) (&lt;a href=&quot;https://github.com/mono/SkiaSharp/issues/312&quot;&gt;more info&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;There is also a early access feed that you can use to get the latest and greatest, before it goes out to the public:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://aka.ms/skiasharp-eap/index.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building SkiaSharp&lt;/h2&gt; 
&lt;p&gt;Building SkiaSharp is mostly straight forward. The main issue is the multiple dependencies for each platform.&lt;/p&gt; 
&lt;p&gt;However, these are easy to install as they are found on the various websites. If you are just working on managed code, it is even easier as there mays to skip all the native builds.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To get started building, &lt;a href=&quot;https://github.com/mono/SkiaSharp/wiki/Building-SkiaSharp&quot;&gt;go here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are just wanting a custom Linux build, &lt;a href=&quot;https://github.com/mono/SkiaSharp/wiki/Building-on-Linux&quot;&gt;go here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href=&quot;https://github.com/mono/SkiaSharp/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=mono/SkiaSharp&quot;&gt; &lt;/a&gt; 
&lt;p&gt;Made with &lt;a href=&quot;https://contrib.rocks&quot;&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Compare Code&lt;/h2&gt; 
&lt;p&gt;Here are some links to show the differences in our code as compared to Google&#39;s code.&lt;/p&gt; 
&lt;p&gt;What version are we on? &lt;a href=&quot;https://github.com/google/skia/tree/chrome/m118&quot;&gt;&lt;strong&gt;m118&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Are we up-to-date with Google? &lt;a href=&quot;https://github.com/mono/skia/compare/skiasharp...google:chrome/m118&quot;&gt;Compare&lt;/a&gt;&lt;br&gt; What have we added? &lt;a href=&quot;https://github.com/google/skia/compare/chrome/m118...mono:skiasharp&quot;&gt;Compare&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NuGet/NuGet.Client</title>
      <link>https://github.com/NuGet/NuGet.Client</link>
      <description>&lt;p&gt;Client Tools for NuGet - including Visual Studio extensions, command line tools, and msbuild support. (Open issues on https://github.com/nuget/home/issues)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/NuGet/Home/dev/meta/resources/nuget.png&quot; alt=&quot;NuGet logo&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;NuGet Client Tools&lt;/h1&gt; 
&lt;p&gt;This repo contains the following clients:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/nuget/tools/nuget-exe-cli-reference&quot;&gt;NuGet CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/nuget/tools/package-manager-ui&quot;&gt;NuGet Package Manager for Visual Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/nuget/tools/powershell-reference&quot;&gt;PowerShell CmdLets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet&quot;&gt;NuGet functionality for dotnet.exe&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Open Source Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Getting Started guide&lt;/h2&gt; 
&lt;p&gt;For how to contribute to this repo follow the &lt;a href=&quot;https://raw.githubusercontent.com/NuGet/NuGet.Client/dev/CONTRIBUTING.md&quot;&gt;Contributing doc&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;NuGet/Home repo&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/nuget/Home&quot;&gt;NuGet/Home&lt;/a&gt; repo is the starting point for all things NuGet. It has the &lt;a href=&quot;https://github.com/nuget/home/issues&quot;&gt;issue tracker&lt;/a&gt; and &lt;a href=&quot;https://github.com/nuget/home&quot;&gt;basic information&lt;/a&gt; about all things NuGet. Make sure to consult it before beginning your journey through NuGet code.&lt;/p&gt; 
&lt;h2&gt;Feedback&lt;/h2&gt; 
&lt;p&gt;File NuGet.Client bugs in the &lt;a href=&quot;https://github.com/nuget/home/issues&quot;&gt;NuGet/Home&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Unless explicitly stated otherwise all files in this repository are licensed under the License in the root repository&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AvaloniaUI/Avalonia</title>
      <link>https://github.com/AvaloniaUI/Avalonia</link>
      <description>&lt;p&gt;Develop Desktop, Embedded, Mobile and WebAssembly apps with C# and XAML. The most popular .NET UI client technology&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/AvaloniaUI&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/99f4a267-79d2-432b-8f8c-bd3745a98a60&quot; alt=&quot;Star_Banner@3x&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://avaloniaui.net?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/14a6e1cb-180d-4bfd-884a-835c8b5083d0&quot; alt=&quot;Star_Banner@3x&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/Avalonia&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Patrolavia/telegram-badge/master/chat.svg?sanitize=true&quot; alt=&quot;Telegram&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/AvaloniaUI/AvaloniaUI/_build/latest?definitionId=4&quot;&gt;&lt;img src=&quot;https://dev.azure.com/AvaloniaUI/AvaloniaUI/_apis/build/status/AvaloniaUI.Avalonia&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/#backers&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/backers/Avalonia?logo=opencollective&quot; alt=&quot;Backers on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/#sponsors&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/sponsors/Avalonia?logo=opencollective&quot; alt=&quot;Sponsors on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sponsors/AvaloniaUI&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/sponsors/AvaloniaUI?logo=github&quot; alt=&quot;GitHub Sponsors&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/license/avaloniaui/avalonia.svg?sanitize=true&quot; alt=&quot;License&quot;&gt; &lt;br&gt; &lt;a href=&quot;https://www.nuget.org/packages/Avalonia&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Avalonia.svg?sanitize=true&quot; alt=&quot;NuGet&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Avalonia&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/avalonia&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/repo-size/avaloniaui/avalonia.svg?sanitize=true&quot; alt=&quot;Size&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;📖 About&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://avaloniaui.net?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;Avalonia&lt;/a&gt; is a cross-platform UI framework for dotnet, providing a flexible styling system and supporting a wide range of platforms such as Windows, macOS, Linux, iOS, Android and WebAssembly. Avalonia is mature and production ready and is used by companies, including &lt;a href=&quot;https://avaloniaui.net/showcase#se&quot;&gt;Schneider Electric&lt;/a&gt;, &lt;a href=&quot;https://avaloniaui.net/showcase#unity&quot;&gt;Unity&lt;/a&gt;, &lt;a href=&quot;https://avaloniaui.net/showcase#rider&quot;&gt;JetBrains&lt;/a&gt; and &lt;a href=&quot;https://avaloniaui.net/showcase#github&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Considered by many to be the spiritual successor to WPF, Avalonia UI provides a familiar, modern development experience for XAML developers creating cross-platform applications. While Avalonia UI is &lt;a href=&quot;https://docs.avaloniaui.net/docs/next/get-started/wpf/&quot;&gt;similar to WPF&lt;/a&gt;, it isn&#39;t a 1:1 copy, and you&#39;ll find plenty of improvements.&lt;/p&gt; 
&lt;p&gt;For those seeking a cross-platform WPF, we have created &lt;a href=&quot;%5Bhttps://avaloniaui.net/xpf%5D(https://avaloniaui.net/xpf?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link)&quot;&gt;Avalonia XPF&lt;/a&gt;, enabling WPF applications to run on macOS and Linux with little to no code changes. Avalonia XPF is a commercial product and is licensed per-app, per-platform.&lt;/p&gt; 
&lt;h4&gt;Blog&lt;/h4&gt; 
&lt;p&gt;To see the latest announcements and read about the state of Avalonia, check out the &lt;a href=&quot;https://www.avaloniaui.net/blog?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;Avalonia UI Blog&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Breaking Changes&lt;/h4&gt; 
&lt;p&gt;You can also see what &lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia/issues/3538&quot;&gt;breaking changes&lt;/a&gt; we have planned and what our &lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia/wiki/Breaking-Changes&quot;&gt;past breaking changes&lt;/a&gt; have been.&lt;/p&gt; 
&lt;h4&gt;Awesome Avalonia&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/AvaloniaCommunity/awesome-avalonia&quot;&gt;Awesome Avalonia&lt;/a&gt; is community-curated list of awesome Avalonia UI tools, libraries, projects and resources. Go and see what people are building with Avalonia!&lt;/p&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;See our &lt;a href=&quot;https://avaloniaui.net/gettingstarted?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;Get Started&lt;/a&gt; guide to begin developing apps with Avalonia UI.&lt;/p&gt; 
&lt;h3&gt;Visual Studio&lt;/h3&gt; 
&lt;p&gt;The Avalonia &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=AvaloniaTeam.AvaloniaforVisualStudio&quot;&gt;Visual Studio Extension&lt;/a&gt; contains project and control templates that will help you get started, or you can use the .NET Core CLI. For a starter guide see our &lt;a href=&quot;https://docs.avaloniaui.net/docs/getting-started&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;JetBrains Rider&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/rider/whatsnew/?mkt_tok=eyJpIjoiTURBNU1HSmhNV0kwTUdFMiIsInQiOiJtNnU2VEc1TlNLa1ZRVkROYmdZYVpYREJsaU1qdUhmS3dxSzRHczdYWHl0RVlTNDMwSFwvNUs3VENTNVM0bVcyNFdaRmVYZzVWTTF1N3VrQWNGTkJreEhlam1hMlB4UVVWcHBGM1dNOUxoXC95YnRQdGgyUXl1YmZCM3h3d3BVWWdBIn0%3D#avalonia-support&quot;&gt;JetBrains Rider&lt;/a&gt; now has official support for Avalonia.&lt;/p&gt; 
&lt;p&gt;Code completion, inspections and refactorings are supported out of the box, for XAML previewer add &lt;code&gt;https://plugins.jetbrains.com/plugins/dev/14839&lt;/code&gt; to plugin repositories and install &lt;a href=&quot;https://github.com/ForNeVeR/AvaloniaRider&quot;&gt;AvaloniaRider&lt;/a&gt; plugin.&lt;/p&gt; 
&lt;h3&gt;Avalonia Packages&lt;/h3&gt; 
&lt;p&gt;Avalonia is delivered via &lt;b&gt;NuGet&lt;/b&gt; package manager. You can find the packages here: &lt;a href=&quot;https://www.nuget.org/packages/Avalonia/&quot;&gt;https://www.nuget.org/packages/Avalonia/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Use these commands in the Package Manager console to install Avalonia manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Install-Package Avalonia
Install-Package Avalonia.Desktop
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Showcase&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://avaloniaui.net/showcase?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/99a17692-765c-4728-a3a6-f5e86f95e71c&quot; alt=&quot;Showcase_Banner@3x&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;See what others have built with Avalonia UI on our &lt;a href=&quot;https://avaloniaui.net/showcase?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;Showcase&lt;/a&gt;. We welcome submissions!&lt;/p&gt; 
&lt;h2&gt;Bleeding Edge Builds&lt;/h2&gt; 
&lt;p&gt;We also have a &lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia/wiki/Using-nightly-build-feed&quot;&gt;nightly build&lt;/a&gt; which tracks the current state of master. Although these packages are less stable than the release on NuGet.org, you&#39;ll get all the latest features and bugfixes right away and many of our users actually prefer this feed!&lt;/p&gt; 
&lt;h2&gt;Learning&lt;/h2&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;Documentation can be found at &lt;a href=&quot;https://docs.avaloniaui.net&quot;&gt;https://docs.avaloniaui.net&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tutorials&lt;/h3&gt; 
&lt;p&gt;We also have a &lt;a href=&quot;https://docs.avaloniaui.net/docs/getting-started/programming-with-avalonia&quot;&gt;tutorial&lt;/a&gt; over there for newcomers.&lt;/p&gt; 
&lt;h3&gt;Samples&lt;/h3&gt; 
&lt;p&gt;We have a &lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia.Samples&quot;&gt;range of samples&lt;/a&gt; to help you get started.&lt;/p&gt; 
&lt;h2&gt;Building and Using&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/Documentation/build.md&quot;&gt;build instructions here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/Avalonia/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; before submitting a pull request.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community. For more information see the &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Licence&lt;/h2&gt; 
&lt;p&gt;Avalonia is licenced under the &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/licence.md&quot;&gt;MIT licence&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;Donating to the project is a fantastic way to thank our valued contributors for their hard work. Your donations are shared among our community and awarded for significant contributions.&lt;/p&gt; 
&lt;p&gt;If you need support see Commercial Support section below.&lt;/p&gt; 
&lt;p&gt;Donate with BTC or use &lt;a href=&quot;https://opencollective.com/avalonia&quot;&gt;Open Collective&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;BTC&lt;/strong&gt;: bc1q05wx78qemgy9x6ytl5ljk2xrt00yqargyjm8gx&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&quot;https://opencollective.com/Avalonia#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/Avalonia#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/Avalonia/backers.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Commercial Support&lt;/h2&gt; 
&lt;p&gt;We have a range of &lt;a href=&quot;https://avaloniaui.net/support?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;support plans available&lt;/a&gt; for those looking to partner with the creators of Avalonia, enabling access to the best support at every step of the development process.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Please note that donations are not considered payment for commercial support agreements. Please contact us to discuss your needs first. &lt;a href=&quot;mailto://team@avaloniaui.net&quot;&gt;team@avaloniaui.net&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Avalonia XPF - Our cross-platform WPF&lt;/h2&gt; 
&lt;p&gt;Unleash the full potential of your existing WPF apps with our cross-platform UI framework, enabling WPF apps to run on macOS and Linux without requiring expensive and risky rewrites. &lt;a href=&quot;https://avaloniaui.net/xpf?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_ad&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/91e7748c-2877-46ce-8b12-164fcf442f76&quot; alt=&quot;GH_Banner&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/kiota</title>
      <link>https://github.com/microsoft/kiota</link>
      <description>&lt;p&gt;OpenAPI based HTTP Client code generator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/kiota/actions/workflows/dotnet.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/kiota/actions/workflows/dotnet.yml/badge.svg?sanitize=true&quot; alt=&quot;Dotnet&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/microsoft/kiota/actions/workflows/codeql-analysis.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/kiota/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&quot; alt=&quot;CodeQL&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/dashboard?id=microsoft_kiota&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=microsoft_kiota&amp;amp;metric=coverage&quot; alt=&quot;Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/dashboard?id=microsoft_kiota&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=microsoft_kiota&amp;amp;metric=alert_status&quot; alt=&quot;Sonarcloud Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Kiota is a command line tool for generating an API client to call any OpenAPI described API you are interested in. The goal is to eliminate the need to take a dependency on a different API SDK for every API that you need to call. Kiota API clients provide a strongly typed experience with all the features you expect from a high quality API SDK, but without having to learn a new library for every HTTP API.&lt;/p&gt; 
&lt;p&gt;This library builds on top of the &lt;a href=&quot;https://github.com/microsoft/openapi.net&quot;&gt;Microsoft.OpenAPI.NET&lt;/a&gt; library to ensure comprehensive support for APIs that use OpenAPI descriptions. One of the goals of the project is to provide the best code generator support possible for OpenAPI and JSON Schema features. The &lt;a href=&quot;https://learn.microsoft.com/openapi/kiota&quot;&gt;conceptual documentation&lt;/a&gt; describes how kiota works and the high level concepts, this readme documents how to get started with Kiota.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Generating SDKs&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install required tools and dependencies. (refer to the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/kiota/main/#supported-languages&quot;&gt;Supported Languages&lt;/a&gt; table under the &lt;strong&gt;Required tools &amp;amp; dependencies&lt;/strong&gt; column)&lt;/li&gt; 
 &lt;li&gt;Get Kiota using one of the &lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/install&quot;&gt;available options&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Generate your API client, checkout the &lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/using&quot;&gt;Parameters reference&lt;/a&gt; for the different options.&lt;/li&gt; 
 &lt;li&gt;Start calling your API using your fluent API Client.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Supported languages&lt;/h3&gt; 
&lt;p&gt;The following table provides an overview of the languages supported by Kiota and the progress in the implementation of the different components.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Generation&lt;/th&gt; 
   &lt;th&gt;Abstractions&lt;/th&gt; 
   &lt;th&gt;Serialization&lt;/th&gt; 
   &lt;th&gt;Authentication&lt;/th&gt; 
   &lt;th&gt;HTTP&lt;/th&gt; 
   &lt;th&gt;Required tools &amp;amp; dependencies&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CLI&lt;/td&gt; 
   &lt;td&gt;🛠️&lt;/td&gt; 
   &lt;td&gt;(see CSharp) + &lt;a href=&quot;https://github.com/microsoft/kiota-cli-commons&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;(see CSharp)&lt;/td&gt; 
   &lt;td&gt;(see CSharp)&lt;/td&gt; 
   &lt;td&gt;(see CSharp)&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/cli&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CSharp&lt;/td&gt; 
   &lt;td&gt;✔&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/abstractions&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/serialization/form&quot;&gt;FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/serialization/json&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/serialization/multipart&quot;&gt;MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/serialization/text&quot;&gt;TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/raw/main/src/abstractions/authentication/AnonymousAuthenticationProvider.cs&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/raw/main/src/abstractions/authentication/ApiKeyAuthenticationProvider.cs&quot;&gt;API Key&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/authentication/azure&quot;&gt;Azure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dotnet/tree/main/src/http/httpClient&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/dotnet&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Dart&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dart&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dart/tree/main/packages/microsoft_kiota_abstractions&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dart/tree/main/packages/microsoft_kiota_serialization_form&quot;&gt;🛠️ FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dart/tree/main/packages/microsoft_kiota_serialization_json&quot;&gt;🛠️ JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dart/tree/main/packages/microsoft_kiota_serialization_multipart&quot;&gt;🛠️ MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dart/tree/main/packages/microsoft_kiota_serialization_text&quot;&gt;🛠️ TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dart/raw/main/packages/microsoft_kiota_abstractions/lib/src/authentication/anonymous_authentication_provider.dart&quot;&gt;🛠️ Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-dart/raw/main/packages/microsoft_kiota_abstractions/lib/src/authentication/api_key_authentication_provider.dart&quot;&gt;🛠️ API Key&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-dart/tree/main/packages/microsoft_kiota_http&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/openapi/kiota/quickstarts/dart&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;✔&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-go&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-serialization-form-go&quot;&gt;FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-json-go&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-multipart-go&quot;&gt;MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-text-go&quot;&gt;TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-go/raw/main/authentication/anonymous_authentication_provider.go&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-go/raw/main/authentication/api_key_authentication_provider.go&quot;&gt;API Key&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-authentication-azure-go/&quot;&gt;Azure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-http-go/&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/go&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Java&lt;/td&gt; 
   &lt;td&gt;✔&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/abstractions&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/serialization/form&quot;&gt;FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/serialization/json&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/serialization/multipart&quot;&gt;MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/serialization/text&quot;&gt;TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-java/raw/main/components/abstractions/src/main/java/com/microsoft/kiota/authentication/AnonymousAuthenticationProvider.java&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-java/raw/main/components/abstractions/src/main/java/com/microsoft/kiota/authentication/ApiKeyAuthenticationProvider.java&quot;&gt;API Key&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/authentication/azure&quot;&gt;Azure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-java/tree/main/components/http/okHttp&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/java&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PHP&lt;/td&gt; 
   &lt;td&gt;✔&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-php&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-serialization-json-php&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-form-php&quot;&gt;FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-multipart-php&quot;&gt;MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-text-php&quot;&gt;TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-php/raw/main/src/Authentication/AnonymousAuthenticationProvider.php&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-authentication-phpleague-php&quot;&gt;✔️ PHP League&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-http-guzzle-php&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/php&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;✔&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-python&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-serialization-form-python&quot;&gt;FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-json-python&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-multipart-python&quot;&gt;MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-text-python&quot;&gt;TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-python/raw/main/kiota_abstractions/authentication/anonymous_authentication_provider.py&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-authentication-azure-python&quot;&gt;Azure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-http-python&quot;&gt;✔&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/python&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ruby&lt;/td&gt; 
   &lt;td&gt;🛠️&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-ruby&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota/issues/2077&quot;&gt;❌ FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-serialization-json-ruby&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota/issues/3032&quot;&gt;❌ MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota/issues/1049&quot;&gt;❌ TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-abstractions-ruby/raw/main/lib/microsoft_kiota_abstractions/authentication/anonymous_authentication_provider.rb&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-authentication-oauth-ruby&quot;&gt;OAuth2&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-http-ruby&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Swift&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota/issues/1449&quot;&gt;❌&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/kiota/main/abstractions/swift&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota/issues/2076&quot;&gt;❌ FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota/issues/1451&quot;&gt;❌ JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota/issues/3033&quot;&gt;❌ FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota/issues/1452&quot;&gt;❌ TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/kiota/main/abstractions/swift/Source/MicrosoftKiotaAbstractions/Authentication/AnonymousAuthenticationProvider.swift&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota/issues/1453&quot;&gt;❌ Azure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota/issues/1454&quot;&gt;❌&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TypeScript/JavaScript&lt;/td&gt; 
   &lt;td&gt;🛠️&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/abstractions&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/serialization/form&quot;&gt;FORM&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/serialization/json&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/serialization/multipart&quot;&gt;MULTIPART&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/serialization/text&quot;&gt;TEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-typescript/raw/main/packages/abstractions/src/authentication/anonymousAuthenticationProvider.ts&quot;&gt;Anonymous&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-typescript/raw/main/packages/abstractions/src/authentication/apiKeyAuthenticationProvider.ts&quot;&gt;API Key&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/authentication/azure&quot;&gt;Azure&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/authentication/spfx&quot;&gt;SPFx&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/kiota-typescript/tree/main/packages/http/fetch&quot;&gt;🛠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/quickstarts/typescript&quot;&gt;link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Legend: ✔ -&amp;gt; stable, 🛠️ -&amp;gt; in preview, ❌ -&amp;gt; not started, ▶ -&amp;gt; in progress.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Parameters reference&lt;/h3&gt; 
&lt;p&gt;Parameters are documented &lt;a href=&quot;https://learn.microsoft.com/openapi/kiota/using&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Debugging&lt;/h3&gt; 
&lt;p&gt;Make sure you &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/kiota/main/CONTRIBUTING.md&quot;&gt;install the pre-requisites first&lt;/a&gt;. If you are using Visual Studio Code as your IDE, the &lt;strong&gt;launch.json&lt;/strong&gt; file already contains the configuration to run Kiota. By default this configuration will use the &lt;code&gt;openApiDocs/v1.0/Mail.yml&lt;/code&gt; under the &lt;a href=&quot;https://github.com/microsoftgraph/msgraph-sdk-powershell&quot;&gt;PowerShell repository&lt;/a&gt; as the OpenAPI to generate an SDK for. By default this configuration will output the generated files in a graphdotnetv4|graphjavav4|graphtypescriptv4 folder located in the parent folder this repository is cloned in.&lt;/p&gt; 
&lt;p&gt;Selecting the language you want to generate an API client for in the Visual Studio Debug tab and hitting &lt;strong&gt;F5&lt;/strong&gt; will automatically build, start, and attach the debugging process to Kiota.&lt;/p&gt; 
&lt;h3&gt;Samples&lt;/h3&gt; 
&lt;p&gt;You can find samples of clients generated with Kiota in the &lt;a href=&quot;https://github.com/microsoft/kiota-samples&quot;&gt;Kiota samples&lt;/a&gt; repository.&lt;/p&gt; 
&lt;p&gt;An example of an application that is calling multiple API can be found in the &lt;a href=&quot;https://github.com/darrelmiller/KiotaApp&quot;&gt;KiotaApp&lt;/a&gt; repo&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&quot;https://www.microsoft.com/legal/intellectualproperty/trademarks/usage/general&quot;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/semantic-kernel</title>
      <link>https://github.com/microsoft/semantic-kernel</link>
      <description>&lt;p&gt;Integrate cutting-edge LLM technology quickly and easily into your apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Semantic Kernel&lt;/h1&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Python &lt;br&gt; &lt;a href=&quot;https://pypi.org/project/semantic-kernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/semantic-kernel&quot; alt=&quot;Python package&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;.NET &lt;br&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.SemanticKernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.SemanticKernel&quot; alt=&quot;Nuget package&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci-docker.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci-docker.yml/badge.svg?branch=main&quot; alt=&quot;dotnet Docker&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci-windows.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci-windows.yml/badge.svg?branch=main&quot; alt=&quot;dotnet Windows&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/semantic-kernel&quot; alt=&quot;License: MIT&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1063152441819942922?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=d82679&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/overview/&quot;&gt;Semantic Kernel&lt;/a&gt; is an SDK that integrates Large Language Models (LLMs) like &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, and &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt; with conventional programming languages like C#, Python, and Java. Semantic Kernel achieves this by allowing you to define &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/plugins&quot;&gt;plugins&lt;/a&gt; that can be chained together in just a &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/chaining-functions?tabs=Csharp#using-the-runasync-method-to-simplify-your-code&quot;&gt;few lines of code&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;What makes Semantic Kernel &lt;em&gt;special&lt;/em&gt;, however, is its ability to &lt;em&gt;automatically&lt;/em&gt; orchestrate plugins with AI. With Semantic Kernel &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/planner&quot;&gt;planners&lt;/a&gt;, you can ask an LLM to generate a plan that achieves a user&#39;s unique goal. Afterwards, Semantic Kernel will execute the plan for the user.&lt;/p&gt; 
&lt;p&gt;It provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;abstractions for AI services (such as chat, text to images, audio to text, etc.) and memory stores&lt;/li&gt; 
 &lt;li&gt;implementations of those abstractions for services from &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt;, local models, and more, and for a multitude of vector databases, such as those from &lt;a href=&quot;https://docs.trychroma.com/getting-started&quot;&gt;Chroma&lt;/a&gt;, &lt;a href=&quot;https://qdrant.tech/&quot;&gt;Qdrant&lt;/a&gt;, &lt;a href=&quot;https://milvus.io/&quot;&gt;Milvus&lt;/a&gt;, and &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search&quot;&gt;Azure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;a common representation for &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/plugins&quot;&gt;plugins&lt;/a&gt;, which can then be orchestrated automatically by AI&lt;/li&gt; 
 &lt;li&gt;the ability to create such plugins from a multitude of sources, including from OpenAPI specifications, prompts, and arbitrary code written in the target language&lt;/li&gt; 
 &lt;li&gt;extensible support for prompt management and rendering, including built-in handling of common formats like Handlebars and Liquid&lt;/li&gt; 
 &lt;li&gt;and a wealth of functionality layered on top of these abstractions, such as filters for responsible AI, dependency injection integration, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Semantic Kernel is utilized by enterprises due to its flexibility, modularity and observability. Backed with security enhancing capabilities like telemetry support, and hooks and filters so you’ll feel confident you’re delivering responsible AI solutions at scale. Semantic Kernel was designed to be future proof, easily connecting your code to the latest AI models evolving with the technology as it advances. When new models are released, you’ll simply swap them out without needing to rewrite your entire codebase.&lt;/p&gt; 
&lt;h4&gt;Please star the repo to show your support for this project!&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/enterprise-ready.png&quot; alt=&quot;Enterprise-ready&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Getting started with Semantic Kernel&lt;/h2&gt; 
&lt;p&gt;The Semantic Kernel SDK is available in C#, Python, and Java. To get started, choose your preferred language below. See the &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/supported-languages&quot;&gt;Feature Matrix&lt;/a&gt; for a breakdown of feature parity between our currently supported languages.&lt;/p&gt; 
&lt;table width=&quot;100%&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; src=&quot;https://user-images.githubusercontent.com/371009/230673036-fad1e8e6-5d48-49b1-a9c1-6f9834e0d165.png&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/dotnet/README.md&quot;&gt;Using Semantic Kernel in C#&lt;/a&gt; &amp;nbsp;
     &lt;br&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; src=&quot;https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg?sanitize=true&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/python/README.md&quot;&gt;Using Semantic Kernel in Python&lt;/a&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; height=&quot;52px&quot; src=&quot;https://upload.wikimedia.org/wikipedia/en/3/30/Java_programming_language_logo.svg?sanitize=true&quot; alt=&quot;Java logo&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java/raw/main/README.md&quot;&gt;Using Semantic Kernel in Java&lt;/a&gt; 
    &lt;/div&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The quickest way to get started with the basics is to get an API key from either OpenAI or Azure OpenAI and to run one of the C#, Python, and Java console applications/scripts below.&lt;/p&gt; 
&lt;h3&gt;For C#:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the Quick start page &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide?pivots=programming-language-csharp&quot;&gt;here&lt;/a&gt; and follow the steps to dive in.&lt;/li&gt; 
 &lt;li&gt;After Installing the SDK, we advise you follow the steps and code detailed to write your first console app. &lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/dotnetmap.png&quot; alt=&quot;dotnetmap&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;For Python:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the Quick start page &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide?pivots=programming-language-python&quot;&gt;here&lt;/a&gt; and follow the steps to dive in.&lt;/li&gt; 
 &lt;li&gt;You&#39;ll need to ensure that you toggle to Python in the Choose a programming language table at the top of the page. &lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/pythonmap.png&quot; alt=&quot;pythonmap&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;For Java:&lt;/h3&gt; 
&lt;p&gt;The Java code is in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java&quot;&gt;semantic-kernel-java&lt;/a&gt; repository. See &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java/raw/main/BUILD.md&quot;&gt;semantic-kernel-java build&lt;/a&gt; for instructions on how to build and run the Java code.&lt;/p&gt; 
&lt;p&gt;Please file Java Semantic Kernel specific issues in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java&quot;&gt;semantic-kernel-java&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Learning how to use Semantic Kernel&lt;/h2&gt; 
&lt;p&gt;The fastest way to learn how to use Semantic Kernel is with our C# and Python Jupyter notebooks. These notebooks demonstrate how to use Semantic Kernel with code snippets that you can run with a push of a button.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/dotnet/notebooks/00-getting-started.ipynb&quot;&gt;Getting Started with C# notebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/python/samples/getting_started/00-getting-started.ipynb&quot;&gt;Getting Started with Python notebook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Once you&#39;ve finished the getting started notebooks, you can then check out the main walkthroughs on our Learn site. Each sample comes with a completed C# and Python project that you can run locally.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;📖 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔌 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/detailed-samples&quot;&gt;Detailed Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/kernel&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Finally, refer to our API references for more details on the C# and Python APIs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/microsoft.semantickernel?view=semantic-kernel-dotnet&quot;&gt;C# API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/python/api/semantic-kernel/semantic_kernel?view=semantic-kernel-python&quot;&gt;Python API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Java API reference (coming soon)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Visual Studio Code extension: design semantic functions with ease&lt;/h2&gt; 
&lt;p&gt;The Semantic Kernel extension for Visual Studio Code makes it easy to design and test semantic functions. The extension provides an interface for designing semantic functions and allows you to test them with the push of a button with your existing models and data.&lt;/p&gt; 
&lt;h2&gt;Join the community&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions and suggestions to SK community! One of the easiest ways to participate is to engage in discussions in the GitHub repository. Bug reports and fixes are welcome!&lt;/p&gt; 
&lt;p&gt;For new features, components, or extensions, please open an issue and discuss with us before sending a PR. This is to avoid rejection as we might be taking the core in a different direction, but also to consider the impact on the larger ecosystem.&lt;/p&gt; 
&lt;p&gt;To learn more and get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Read the &lt;a href=&quot;https://aka.ms/sk/learn&quot;&gt;documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Learn how to &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/support/contributing&quot;&gt;contribute&lt;/a&gt; to the project&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel/discussions&quot;&gt;GitHub discussions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;Discord community&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Attend &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/COMMUNITY.md&quot;&gt;regular office hours and SK community events&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the team on our &lt;a href=&quot;https://aka.ms/sk/blog&quot;&gt;blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributor Wall of Fame&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=microsoft/semantic-kernel&quot; alt=&quot;semantic-kernel contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/LICENSE&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Azure/azure-sdk-for-net</title>
      <link>https://github.com/Azure/azure-sdk-for-net</link>
      <description>&lt;p&gt;This repository is for active development of the Azure SDK for .NET. For consumers of the SDK we recommend visiting our public developer docs at https://learn.microsoft.com/dotnet/azure/ or our versioned developer docs at https://azure.github.io/azure-sdk-for-net.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure SDK for .NET&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://azure.github.io/azure-sdk/releases/latest/dotnet.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/packages-latest-blue.svg?sanitize=true&quot; alt=&quot;Packages&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-net/dependencies/dependencies.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dependency-report-blue.svg?sanitize=true&quot; alt=&quot;Dependencies&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-net/dependencies/dependencyGraph/dagre.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dependency-graph-blue.svg?sanitize=true&quot; alt=&quot;Dependencies Graph&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository is for active development of the Azure SDK for .NET. For consumers of the SDK we recommend visiting our &lt;a href=&quot;https://docs.microsoft.com/dotnet/azure/&quot;&gt;public developer docs&lt;/a&gt; or our versioned &lt;a href=&quot;https://azure.github.io/azure-sdk-for-net&quot;&gt;developer docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;To get started with a library, see the README.md file located in the library&#39;s project folder. You can find these library folders grouped by service in the /sdk directory.&lt;/p&gt; 
&lt;p&gt;For tutorials, samples, quick starts, and other documentation, go to &lt;a href=&quot;https://docs.microsoft.com/dotnet/azure/&quot;&gt;Azure for .NET Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Packages available&lt;/h2&gt; 
&lt;p&gt;Each service might have a number of libraries available from each of the following categories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#client-new-releases&quot;&gt;Client - New Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#client-previous-versions&quot;&gt;Client - Previous Versions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#management-new-releases&quot;&gt;Management - New Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#management-previous-versions&quot;&gt;Management - Previous Versions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Client: New Releases&lt;/h3&gt; 
&lt;p&gt;New wave of packages that we are announcing as &lt;strong&gt;GA&lt;/strong&gt; and several that are currently releasing in &lt;strong&gt;preview&lt;/strong&gt;. These libraries follow the &lt;a href=&quot;https://azure.github.io/azure-sdk/dotnet/guidelines/&quot;&gt;Azure SDK Design Guidelines for .NET&lt;/a&gt; and share a number of core features such as HTTP retries, logging, transport protocols, authentication protocols, etc., so that once you learn how to use these features in one client library, you will know how to use them in other client libraries. You can learn about these shared features at &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/raw/main/sdk/core/Azure.Core/README.md&quot;&gt;Azure.Core&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;These new client libraries can be identified by the naming used for their folder, package, and namespace. Each will start with &lt;code&gt;Azure&lt;/code&gt;, followed by the service category, and then the name of the service. For example &lt;code&gt;Azure.Storage.Blobs&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For a complete list of available packages, please see the &lt;a href=&quot;https://azure.github.io/azure-sdk/releases/latest/dotnet.html&quot;&gt;latest available packages&lt;/a&gt; page.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: If you need to ensure your code is ready for production we strongly recommend using one of the stable, non-preview libraries.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Client: Previous Versions&lt;/h3&gt; 
&lt;p&gt;Last stable versions of packages that are production-ready. These libraries provide similar functionalities to the preview packages, as they allow you to use and consume existing resources and interact with them, for example: upload a storage blob. Stable library directories typically contain &#39;Microsoft.Azure&#39; in their names, e.g. &#39;Microsoft.Azure.KeyVault&#39;. They might not implement the &lt;a href=&quot;https://azure.github.io/azure-sdk/dotnet_introduction.html&quot;&gt;guidelines&lt;/a&gt; or have the same feature set as the November releases. They do however offer wider coverage of services.&lt;/p&gt; 
&lt;h3&gt;Management: New Releases&lt;/h3&gt; 
&lt;p&gt;A new set of management libraries that follow the &lt;a href=&quot;https://azure.github.io/azure-sdk/dotnet_introduction.html&quot;&gt;Azure SDK Design Guidelines for .NET&lt;/a&gt; and based on &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/core/Azure.Core&quot;&gt;Azure.Core libraries&lt;/a&gt; are now in Public Preview. These new libraries provide a number of core capabilities that are shared amongst all Azure SDKs, including the intuitive Azure Identity library, an HTTP Pipeline with custom policies, error-handling, distributed tracing, and much more. You can find the list of new packages &lt;a href=&quot;https://azure.github.io/azure-sdk/releases/latest/dotnet.html&quot;&gt;on this page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To get started with these new libraries, please see the &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/raw/main/doc/mgmt_preview_quickstart.md&quot;&gt;quickstart guide here&lt;/a&gt;. These new libraries can be identified by namespaces that start with &lt;code&gt;Azure.ResourceManager&lt;/code&gt;, e.g. &lt;code&gt;Azure.ResourceManager.Network&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: If you need to ensure your code is ready for production use one of the stable, non-preview libraries.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Management: Previous Versions&lt;/h3&gt; 
&lt;p&gt;For a complete list of management libraries which enable you to provision and manage Azure resources, please check &lt;a href=&quot;https://azure.github.io/azure-sdk/releases/latest/all/dotnet.html&quot;&gt;here&lt;/a&gt;. They might not have the same feature set as the new releases but they do offer wider coverage of services. Previous versions of management libraries can be identified by namespaces that start with &lt;code&gt;Microsoft.Azure.Management&lt;/code&gt;, e.g. &lt;code&gt;Microsoft.Azure.Management.Network&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Documentation and code samples for these libraries can be found &lt;a href=&quot;https://azure.github.io/azure-sdk-for-net&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Need help?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;For reference documentation visit the &lt;a href=&quot;https://aka.ms/net-docs&quot;&gt;Azure SDK for .NET API Reference&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For tutorials, samples, quick starts, and other documentation, go to &lt;a href=&quot;https://docs.microsoft.com/dotnet/azure/&quot;&gt;Azure for .NET Developers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;File an issue via &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/issues/new/choose&quot;&gt;Github Issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Check &lt;a href=&quot;https://stackoverflow.com/questions/tagged/azure+.net&quot;&gt;previous questions&lt;/a&gt; or ask new ones on StackOverflow using &lt;code&gt;azure&lt;/code&gt; and &lt;code&gt;.net&lt;/code&gt; tags.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat with other community members &lt;a href=&quot;https://gitter.im/azure/azure-sdk-for-net?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/azure/azure-sdk-for-net&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Reporting security issues and security bugs&lt;/h3&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&quot;https://www.microsoft.com/msrc/faqs-report-an-issue&quot;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;We want your thoughts!&lt;/h2&gt; 
&lt;h3&gt;Feature Requests&lt;/h3&gt; 
&lt;p&gt;What features are important to you? You can let us know by looking at our open &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/issues?q=is%3Aopen+label%3Afeature-request+sort%3Areactions-%2B1-desc&quot;&gt;feature requests&lt;/a&gt; and sharing your thoughts by giving the issue a thumbs up or thumbs down. (Note the list is sorted by number of thumbs up in descending order.)&lt;/p&gt; 
&lt;h3&gt;Design Discussions&lt;/h3&gt; 
&lt;p&gt;We would love to incorporate the community&#39;s input into our library design process. Here&#39;s a list of &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/labels/design-discussion&quot;&gt;design discussions&lt;/a&gt; that we&#39;re currently having. Participate in the discussions by leaving your comments in the issue!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;For details on contributing to this repository, see the &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/raw/main/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.microsoft.com&quot;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
