<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 01:31:16 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>casibase/casibase</title>
      <link>https://github.com/casibase/casibase</link>
      <description>&lt;p&gt;‚ö°Ô∏èOpen-source enterprise-level AI knowledge base and Manus-like agent management platform with admin UI, user management and Single-Sign-On‚ö°Ô∏è, supports ChatGPT, Claude, DeepSeek R1, Llama, Ollama, HuggingFace, etc., chat bot demo: https://ai.casibase.com, admin UI demo: https://ai-admin.casibase.com&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot; style=&quot;border-bottom: none;&quot;&gt;üì¶‚ö°Ô∏è Casibase&lt;/h1&gt; 
&lt;h3 align=&quot;center&quot;&gt;Open-source AI LangChain-like RAG (Retrieval-Augmented Generation) knowledge database with web UI and Enterprise SSO, supports OpenAI, Azure, LLaMA, Google Gemini, HuggingFace, Claude, Grok, etc.,&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/casibase/casibase/master/#badge&quot;&gt; &lt;img alt=&quot;semantic-release&quot; src=&quot;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/casbin/casibase&quot;&gt; &lt;img alt=&quot;docker pull casbin/casibase&quot; src=&quot;https://img.shields.io/docker/pulls/casbin/casibase.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/casibase/casibase/actions/workflows/build.yml&quot;&gt; &lt;img alt=&quot;GitHub Workflow Status (branch)&quot; src=&quot;https://github.com/casibase/casibase/workflows/Build/badge.svg?style=flat-square&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/casibase/casibase/releases/latest&quot;&gt; &lt;img alt=&quot;GitHub Release&quot; src=&quot;https://img.shields.io/github/v/release/casibase/casibase.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/casbin/casibase&quot;&gt; &lt;img alt=&quot;Docker Image Version (latest semver)&quot; src=&quot;https://img.shields.io/badge/Docker%20Hub-latest-brightgreen&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/casibase/casibase&quot;&gt; &lt;img alt=&quot;Go Report Card&quot; src=&quot;https://goreportcard.com/badge/github.com/casibase/casibase?style=flat-square&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/casibase/casibase/raw/master/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/casibase/casibase?style=flat-square&quot; alt=&quot;license&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/casibase/casibase/issues&quot;&gt; &lt;img alt=&quot;GitHub issues&quot; src=&quot;https://img.shields.io/github/issues/casibase/casibase?style=flat-square&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/casibase/casibase/master/#&quot;&gt; &lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/casibase/casibase?style=flat-square&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/casibase/casibase/network&quot;&gt; &lt;img alt=&quot;GitHub forks&quot; src=&quot;https://img.shields.io/github/forks/casibase/casibase?style=flat-square&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://crowdin.com/project/casibase&quot;&gt; &lt;img alt=&quot;Crowdin&quot; src=&quot;https://badges.crowdin.net/casibase/localized.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://discord.gg/devUNrWXrh&quot;&gt; &lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1022748306096537660?logo=discord&amp;amp;label=discord&amp;amp;color=5865F2&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Online Demo&lt;/h2&gt; 
&lt;h3&gt;Read-only site (any modification operation will fail)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat bot: &lt;a href=&quot;https://ai.casibase.com&quot;&gt;https://ai.casibase.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Admin UI: &lt;a href=&quot;https://ai-admin.casibase.com&quot;&gt;https://ai-admin.casibase.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Writable site (original data will be restored for every 5 minutes)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat bot: &lt;a href=&quot;https://demo.casibase.com&quot;&gt;https://demo.casibase.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Admin UI: &lt;a href=&quot;https://demo-admin.casibase.com&quot;&gt;https://demo-admin.casibase.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://casibase.org&quot;&gt;https://casibase.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;Casibase contains 2 parts:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Language&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Frontend&lt;/td&gt; 
   &lt;td&gt;User interface for Casibase&lt;/td&gt; 
   &lt;td&gt;JavaScript + React&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Backend&lt;/td&gt; 
   &lt;td&gt;Server-side logic and API for Casibase&lt;/td&gt; 
   &lt;td&gt;Golang + Beego + Python + Flask + MySQL&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/casibase/casibase/master/assets/0-Architecture-casibase.png&quot; alt=&quot;0-Architecture-casibase&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Supported Models&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Language Model&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Model&lt;/th&gt; 
   &lt;th&gt;Sub Type&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenAI&lt;/td&gt; 
   &lt;td&gt;dall-e-3Ôºågpt-3.5-turbo-0125Ôºå gpt-3.5-turboÔºå gpt-3.5-turbo-1106Ôºå gpt-3.5-turbo-instructÔºågpt-3.5-turbo-16k-0613Ôºågpt-3.5-turbo-16kÔºågpt-4-0125-previewÔºågpt-4-1106-previewÔºågpt-4-turbo-previewÔºågpt-4-vision-previewÔºågpt-4-1106-vision-previewÔºågpt-4Ôºå gpt-4-0613Ôºågpt-4-32kÔºågpt-4-32k-0613Ôºå gpt-4oÔºågpt-4o-2024-05-13Ôºågpt-4o-miniÔºågpt-4o-mini-2024-07-18&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://chat.openai.com/&quot;&gt;OpenAI&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemini&lt;/td&gt; 
   &lt;td&gt;gemini-proÔºågemini-pro-vision&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://gemini.google.com/&quot;&gt;Gemini&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hugging Face&lt;/td&gt; 
   &lt;td&gt;meta-llama/Llama-2-7bÔºåtiiuae/falcon-180BÔºåbigscience/bloomÔºågpt2Ôºåbaichuan-inc/Baichuan2-13B-ChatÔºåTHUDM/chatglm2-6b&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Claude&lt;/td&gt; 
   &lt;td&gt;claude-2.0Ôºåclaude-2.1Ôºåclaude-instant-1.2Ôºåclaude-3-sonnet-20240229Ôºåclaude-3-opus-20240229Ôºåclaude-3-haiku-20240307&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://claude.ai/chats&quot;&gt;Claude&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenRouter&lt;/td&gt; 
   &lt;td&gt;google/palm-2-codechat-bison, google/palm-2-chat-bison, openai/gpt-3.5-turbo, openai/gpt-3.5-turbo-16k, openai/gpt-4, openai/gpt-4-32k, anthropic/claude-2, anthropic/claude-instant-v1, meta-llama/llama-2-13b-chat, meta-llama/llama-2-70b-chat, palm-2-codechat-bison, palm-2-chat-bison, gpt-3.5-turbo, gpt-3.5-turbo-16k, gpt-4, gpt-4-32k, claude-2, claude-instant-v1, llama-2-13b-chat, llama-2-70b-chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://openrouter.ai/&quot;&gt;OpenRouter&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ernie&lt;/td&gt; 
   &lt;td&gt;ERNIE-Bot, ERNIE-Bot-turbo, BLOOMZ-7B, Llama-2&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://yiyan.baidu.com/&quot;&gt;Ernie&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Cohere&lt;/td&gt; 
   &lt;td&gt;command-lightÔºåcommand&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://cohere.com/&quot;&gt;Cohere&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iFlytek&lt;/td&gt; 
   &lt;td&gt;spark-v1.5, spark-v2.0&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://xinghuo.xfyun.cn/&quot;&gt;iFlytek&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ChatGLM&lt;/td&gt; 
   &lt;td&gt;glm-3-turboÔºåglm-4Ôºåglm-4V&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://chatglm.cn/&quot;&gt;ChatGLM&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MiniMax&lt;/td&gt; 
   &lt;td&gt;abab5-chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://api.minimax.chat/&quot;&gt;MiniMax&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Local&lt;/td&gt; 
   &lt;td&gt;custom-model&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/casibase/casibase/master/#&quot;&gt;Local Computer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Azure&lt;/td&gt; 
   &lt;td&gt;dall-e-3Ôºågpt-3.5-turbo-0125Ôºå gpt-3.5-turboÔºå gpt-3.5-turbo-1106Ôºå gpt-3.5-turbo-instructÔºågpt-3.5-turbo-16k-0613Ôºågpt-3.5-turbo-16kÔºågpt-4-0125-previewÔºågpt-4-1106-previewÔºågpt-4-turbo-previewÔºågpt-4-vision-previewÔºågpt-4-1106-vision-previewÔºågpt-4Ôºå gpt-4-0613Ôºågpt-4-32kÔºågpt-4-32k-0613Ôºå gpt-4oÔºågpt-4o-2024-05-13Ôºågpt-4o-miniÔºågpt-4o-mini-2024-07-18&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://azure.microsoft.com/zh-cn/products/ai-model-catalog&quot;&gt;Azure&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Moonshot&lt;/td&gt; 
   &lt;td&gt;moonshot-v1-8kÔºåmoonshot-v1-32kÔºåmoonshot-v1-128k&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.moonshot.cn/&quot;&gt;Moonshot&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Amazon Bedrock&lt;/td&gt; 
   &lt;td&gt;claudeÔºåclaude-instantÔºåcommandÔºåcommand-lightÔºåembed-englishÔºåembed-multilingualÔºåjurassic-2-midÔºåjurassic-2-ultraÔºållama-2-chat-13bÔºållama-2-chat-70bÔºåtitan-text-liteÔºåtitan-text-expressÔºåtitan-embeddingsÔºåtitan-multimodal-embeddings&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aws.amazon.com/cn/bedrock/&quot;&gt;Amazon Bedrock&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Qwen&lt;/td&gt; 
   &lt;td&gt;qwen-longÔºåqwen-turboÔºåqwen-plusÔºåqwen-maxÔºåqwen-max-longcontext&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.aliyun.com/product/tongyi&quot;&gt;Qwen&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Baichuan&lt;/td&gt; 
   &lt;td&gt;Baichuan2-TurboÔºåBaichuan3-TurboÔºåBaichuan4&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.baichuan-ai.com/home&quot;&gt;Baichuan&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Doubao&lt;/td&gt; 
   &lt;td&gt;Doubao-lite-4kÔºåDoubao-lite-32kÔºåDoubao-lite-128kÔºåDoubao-pro-4kÔºåDoubao-pro-32kÔºåDoubao-pro-128k&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://team.doubao.com/zh/?view_from=homepage_tab&quot;&gt;Doubao&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek&lt;/td&gt; 
   &lt;td&gt;deepseek-chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.deepseek.com/&quot;&gt;DeepSeek&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;StepFun&lt;/td&gt; 
   &lt;td&gt;step-1-8kÔºåstep-1-32kÔºåstep-1-128kÔºåsstep-1-256kÔºåstep-1-flashÔºåstep-2-16k&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.stepfun.com/&quot;&gt;StepFun&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hunyuan&lt;/td&gt; 
   &lt;td&gt;hunyuan-liteÔºåhunyuan-standardÔºåhunyuan-standard-256KÔºåhunyuan-proÔºåhunyuan-codeÔºå hunyuan-roleÔºåhunyuan-turbo&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://hunyuan.tencent.com/&quot;&gt;Hunyuan&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mistral&lt;/td&gt; 
   &lt;td&gt;mistral-large-latestÔºåpixtral-large-latestÔºåmistral-small-latestÔºåcodestral-latestÔºåministral-8b-latestÔºåministral-3b-latestÔºåpixtral-12bÔºåmistral-nemoÔºåopen-mistral-7bÔºåopen-mixtral-8x7bÔºåopen-mixtral-8x22b&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://mistral.ai/&quot;&gt;Mistral&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Embedding Model&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Model&lt;/th&gt; 
   &lt;th&gt;Sub Type&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenAI&lt;/td&gt; 
   &lt;td&gt;text-embedding-ada-002Ôºåtext-embedding-3-smallÔºåtext-embedding-3-large&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://chat.openai.com/&quot;&gt;OpenAI&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hugging Face&lt;/td&gt; 
   &lt;td&gt;sentence-transformers/all-MiniLM-L6-v2&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Cohere&lt;/td&gt; 
   &lt;td&gt;embed-english-v2.0Ôºåembed-english-light-v2.0Ôºåembed-multilingual-v2.0Ôºåembed-english-v3.0&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://cohere.com/&quot;&gt;Cohere&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ernie&lt;/td&gt; 
   &lt;td&gt;default&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://yiyan.baidu.com/&quot;&gt;Ernie&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MiniMax&lt;/td&gt; 
   &lt;td&gt;embo-01&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://api.minimax.chat/&quot;&gt;MiniMax&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Local&lt;/td&gt; 
   &lt;td&gt;custom-embedding&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/casibase/casibase/master/#&quot;&gt;Local Computer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Azure&lt;/td&gt; 
   &lt;td&gt;text-embedding-ada-002Ôºåtext-embedding-3-smallÔºåtext-embedding-3-large&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://azure.microsoft.com/zh-cn/products/ai-model-catalog&quot;&gt;Azure&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Qwen&lt;/td&gt; 
   &lt;td&gt;text-embedding-v1Ôºåtext-embedding-v2Ôºåtext-embedding-v3&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.aliyun.com/product/tongyi&quot;&gt;Qwen&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hunyuan&lt;/td&gt; 
   &lt;td&gt;hunyuan-embedding&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://hunyuan.tencent.com/&quot;&gt;Hunyuan&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Jina&lt;/td&gt; 
   &lt;td&gt;jina-embeddings-v2-base-zhÔºåjina-embeddings-v2-base-enÔºåjina-embeddings-v2-base-deÔºåjina-embeddings-v2-base-code&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://jina.ai/&quot;&gt;Jina&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://casibase.org&quot;&gt;https://casibase.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://casibase.org/docs/basic/server-installation&quot;&gt;https://casibase.org/docs/basic/server-installation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How to contact?&lt;/h2&gt; 
&lt;p&gt;Discord: &lt;a href=&quot;https://discord.gg/5rPsrAzK7S&quot;&gt;https://discord.gg/5rPsrAzK7S&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;For Casibase, if you have any questions, you can give issues, or you can also directly start Pull Requests(but we recommend giving issues first to communicate with the community).&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/casibase/casibase/raw/master/LICENSE&quot;&gt;Apache-2.0&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>glanceapp/glance</title>
      <link>https://github.com/glanceapp/glance</link>
      <description>&lt;p&gt;A self-hosted dashboard that puts all your feeds in one place&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;em&gt;What if you could see everything at a...&lt;/em&gt;&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Glance&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/#installation&quot;&gt;Install&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md&quot;&gt;Configuration&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/preconfigured-pages.md&quot;&gt;Preconfigured pages&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/themes.md&quot;&gt;Themes&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://discord.com/invite/7KQ7Xa9kJd&quot;&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/readme-main-image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Various widgets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;RSS feeds&lt;/li&gt; 
 &lt;li&gt;Subreddit posts&lt;/li&gt; 
 &lt;li&gt;Hacker News posts&lt;/li&gt; 
 &lt;li&gt;Weather forecasts&lt;/li&gt; 
 &lt;li&gt;YouTube channel uploads&lt;/li&gt; 
 &lt;li&gt;Twitch channels&lt;/li&gt; 
 &lt;li&gt;Market prices&lt;/li&gt; 
 &lt;li&gt;Docker containers status&lt;/li&gt; 
 &lt;li&gt;Server stats&lt;/li&gt; 
 &lt;li&gt;Custom widgets&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md&quot;&gt;and many more...&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fast and lightweight&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Low memory usage&lt;/li&gt; 
 &lt;li&gt;Few dependencies&lt;/li&gt; 
 &lt;li&gt;Minimal vanilla JS&lt;/li&gt; 
 &lt;li&gt;Single &amp;lt;20mb binary available for multiple OSs &amp;amp; architectures and just as small Docker container&lt;/li&gt; 
 &lt;li&gt;Uncached pages usually load within ~1s (depending on internet speed and number of widgets)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tons of customizability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Different layouts&lt;/li&gt; 
 &lt;li&gt;As many pages/tabs as you need&lt;/li&gt; 
 &lt;li&gt;Numerous configuration options for each widget&lt;/li&gt; 
 &lt;li&gt;Multiple styles for some widgets&lt;/li&gt; 
 &lt;li&gt;Custom CSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Optimized for mobile devices&lt;/h3&gt; 
&lt;p&gt;Because you&#39;ll want to take it with you on the go.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/mobile-preview.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Themeable&lt;/h3&gt; 
&lt;p&gt;Easily create your own theme by tweaking a few numbers or choose from one of the &lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/themes.md&quot;&gt;already available themes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/themes-example.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Configuration is done through YAML files, to learn more about how the layout works, how to add more pages and how to configure widgets, visit the &lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md&quot;&gt;configuration documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Preview example configuration file&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;pages:
  - name: Home
    columns:
      - size: small
        widgets:
          - type: calendar
            first-day-of-week: monday

          - type: rss
            limit: 10
            collapse-after: 3
            cache: 12h
            feeds:
              - url: https://selfh.st/rss/
                title: selfh.st
                limit: 4
              - url: https://ciechanow.ski/atom.xml
              - url: https://www.joshwcomeau.com/rss.xml
                title: Josh Comeau
              - url: https://samwho.dev/rss.xml
              - url: https://ishadeed.com/feed.xml
                title: Ahmad Shadeed

          - type: twitch-channels
            channels:
              - theprimeagen
              - j_blow
              - piratesoftware
              - cohhcarnage
              - christitustech
              - EJ_SA

      - size: full
        widgets:
          - type: group
            widgets:
              - type: hacker-news
              - type: lobsters

          - type: videos
            channels:
              - UCXuqSBlHAE6Xw-yeJA0Tunw # Linus Tech Tips
              - UCR-DXc1voovS8nhAvccRZhg # Jeff Geerling
              - UCsBjURrPoezykLs9EqgamOA # Fireship
              - UCBJycsmduvYEL83R_U4JriQ # Marques Brownlee
              - UCHnyfMqiRRG1u-2MsSQLbXA # Veritasium

          - type: group
            widgets:
              - type: reddit
                subreddit: technology
                show-thumbnails: true
              - type: reddit
                subreddit: selfhosted
                show-thumbnails: true

      - size: small
        widgets:
          - type: weather
            location: London, United Kingdom
            units: metric
            hour-format: 12h

          - type: markets
            markets:
              - symbol: SPY
                name: S&amp;amp;P 500
              - symbol: BTC-USD
                name: Bitcoin
              - symbol: NVDA
                name: NVIDIA
              - symbol: AAPL
                name: Apple
              - symbol: MSFT
                name: Microsoft

          - type: releases
            cache: 1d
            repositories:
              - glanceapp/glance
              - go-gitea/gitea
              - immich-app/immich
              - syncthing/syncthing
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Choose one of the following methods:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Docker compose using provided directory structure (recommended)&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Create a new directory called &lt;code&gt;glance&lt;/code&gt; as well as the template files within it by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir glance &amp;amp;&amp;amp; cd glance &amp;amp;&amp;amp; curl -sL https://github.com/glanceapp/docker-compose-template/archive/refs/heads/main.tar.gz | tar -xzf - --strip-components 2
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/glanceapp/docker-compose-template/tree/main/root&quot;&gt;click here to view the files that will be created&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;Then, edit the following files as desired:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; to configure the port, volumes and other containery things&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;config/home.yml&lt;/code&gt; to configure the widgets or layout of the home page&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;config/glance.yml&lt;/code&gt; if you want to change the theme or add more pages&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;details&gt; 
  &lt;summary&gt;Other files you may want to edit&lt;/summary&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;.env&lt;/code&gt; to configure environment variables that will be available inside configuration files&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;assets/user.css&lt;/code&gt; to add custom CSS&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/details&gt; 
 &lt;p&gt;When ready, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you encounter any issues, you can check the logs by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker compose logs
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Docker compose manual&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file with the following contents:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;services:
  glance:
    container_name: glance
    image: glanceapp/glance
    volumes:
      - ./config:/app/config
    ports:
      - 8080:8080
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Then, create a new directory called &lt;code&gt;config&lt;/code&gt; and download the example starting &lt;a href=&quot;https://github.com/glanceapp/glance/raw/main/docs/glance.yml&quot;&gt;&lt;code&gt;glance.yml&lt;/code&gt;&lt;/a&gt; file into it by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir config &amp;amp;&amp;amp; wget -O config/glance.yml https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Feel free to edit the &lt;code&gt;glance.yml&lt;/code&gt; file to your liking, and when ready run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you encounter any issues, you can check the logs by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker logs glance
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Manual binary installation&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Precompiled binaries are available for Linux, Windows and macOS (x86, x86_64, ARM and ARM64 architectures).&lt;/p&gt; 
 &lt;h3&gt;Linux&lt;/h3&gt; 
 &lt;p&gt;Visit the &lt;a href=&quot;https://github.com/glanceapp/glance/releases/latest&quot;&gt;latest release page&lt;/a&gt; for available binaries. You can place the binary in &lt;code&gt;/opt/glance/&lt;/code&gt; and have it start with your server via a &lt;a href=&quot;https://linuxhandbook.com/create-systemd-services/&quot;&gt;systemd service&lt;/a&gt;. By default, when running the binary, it will look for a &lt;code&gt;glance.yml&lt;/code&gt; file in the directory it&#39;s placed in. To specify a different path for the config file, use the &lt;code&gt;--config&lt;/code&gt; option:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;/opt/glance/glance --config /etc/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To grab a starting template for the config file, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;wget https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Windows&lt;/h3&gt; 
 &lt;p&gt;Download and extract the executable from the &lt;a href=&quot;https://github.com/glanceapp/glance/releases/latest&quot;&gt;latest release&lt;/a&gt; (most likely the file called &lt;code&gt;glance-windows-amd64.zip&lt;/code&gt; if you&#39;re on a 64-bit system) and place it in a folder of your choice. Then, create a new text file called &lt;code&gt;glance.yml&lt;/code&gt; in the same folder and paste the content from &lt;a href=&quot;https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml&quot;&gt;here&lt;/a&gt; in it. You should then be able to run the executable and access the dashboard by visiting &lt;code&gt;http://localhost:8080&lt;/code&gt; in your browser.&lt;/p&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Other&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Glance can also be installed through the following 3rd party channels:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://community-scripts.github.io/ProxmoxVE/scripts?id=glance&quot;&gt;Proxmox VE Helper Script&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://search.nixos.org/packages?channel=unstable&amp;amp;show=glance&quot;&gt;NixOS package&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://coolify.io/docs/services/glance/&quot;&gt;Coolify.io&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;Choose one of the following methods:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build binary with Go&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Requirements: &lt;a href=&quot;https://go.dev/dl/&quot;&gt;Go&lt;/a&gt; &amp;gt;= v1.23&lt;/p&gt; 
 &lt;p&gt;To build the project for your current OS and architecture, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;go build -o build/glance .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To build for a specific OS and architecture, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;GOOS=linux GOARCH=amd64 go build -o build/glance .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href=&quot;https://go.dev/doc/install/source#:~:text=$GOOS%20and%20$GOARCH&quot;&gt;&lt;em&gt;click here for a full list of GOOS and GOARCH combinations&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Alternatively, if you just want to run the app without creating a binary, like when you&#39;re testing out changes, you can run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;go run .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build project and Docker image with Docker&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Requirements: &lt;a href=&quot;https://docs.docker.com/engine/install/&quot;&gt;Docker&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;To build the project and image using just Docker, run:&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;(replace &lt;code&gt;owner&lt;/code&gt; with your name or organization)&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker build -t owner/glance:latest .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you wish to push the image to a registry (by default Docker Hub), run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker push owner/glance:latest
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Does the information on the page update automatically?&lt;/strong&gt;&lt;/summary&gt; No, a page refresh is required to update the information. Some things do dynamically update where it makes sense, like the clock widget and the relative time showing how long ago something happened. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;How frequently do widgets update?&lt;/strong&gt;&lt;/summary&gt; No requests are made periodically in the background, information is only fetched upon loading the page and then cached. The default cache lifetime is different for each widget and can be configured. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Can I create my own widgets?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Yes, there are multiple ways to create custom widgets:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;iframe&lt;/code&gt; widget - allows you to embed things from other websites&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;html&lt;/code&gt; widget - allows you to insert your own static HTML&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;extension&lt;/code&gt; widget - fetch HTML from a URL&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;custom-api&lt;/code&gt; widget - fetch JSON from a URL and render it using custom HTML&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Can I change the title of a widget?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Yes, the title of all widgets can be changed by specifying the &lt;code&gt;title&lt;/code&gt; property in the widget&#39;s configuration:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- type: rss
  title: My custom title

- type: markets
  title: My custom title

- type: videos
  title: My custom title

# and so on for all widgets...
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Feature requests&lt;/h2&gt; 
&lt;p&gt;New feature suggestions are always welcome and will be considered, though please keep in mind that some of them may be out of scope for what the project is trying to achieve (or is reasonably capable of). If you have an idea for a new feature and would like to share it, you can do so &lt;a href=&quot;https://github.com/glanceapp/glance/issues/new?template=feature_request.yml&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Feature requests are tagged with one of the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glanceapp/glance/labels/roadmap&quot;&gt;Roadmap&lt;/a&gt; - will be implemented in a future release&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glanceapp/glance/labels/backlog&quot;&gt;Backlog&lt;/a&gt; - may be implemented in the future but needs further feedback or interest from the community&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glanceapp/glance/labels/icebox&quot;&gt;Icebox&lt;/a&gt; - no plans to implement as it doesn&#39;t currently align with the project&#39;s goals or capabilities, may be revised at a later date&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;Contributing guidelines&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before working on a new feature it&#39;s preferable to submit a feature request first and state that you&#39;d like to implement it yourself&lt;/li&gt; 
 &lt;li&gt;Please don&#39;t submit PRs for feature requests that are either in the roadmap&lt;sup&gt;[1]&lt;/sup&gt;, backlog&lt;sup&gt;[2]&lt;/sup&gt; or icebox&lt;sup&gt;[3]&lt;/sup&gt;&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;dev&lt;/code&gt; for the base branch if you&#39;re adding new features or fixing bugs, otherwise use &lt;code&gt;main&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Avoid introducing new dependencies&lt;/li&gt; 
 &lt;li&gt;Avoid making backwards-incompatible configuration changes&lt;/li&gt; 
 &lt;li&gt;Avoid introducing new colors or hard-coding colors, use the standard &lt;code&gt;primary&lt;/code&gt;, &lt;code&gt;positive&lt;/code&gt; and &lt;code&gt;negative&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For icons, try to use &lt;a href=&quot;https://heroicons.com/&quot;&gt;heroicons&lt;/a&gt; where applicable&lt;/li&gt; 
 &lt;li&gt;Provide a screenshot of the changes if UI related where possible&lt;/li&gt; 
 &lt;li&gt;No &lt;code&gt;package.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;&lt;sup&gt;[1] [2] [3]&lt;/sup&gt;&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;[1] The feature likely already has work put into it that may conflict with your implementation&lt;/p&gt; 
 &lt;p&gt;[2] The demand, implementation or functionality for this feature is not yet clear&lt;/p&gt; 
 &lt;p&gt;[3] No plans to add this feature for the time being&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Thank you&lt;/h2&gt; 
&lt;p&gt;To all the people who were generous enough to &lt;a href=&quot;https://github.com/sponsors/glanceapp&quot;&gt;sponsor&lt;/a&gt; the project and to everyone who has contributed in any way, be it PRs, submitting issues, helping others in the discussions or Discord server, creating guides and tools or just mentioning Glance on social media. Your support is greatly appreciated and helps keep the project going.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang/go</title>
      <link>https://github.com/golang/go</link>
      <description>&lt;p&gt;The Go programming language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Go Programming Language&lt;/h1&gt; 
&lt;p&gt;Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://golang.org/doc/gopher/fiveyears.jpg&quot; alt=&quot;Gopher image&quot;&gt; &lt;em&gt;Gopher image by &lt;a href=&quot;https://reneefrench.blogspot.com/&quot;&gt;Renee French&lt;/a&gt;, licensed under &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons 4.0 Attribution license&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Our canonical Git repository is located at &lt;a href=&quot;https://go.googlesource.com/go&quot;&gt;https://go.googlesource.com/go&lt;/a&gt;. There is a mirror of the repository at &lt;a href=&quot;https://github.com/golang/go&quot;&gt;https://github.com/golang/go&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unless otherwise noted, the Go source files are distributed under the BSD-style license found in the LICENSE file.&lt;/p&gt; 
&lt;h3&gt;Download and Install&lt;/h3&gt; 
&lt;h4&gt;Binary Distributions&lt;/h4&gt; 
&lt;p&gt;Official binary distributions are available at &lt;a href=&quot;https://go.dev/dl/&quot;&gt;https://go.dev/dl/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;After downloading a binary release, visit &lt;a href=&quot;https://go.dev/doc/install&quot;&gt;https://go.dev/doc/install&lt;/a&gt; for installation instructions.&lt;/p&gt; 
&lt;h4&gt;Install From Source&lt;/h4&gt; 
&lt;p&gt;If a binary distribution is not available for your combination of operating system and architecture, visit &lt;a href=&quot;https://go.dev/doc/install/source&quot;&gt;https://go.dev/doc/install/source&lt;/a&gt; for source installation instructions.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Go is the work of thousands of contributors. We appreciate your help!&lt;/p&gt; 
&lt;p&gt;To contribute, please read the contribution guidelines at &lt;a href=&quot;https://go.dev/doc/contribute&quot;&gt;https://go.dev/doc/contribute&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Note that the Go project uses the issue tracker for bug reports and proposals only. See &lt;a href=&quot;https://go.dev/wiki/Questions&quot;&gt;https://go.dev/wiki/Questions&lt;/a&gt; for a list of places to ask questions about the Go language.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>drakkan/sftpgo</title>
      <link>https://github.com/drakkan/sftpgo</link>
      <description>&lt;p&gt;Full-featured and highly configurable SFTP, HTTP/S, FTP/S and WebDAV server - S3, Google Cloud Storage, Azure Blob&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SFTPGo&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/drakkan/sftpgo/workflows/CI/badge.svg&quot;&gt;&lt;img src=&quot;https://github.com/drakkan/sftpgo/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-AGPLv3-blue.svg?sanitize=true&quot; alt=&quot;License: AGPL-3.0-only&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/avelino/awesome-go&quot;&gt;&lt;img src=&quot;https://awesome.re/mentioned-badge.svg?sanitize=true&quot; alt=&quot;Mentioned in Awesome Go&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Full-featured and highly configurable event-driven file transfer solution. Server protocols: SFTP, HTTP/S, FTP/S, WebDAV. Storage backends: local filesystem, encrypted local filesystem, S3 (compatible) Object Storage, Google Cloud Storage, Azure Blob Storage, other SFTP servers.&lt;/p&gt; 
&lt;p&gt;With SFTPGo you can leverage local and cloud storage backends for exchanging and storing files internally or with business partners using the same tools and processes you are already familiar with.&lt;/p&gt; 
&lt;p&gt;The WebAdmin UI allows to easily create and manage your users, folders, groups and other resources.&lt;/p&gt; 
&lt;p&gt;The WebClient UI allows end users to change their credentials, browse and manage their files in the browser and setup two-factor authentication which works with Microsoft Authenticator, Google Authenticator, Authy and other compatible apps.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;We strongly believe in Open Source software model, so we decided to make SFTPGo available to everyone, but maintaining and evolving SFTPGo takes a lot of time and work. To make development and maintenance sustainable you should consider to support the project with a &lt;a href=&quot;https://github.com/sponsors/drakkan&quot;&gt;sponsorship&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We love doing the work and we&#39;d like to keep doing it - your support helps make SFTPGo possible.&lt;/p&gt; 
&lt;p&gt;It is important to understand that you should support SFTPGo and any other Open Source project you rely on for ongoing maintenance, even if you don&#39;t have any questions or need new features, to mitigate the business risk of a project you depend on going unmaintained, with its security and development velocity implications.&lt;/p&gt; 
&lt;h3&gt;Thank you to our sponsors&lt;/h3&gt; 
&lt;h4&gt;Platinum sponsors&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.aledade.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/drakkan/sftpgo/main/img/Aledade_logo.png&quot; alt=&quot;Aledade logo&quot; width=&quot;202&quot; height=&quot;70&quot;&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&quot;https://www.jumptrading.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/drakkan/sftpgo/main/img/jumptrading.png&quot; alt=&quot;Jump Trading logo&quot; width=&quot;362&quot; height=&quot;63&quot;&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&quot;https://wpengine.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/drakkan/sftpgo/main/img/wpengine.png&quot; alt=&quot;WP Engine logo&quot; width=&quot;331&quot; height=&quot;63&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Silver sponsors&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://idcs.ip-paris.fr/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/drakkan/sftpgo/main/img/IDCS.png&quot; alt=&quot;IDCS logo&quot; width=&quot;212&quot; height=&quot;51&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Bronze sponsors&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.7digital.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/drakkan/sftpgo/main/img/7digital.png&quot; alt=&quot;7digital logo&quot; width=&quot;178&quot; height=&quot;56&quot;&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&quot;https://servinga.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/drakkan/sftpgo/main/img/servinga.png&quot; alt=&quot;servinga logo&quot; width=&quot;258&quot; height=&quot;56&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;You can use SFTPGo for free, respecting the obligations of the Open Source &lt;a href=&quot;https://raw.githubusercontent.com/drakkan/sftpgo/main/#license&quot;&gt;license&lt;/a&gt;, but please do not ask or expect free support as well.&lt;/p&gt; 
&lt;p&gt;Use &lt;a href=&quot;https://github.com/drakkan/sftpgo/discussions&quot;&gt;discussions&lt;/a&gt; to ask questions and get support from the community.&lt;/p&gt; 
&lt;p&gt;We offer commercial support, guarantees, and advice for SFTPGo:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;With our &lt;a href=&quot;https://sftpgo.com/plans&quot;&gt;plans&lt;/a&gt; you can safely install and use SFTPGo on-premise in professional environments.&lt;/li&gt; 
 &lt;li&gt;With our &lt;a href=&quot;https://sftpgo.com/saas&quot;&gt;SaaS offerings&lt;/a&gt; you can use SFTPGo hosted in the cloud, fully managed and supported.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can read more about supported features and documentation at &lt;a href=&quot;https://docs.sftpgo.com/&quot;&gt;docs.sftpgo.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Internationalization&lt;/h2&gt; 
&lt;p&gt;The translations are available via &lt;a href=&quot;https://crowdin.com/project/sftpgo&quot;&gt;Crowdin&lt;/a&gt;, who have granted us an open source license.&lt;/p&gt; 
&lt;p&gt;Before start translating please take a look at our contribution &lt;a href=&quot;https://sftpgo.github.io/latest/web-interfaces/#internationalization&quot;&gt;guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Release Cadence&lt;/h2&gt; 
&lt;p&gt;SFTPGo releases are feature-driven, we don&#39;t have a fixed time based schedule. As a rough estimate, you can expect 1 or 2 new major releases per year and several bug fix releases.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;SFTPGo makes use of the third party libraries listed inside &lt;a href=&quot;https://raw.githubusercontent.com/drakkan/sftpgo/main/go.mod&quot;&gt;go.mod&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We are very grateful to all the people who contributed with ideas and/or pull requests.&lt;/p&gt; 
&lt;p&gt;Thank you to &lt;a href=&quot;https://www.ysura.com/&quot;&gt;ysura&lt;/a&gt; for granting us stable access to a test AWS S3 account.&lt;/p&gt; 
&lt;p&gt;Thank you to &lt;a href=&quot;https://keenthemes.com/&quot;&gt;KeenThemes&lt;/a&gt; for granting us a custom license to use their amazing &lt;a href=&quot;https://keenthemes.com/products/templates-mega-bundle&quot;&gt;Mega Bundle&lt;/a&gt; for SFTPGo UI.&lt;/p&gt; 
&lt;p&gt;Thank you to &lt;a href=&quot;https://crowdin.com/&quot;&gt;Crowdin&lt;/a&gt; for granting us an Open Source License.&lt;/p&gt; 
&lt;p&gt;Thank you to &lt;a href=&quot;https://www.incode.it/&quot;&gt;Incode&lt;/a&gt; for helping us to improve the UI/UX.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;SFTPGo source code is licensed under the GNU AGPL-3.0-only with &lt;a href=&quot;https://raw.githubusercontent.com/drakkan/sftpgo/main/NOTICE&quot;&gt;additional terms&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://keenthemes.com/products/templates-mega-bundle&quot;&gt;theme&lt;/a&gt; used in WebAdmin and WebClient user interfaces is proprietary, this means:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;KeenThemes HTML/CSS/JS components are allowed for use only within the SFTPGo product and restricted to be used in a resealable HTML template that can compete with KeenThemes products anyhow.&lt;/li&gt; 
 &lt;li&gt;The SFTPGo WebAdmin and WebClient user interfaces (HTML, CSS and JS components) based on this theme are allowed for use only within the SFTPGo product and therefore cannot be used in derivative works/products without an explicit grant from the &lt;a href=&quot;mailto:support@sftpgo.com&quot;&gt;SFTPGo Team&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;More information about &lt;a href=&quot;https://sftpgo.com/compliance.html&quot;&gt;compliance&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Copyright&lt;/h2&gt; 
&lt;p&gt;Copyright (C) 2019 - 2025 Nicola Murino&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kubernetes/kubernetes</title>
      <link>https://github.com/kubernetes/kubernetes</link>
      <description>&lt;p&gt;Production-Grade Container Scheduling and Management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kubernetes (K8s)&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/569&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/569/badge&quot; alt=&quot;CII Best Practices&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/kubernetes/kubernetes&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/kubernetes/kubernetes&quot; alt=&quot;Go Report Card&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/v/release/kubernetes/kubernetes?sort=semver&quot; alt=&quot;GitHub release (latest SemVer)&quot;&gt;&lt;/p&gt; 
&lt;img src=&quot;https://github.com/kubernetes/kubernetes/raw/master/logo/logo.png&quot; width=&quot;100&quot;&gt; 
&lt;hr&gt; 
&lt;p&gt;Kubernetes, also known as K8s, is an open source system for managing &lt;a href=&quot;https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/&quot;&gt;containerized applications&lt;/a&gt; across multiple hosts. It provides basic mechanisms for the deployment, maintenance, and scaling of applications.&lt;/p&gt; 
&lt;p&gt;Kubernetes builds upon a decade and a half of experience at Google running production workloads at scale using a system called &lt;a href=&quot;https://research.google.com/pubs/pub43438.html?authuser=1&quot;&gt;Borg&lt;/a&gt;, combined with best-of-breed ideas and practices from the community.&lt;/p&gt; 
&lt;p&gt;Kubernetes is hosted by the Cloud Native Computing Foundation (&lt;a href=&quot;https://www.cncf.io/about&quot;&gt;CNCF&lt;/a&gt;). If your company wants to help shape the evolution of technologies that are container-packaged, dynamically scheduled, and microservices-oriented, consider joining the CNCF. For details about who&#39;s involved and how Kubernetes plays a role, read the CNCF &lt;a href=&quot;https://cncf.io/news/announcement/2015/07/new-cloud-native-computing-foundation-drive-alignment-among-container&quot;&gt;announcement&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;To start using K8s&lt;/h2&gt; 
&lt;p&gt;See our documentation on &lt;a href=&quot;https://kubernetes.io&quot;&gt;kubernetes.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Take a free course on &lt;a href=&quot;https://www.udacity.com/course/scalable-microservices-with-kubernetes--ud615&quot;&gt;Scalable Microservices with Kubernetes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use Kubernetes code as a library in other applications, see the &lt;a href=&quot;https://git.k8s.io/kubernetes/staging/README.md&quot;&gt;list of published components&lt;/a&gt;. Use of the &lt;code&gt;k8s.io/kubernetes&lt;/code&gt; module or &lt;code&gt;k8s.io/kubernetes/...&lt;/code&gt; packages as libraries is not supported.&lt;/p&gt; 
&lt;h2&gt;To start developing K8s&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://git.k8s.io/community&quot;&gt;community repository&lt;/a&gt; hosts all information about building Kubernetes from source, how to contribute code and documentation, who to contact about what, etc.&lt;/p&gt; 
&lt;p&gt;If you want to build Kubernetes right away there are two options:&lt;/p&gt; 
&lt;h5&gt;You have a working &lt;a href=&quot;https://go.dev/doc/install&quot;&gt;Go environment&lt;/a&gt;.&lt;/h5&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/kubernetes/kubernetes
cd kubernetes
make
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;You have a working &lt;a href=&quot;https://docs.docker.com/engine&quot;&gt;Docker environment&lt;/a&gt;.&lt;/h5&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/kubernetes/kubernetes
cd kubernetes
make quick-release
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the full story, head over to the &lt;a href=&quot;https://git.k8s.io/community/contributors/devel#readme&quot;&gt;developer&#39;s documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you need support, start with the &lt;a href=&quot;https://kubernetes.io/docs/tasks/debug/&quot;&gt;troubleshooting guide&lt;/a&gt;, and work your way through the process that we&#39;ve outlined.&lt;/p&gt; 
&lt;p&gt;That said, if you have questions, reach out to us &lt;a href=&quot;https://git.k8s.io/community/communication&quot;&gt;one way or another&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community Meetings&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.kubernetes.dev/resources/calendar/&quot;&gt;Calendar&lt;/a&gt; has the list of all the meetings in the Kubernetes community in a single location.&lt;/p&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://kubernetes.io/case-studies/&quot;&gt;User Case Studies&lt;/a&gt; website has real-world use cases of organizations across industries that are deploying/migrating to Kubernetes.&lt;/p&gt; 
&lt;h2&gt;Governance&lt;/h2&gt; 
&lt;p&gt;Kubernetes project is governed by a framework of principles, values, policies and processes to help our community and constituents towards our shared goals.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/kubernetes/community/raw/master/governance.md&quot;&gt;Kubernetes Community&lt;/a&gt; is the launching point for learning about how we organize ourselves.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/kubernetes/steering&quot;&gt;Kubernetes Steering community repo&lt;/a&gt; is used by the Kubernetes Steering Committee, which oversees governance of the Kubernetes project.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/kubernetes/enhancements&quot;&gt;Kubernetes Enhancements repo&lt;/a&gt; provides information about Kubernetes releases, as well as feature tracking and backlogs.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ollama/ollama</title>
      <link>https://github.com/ollama/ollama</link>
      <description>&lt;p&gt;Get up and running with Llama 3.3, DeepSeek-R1, Phi-4, Gemma 3, and other large language models.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt;
  &amp;nbsp; 
 &lt;a href=&quot;https://ollama.com&quot;&gt; &lt;img alt=&quot;ollama&quot; height=&quot;200px&quot; src=&quot;https://github.com/ollama/ollama/assets/3325447/0d0b44e2-8f4a-4e99-9b52-a5c1c741c8f7&quot;&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h1&gt;Ollama&lt;/h1&gt; 
&lt;p&gt;Get up and running with large language models.&lt;/p&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://ollama.com/download/Ollama-darwin.zip&quot;&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://ollama.com/download/OllamaSetup.exe&quot;&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;curl -fsSL https://ollama.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ollama/ollama/raw/main/docs/linux.md&quot;&gt;Manual install instructions&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;The official &lt;a href=&quot;https://hub.docker.com/r/ollama/ollama&quot;&gt;Ollama Docker image&lt;/a&gt; &lt;code&gt;ollama/ollama&lt;/code&gt; is available on Docker Hub.&lt;/p&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ollama/ollama-python&quot;&gt;ollama-python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ollama/ollama-js&quot;&gt;ollama-js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/ollama&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reddit.com/r/ollama&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;To run and chat with &lt;a href=&quot;https://ollama.com/library/llama3.2&quot;&gt;Llama 3.2&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama run llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Model library&lt;/h2&gt; 
&lt;p&gt;Ollama supports a list of models available on &lt;a href=&quot;https://ollama.com/library&quot; title=&quot;ollama model library&quot;&gt;ollama.com/library&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Here are some example models that can be downloaded:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Model&lt;/th&gt; 
   &lt;th&gt;Parameters&lt;/th&gt; 
   &lt;th&gt;Size&lt;/th&gt; 
   &lt;th&gt;Download&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;1B&lt;/td&gt; 
   &lt;td&gt;815MB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:1b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;4B&lt;/td&gt; 
   &lt;td&gt;3.3GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;12B&lt;/td&gt; 
   &lt;td&gt;8.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:12b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;27B&lt;/td&gt; 
   &lt;td&gt;17GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:27b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QwQ&lt;/td&gt; 
   &lt;td&gt;32B&lt;/td&gt; 
   &lt;td&gt;20GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run qwq&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.7GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run deepseek-r1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;671B&lt;/td&gt; 
   &lt;td&gt;404GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run deepseek-r1:671b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.3&lt;/td&gt; 
   &lt;td&gt;70B&lt;/td&gt; 
   &lt;td&gt;43GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2&lt;/td&gt; 
   &lt;td&gt;3B&lt;/td&gt; 
   &lt;td&gt;2.0GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2&lt;/td&gt; 
   &lt;td&gt;1B&lt;/td&gt; 
   &lt;td&gt;1.3GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2:1b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
   &lt;td&gt;11B&lt;/td&gt; 
   &lt;td&gt;7.9GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2-vision&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
   &lt;td&gt;90B&lt;/td&gt; 
   &lt;td&gt;55GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2-vision:90b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.1&lt;/td&gt; 
   &lt;td&gt;8B&lt;/td&gt; 
   &lt;td&gt;4.7GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.1&lt;/td&gt; 
   &lt;td&gt;405B&lt;/td&gt; 
   &lt;td&gt;231GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.1:405b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Phi 4&lt;/td&gt; 
   &lt;td&gt;14B&lt;/td&gt; 
   &lt;td&gt;9.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run phi4&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Phi 4 Mini&lt;/td&gt; 
   &lt;td&gt;3.8B&lt;/td&gt; 
   &lt;td&gt;2.5GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run phi4-mini&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mistral&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run mistral&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Moondream 2&lt;/td&gt; 
   &lt;td&gt;1.4B&lt;/td&gt; 
   &lt;td&gt;829MB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run moondream&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Neural Chat&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run neural-chat&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Starling&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run starling-lm&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Code Llama&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;3.8GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run codellama&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 2 Uncensored&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;3.8GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama2-uncensored&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LLaVA&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.5GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llava&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Granite-3.2&lt;/td&gt; 
   &lt;td&gt;8B&lt;/td&gt; 
   &lt;td&gt;4.9GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run granite3.2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You should have at least 8 GB of RAM available to run the 7B models, 16 GB to run the 13B models, and 32 GB to run the 33B models.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Customize a model&lt;/h2&gt; 
&lt;h3&gt;Import from GGUF&lt;/h3&gt; 
&lt;p&gt;Ollama supports importing GGUF models in the Modelfile:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create a file named &lt;code&gt;Modelfile&lt;/code&gt;, with a &lt;code&gt;FROM&lt;/code&gt; instruction with the local filepath to the model you want to import.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;FROM ./vicuna-33b.Q4_0.gguf
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create the model in Ollama&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama create example -f Modelfile
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the model&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama run example
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Import from Safetensors&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/ollama/ollama/main/docs/import.md&quot;&gt;guide&lt;/a&gt; on importing models for more information.&lt;/p&gt; 
&lt;h3&gt;Customize a prompt&lt;/h3&gt; 
&lt;p&gt;Models from the Ollama library can be customized with a prompt. For example, to customize the &lt;code&gt;llama3.2&lt;/code&gt; model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama pull llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a &lt;code&gt;Modelfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM llama3.2

# set the temperature to 1 [higher is more creative, lower is more coherent]
PARAMETER temperature 1

# set the system message
SYSTEM &quot;&quot;&quot;
You are Mario from Super Mario Bros. Answer as Mario, the assistant, only.
&quot;&quot;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create and run the model:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ollama create mario -f ./Modelfile
ollama run mario
&amp;gt;&amp;gt;&amp;gt; hi
Hello! It&#39;s your friend Mario.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on working with a Modelfile, see the &lt;a href=&quot;https://raw.githubusercontent.com/ollama/ollama/main/docs/modelfile.md&quot;&gt;Modelfile&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;CLI Reference&lt;/h2&gt; 
&lt;h3&gt;Create a model&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ollama create&lt;/code&gt; is used to create a model from a Modelfile.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama create mymodel -f ./Modelfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pull a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama pull llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This command can also be used to update a local model. Only the diff will be pulled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Remove a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama rm llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Copy a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama cp llama3.2 my-model
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multiline input&lt;/h3&gt; 
&lt;p&gt;For multiline input, you can wrap text with &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &quot;&quot;&quot;Hello,
... world!
... &quot;&quot;&quot;
I&#39;m a basic program that prints the famous &quot;Hello, world!&quot; message to the console.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multimodal models&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ollama run llava &quot;What&#39;s in this image? /Users/jmorgan/Desktop/smile.png&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: The image features a yellow smiley face, which is likely the central focus of the picture.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Pass the prompt as an argument&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama run llama3.2 &quot;Summarize this file: $(cat README.md)&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: Ollama is a lightweight, extensible framework for building and running language models on the local machine. It provides a simple API for creating, running, and managing models, as well as a library of pre-built models that can be easily used in a variety of applications.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Show model information&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama show llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List models on your computer&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List which models are currently loaded&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama ps
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stop a model which is currently running&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama stop llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start Ollama&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ollama serve&lt;/code&gt; is used when you want to start ollama without running the desktop application.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/ollama/ollama/raw/main/docs/development.md&quot;&gt;developer guide&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Running local builds&lt;/h3&gt; 
&lt;p&gt;Next, start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;./ollama serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, in a separate shell, run a model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;./ollama run llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;REST API&lt;/h2&gt; 
&lt;p&gt;Ollama has a REST API for running and managing models.&lt;/p&gt; 
&lt;h3&gt;Generate a response&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;curl http://localhost:11434/api/generate -d &#39;{
  &quot;model&quot;: &quot;llama3.2&quot;,
  &quot;prompt&quot;:&quot;Why is the sky blue?&quot;
}&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chat with a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;curl http://localhost:11434/api/chat -d &#39;{
  &quot;model&quot;: &quot;llama3.2&quot;,
  &quot;messages&quot;: [
    { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;why is the sky blue?&quot; }
  ]
}&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/ollama/ollama/main/docs/api.md&quot;&gt;API documentation&lt;/a&gt; for all endpoints.&lt;/p&gt; 
&lt;h2&gt;Community Integrations&lt;/h2&gt; 
&lt;h3&gt;Web &amp;amp; Desktop&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/open-webui/open-webui&quot;&gt;Open WebUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aws-samples/swift-chat&quot;&gt;SwiftChat (macOS with ReactNative)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AugustDev/enchanted&quot;&gt;Enchanted (macOS native)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fmaclen/hollama&quot;&gt;Hollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ParisNeo/lollms-webui&quot;&gt;Lollms-Webui&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danny-avila/LibreChat&quot;&gt;LibreChat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bionic-gpt/bionic-gpt&quot;&gt;Bionic GPT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rtcfirefly/ollama-ui&quot;&gt;HTML UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jikkuatwork/saddle&quot;&gt;Saddle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ivanfioravanti/chatbot-ollama&quot;&gt;Chatbot UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mckaywrigley/chatbot-ui&quot;&gt;Chatbot UI v2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ollama-interface/Ollama-Gui?tab=readme-ov-file&quot;&gt;Typescript UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/richawo/minimal-llm-ui&quot;&gt;Minimalistic React UI for Ollama Models&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kevinhermawan/Ollamac&quot;&gt;Ollamac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/enricoros/big-AGI/raw/main/docs/config-local-ollama.md&quot;&gt;big-AGI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cheshire-cat-ai/core&quot;&gt;Cheshire Cat assistant framework&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/semperai/amica&quot;&gt;Amica&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BruceMacD/chatd&quot;&gt;chatd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kghandour/Ollama-SwiftUI&quot;&gt;Ollama-SwiftUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/langgenius/dify&quot;&gt;Dify.AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mindmac.app&quot;&gt;MindMac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jakobhoeg/nextjs-ollama-llm-ui&quot;&gt;NextJS Web Interface for Ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://msty.app&quot;&gt;Msty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Bin-Huang/Chatbox&quot;&gt;Chatbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tgraupmann/WinForm_Ollama_Copilot&quot;&gt;WinForm Ollama Copilot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web&quot;&gt;NextChat&lt;/a&gt; with &lt;a href=&quot;https://docs.nextchat.dev/models/ollama&quot;&gt;Get Started Doc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmo80/alpaca-webui&quot;&gt;Alpaca WebUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/enoch1118/ollamaGUI&quot;&gt;OllamaGUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/InternLM/OpenAOE&quot;&gt;OpenAOE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/leonid20000/OdinRunes&quot;&gt;Odin Runes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mrdjohnson/llm-x&quot;&gt;LLM-X&lt;/a&gt; (Progressive Web App)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Mintplex-Labs/anything-llm&quot;&gt;AnythingLLM (Docker + MacOs/Windows/Linux native app)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapidarchitect/ollama_basic_chat&quot;&gt;Ollama Basic Chat: Uses HyperDiv Reactive UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drazdra/ollama-chats&quot;&gt;Ollama-chats RPG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://intellibar.app/&quot;&gt;IntelliBar&lt;/a&gt; (AI-powered assistant for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/reid41/QA-Pilot&quot;&gt;QA-Pilot&lt;/a&gt; (Interactive chat tool that can leverage Ollama models for rapid understanding and navigation of GitHub code repositories)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sugarforever/chat-ollama&quot;&gt;ChatOllama&lt;/a&gt; (Open Source Chatbot based on Ollama with Knowledge Bases)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nagi-ovo/CRAG-Ollama-Chat&quot;&gt;CRAG Ollama Chat&lt;/a&gt; (Simple Web Search with Corrective RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/infiniflow/ragflow&quot;&gt;RAGFlow&lt;/a&gt; (Open-source Retrieval-Augmented Generation engine based on deep document understanding)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/StreamDeploy-DevRel/streamdeploy-llm-app-scaffold&quot;&gt;StreamDeploy&lt;/a&gt; (LLM Application Scaffold)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swuecho/chat&quot;&gt;chat&lt;/a&gt; (chat web app for teams)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lobehub/lobe-chat&quot;&gt;Lobe Chat&lt;/a&gt; with &lt;a href=&quot;https://lobehub.com/docs/self-hosting/examples/ollama&quot;&gt;Integrating Doc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/datvodinh/rag-chatbot.git&quot;&gt;Ollama RAG Chatbot&lt;/a&gt; (Local Chat with multiple PDFs using Ollama and RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nurgo-software.com/products/brainsoup&quot;&gt;BrainSoup&lt;/a&gt; (Flexible native client with RAG &amp;amp; multi-agent automation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Renset/macai&quot;&gt;macai&lt;/a&gt; (macOS client for Ollama, ChatGPT, and other compatible API back-ends)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/josStorer/RWKV-Runner&quot;&gt;RWKV-Runner&lt;/a&gt; (RWKV offline LLM deployment tool, also usable as a client for ChatGPT and Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dezoito/ollama-grid-search&quot;&gt;Ollama Grid Search&lt;/a&gt; (app to evaluate and compare models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Otacon/olpaka&quot;&gt;Olpaka&lt;/a&gt; (User-friendly Flutter Web App for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CrazyNeil/OllamaSpring&quot;&gt;OllamaSpring&lt;/a&gt; (Ollama Client for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kartikm7/llocal&quot;&gt;LLocal.in&lt;/a&gt; (Easy to use Electron Desktop Client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dcSpark/shinkai-apps&quot;&gt;Shinkai Desktop&lt;/a&gt; (Two click install Local AI using Ollama + Files + RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zeyoyt/ailama&quot;&gt;AiLama&lt;/a&gt; (A Discord User App that allows you to interact with Ollama anywhere in discord )&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapidarchitect/ollama_mesop/&quot;&gt;Ollama with Google Mesop&lt;/a&gt; (Mesop Chat Client implementation with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SciPhi-AI/R2R&quot;&gt;R2R&lt;/a&gt; (Open-source RAG engine)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/elearningshow/ollama-kis&quot;&gt;Ollama-Kis&lt;/a&gt; (A simple easy to use GUI with sample custom LLM for Drivers Education)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opengpa.org&quot;&gt;OpenGPA&lt;/a&gt; (Open-source offline-first Enterprise Agentic Application)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mateuszmigas/painting-droid&quot;&gt;Painting Droid&lt;/a&gt; (Painting app with AI integrations)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kerlig.com/&quot;&gt;Kerlig AI&lt;/a&gt; (AI writing assistant for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MindWorkAI/AI-Studio&quot;&gt;AI Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gyopak/sidellama&quot;&gt;Sidellama&lt;/a&gt; (browser-based LLM client)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trypromptly/LLMStack&quot;&gt;LLMStack&lt;/a&gt; (No-code multi-agent framework to build LLM agents and workflows)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boltai.com&quot;&gt;BoltAI for Mac&lt;/a&gt; (AI Chat Client for Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/av/harbor&quot;&gt;Harbor&lt;/a&gt; (Containerized LLM Toolkit with Ollama as default backend)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/szczyglis-dev/py-gpt&quot;&gt;PyGPT&lt;/a&gt; (AI desktop assistant for Linux, Windows and Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Jeffser/Alpaca&quot;&gt;Alpaca&lt;/a&gt; (An Ollama client application for linux and macos made with GTK4 and Adwaita)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Significant-Gravitas/AutoGPT/raw/master/docs/content/platform/ollama.md&quot;&gt;AutoGPT&lt;/a&gt; (AutoGPT Ollama integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jonathanhecl.com/go-crew/&quot;&gt;Go-CREW&lt;/a&gt; (Powerful Offline RAG in Golang)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/openvmp/partcad/&quot;&gt;PartCAD&lt;/a&gt; (CAD model generation with OpenSCAD and CadQuery)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ollama4j/ollama4j-web-ui&quot;&gt;Ollama4j Web UI&lt;/a&gt; - Java-based Web UI for Ollama built with Vaadin, Spring Boot and Ollama4j&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kspviswa/pyOllaMx&quot;&gt;PyOllaMx&lt;/a&gt; - macOS application capable of chatting with both Ollama and Apple MLX models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saoudrizwan/claude-dev&quot;&gt;Claude Dev&lt;/a&gt; - VSCode extension for multi-file/whole-repo coding&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kangfenmao/cherry-studio&quot;&gt;Cherry Studio&lt;/a&gt; (Desktop client with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/1runeberg/confichat&quot;&gt;ConfiChat&lt;/a&gt; (Lightweight, standalone, multi-platform, and privacy focused LLM chat interface with optional encryption)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nickthecook/archyve&quot;&gt;Archyve&lt;/a&gt; (RAG-enabling document library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapidarchitect/ollama-crew-mesop&quot;&gt;crewAI with Mesop&lt;/a&gt; (Mesop Web Interface to run crewAI with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chyok/ollama-gui&quot;&gt;Tkinter-based client&lt;/a&gt; (Python tkinter-based Client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trendy-design/llmchat&quot;&gt;LLMChat&lt;/a&gt; (Privacy focused, 100% local, intuitive all-in-one chat interface)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Leon-Sander/Local-Multimodal-AI-Chat&quot;&gt;Local Multimodal AI Chat&lt;/a&gt; (Ollama-based LLM Chat with support for multiple features, including PDF RAG, voice chat, image-based interactions, and integration with OpenAI.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xark-argo/argo&quot;&gt;ARGO&lt;/a&gt; (Locally download and run Ollama and Huggingface models with RAG on Mac/Windows/Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EliasPereirah/OrionChat&quot;&gt;OrionChat&lt;/a&gt; - OrionChat is a web interface for chatting with different AI providers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bklieger-groq/g1&quot;&gt;G1&lt;/a&gt; (Prototype of using prompting strategies to improve the LLM&#39;s reasoning through o1-like reasoning chains.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lemonit-eric-mao/ollama-web-management&quot;&gt;Web management&lt;/a&gt; (Web management page)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/promptery/promptery&quot;&gt;Promptery&lt;/a&gt; (desktop client for Ollama.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JHubi1/ollama-app&quot;&gt;Ollama App&lt;/a&gt; (Modern and easy-to-use multi-platform client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/annilq/chat-ollama&quot;&gt;chat-ollama&lt;/a&gt; (a React Native client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tcsenpai/spacellama&quot;&gt;SpaceLlama&lt;/a&gt; (Firefox and Chrome extension to quickly summarize web pages with ollama in a sidebar)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tcsenpai/youlama&quot;&gt;YouLama&lt;/a&gt; (Webapp to quickly summarize any YouTube video, supporting Invidious as well)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tcsenpai/dualmind&quot;&gt;DualMind&lt;/a&gt; (Experimental app allowing two models to talk to each other in the terminal or in a web interface)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/h1ddenpr0cess20/ollamarama-matrix&quot;&gt;ollamarama-matrix&lt;/a&gt; (Ollama chatbot for the Matrix chat protocol)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anan1213095357/ollama-chat-app&quot;&gt;ollama-chat-app&lt;/a&gt; (Flutter-based chat app)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.perfectmemory.ai/&quot;&gt;Perfect Memory AI&lt;/a&gt; (Productivity AI assists personalized by what you have seen on your screen, heard and said in the meetings)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hexastack/hexabot&quot;&gt;Hexabot&lt;/a&gt; (A conversational AI builder)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapidarchitect/reddit_analyzer&quot;&gt;Reddit Rate&lt;/a&gt; (Search and Rate Reddit topics with a weighted summation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adarshM84/OpenTalkGpt&quot;&gt;OpenTalkGpt&lt;/a&gt; (Chrome Extension to manage open-source models supported by Ollama, create custom models, and chat with models from a user-friendly UI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vinhnx/vt.ai&quot;&gt;VT&lt;/a&gt; (A minimal multimodal AI chat app, with dynamic conversation routing. Supports local models via Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nosia-ai/nosia&quot;&gt;Nosia&lt;/a&gt; (Easy to install and use RAG platform based on Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nbonamy/witsy&quot;&gt;Witsy&lt;/a&gt; (An AI Desktop application available for Mac/Windows/Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/US-Artificial-Intelligence/abbey&quot;&gt;Abbey&lt;/a&gt; (A configurable AI interface server with notebooks, document storage, and YouTube support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dmayboroda/minima&quot;&gt;Minima&lt;/a&gt; (RAG with on-premises or fully local workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AidfulAI/aidful-ollama-model-delete&quot;&gt;aidful-ollama-model-delete&lt;/a&gt; (User interface for simplified model cleanup)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ItzCrazyKns/Perplexica&quot;&gt;Perplexica&lt;/a&gt; (An AI-powered search engine &amp;amp; an open-source alternative to Perplexity AI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oslook/ollama-webui&quot;&gt;Ollama Chat WebUI for Docker &lt;/a&gt; (Support for local docker deployment, lightweight ollama webui)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/ai-tooklit/ollama-docs&quot;&gt;AI Toolkit for Visual Studio Code&lt;/a&gt; (Microsoft-official VSCode extension to chat, test, evaluate models with Ollama support, and use them in your AI applications.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anilkay/MinimalNextOllamaChat&quot;&gt;MinimalNextOllamaChat&lt;/a&gt; (Minimal Web UI for Chat and Model Control)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TilmanGriesel/chipper&quot;&gt;Chipper&lt;/a&gt; AI interface for tinkerers (Ollama, Haystack RAG, Python)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CosmicEventHorizon/ChibiChat&quot;&gt;ChibiChat&lt;/a&gt; (Kotlin-based Android app to chat with Ollama and Koboldcpp API endpoints)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qusaismael/localllm&quot;&gt;LocalLLM&lt;/a&gt; (Minimal Web-App to run ollama models on it with a GUI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/buiducnhat/ollamazing&quot;&gt;Ollamazing&lt;/a&gt; (Web extension to run Ollama models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/benhaotang/OpenDeepResearcher-via-searxng&quot;&gt;OpenDeepResearcher-via-searxng&lt;/a&gt; (A Deep Research equivent endpoint with Ollama support for running locally)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AIDotNet/AntSK&quot;&gt;AntSK&lt;/a&gt; (Out-of-the-box &amp;amp; Adaptable RAG Chatbot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/1Panel-dev/MaxKB/&quot;&gt;MaxKB&lt;/a&gt; (Ready-to-use &amp;amp; flexible RAG Chatbot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielekp/yla&quot;&gt;yla&lt;/a&gt; (Web interface to freely interact with your customized models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RockChinQ/LangBot&quot;&gt;LangBot&lt;/a&gt; (LLM-based instant messaging bots platform, with Agents, RAG features, supports multiple platforms)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/1Panel-dev/1Panel/&quot;&gt;1Panel&lt;/a&gt; (Web-based Linux Server Management Tool)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Soulter/AstrBot/&quot;&gt;AstrBot&lt;/a&gt; (User-friendly LLM-based multi-platform chatbot with a WebUI, supporting RAG, LLM agents, and plugins integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ibrahimcetin/reins&quot;&gt;Reins&lt;/a&gt; (Easily tweak parameters, customize system prompts per chat, and enhance your AI experiments with reasoning model support.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/run/docs/tutorials/gpu-gemma2-with-ollama&quot;&gt;Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fly.io/docs/python/do-more/add-ollama/&quot;&gt;Fly.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.koyeb.com/deploy/ollama&quot;&gt;Koyeb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Terminal&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ggozad/oterm&quot;&gt;oterm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/s-kostyaev/ellama&quot;&gt;Ellama Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zweifisch/ollama&quot;&gt;Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paradoxical-dev/neollama&quot;&gt;neollama&lt;/a&gt; UI client for interacting with models from within Neovim&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/David-Kunz/gen.nvim&quot;&gt;gen.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nomnivore/ollama.nvim&quot;&gt;ollama.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marco-souza/ollero.nvim&quot;&gt;ollero.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gerazov/ollama-chat.nvim&quot;&gt;ollama-chat.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huynle/ogpt.nvim&quot;&gt;ogpt.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/karthink/gptel&quot;&gt;gptel Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dustinblackman/oatmeal&quot;&gt;Oatmeal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pgibler/cmdh&quot;&gt;cmdh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/npahlfer/ooo&quot;&gt;ooo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/reid41/shell-pilot&quot;&gt;shell-pilot&lt;/a&gt;(Interact with models via pure shell scripts on Linux or macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pythops/tenere&quot;&gt;tenere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/taketwo/llm-ollama&quot;&gt;llm-ollama&lt;/a&gt; for &lt;a href=&quot;https://llm.datasette.io/en/stable/&quot;&gt;Datasette&#39;s LLM CLI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anaisbetts/typechat-cli&quot;&gt;typechat-cli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/djcopley/ShellOracle&quot;&gt;ShellOracle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yusufcanb/tlm&quot;&gt;tlm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ericcurtin/podman-ollama&quot;&gt;podman-ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sammcj/gollama&quot;&gt;gollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paulrobello/parllama&quot;&gt;ParLlama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cognitivetech/ollama-ebook-summary/&quot;&gt;Ollama eBook Summary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapidarchitect/ollama_moe&quot;&gt;Ollama Mixture of Experts (MOE) in 50 lines of code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pepo-ec/vim-intelligence-bridge&quot;&gt;vim-intelligence-bridge&lt;/a&gt; Simple interaction of &quot;Ollama&quot; with the Vim editor&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://x-cmd.com/mod/ollama&quot;&gt;x-cmd ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drunkwcodes/bb7&quot;&gt;bb7&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcusziade/Swollama&quot;&gt;SwollamaCLI&lt;/a&gt; bundled with the Swollama Swift package. &lt;a href=&quot;https://github.com/marcusziade/Swollama?tab=readme-ov-file#cli-usage&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sigoden/aichat&quot;&gt;aichat&lt;/a&gt; All-in-one LLM CLI tool featuring Shell Assistant, Chat-REPL, RAG, AI tools &amp;amp; agents, with access to OpenAI, Claude, Gemini, Ollama, Groq, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rrg92/powershai&quot;&gt;PowershAI&lt;/a&gt; PowerShell module that brings AI to terminal on Windows, including support for Ollama&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xyproto/orbiton&quot;&gt;orbiton&lt;/a&gt; Configuration-free text editor and IDE with support for tab completion with Ollama.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Apple Vision Pro&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aws-samples/swift-chat&quot;&gt;SwiftChat&lt;/a&gt; (Cross-platform AI chat app supporting Apple Vision Pro via &quot;Designed for iPad&quot;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AugustDev/enchanted&quot;&gt;Enchanted&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/timescale/pgai&quot;&gt;pgai&lt;/a&gt; - PostgreSQL as a vector database (Create and search embeddings from Ollama models using pgvector) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/timescale/pgai/raw/main/docs/vectorizer-quick-start.md&quot;&gt;Get started guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mindsdb/mindsdb/raw/staging/mindsdb/integrations/handlers/ollama_handler/README.md&quot;&gt;MindsDB&lt;/a&gt; (Connects Ollama models with nearly 200 data platforms and apps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/philippgille/chromem-go/raw/v0.5.0/embed_ollama.go&quot;&gt;chromem-go&lt;/a&gt; with &lt;a href=&quot;https://github.com/philippgille/chromem-go/tree/v0.5.0/examples/rag-wikipedia-ollama&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dbkangaroo/kangaroo&quot;&gt;Kangaroo&lt;/a&gt; (AI-powered SQL client and admin tool for popular databases)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Package managers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://archlinux.org/packages/extra/x86_64/ollama/&quot;&gt;Pacman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gentoo/guru/tree/master/app-misc/ollama&quot;&gt;Gentoo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://formulae.brew.sh/formula/ollama&quot;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://artifacthub.io/packages/helm/ollama-helm/ollama&quot;&gt;Helm Chart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codeberg.org/tusharhero/ollama-guix&quot;&gt;Guix channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://search.nixos.org/packages?show=ollama&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=ollama&quot;&gt;Nix package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flox.dev/blog/ollama-part-one&quot;&gt;Flox&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://python.langchain.com/docs/integrations/llms/ollama&quot;&gt;LangChain&lt;/a&gt; and &lt;a href=&quot;https://js.langchain.com/docs/integrations/chat/ollama/&quot;&gt;LangChain.js&lt;/a&gt; with &lt;a href=&quot;https://js.langchain.com/docs/tutorials/local_rag/&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://firebase.google.com/docs/genkit/plugins/ollama&quot;&gt;Firebase Genkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/crewAIInc/crewAI&quot;&gt;crewAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://remembersoftwares.github.io/yacana/&quot;&gt;Yacana&lt;/a&gt; (User-friendly multi-agent framework for brainstorming and executing predetermined flows with built-in tool integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai&quot;&gt;Spring AI&lt;/a&gt; with &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/chat/ollama-chat.html&quot;&gt;reference&lt;/a&gt; and &lt;a href=&quot;https://github.com/tzolov/ollama-tools&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tmc/langchaingo/&quot;&gt;LangChainGo&lt;/a&gt; with &lt;a href=&quot;https://github.com/tmc/langchaingo/tree/main/examples/ollama-completion-example&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/langchain4j/langchain4j&quot;&gt;LangChain4j&lt;/a&gt; with &lt;a href=&quot;https://github.com/langchain4j/langchain4j-examples/tree/main/ollama-examples/src/main/java&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Abraxas-365/langchain-rust&quot;&gt;LangChainRust&lt;/a&gt; with &lt;a href=&quot;https://github.com/Abraxas-365/langchain-rust/raw/main/examples/llm_ollama.rs&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tryAGI/LangChain&quot;&gt;LangChain for .NET&lt;/a&gt; with &lt;a href=&quot;https://github.com/tryAGI/LangChain/raw/main/examples/LangChain.Samples.OpenAI/Program.cs&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/theodo-group/LLPhant?tab=readme-ov-file#ollama&quot;&gt;LLPhant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.llamaindex.ai/en/stable/examples/llm/ollama/&quot;&gt;LlamaIndex&lt;/a&gt; and &lt;a href=&quot;https://ts.llamaindex.ai/modules/llms/available_llms/ollama&quot;&gt;LlamaIndexTS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BerriAI/litellm&quot;&gt;LiteLLM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/presbrey/ollamafarm&quot;&gt;OllamaFarm for Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/awaescher/OllamaSharp&quot;&gt;OllamaSharp for .NET&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gbaptista/ollama-ai&quot;&gt;Ollama for Ruby&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pepperoni21/ollama-rs&quot;&gt;Ollama-rs for Rust&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jmont-dev/ollama-hpp&quot;&gt;Ollama-hpp for C++&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ollama4j/ollama4j&quot;&gt;Ollama4j for Java&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://modelfusion.dev/integration/model-provider/ollama&quot;&gt;ModelFusion Typescript Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kevinhermawan/OllamaKit&quot;&gt;OllamaKit for Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/breitburg/dart-ollama&quot;&gt;Ollama for Dart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cloudstudio/ollama-laravel&quot;&gt;Ollama for Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davidmigloz/langchain_dart&quot;&gt;LangChainDart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/tree/main/python/semantic_kernel/connectors/ai/ollama&quot;&gt;Semantic Kernel - Python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/deepset-ai/haystack-integrations/raw/main/integrations/ollama.md&quot;&gt;Haystack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brainlid/langchain&quot;&gt;Elixir LangChain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JBGruber/rollama&quot;&gt;Ollama for R - rollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hauselin/ollama-r&quot;&gt;Ollama for R - ollama-r&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lebrunel/ollama-ex&quot;&gt;Ollama-ex for Elixir&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/b-tocs/abap_btocs_ollama&quot;&gt;Ollama Connector for SAP ABAP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testcontainers.com/modules/ollama/&quot;&gt;Testcontainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://portkey.ai/docs/welcome/integration-guides/ollama&quot;&gt;Portkey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/svilupp/PromptingTools.jl&quot;&gt;PromptingTools.jl&lt;/a&gt; with an &lt;a href=&quot;https://svilupp.github.io/PromptingTools.jl/dev/examples/working_with_ollama&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Project-Llama/llamascript&quot;&gt;LlamaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/emirsahin1/llm-axe&quot;&gt;llm-axe&lt;/a&gt; (Python Toolkit for Building LLM Powered Apps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.gollm.co/examples/ollama-example&quot;&gt;Gollm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonathanhecl/gollama&quot;&gt;Gollama for Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xyproto/ollamaclient&quot;&gt;Ollamaclient for Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/tozd/go/fun&quot;&gt;High-level function abstraction in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ArdaGnsrn/ollama-php&quot;&gt;Ollama PHP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/agents-flex/agents-flex&quot;&gt;Agents-Flex for Java&lt;/a&gt; with &lt;a href=&quot;https://github.com/agents-flex/agents-flex/tree/main/agents-flex-llm/agents-flex-llm-ollama/src/test/java/com/agentsflex/llm/ollama&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/parakeet-nest/parakeet&quot;&gt;Parakeet&lt;/a&gt; is a GoLang library, made to simplify the development of small generative AI applications with Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andygill/haverscript&quot;&gt;Haverscript&lt;/a&gt; with &lt;a href=&quot;https://github.com/andygill/haverscript/tree/main/examples&quot;&gt;examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattt/ollama-swift&quot;&gt;Ollama for Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcusziade/Swollama&quot;&gt;Swollama for Swift&lt;/a&gt; with &lt;a href=&quot;https://marcusziade.github.io/Swollama/documentation/swollama/&quot;&gt;DocC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/prasad89/golamify&quot;&gt;GoLamify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tusharad/ollama-haskell&quot;&gt;Ollama for Haskell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nbonamy/multi-llm-ts&quot;&gt;multi-llm-ts&lt;/a&gt; (A Typescript/JavaScript library allowing access to different LLM in unified API)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lofcz/llmtornado&quot;&gt;LlmTornado&lt;/a&gt; (C# library providing a unified interface for major FOSS &amp;amp; Commercial inference APIs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dravenk/ollama-zig&quot;&gt;Ollama for Zig&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lunary-ai/abso&quot;&gt;Abso&lt;/a&gt; (OpenAI-compatible TypeScript SDK for any LLM provider)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/goodreasonai/nichey&quot;&gt;Nichey&lt;/a&gt; is a Python package for generating custom wikis for your research topic&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mobile&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aws-samples/swift-chat&quot;&gt;SwiftChat&lt;/a&gt; (Lightning-fast Cross-platform AI chat app with native UI for Android, iOS and iPad)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AugustDev/enchanted&quot;&gt;Enchanted&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Mobile-Artificial-Intelligence/maid&quot;&gt;Maid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JHubi1/ollama-app&quot;&gt;Ollama App&lt;/a&gt; (Modern and easy-to-use multi-platform client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/1runeberg/confichat&quot;&gt;ConfiChat&lt;/a&gt; (Lightweight, standalone, multi-platform, and privacy focused LLM chat interface with optional encryption)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sunshine0523/OllamaServer&quot;&gt;Ollama Android Chat&lt;/a&gt; (No need for Termux, start the Ollama service with one click on an Android device)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ibrahimcetin/reins&quot;&gt;Reins&lt;/a&gt; (Easily tweak parameters, customize system prompts per chat, and enhance your AI experiments with reasoning model support.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions &amp;amp; Plugins&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MassimilianoPasquini97/raycast_ollama&quot;&gt;Raycast extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mxyng/discollama&quot;&gt;Discollama&lt;/a&gt; (Discord bot inside the Ollama discord channel)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/continuedev/continue&quot;&gt;Continue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thewh1teagle/vibe&quot;&gt;Vibe&lt;/a&gt; (Transcribe and analyze meetings with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hinterdupfinger/obsidian-ollama&quot;&gt;Obsidian Ollama plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/omagdy7/ollama-logseq&quot;&gt;Logseq Ollama plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andersrex/notesollama&quot;&gt;NotesOllama&lt;/a&gt; (Apple Notes Ollama plugin)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/samalba/dagger-chatbot&quot;&gt;Dagger Chatbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mekb-turtle/discord-ai-bot&quot;&gt;Discord AI Bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruecat/ollama-telegram&quot;&gt;Ollama Telegram Bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ej52/hass-ollama-conversation&quot;&gt;Hass Ollama Conversation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abrenneke/rivet-plugin-ollama&quot;&gt;Rivet plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/longy2k/obsidian-bmo-chatbot&quot;&gt;Obsidian BMO Chatbot plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/herval/cliobot&quot;&gt;Cliobot&lt;/a&gt; (Telegram bot with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/logancyang/obsidian-copilot&quot;&gt;Copilot for Obsidian plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pfrankov/obsidian-local-gpt&quot;&gt;Obsidian Local GPT plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openinterpreter.com/language-model-setup/local-models/ollama&quot;&gt;Open Interpreter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ex3ndr/llama-coder&quot;&gt;Llama Coder&lt;/a&gt; (Copilot alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bernardo-bruning/ollama-copilot&quot;&gt;Ollama Copilot&lt;/a&gt; (Proxy that allows you to use ollama as a copilot like Github copilot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rjmacarthy/twinny&quot;&gt;twinny&lt;/a&gt; (Copilot and Copilot chat alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RussellCanfield/wingman-ai&quot;&gt;Wingman-AI&lt;/a&gt; (Copilot code and chat alternative using Ollama and Hugging Face)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/n4ze3m/page-assist&quot;&gt;Page Assist&lt;/a&gt; (Chrome Extension)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/imoize/plasmoid-ollamacontrol&quot;&gt;Plasmoid Ollama Control&lt;/a&gt; (KDE Plasma extension that allows you to quickly manage/control Ollama model)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tusharhero/aitelegrambot&quot;&gt;AI Telegram Bot&lt;/a&gt; (Telegram bot using Ollama in backend)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yaroslavyaroslav/OpenAI-sublime-text&quot;&gt;AI ST Completion&lt;/a&gt; (Sublime Text 4 AI assistant plugin with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kevinthedang/discord-ollama&quot;&gt;Discord-Ollama Chat Bot&lt;/a&gt; (Generalized TypeScript Discord Bot w/ Tuning Documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/josStorer/chatGPTBox&quot;&gt;ChatGPTBox: All in one browser extension&lt;/a&gt; with &lt;a href=&quot;https://github.com/josStorer/chatGPTBox/issues/616#issuecomment-1975186467&quot;&gt;Integrating Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapmd73/Companion&quot;&gt;Discord AI chat/moderation bot&lt;/a&gt; Chat/moderation bot written in python. Uses Ollama to create personalities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nischalj10/headless-ollama&quot;&gt;Headless Ollama&lt;/a&gt; (Scripts to automatically install ollama client &amp;amp; models on any OS for apps that depends on ollama server)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xuyangbocn/terraform-aws-self-host-llm&quot;&gt;Terraform AWS Ollama &amp;amp; Open WebUI&lt;/a&gt; (A Terraform module to deploy on AWS a ready-to-use Ollama service, together with its front end Open WebUI service.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jakubburkiewicz/node-red-contrib-ollama&quot;&gt;node-red-contrib-ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ivostoykov/localAI&quot;&gt;Local AI Helper&lt;/a&gt; (Chrome and Firefox extensions that enable interactions with the active tab and customisable API endpoints. Includes secure storage for user prompts.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jake83741/vnc-lm&quot;&gt;vnc-lm&lt;/a&gt; (Discord bot for messaging with LLMs through Ollama and LiteLLM. Seamlessly move between local and flagship models.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SilasMarvin/lsp-ai&quot;&gt;LSP-AI&lt;/a&gt; (Open-source language server for AI-powered functionality)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Palm1r/QodeAssist&quot;&gt;QodeAssist&lt;/a&gt; (AI-powered coding assistant plugin for Qt Creator)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ECuiDev/obsidian-quiz-generator&quot;&gt;Obsidian Quiz Generator plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/philffm/ai-summary-helper&quot;&gt;AI Summmary Helper plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/suncloudsmoon/TextCraft&quot;&gt;TextCraft&lt;/a&gt; (Copilot in Word alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zeitlings/alfred-ollama&quot;&gt;Alfred Ollama&lt;/a&gt; (Alfred Workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adarshM84/TextLLaMA&quot;&gt;TextLLaMA&lt;/a&gt; A Chrome Extension that helps you write emails, correct grammar, and translate into any language&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zyphixor/simple-discord-ai&quot;&gt;Simple-Discord-AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/innightwolfsleep/llm_telegram_bot&quot;&gt;LLM Telegram Bot&lt;/a&gt; (telegram bot, primary for RP. Oobabooga-like buttons, &lt;a href=&quot;https://github.com/AUTOMATIC1111/stable-diffusion-webui&quot;&gt;A1111&lt;/a&gt; API integration e.t.c)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sammcj/mcp-llm&quot;&gt;mcp-llm&lt;/a&gt; (MCP Server to allow LLMs to call other LLMs)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported backends&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ggerganov/llama.cpp&quot;&gt;llama.cpp&lt;/a&gt; project founded by Georgi Gerganov.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Observability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.comet.com/docs/opik/cookbook/ollama&quot;&gt;Opik&lt;/a&gt; is an open-source platform to debug, evaluate, and monitor your LLM applications, RAG systems, and agentic workflows with comprehensive tracing, automated evaluations, and production-ready dashboards. Opik supports native intergration to Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lunary.ai/docs/integrations/ollama&quot;&gt;Lunary&lt;/a&gt; is the leading open-source LLM observability platform. It provides a variety of enterprise-grade features such as real-time analytics, prompt templates management, PII masking, and comprehensive agent tracing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/openlit/openlit&quot;&gt;OpenLIT&lt;/a&gt; is an OpenTelemetry-native tool for monitoring Ollama Applications &amp;amp; GPUs using traces and metrics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.honeyhive.ai/integrations/ollama&quot;&gt;HoneyHive&lt;/a&gt; is an AI observability and evaluation platform for AI agents. Use HoneyHive to evaluate agent performance, interrogate failures, and monitor quality in production.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://langfuse.com/docs/integrations/ollama&quot;&gt;Langfuse&lt;/a&gt; is an open source LLM observability platform that enables teams to collaboratively monitor, evaluate and debug AI applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mlflow.org/docs/latest/llms/tracing/index.html#automatic-tracing&quot;&gt;MLflow Tracing&lt;/a&gt; is an open source LLM observability tool with a convenient API to log and visualize traces, making it easy to debug and evaluate GenAI applications.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>usememos/memos</title>
      <link>https://github.com/usememos/memos</link>
      <description>&lt;p&gt;An open-source, lightweight note-taking solution. The pain-less way to create your meaningful notes. Your Notes, Your Way.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Memos - Open Source, Self-hosted, Your Notes, Your Way&lt;/h1&gt; 
&lt;img align=&quot;right&quot; height=&quot;96px&quot; src=&quot;https://www.usememos.com/logo-rounded.png&quot; alt=&quot;Memos&quot;&gt; 
&lt;p&gt;An open-source, self-hosted note-taking solution designed for seamless deployment and multi-platform access. Experience effortless plain text writing with pain-free, complemented by robust Markdown syntax support for enhanced formatting.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.usememos.com&quot;&gt;Home Page&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://www.usememos.com/blog&quot;&gt;Blogs&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://www.usememos.com/docs&quot;&gt;Docs&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://demo.usememos.com/&quot;&gt;Live Demo&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt; &lt;a href=&quot;https://hub.docker.com/r/neosmemo/memos&quot;&gt;&lt;img alt=&quot;Docker pull&quot; src=&quot;https://img.shields.io/docker/pulls/neosmemo/memos.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/neosmemo/memos&quot;&gt;&lt;img alt=&quot;Docker image size&quot; src=&quot;https://img.shields.io/docker/image-size/neosmemo/memos?sort=semver&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/tfPJa4UmAv&quot;&gt;&lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/badge/discord-chat-5865f2?logo=discord&amp;amp;logoColor=f5f5f5&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://www.usememos.com/demo.png&quot; alt=&quot;demo&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy First&lt;/strong&gt; üè°: Your data, your control. All runtime data is securely stored in your local database.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create at Speed&lt;/strong&gt; ‚úçÔ∏è: Write and save content as plain text for quick access, with Markdown support for fast formatting and easy sharing.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lightweight but Powerful&lt;/strong&gt; ‚ö°: Built with Go and React.js, our app combines a compact architecture with powerful performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customizable&lt;/strong&gt; üß©: Personalize your experience by customizing the server name, icon, description, theme, and execution scripts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Open Source&lt;/strong&gt; ü¶¶: Fully open source, with all code available on GitHub for transparency and collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Free to Use&lt;/strong&gt; üí∏: Enjoy all features at no cost, no hidden fees, no subscriptions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deploy with Docker in seconds&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -d --name memos -p 5230:5230 -v ~/.memos/:/var/opt/memos neosmemo/memos:stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This command is only applicable for Unix/Linux systems. For Windows, please refer to the detailed &lt;a href=&quot;https://www.usememos.com/docs/install/container-install#docker-on-windows&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;The &lt;code&gt;~/.memos/&lt;/code&gt; directory will be used as the data directory on your local machine, while &lt;code&gt;/var/opt/memos&lt;/code&gt; is the directory of the volume in Docker and should not be modified.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Learn more about &lt;a href=&quot;https://www.usememos.com/docs/install&quot;&gt;other installation methods&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Memos is still under active development, so you may encounter bugs or breaking changes as we improve.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Contributions are what make the open-source community such an amazing place to learn, inspire, and create. We greatly appreciate any contributions you make. Thank you for being a part of our community! ü•∞&lt;/p&gt; 
&lt;p&gt;Guide to &lt;a href=&quot;https://www.usememos.com/docs/contribution/development&quot;&gt;contribution&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Star history&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://star-history.com/#usememos/memos&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=usememos/memos&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Other Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yourselfhosted/slash&quot;&gt;&lt;strong&gt;Slash&lt;/strong&gt;&lt;/a&gt;: An open source, self-hosted bookmarks and link sharing platform. Save and share your links very easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/usememos/gomark&quot;&gt;&lt;strong&gt;Gomark&lt;/strong&gt;&lt;/a&gt;: A markdown parser written in Go for Memos. And its &lt;a href=&quot;https://github.com/usememos/gomark-wasm&quot;&gt;WebAssembly version&lt;/a&gt; is also available.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>nats-io/nats-server</title>
      <link>https://github.com/nats-io/nats-server</link>
      <description>&lt;p&gt;High-Performance server for NATS.io, the cloud and edge native messaging system.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/nats-io/nats-server/main/logos/nats-horizontal-color.png&quot; width=&quot;300&quot; alt=&quot;NATS Logo&quot;&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://nats.io&quot;&gt;NATS&lt;/a&gt; is a simple, secure and performant communications system for digital systems, services and devices. NATS is part of the Cloud Native Computing Foundation (&lt;a href=&quot;https://cncf.io&quot;&gt;CNCF&lt;/a&gt;). NATS has over &lt;a href=&quot;https://nats.io/download/&quot;&gt;40 client language implementations&lt;/a&gt;, and its server can run on-premise, in the cloud, at the edge, and even on a Raspberry Pi. NATS can secure and simplify design and operation of modern distributed systems.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache2-blue.svg?sanitize=true&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.com/github/nats-io/nats-server&quot;&gt;&lt;img src=&quot;https://travis-ci.org/nats-io/nats-server.svg?branch=main&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nats-io/nats-server/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/nats-io/nats-server&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://slack.nats.io&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-on%20slack-green&quot; alt=&quot;Slack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/r/nats-io/nats-server?branch=main&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/nats-io/nats-server/badge.svg?branch=main&quot; alt=&quot;Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/_/nats&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/_/nats.svg?sanitize=true&quot; alt=&quot;Docker Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://somsubhra.github.io/github-release-stats/?username=nats-io&amp;amp;repository=nats-server&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/nats-io/nats-server/total.svg?logo=github&quot; alt=&quot;GitHub Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/1895&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/1895/badge&quot; alt=&quot;CII Best Practices&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://artifacthub.io/packages/helm/nats/nats&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/nats&quot; alt=&quot;Artifact Hub&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nats.io&quot;&gt;Official Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.nats.io&quot;&gt;Official Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.nats.io/reference/faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href=&quot;https://rethink.synadia.com/episodes/1/&quot;&gt;a video overview&lt;/a&gt; of NATS.&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href=&quot;https://www.youtube.com/watch?v=sm63oAVPqAM&quot;&gt;this video from SCALE 13x&lt;/a&gt; to learn more about its origin story and design philosophy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/nats_io&quot;&gt;Twitter&lt;/a&gt;: Follow us on Twitter!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/natsio&quot;&gt;Google Groups&lt;/a&gt;: Where you can ask questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://natsio.slack.com&quot;&gt;Slack&lt;/a&gt;: Click &lt;a href=&quot;https://slack.nats.io&quot;&gt;here&lt;/a&gt; to join. You can ask questions to our maintainers and to the rich and active community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you are interested in contributing to NATS, read about our...&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nats-io/nats-server/main/CONTRIBUTING.md&quot;&gt;Contributing guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nats-io&quot;&gt;Report issues or propose Pull Requests&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The NATS product roadmap can be found &lt;a href=&quot;https://nats.io/about/#roadmap&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;Who uses NATS? See our &lt;a href=&quot;https://nats.io/#who-uses-nats&quot;&gt;list of users&lt;/a&gt; on &lt;a href=&quot;https://nats.io&quot;&gt;https://nats.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;h3&gt;Security Audit&lt;/h3&gt; 
&lt;p&gt;A third party security audit was performed by Cure53, you can see the full report &lt;a href=&quot;https://github.com/nats-io/nats-general/raw/main/reports/Cure53_NATS_Audit.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Vulnerabilities&lt;/h3&gt; 
&lt;p&gt;If you&#39;ve found a vulnerability or a potential vulnerability in the NATS server, please let us know at &lt;a href=&quot;mailto:security@nats.io&quot;&gt;nats-security&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Unless otherwise noted, the NATS source files are distributed under the Apache Version 2.0 license found in the LICENSE file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>heroiclabs/nakama</title>
      <link>https://github.com/heroiclabs/nakama</link>
      <description>&lt;p&gt;Distributed server for social and realtime games and apps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/logo.png?raw=true&quot; alt=&quot;Nakama&quot; title=&quot;Nakama logo&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroiclabs.com/docs/nakama/getting-started/install/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/heroiclabs/nakama.svg?sanitize=true&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://forum.heroiclabs.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/forum-online-success.svg?sanitize=true&quot; alt=&quot;Forum&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/heroiclabs/nakama/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/heroiclabs/nakama.svg?sanitize=true&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Distributed server for social and realtime games and apps.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Users&lt;/strong&gt; - Register/login new users via social networks, email, or device ID.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt; - Store user records, settings, and other objects in collections.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Social&lt;/strong&gt; - Users can connect with friends, and join groups. Builtin social graph to see how users can be connected.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt; - 1-on-1, group, and global chat between users. Persist messages for chat history.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiplayer&lt;/strong&gt; - Realtime, or turn-based active and passive multiplayer.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Leaderboards&lt;/strong&gt; - Dynamic, seasonal, get top members, or members around a user. Have as many as you need.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tournaments&lt;/strong&gt; - Invite players to compete together over prizes. Link many together to create leagues.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Parties&lt;/strong&gt; - Add team play to a game. Users can form a party and communicate with party members.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Purchase Validation&lt;/strong&gt; - Validate in-app purchases and subscriptions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;In-App Notifications&lt;/strong&gt; - Send messages and notifications to connected client sockets.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Runtime code&lt;/strong&gt; - Extend the server with custom logic written in Lua, TypeScript/JavaScript, or native Go code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Matchmaker&lt;/strong&gt;, &lt;strong&gt;dashboard&lt;/strong&gt;, &lt;strong&gt;metrics&lt;/strong&gt;, and &lt;a href=&quot;https://heroiclabs.com/docs&quot;&gt;more&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Build scalable games and apps with a production ready server used by ambitious game studios and app developers &lt;a href=&quot;https://heroiclabs.com/customers/&quot;&gt;all around the world&lt;/a&gt;. Have a look at the &lt;a href=&quot;https://heroiclabs.com/docs&quot;&gt;documentation&lt;/a&gt; and join the &lt;a href=&quot;https://forum.heroiclabs.com&quot;&gt;developer community&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The server is simple to setup and run for local development and can be deployed to any cloud provider. See the &lt;a href=&quot;https://raw.githubusercontent.com/heroiclabs/nakama/master/#deployment&quot;&gt;deployment notes&lt;/a&gt; for recommendations on how to deploy the project for production. Nakama server requires CockroachDB or another Postgres wire-compatible server as it&#39;s database.&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroiclabs.com/docs/install-docker-quickstart/&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/7/79/Docker_%28container_engine%29_logo.png&quot; width=&quot;170&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The fastest way to run the server and the database is with Docker. Setup Docker and start the daemon.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Set up a &lt;a href=&quot;https://heroiclabs.com/docs/nakama/getting-started/install/docker/#running-nakama&quot;&gt;docker-compose file&lt;/a&gt; and place it in a folder for your project.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;docker-compose -f ./docker-compose.yml up&lt;/code&gt; to download container images and run the servers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For more detailed instructions have a look at our &lt;a href=&quot;https://heroiclabs.com/docs/nakama/getting-started/install/docker&quot;&gt;Docker quickstart&lt;/a&gt; guide.&lt;/p&gt; 
&lt;p&gt;Nakama Docker images are maintained on &lt;a href=&quot;https://hub.docker.com/r/heroiclabs/nakama/tags&quot;&gt;Docker Hub&lt;/a&gt; and &lt;a href=&quot;https://hub.docker.com/r/heroiclabs/nakama-prerelease/tags&quot;&gt;prerelease&lt;/a&gt; images are occasionally published for cutting edge features of the server.&lt;/p&gt; 
&lt;h3&gt;Binaries&lt;/h3&gt; 
&lt;p&gt;You can run the servers with native binaries for your platform.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the server from our &lt;a href=&quot;https://github.com/heroiclabs/nakama/releases&quot;&gt;releases&lt;/a&gt; page and the &lt;a href=&quot;https://www.cockroachlabs.com/docs/stable/install-cockroachdb.html&quot;&gt;database&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the database &lt;a href=&quot;https://www.cockroachlabs.com/docs/stable/start-a-local-cluster.html#before-you-begin&quot;&gt;instructions&lt;/a&gt; to start it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run a migration which will setup or upgrade the database schema:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;nakama migrate up --database.address &quot;root@127.0.0.1:26257&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start Nakama and connect to the database:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;nakama --database.address &quot;root@127.0.0.1:26257&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;When connected you&#39;ll see server output which describes all settings the server uses for &lt;a href=&quot;https://heroiclabs.com/docs/nakama/getting-started/configuration&quot;&gt;configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;{&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:&quot;2018-04-29T10:14:41.249+0100&quot;,&quot;msg&quot;:&quot;Node&quot;,&quot;name&quot;:&quot;nakama&quot;,&quot;version&quot;:&quot;2.0.0+7e18b09&quot;,&quot;runtime&quot;:&quot;go1.10.1&quot;,&quot;cpu&quot;:4} &lt;br&gt; {&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:&quot;2018-04-29T10:14:41.249+0100&quot;,&quot;msg&quot;:&quot;Database connections&quot;,&quot;dsns&quot;:[&quot;root@127.0.0.1:26257&quot;]} &lt;br&gt; ...&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Nakama supports a variety of protocols optimized for various gameplay or app use cases. For request/response it can use GRPC or the HTTP1.1+JSON fallback (REST). For realtime communication you can use WebSockets or rUDP.&lt;/p&gt; 
&lt;p&gt;For example with the REST API to authenticate a user account with a device identifier.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;curl &quot;127.0.0.1:7350/v2/account/authenticate/device?create=true&quot; \
  --user &quot;defaultkey:&quot; \
  --data &#39;{&quot;id&quot;: &quot;someuniqueidentifier&quot;}&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Response:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;{ &lt;br&gt; &quot;token&quot;:&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MjQ5OTU2NDksInVpZCI6Ijk5Y2Q1YzUyLWE5ODgtNGI2NC04YThhLTVmMTM5YTg4MTgxMiIsInVzbiI6InhBb1RxTUVSdFgifQ.-3_rXNYx3Q4jKuS7RkxeMWBzMNAm0vl93QxzRI8p_IY&quot; &lt;br&gt; }&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;There&#39;s a number of official &lt;a href=&quot;https://github.com/heroiclabs&quot;&gt;client libraries&lt;/a&gt; available on GitHub with &lt;a href=&quot;https://heroiclabs.com/docs&quot;&gt;documentation&lt;/a&gt;. The current platform/language support includes: .NET (in C#), Unity engine, JavaScript, Java (with Android), Unreal engine, Godot, Defold, and Swift (with iOS). If you&#39;d like to contribute a client or request one let us know.&lt;/p&gt; 
&lt;h2&gt;Nakama Console&lt;/h2&gt; 
&lt;p&gt;The server provides a web UI which teams can use to inspect various data stored through the server APIs, view lightweight service metrics, manage player data, update storage objects, restrict access to production with permission profiles, and gain visibility into realtime features like active multiplayer matches. There is no separate installation required as it is embedded as part of the single server binary.&lt;/p&gt; 
&lt;p&gt;You can navigate to it on your browser on &lt;a href=&quot;http://127.0.0.1:7351&quot;&gt;http://127.0.0.1:7351&lt;/a&gt;.&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/accounts.jpg?raw=true&quot; title=&quot;Account listing&quot; width=&quot;1024&quot; align=&quot;center&quot;&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/status.jpg?raw=true&quot; title=&quot;Status view&quot; width=&quot;125&quot; align=&quot;left&quot;&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/storage.jpg?raw=true&quot; title=&quot;Storage record view&quot; width=&quot;125&quot; align=&quot;left&quot;&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/match.jpg?raw=true&quot; title=&quot;Running matches view&quot; width=&quot;125&quot; align=&quot;left&quot;&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/users.jpg?raw=true&quot; title=&quot;Console users view&quot; width=&quot;125&quot; align=&quot;left&quot;&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/heroiclabs/nakama/master/.github/modules.jpg?raw=true&quot; title=&quot;Loaded modules view&quot; width=&quot;125&quot;&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Nakama can be deployed to any cloud provider such as Google Cloud, Azure, AWS, Digital Ocean, Heroku, or your own private cloud. You should setup and provision separate nodes for Nakama and CockroachDB.&lt;/p&gt; 
&lt;p&gt;The recommended minimum production infrastructure for CockroachDB is outlined in &lt;a href=&quot;https://www.cockroachlabs.com/docs/stable/recommended-production-settings.html#basic-hardware-recommendations&quot;&gt;these docs&lt;/a&gt; and Nakama can be run on instance types as small as &quot;g1-small&quot; on Google Cloud although we recommend a minimum of &quot;n1-standard-1&quot; in production. The specific hardware requirements will depend on what features of the server are used. Reach out to us for help and advice on what servers to run.&lt;/p&gt; 
&lt;h3&gt;Heroic Cloud&lt;/h3&gt; 
&lt;p&gt;You can support development, new features, and maintainance of the server by using the Heroic Labs&#39; &lt;a href=&quot;https://heroiclabs.com/heroic-cloud/&quot;&gt;Heroic Cloud&lt;/a&gt; for deployment. This service handles the uptime, replication, backups, logs, data upgrades, and all other tasks involved with production server environments.&lt;/p&gt; 
&lt;p&gt;Have a look at our &lt;a href=&quot;https://heroiclabs.com/heroic-cloud/&quot;&gt;Heroic Cloud&lt;/a&gt; service for more details.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;The development roadmap is managed as GitHub issues and pull requests are welcome. If you&#39;re interested to add a feature which is not mentioned on the issue tracker please open one to create a discussion or drop in and discuss it in the &lt;a href=&quot;https://forum.heroiclabs.com&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Simple Builds&lt;/h3&gt; 
&lt;p&gt;All dependencies required for a build are vendored as part of the Go project. We recommend a modern release of the Go toolchain and do not store the codebase in the old GOPATH.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the source tree.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone &quot;https://github.com/heroiclabs/nakama&quot; nakama
cd nakama
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build the project from source.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;go build -trimpath -mod=vendor
./nakama --version
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Full Source Builds&lt;/h3&gt; 
&lt;p&gt;The codebase uses Protocol Buffers, GRPC, GRPC-Gateway, and the OpenAPI spec as part of the project. These dependencies are generated as sources and committed to the repository to simplify builds for contributors.&lt;/p&gt; 
&lt;p&gt;To build the codebase and generate all sources follow these steps.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install the toolchain.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;go install \
    &quot;google.golang.org/protobuf/cmd/protoc-gen-go&quot; \
    &quot;google.golang.org/grpc/cmd/protoc-gen-go-grpc&quot; \
    &quot;github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway&quot; \
    &quot;github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you&#39;ve made changes to the embedded Console.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cd console/ui
ng serve
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Re-generate the protocol buffers, gateway code and console UI.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;env PATH=&quot;$HOME/go/bin:$PATH&quot; go generate -x ./...
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build the codebase.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;go build -trimpath -mod=vendor
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;p&gt;In order to run all the unit and integration tests run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker-compose -f ./docker-compose-tests.yml up --build --abort-on-container-exit; docker-compose -f ./docker-compose-tests.yml down -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create an isolated environment with Nakama and database instances, run all the tests, and drop the environment afterwards.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;This project is licensed under the &lt;a href=&quot;https://github.com/heroiclabs/nakama/raw/master/LICENSE&quot;&gt;Apache-2 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>grafana/alloy</title>
      <link>https://github.com/grafana/alloy</link>
      <description>&lt;p&gt;OpenTelemetry Collector distribution with programmable pipelines&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/grafana/alloy/main/docs/sources/assets/logo_alloy_light.svg#gh-dark-mode-only&quot; alt=&quot;Grafana Alloy logo&quot; height=&quot;100px&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/grafana/alloy/main/docs/sources/assets/logo_alloy_dark.svg#gh-light-mode-only&quot; alt=&quot;Grafana Alloy logo&quot; height=&quot;100px&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/grafana/alloy/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/grafana/alloy.svg?sanitize=true&quot; alt=&quot;Latest Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://grafana.com/docs/alloy/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Documentation-link-blue?logo=gitbook&quot; alt=&quot;Documentation link&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Grafana Alloy is an open source OpenTelemetry Collector distribution with built-in Prometheus pipelines and support for metrics, logs, traces, and profiles.&lt;/p&gt; 
&lt;p&gt; &lt;img src=&quot;https://raw.githubusercontent.com/grafana/alloy/main/docs/sources/assets/alloy_screenshot.png&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;What can Alloy do?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Programmable pipelines&lt;/strong&gt;: Use a rich &lt;a href=&quot;https://grafana.com/docs/alloy/latest/concepts/configuration-syntax/&quot;&gt;expression-based syntax&lt;/a&gt; for configuring powerful observability pipelines.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;OpenTelemetry Collector Distribution&lt;/strong&gt;: Alloy is a &lt;a href=&quot;https://opentelemetry.io/docs/collector/distributions/&quot;&gt;distribution&lt;/a&gt; of OpenTelemetry Collector and supports dozens of its components, alongside new components that make use of Alloy&#39;s programmable pipelines.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Big tent&lt;/strong&gt;: Alloy embraces Grafana&#39;s &quot;big tent&quot; philosophy, where Alloy can be used with other vendors or open source databases. It has components to perfectly integrate with multiple telemetry ecosystems:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://opentelemetry.io&quot;&gt;OpenTelemetry Collector&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://prometheus.io&quot;&gt;Prometheus&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/grafana/loki&quot;&gt;Grafana Loki&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/grafana/pyroscope&quot;&gt;Grafana Pyroscope&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Kubernetes-native&lt;/strong&gt;: Use components to interact with native and custom Kubernetes resources; no need to learn how to use a separate Kubernetes operator.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Shareable pipelines&lt;/strong&gt;: Use &lt;a href=&quot;https://grafana.com/docs/alloy/latest/concepts/modules/&quot;&gt;modules&lt;/a&gt; to share your pipelines with the world.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic workload distribution&lt;/strong&gt;: Configure Alloy instances to form a &lt;a href=&quot;https://grafana.com/docs/alloy/latest/concepts/clustering/&quot;&gt;cluster&lt;/a&gt; for automatic workload distribution.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Centralized configuration support&lt;/strong&gt;: Alloy supports retrieving its configuration from a &lt;a href=&quot;https://grafana.com/docs/alloy/latest/reference/config-blocks/remotecfg/&quot;&gt;server&lt;/a&gt; for centralized configuration management.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Debugging utilities&lt;/strong&gt;: Use the &lt;a href=&quot;https://grafana.com/docs/alloy/latest/tasks/debug/&quot;&gt;built-in UI&lt;/a&gt; for visualizing and debugging pipelines.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-alloy&quot;&gt;otelcol.receiver.otlp &quot;example&quot; {
  grpc {
    endpoint = &quot;127.0.0.1:4317&quot;
  }

  output {
    metrics = [otelcol.processor.batch.example.input]
    logs    = [otelcol.processor.batch.example.input]
    traces  = [otelcol.processor.batch.example.input]
  }
}

otelcol.processor.batch &quot;example&quot; {
  output {
    metrics = [otelcol.exporter.otlp.default.input]
    logs    = [otelcol.exporter.otlp.default.input]
    traces  = [otelcol.exporter.otlp.default.input]
  }
}

otelcol.exporter.otlp &quot;default&quot; {
  client {
    endpoint = &quot;my-otlp-grpc-server:4317&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://grafana.com/docs/alloy/latest&quot;&gt;documentation&lt;/a&gt; to see:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/alloy/latest/get-started/install/&quot;&gt;Installation instructions&lt;/a&gt; for Alloy&lt;/li&gt; 
 &lt;li&gt;Steps for &lt;a href=&quot;https://grafana.com/docs/alloy/latest/get-started/&quot;&gt;Getting started&lt;/a&gt; with Alloy&lt;/li&gt; 
 &lt;li&gt;The list of Alloy &lt;a href=&quot;https://grafana.com/docs/alloy/latest/reference/components/&quot;&gt;components&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Release cadence&lt;/h2&gt; 
&lt;p&gt;A new minor release is planned every six weeks.&lt;/p&gt; 
&lt;p&gt;The release cadence is best-effort: if necessary, releases may be performed outside of this cadence, or a scheduled release date can be moved forwards or backwards.&lt;/p&gt; 
&lt;p&gt;Minor releases published on cadence include updating dependencies for upstream OpenTelemetry Collector code if new versions are available. Minor releases published outside of the release cadence may not include these dependency updates.&lt;/p&gt; 
&lt;p&gt;Patch and security releases may be published at any time.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;To engage with the Alloy community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Chat with us on our community Slack channel. To invite yourself to the Grafana Slack, visit &lt;a href=&quot;https://slack.grafana.com/&quot;&gt;https://slack.grafana.com/&lt;/a&gt; and join the &lt;code&gt;#alloy&lt;/code&gt; channel.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions on the &lt;a href=&quot;https://community.grafana.com/c/grafana-alloy&quot;&gt;Grafana community site&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/grafana/alloy/issues/new&quot;&gt;File an issue&lt;/a&gt; for bugs, issues, and feature suggestions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Attend the monthly &lt;a href=&quot;https://docs.google.com/document/d/1TqaZD1JPfNadZ4V81OCBPCG_TksDYGlNlGdMnTWUSpo&quot;&gt;community call&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Refer to our &lt;a href=&quot;https://github.com/grafana/alloy/raw/main/docs/developer/contributing.md&quot;&gt;contributors guide&lt;/a&gt; to learn how to contribute.&lt;/p&gt; 
&lt;p&gt;Thanks to all the people who have already contributed!&lt;/p&gt; 
&lt;a href=&quot;https://github.com/grafana/alloy/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contributors-img.web.app/image?repo=grafana/alloy&quot;&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>gruntwork-io/terragrunt</title>
      <link>https://github.com/gruntwork-io/terragrunt</link>
      <description>&lt;p&gt;Terragrunt is a flexible orchestration tool that allows Infrastructure as Code written in OpenTofu/Terraform to scale.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Terragrunt&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://gruntwork.io/?ref=repo_terragrunt&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintained%20by-gruntwork.io-%235849a6.svg?sanitize=true&quot; alt=&quot;Maintained by Gruntwork.io&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/gruntwork-io/terragrunt&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/gruntwork-io/terragrunt&quot; alt=&quot;Go Report Card&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://godoc.org/github.com/gruntwork-io/terragrunt&quot;&gt;&lt;img src=&quot;https://godoc.org/github.com/gruntwork-io/terragrunt?status.svg?sanitize=true&quot; alt=&quot;GoDoc&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/tofu-%3E%3D1.6.0-blue.svg?sanitize=true&quot; alt=&quot;OpenTofu Version&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/tf-%3E%3D0.12.0-blue.svg?sanitize=true&quot; alt=&quot;Terraform Version&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Terragrunt is a flexible orchestration tool that allows Infrastructure as Code written in &lt;a href=&quot;https://opentofu.org&quot;&gt;OpenTofu&lt;/a&gt;/&lt;a href=&quot;https://www.terraform.io&quot;&gt;Terraform&lt;/a&gt; to scale.&lt;/p&gt; 
&lt;p&gt;Please see the following for more info, including install instructions and complete documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://terragrunt.gruntwork.io&quot;&gt;Terragrunt Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://terragrunt.gruntwork.io/docs/getting-started/quick-start/&quot;&gt;Getting started with Terragrunt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://terragrunt.gruntwork.io/docs&quot;&gt;Terragrunt Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://terragrunt.gruntwork.io/docs/community/contributing&quot;&gt;Contributing to Terragrunt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gruntwork.io/support/&quot;&gt;Commercial Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Join the Discord!&lt;/h2&gt; 
&lt;p&gt;Join &lt;a href=&quot;https://discord.gg/YENaT9h8jh&quot;&gt;our community&lt;/a&gt; for discussions, support, and contributions:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/YENaT9h8jh&quot;&gt;&lt;img src=&quot;https://dcbadge.limes.pink/api/server/https://discord.gg/YENaT9h8jh&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This code is released under the MIT License. See &lt;a href=&quot;https://raw.githubusercontent.com/gruntwork-io/terragrunt/main/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>argoproj/argo-rollouts</title>
      <link>https://github.com/argoproj/argo-rollouts</link>
      <description>&lt;p&gt;Progressive Delivery for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Argo Rollouts - Progressive Delivery for Kubernetes&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://codecov.io/gh/argoproj/argo-rollouts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/argoproj/argo-rollouts/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://argoproj.github.io/community/join-slack&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-argoproj-brightgreen.svg?logo=slack&quot; alt=&quot;slack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/3834&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/3834/badge&quot; alt=&quot;CII Best Practices&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://api.securityscorecards.dev/projects/github.com/argoproj/argo-rollouts&quot;&gt;&lt;img src=&quot;https://api.securityscorecards.dev/projects/github.com/argoproj/argo-rollouts/badge&quot; alt=&quot;OpenSSF Scorecard&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://artifacthub.io/packages/helm/argo/argo-rollouts&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/argo-rollouts&quot; alt=&quot;Artifact HUB&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Argo Rollouts?&lt;/h2&gt; 
&lt;p&gt;Argo Rollouts is a Kubernetes controller and set of CRDs which provide advanced deployment capabilities such as blue-green, canary, canary analysis, experimentation, and progressive delivery features to Kubernetes.&lt;/p&gt; 
&lt;p&gt;Argo Rollouts (optionally) integrates with ingress controllers and service meshes, leveraging their traffic shaping abilities to gradually shift traffic to the new version during an update. Additionally, Rollouts can query and interpret metrics from various providers to verify key KPIs and drive automated promotion or rollback during an update.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtu.be/hIL0E2gLkf8&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/hIL0E2gLkf8/0.jpg&quot; alt=&quot;Argo Rollotus Demo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;kubectl create namespace argo-rollouts
kubectl apply -n argo-rollouts -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow the full &lt;a href=&quot;https://raw.githubusercontent.com/argoproj/argo-rollouts/master/docs/getting-started.md&quot;&gt;getting started guide&lt;/a&gt; to walk through creating and then updating a rollout object.&lt;/p&gt; 
&lt;h2&gt;Why Argo Rollouts?&lt;/h2&gt; 
&lt;p&gt;Kubernetes Deployments provides the &lt;code&gt;RollingUpdate&lt;/code&gt; strategy which provide a basic set of safety guarantees (readiness probes) during an update. However the rolling update strategy faces many limitations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Few controls over the speed of the rollout&lt;/li&gt; 
 &lt;li&gt;Inability to control traffic flow to the new version&lt;/li&gt; 
 &lt;li&gt;Readiness probes are unsuitable for deeper, stress, or one-time checks&lt;/li&gt; 
 &lt;li&gt;No ability to query external metrics to verify an update&lt;/li&gt; 
 &lt;li&gt;Can halt the progression, but unable to automatically abort and rollback the update&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For these reasons, in large scale high-volume production environments, a rolling update is often considered too risky of an update procedure since it provides no control over the blast radius, may rollout too aggressively, and provides no automated rollback upon failures.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Blue-Green update strategy&lt;/li&gt; 
 &lt;li&gt;Canary update strategy&lt;/li&gt; 
 &lt;li&gt;Fine-grained, weighted traffic shifting&lt;/li&gt; 
 &lt;li&gt;Automated rollbacks and promotions&lt;/li&gt; 
 &lt;li&gt;Manual judgement&lt;/li&gt; 
 &lt;li&gt;Customizable metric queries and analysis of business KPIs&lt;/li&gt; 
 &lt;li&gt;Ingress controller integration: NGINX, ALB, Apache APISIX&lt;/li&gt; 
 &lt;li&gt;Service Mesh integration: Istio, Linkerd, SMI&lt;/li&gt; 
 &lt;li&gt;Metric provider integration: Prometheus, Wavefront, Kayenta, Web, Kubernetes Jobs, Datadog, New Relic, InfluxDB&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Traffic Shaping Integrations&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Traffic Shaping Integration&lt;/th&gt; 
   &lt;th&gt;SetWeight&lt;/th&gt; 
   &lt;th&gt;SetWeightExperiments&lt;/th&gt; 
   &lt;th&gt;SetMirror&lt;/th&gt; 
   &lt;th&gt;SetHeader&lt;/th&gt; 
   &lt;th&gt;Implemented As Plugin&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ALB Ingress Controller&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ambassador&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Apache APISIX Ingress Controller&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Istio&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Nginx Ingress Controller&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SMI&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Traefik&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (beta)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Contour&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (beta)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gateway API&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚ùå&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;‚úî&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; = Supported&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;‚ùå&lt;/span&gt; = Not Supported&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;‚úî&lt;/span&gt; = Yes&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To learn more about Argo Rollouts go to the &lt;a href=&quot;https://argo-rollouts.readthedocs.io/en/stable/&quot;&gt;complete documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;You can reach the Argo Rollouts community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Q &amp;amp; A: &lt;a href=&quot;https://github.com/argoproj/argo-rollouts/discussions&quot;&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat: &lt;a href=&quot;https://argoproj.github.io/community/join-slack&quot;&gt;The #argo-rollouts Slack channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Contributors Office Hours: &lt;a href=&quot;https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com&quot;&gt;Every Thursday&lt;/a&gt; | &lt;a href=&quot;https://docs.google.com/document/d/1xkoFkVviB70YBzSEa4bDnu-rUZ1sIFtwKKG1Uw8XsY8&quot;&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;User Community meeting: &lt;a href=&quot;https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com&quot;&gt;First Wednesday of each month&lt;/a&gt; | &lt;a href=&quot;https://docs.google.com/document/d/1ttgw98MO45Dq7ZUHpIiOIEfbyeitKHNfMjbY5dLLMKQ&quot;&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Who uses Argo Rollouts?&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/argoproj/argo-rollouts/raw/master/USERS.md&quot;&gt;Official Argo Rollouts User List&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community Blogs and Presentations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/terrytangyuan/awesome-argo&quot;&gt;Awesome-Argo: A Curated List of Awesome Projects and Resources Related to Argo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/XNXJtxkUKeY&quot;&gt;Automation of Everything - How To Combine Argo Events, Workflows &amp;amp; Pipelines, CD, and Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/84Ky0aPbHvY&quot;&gt;Argo Rollouts - Canary Deployments Made Easy In Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=yeVkTTO9nOA&quot;&gt;How Intuit Does Canary and Blue Green Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Nv0PPwbIEkY&quot;&gt;Leveling Up Your CD: Unlocking Progressive Delivery on Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codefresh.io/continuous-deployment/minimize-failed-deployments-argo-rollouts-smoke-tests/&quot;&gt;Minimize failed deployments with Argo Rollouts and Smoke tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codefresh.io/continuous-deployment/recover-automatically-from-failed-deployments/&quot;&gt;Recover automatically from failed deployments with Argo Rollouts and Prometheus metrics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=krDxDz4V4Tg&quot;&gt;Kubernetes Blue-Green deployments with Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=fviYWA2mcF8&quot;&gt;Kubernetes canary deployments with Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=35Qimb_AZ8U&quot;&gt;GitOps with Argo CD and an Argo Rollouts canary release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=w-E8FzTbN3g&amp;amp;t=1s&quot;&gt;Multi-Stage Delivery with Keptn and Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doordash.engineering/2021/04/14/gradual-code-releases-using-an-in-house-kubernetes-canary-controller/&quot;&gt;Gradual Code Releases Using an In-House Kubernetes Canary Controller on top of Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=rCEhxJ2NSTI&quot;&gt;How Scalable is Argo-Rollouts: A Cloud Operator‚Äôs Perspective&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@arielsimhon/minimize-impact-in-kubernetes-using-argo-rollouts-992fb9519969&quot;&gt;Minimize Impact in Kubernetes Using Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=DfeL7cdTx4c&quot;&gt;Progressive Application Delivery with GitOps on Red Hat OpenShift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codefresh.io/blog/progressive-delivery-for-kubernetes-config-maps-using-argo-rollouts/&quot;&gt;Progressive delivery for Kubernetes Config Maps using Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codefresh.io/blog/multi-service-progressive-delivery-with-argo-rollouts/&quot;&gt;Multi-Service Progressive Delivery with Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codefresh.io/blog/progressive-delivery-for-stateful-services-using-argo-rollouts/&quot;&gt;Progressive Delivery for Stateful Services Using Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>aws/karpenter-provider-aws</title>
      <link>https://github.com/aws/karpenter-provider-aws</link>
      <description>&lt;p&gt;Karpenter is a Kubernetes Node Autoscaler built for flexibility, performance, and simplicity.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/aws/karpenter/actions/workflows/ci.yaml&quot;&gt;&lt;img src=&quot;https://github.com/aws/karpenter-provider-aws/actions/workflows/ci.yaml/badge.svg?branch=main&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/stars/aws/karpenter-provider-aws&quot; alt=&quot;GitHub stars&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/aws/karpenter-provider-aws&quot; alt=&quot;GitHub forks&quot;&gt; &lt;a href=&quot;https://github.com/aws/karpenter-provider-aws/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache%202.0-ff69b4.svg?sanitize=true&quot; alt=&quot;GitHub License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/aws/karpenter&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/aws/karpenter-provider-aws&quot; alt=&quot;Go Report Card&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/aws/karpenter?branch=main&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/aws/karpenter-provider-aws/badge.svg?branch=main&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/aws/karpenter-provider-aws/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot; alt=&quot;contributions welcome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/aws/karpenter-provider-aws/main/website/static/banner.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Karpenter is an open-source node provisioning project built for Kubernetes. Karpenter improves the efficiency and cost of running workloads on Kubernetes clusters by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Watching&lt;/strong&gt; for pods that the Kubernetes scheduler has marked as unschedulable&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evaluating&lt;/strong&gt; scheduling constraints (resource requests, nodeselectors, affinities, tolerations, and topology spread constraints) requested by the pods&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Provisioning&lt;/strong&gt; nodes that meet the requirements of the pods&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Removing&lt;/strong&gt; the nodes when the nodes are no longer needed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Come discuss Karpenter in the &lt;a href=&quot;https://kubernetes.slack.com/archives/C02SFFZSA2K&quot;&gt;#karpenter&lt;/a&gt; channel, in the &lt;a href=&quot;https://slack.k8s.io/&quot;&gt;Kubernetes slack&lt;/a&gt; or join the &lt;a href=&quot;https://karpenter.sh/docs/contributing/working-group/&quot;&gt;Karpenter working group&lt;/a&gt; bi-weekly calls. If you want to contribute to the Karpenter project, please refer to the Karpenter docs.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://karpenter.sh/docs/&quot;&gt;Docs&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Talks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;03/19/2024 &lt;a href=&quot;https://www.youtube.com/watch?v=rq57liGu0H4&quot;&gt;Harnessing Karpenter: Transforming Kubernetes Clusters with Argo Workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;12/04/2023 &lt;a href=&quot;https://www.youtube.com/watch?v=lkg_9ETHeks&quot;&gt;AWS re:Invent 2023 - Harness the power of Karpenter to scale, optimize &amp;amp; upgrade Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;09/08/2022 &lt;a href=&quot;https://youtu.be/BnksdJ3oOEs&quot;&gt;Workload Consolidation with Karpenter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;05/19/2022 &lt;a href=&quot;https://www.youtube.com/watch?v=UBb8wbfSc34&quot;&gt;Scaling K8s Nodes Without Breaking the Bank or Your Sanity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;03/25/2022 &lt;a href=&quot;https://youtu.be/sxDtmzbNHwE?t=3931&quot;&gt;Karpenter @ AWS Community Day 2022&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;12/20/2021 &lt;a href=&quot;https://youtu.be/C-2v7HT-uSA&quot;&gt;How To Auto-Scale Kubernetes Clusters With Karpenter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;11/30/2021 &lt;a href=&quot;https://youtu.be/3QsVRHVdOnM&quot;&gt;Karpenter vs Kubernetes Cluster Autoscaler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;11/19/2021 &lt;a href=&quot;https://youtu.be/qxWJRUF6JJc&quot;&gt;Karpenter @ Container Day&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;05/14/2021 &lt;a href=&quot;https://www.youtube.com/watch?v=43g8uPohTgc&quot;&gt;Groupless Autoscaling with Karpenter @ Kubecon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;05/04/2021 &lt;a href=&quot;https://youtu.be/MZ-4HzOC_ac?t=7137&quot;&gt;Karpenter @ Container Day&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>wailsapp/wails</title>
      <link>https://github.com/wailsapp/wails</link>
      <description>&lt;p&gt;Create beautiful applications using Go&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot; style=&quot;text-align: center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/assets/images/logo-universal.png&quot; width=&quot;55%&quot;&gt;&lt;br&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; Build desktop applications using Go &amp;amp; Web Technologies. &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/wailsapp/wails/raw/master/LICENSE&quot;&gt; &lt;img alt=&quot;GitHub&quot; src=&quot;https://img.shields.io/github/license/wailsapp/wails&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/wailsapp/wails&quot;&gt; &lt;img src=&quot;https://goreportcard.com/badge/github.com/wailsapp/wails&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://pkg.go.dev/github.com/wailsapp/wails&quot;&gt; &lt;img src=&quot;https://pkg.go.dev/badge/github.com/wailsapp/wails.svg?sanitize=true&quot; alt=&quot;Go Reference&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/wailsapp/wails/issues&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&quot; alt=&quot;CodeFactor&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://app.fossa.com/projects/git%2Bgithub.com%2Fwailsapp%2Fwails?ref=badge_shield&quot; alt=&quot;FOSSA Status&quot;&gt; &lt;img src=&quot;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fwailsapp%2Fwails.svg?type=shield&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/avelino/awesome-go&quot; rel=&quot;nofollow&quot;&gt; &lt;img src=&quot;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&quot; alt=&quot;Awesome&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://discord.gg/BrRSWTaxVK&quot;&gt; &lt;img alt=&quot;Discord&quot; src=&quot;https://dcbadge.vercel.app/api/server/BrRSWTaxVK?style=flat&quot;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/wailsapp/wails/actions/workflows/build-and-test.yml&quot; rel=&quot;nofollow&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/wailsapp/wails/build-and-test.yml?branch=master&amp;amp;logo=Github&quot; alt=&quot;Build&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/wailsapp/wails/tags&quot; rel=&quot;nofollow&quot;&gt; &lt;img alt=&quot;GitHub tag (latest SemVer pre-release)&quot; src=&quot;https://img.shields.io/github/v/tag/wailsapp/wails?include_prereleases&amp;amp;label=version&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;strong&gt; &lt;samp&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/README.md&quot;&gt;English&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/README.zh-Hans.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/README.ja.md&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/README.ko.md&quot;&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/README.es.md&quot;&gt;Espa√±ol&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/README.pt-br.md&quot;&gt;Portugu√™s&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/README.ru.md&quot;&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/README.fr.md&quot;&gt;Francais&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/README.uz.md&quot;&gt;Uzbek&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/README.de.md&quot;&gt;Deutsch&lt;/a&gt; ¬∑ &lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/README.tr.md&quot;&gt;T√ºrk√ße&lt;/a&gt;&lt;/p&gt; &lt;/samp&gt; &lt;/strong&gt; 
&lt;/div&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/#features&quot;&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/#roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/#getting-started&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/#sponsors&quot;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/#stargazers-over-time&quot;&gt;Stargazers over time&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/#inspiration&quot;&gt;Inspiration&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;The traditional method of providing web interfaces to Go programs is via a built-in web server. Wails offers a different approach: it provides the ability to wrap both Go code and a web frontend into a single binary. Tools are provided to make this easy for you by handling project creation, compilation and bundling. All you have to do is get creative!&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use standard Go for the backend&lt;/li&gt; 
 &lt;li&gt;Use any frontend technology you are already familiar with to build your UI&lt;/li&gt; 
 &lt;li&gt;Quickly create rich frontends for your Go programs using pre-built templates&lt;/li&gt; 
 &lt;li&gt;Easily call Go methods from Javascript&lt;/li&gt; 
 &lt;li&gt;Auto-generated Typescript definitions for your Go structs and methods&lt;/li&gt; 
 &lt;li&gt;Native Dialogs &amp;amp; Menus&lt;/li&gt; 
 &lt;li&gt;Native Dark / Light mode support&lt;/li&gt; 
 &lt;li&gt;Supports modern translucency and &quot;frosted window&quot; effects&lt;/li&gt; 
 &lt;li&gt;Unified eventing system between Go and Javascript&lt;/li&gt; 
 &lt;li&gt;Powerful cli tool to quickly generate and build your projects&lt;/li&gt; 
 &lt;li&gt;Multiplatform&lt;/li&gt; 
 &lt;li&gt;Uses native rendering engines - &lt;em&gt;no embedded browser&lt;/em&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Roadmap&lt;/h3&gt; 
&lt;p&gt;The project roadmap may be found &lt;a href=&quot;https://github.com/wailsapp/wails/discussions/1484&quot;&gt;here&lt;/a&gt;. Please consult it before creating an enhancement request.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The installation instructions are on the &lt;a href=&quot;https://wails.io/docs/gettingstarted/installation&quot;&gt;official website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;This project is supported by these kind people / companies: &lt;img src=&quot;https://raw.githubusercontent.com/wailsapp/wails/master/website/static/img/sponsors.svg?sanitize=true&quot; style=&quot;width:100%;max-width:800px;&quot;&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://wails.io/img/sponsor/jetbrains-grayscale.webp&quot; style=&quot;width: 100px&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Is this an alternative to Electron?&lt;/p&gt; &lt;p&gt;Depends on your requirements. It&#39;s designed to make it easy for Go programmers to make lightweight desktop applications or add a frontend to their existing applications. Wails does offer native elements such as menus and dialogs, so it could be considered a lightweight electron alternative.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Who is this project aimed at?&lt;/p&gt; &lt;p&gt;Go programmers who want to bundle an HTML/JS/CSS frontend with their applications, without resorting to creating a server and opening a browser to view it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;What&#39;s with the name?&lt;/p&gt; &lt;p&gt;When I saw WebView, I thought &quot;What I really want is tooling around building a WebView app, a bit like Rails is to Ruby&quot;. So initially it was a play on words (Webview on Rails). It just so happened to also be a homophone of the English name for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Wales&quot;&gt;Country&lt;/a&gt; I am from. So it stuck.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;a href=&quot;https://star-history.com/#wailsapp/wails&amp;amp;Date&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=wailsapp/wails&amp;amp;type=Date&amp;amp;theme=dark&quot;&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=wailsapp/wails&amp;amp;type=Date&quot;&gt; 
  &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=wailsapp/wails&amp;amp;type=Date&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;The contributors list is getting too big for the readme! All the amazing people who have contributed to this project have their own page &lt;a href=&quot;https://wails.io/credits#contributors&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.com/projects/git%2Bgithub.com%2Fwailsapp%2Fwails?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fwailsapp%2Fwails.svg?type=large&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Inspiration&lt;/h2&gt; 
&lt;p&gt;This project was mainly coded to the following albums:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/1R2rsEUqXjIvAbzM0yHrxA&quot;&gt;Manic Street Preachers - Resistance Is Futile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/4VzCL9kjhgGQeKCiojK1YN&quot;&gt;Manic Street Preachers - This Is My Truth, Tell Me Yours&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/4Krg8zvprquh7TVn9OxZn8&quot;&gt;The Midnight - Endless Summer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/3kMfsD07Q32HRWKRrpcexr&quot;&gt;Gary Newman - Savage (Songs from a Broken World)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/0oL0OhrE2rYVns4IGj8h2m&quot;&gt;Steve Vai - Passion &amp;amp; Warfare&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/1nJsbWm3Yy2DW1KIc1OKle&quot;&gt;Ben Howard - Every Kingdom&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/6astw05cTiXEc2OvyByaPs&quot;&gt;Ben Howard - Noonday Dream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/2vBE40Rp60tl7rNqIZjaXM&quot;&gt;Adwaith - Melyn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/3v2hrfNGINPLuDP0YDTOjm&quot;&gt;Gwidaith Hen Fran - Cedors Hen Wrach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/2Kh43m04B1UkVcpcRa1Zug&quot;&gt;Metallica - Metallica&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/6SsIdN05HQg2GwYLfXuzLB&quot;&gt;Bloc Party - Silent Alarm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/3tklE2Fgw1hCIUstIwPBJF&quot;&gt;Maxthor - Another World&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open.spotify.com/album/0c32OywcLpdJCWWMC6vB8v&quot;&gt;Alun Tan Lan - Y Distawrwydd&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>grpc/grpc-go</title>
      <link>https://github.com/grpc/grpc-go</link>
      <description>&lt;p&gt;The Go language implementation of gRPC. HTTP/2 based RPC&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gRPC-Go&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://pkg.go.dev/google.golang.org/grpc&quot;&gt;&lt;img src=&quot;https://pkg.go.dev/badge/google.golang.org/grpc&quot; alt=&quot;GoDoc&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/grpc/grpc-go&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/grpc/grpc-go&quot; alt=&quot;GoReportCard&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/grpc/grpc-go&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/grpc/grpc-go/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://golang.org&quot;&gt;Go&lt;/a&gt; implementation of &lt;a href=&quot;https://grpc.io&quot;&gt;gRPC&lt;/a&gt;: A high performance, open source, general RPC framework that puts mobile and HTTP/2 first. For more information see the &lt;a href=&quot;https://grpc.io/docs/languages/go&quot;&gt;Go gRPC docs&lt;/a&gt;, or jump directly into the &lt;a href=&quot;https://grpc.io/docs/languages/go/quickstart&quot;&gt;quick start&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://golang.org&quot;&gt;Go&lt;/a&gt;&lt;/strong&gt;: any one of the &lt;strong&gt;two latest major&lt;/strong&gt; &lt;a href=&quot;https://golang.org/doc/devel/release.html&quot;&gt;releases&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Simply add the following import to your code, and then &lt;code&gt;go [build|run|test]&lt;/code&gt; will automatically fetch the necessary dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import &quot;google.golang.org/grpc&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are trying to access &lt;code&gt;grpc-go&lt;/code&gt; from &lt;strong&gt;China&lt;/strong&gt;, see the &lt;a href=&quot;https://raw.githubusercontent.com/grpc/grpc-go/master/#FAQ&quot;&gt;FAQ&lt;/a&gt; below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Learn more&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grpc.io/docs/languages/go&quot;&gt;Go gRPC docs&lt;/a&gt;, which include a &lt;a href=&quot;https://grpc.io/docs/languages/go/quickstart&quot;&gt;quick start&lt;/a&gt; and &lt;a href=&quot;https://pkg.go.dev/google.golang.org/grpc&quot;&gt;API reference&lt;/a&gt; among other resources&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/grpc/grpc-go/master/Documentation&quot;&gt;Low-level technical docs&lt;/a&gt; from this repository&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://performance-dot-grpc-testing.appspot.com/explore?dashboard=5180705743044608&quot;&gt;Performance benchmark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/grpc/grpc-go/master/examples&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;I/O Timeout Errors&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;golang.org&lt;/code&gt; domain may be blocked from some countries. &lt;code&gt;go get&lt;/code&gt; usually produces an error like the following when this happens:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ go get -u google.golang.org/grpc
package google.golang.org/grpc: unrecognized import path &quot;google.golang.org/grpc&quot; (https fetch: Get https://google.golang.org/grpc?go-get=1: dial tcp 216.239.37.1:443: i/o timeout)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build Go code, there are several options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Set up a VPN and access google.golang.org through that.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;With Go module support: it is possible to use the &lt;code&gt;replace&lt;/code&gt; feature of &lt;code&gt;go mod&lt;/code&gt; to create aliases for golang.org packages. In your project&#39;s directory:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;go mod edit -replace=google.golang.org/grpc=github.com/grpc/grpc-go@latest
go mod tidy
go mod vendor
go build -mod=vendor
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Again, this will need to be done for all transitive dependencies hosted on golang.org as well. For details, refer to &lt;a href=&quot;https://github.com/golang/go/issues/28652&quot;&gt;golang/go issue #28652&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Compiling error, undefined: grpc.SupportPackageIsVersion&lt;/h3&gt; 
&lt;p&gt;Please update to the latest version of gRPC-Go using &lt;code&gt;go get google.golang.org/grpc&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;How to turn on logging&lt;/h3&gt; 
&lt;p&gt;The default logger is controlled by environment variables. Turn everything on like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ export GRPC_GO_LOG_VERBOSITY_LEVEL=99
$ export GRPC_GO_LOG_SEVERITY_LEVEL=info
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;The RPC failed with error &lt;code&gt;&quot;code = Unavailable desc = transport is closing&quot;&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This error means the connection the RPC is using was closed, and there are many possible reasons, including:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;mis-configured transport credentials, connection failed on handshaking&lt;/li&gt; 
 &lt;li&gt;bytes disrupted, possibly by a proxy in between&lt;/li&gt; 
 &lt;li&gt;server shutdown&lt;/li&gt; 
 &lt;li&gt;Keepalive parameters caused connection shutdown, for example if you have configured your server to terminate connections regularly to &lt;a href=&quot;https://github.com/grpc/grpc-go/issues/3170#issuecomment-552517779&quot;&gt;trigger DNS lookups&lt;/a&gt;. If this is the case, you may want to increase your &lt;a href=&quot;https://pkg.go.dev/google.golang.org/grpc/keepalive?tab=doc#ServerParameters&quot;&gt;MaxConnectionAgeGrace&lt;/a&gt;, to allow longer RPC calls to finish.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;It can be tricky to debug this because the error happens on the client side but the root cause of the connection being closed is on the server side. Turn on logging on &lt;strong&gt;both client and server&lt;/strong&gt;, and see if there are any transport errors.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/openai-go</title>
      <link>https://github.com/openai/openai-go</link>
      <description>&lt;p&gt;The official Go library for the OpenAI API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI Go API Library&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://pkg.go.dev/github.com/openai/openai-go&quot;&gt;&lt;img src=&quot;https://pkg.go.dev/badge/github.com/openai/openai-go.svg?sanitize=true&quot; alt=&quot;Go Reference&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;strong&gt;This release is currently in beta&lt;/strong&gt;. Minor breaking changes may occur.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The OpenAI Go library provides convenient access to &lt;a href=&quot;https://platform.openai.com/docs&quot;&gt;the OpenAI REST API&lt;/a&gt; from applications written in Go. The full API of this library can be found in &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/api.md&quot;&gt;api.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;!-- x-release-please-start-version --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import (
	&quot;github.com/openai/openai-go&quot; // imported as openai
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- x-release-please-end --&gt; 
&lt;p&gt;Or to pin the version:&lt;/p&gt; 
&lt;!-- x-release-please-start-version --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;go get -u &#39;github.com/openai/openai-go@v0.1.0-alpha.64&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- x-release-please-end --&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;This library requires Go 1.18+.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The full API of this library can be found in &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/api.md&quot;&gt;api.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/examples/&quot;&gt;examples&lt;/a&gt; directory for complete and runnable examples.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;package main

import (
	&quot;context&quot;
	&quot;fmt&quot;

	&quot;github.com/openai/openai-go&quot;
	&quot;github.com/openai/openai-go/option&quot;
	&quot;github.com/openai/openai-go/shared&quot;
)

func main() {
	client := openai.NewClient(
		option.WithAPIKey(&quot;My API Key&quot;), // defaults to os.LookupEnv(&quot;OPENAI_API_KEY&quot;)
	)
	chatCompletion, err := client.Chat.Completions.New(context.TODO(), openai.ChatCompletionNewParams{
		Messages: openai.F([]openai.ChatCompletionMessageParamUnion{
			 openai.UserMessage(&quot;Say this is a test&quot;),
		}),
		Model: openai.F(openai.ChatModelGPT4o),
	})
	if err != nil {
		panic(err.Error())
	}
	println(chatCompletion.Choices[0].Message.Content)
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Conversations&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;param := openai.ChatCompletionNewParams{
	Messages: openai.F([]openai.ChatCompletionMessageParamUnion{
		openai.UserMessage(&quot;What kind of houseplant is easy to take care of?&quot;),
  	}),
	Seed:     openai.Int(1),
	Model:    openai.F(openai.ChatModelGPT4o),
}

completion, err := client.Chat.Completions.New(ctx, param)

param.Messages.Value = append(param.Messages.Value, completion.Choices[0].Message)
param.Messages.Value = append(param.Messages.Value, openai.UserMessage(&quot;How big are those?&quot;))

// continue the conversation
completion, err = client.Chat.Completions.New(ctx, param)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Streaming responses&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;question := &quot;Write an epic&quot;

stream := client.Chat.Completions.NewStreaming(ctx, openai.ChatCompletionNewParams{
	Messages: openai.F([]openai.ChatCompletionMessageParamUnion{
		openai.UserMessage(question),
	}),
	Seed:  openai.Int(0),
	Model: openai.F(openai.ChatModelGPT4o),
})

// optionally, an accumulator helper can be used
acc := openai.ChatCompletionAccumulator{}

for stream.Next() {
	chunk := stream.Current()
	acc.AddChunk(chunk)

	if content, ok := acc.JustFinishedContent(); ok {
		println(&quot;Content stream finished:&quot;, content)
	}

	// if using tool calls
	if tool, ok := acc.JustFinishedToolCall(); ok {
		println(&quot;Tool call stream finished:&quot;, tool.Index, tool.Name, tool.Arguments)
	}

	if refusal, ok := acc.JustFinishedRefusal(); ok {
		println(&quot;Refusal stream finished:&quot;, refusal)
	}

	// it&#39;s best to use chunks after handling JustFinished events
	if len(chunk.Choices) &amp;gt; 0 {
		println(chunk.Choices[0].Delta.Content)
	}
}

if err := stream.Err(); err != nil {
	panic(err)
}

// After the stream is finished, acc can be used like a ChatCompletion
_ = acc.Choices[0].Message.Content
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/examples/chat-completion-accumulating/main.go&quot;&gt;full streaming and accumulation example&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Tool calling&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import (
	&quot;encoding/json&quot;
	// ...
)

// ...

question := &quot;What is the weather in New York City?&quot;

params := openai.ChatCompletionNewParams{
	Messages: openai.F([]openai.ChatCompletionMessageParamUnion{
		openai.UserMessage(question),
	}),
	Tools: openai.F([]openai.ChatCompletionToolParam{
		{
			Type: openai.F(openai.ChatCompletionToolTypeFunction),
			Function: openai.F(openai.FunctionDefinitionParam{
				Name:        openai.String(&quot;get_weather&quot;),
				Description: openai.String(&quot;Get weather at the given location&quot;),
				Parameters: openai.F(openai.FunctionParameters{
					&quot;type&quot;: &quot;object&quot;,
					&quot;properties&quot;: map[string]interface{}{
						&quot;location&quot;: map[string]string{
							&quot;type&quot;: &quot;string&quot;,
						},
					},
					&quot;required&quot;: []string{&quot;location&quot;},
				}),
			}),
		},
	}),
	Model: openai.F(openai.ChatModelGPT4o),
}

// chat completion request with tool calls
completion, _ := client.Chat.Completions.New(ctx, params)

for _, toolCall := range completion.Choices[0].Message.ToolCalls {
	if toolCall.Function.Name == &quot;get_weather&quot; {
		// extract the location from the function call arguments
		var args map[string]interface{}
		_ := json.Unmarshal([]byte(toolCall.Function.Arguments), &amp;amp;args)

		// call a weather API with the arguments requested by the model
		weatherData := getWeather(args[&quot;location&quot;].(string))
		params.Messages.Value = append(params.Messages.Value, openai.ToolMessage(toolCall.ID, weatherData))
	}
}

// ... continue the conversation with the information provided by the tool
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/examples/chat-completion-tool-calling/main.go&quot;&gt;full tool calling example&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Structured outputs&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import (
	&quot;encoding/json&quot;
	&quot;github.com/invopop/jsonschema&quot;
	// ...
)

// A struct that will be converted to a Structured Outputs response schema
type HistoricalComputer struct {
	Origin       Origin   `json:&quot;origin&quot; jsonschema_description:&quot;The origin of the computer&quot;`
	Name         string   `json:&quot;full_name&quot; jsonschema_description:&quot;The name of the device model&quot;`
	NotableFacts []string `json:&quot;notable_facts&quot; jsonschema_description:&quot;A few key facts about the computer&quot;`
}

type Origin struct {
	YearBuilt    int64  `json:&quot;year_of_construction&quot; jsonschema_description:&quot;The year it was made&quot;`
	Organization string `json:&quot;organization&quot; jsonschema_description:&quot;The organization that was in charge of its development&quot;`
}

func GenerateSchema[T any]() interface{} {
	reflector := jsonschema.Reflector{
		AllowAdditionalProperties: false,
		DoNotReference:            true,
	}
	var v T
	schema := reflector.Reflect(v)
	return schema
}

// Generate the JSON schema at initialization time
var HistoricalComputerResponseSchema = GenerateSchema[HistoricalComputer]()

func main() {

	// ...

	question := &quot;What computer ran the first neural network?&quot;

	schemaParam := openai.ResponseFormatJSONSchemaJSONSchemaParam{
		Name:        openai.F(&quot;biography&quot;),
		Description: openai.F(&quot;Notable information about a person&quot;),
		Schema:      openai.F(HistoricalComputerResponseSchema),
		Strict:      openai.Bool(true),
	}

	chat, _ := client.Chat.Completions.New(ctx, openai.ChatCompletionNewParams{
		// ...
		ResponseFormat: openai.F[openai.ChatCompletionNewParamsResponseFormatUnion](
			openai.ResponseFormatJSONSchemaParam{
				Type:       openai.F(openai.ResponseFormatJSONSchemaTypeJSONSchema),
				JSONSchema: openai.F(schemaParam),
			},
		),
		// only certain models can perform structured outputs
		Model: openai.F(openai.ChatModelGPT4o2024_08_06),
	})

	// extract into a well-typed struct
	historicalComputer := HistoricalComputer{}
	_ = json.Unmarshal([]byte(chat.Choices[0].Message.Content), &amp;amp;historicalComputer)

	historicalComputer.Name
	historicalComputer.Origin.YearBuilt
	historicalComputer.Origin.Organization
	for i, fact := range historicalComputer.NotableFacts {
		// ...
	}
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/examples/structured-outputs/main.go&quot;&gt;full structured outputs example&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;h3&gt;Request fields&lt;/h3&gt; 
&lt;p&gt;All request parameters are wrapped in a generic &lt;code&gt;Field&lt;/code&gt; type, which we use to distinguish zero values from null or omitted fields.&lt;/p&gt; 
&lt;p&gt;This prevents accidentally sending a zero value if you forget a required parameter, and enables explicitly sending &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;&#39;&#39;&lt;/code&gt;, or &lt;code&gt;0&lt;/code&gt; on optional parameters. Any field not specified is not sent.&lt;/p&gt; 
&lt;p&gt;To construct fields with values, use the helpers &lt;code&gt;String()&lt;/code&gt;, &lt;code&gt;Int()&lt;/code&gt;, &lt;code&gt;Float()&lt;/code&gt;, or most commonly, the generic &lt;code&gt;F[T]()&lt;/code&gt;. To send a null, use &lt;code&gt;Null[T]()&lt;/code&gt;, and to send a nonconforming value, use &lt;code&gt;Raw[T](any)&lt;/code&gt;. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;params := FooParams{
	Name: openai.F(&quot;hello&quot;),

	// Explicitly send `&quot;description&quot;: null`
	Description: openai.Null[string](),

	Point: openai.F(openai.Point{
		X: openai.Int(0),
		Y: openai.Int(1),

		// In cases where the API specifies a given type,
		// but you want to send something else, use `Raw`:
		Z: openai.Raw[int64](0.01), // sends a float
	}),
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Response objects&lt;/h3&gt; 
&lt;p&gt;All fields in response structs are value types (not pointers or wrappers).&lt;/p&gt; 
&lt;p&gt;If a given field is &lt;code&gt;null&lt;/code&gt;, not present, or invalid, the corresponding field will simply be its zero value.&lt;/p&gt; 
&lt;p&gt;All response structs also include a special &lt;code&gt;JSON&lt;/code&gt; field, containing more detailed information about each property, which you can use like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;if res.Name == &quot;&quot; {
	// true if `&quot;name&quot;` is either not present or explicitly null
	res.JSON.Name.IsNull()

	// true if the `&quot;name&quot;` key was not present in the response JSON at all
	res.JSON.Name.IsMissing()

	// When the API returns data that cannot be coerced to the expected type:
	if res.JSON.Name.IsInvalid() {
		raw := res.JSON.Name.Raw()

		legacyName := struct{
			First string `json:&quot;first&quot;`
			Last  string `json:&quot;last&quot;`
		}{}
		json.Unmarshal([]byte(raw), &amp;amp;legacyName)
		name = legacyName.First + &quot; &quot; + legacyName.Last
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These &lt;code&gt;.JSON&lt;/code&gt; structs also include an &lt;code&gt;Extras&lt;/code&gt; map containing any properties in the json response that were not specified in the struct. This can be useful for API features not yet present in the SDK.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;body := res.JSON.ExtraFields[&quot;my_unexpected_field&quot;].Raw()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;RequestOptions&lt;/h3&gt; 
&lt;p&gt;This library uses the functional options pattern. Functions defined in the &lt;code&gt;option&lt;/code&gt; package return a &lt;code&gt;RequestOption&lt;/code&gt;, which is a closure that mutates a &lt;code&gt;RequestConfig&lt;/code&gt;. These options can be supplied to the client or at individual requests. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;client := openai.NewClient(
	// Adds a header to every request made by the client
	option.WithHeader(&quot;X-Some-Header&quot;, &quot;custom_header_info&quot;),
)

client.Chat.Completions.New(context.TODO(), ...,
	// Override the header
	option.WithHeader(&quot;X-Some-Header&quot;, &quot;some_other_custom_header_info&quot;),
	// Add an undocumented field to the request body, using sjson syntax
	option.WithJSONSet(&quot;some.json.path&quot;, map[string]string{&quot;my&quot;: &quot;object&quot;}),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://pkg.go.dev/github.com/openai/openai-go/option&quot;&gt;full list of request options&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Pagination&lt;/h3&gt; 
&lt;p&gt;This library provides some conveniences for working with paginated list endpoints.&lt;/p&gt; 
&lt;p&gt;You can use &lt;code&gt;.ListAutoPaging()&lt;/code&gt; methods to iterate through items across all pages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;iter := client.FineTuning.Jobs.ListAutoPaging(context.TODO(), openai.FineTuningJobListParams{
	Limit: openai.F(int64(20)),
})
// Automatically fetches more pages as needed.
for iter.Next() {
	fineTuningJob := iter.Current()
	fmt.Printf(&quot;%+v\n&quot;, fineTuningJob)
}
if err := iter.Err(); err != nil {
	panic(err.Error())
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can use simple &lt;code&gt;.List()&lt;/code&gt; methods to fetch a single page and receive a standard response object with additional helper methods like &lt;code&gt;.GetNextPage()&lt;/code&gt;, e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;page, err := client.FineTuning.Jobs.List(context.TODO(), openai.FineTuningJobListParams{
	Limit: openai.F(int64(20)),
})
for page != nil {
	for _, job := range page.Data {
		fmt.Printf(&quot;%+v\n&quot;, job)
	}
	page, err = page.GetNextPage()
}
if err != nil {
	panic(err.Error())
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Errors&lt;/h3&gt; 
&lt;p&gt;When the API returns a non-success status code, we return an error with type &lt;code&gt;*openai.Error&lt;/code&gt;. This contains the &lt;code&gt;StatusCode&lt;/code&gt;, &lt;code&gt;*http.Request&lt;/code&gt;, and &lt;code&gt;*http.Response&lt;/code&gt; values of the request, as well as the JSON of the error body (much like other response objects in the SDK).&lt;/p&gt; 
&lt;p&gt;To handle errors, we recommend that you use the &lt;code&gt;errors.As&lt;/code&gt; pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;_, err := client.FineTuning.Jobs.New(context.TODO(), openai.FineTuningJobNewParams{
	Model:        openai.F(openai.FineTuningJobNewParamsModelBabbage002),
	TrainingFile: openai.F(&quot;file-abc123&quot;),
})
if err != nil {
	var apierr *openai.Error
	if errors.As(err, &amp;amp;apierr) {
		println(string(apierr.DumpRequest(true)))  // Prints the serialized HTTP request
		println(string(apierr.DumpResponse(true))) // Prints the serialized HTTP response
	}
	panic(err.Error()) // GET &quot;/fine_tuning/jobs&quot;: 400 Bad Request { ... }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When other errors occur, they are returned unwrapped; for example, if HTTP transport fails, you might receive &lt;code&gt;*url.Error&lt;/code&gt; wrapping &lt;code&gt;*net.OpError&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Timeouts&lt;/h3&gt; 
&lt;p&gt;Requests do not time out by default; use context to configure a timeout for a request lifecycle.&lt;/p&gt; 
&lt;p&gt;Note that if a request is &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/#retries&quot;&gt;retried&lt;/a&gt;, the context timeout does not start over. To set a per-retry timeout, use &lt;code&gt;option.WithRequestTimeout()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// This sets the timeout for the request, including all the retries.
ctx, cancel := context.WithTimeout(context.Background(), 5*time.Minute)
defer cancel()
client.Chat.Completions.New(
	ctx,
	openai.ChatCompletionNewParams{
		Messages: openai.F([]openai.ChatCompletionMessageParamUnion{
			 openai.UserMessage(&quot;Say this is a test&quot;),
		}),
		Model: openai.F(openai.ChatModelGPT4o),
	},
	// This sets the per-retry timeout
	option.WithRequestTimeout(20*time.Second),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;File uploads&lt;/h3&gt; 
&lt;p&gt;Request parameters that correspond to file uploads in multipart requests are typed as &lt;code&gt;param.Field[io.Reader]&lt;/code&gt;. The contents of the &lt;code&gt;io.Reader&lt;/code&gt; will by default be sent as a multipart form part with the file name of &quot;anonymous_file&quot; and content-type of &quot;application/octet-stream&quot;.&lt;/p&gt; 
&lt;p&gt;The file name and content-type can be customized by implementing &lt;code&gt;Name() string&lt;/code&gt; or &lt;code&gt;ContentType() string&lt;/code&gt; on the run-time type of &lt;code&gt;io.Reader&lt;/code&gt;. Note that &lt;code&gt;os.File&lt;/code&gt; implements &lt;code&gt;Name() string&lt;/code&gt;, so a file returned by &lt;code&gt;os.Open&lt;/code&gt; will be sent with the file name on disk.&lt;/p&gt; 
&lt;p&gt;We also provide a helper &lt;code&gt;openai.FileParam(reader io.Reader, filename string, contentType string)&lt;/code&gt; which can be used to wrap any &lt;code&gt;io.Reader&lt;/code&gt; with the appropriate file name and content type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// A file from the file system
file, err := os.Open(&quot;input.jsonl&quot;)
openai.FileNewParams{
	File:    openai.F[io.Reader](file),
	Purpose: openai.F(openai.FilePurposeFineTune),
}

// A file from a string
openai.FileNewParams{
	File:    openai.F[io.Reader](strings.NewReader(&quot;my file contents&quot;)),
	Purpose: openai.F(openai.FilePurposeFineTune),
}

// With a custom filename and contentType
openai.FileNewParams{
	File:    openai.FileParam(strings.NewReader(`{&quot;hello&quot;: &quot;foo&quot;}`), &quot;file.go&quot;, &quot;application/json&quot;),
	Purpose: openai.F(openai.FilePurposeFineTune),
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Retries&lt;/h3&gt; 
&lt;p&gt;Certain errors will be automatically retried 2 times by default, with a short exponential backoff. We retry by default all connection errors, 408 Request Timeout, 409 Conflict, 429 Rate Limit, and &amp;gt;=500 Internal errors.&lt;/p&gt; 
&lt;p&gt;You can use the &lt;code&gt;WithMaxRetries&lt;/code&gt; option to configure or disable this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// Configure the default for all requests:
client := openai.NewClient(
	option.WithMaxRetries(0), // default is 2
)

// Override per-request:
client.Chat.Completions.New(
	context.TODO(),
	openai.ChatCompletionNewParams{
		Messages: openai.F([]openai.ChatCompletionMessageParamUnion{
			 openai.UserMessage(&quot;Say this is a test&quot;),
		}),
		Model: openai.F(openai.ChatModelGPT4o),
	},
	option.WithMaxRetries(5),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Accessing raw response data (e.g. response headers)&lt;/h3&gt; 
&lt;p&gt;You can access the raw HTTP response data by using the &lt;code&gt;option.WithResponseInto()&lt;/code&gt; request option. This is useful when you need to examine response headers, status codes, or other details.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// Create a variable to store the HTTP response
var response *http.Response
chatCompletion, err := client.Chat.Completions.New(
	context.TODO(),
	openai.ChatCompletionNewParams{
		Messages: openai.F([]openai.ChatCompletionMessageParamUnion{openai.ChatCompletionUserMessageParam{
			Role:    openai.F(openai.ChatCompletionUserMessageParamRoleUser),
			Content: openai.F([]openai.ChatCompletionContentPartUnionParam{openai.ChatCompletionContentPartTextParam{Text: openai.F(&quot;text&quot;), Type: openai.F(openai.ChatCompletionContentPartTextTypeText)}}),
		}}),
		Model: openai.F(shared.ChatModelO3Mini),
	},
	option.WithResponseInto(&amp;amp;response),
)
if err != nil {
	// handle error
}
fmt.Printf(&quot;%+v\n&quot;, chatCompletion)

fmt.Printf(&quot;Status Code: %d\n&quot;, response.StatusCode)
fmt.Printf(&quot;Headers: %+#v\n&quot;, response.Header)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Making custom/undocumented requests&lt;/h3&gt; 
&lt;p&gt;This library is typed for convenient access to the documented API. If you need to access undocumented endpoints, params, or response properties, the library can still be used.&lt;/p&gt; 
&lt;h4&gt;Undocumented endpoints&lt;/h4&gt; 
&lt;p&gt;To make requests to undocumented endpoints, you can use &lt;code&gt;client.Get&lt;/code&gt;, &lt;code&gt;client.Post&lt;/code&gt;, and other HTTP verbs. &lt;code&gt;RequestOptions&lt;/code&gt; on the client, such as retries, will be respected when making these requests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;var (
    // params can be an io.Reader, a []byte, an encoding/json serializable object,
    // or a &quot;‚Ä¶Params&quot; struct defined in this library.
    params map[string]interface{}

    // result can be an []byte, *http.Response, a encoding/json deserializable object,
    // or a model defined in this library.
    result *http.Response
)
err := client.Post(context.Background(), &quot;/unspecified&quot;, params, &amp;amp;result)
if err != nil {
    ‚Ä¶
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Undocumented request params&lt;/h4&gt; 
&lt;p&gt;To make requests using undocumented parameters, you may use either the &lt;code&gt;option.WithQuerySet()&lt;/code&gt; or the &lt;code&gt;option.WithJSONSet()&lt;/code&gt; methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;params := FooNewParams{
    ID:   openai.F(&quot;id_xxxx&quot;),
    Data: openai.F(FooNewParamsData{
        FirstName: openai.F(&quot;John&quot;),
    }),
}
client.Foo.New(context.Background(), params, option.WithJSONSet(&quot;data.last_name&quot;, &quot;Doe&quot;))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Undocumented response properties&lt;/h4&gt; 
&lt;p&gt;To access undocumented response properties, you may either access the raw JSON of the response as a string with &lt;code&gt;result.JSON.RawJSON()&lt;/code&gt;, or get the raw JSON of a particular field on the result with &lt;code&gt;result.JSON.Foo.Raw()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Any fields that are not present on the response struct will be saved and can be accessed by &lt;code&gt;result.JSON.ExtraFields()&lt;/code&gt; which returns the extra fields as a &lt;code&gt;map[string]Field&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Middleware&lt;/h3&gt; 
&lt;p&gt;We provide &lt;code&gt;option.WithMiddleware&lt;/code&gt; which applies the given middleware to requests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;func Logger(req *http.Request, next option.MiddlewareNext) (res *http.Response, err error) {
	// Before the request
	start := time.Now()
	LogReq(req)

	// Forward the request to the next handler
	res, err = next(req)

	// Handle stuff after the request
	end := time.Now()
	LogRes(res, err, start - end)

    return res, err
}

client := openai.NewClient(
	option.WithMiddleware(Logger),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When multiple middlewares are provided as variadic arguments, the middlewares are applied left to right. If &lt;code&gt;option.WithMiddleware&lt;/code&gt; is given multiple times, for example first in the client then the method, the middleware in the client will run first and the middleware given in the method will run next.&lt;/p&gt; 
&lt;p&gt;You may also replace the default &lt;code&gt;http.Client&lt;/code&gt; with &lt;code&gt;option.WithHTTPClient(client)&lt;/code&gt;. Only one http client is accepted (this overwrites any previous client) and receives requests after any middleware has been applied.&lt;/p&gt; 
&lt;h2&gt;Microsoft Azure OpenAI&lt;/h2&gt; 
&lt;p&gt;To use this library with &lt;a href=&quot;https://learn.microsoft.com/azure/ai-services/openai/overview&quot;&gt;Azure OpenAI&lt;/a&gt;, use the option.RequestOption functions in the &lt;code&gt;azure&lt;/code&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;package main

import (
	&quot;github.com/Azure/azure-sdk-for-go/sdk/azidentity&quot;
	&quot;github.com/openai/openai-go&quot;
	&quot;github.com/openai/openai-go/azure&quot;
)

func main() {
	const azureOpenAIEndpoint = &quot;https://&amp;lt;azure-openai-resource&amp;gt;.openai.azure.com&quot;

	// The latest API versions, including previews, can be found here:
	// https://learn.microsoft.com/en-us/azure/ai-services/openai/reference#rest-api-versioning
	const azureOpenAIAPIVersion = &quot;2024-06-01&quot;

	tokenCredential, err := azidentity.NewDefaultAzureCredential(nil)

	if err != nil {
		fmt.Printf(&quot;Failed to create the DefaultAzureCredential: %s&quot;, err)
		os.Exit(1)
	}

	client := openai.NewClient(
		azure.WithEndpoint(azureOpenAIEndpoint, azureOpenAIAPIVersion),

		// Choose between authenticating using a TokenCredential or an API Key
		azure.WithTokenCredential(tokenCredential),
		// or azure.WithAPIKey(azureOpenAIAPIKey),
	)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Semantic versioning&lt;/h2&gt; 
&lt;p&gt;This package generally follows &lt;a href=&quot;https://semver.org/spec/v2.0.0.html&quot;&gt;SemVer&lt;/a&gt; conventions, though certain backwards-incompatible changes may be released as minor versions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Changes to library internals which are technically public but not intended or documented for external use. &lt;em&gt;(Please open a GitHub issue to let us know if you are relying on such internals.)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Changes that we do not expect to impact the vast majority of users in practice.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We take backwards-compatibility seriously and work hard to ensure you can rely on a smooth upgrade experience.&lt;/p&gt; 
&lt;p&gt;We are keen for your feedback; please open an &lt;a href=&quot;https://www.github.com/openai/openai-go/issues&quot;&gt;issue&lt;/a&gt; with questions, bugs, or suggestions.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/CONTRIBUTING.md&quot;&gt;the contributing documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go-kratos/kratos</title>
      <link>https://github.com/go-kratos/kratos</link>
      <description>&lt;p&gt;Your ultimate Go microservices framework for the cloud-native era.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://go-kratos.dev/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/go-kratos/kratos/raw/main/docs/images/kratos-large.png?raw=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/go-kratos/kratos/actions&quot;&gt;&lt;img src=&quot;https://github.com/go-kratos/kratos/workflows/Go/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://pkg.go.dev/github.com/go-kratos/kratos/v2&quot;&gt;&lt;img src=&quot;https://pkg.go.dev/badge/github.com/go-kratos/kratos/v2&quot; alt=&quot;GoDoc&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/go-kratos/kratos&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/go-kratos/kratos/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codeCov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/go-kratos/kratos&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/go-kratos/kratos&quot; alt=&quot;Go Report Card&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/go-kratos/kratos/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/go-kratos/kratos&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/avelino/awesome-go&quot;&gt;&lt;img src=&quot;https://awesome.re/mentioned-badge.svg?sanitize=true&quot; alt=&quot;Awesome Go&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/BWzJsUJ&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/766619759214854164?label=chat&amp;amp;logo=discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.producthunt.com/posts/go-kratos?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-go-kratos&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=306565&amp;amp;theme=light&quot; alt=&quot;Go Kratos - A Go framework for microservices. | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h5&gt;Translate to: &lt;a href=&quot;https://raw.githubusercontent.com/go-kratos/kratos/main/README_zh.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/h5&gt; 
&lt;h2&gt;About Kratos&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The name is inspired by the Greek-mythology-based game &quot;God of War&quot;. It tells the adventures of Kratos becoming a god of war from a mortal and launching a god-killing slaughter.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Kratos is a microservice-oriented governance framework implemented by golang, which offers convenient capabilities to help you quickly build a bulletproof application from scratch, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://go-kratos.dev/en/docs/component/api&quot;&gt;communication protocol&lt;/a&gt; is based on the HTTP/gRPC through the definition of Protobuf.&lt;/li&gt; 
 &lt;li&gt;Abstract &lt;a href=&quot;https://go-kratos.dev/en/docs/component/transport/overview&quot;&gt;transport&lt;/a&gt; layer support: &lt;a href=&quot;https://go-kratos.dev/en/docs/component/transport/http&quot;&gt;HTTP&lt;/a&gt; / &lt;a href=&quot;https://go-kratos.dev/en/docs/component/transport/grpc&quot;&gt;gRPC&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Powerful &lt;a href=&quot;https://go-kratos.dev/en/docs/component/middleware/overview&quot;&gt;middleware&lt;/a&gt; design, support: &lt;a href=&quot;https://go-kratos.dev/en/docs/component/middleware/tracing&quot;&gt;Tracing (OpenTelemetry)&lt;/a&gt;, &lt;a href=&quot;https://go-kratos.dev/en/docs/component/middleware/metrics&quot;&gt;Metrics (Prometheus is default)&lt;/a&gt;, &lt;a href=&quot;https://go-kratos.dev/en/docs/component/middleware/recovery&quot;&gt;Recovery&lt;/a&gt; and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://go-kratos.dev/en/docs/component/registry&quot;&gt;Registry&lt;/a&gt; interface able to be connected with various other centralized registries through plug-ins.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://go-kratos.dev/en/docs/component/log&quot;&gt;standard log interfaces&lt;/a&gt; ease the integration of the third-party log libs with logs collected through the &lt;em&gt;Fluentd&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;Automatically support the selection of the content &lt;a href=&quot;https://go-kratos.dev/en/docs/component/encoding&quot;&gt;encoding&lt;/a&gt; with Accept and Content-Type.&lt;/li&gt; 
 &lt;li&gt;Multiple data sources are supported for &lt;a href=&quot;https://go-kratos.dev/en/docs/component/config&quot;&gt;configurations&lt;/a&gt; and dynamic configurations (use atomic operations).&lt;/li&gt; 
 &lt;li&gt;In the protocol of HTTP/gRPC, use the uniform &lt;a href=&quot;https://go-kratos.dev/en/docs/component/metadata&quot;&gt;metadata&lt;/a&gt; transfer method.&lt;/li&gt; 
 &lt;li&gt;You can define &lt;a href=&quot;https://go-kratos.dev/en/docs/component/errors/&quot;&gt;errors&lt;/a&gt; in protos and generate enums with protoc-gen-go.&lt;/li&gt; 
 &lt;li&gt;You can define &lt;a href=&quot;https://go-kratos.dev/en/docs/component/middleware/validate&quot;&gt;verification rules&lt;/a&gt; in Protobuf supported by the HTTP/gRPC service.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://go-kratos.dev/en/docs/guide/openapi&quot;&gt;Swagger API&lt;/a&gt; is generated Automatically and embed Swagger UI endpoint can be started by adding &lt;a href=&quot;https://github.com/go-kratos/swagger-api&quot;&gt;Swagger plugin&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Kratos is accessible, powerful, and provides tools required for large, robust applications.&lt;/p&gt; 
&lt;h2&gt;Learning Kratos&lt;/h2&gt; 
&lt;p&gt;Kratos has the most extensive and thorough &lt;a href=&quot;https://go-kratos.dev/en/docs/getting-started/start&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://github.com/go-kratos/examples&quot;&gt;example&lt;/a&gt; library of all modern web application frameworks, making it a breeze to get started with the framework.&lt;/p&gt; 
&lt;p&gt;We also provide a &lt;a href=&quot;https://github.com/go-kratos/kratos-layout&quot;&gt;modern template&lt;/a&gt;. This template should help reduce the work required to set up modern projects.&lt;/p&gt; 
&lt;h3&gt;Goals&lt;/h3&gt; 
&lt;p&gt;Kratos boosts your productivity. With the integration of excellent resources and further support, programmers can get rid of most issues might encounter in the field of distributed systems and software engineering such that they are allowed to focus on the release of businesses only. Additionally, for each programmer, Kratos is also an ideal one learning warehouse for many aspects of microservices to enrich their experiences and skills.&lt;/p&gt; 
&lt;h3&gt;Principles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: Appropriate design with plain and easy code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General&lt;/strong&gt;: Cover the various utilities for business development.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Highly efficient&lt;/strong&gt;: Speeding up the efficiency of businesses upgrading.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Stable&lt;/strong&gt;: The base libs validated in the production environment have the characteristics of high testability, high coverage as well as high security and reliability.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Robust&lt;/strong&gt;: Eliminating misusing through high quality of the base libs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High-performance&lt;/strong&gt;: Optimal performance excluding the optimization of hacking in case of &lt;em&gt;unsafe&lt;/em&gt;.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Expandability&lt;/strong&gt;: Properly designed interfaces where you can expand utilities such as base libs to meet your further requirements.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fault-tolerance&lt;/strong&gt;: Designed against failure, enhance the understanding and exercising of SRE within Kratos to achieve more robustness.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Toolchain&lt;/strong&gt;: Includes an extensive toolchain, such as the code generation of cache, the lint tool, and so forth.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Create a kratos playground through &lt;a href=&quot;https://www.docker.com/products/docker-desktop&quot;&gt;docker&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker run -it --rm -p 8000:8000 --workdir /workspace golang
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;apt-get update &amp;amp;&amp;amp; apt-get -y install protobuf-compiler
export GOPROXY=https://goproxy.io,direct
go install github.com/go-kratos/kratos/cmd/kratos/v2@latest &amp;amp;&amp;amp; kratos upgrade
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;kratos new helloworld
cd helloworld/ &amp;amp;&amp;amp; go mod tidy
kratos run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use a browser to open and visit: &lt;code&gt;http://localhost:8000/helloworld/kratos&lt;/code&gt;, The kratos program is running!&lt;/p&gt; 
&lt;p&gt;If you need more, please visit the kratos &lt;a href=&quot;https://go-kratos.dev/en/docs/getting-started/start&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security Vulnerabilities&lt;/h2&gt; 
&lt;p&gt;If you discover a security vulnerability within Kratos, please send an e-mail to tonybase via &lt;a href=&quot;mailto:go-kratos@googlegroups.com&quot;&gt;go-kratos@googlegroups.com&lt;/a&gt;. All security vulnerabilities will be promptly addressed.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/go-kratos/kratos/issues/682&quot;&gt;Wechat Group&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/BWzJsUJ&quot;&gt;Discord Group&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://go-kratos.dev/en&quot;&gt;go-kratos.dev&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thank you for considering contributing to the Kratos framework! The contribution guide can be found in the &lt;a href=&quot;https://go-kratos.dev/en/docs/community/contribution&quot;&gt;Kratos documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;a href=&quot;https://github.com/go-kratos/kratos/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=go-kratos/kratos&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Kratos framework is open-sourced software licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/go-kratos/kratos/main/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;The following project had particular influence on kratos&#39;s design.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/go-kit/kit&quot;&gt;go-kit/kit&lt;/a&gt; is a programming toolkit for building microservices in go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/asim/go-micro&quot;&gt;asim/go-micro&lt;/a&gt; a distributed systems development framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/google/go-cloud&quot;&gt;google/go-cloud&lt;/a&gt; is go cloud development kit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zeromicro/go-zero&quot;&gt;zeromicro/go-zero&lt;/a&gt; is a web and rpc framework with lots of builtin engineering practices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/beego/beego&quot;&gt;beego/beego&lt;/a&gt; is a web framework including RESTful APIs, web apps and backend services.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>gin-gonic/gin</title>
      <link>https://github.com/gin-gonic/gin</link>
      <description>&lt;p&gt;Gin is a HTTP web framework written in Go (Golang). It features a Martini-like API with much better performance -- up to 40 times faster. If you need smashing performance, get yourself some Gin.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gin Web Framework&lt;/h1&gt; 
&lt;img align=&quot;right&quot; width=&quot;159px&quot; src=&quot;https://raw.githubusercontent.com/gin-gonic/logo/master/color.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/gin-gonic/gin/actions?query=branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/gin-gonic/gin/workflows/Run%20Tests/badge.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/gin-gonic/gin&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/gin-gonic/gin/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/gin-gonic/gin&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/gin-gonic/gin&quot; alt=&quot;Go Report Card&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://pkg.go.dev/github.com/gin-gonic/gin?tab=doc&quot;&gt;&lt;img src=&quot;https://pkg.go.dev/badge/github.com/gin-gonic/gin?status.svg?sanitize=true&quot; alt=&quot;Go Reference&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sourcegraph.com/github.com/gin-gonic/gin?badge&quot;&gt;&lt;img src=&quot;https://sourcegraph.com/github.com/gin-gonic/gin/-/badge.svg?sanitize=true&quot; alt=&quot;Sourcegraph&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codetriage.com/gin-gonic/gin&quot;&gt;&lt;img src=&quot;https://www.codetriage.com/gin-gonic/gin/badges/users.svg?sanitize=true&quot; alt=&quot;Open Source Helpers&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/gin-gonic/gin/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/gin-gonic/gin.svg?style=flat-square&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.tickgit.com/browse?repo=github.com/gin-gonic/gin&quot;&gt;&lt;img src=&quot;https://badgen.net/https/api.tickgit.com/badgen/github.com/gin-gonic/gin&quot; alt=&quot;TODOs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Gin is a web framework written in &lt;a href=&quot;https://go.dev/&quot;&gt;Go&lt;/a&gt;. It features a martini-like API with performance that is up to 40 times faster thanks to &lt;a href=&quot;https://github.com/julienschmidt/httprouter&quot;&gt;httprouter&lt;/a&gt;. If you need performance and good productivity, you will love Gin.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gin&#39;s key features are:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Zero allocation router&lt;/li&gt; 
 &lt;li&gt;Speed&lt;/li&gt; 
 &lt;li&gt;Middleware support&lt;/li&gt; 
 &lt;li&gt;Crash-free&lt;/li&gt; 
 &lt;li&gt;JSON validation&lt;/li&gt; 
 &lt;li&gt;Route grouping&lt;/li&gt; 
 &lt;li&gt;Error management&lt;/li&gt; 
 &lt;li&gt;Built-in rendering&lt;/li&gt; 
 &lt;li&gt;Extensible&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;Gin requires &lt;a href=&quot;https://go.dev/&quot;&gt;Go&lt;/a&gt; version &lt;a href=&quot;https://go.dev/doc/devel/release#go1.22.0&quot;&gt;1.22&lt;/a&gt; or above.&lt;/p&gt; 
&lt;h3&gt;Getting Gin&lt;/h3&gt; 
&lt;p&gt;With &lt;a href=&quot;https://go.dev/wiki/Modules#how-to-use-modules&quot;&gt;Go&#39;s module support&lt;/a&gt;, &lt;code&gt;go [build|run|test]&lt;/code&gt; automatically fetches the necessary dependencies when you add the import in your code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;import &quot;github.com/gin-gonic/gin&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, use &lt;code&gt;go get&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;go get -u github.com/gin-gonic/gin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running Gin&lt;/h3&gt; 
&lt;p&gt;A basic example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;package main

import (
  &quot;net/http&quot;

  &quot;github.com/gin-gonic/gin&quot;
)

func main() {
  r := gin.Default()
  r.GET(&quot;/ping&quot;, func(c *gin.Context) {
    c.JSON(http.StatusOK, gin.H{
      &quot;message&quot;: &quot;pong&quot;,
    })
  })
  r.Run() // listen and serve on 0.0.0.0:8080 (for windows &quot;localhost:8080&quot;)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run the code, use the &lt;code&gt;go run&lt;/code&gt; command, like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ go run example.go
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href=&quot;http://0.0.0.0:8080/ping&quot;&gt;&lt;code&gt;0.0.0.0:8080/ping&lt;/code&gt;&lt;/a&gt; in your browser to see the response!&lt;/p&gt; 
&lt;h3&gt;See more examples&lt;/h3&gt; 
&lt;h4&gt;Quick Start&lt;/h4&gt; 
&lt;p&gt;Learn and practice with the &lt;a href=&quot;https://raw.githubusercontent.com/gin-gonic/gin/master/docs/doc.md&quot;&gt;Gin Quick Start&lt;/a&gt;, which includes API examples and builds tag.&lt;/p&gt; 
&lt;h4&gt;Examples&lt;/h4&gt; 
&lt;p&gt;A number of ready-to-run examples demonstrating various use cases of Gin are available in the &lt;a href=&quot;https://github.com/gin-gonic/examples&quot;&gt;Gin examples&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://pkg.go.dev/github.com/gin-gonic/gin&quot;&gt;API documentation on go.dev&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The documentation is also available on &lt;a href=&quot;https://gin-gonic.com&quot;&gt;gin-gonic.com&lt;/a&gt; in several languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gin-gonic.com/docs/&quot;&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gin-gonic.com/zh-cn/docs/&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gin-gonic.com/zh-tw/docs/&quot;&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gin-gonic.com/ja/docs/&quot;&gt;Êó•Êú¨Ë™û&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gin-gonic.com/es/docs/&quot;&gt;Espa√±ol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gin-gonic.com/ko-kr/docs/&quot;&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gin-gonic.com/tr/docs/&quot;&gt;Turkish&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gin-gonic.com/fa/docs/&quot;&gt;Persian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gin-gonic.com/pt/docs/&quot;&gt;Portugu√™s&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://go.dev/doc/tutorial/web-service-gin&quot;&gt;Tutorial: Developing a RESTful API with Go and Gin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;p&gt;Gin uses a custom version of &lt;a href=&quot;https://github.com/julienschmidt/httprouter&quot;&gt;HttpRouter&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/gin-gonic/gin/master/BENCHMARKS.md&quot;&gt;see all benchmarks&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Benchmark name&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;(1)&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;(2)&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;(3)&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;(4)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGin_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;43550&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;27364 ns/op&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;0 B/op&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;0 allocs/op&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkAce_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;40543&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;29670 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;0 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkAero_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;57632&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;20648 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;0 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkBear_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;9234&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;216179 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;86448 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;943 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkBeego_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;7407&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;243496 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;71456 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkBone_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;420&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2922835 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;720160 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;8620 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkChi_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;7620&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;238331 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;87696 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkDenco_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;18355&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;64494 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;20224 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;167 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkEcho_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;31251&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;38479 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;0 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGocraftWeb_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;4117&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;300062 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;131656 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;1686 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGoji_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;3274&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;416158 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;56112 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;334 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGojiv2_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;1402&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;870518 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;352720 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;4321 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGoJsonRest_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2976&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;401507 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;134371 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2737 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGoRestful_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;410&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2913158 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;910144 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2938 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGorillaMux_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;346&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;3384987 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;251650 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;1994 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGowwwRouter_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;10000&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;143025 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;72144 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;501 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkHttpRouter_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;55938&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;21360 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;0 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkHttpTreeMux_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;10000&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;153944 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;65856 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;671 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkKocha_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;10000&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;106315 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;23304 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;843 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkLARS_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;47779&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;25084 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;0 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkMacaron_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;3266&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;371907 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;149409 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;1624 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkMartini_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;331&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;3444706 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;226551 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2325 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkPat_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;273&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;4381818 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;1483152 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;26963 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkPossum_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;10000&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;164367 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;84448 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkR2router_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;10000&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;160220 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;77328 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;979 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkRivet_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;14625&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;82453 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;16272 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;167 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkTango_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;6255&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;279611 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;63826 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;1618 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkTigerTonic_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2008&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;687874 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;193856 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;4474 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkTraffic_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;355&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;3478508 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;820744 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;14114 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkVulcan_GithubAll&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;6885&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;193333 ns/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;19894 B/op&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;(1): Total Repetitions achieved in constant time, higher means more confident result&lt;/li&gt; 
 &lt;li&gt;(2): Single Repetition Duration (ns/op), lower is better&lt;/li&gt; 
 &lt;li&gt;(3): Heap Memory (B/op), lower is better&lt;/li&gt; 
 &lt;li&gt;(4): Average Allocations per Repetition (allocs/op), lower is better&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Middleware&lt;/h2&gt; 
&lt;p&gt;You can find many useful Gin middlewares at &lt;a href=&quot;https://github.com/gin-contrib&quot;&gt;gin-contrib&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Uses&lt;/h2&gt; 
&lt;p&gt;Here are some awesome projects that are using the &lt;a href=&quot;https://github.com/gin-gonic/gin&quot;&gt;Gin&lt;/a&gt; web framework.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/appleboy/gorush&quot;&gt;gorush&lt;/a&gt;: A push notification server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fnproject/fn&quot;&gt;fnproject&lt;/a&gt;: A container native, cloud agnostic serverless platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/photoprism/photoprism&quot;&gt;photoprism&lt;/a&gt;: Personal photo management powered by Google TensorFlow.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/luraproject/lura&quot;&gt;lura&lt;/a&gt;: Ultra performant API Gateway with middleware.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thoas/picfit&quot;&gt;picfit&lt;/a&gt;: An image resizing server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/distribworks/dkron&quot;&gt;dkron&lt;/a&gt;: Distributed, fault tolerant job scheduling system.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Gin is the work of hundreds of contributors. We appreciate your help!&lt;/p&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://raw.githubusercontent.com/gin-gonic/gin/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for details on submitting patches and the contribution workflow.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ray-project/kuberay</title>
      <link>https://github.com/ray-project/kuberay</link>
      <description>&lt;p&gt;A toolkit to run Ray applications on Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KubeRay&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ray-project/kuberay/actions&quot;&gt;&lt;img src=&quot;https://github.com/ray-project/kuberay/workflows/Go-build-and-test/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/ray-project/kuberay&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/ray-project/kuberay&quot; alt=&quot;Go Report Card&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;KubeRay is a powerful, open-source Kubernetes operator that simplifies the deployment and management of &lt;a href=&quot;https://github.com/ray-project/ray&quot;&gt;Ray&lt;/a&gt; applications on Kubernetes. It offers several key components:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;KubeRay core&lt;/strong&gt;: This is the official, fully-maintained component of KubeRay that provides three custom resource definitions, RayCluster, RayJob, and RayService. These resources are designed to help you run a wide range of workloads with ease.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;RayCluster&lt;/strong&gt;: KubeRay fully manages the lifecycle of RayCluster, including cluster creation/deletion, autoscaling, and ensuring fault tolerance.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;RayJob&lt;/strong&gt;: With RayJob, KubeRay automatically creates a RayCluster and submits a job when the cluster is ready. You can also configure RayJob to automatically delete the RayCluster once the job finishes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;RayService&lt;/strong&gt;: RayService is made up of two parts: a RayCluster and a Ray Serve deployment graph. RayService offers zero-downtime upgrades for RayCluster and high availability.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Community-managed components (optional)&lt;/strong&gt;: Some components are maintained by the KubeRay community.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;KubeRay APIServer&lt;/strong&gt;: It provides a layer of simplified configuration for KubeRay resources. The KubeRay API server is used internally by some organizations to back user interfaces for KubeRay resource management.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;KubeRay Python client&lt;/strong&gt;: This Python client library provides APIs to handle RayCluster from your Python application.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;From September 2023, all user-facing KubeRay documentation will be hosted on the &lt;a href=&quot;https://docs.ray.io/en/latest/cluster/kubernetes/index.html&quot;&gt;Ray documentation&lt;/a&gt;. The KubeRay repository only contains documentation related to the development and maintenance of KubeRay.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/getting-started/raycluster-quick-start.html&quot;&gt;RayCluster Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/getting-started/rayjob-quick-start.html&quot;&gt;RayJob Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/getting-started/rayservice-quick-start.html&quot;&gt;RayService Quickstart&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/examples/ml-example.html#kuberay-ml-example&quot;&gt;Ray Train XGBoostTrainer on Kubernetes&lt;/a&gt; (CPU-only)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/examples/gpu-training-example.html#kuberay-gpu-training-example&quot;&gt;Train PyTorch ResNet model with GPUs on Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/examples/mobilenet-rayservice.html#kuberay-mobilenet-rayservice-example&quot;&gt;Serve a MobileNet image classifier on Kubernetes&lt;/a&gt; (CPU-only)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/examples/stable-diffusion-rayservice.html#kuberay-stable-diffusion-rayservice-example&quot;&gt;Serve a StableDiffusion text-to-image model on Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/examples/text-summarizer-rayservice.html#kuberay-text-summarizer-rayservice-example&quot;&gt;Serve a text summarizer on Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/examples/rayjob-batch-inference-example.html#kuberay-batch-inference-example&quot;&gt;RayJob Batch Inference Example&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Kubernetes Ecosystem&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/k8s-ecosystem/ingress.html#kuberay-ingress&quot;&gt;Ingress: AWS Application Load Balancer, GKE Ingress, Nginx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/k8s-ecosystem/prometheus-grafana.html#kuberay-prometheus-grafana&quot;&gt;Using Prometheus and Grafana&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/k8s-ecosystem/pyspy.html#kuberay-pyspy-integration&quot;&gt;Profiling with py-spy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/k8s-ecosystem/volcano.html#kuberay-volcano&quot;&gt;KubeRay integration with Volcano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ray.io/en/master/cluster/kubernetes/k8s-ecosystem/kubeflow.html#kuberay-kubeflow-integration&quot;&gt;Kubeflow: an interactive development solution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ray-project/kuberay/raw/master/docs/guidance/kuberay-with-MCAD.md&quot;&gt;MCAD: A Kubernetes Solution for Queuing and Gang Dispatching jobs on Single or Multi-Cluster environment&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;External Blog Posts&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nianticlabs.com/news/ray&quot;&gt;Evolving Niantic AR Mapping Infrastructures with Ray&lt;/a&gt; Niantic (September 6, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.samsara.com/blog/building-a-modern-machine-learning-platform-with-ray&quot;&gt;Building a Modern Machine Learning Platform with Ray at Samsara&lt;/a&gt; Samsara (August 29, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/blog/products/containers-kubernetes/use-ray-on-kubernetes-with-kuberay&quot;&gt;Using Ray on Kubernetes with KubeRay at Google Cloud&lt;/a&gt; Google (August 15, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doordash.engineering/2023/06/20/how-doordash-built-an-ensemble-learning-model-for-time-series-forecasting/&quot;&gt;How DoorDash Built an Ensemble Learning Model for Time Series Forecasting with KubeRay&lt;/a&gt; Doordash (June 20, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloud.redhat.com/blog/ai/ml-models-batch-training-at-scale-with-open-data-hub&quot;&gt;AI/ML Models Batch Training at Scale with Open Data Hub&lt;/a&gt; Red Hat (May 15, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://research.ibm.com/blog/openshift-foundation-model-stack&quot;&gt;A cloud-native, open-source stack for accelerating foundation model innovation&lt;/a&gt; IBM (May 9, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.instacart.com/distributed-machine-learning-at-instacart-4b11d7569423&quot;&gt;Distributed Machine Learning at Instacart&lt;/a&gt; Instacart (March 17, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.atspotify.com/2023/02/unleashing-ml-innovation-at-spotify-with-ray/&quot;&gt;Unleashing ML Innovation at Spotify with Ray&lt;/a&gt; Spotify (February 1, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.alibabacloud.com/blog/best-practices-for-ray-clusters---ray-on-ack_600925&quot;&gt;Best Practices For Ray Cluster On ACK&lt;/a&gt; Alibaba Cloud (Mar 12, 2024)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Talks&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/DgfJR6wR4BQ?si=QuK3j7VEkteSwglA&quot;&gt;Supercharge Your AI Platform with KubeRay&lt;/a&gt; Anyscale + Google (November 8, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Q-sQLDMeJ8M&quot;&gt;Sailing Ray Workloads with KubeRay and Kueue in Kubernetes&lt;/a&gt; Volcano + DaoCloud (October 17, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raysummit.anyscale.com/agenda/sessions/135&quot;&gt;Serving Large Language Models with KubeRay on TPUs&lt;/a&gt; Google (September 19, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raysummit.anyscale.com/agenda/sessions/184&quot;&gt;KubeRay: A Ray Cluster Management Solution on Kubernetes&lt;/a&gt; Anyscale (September 18, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raysummit.anyscale.com/agenda/sessions/140&quot;&gt;The Different Shades of using KubeRay with Kubernetes&lt;/a&gt; Microsoft (September 18, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raysummit.anyscale.com/agenda/sessions/164&quot;&gt;On-Demand Ray Clusters in ML Workflows via KubeRay &amp;amp; Sematic&lt;/a&gt; Sematic (September 18, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=tMEwSAeC1jo&quot;&gt;KubeRay - A Kubernetes Ray Clustering Solution&lt;/a&gt; Microsoft (February 8, 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=RmGynLp5u4Q&quot;&gt;KubeRay x Flyte Integration&lt;/a&gt; Flyte (August 24, 2022)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/NekkpRrcAWg?si=bpX7z64AuZiM_iUv&quot;&gt;Operationalizing Ray Serve on Kubernetes&lt;/a&gt; Anyscale (August 24, 2022)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Helm Charts&lt;/h2&gt; 
&lt;p&gt;KubeRay Helm charts are hosted on the &lt;a href=&quot;https://github.com/ray-project/kuberay-helm&quot;&gt;ray-project/kuberay-helm&lt;/a&gt; repository. Please read &lt;a href=&quot;https://raw.githubusercontent.com/ray-project/kuberay/master/helm-chart/kuberay-operator/README.md&quot;&gt;kuberay-operator&lt;/a&gt; to deploy the operator and &lt;a href=&quot;https://raw.githubusercontent.com/ray-project/kuberay/master/helm-chart/ray-cluster/README.md&quot;&gt;ray-cluster&lt;/a&gt; to deploy a configurable Ray cluster. To deploy the optional KubeRay API Server, see &lt;a href=&quot;https://raw.githubusercontent.com/ray-project/kuberay/master/helm-chart/kuberay-apiserver/README.md&quot;&gt;kuberay-apiserver&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Add the Helm repo
helm repo add kuberay https://ray-project.github.io/kuberay-helm/
helm repo update

# Confirm the repo exists
helm search repo kuberay --devel

# Install both CRDs and KubeRay operator v1.1.0.
helm install kuberay-operator kuberay/kuberay-operator --version 1.1.0

# Check the KubeRay operator Pod in `default` namespace
kubectl get pods
# NAME                                READY   STATUS    RESTARTS   AGE
# kuberay-operator-6fcbb94f64-mbfnr   1/1     Running   0          17s
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Please read our &lt;a href=&quot;https://raw.githubusercontent.com/ray-project/kuberay/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; guide before making a pull request. Refer to our &lt;a href=&quot;https://raw.githubusercontent.com/ray-project/kuberay/master/ray-operator/DEVELOPMENT.md&quot;&gt;DEVELOPMENT&lt;/a&gt; to build and run tests locally.&lt;/p&gt; 
&lt;h2&gt;Getting Involved&lt;/h2&gt; 
&lt;p&gt;Join &lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSfAcoiLCHOguOm8e7Jnn-JJdZaCxPGjgVCvFijHB5PLaQLeig/viewform&quot;&gt;Ray&#39;s Slack workspace&lt;/a&gt;, and search the following public channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;#kuberay-questions&lt;/code&gt; (KubeRay users): This channel aims to help KubeRay users with their questions. The messages will be closely monitored by the Ray and KubeRay maintainers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;#kuberay-discuss&lt;/code&gt; (KubeRay contributors): This channel is for contributors to discuss what to do next with KubeRay (e.g. issues, pull requests, feature requests, design docs, KubeRay ecosystem integrations). All KubeRay maintainers and core contributors are in the channel.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you discover a potential security issue in this project, or think you may have discovered a security issue, we ask that you notify KubeRay Security via our &lt;a href=&quot;https://ray-distributed.slack.com/archives/C02GFQ82JPM&quot;&gt;Slack Channel&lt;/a&gt;. Please do &lt;strong&gt;not&lt;/strong&gt; create a public GitHub issue.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/ray-project/kuberay/master/LICENSE&quot;&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>grafana/loki</title>
      <link>https://github.com/grafana/loki</link>
      <description>&lt;p&gt;Like Prometheus, but for logs.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/grafana/loki/main/docs/sources/logo_and_name.png&quot; alt=&quot;Loki Logo&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://drone.grafana.net/grafana/loki&quot;&gt;&lt;img src=&quot;https://drone.grafana.net/api/badges/grafana/loki/status.svg?sanitize=true&quot; alt=&quot;Drone CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/grafana/loki&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/grafana/loki&quot; alt=&quot;Go Report Card&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://slack.grafana.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/join%20slack-%23loki-brightgreen.svg?sanitize=true&quot; alt=&quot;Slack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:loki&quot;&gt;&lt;img src=&quot;https://oss-fuzz-build-logs.storage.googleapis.com/badges/loki.svg?sanitize=true&quot; alt=&quot;Fuzzing Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Loki: like Prometheus, but for logs.&lt;/h1&gt; 
&lt;p&gt;Loki is a horizontally-scalable, highly-available, multi-tenant log aggregation system inspired by &lt;a href=&quot;https://prometheus.io/&quot;&gt;Prometheus&lt;/a&gt;. It is designed to be very cost effective and easy to operate. It does not index the contents of the logs, but rather a set of labels for each log stream.&lt;/p&gt; 
&lt;p&gt;Compared to other log aggregation systems, Loki:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;does not do full text indexing on logs. By storing compressed, unstructured logs and only indexing metadata, Loki is simpler to operate and cheaper to run.&lt;/li&gt; 
 &lt;li&gt;indexes and groups log streams using the same labels you‚Äôre already using with Prometheus, enabling you to seamlessly switch between metrics and logs using the same labels that you‚Äôre already using with Prometheus.&lt;/li&gt; 
 &lt;li&gt;is an especially good fit for storing &lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt; Pod logs. Metadata such as Pod labels is automatically scraped and indexed.&lt;/li&gt; 
 &lt;li&gt;has native support in Grafana (needs Grafana v6.0).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A Loki-based logging stack consists of 3 components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;promtail&lt;/code&gt; is the agent, responsible for gathering logs and sending them to Loki.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;loki&lt;/code&gt; is the main server, responsible for storing logs and processing queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/grafana/grafana&quot;&gt;Grafana&lt;/a&gt; for querying and displaying the logs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note that Promtail is considered to be feature complete, and future development for logs collection will be in &lt;a href=&quot;https://github.com/grafana/alloy&quot;&gt;Grafana Alloy&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Loki is like Prometheus, but for logs: we prefer a multidimensional label-based approach to indexing, and want a single-binary, easy to operate system with no dependencies. Loki differs from Prometheus by focusing on logs instead of metrics, and delivering logs via push, instead of pull.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/installation/&quot;&gt;Installing Loki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/clients/promtail/installation/&quot;&gt;Installing Promtail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/get-started/&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/upgrading/&quot;&gt;Upgrading Loki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/&quot;&gt;Latest release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/next/&quot;&gt;Upcoming release&lt;/a&gt;, at the tip of the main branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Commonly used sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/api/&quot;&gt;API documentation&lt;/a&gt; for getting logs into Loki.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/getting-started/labels/&quot;&gt;Labels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/operations/&quot;&gt;Operations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/clients/promtail/&quot;&gt;Promtail&lt;/a&gt; is an agent which tails log files and pushes them to Loki.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/clients/promtail/pipelines/&quot;&gt;Pipelines&lt;/a&gt; details the log processing pipeline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/clients/docker-driver/&quot;&gt;Docker Driver Client&lt;/a&gt; is a Docker plugin to send logs directly to Loki from Docker containers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/query/logcli/&quot;&gt;LogCLI&lt;/a&gt; provides a command-line interface for querying logs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/operations/loki-canary/&quot;&gt;Loki Canary&lt;/a&gt; monitors your Loki installation for missing logs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/operations/troubleshooting/&quot;&gt;Troubleshooting&lt;/a&gt; presents help dealing with error messages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/loki/latest/operations/grafana/&quot;&gt;Loki in Grafana&lt;/a&gt; describes how to set up a Loki datasource in Grafana.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;p&gt;If you have any questions or feedback regarding Loki:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search existing thread in the Grafana Labs community forum for Loki: &lt;a href=&quot;https://community.grafana.com/c/grafana-loki/&quot;&gt;https://community.grafana.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ask a question on the Loki Slack channel. To invite yourself to the Grafana Slack, visit &lt;a href=&quot;https://slack.grafana.com/&quot;&gt;https://slack.grafana.com/&lt;/a&gt; and join the #loki channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/grafana/loki/issues/new&quot;&gt;File an issue&lt;/a&gt; for bugs, issues and feature suggestions.&lt;/li&gt; 
 &lt;li&gt;Send an email to &lt;a href=&quot;mailto:lokiproject@googlegroups.com&quot;&gt;lokiproject@googlegroups.com&lt;/a&gt;, or use the &lt;a href=&quot;https://groups.google.com/forum/#!forum/lokiproject&quot;&gt;web interface&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;UI issues should be filed directly in &lt;a href=&quot;https://github.com/grafana/grafana/issues/new&quot;&gt;Grafana&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your feedback is always welcome.&lt;/p&gt; 
&lt;h2&gt;Further Reading&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The original &lt;a href=&quot;https://docs.google.com/document/d/11tjK_lvp1-SVsFZjgOTr1vV3-q6vBAsZYIQ5ZeYBkyM/view&quot;&gt;design doc&lt;/a&gt; for Loki is a good source for discussion of the motivation and design decisions.&lt;/li&gt; 
 &lt;li&gt;Callum Styan&#39;s March 2019 DevOpsDays Vancouver talk &quot;&lt;a href=&quot;https://grafana.com/blog/2019/05/06/how-loki-correlates-metrics-and-logs--and-saves-you-money/&quot;&gt;Grafana Loki: Log Aggregation for Incident Investigations&lt;/a&gt;&quot;.&lt;/li&gt; 
 &lt;li&gt;Grafana Labs blog post &quot;&lt;a href=&quot;https://grafana.com/blog/2019/04/15/how-we-designed-loki-to-work-easily-both-as-microservices-and-as-monoliths/&quot;&gt;How We Designed Loki to Work Easily Both as Microservices and as Monoliths&lt;/a&gt;&quot;.&lt;/li&gt; 
 &lt;li&gt;Tom Wilkie&#39;s early-2019 CNCF Paris/FOSDEM talk &quot;&lt;a href=&quot;https://fosdem.org/2019/schedule/event/loki_prometheus_for_logs/&quot;&gt;Grafana Loki: like Prometheus, but for logs&lt;/a&gt;&quot; (&lt;a href=&quot;https://speakerdeck.com/grafana/grafana-loki-like-prometheus-but-for-logs&quot;&gt;slides&lt;/a&gt;, &lt;a href=&quot;https://mirror.as35701.net/video.fosdem.org/2019/UB2.252A/loki_prometheus_for_logs.mp4&quot;&gt;video&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;David Kaltschmidt&#39;s KubeCon 2018 talk &quot;&lt;a href=&quot;https://kccna18.sched.com/event/GrXC/on-the-oss-path-to-full-observability-with-grafana-david-kaltschmidt-grafana-labs&quot;&gt;On the OSS Path to Full Observability with Grafana&lt;/a&gt;&quot; (&lt;a href=&quot;https://speakerdeck.com/davkal/on-the-path-to-full-observability-with-oss-and-launch-of-loki&quot;&gt;slides&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=U7C5SpRtK74&amp;amp;list=PLj6h78yzYM2PZf9eA7bhWnIh_mK1vyOfU&amp;amp;index=346&quot;&gt;video&lt;/a&gt;) on how Loki fits into a cloud-native environment.&lt;/li&gt; 
 &lt;li&gt;Goutham Veeramachaneni&#39;s blog post &quot;&lt;a href=&quot;https://grafana.com/blog/2018/12/12/loki-prometheus-inspired-open-source-logging-for-cloud-natives/&quot;&gt;Loki: Prometheus-inspired, open source logging for cloud natives&lt;/a&gt;&quot; on details of the Loki architecture.&lt;/li&gt; 
 &lt;li&gt;David Kaltschmidt&#39;s blog post &quot;&lt;a href=&quot;https://grafana.com/blog/2019/01/02/closer-look-at-grafanas-user-interface-for-loki/&quot;&gt;Closer look at Grafana&#39;s user interface for Loki&lt;/a&gt;&quot; on the ideas that went into the logging user interface.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href=&quot;https://raw.githubusercontent.com/grafana/loki/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Building from source&lt;/h3&gt; 
&lt;p&gt;Loki can be run in a single host, no-dependencies mode using the following commands.&lt;/p&gt; 
&lt;p&gt;You need &lt;code&gt;go&lt;/code&gt;, we recommend using the version found in &lt;a href=&quot;https://github.com/grafana/loki/raw/main/loki-build-image/Dockerfile&quot;&gt;our build Dockerfile&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;
$ go get github.com/grafana/loki
$ cd $GOPATH/src/github.com/grafana/loki # GOPATH is $HOME/go by default.

$ go build ./cmd/loki
$ ./loki -config.file=./cmd/loki/loki-local-config.yaml
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build Promtail on non-Linux platforms, use the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ go build ./clients/cmd/promtail
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On Linux, Promtail requires the systemd headers to be installed if Journal support is enabled. To enable Journal support the go build tag flag &lt;code&gt;promtail_journal_enabled&lt;/code&gt; should be passed&lt;/p&gt; 
&lt;p&gt;With Journal support on Ubuntu, run with the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ sudo apt install -y libsystemd-dev
$ go build --tags=promtail_journal_enabled ./clients/cmd/promtail
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With Journal support on CentOS, run with the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ sudo yum install -y systemd-devel
$ go build --tags=promtail_journal_enabled ./clients/cmd/promtail
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Otherwise, to build Promtail without Journal support, run &lt;code&gt;go build&lt;/code&gt; with CGO disabled:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ CGO_ENABLED=0 go build ./clients/cmd/promtail
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://raw.githubusercontent.com/grafana/loki/main/ADOPTERS.md&quot;&gt;ADOPTERS.md&lt;/a&gt; for some of the organizations using Loki today. If you would like to add your organization to the list, please open a PR to add it to the list.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Grafana Loki is distributed under &lt;a href=&quot;https://raw.githubusercontent.com/grafana/loki/main/LICENSE&quot;&gt;AGPL-3.0-only&lt;/a&gt;. For Apache-2.0 exceptions, see &lt;a href=&quot;https://raw.githubusercontent.com/grafana/loki/main/LICENSING.md&quot;&gt;LICENSING.md&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>istio/istio</title>
      <link>https://github.com/istio/istio</link>
      <description>&lt;p&gt;Connect, secure, control, and observe services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Istio&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/1395&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/1395/badge&quot; alt=&quot;CII Best Practices&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/istio/istio&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/istio/istio&quot; alt=&quot;Go Report Card&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://godoc.org/istio.io/istio&quot;&gt;&lt;img src=&quot;https://godoc.org/istio.io/istio?status.svg?sanitize=true&quot; alt=&quot;GoDoc&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;a href=&quot;https://istio.io/&quot;&gt; &lt;img src=&quot;https://github.com/istio/istio/raw/master/logo/istio-bluelogo-whitebackground-unframed.svg?sanitize=true&quot; alt=&quot;Istio logo&quot; title=&quot;Istio&quot; height=&quot;100&quot; width=&quot;100&quot;&gt; &lt;/a&gt; 
&lt;hr&gt; 
&lt;p&gt;Istio is an open source service mesh that layers transparently onto existing distributed applications. Istio‚Äôs powerful features provide a uniform and more efficient way to secure, connect, and monitor services. Istio is the path to load balancing, service-to-service authentication, and monitoring ‚Äì with few or no service code changes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For in-depth information about how to use Istio, visit &lt;a href=&quot;https://istio.io&quot;&gt;istio.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;To ask questions and get assistance from our community, visit &lt;a href=&quot;https://github.com/istio/istio/discussions&quot;&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;To learn how to participate in our overall community, visit &lt;a href=&quot;https://istio.io/about/community&quot;&gt;our community page&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In this README:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/istio/istio/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/istio/istio/master/#repositories&quot;&gt;Repositories&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/istio/istio/master/#issue-management&quot;&gt;Issue management&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In addition, here are some other documents you may wish to read:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/istio/community#istio-community&quot;&gt;Istio Community&lt;/a&gt; - describes how to get involved and contribute to the Istio project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/istio/istio/wiki/Preparing-for-Development&quot;&gt;Istio Developer&#39;s Guide&lt;/a&gt; - explains how to set up and use an Istio development environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/istio/istio/wiki/Development-Conventions&quot;&gt;Project Conventions&lt;/a&gt; - describes the conventions we use within the code base&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/istio/istio/wiki/Writing-Fast-and-Lean-Code&quot;&gt;Creating Fast and Lean Code&lt;/a&gt; - performance-oriented advice and guidelines for the code base&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You&#39;ll find many other useful documents on our &lt;a href=&quot;https://github.com/istio/istio/wiki&quot;&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://istio.io/latest/docs/concepts/what-is-istio/&quot;&gt;Istio&lt;/a&gt; is an open platform for providing a uniform way to &lt;a href=&quot;https://istio.io/latest/docs/examples/microservices-istio/&quot;&gt;integrate microservices&lt;/a&gt;, manage &lt;a href=&quot;https://istio.io/latest/docs/concepts/traffic-management/&quot;&gt;traffic flow&lt;/a&gt; across microservices, enforce policies and aggregate telemetry data. Istio&#39;s control plane provides an abstraction layer over the underlying cluster management platform, such as Kubernetes.&lt;/p&gt; 
&lt;p&gt;Istio is composed of these components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Envoy&lt;/strong&gt; - Sidecar proxies per microservice to handle ingress/egress traffic between services in the cluster and from a service to external services. The proxies form a &lt;em&gt;secure microservice mesh&lt;/em&gt; providing a rich set of functions like discovery, rich layer-7 routing, circuit breakers, policy enforcement and telemetry recording/reporting functions.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Note: The service mesh is not an overlay network. It simplifies and enhances how microservices in an application talk to each other over the network provided by the underlying platform.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Istiod&lt;/strong&gt; - The Istio control plane. It provides service discovery, configuration and certificate management. It consists of the following sub-components:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pilot&lt;/strong&gt; - Responsible for configuring the proxies at runtime.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Citadel&lt;/strong&gt; - Responsible for certificate issuance and rotation.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Galley&lt;/strong&gt; - Responsible for validating, ingesting, aggregating, transforming and distributing config within Istio.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Operator&lt;/strong&gt; - The component provides user friendly options to operate the Istio service mesh.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repositories&lt;/h2&gt; 
&lt;p&gt;The Istio project is divided across a few GitHub repositories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/istio/api&quot;&gt;istio/api&lt;/a&gt;. This repository defines component-level APIs and common configuration formats for the Istio platform.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/istio/community&quot;&gt;istio/community&lt;/a&gt;. This repository contains information on the Istio community, including the various documents that govern the Istio open source project.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/istio/istio/master/README.md&quot;&gt;istio/istio&lt;/a&gt;. This is the main code repository. It hosts Istio&#39;s core components, install artifacts, and sample programs. It includes:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/istio/istio/master/istioctl/&quot;&gt;istioctl&lt;/a&gt;. This directory contains code for the &lt;a href=&quot;https://istio.io/latest/docs/reference/commands/istioctl/&quot;&gt;&lt;em&gt;istioctl&lt;/em&gt;&lt;/a&gt; command line utility.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/istio/istio/master/pilot/&quot;&gt;pilot&lt;/a&gt;. This directory contains platform-specific code to populate the &lt;a href=&quot;https://istio.io/docs/concepts/traffic-management/#pilot&quot;&gt;abstract service model&lt;/a&gt;, dynamically reconfigure the proxies when the application topology changes, as well as translate &lt;a href=&quot;https://istio.io/latest/docs/reference/config/networking/&quot;&gt;routing rules&lt;/a&gt; into proxy specific configuration.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/istio/istio/master/security/&quot;&gt;security&lt;/a&gt;. This directory contains &lt;a href=&quot;https://istio.io/latest/docs/concepts/security/&quot;&gt;security&lt;/a&gt; related code, including Citadel (acting as Certificate Authority), citadel agent, etc.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/istio/proxy&quot;&gt;istio/proxy&lt;/a&gt;. The Istio proxy contains extensions to the &lt;a href=&quot;https://github.com/envoyproxy/envoy&quot;&gt;Envoy proxy&lt;/a&gt; (in the form of Envoy filters) that support authentication, authorization, and telemetry collection.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/istio/ztunnel&quot;&gt;istio/ztunnel&lt;/a&gt;. The repository contains the Rust implementation of the ztunnel component of Ambient mesh.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/istio/client-go&quot;&gt;istio/client-go&lt;/a&gt;. This repository defines auto-generated Kubernetes clients for interacting with Istio resources programmatically.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Only the &lt;code&gt;istio/api&lt;/code&gt; and &lt;code&gt;istio/client-go&lt;/code&gt; repositories expose stable interfaces intended for direct usage as libraries.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Issue management&lt;/h2&gt; 
&lt;p&gt;We use GitHub to track all of our bugs and feature requests. Each issue we track has a variety of metadata:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Epic&lt;/strong&gt;. An epic represents a feature area for Istio as a whole. Epics are fairly broad in scope and are basically product-level things. Each issue is ultimately part of an epic.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Milestone&lt;/strong&gt;. Each issue is assigned a milestone. This is 0.1, 0.2, ..., or &#39;Nebulous Future&#39;. The milestone indicates when we think the issue should get addressed.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Priority&lt;/strong&gt;. Each issue has a priority which is represented by the column in the &lt;a href=&quot;https://github.com/orgs/istio/projects/6&quot;&gt;Prioritization&lt;/a&gt; project. Priority can be one of P0, P1, P2, or &amp;gt;P2. The priority indicates how important it is to address the issue within the milestone. P0 says that the milestone cannot be considered achieved if the issue isn&#39;t resolved.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/cncf/artwork/master/other/cncf/horizontal/color/cncf-color.svg?sanitize=true&quot; width=&quot;300&quot; alt=&quot;Cloud Native Computing Foundation logo&quot;&gt; 
 &lt;p&gt;Istio is a &lt;a href=&quot;https://cncf.io&quot;&gt;Cloud Native Computing Foundation&lt;/a&gt; project.&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>nezhahq/nezha</title>
      <link>https://github.com/nezhahq/nezha</link>
      <description>&lt;p&gt;Self-hosted, lightweight server and website monitoring and O&amp;M tool&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;br&gt; 
 &lt;img width=&quot;360&quot; style=&quot;max-width:80%&quot; src=&quot;https://raw.githubusercontent.com/nezhahq/nezha/master/.github/brand.svg?sanitize=true&quot; title=&quot;Âì™ÂêíÁõëÊéß Nezha Monitoring&quot;&gt; 
 &lt;br&gt; 
 &lt;small&gt;&lt;i&gt;LOGO designed by &lt;a href=&quot;https://xio.ng&quot; target=&quot;_blank&quot;&gt;ÁÜäÂ§ß&lt;/a&gt; .&lt;/i&gt;&lt;/small&gt; 
 &lt;br&gt;
 &lt;br&gt; 
 &lt;img alt=&quot;GitHub release (with filter)&quot; src=&quot;https://img.shields.io/github/v/release/nezhahq/nezha?color=brightgreen&amp;amp;style=for-the-badge&amp;amp;logo=github&amp;amp;label=Dashboard&quot;&gt;&amp;nbsp;
 &lt;img src=&quot;https://img.shields.io/github/v/release/nezhahq/agent?color=brightgreen&amp;amp;label=Agent&amp;amp;style=for-the-badge&amp;amp;logo=github&quot;&gt;&amp;nbsp;
 &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/nezhahq/agent/agent.yml?label=Agent%20CI&amp;amp;logo=github&amp;amp;style=for-the-badge&quot;&gt;&amp;nbsp;
 &lt;a href=&quot;https://hosted.weblate.org/engage/nezha/&quot;&gt;&lt;img src=&quot;https://img.shields.io/weblate/progress/nezha?color=brightgreen&amp;amp;label=Translated&amp;amp;style=for-the-badge&amp;amp;logo=weblate&quot; alt=&quot;Translation status&quot;&gt;&lt;/a&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;img alt=&quot;trollface&quot; src=&quot;https://github.githubassets.com/images/icons/emoji/trollface.png?v8&quot;&gt;) &lt;b&gt;Nezha Monitoring: Self-hostable, lightweight, servers and websites monitoring and O&amp;amp;M tool.&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;Supports &lt;b&gt;monitoring&lt;/b&gt; system status, HTTP (SSL certificate change, upcoming expiration, expired), TCP, Ping and supports &lt;b&gt;push alerts&lt;/b&gt;, run scheduled tasks and &lt;b&gt;web terminal&lt;/b&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;gt;&amp;gt; Telegram Channel: &lt;a href=&quot;https://t.me/nezhanews&quot;&gt;Âì™ÂêíÁõëÊéßÔºà‰∏≠ÊñáÈÄöÁü•È¢ëÈÅìÔºâ&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;gt;&amp;gt; Telegram Group: &lt;a href=&quot;https://t.me/nezhamonitoring_global&quot;&gt;Nezha Monitoring Global (English Only)&lt;/a&gt;, &lt;a href=&quot;https://t.me/nezhamonitoring&quot;&gt;Âì™ÂêíÁõëÊéßÔºà‰∏≠ÊñáÁæ§ÁªÑÔºâ&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;gt;&amp;gt; &lt;a href=&quot;https://www.google.com/search?q=%22%E5%93%AA%E5%90%92%E7%9B%91%E6%8E%A7+Nezha+Monitoring%22&quot;&gt;Use Cases | Êàë‰ª¨ÁöÑÁî®Êà∑&lt;/a&gt; (Google)&lt;/p&gt; 
&lt;p&gt;&amp;gt;&amp;gt; &lt;strong&gt;[TP-Link] naiba Âàö‰π∞‰∏ÄÂπ¥ÁöÑË∑ØÁî±Âô®ÊØèÂá†Â§©Â∞±ÂÆïÊú∫‰∏ÄÊ¨°ÔºåÊØèÊ¨°ÈÉΩË¶ÅÈáçÂêØÔºåÂîÆÂêéÊúçÂä°ÂæàÁÉÇÂæàÊú∫Ê¢∞„ÄÇ&lt;small&gt;&lt;a href=&quot;https://www.google.com/search?q=tplink+%E5%8D%87%E7%BA%A7%E5%87%8F%E9%85%8D&quot;&gt;credit&lt;/a&gt;&lt;/small&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;gt;&amp;gt; &lt;strong&gt;[TP-Link] naiba just bought the router a year ago and now it goes down every few days and has to be rebooted every time, the after sales service sucks and is very mechanical.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;User Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nezhahq.github.io/en_US/index.html&quot;&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nezhahq.github.io/index.html&quot;&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Translation&lt;/h3&gt; 
&lt;a href=&quot;https://hosted.weblate.org/engage/nezha/&quot;&gt; &lt;img src=&quot;https://hosted.weblate.org/widget/nezha/multi-blue.svg?sanitize=true&quot; alt=&quot;Translation status&quot;&gt; &lt;/a&gt; 
&lt;p&gt;Is Nezha not in your language, or the translation is incorrect or incomplete? Get involved in the translations on &lt;a href=&quot;https://hosted.weblate.org/engage/nezha/&quot;&gt;Hosted Weblate&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Áî®Êà∑ÂâçÂè∞ &lt;a href=&quot;https://github.com/hamster1963&quot;&gt;@hamster1963&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;ÁÆ°ÁêÜÂêéÂè∞ &lt;a href=&quot;https://github.com/nezhahq&quot;&gt;@nezhahq&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nezhahq/nezha/master/.github/user-frontend.20241128.png&quot; alt=&quot;user&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nezhahq/nezha/master/.github/admin-frontend.20241220.jpg&quot; alt=&quot;admin&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/hamster1963/nezha-dash&quot;&gt;hamster1963/nezha-dash&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/nezhahq/admin-frontend&quot;&gt;nezhahq/admin-frontend&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;add your theme to &lt;a href=&quot;https://raw.githubusercontent.com/nezhahq/nezha/master/service/singleton/frontend-templates.yaml&quot;&gt;service/singleton/frontend-templates.yaml&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;!--GAMFC_DELIMITER--&gt;
&lt;a href=&quot;https://github.com/naiba&quot; title=&quot;naiba&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/29243953?v=4&quot; width=&quot;50;&quot; alt=&quot;naiba&quot;&gt;&lt;/a&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/uubulb&quot; title=&quot;UUBulb&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/35923940?v=4&quot; width=&quot;50;&quot; alt=&quot;UUBulb&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/AkkiaS7&quot; title=&quot;Akkia&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/68485070?v=4&quot; width=&quot;50;&quot; alt=&quot;Akkia&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Erope&quot; title=&quot;ÂçñÂ•≥Â≠©ÁöÑÂ∞èÁÅ´Êü¥&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44471469?v=4&quot; width=&quot;50;&quot; alt=&quot;ÂçñÂ•≥Â≠©ÁöÑÂ∞èÁÅ´Êü¥&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nap0o&quot; title=&quot;nap0o&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/144927971?v=4&quot; width=&quot;50;&quot; alt=&quot;nap0o&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dysf888&quot; title=&quot;ÈªëÊ≠å&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/47450409?v=4&quot; width=&quot;50;&quot; alt=&quot;ÈªëÊ≠å&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/xykt&quot; title=&quot;xykt&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/152045469?v=4&quot; width=&quot;50;&quot; alt=&quot;xykt&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/MikoyChinese&quot; title=&quot;MikoyChinese&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/22676744?v=4&quot; width=&quot;50;&quot; alt=&quot;MikoyChinese&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/JackieSung4ev&quot; title=&quot;JackieSung4ev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/24974735?v=4&quot; width=&quot;50;&quot; alt=&quot;JackieSung4ev&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/weblate&quot; title=&quot;Weblate (bot)&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1607653?v=4&quot; width=&quot;50;&quot; alt=&quot;Weblate (bot)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cantoblanco&quot; title=&quot;Kris&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/116849421?v=4&quot; width=&quot;50;&quot; alt=&quot;Kris&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lemoeo&quot; title=&quot;Lemoe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18618627?v=4&quot; width=&quot;50;&quot; alt=&quot;Lemoe&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/spiritLHLS&quot; title=&quot;spiritlhl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/103393591?v=4&quot; width=&quot;50;&quot; alt=&quot;spiritlhl&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/liuyanxi975&quot; title=&quot;ÂàòÈ¢úÊ∫™&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/24417037?v=4&quot; width=&quot;50;&quot; alt=&quot;ÂàòÈ¢úÊ∫™&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/CosmosZ-code&quot; title=&quot;CosmosZ-code&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/81398224?v=4&quot; width=&quot;50;&quot; alt=&quot;CosmosZ-code&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lvgj-stack&quot; title=&quot;Ko no dio&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/38449861?v=4&quot; width=&quot;50;&quot; alt=&quot;Ko no dio&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/hhhkkk520&quot; title=&quot;Kris&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/52115472?v=4&quot; width=&quot;50;&quot; alt=&quot;Kris&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/1ridic&quot; title=&quot;1ridic&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/88495501?v=4&quot; width=&quot;50;&quot; alt=&quot;1ridic&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Mmx233&quot; title=&quot;Mmx&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36563672?v=4&quot; width=&quot;50;&quot; alt=&quot;Mmx&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rootmelo92118&quot; title=&quot;rootmelo92118&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/32770959?v=4&quot; width=&quot;50;&quot; alt=&quot;rootmelo92118&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Moraxyc&quot; title=&quot;Moraxyc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/69713071?v=4&quot; width=&quot;50;&quot; alt=&quot;Moraxyc&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/hamster1963&quot; title=&quot;‰ªìÈº†&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71394853?v=4&quot; width=&quot;50;&quot; alt=&quot;‰ªìÈº†&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/zhucaidan&quot; title=&quot;zhucaidan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/47970938?v=4&quot; width=&quot;50;&quot; alt=&quot;zhucaidan&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/iilemon&quot; title=&quot;Sean&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/33201711?v=4&quot; width=&quot;50;&quot; alt=&quot;Sean&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lyj0309&quot; title=&quot;lyj&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50474995?v=4&quot; width=&quot;50;&quot; alt=&quot;lyj&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/fscarmen&quot; title=&quot;fscarmen&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62703343?v=4&quot; width=&quot;50;&quot; alt=&quot;fscarmen&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ch8o&quot; title=&quot;no-name-now&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9103372?v=4&quot; width=&quot;50;&quot; alt=&quot;no-name-now&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/MemoryShadow&quot; title=&quot;JSker9&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/31596045?v=4&quot; width=&quot;50;&quot; alt=&quot;JSker9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/HsukqiLee&quot; title=&quot;HsukqiLee&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/79034142?v=4&quot; width=&quot;50;&quot; alt=&quot;HsukqiLee&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/DarcJC&quot; title=&quot;Darc Z.&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/53445798?v=4&quot; width=&quot;50;&quot; alt=&quot;Darc Z.&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Creling&quot; title=&quot;Creling&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43109504?v=4&quot; width=&quot;50;&quot; alt=&quot;Creling&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/coreff&quot; title=&quot;Core F&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/38347122?v=4&quot; width=&quot;50;&quot; alt=&quot;Core F&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/adminsama&quot; title=&quot;adminsama&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/60880076?v=4&quot; width=&quot;50;&quot; alt=&quot;adminsama&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acgpiano&quot; title=&quot;Acgpiano&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15900800?v=4&quot; width=&quot;50;&quot; alt=&quot;Acgpiano&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/eya46&quot; title=&quot;eya46&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/61458340?v=4&quot; width=&quot;50;&quot; alt=&quot;eya46&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/guoyongchang&quot; title=&quot;guoyongchang&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10484506?v=4&quot; width=&quot;50;&quot; alt=&quot;guoyongchang&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/hiDandelion&quot; title=&quot;hiDandelion&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/77157418?v=4&quot; width=&quot;50;&quot; alt=&quot;hiDandelion&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yuanweize&quot; title=&quot;I&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/30067203?v=4&quot; width=&quot;50;&quot; alt=&quot;I&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/igophper&quot; title=&quot;igophper&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/34326532?v=4&quot; width=&quot;50;&quot; alt=&quot;igophper&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lvyaoting&quot; title=&quot;lvyaoting&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/166296299?v=4&quot; width=&quot;50;&quot; alt=&quot;lvyaoting&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/quanljh&quot; title=&quot;quanljh&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/38105306?v=4&quot; width=&quot;50;&quot; alt=&quot;quanljh&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/unclezs&quot; title=&quot;unclezs&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/42318775?v=4&quot; width=&quot;50;&quot; alt=&quot;unclezs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ysicing&quot; title=&quot;ÁºòÁîü&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8605565?v=4&quot; width=&quot;50;&quot; alt=&quot;ÁºòÁîü&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yanhao98&quot; title=&quot;‰∏•Êµ©&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37316281?v=4&quot; width=&quot;50;&quot; alt=&quot;‰∏•Êµ©&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/arkylin&quot; title=&quot;Âáå&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/35104502?v=4&quot; width=&quot;50;&quot; alt=&quot;Âáå&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yumusb&quot; title=&quot;Ê¶ÜÊú®&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43062104?v=4&quot; width=&quot;50;&quot; alt=&quot;Ê¶ÜÊú®&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/colour93&quot; title=&quot;ÁéñÂèÅ&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/64313711?v=4&quot; width=&quot;50;&quot; alt=&quot;ÁéñÂèÅ&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/hmsjy2017&quot; title=&quot;Tony&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/42692274?v=4&quot; width=&quot;50;&quot; alt=&quot;Tony&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nickfox-taterli&quot; title=&quot;Tater Li&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19658596?v=4&quot; width=&quot;50;&quot; alt=&quot;Tater Li&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/IamTaoChen&quot; title=&quot;Tao Chen&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/42793494?v=4&quot; width=&quot;50;&quot; alt=&quot;Tao Chen&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Septrum101&quot; title=&quot;Spetrum&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11692994?v=4&quot; width=&quot;50;&quot; alt=&quot;Spetrum&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dreamingsleeping&quot; title=&quot;Nanjing Hopefun Network Technology Co. Ltd.&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13828658?v=4&quot; width=&quot;50;&quot; alt=&quot;Nanjing Hopefun Network Technology Co. Ltd.&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/silver-ymz&quot; title=&quot;Mingzhuo Yin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/78400701?v=4&quot; width=&quot;50;&quot; alt=&quot;Mingzhuo Yin&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/MartijnLindeman&quot; title=&quot;Martijn Lindeman&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/78365708?v=4&quot; width=&quot;50;&quot; alt=&quot;Martijn Lindeman&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/funnyzak&quot; title=&quot;Leon&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2562087?v=4&quot; width=&quot;50;&quot; alt=&quot;Leon&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/KorenKrita&quot; title=&quot;KorenKrita&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/22239339?v=4&quot; width=&quot;50;&quot; alt=&quot;KorenKrita&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/techotaku&quot; title=&quot;Ian Li&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1948179?v=4&quot; width=&quot;50;&quot; alt=&quot;Ian Li&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/GreenTeodoro839&quot; title=&quot;GreenTeodoro839&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/77104800?v=4&quot; width=&quot;50;&quot; alt=&quot;GreenTeodoro839&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Es-dese&quot; title=&quot;Esdese&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71542548?v=4&quot; width=&quot;50;&quot; alt=&quot;Esdese&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/wwng2333&quot; title=&quot;:D&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17147265?v=4&quot; width=&quot;50;&quot; alt=&quot;:D&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/wellcoming&quot; title=&quot;Coming&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/74850890?v=4&quot; width=&quot;50;&quot; alt=&quot;Coming&quot;&gt;&lt;/a&gt;
 &lt;!--GAMFC_DELIMITER_END--&gt;&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ipinfo.io/&quot;&gt;IPInfo&lt;/a&gt; for providing an accurate GeoIP Database.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://star-history.com/#nezhahq/nezha&amp;amp;Timeline&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=nezhahq/nezha&amp;amp;type=Timeline&quot; alt=&quot;Star History Chart&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trufflesecurity/trufflehog</title>
      <link>https://github.com/trufflesecurity/trufflehog</link>
      <description>&lt;p&gt;Find, verify, and analyze leaked credentials&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;GoReleaser Logo&quot; src=&quot;https://storage.googleapis.com/trufflehog-static-sources/pixel_pig.png&quot; height=&quot;140&quot;&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;TruffleHog&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt;Find leaked credentials.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://goreportcard.com/report/github.com/trufflesecurity/trufflehog/v3&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/trufflesecurity/trufflehog/v3&quot; alt=&quot;Go Report Card&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-AGPL--3.0-brightgreen&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/pkg/detectors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/directory-file-count/trufflesecurity/truffleHog/pkg/detectors?label=Total%20Detectors&amp;amp;type=dir&quot; alt=&quot;Total Detectors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h1&gt;&lt;span&gt;üîé&lt;/span&gt; &lt;em&gt;Now Scanning&lt;/em&gt;&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/assets/scanning_logos.svg?sanitize=true&quot;&gt; 
 &lt;p&gt;&lt;strong&gt;...and more&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;To learn more about about TruffleHog and its features and capabilities, visit our &lt;a href=&quot;https://trufflesecurity.com/trufflehog?gclid=CjwKCAjwouexBhAuEiwAtW_Zx5IW87JNj97Ci7heFnA5ar6-DuNzT2Y5nIl9DuZ-FOUqx0Qg3vb9nxoClcEQAvD_BwE&quot;&gt;product page&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;&lt;span&gt;üåê&lt;/span&gt; TruffleHog Enterprise&lt;/h1&gt; 
&lt;p&gt;Are you interested in continuously monitoring &lt;strong&gt;Git, Jira, Slack, Confluence, Microsoft Teams, Sharepoint, and more..&lt;/strong&gt; for credentials? We have an enterprise product that can help! Learn more at &lt;a href=&quot;https://trufflesecurity.com/trufflehog-enterprise&quot;&gt;https://trufflesecurity.com/trufflehog-enterprise&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We take the revenue from the enterprise product to fund more awesome open source projects that the whole community can benefit from.&lt;/p&gt;  
&lt;h1&gt;What is TruffleHog üêΩ&lt;/h1&gt; 
&lt;p&gt;TruffleHog is the most powerful secrets &lt;strong&gt;Discovery, Classification, Validation,&lt;/strong&gt; and &lt;strong&gt;Analysis&lt;/strong&gt; tool. In this context secret refers to a credential a machine uses to authenticate itself to another machine. This includes API keys, database passwords, private encryption keys, and more...&lt;/p&gt; 
&lt;h2&gt;Discovery üîç&lt;/h2&gt; 
&lt;p&gt;TruffleHog can look for secrets in many places including Git, chats, wikis, logs, API testing platforms, object stores, filesystems and more&lt;/p&gt; 
&lt;h2&gt;Classification üìÅ&lt;/h2&gt; 
&lt;p&gt;TruffleHog classifies over 800 secret types, mapping them back to the specific identity they belong to. Is it an AWS secret? Stripe secret? Cloudflare secret? Postgres password? SSL Private key? Sometimes its hard to tell looking at it, so TruffleHog classifies everything it finds.&lt;/p&gt; 
&lt;h2&gt;Validation ‚úÖ&lt;/h2&gt; 
&lt;p&gt;For every secret TruffleHog can classify, it can also log in to confirm if that secret is live or not. This step is critical to know if there‚Äôs an active present danger or not.&lt;/p&gt; 
&lt;h2&gt;Analysis üî¨&lt;/h2&gt; 
&lt;p&gt;For the 20 some of the most commonly leaked out credential types, instead of sending one request to check if the secret can log in, TruffleHog can send many requests to learn everything there is to know about the secret. Who created it? What resources can it access? What permissions does it have on those resources?&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üì¢&lt;/span&gt; Join Our Community&lt;/h1&gt; 
&lt;p&gt;Have questions? Feedback? Jump in slack or discord and hang out with us&lt;/p&gt; 
&lt;p&gt;Join our &lt;a href=&quot;https://join.slack.com/t/trufflehog-community/shared_invite/zt-pw2qbi43-Aa86hkiimstfdKH9UCpPzQ&quot;&gt;Slack Community&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join the &lt;a href=&quot;https://discord.gg/8Hzbrnkr7E&quot;&gt;Secret Scanning Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üì∫&lt;/span&gt; Demo&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/truffle-demos/non-interactive.svg?sanitize=true&quot; alt=&quot;GitHub scanning demo&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run --rm -it -v &quot;$PWD:/pwd&quot; trufflesecurity/trufflehog:latest github --org=trufflesecurity
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;üíæ&lt;/span&gt; Installation&lt;/h1&gt; 
&lt;p&gt;Several options available for you:&lt;/p&gt; 
&lt;h3&gt;MacOS users&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew install trufflehog
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker:&lt;/h3&gt; 
&lt;p&gt;&lt;sub&gt;&lt;i&gt;&lt;em&gt;Ensure Docker engine is running before executing the following commands:&lt;/em&gt;&lt;/i&gt;&lt;/sub&gt;&lt;/p&gt; 
&lt;h4&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Unix&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run --rm -it -v &quot;$PWD:/pwd&quot; trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows Command Prompt&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run --rm -it -v &quot;%cd:/=\%:/pwd&quot; trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows PowerShell&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run --rm -it -v &quot;${PWD}:/pwd&quot; trufflesecurity/trufflehog github --repo https://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;M1 and M2 Mac&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run --platform linux/arm64 --rm -it -v &quot;$PWD:/pwd&quot; trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Binary releases&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Download and unpack from https://github.com/trufflesecurity/trufflehog/releases
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compile from source&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/trufflesecurity/trufflehog.git
cd trufflehog; go install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using installation script&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using installation script, verify checksum signature (requires cosign to be installed)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -v -b /usr/local/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using installation script to install a specific version&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin &amp;lt;ReleaseTag like v3.56.0&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;üîê&lt;/span&gt; Verifying the artifacts&lt;/h1&gt; 
&lt;p&gt;Checksums are applied to all artifacts, and the resulting checksum file is signed using cosign.&lt;/p&gt; 
&lt;p&gt;You need the following tool to verify signature:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.sigstore.dev/cosign/system_config/installation/&quot;&gt;Cosign&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Verification steps are as follow:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the artifact files you want, and the following files from the &lt;a href=&quot;https://github.com/trufflesecurity/trufflehog/releases&quot;&gt;releases&lt;/a&gt; page.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;trufflehog_{version}_checksums.txt&lt;/li&gt; 
   &lt;li&gt;trufflehog_{version}_checksums.txt.pem&lt;/li&gt; 
   &lt;li&gt;trufflehog_{version}_checksums.txt.sig&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Verify the signature:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cosign verify-blob &amp;lt;path to trufflehog_{version}_checksums.txt&amp;gt; \
--certificate &amp;lt;path to trufflehog_{version}_checksums.txt.pem&amp;gt; \
--signature &amp;lt;path to trufflehog_{version}_checksums.txt.sig&amp;gt; \
--certificate-identity-regexp &#39;https://github\.com/trufflesecurity/trufflehog/\.github/workflows/.+&#39; \
--certificate-oidc-issuer &quot;https://token.actions.githubusercontent.com&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Once the signature is confirmed as valid, you can proceed to validate that the SHA256 sums align with the downloaded artifact:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sha256sum --ignore-missing -c trufflehog_{version}_checksums.txt
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Replace &lt;code&gt;{version}&lt;/code&gt; with the downloaded files version&lt;/p&gt; 
&lt;p&gt;Alternatively, if you are using installation script, pass &lt;code&gt;-v&lt;/code&gt; option to perform signature verification. This required Cosign binary to be installed prior to running installation script.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üöÄ&lt;/span&gt; Quick Start&lt;/h1&gt; 
&lt;h2&gt;1: Scan a repo for only verified secrets&lt;/h2&gt; 
&lt;p&gt;Command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog git https://github.com/trufflesecurity/test_keys --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Expected output:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;üê∑üîëüê∑  TruffleHog. Unearth your secrets. üê∑üîëüê∑

Found verified result üê∑üîë
Detector Type: AWS
Decoder Type: PLAIN
Raw result: AKIAYVP4CIPPERUVIFXG
Line: 4
Commit: fbc14303ffbf8fb1c2c1914e8dda7d0121633aca
File: keys
Email: counter &amp;lt;counter@counters-MacBook-Air.local&amp;gt;
Repository: https://github.com/trufflesecurity/test_keys
Timestamp: 2022-06-16 10:17:40 -0700 PDT
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2: Scan a GitHub Org for only verified secrets&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog github --org=trufflesecurity --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3: Scan a GitHub Repo for only verified keys and get JSON output&lt;/h2&gt; 
&lt;p&gt;Command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog git https://github.com/trufflesecurity/test_keys --results=verified,unknown --json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Expected output:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{&quot;SourceMetadata&quot;:{&quot;Data&quot;:{&quot;Git&quot;:{&quot;commit&quot;:&quot;fbc14303ffbf8fb1c2c1914e8dda7d0121633aca&quot;,&quot;file&quot;:&quot;keys&quot;,&quot;email&quot;:&quot;counter \u003ccounter@counters-MacBook-Air.local\u003e&quot;,&quot;repository&quot;:&quot;https://github.com/trufflesecurity/test_keys&quot;,&quot;timestamp&quot;:&quot;2022-06-16 10:17:40 -0700 PDT&quot;,&quot;line&quot;:4}}},&quot;SourceID&quot;:0,&quot;SourceType&quot;:16,&quot;SourceName&quot;:&quot;trufflehog - git&quot;,&quot;DetectorType&quot;:2,&quot;DetectorName&quot;:&quot;AWS&quot;,&quot;DecoderName&quot;:&quot;PLAIN&quot;,&quot;Verified&quot;:true,&quot;Raw&quot;:&quot;AKIAYVP4CIPPERUVIFXG&quot;,&quot;Redacted&quot;:&quot;AKIAYVP4CIPPERUVIFXG&quot;,&quot;ExtraData&quot;:{&quot;account&quot;:&quot;595918472158&quot;,&quot;arn&quot;:&quot;arn:aws:iam::595918472158:user/canarytokens.com@@mirux23ppyky6hx3l6vclmhnj&quot;,&quot;user_id&quot;:&quot;AIDAYVP4CIPPJ5M54LRCY&quot;},&quot;StructuredData&quot;:null}
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;4: Scan a GitHub Repo + its Issues and Pull Requests&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog github --repo=https://github.com/trufflesecurity/test_keys --issue-comments --pr-comments
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;5: Scan an S3 bucket for verified keys&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog s3 --bucket=&amp;lt;bucket name&amp;gt; --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;6: Scan S3 buckets using IAM Roles&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog s3 --role-arn=&amp;lt;iam role arn&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;7: Scan a Github Repo using SSH authentication in docker&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run --rm -v &quot;$HOME/.ssh:/root/.ssh:ro&quot; trufflesecurity/trufflehog:latest git ssh://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;8: Scan individual files or directories&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog filesystem path/to/file1.txt path/to/file2.txt path/to/dir
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;9: Scan a local git repo&lt;/h2&gt; 
&lt;p&gt;Clone the git repo. For example &lt;a href=&quot;https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/git@github.com:trufflesecurity/test_keys.git&quot;&gt;test keys&lt;/a&gt; repo.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git clone git@github.com:trufflesecurity/test_keys.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run trufflehog from the parent directory (outside the git repo).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ trufflehog git file://test_keys --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;10: Scan GCS buckets for verified secrets&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog gcs --project-id=&amp;lt;project-ID&amp;gt; --cloud-environment --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;11: Scan a Docker image for verified secrets&lt;/h2&gt; 
&lt;p&gt;Use the &lt;code&gt;--image&lt;/code&gt; flag multiple times to scan multiple images.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog docker --image trufflesecurity/secrets --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;12: Scan in CI&lt;/h2&gt; 
&lt;p&gt;Set the &lt;code&gt;--since-commit&lt;/code&gt; flag to your default branch that people merge into (ex: &quot;main&quot;). Set the &lt;code&gt;--branch&lt;/code&gt; flag to your PR&#39;s branch name (ex: &quot;feature-1&quot;). Depending on the CI/CD platform you use, this value can be pulled in dynamically (ex: &lt;a href=&quot;https://circleci.com/docs/variables/&quot;&gt;CIRCLE_BRANCH in Circle CI&lt;/a&gt; and &lt;a href=&quot;https://docs.travis-ci.com/user/environment-variables/&quot;&gt;TRAVIS_PULL_REQUEST_BRANCH in Travis CI&lt;/a&gt;). If the repo is cloned and the target branch is already checked out during the CI/CD workflow, then &lt;code&gt;--branch HEAD&lt;/code&gt; should be sufficient. The &lt;code&gt;--fail&lt;/code&gt; flag will return an 183 error code if valid credentials are found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog git file://. --since-commit main --branch feature-1 --results=verified,unknown --fail
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;13: Scan a Postman workspace&lt;/h2&gt; 
&lt;p&gt;Use the &lt;code&gt;--workspace-id&lt;/code&gt;, &lt;code&gt;--collection-id&lt;/code&gt;, &lt;code&gt;--environment&lt;/code&gt; flags multiple times to scan multiple targets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog postman --token=&amp;lt;postman api token&amp;gt; --workspace-id=&amp;lt;workspace id&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;14: Scan a Jenkins server&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog jenkins --url https://jenkins.example.com --username admin --password admin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;15: Scan an Elasticsearch server&lt;/h2&gt; 
&lt;h3&gt;Scan a Local Cluster&lt;/h3&gt; 
&lt;p&gt;There are two ways to authenticate to a local cluster with TruffleHog: (1) username and password, (2) service token.&lt;/p&gt; 
&lt;h4&gt;Connect to a local cluster with username and password&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog elasticsearch --nodes 192.168.14.3 192.168.14.4 --username truffle --password hog
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connect to a local cluster with a service token&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog elasticsearch --nodes 192.168.14.3 192.168.14.4 --service-token ‚ÄòAAEWVaWM...Rva2VuaSDZ‚Äô
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scan an Elastic Cloud Cluster&lt;/h3&gt; 
&lt;p&gt;To scan a cluster on Elastic Cloud, you‚Äôll need a Cloud ID and API key.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog elasticsearch \
  --cloud-id &#39;search-prod:dXMtY2Vx...YjM1ODNlOWFiZGRlNjI0NA==&#39; \
  --api-key &#39;MlVtVjBZ...ZSYlduYnF1djh3NG5FQQ==&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;16. Scan a GitHub Repository for Cross Fork Object References and Deleted Commits&lt;/h2&gt; 
&lt;p&gt;The following command will enumerate deleted and hidden commits on a GitHub repository and then scan them for secrets. This is an alpha release feature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog github-experimental --repo https://github.com/&amp;lt;USER&amp;gt;/&amp;lt;REPO&amp;gt;.git --object-discovery
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition to the normal TruffleHog output, the &lt;code&gt;--object-discovery&lt;/code&gt; flag creates two files in a new &lt;code&gt;$HOME/.trufflehog&lt;/code&gt; directory: &lt;code&gt;valid_hidden.txt&lt;/code&gt; and &lt;code&gt;invalid.txt&lt;/code&gt;. These are used to track state during commit enumeration, as well as to provide users with a complete list of all hidden and deleted commits (&lt;code&gt;valid_hidden.txt&lt;/code&gt;). If you&#39;d like to automatically remove these files after scanning, please add the flag &lt;code&gt;--delete-cached-data&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Enumerating all valid commits on a repository using this method takes between 20 minutes and a few hours, depending on the size of your repository. We added a progress bar to keep you updated on how long the enumeration will take. The actual secret scanning runs extremely fast.&lt;/p&gt; 
&lt;p&gt;For more information on Cross Fork Object References, please &lt;a href=&quot;https://trufflesecurity.com/blog/anyone-can-access-deleted-and-private-repo-data-github&quot;&gt;read our blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;17. Scan Hugging Face&lt;/h2&gt; 
&lt;h3&gt;Scan a Hugging Face Model, Dataset or Space&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog huggingface --model &amp;lt;model_id&amp;gt; --space &amp;lt;space_id&amp;gt; --dataset &amp;lt;dataset_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scan all Models, Datasets and Spaces belonging to a Hugging Face Organization or User&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog huggingface --org &amp;lt;orgname&amp;gt; --user &amp;lt;username&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Optionally) When scanning an organization or user, you can skip an entire class of resources with &lt;code&gt;--skip-models&lt;/code&gt;, &lt;code&gt;--skip-datasets&lt;/code&gt;, &lt;code&gt;--skip-spaces&lt;/code&gt; OR a particular resource with &lt;code&gt;--ignore-models &amp;lt;model_id&amp;gt;&lt;/code&gt;, &lt;code&gt;--ignore-datasets &amp;lt;dataset_id&amp;gt;&lt;/code&gt;, &lt;code&gt;--ignore-spaces &amp;lt;space_id&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Scan Discussion and PR Comments&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog huggingface --model &amp;lt;model_id&amp;gt; --include-discussions --include-prs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;‚ùì&lt;/span&gt; FAQ&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;All I see is &lt;code&gt;üê∑üîëüê∑ TruffleHog. Unearth your secrets. üê∑üîëüê∑&lt;/code&gt; and the program exits, what gives? 
  &lt;ul&gt; 
   &lt;li&gt;That means no secrets were detected&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Why is the scan taking a long time when I scan a GitHub org 
  &lt;ul&gt; 
   &lt;li&gt;Unauthenticated GitHub scans have rate limits. To improve your rate limits, include the &lt;code&gt;--token&lt;/code&gt; flag with a personal access token&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;It says a private key was verified, what does that mean? 
  &lt;ul&gt; 
   &lt;li&gt;Check out our Driftwood blog post to learn how to do this, in short we&#39;ve confirmed the key can be used live for SSH or SSL &lt;a href=&quot;https://trufflesecurity.com/blog/driftwood-know-if-private-keys-are-sensitive/&quot;&gt;Blog post&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Is there an easy way to ignore specific secrets? 
  &lt;ul&gt; 
   &lt;li&gt;If the scanned source &lt;a href=&quot;https://github.com/trufflesecurity/trufflehog/raw/d6375ba92172fd830abb4247cca15e3176448c5d/pkg/engine/engine.go#L358-L365&quot;&gt;supports line numbers&lt;/a&gt;, then you can add a &lt;code&gt;trufflehog:ignore&lt;/code&gt; comment on the line containing the secret to ignore that secrets.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;span&gt;üì∞&lt;/span&gt; What&#39;s new in v3?&lt;/h1&gt; 
&lt;p&gt;TruffleHog v3 is a complete rewrite in Go with many new powerful features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We&#39;ve &lt;strong&gt;added over 700 credential detectors that support active verification against their respective APIs&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;We&#39;ve also added native &lt;strong&gt;support for scanning GitHub, GitLab, Docker, filesystems, S3, GCS, Circle CI and Travis CI&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Instantly verify private keys&lt;/strong&gt; against millions of github users and &lt;strong&gt;billions&lt;/strong&gt; of TLS certificates using our &lt;a href=&quot;https://trufflesecurity.com/blog/driftwood&quot;&gt;Driftwood&lt;/a&gt; technology.&lt;/li&gt; 
 &lt;li&gt;Scan binaries, documents, and other file formats&lt;/li&gt; 
 &lt;li&gt;Available as a GitHub Action and a pre-commit hook&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is credential verification?&lt;/h2&gt; 
&lt;p&gt;For every potential credential that is detected, we&#39;ve painstakingly implemented programmatic verification against the API that we think it belongs to. Verification eliminates false positives. For example, the &lt;a href=&quot;https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/pkg/detectors/aws/aws.go&quot;&gt;AWS credential detector&lt;/a&gt; performs a &lt;code&gt;GetCallerIdentity&lt;/code&gt; API call against the AWS API to verify if an AWS credential is active.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üìù&lt;/span&gt; Usage&lt;/h1&gt; 
&lt;p&gt;TruffleHog has a sub-command for each source of data that you may want to scan:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;git&lt;/li&gt; 
 &lt;li&gt;github&lt;/li&gt; 
 &lt;li&gt;gitlab&lt;/li&gt; 
 &lt;li&gt;docker&lt;/li&gt; 
 &lt;li&gt;s3&lt;/li&gt; 
 &lt;li&gt;filesystem (files and directories)&lt;/li&gt; 
 &lt;li&gt;syslog&lt;/li&gt; 
 &lt;li&gt;circleci&lt;/li&gt; 
 &lt;li&gt;travisci&lt;/li&gt; 
 &lt;li&gt;gcs (Google Cloud Storage)&lt;/li&gt; 
 &lt;li&gt;postman&lt;/li&gt; 
 &lt;li&gt;jenkins&lt;/li&gt; 
 &lt;li&gt;elasticsearch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each subcommand can have options that you can see with the &lt;code&gt;--help&lt;/code&gt; flag provided to the sub command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ trufflehog git --help
usage: TruffleHog git [&amp;lt;flags&amp;gt;] &amp;lt;uri&amp;gt;

Find credentials in git repositories.

Flags:
  -h, --help                Show context-sensitive help (also try --help-long and --help-man).
      --log-level=0         Logging verbosity on a scale of 0 (info) to 5 (trace). Can be disabled with &quot;-1&quot;.
      --profile             Enables profiling and sets a pprof and fgprof server on :18066.
  -j, --json                Output in JSON format.
      --json-legacy         Use the pre-v3.0 JSON format. Only works with git, gitlab, and github sources.
      --github-actions      Output in GitHub Actions format.
      --concurrency=20           Number of concurrent workers.
      --no-verification     Don&#39;t verify the results.
      --results=RESULTS          Specifies which type(s) of results to output: verified, unknown, unverified, filtered_unverified. Defaults to all types.
      --allow-verification-overlap
                                 Allow verification of similar credentials across detectors
      --filter-unverified   Only output first unverified result per chunk per detector if there are more than one results.
      --filter-entropy=FILTER-ENTROPY
                                 Filter unverified results with Shannon entropy. Start with 3.0.
      --config=CONFIG            Path to configuration file.
      --print-avg-detector-time
                                 Print the average time spent on each detector.
      --no-update           Don&#39;t check for updates.
      --fail                Exit with code 183 if results are found.
      --verifier=VERIFIER ...    Set custom verification endpoints.
      --custom-verifiers-only   Only use custom verification endpoints.
      --archive-max-size=ARCHIVE-MAX-SIZE
                                 Maximum size of archive to scan. (Byte units eg. 512B, 2KB, 4MB)
      --archive-max-depth=ARCHIVE-MAX-DEPTH
                                 Maximum depth of archive to scan.
      --archive-timeout=ARCHIVE-TIMEOUT
                                 Maximum time to spend extracting an archive.
      --include-detectors=&quot;all&quot;  Comma separated list of detector types to include. Protobuf name or IDs may be used, as well as ranges.
      --exclude-detectors=EXCLUDE-DETECTORS
                                 Comma separated list of detector types to exclude. Protobuf name or IDs may be used, as well as ranges. IDs defined here take precedence over the include list.
      --version             Show application version.
  -i, --include-paths=INCLUDE-PATHS
                                 Path to file with newline separated regexes for files to include in scan.
  -x, --exclude-paths=EXCLUDE-PATHS
                                 Path to file with newline separated regexes for files to exclude in scan.
      --exclude-globs=EXCLUDE-GLOBS
                                 Comma separated list of globs to exclude in scan. This option filters at the `git log` level, resulting in faster scans.
      --since-commit=SINCE-COMMIT
                                 Commit to start scan from.
      --branch=BRANCH            Branch to scan.
      --max-depth=MAX-DEPTH      Maximum depth of commits to scan.
      --bare                Scan bare repository (e.g. useful while using in pre-receive hooks)

Args:
  &amp;lt;uri&amp;gt;  Git repository URL. https://, file://, or ssh:// schema expected.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, to scan a &lt;code&gt;git&lt;/code&gt; repository, start with&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;trufflehog git https://github.com/trufflesecurity/trufflehog.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;S3&lt;/h2&gt; 
&lt;p&gt;The S3 source supports assuming IAM roles for scanning in addition to IAM users. This makes it easier for users to scan multiple AWS accounts without needing to rely on hardcoded credentials for each account.&lt;/p&gt; 
&lt;p&gt;The IAM identity that TruffleHog uses initially will need to have &lt;code&gt;AssumeRole&lt;/code&gt; privileges as a principal in the &lt;a href=&quot;https://aws.amazon.com/blogs/security/how-to-use-trust-policies-with-iam-roles/&quot;&gt;trust policy&lt;/a&gt; of each IAM role to assume.&lt;/p&gt; 
&lt;p&gt;To scan a specific bucket using locally set credentials or instance metadata if on an EC2 instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog s3 --bucket=&amp;lt;bucket-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To scan a specific bucket using an assumed role:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog s3 --bucket=&amp;lt;bucket-name&amp;gt; --role-arn=&amp;lt;iam-role-arn&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiple roles can be passed as separate arguments. The following command will attempt to scan every bucket each role has permissions to list in the S3 API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog s3 --role-arn=&amp;lt;iam-role-arn-1&amp;gt; --role-arn=&amp;lt;iam-role-arn-2&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Exit Codes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;0: No errors and no results were found.&lt;/li&gt; 
 &lt;li&gt;1: An error was encountered. Sources may not have completed scans.&lt;/li&gt; 
 &lt;li&gt;183: No errors were encountered, but results were found. Will only be returned if &lt;code&gt;--fail&lt;/code&gt; flag is used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img alt=&quot;octocat&quot; src=&quot;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&quot;&gt;) TruffleHog Github Action&lt;/h2&gt; 
&lt;h3&gt;General Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
        extra_args: --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the example config above, we&#39;re scanning for live secrets in all PRs and Pushes to &lt;code&gt;main&lt;/code&gt;. Only code changes in the referenced commits are scanned. If you&#39;d like to scan an entire branch, please see the &quot;Advanced Usage&quot; section below.&lt;/p&gt; 
&lt;h3&gt;Shallow Cloning&lt;/h3&gt; 
&lt;p&gt;If you&#39;re incorporating TruffleHog into a standalone workflow and aren&#39;t running any other CI/CD tooling alongside TruffleHog, then we recommend using &lt;a href=&quot;https://git-scm.com/docs/git-clone#Documentation/git-clone.txt---depthltdepthgt&quot;&gt;Shallow Cloning&lt;/a&gt; to speed up your workflow. Here&#39;s an example for how to do it:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;...
      - shell: bash
        run: |
          if [ &quot;${{ github.event_name }}&quot; == &quot;push&quot; ]; then
            echo &quot;depth=$(($(jq length &amp;lt;&amp;lt;&amp;lt; &#39;${{ toJson(github.event.commits) }}&#39;) + 2))&quot; &amp;gt;&amp;gt; $GITHUB_ENV
            echo &quot;branch=${{ github.ref_name }}&quot; &amp;gt;&amp;gt; $GITHUB_ENV
          fi
          if [ &quot;${{ github.event_name }}&quot; == &quot;pull_request&quot; ]; then
            echo &quot;depth=$((${{ github.event.pull_request.commits }}+2))&quot; &amp;gt;&amp;gt; $GITHUB_ENV
            echo &quot;branch=${{ github.event.pull_request.head.ref }}&quot; &amp;gt;&amp;gt; $GITHUB_ENV
          fi
      - uses: actions/checkout@v3
        with:
          ref: ${{env.branch}}
          fetch-depth: ${{env.depth}}
      - uses: trufflesecurity/trufflehog@main
        with:
          extra_args: --results=verified,unknown
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Depending on the event type (push or PR), we calculate the number of commits present. Then we add 2, so that we can reference a base commit before our code changes. We pass that integer value to the &lt;code&gt;fetch-depth&lt;/code&gt; flag in the checkout action in addition to the relevant branch. Now our checkout process should be much shorter.&lt;/p&gt; 
&lt;h3&gt;Canary detection&lt;/h3&gt; 
&lt;p&gt;TruffleHog statically detects &lt;a href=&quot;https://canarytokens.org/&quot;&gt;https://canarytokens.org/&lt;/a&gt; and lets you know when they&#39;re present without setting them off. You can learn more here: &lt;a href=&quot;https://trufflesecurity.com/canaries&quot;&gt;https://trufflesecurity.com/canaries&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/trufflesecurity/trufflehog/assets/52866392/74ace530-08c5-4eaf-a169-84a73e328f6f&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Advanced Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- name: TruffleHog
  uses: trufflesecurity/trufflehog@main
  with:
    # Repository path
    path:
    # Start scanning from here (usually main branch).
    base:
    # Scan commits until here (usually dev branch).
    head: # optional
    # Extra args to be passed to the trufflehog cli.
    extra_args: --log-level=2 --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;d like to specify specific &lt;code&gt;base&lt;/code&gt; and &lt;code&gt;head&lt;/code&gt; refs, you can use the &lt;code&gt;base&lt;/code&gt; argument (&lt;code&gt;--since-commit&lt;/code&gt; flag in TruffleHog CLI) and the &lt;code&gt;head&lt;/code&gt; argument (&lt;code&gt;--branch&lt;/code&gt; flag in the TruffleHog CLI). We only recommend using these arguments for very specific use cases, where the default behavior does not work.&lt;/p&gt; 
&lt;h4&gt;Advanced Usage: Scan entire branch&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;- name: scan-push
        uses: trufflesecurity/trufflehog@main
        with:
          base: &quot;&quot;
          head: ${{ github.ref_name }}
          extra_args: --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;TruffleHog GitLab CI&lt;/h2&gt; 
&lt;h3&gt;Example Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;stages:
  - security

security-secrets:
  stage: security
  allow_failure: false
  image: alpine:latest
  variables:
    SCAN_PATH: &quot;.&quot; # Set the relative path in the repo to scan
  before_script:
    - apk add --no-cache git curl jq
    - curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
  script:
    - trufflehog filesystem &quot;$SCAN_PATH&quot; --results=verified,unknown --fail --json | jq
  rules:
    - if: &#39;$CI_PIPELINE_SOURCE == &quot;merge_request_event&quot;&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the example pipeline above, we&#39;re scanning for live secrets in all repository directories and files. This job runs only when the pipeline source is a merge request event, meaning it&#39;s triggered when a new merge request is created.&lt;/p&gt; 
&lt;h2&gt;Pre-commit Hook&lt;/h2&gt; 
&lt;p&gt;TruffleHog can be used in a pre-commit hook to prevent credentials from leaking before they ever leave your computer.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Key Usage Note:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;For optimal hook efficacy, execute &lt;code&gt;git add&lt;/code&gt; followed by &lt;code&gt;git commit&lt;/code&gt; separately.&lt;/strong&gt; This ensures TruffleHog analyzes all intended changes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avoid using &lt;code&gt;git commit -am&lt;/code&gt;, as it might bypass pre-commit hook execution for unstaged modifications.&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;An example &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt; is provided (see &lt;a href=&quot;https://pre-commit.com/&quot;&gt;pre-commit.com&lt;/a&gt; for installation).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;repos:
  - repo: local
    hooks:
      - id: trufflehog
        name: TruffleHog
        description: Detect secrets in your data.
        entry: bash -c &#39;trufflehog git file://. --since-commit HEAD --results=verified,unknown --fail&#39;
        # For running trufflehog in docker, use the following entry instead:
        # entry: bash -c &#39;docker run --rm -v &quot;$(pwd):/workdir&quot; -i --rm trufflesecurity/trufflehog:latest git file:///workdir --since-commit HEAD --results=verified,unknown --fail&#39;
        language: system
        stages: [&quot;commit&quot;, &quot;push&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Regex Detector (alpha)&lt;/h2&gt; 
&lt;p&gt;TruffleHog supports detection and verification of custom regular expressions. For detection, at least one &lt;strong&gt;regular expression&lt;/strong&gt; and &lt;strong&gt;keyword&lt;/strong&gt; is required. A &lt;strong&gt;keyword&lt;/strong&gt; is a fixed literal string identifier that appears in or around the regex to be detected. To allow maximum flexibility for verification, a webhook is used containing the regular expression matches.&lt;/p&gt; 
&lt;p&gt;TruffleHog will send a JSON POST request containing the regex matches to a configured webhook endpoint. If the endpoint responds with a &lt;code&gt;200 OK&lt;/code&gt; response status code, the secret is considered verified.&lt;/p&gt; 
&lt;p&gt;Custom Detectors support a few different filtering mechanisms: entropy, regex targeting the entire match, regex targeting the captured secret, and excluded word lists checked against the secret (captured group if present, entire match if capture group is not present). Note that if your custom detector has multiple &lt;code&gt;regex&lt;/code&gt; set (in this example &lt;code&gt;hogID&lt;/code&gt;, and &lt;code&gt;hogToken&lt;/code&gt;), then the filters get applied to each regex. &lt;a href=&quot;https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/examples/generic_with_filters.yml&quot;&gt;Here&lt;/a&gt; is an example of a custom detector using these filters.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; This feature is alpha and subject to change.&lt;/p&gt; 
&lt;h3&gt;Regex Detector Example&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/pkg/custom_detectors/CUSTOM_DETECTORS.md&quot;&gt;Here&lt;/a&gt; is how to setup a custom regex detector with verification server.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;üîç&lt;/span&gt; Analyze&lt;/h2&gt; 
&lt;p&gt;TruffleHog supports running a deeper analysis of a credential to view its permissions and the resources it has access to.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;trufflehog analyze
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;‚ù§Ô∏è&lt;/span&gt; Contributors&lt;/h1&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href=&quot;https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;].&lt;/p&gt; 
&lt;a href=&quot;https://github.com/trufflesecurity/trufflehog/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=trufflesecurity/trufflehog&quot;&gt; &lt;/a&gt; 
&lt;h1&gt;&lt;span&gt;üíª&lt;/span&gt; Contributing&lt;/h1&gt; 
&lt;p&gt;Contributions are very welcome! Please see our &lt;a href=&quot;https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/CONTRIBUTING.md&quot;&gt;contribution guidelines first&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We no longer accept contributions to TruffleHog v2, but that code is available in the &lt;code&gt;v2&lt;/code&gt; branch.&lt;/p&gt; 
&lt;h2&gt;Adding new secret detectors&lt;/h2&gt; 
&lt;p&gt;We have published some &lt;a href=&quot;https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/hack/docs/Adding_Detectors_external.md&quot;&gt;documentation and tooling to get started on adding new secret detectors&lt;/a&gt;. Let&#39;s improve detection together!&lt;/p&gt; 
&lt;h1&gt;Use as a library&lt;/h1&gt; 
&lt;p&gt;Currently, trufflehog is in heavy development and no guarantees can be made on the stability of the public APIs at this time.&lt;/p&gt; 
&lt;h1&gt;License Change&lt;/h1&gt; 
&lt;p&gt;Since v3.0, TruffleHog is released under a AGPL 3 license, included in &lt;a href=&quot;https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/LICENSE&quot;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;. TruffleHog v3.0 uses none of the previous codebase, but care was taken to preserve backwards compatibility on the command line interface. The work previous to this release is still available licensed under GPL 2.0 in the history of this repository and the previous package releases and tags. A completed CLA is required for us to accept contributions going forward.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gitleaks/gitleaks</title>
      <link>https://github.com/gitleaks/gitleaks</link>
      <description>&lt;p&gt;Find secrets with Gitleaks üîë&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gitleaks&lt;/h1&gt; 
&lt;pre&gt;&lt;code&gt;‚îå‚îÄ‚óã‚îÄ‚îÄ‚îÄ‚îê
‚îÇ ‚îÇ‚ï≤  ‚îÇ
‚îÇ ‚îÇ ‚óã ‚îÇ
‚îÇ ‚óã ‚ñë ‚îÇ
‚îî‚îÄ‚ñë‚îÄ‚îÄ‚îÄ‚îò
&lt;/code&gt;&lt;/pre&gt; 
&lt;p align=&quot;left&quot;&gt; &lt;/p&gt;
&lt;p align=&quot;left&quot;&gt; &lt;a href=&quot;https://github.com/gitleaks/gitleaks/actions/workflows/test.yml&quot;&gt; &lt;img alt=&quot;Github Test&quot; src=&quot;https://github.com/gitleaks/gitleaks/actions/workflows/test.yml/badge.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/zricethezav/gitleaks&quot;&gt; &lt;img src=&quot;https://img.shields.io/docker/pulls/zricethezav/gitleaks.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/gitleaks/gitleaks-action&quot;&gt; &lt;img alt=&quot;gitleaks badge&quot; src=&quot;https://img.shields.io/badge/protected%20by-gitleaks-blue&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h3&gt;Join our Discord! &lt;a href=&quot;https://discord.gg/8Hzbrnkr7E&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1102689410522284044.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Gitleaks is a tool for &lt;strong&gt;detecting&lt;/strong&gt; secrets like passwords, API keys, and tokens in git repos, files, and whatever else you wanna throw at it via &lt;code&gt;stdin&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;‚ûú  ~/code(master) gitleaks git -v

    ‚óã
    ‚îÇ‚ï≤
    ‚îÇ ‚óã
    ‚óã ‚ñë
    ‚ñë    gitleaks


Finding:     &quot;export BUNDLE_ENTERPRISE__CONTRIBSYS__COM=cafebabe:deadbeef&quot;,
Secret:      cafebabe:deadbeef
RuleID:      sidekiq-secret
Entropy:     2.609850
File:        cmd/generate/config/rules/sidekiq.go
Line:        23
Commit:      cd5226711335c68be1e720b318b7bc3135a30eb2
Author:      John
Email:       john@users.noreply.github.com
Date:        2022-08-03T12:31:40Z
Fingerprint: cd5226711335c68be1e720b318b7bc3135a30eb2:cmd/generate/config/rules/sidekiq.go:sidekiq-secret:23
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Gitleaks can be installed using Homebrew, Docker, or Go. Gitleaks is also available in binary form for many popular platforms and OS types on the &lt;a href=&quot;https://github.com/gitleaks/gitleaks/releases&quot;&gt;releases page&lt;/a&gt;. In addition, Gitleaks can be implemented as a pre-commit hook directly in your repo or as a GitHub action using &lt;a href=&quot;https://github.com/gitleaks/gitleaks-action&quot;&gt;Gitleaks-Action&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installing&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# MacOS
brew install gitleaks

# Docker (DockerHub)
docker pull zricethezav/gitleaks:latest
docker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]

# Docker (ghcr.io)
docker pull ghcr.io/gitleaks/gitleaks:latest
docker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]

# From Source (make sure `go` is installed)
git clone https://github.com/gitleaks/gitleaks.git
cd gitleaks
make build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GitHub Action&lt;/h3&gt; 
&lt;p&gt;Check out the official &lt;a href=&quot;https://github.com/gitleaks/gitleaks-action&quot;&gt;Gitleaks GitHub Action&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;name: gitleaks
on: [pull_request, push, workflow_dispatch]
jobs:
  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pre-Commit&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install pre-commit from &lt;a href=&quot;https://pre-commit.com/#install&quot;&gt;https://pre-commit.com/#install&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt; file at the root of your repository with the following content:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;repos:
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.23.1
    hooks:
      - id: gitleaks
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;for a &lt;a href=&quot;https://github.com/gitleaks/gitleaks/releases&quot;&gt;native execution of GitLeaks&lt;/a&gt; or use the &lt;a href=&quot;https://github.com/gitleaks/gitleaks/raw/master/.pre-commit-hooks.yaml&quot;&gt;&lt;code&gt;gitleaks-docker&lt;/code&gt; pre-commit ID&lt;/a&gt; for executing GitLeaks using the &lt;a href=&quot;https://raw.githubusercontent.com/gitleaks/gitleaks/master/#docker&quot;&gt;official Docker images&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Auto-update the config to the latest repos&#39; versions by executing &lt;code&gt;pre-commit autoupdate&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install with &lt;code&gt;pre-commit install&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Now you&#39;re all set!&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;‚ûú git commit -m &quot;this commit contains a secret&quot;
Detect hardcoded secrets.................................................Failed
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: to disable the gitleaks pre-commit hook you can prepend &lt;code&gt;SKIP=gitleaks&lt;/code&gt; to the commit command and it will skip running gitleaks&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;‚ûú SKIP=gitleaks git commit -m &quot;skip gitleaks check&quot;
Detect hardcoded secrets................................................Skipped
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Usage:
  gitleaks [command]

Available Commands:
  completion  generate the autocompletion script for the specified shell
  dir         scan directories or files for secrets
  git         scan git repositories for secrets
  help        Help about any command
  stdin       detect secrets from stdin
  version     display gitleaks version

Flags:
  -b, --baseline-path string          path to baseline with issues that can be ignored
  -c, --config string                 config file path
                                      order of precedence:
                                      1. --config/-c
                                      2. env var GITLEAKS_CONFIG
                                      3. (target path)/.gitleaks.toml
                                      If none of the three options are used, then gitleaks will use the default config
      --enable-rule strings           only enable specific rules by id
      --exit-code int                 exit code when leaks have been encountered (default 1)
  -i, --gitleaks-ignore-path string   path to .gitleaksignore file or folder containing one (default &quot;.&quot;)
  -h, --help                          help for gitleaks
      --ignore-gitleaks-allow         ignore gitleaks:allow comments
  -l, --log-level string              log level (trace, debug, info, warn, error, fatal) (default &quot;info&quot;)
      --max-decode-depth int          allow recursive decoding up to this depth (default &quot;0&quot;, no decoding is done)
      --max-target-megabytes int      files larger than this will be skipped
      --no-banner                     suppress banner
      --no-color                      turn off color for verbose output
      --redact uint[=100]             redact secrets from logs and stdout. To redact only parts of the secret just apply a percent value from 0..100. For example --redact=20 (default 100%)
  -f, --report-format string          output format (json, csv, junit, sarif) (default &quot;json&quot;)
  -r, --report-path string            report file
      --report-template string        template file used to generate the report (implies --report-format=template)
  -v, --verbose                       show verbose output from scan
      --version                       version for gitleaks

Use &quot;gitleaks [command] --help&quot; for more information about a command.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Commands&lt;/h3&gt; 
&lt;p&gt;‚ö†Ô∏è v8.19.0 introduced a change that deprecated &lt;code&gt;detect&lt;/code&gt; and &lt;code&gt;protect&lt;/code&gt;. Those commands are still available but are hidden in the &lt;code&gt;--help&lt;/code&gt; menu. Take a look at this &lt;a href=&quot;https://gist.github.com/zricethezav/b325bb93ebf41b9c0b0507acf12810d2&quot;&gt;gist&lt;/a&gt; for easy command translations. If you find v8.19.0 broke an existing command (&lt;code&gt;detect&lt;/code&gt;/&lt;code&gt;protect&lt;/code&gt;), please open an issue.&lt;/p&gt; 
&lt;p&gt;There are three scanning modes: &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;dir&lt;/code&gt;, and &lt;code&gt;stdin&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Git&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;git&lt;/code&gt; command lets you scan local git repos. Under the hood, gitleaks uses the &lt;code&gt;git log -p&lt;/code&gt; command to scan patches. You can configure the behavior of &lt;code&gt;git log -p&lt;/code&gt; with the &lt;code&gt;log-opts&lt;/code&gt; option. For example, if you wanted to run gitleaks on a range of commits you could use the following command: &lt;code&gt;gitleaks git -v --log-opts=&quot;--all commitA..commitB&quot; path_to_repo&lt;/code&gt;. See the &lt;a href=&quot;https://git-scm.com/docs/git-log&quot;&gt;git log&lt;/a&gt; documentation for more information. If there is no target specified as a positional argument, then gitleaks will attempt to scan the current working directory as a git repo.&lt;/p&gt; 
&lt;h4&gt;Dir&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;dir&lt;/code&gt; (aliases include &lt;code&gt;files&lt;/code&gt;, &lt;code&gt;directory&lt;/code&gt;) command lets you scan directories and files. Example: &lt;code&gt;gitleaks dir -v path_to_directory_or_file&lt;/code&gt;. If there is no target specified as a positional argument, then gitleaks will scan the current working directory.&lt;/p&gt; 
&lt;h4&gt;Stdin&lt;/h4&gt; 
&lt;p&gt;You can also stream data to gitleaks with the &lt;code&gt;stdin&lt;/code&gt; command. Example: &lt;code&gt;cat some_file | gitleaks -v stdin&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Creating a baseline&lt;/h3&gt; 
&lt;p&gt;When scanning large repositories or repositories with a long history, it can be convenient to use a baseline. When using a baseline, gitleaks will ignore any old findings that are present in the baseline. A baseline can be any gitleaks report. To create a gitleaks report, run gitleaks with the &lt;code&gt;--report-path&lt;/code&gt; parameter.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;gitleaks git --report-path gitleaks-report.json # This will save the report in a file called gitleaks-report.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once as baseline is created it can be applied when running the detect command again:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;gitleaks git --baseline-path gitleaks-report.json --report-path findings.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After running the detect command with the --baseline-path parameter, report output (findings.json) will only contain new issues.&lt;/p&gt; 
&lt;h2&gt;Pre-Commit hook&lt;/h2&gt; 
&lt;p&gt;You can run Gitleaks as a pre-commit hook by copying the example &lt;code&gt;pre-commit.py&lt;/code&gt; script into your &lt;code&gt;.git/hooks/&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Gitleaks offers a configuration format you can follow to write your own secret detection rules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# Title for the gitleaks configuration file.
title = &quot;Custom Gitleaks configuration&quot;

# You have basically two options for your custom configuration:
#
# 1. define your own configuration, default rules do not apply
#
#    use e.g., the default configuration as starting point:
#    https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml
#
# 2. extend a configuration, the rules are overwritten or extended
#
#    When you extend a configuration the extended rules take precedence over the
#    default rules. I.e., if there are duplicate rules in both the extended
#    configuration and the default configuration the extended rules or
#    attributes of them will override the default rules.
#    Another thing to know with extending configurations is you can chain
#    together multiple configuration files to a depth of 2. Allowlist arrays are
#    appended and can contain duplicates.

# useDefault and path can NOT be used at the same time. Choose one.
[extend]
# useDefault will extend the default gitleaks config built in to the binary
# the latest version is located at:
# https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml
useDefault = true
# or you can provide a path to a configuration to extend from.
# The path is relative to where gitleaks was invoked,
# not the location of the base config.
# path = &quot;common_config.toml&quot;
# If there are any rules you don&#39;t want to inherit, they can be specified here.
disabledRules = [ &quot;generic-api-key&quot;]

# An array of tables that contain information that define instructions
# on how to detect secrets
[[rules]]

# Unique identifier for this rule
id = &quot;awesome-rule-1&quot;

# Short human readable description of the rule.
description = &quot;awesome rule 1&quot;

# Golang regular expression used to detect secrets. Note Golang&#39;s regex engine
# does not support lookaheads.
regex = &#39;&#39;&#39;one-go-style-regex-for-this-rule&#39;&#39;&#39;

# Int used to extract secret from regex match and used as the group that will have
# its entropy checked if `entropy` is set.
secretGroup = 3

# Float representing the minimum shannon entropy a regex group must have to be considered a secret.
entropy = 3.5

# Golang regular expression used to match paths. This can be used as a standalone rule or it can be used
# in conjunction with a valid `regex` entry.
path = &#39;&#39;&#39;a-file-path-regex&#39;&#39;&#39;

# Keywords are used for pre-regex check filtering. Rules that contain
# keywords will perform a quick string compare check to make sure the
# keyword(s) are in the content being scanned. Ideally these values should
# either be part of the identiifer or unique strings specific to the rule&#39;s regex
# (introduced in v8.6.0)
keywords = [
  &quot;auth&quot;,
  &quot;password&quot;,
  &quot;token&quot;,
]

# Array of strings used for metadata and reporting purposes.
tags = [&quot;tag&quot;,&quot;another tag&quot;]

    # ‚ö†Ô∏è In v8.21.0 `[rules.allowlist]` was replaced with `[[rules.allowlists]]`.
    # This change was backwards-compatible: instances of `[rules.allowlist]` still  work.
    #
    # You can define multiple allowlists for a rule to reduce false positives.
    # A finding will be ignored if _ANY_ `[[rules.allowlists]]` matches.
    [[rules.allowlists]]
    description = &quot;ignore commit A&quot;
    # When multiple criteria are defined the default condition is &quot;OR&quot;.
    # e.g., this can match on |commits| OR |paths| OR |stopwords|.
    condition = &quot;OR&quot;
    commits = [ &quot;commit-A&quot;, &quot;commit-B&quot;]
    paths = [
      &#39;&#39;&#39;go\.mod&#39;&#39;&#39;,
      &#39;&#39;&#39;go\.sum&#39;&#39;&#39;
    ]
    # note: stopwords targets the extracted secret, not the entire regex match
    # like &#39;regexes&#39; does. (stopwords introduced in 8.8.0)
    stopwords = [
      &#39;&#39;&#39;client&#39;&#39;&#39;,
      &#39;&#39;&#39;endpoint&#39;&#39;&#39;,
    ]

    [[rules.allowlists]]
    # The &quot;AND&quot; condition can be used to make sure all criteria match.
    # e.g., this matches if |regexes| AND |paths| are satisfied.
    condition = &quot;AND&quot;
    # note: |regexes| defaults to check the _Secret_ in the finding.
    # Acceptable values for |regexTarget| are &quot;secret&quot; (default), &quot;match&quot;, and &quot;line&quot;.
    regexTarget = &quot;match&quot;
    regexes = [ &#39;&#39;&#39;(?i)parseur[il]&#39;&#39;&#39; ]
    paths = [ &#39;&#39;&#39;package-lock\.json&#39;&#39;&#39; ]

# You can extend a particular rule from the default config. e.g., gitlab-pat
# if you have defined a custom token prefix on your GitLab instance
[[rules]]
id = &quot;gitlab-pat&quot;
# all the other attributes from the default rule are inherited

    [[rules.allowlists]]
    regexTarget = &quot;line&quot;
    regexes = [ &#39;&#39;&#39;MY-glpat-&#39;&#39;&#39; ]

# This is a global allowlist which has a higher order of precedence than rule-specific allowlists.
# If a commit listed in the `commits` field below is encountered then that commit will be skipped and no
# secrets will be detected for said commit. The same logic applies for regexes and paths.
[allowlist]
description = &quot;global allow list&quot;
commits = [ &quot;commit-A&quot;, &quot;commit-B&quot;, &quot;commit-C&quot;]
paths = [
  &#39;&#39;&#39;gitleaks\.toml&#39;&#39;&#39;,
  &#39;&#39;&#39;(.*?)(jpg|gif|doc)&#39;&#39;&#39;
]

# note: (global) regexTarget defaults to check the _Secret_ in the finding.
# if regexTarget is not specified then _Secret_ will be used.
# Acceptable values for regexTarget are &quot;match&quot; and &quot;line&quot;
regexTarget = &quot;match&quot;
regexes = [
  &#39;&#39;&#39;219-09-9999&#39;&#39;&#39;,
  &#39;&#39;&#39;078-05-1120&#39;&#39;&#39;,
  &#39;&#39;&#39;(9[0-9]{2}|666)-\d{2}-\d{4}&#39;&#39;&#39;,
]
# note: stopwords targets the extracted secret, not the entire regex match
# like &#39;regexes&#39; does. (stopwords introduced in 8.8.0)
stopwords = [
  &#39;&#39;&#39;client&#39;&#39;&#39;,
  &#39;&#39;&#39;endpoint&#39;&#39;&#39;,
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Refer to the default &lt;a href=&quot;https://github.com/gitleaks/gitleaks/raw/master/config/gitleaks.toml&quot;&gt;gitleaks config&lt;/a&gt; for examples or follow the &lt;a href=&quot;https://github.com/gitleaks/gitleaks/raw/master/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; if you would like to contribute to the default configuration. Additionally, you can check out &lt;a href=&quot;https://blog.gitleaks.io/stop-leaking-secrets-configuration-2-3-aeed293b1fbf&quot;&gt;this gitleaks blog post&lt;/a&gt; which covers advanced configuration setups.&lt;/p&gt; 
&lt;h3&gt;Additional Configuration&lt;/h3&gt; 
&lt;h4&gt;gitleaks:allow&lt;/h4&gt; 
&lt;p&gt;If you are knowingly committing a test secret that gitleaks will catch you can add a &lt;code&gt;gitleaks:allow&lt;/code&gt; comment to that line which will instruct gitleaks to ignore that secret. Ex:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;class CustomClass:
    discord_client_secret = &#39;8dyfuiRyq=vVc3RRr_edRk-fK__JItpZ&#39;  #gitleaks:allow

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;.gitleaksignore&lt;/h4&gt; 
&lt;p&gt;You can ignore specific findings by creating a &lt;code&gt;.gitleaksignore&lt;/code&gt; file at the root of your repo. In release v8.10.0 Gitleaks added a &lt;code&gt;Fingerprint&lt;/code&gt; value to the Gitleaks report. Each leak, or finding, has a Fingerprint that uniquely identifies a secret. Add this fingerprint to the &lt;code&gt;.gitleaksignore&lt;/code&gt; file to ignore that specific secret. See Gitleaks&#39; &lt;a href=&quot;https://github.com/gitleaks/gitleaks/raw/master/.gitleaksignore&quot;&gt;.gitleaksignore&lt;/a&gt; for an example. Note: this feature is experimental and is subject to change in the future.&lt;/p&gt; 
&lt;h4&gt;Decoding&lt;/h4&gt; 
&lt;p&gt;Sometimes secrets are encoded in a way that can make them difficult to find with just regex. Now you can tell gitleaks to automatically find and decode encoded text. The flag &lt;code&gt;--max-decode-depth&lt;/code&gt; enables this feature (the default value &quot;0&quot; means the feature is disabled by default).&lt;/p&gt; 
&lt;p&gt;Recursive decoding is supported since decoded text can also contain encoded text. The flag &lt;code&gt;--max-decode-depth&lt;/code&gt; sets the recursion limit. Recursion stops when there are no new segments of encoded text to decode, so setting a really high max depth doesn&#39;t mean it will make that many passes. It will only make as many as it needs to decode the text. Overall, decoding only minimally increases scan times.&lt;/p&gt; 
&lt;p&gt;The findings for encoded text differ from normal findings in the following ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The location points the bounds of the encoded text 
  &lt;ul&gt; 
   &lt;li&gt;If the rule matches outside the encoded text, the bounds are adjusted to include that as well&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The match and secret contain the decoded value&lt;/li&gt; 
 &lt;li&gt;Two tags are added &lt;code&gt;decoded:&amp;lt;encoding&amp;gt;&lt;/code&gt; and &lt;code&gt;decode-depth:&amp;lt;depth&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Currently supported encodings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;base64&lt;/code&gt; (both standard and base64url)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Reporting&lt;/h4&gt; 
&lt;p&gt;Gitleaks has built-in support for several report formats: &lt;a href=&quot;https://github.com/gitleaks/gitleaks/raw/master/testdata/expected/report/json_simple.json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/gitleaks/gitleaks/raw/master/testdata/expected/report/csv_simple.csv?plain=1&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/gitleaks/gitleaks/raw/master/testdata/expected/report/junit_simple.xml&quot;&gt;&lt;code&gt;junit&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://github.com/gitleaks/gitleaks/raw/master/testdata/expected/report/sarif_simple.sarif&quot;&gt;&lt;code&gt;sarif&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If none of these formats fit your need, you can create your own report format with a &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-templates-in-go#step-4-writing-a-template&quot;&gt;Go &lt;code&gt;text/template&lt;/code&gt; .tmpl file&lt;/a&gt; and the &lt;code&gt;--report-template&lt;/code&gt; flag. The template can use &lt;a href=&quot;https://masterminds.github.io/sprig/&quot;&gt;extended functionality from the &lt;code&gt;Masterminds/sprig&lt;/code&gt; template library&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For example, the following template provides a custom JSON output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-gotemplate&quot;&gt;# jsonextra.tmpl
[{{ $lastFinding := (sub (len . ) 1) }}
{{- range $i, $finding := . }}{{with $finding}}
    {
        &quot;Description&quot;: {{ quote .Description }},
        &quot;StartLine&quot;: {{ .StartLine }},
        &quot;EndLine&quot;: {{ .EndLine }},
        &quot;StartColumn&quot;: {{ .StartColumn }},
        &quot;EndColumn&quot;: {{ .EndColumn }},
        &quot;Line&quot;: {{ quote .Line }},
        &quot;Match&quot;: {{ quote .Match }},
        &quot;Secret&quot;: {{ quote .Secret }},
        &quot;File&quot;: &quot;{{ .File }}&quot;,
        &quot;SymlinkFile&quot;: {{ quote .SymlinkFile }},
        &quot;Commit&quot;: {{ quote .Commit }},
        &quot;Entropy&quot;: {{ .Entropy }},
        &quot;Author&quot;: {{ quote .Author }},
        &quot;Email&quot;: {{ quote .Email }},
        &quot;Date&quot;: {{ quote .Date }},
        &quot;Message&quot;: {{ quote .Message }},
        &quot;Tags&quot;: [{{ $lastTag := (sub (len .Tags ) 1) }}{{ range $j, $tag := .Tags }}{{ quote . }}{{ if ne $j $lastTag }},{{ end }}{{ end }}],
        &quot;RuleID&quot;: {{ quote .RuleID }},
        &quot;Fingerprint&quot;: {{ quote .Fingerprint }}
    }{{ if ne $i $lastFinding }},{{ end }}
{{- end}}{{ end }}
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ gitleaks dir ~/leaky-repo/ --report-path &quot;report.json&quot; --report-format template --report-template testdata/report/jsonextra.tmpl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Sponsorships&lt;/h2&gt; 
&lt;p align=&quot;left&quot;&gt; &lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://coderabbit.ai/?utm_source=oss&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=gitleaks&quot;&gt;coderabbit.ai&lt;/a&gt;&lt;/h3&gt;
&lt;a href=&quot;https://coderabbit.ai/?utm_source=oss&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=gitleaks&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://coderabbit.ai/?utm_source=oss&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=gitleaks&quot;&gt; &lt;img alt=&quot;CodeRabbit.ai Sponsorship&quot; src=&quot;https://github.com/gitleaks/gitleaks/assets/15034943/76c30a85-887b-47ca-9956-17a8e55c6c41&quot; width=&quot;200&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h2&gt;Exit Codes&lt;/h2&gt; 
&lt;p&gt;You can always set the exit code when leaks are encountered with the --exit-code flag. Default exit codes below:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;0 - no leaks present
1 - leaks or error encountered
126 - unknown flag
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>mark3labs/mcp-go</title>
      <link>https://github.com/mark3labs/mcp-go</link>
      <description>&lt;p&gt;A Go implementation of the Model Context Protocol (MCP), enabling seamless integration between LLM applications and external data sources and tools.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Go üöÄ&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mark3labs/mcp-go/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/mark3labs/mcp-go/actions/workflows/ci.yml/badge.svg?branch=main&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/mark3labs/mcp-go&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/mark3labs/mcp-go?cache&quot; alt=&quot;Go Report Card&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://pkg.go.dev/github.com/mark3labs/mcp-go&quot;&gt;&lt;img src=&quot;https://pkg.go.dev/badge/github.com/mark3labs/mcp-go.svg?sanitize=true&quot; alt=&quot;GoDoc&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;strong&gt;A Go implementation of the Model Context Protocol (MCP), enabling seamless integration between LLM applications and external data sources and tools.&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;package main

import (
    &quot;context&quot;
    &quot;fmt&quot;

    &quot;github.com/mark3labs/mcp-go/mcp&quot;
    &quot;github.com/mark3labs/mcp-go/server&quot;
)

func main() {
    // Create MCP server
    s := server.NewMCPServer(
        &quot;Demo üöÄ&quot;,
        &quot;1.0.0&quot;,
    )

    // Add tool
    tool := mcp.NewTool(&quot;hello_world&quot;,
        mcp.WithDescription(&quot;Say hello to someone&quot;),
        mcp.WithString(&quot;name&quot;,
            mcp.Required(),
            mcp.Description(&quot;Name of the person to greet&quot;),
        ),
    )

    // Add tool handler
    s.AddTool(tool, helloHandler)

    // Start the stdio server
    if err := server.ServeStdio(s); err != nil {
        fmt.Printf(&quot;Server error: %v\n&quot;, err)
    }
}

func helloHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
    name, ok := request.Params.Arguments[&quot;name&quot;].(string)
    if !ok {
        return mcp.NewToolResultError(&quot;name must be a string&quot;), nil
    }

    return mcp.NewToolResultText(fmt.Sprintf(&quot;Hello, %s!&quot;, name)), nil
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That&#39;s it!&lt;/p&gt; 
&lt;p&gt;MCP Go handles all the complex protocol details and server management, so you can focus on building great tools. It aims to be high-level and easy to use.&lt;/p&gt; 
&lt;h3&gt;Key features:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: High-level interface means less code and faster development&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: Build MCP servers with minimal boilerplate&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Complete&lt;/strong&gt;*: MCP Go aims to provide a full implementation of the core MCP specification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(*emphasis on &lt;em&gt;aims&lt;/em&gt;)&lt;/p&gt; 
&lt;p&gt;üö® üöß üèóÔ∏è &lt;em&gt;MCP Go is under active development, as is the MCP specification itself. Core features are working but some advanced capabilities are still in progress.&lt;/em&gt;&lt;/p&gt; 
&lt;!-- omit in toc --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#quickstart&quot;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#what-is-mcp&quot;&gt;What is MCP?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#core-concepts&quot;&gt;Core Concepts&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#server&quot;&gt;Server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#tools&quot;&gt;Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#prompts&quot;&gt;Prompts&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#examples&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#contributing&quot;&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#installation-1&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mark3labs/mcp-go/main/#opening-a-pull-request&quot;&gt;Opening a Pull Request&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;go get github.com/mark3labs/mcp-go
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;Let&#39;s create a simple MCP server that exposes a calculator tool and some data:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;package main

import (
    &quot;context&quot;
    &quot;fmt&quot;

    &quot;github.com/mark3labs/mcp-go/mcp&quot;
    &quot;github.com/mark3labs/mcp-go/server&quot;
)

func main() {
    // Create a new MCP server
    s := server.NewMCPServer(
        &quot;Calculator Demo&quot;,
        &quot;1.0.0&quot;,
        server.WithResourceCapabilities(true, true),
        server.WithLogging(),
    )

    // Add a calculator tool
    calculatorTool := mcp.NewTool(&quot;calculate&quot;,
        mcp.WithDescription(&quot;Perform basic arithmetic operations&quot;),
        mcp.WithString(&quot;operation&quot;,
            mcp.Required(),
            mcp.Description(&quot;The operation to perform (add, subtract, multiply, divide)&quot;),
            mcp.Enum(&quot;add&quot;, &quot;subtract&quot;, &quot;multiply&quot;, &quot;divide&quot;),
        ),
        mcp.WithNumber(&quot;x&quot;,
            mcp.Required(),
            mcp.Description(&quot;First number&quot;),
        ),
        mcp.WithNumber(&quot;y&quot;,
            mcp.Required(),
            mcp.Description(&quot;Second number&quot;),
        ),
    )

    // Add the calculator handler
    s.AddTool(calculatorTool, func(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
        op := request.Params.Arguments[&quot;operation&quot;].(string)
        x := request.Params.Arguments[&quot;x&quot;].(float64)
        y := request.Params.Arguments[&quot;y&quot;].(float64)

        var result float64
        switch op {
        case &quot;add&quot;:
            result = x + y
        case &quot;subtract&quot;:
            result = x - y
        case &quot;multiply&quot;:
            result = x * y
        case &quot;divide&quot;:
            if y == 0 {
                return mcp.NewToolResultError(&quot;Cannot divide by zero&quot;), nil
            }
            result = x / y
        }

        return mcp.NewToolResultText(fmt.Sprintf(&quot;%.2f&quot;, result)), nil
    })

    // Start the server
    if err := server.ServeStdio(s); err != nil {
        fmt.Printf(&quot;Server error: %v\n&quot;, err)
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What is MCP?&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://modelcontextprotocol.io&quot;&gt;Model Context Protocol (MCP)&lt;/a&gt; lets you build servers that expose data and functionality to LLM applications in a secure, standardized way. Think of it like a web API, but specifically designed for LLM interactions. MCP servers can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Expose data through &lt;strong&gt;Resources&lt;/strong&gt; (think of these sort of like GET endpoints; they are used to load information into the LLM&#39;s context)&lt;/li&gt; 
 &lt;li&gt;Provide functionality through &lt;strong&gt;Tools&lt;/strong&gt; (sort of like POST endpoints; they are used to execute code or otherwise produce a side effect)&lt;/li&gt; 
 &lt;li&gt;Define interaction patterns through &lt;strong&gt;Prompts&lt;/strong&gt; (reusable templates for LLM interactions)&lt;/li&gt; 
 &lt;li&gt;And more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Core Concepts&lt;/h2&gt; 
&lt;h3&gt;Server&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show Server Examples&lt;/summary&gt; 
 &lt;p&gt;The server is your core interface to the MCP protocol. It handles connection management, protocol compliance, and message routing:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// Create a basic server
s := server.NewMCPServer(
    &quot;My Server&quot;,  // Server name
    &quot;1.0.0&quot;,     // Version
)

// Start the server using stdio
if err := server.ServeStdio(s); err != nil {
    log.Fatalf(&quot;Server error: %v&quot;, err)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Resources&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show Resource Examples&lt;/summary&gt; Resources are how you expose data to LLMs. They can be anything - files, API responses, database queries, system information, etc. Resources can be: 
 &lt;ul&gt; 
  &lt;li&gt;Static (fixed URI)&lt;/li&gt; 
  &lt;li&gt;Dynamic (using URI templates)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Here&#39;s a simple example of a static resource:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// Static resource example - exposing a README file
resource := mcp.NewResource(
    &quot;docs://readme&quot;,
    &quot;Project README&quot;,
    mcp.WithResourceDescription(&quot;The project&#39;s README file&quot;), 
    mcp.WithMIMEType(&quot;text/markdown&quot;),
)

// Add resource with its handler
s.AddResource(resource, func(ctx context.Context, request mcp.ReadResourceRequest) ([]mcp.ResourceContents, error) {
    content, err := os.ReadFile(&quot;README.md&quot;)
    if err != nil {
        return nil, err
    }
    
    return []mcp.ResourceContents{
        mcp.TextResourceContents{
            URI:      &quot;docs://readme&quot;,
            MIMEType: &quot;text/markdown&quot;,
            Text:     string(content),
        },
    }, nil
})
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;And here&#39;s an example of a dynamic resource using a template:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// Dynamic resource example - user profiles by ID
template := mcp.NewResourceTemplate(
    &quot;users://{id}/profile&quot;,
    &quot;User Profile&quot;,
    mcp.WithTemplateDescription(&quot;Returns user profile information&quot;),
    mcp.WithTemplateMIMEType(&quot;application/json&quot;),
)

// Add template with its handler
s.AddResourceTemplate(template, func(ctx context.Context, request mcp.ReadResourceRequest) ([]mcp.ResourceContents, error) {
    // Extract ID from the URI using regex matching
    // The server automatically matches URIs to templates
    userID := extractIDFromURI(request.Params.URI)
    
    profile, err := getUserProfile(userID)  // Your DB/API call here
    if err != nil {
        return nil, err
    }
    
    return []mcp.ResourceContents{
        mcp.TextResourceContents{
            URI:      request.Params.URI,
            MIMEType: &quot;application/json&quot;,
            Text:     profile,
        },
    }, nil
})
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The examples are simple but demonstrate the core concepts. Resources can be much more sophisticated - serving multiple contents, integrating with databases or external APIs, etc.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show Tool Examples&lt;/summary&gt; 
 &lt;p&gt;Tools let LLMs take actions through your server. Unlike resources, tools are expected to perform computation and have side effects. They&#39;re similar to POST endpoints in a REST API.&lt;/p&gt; 
 &lt;p&gt;Simple calculation example:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;calculatorTool := mcp.NewTool(&quot;calculate&quot;,
    mcp.WithDescription(&quot;Perform basic arithmetic calculations&quot;),
    mcp.WithString(&quot;operation&quot;,
        mcp.Required(),
        mcp.Description(&quot;The arithmetic operation to perform&quot;),
        mcp.Enum(&quot;add&quot;, &quot;subtract&quot;, &quot;multiply&quot;, &quot;divide&quot;),
    ),
    mcp.WithNumber(&quot;x&quot;,
        mcp.Required(),
        mcp.Description(&quot;First number&quot;),
    ),
    mcp.WithNumber(&quot;y&quot;,
        mcp.Required(),
        mcp.Description(&quot;Second number&quot;),
    ),
)

s.AddTool(calculatorTool, func(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
    op := request.Params.Arguments[&quot;operation&quot;].(string)
    x := request.Params.Arguments[&quot;x&quot;].(float64)
    y := request.Params.Arguments[&quot;y&quot;].(float64)

    var result float64
    switch op {
    case &quot;add&quot;:
        result = x + y
    case &quot;subtract&quot;:
        result = x - y
    case &quot;multiply&quot;:
        result = x * y
    case &quot;divide&quot;:
        if y == 0 {
            return mcp.NewToolResultError(&quot;Division by zero is not allowed&quot;), nil
        }
        result = x / y
    }
    
    return mcp.FormatNumberResult(result), nil
})
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;HTTP request example:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;httpTool := mcp.NewTool(&quot;http_request&quot;,
    mcp.WithDescription(&quot;Make HTTP requests to external APIs&quot;),
    mcp.WithString(&quot;method&quot;,
        mcp.Required(),
        mcp.Description(&quot;HTTP method to use&quot;),
        mcp.Enum(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;),
    ),
    mcp.WithString(&quot;url&quot;,
        mcp.Required(),
        mcp.Description(&quot;URL to send the request to&quot;),
        mcp.Pattern(&quot;^https?://.*&quot;),
    ),
    mcp.WithString(&quot;body&quot;,
        mcp.Description(&quot;Request body (for POST/PUT)&quot;),
    ),
)

s.AddTool(httpTool, func(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
    method := request.Params.Arguments[&quot;method&quot;].(string)
    url := request.Params.Arguments[&quot;url&quot;].(string)
    body := &quot;&quot;
    if b, ok := request.Params.Arguments[&quot;body&quot;].(string); ok {
        body = b
    }

    // Create and send request
    var req *http.Request
    var err error
    if body != &quot;&quot; {
        req, err = http.NewRequest(method, url, strings.NewReader(body))
    } else {
        req, err = http.NewRequest(method, url, nil)
    }
    if err != nil {
        return mcp.NewToolResultError(fmt.Sprintf(&quot;Failed to create request: %v&quot;, err)), nil
    }

    client := &amp;amp;http.Client{}
    resp, err := client.Do(req)
    if err != nil {
        return mcp.NewToolResultError(fmt.Sprintf(&quot;Request failed: %v&quot;, err)), nil
    }
    defer resp.Body.Close()

    // Return response
    respBody, err := io.ReadAll(resp.Body)
    if err != nil {
        return mcp.NewToolResultError(fmt.Sprintf(&quot;Failed to read response: %v&quot;, err)), nil
    }

    return mcp.NewToolResultText(fmt.Sprintf(&quot;Status: %d\nBody: %s&quot;, resp.StatusCode, string(respBody))), nil
})
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Tools can be used for any kind of computation or side effect:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Database queries&lt;/li&gt; 
  &lt;li&gt;File operations&lt;/li&gt; 
  &lt;li&gt;External API calls&lt;/li&gt; 
  &lt;li&gt;Calculations&lt;/li&gt; 
  &lt;li&gt;System operations&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Each tool should:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Have a clear description&lt;/li&gt; 
  &lt;li&gt;Validate inputs&lt;/li&gt; 
  &lt;li&gt;Handle errors gracefully&lt;/li&gt; 
  &lt;li&gt;Return structured responses&lt;/li&gt; 
  &lt;li&gt;Use appropriate result types&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Prompts&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show Prompt Examples&lt;/summary&gt; 
 &lt;p&gt;Prompts are reusable templates that help LLMs interact with your server effectively. They&#39;re like &quot;best practices&quot; encoded into your server. Here are some examples:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// Simple greeting prompt
s.AddPrompt(mcp.NewPrompt(&quot;greeting&quot;,
    mcp.WithPromptDescription(&quot;A friendly greeting prompt&quot;),
    mcp.WithArgument(&quot;name&quot;,
        mcp.ArgumentDescription(&quot;Name of the person to greet&quot;),
    ),
), func(ctx context.Context, request mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {
    name := request.Params.Arguments[&quot;name&quot;]
    if name == &quot;&quot; {
        name = &quot;friend&quot;
    }
    
    return mcp.NewGetPromptResult(
        &quot;A friendly greeting&quot;,
        []mcp.PromptMessage{
            mcp.NewPromptMessage(
                mcp.RoleAssistant,
                mcp.NewTextContent(fmt.Sprintf(&quot;Hello, %s! How can I help you today?&quot;, name)),
            ),
        },
    ), nil
})

// Code review prompt with embedded resource
s.AddPrompt(mcp.NewPrompt(&quot;code_review&quot;,
    mcp.WithPromptDescription(&quot;Code review assistance&quot;),
    mcp.WithArgument(&quot;pr_number&quot;,
        mcp.ArgumentDescription(&quot;Pull request number to review&quot;),
        mcp.RequiredArgument(),
    ),
), func(ctx context.Context, request mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {
    prNumber := request.Params.Arguments[&quot;pr_number&quot;]
    if prNumber == &quot;&quot; {
        return nil, fmt.Errorf(&quot;pr_number is required&quot;)
    }
    
    return mcp.NewGetPromptResult(
        &quot;Code review assistance&quot;,
        []mcp.PromptMessage{
            mcp.NewPromptMessage(
                mcp.RoleSystem,
                mcp.NewTextContent(&quot;You are a helpful code reviewer. Review the changes and provide constructive feedback.&quot;),
            ),
            mcp.NewPromptMessage(
                mcp.RoleAssistant,
                mcp.NewEmbeddedResource(mcp.ResourceContents{
                    URI: fmt.Sprintf(&quot;git://pulls/%s/diff&quot;, prNumber),
                    MIMEType: &quot;text/x-diff&quot;,
                }),
            ),
        },
    ), nil
})

// Database query builder prompt
s.AddPrompt(mcp.NewPrompt(&quot;query_builder&quot;,
    mcp.WithPromptDescription(&quot;SQL query builder assistance&quot;),
    mcp.WithArgument(&quot;table&quot;,
        mcp.ArgumentDescription(&quot;Name of the table to query&quot;),
        mcp.RequiredArgument(),
    ),
), func(ctx context.Context, request mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {
    tableName := request.Params.Arguments[&quot;table&quot;]
    if tableName == &quot;&quot; {
        return nil, fmt.Errorf(&quot;table name is required&quot;)
    }
    
    return mcp.NewGetPromptResult(
        &quot;SQL query builder assistance&quot;,
        []mcp.PromptMessage{
            mcp.NewPromptMessage(
                mcp.RoleSystem,
                mcp.NewTextContent(&quot;You are a SQL expert. Help construct efficient and safe queries.&quot;),
            ),
            mcp.NewPromptMessage(
                mcp.RoleAssistant,
                mcp.NewEmbeddedResource(mcp.ResourceContents{
                    URI: fmt.Sprintf(&quot;db://schema/%s&quot;, tableName),
                    MIMEType: &quot;application/json&quot;,
                }),
            ),
        },
    ), nil
})
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Prompts can include:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;System instructions&lt;/li&gt; 
  &lt;li&gt;Required arguments&lt;/li&gt; 
  &lt;li&gt;Embedded resources&lt;/li&gt; 
  &lt;li&gt;Multiple messages&lt;/li&gt; 
  &lt;li&gt;Different content types (text, images, etc.)&lt;/li&gt; 
  &lt;li&gt;Custom URI schemes&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;For examples, see the &lt;code&gt;examples/&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h3&gt;Open Developer Guide&lt;/h3&gt;&lt;/summary&gt; 
 &lt;h3&gt;Prerequisites&lt;/h3&gt; 
 &lt;p&gt;Go version &amp;gt;= 1.23&lt;/p&gt; 
 &lt;h3&gt;Installation&lt;/h3&gt; 
 &lt;p&gt;Create a fork of this repository, then clone it:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/mark3labs/mcp-go.git
cd mcp-go
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Testing&lt;/h3&gt; 
 &lt;p&gt;Please make sure to test any new functionality. Your tests should be simple and atomic and anticipate change rather than cement complex patterns.&lt;/p&gt; 
 &lt;p&gt;Run tests from the root directory:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;go test -v &#39;./...&#39;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Opening a Pull Request&lt;/h3&gt; 
 &lt;p&gt;Fork the repository and create a new branch:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git checkout -b my-branch
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Make your changes and commit them:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git add . &amp;amp;&amp;amp; git commit -m &quot;My changes&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Push your changes to your fork:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git push origin my-branch
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Feel free to reach out in a GitHub issue or discussion if you have any questions!&lt;/p&gt; 
&lt;/details&gt;</description>
    </item>
    
  </channel>
</rss>
