<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub OCaml Daily Trending</title>
    <description>Daily Trending of OCaml in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 01:35:59 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>bcpierce00/unison</title>
      <link>https://github.com/bcpierce00/unison</link>
      <description>&lt;p&gt;Unison file synchronizer&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>ocaml/ocaml</title>
      <link>https://github.com/ocaml/ocaml</link>
      <description>&lt;p&gt;The core OCaml system: compilers, runtime system, base libraries&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>semgrep/testo</title>
      <link>https://github.com/semgrep/testo</link>
      <description>&lt;p&gt;Test framework for OCaml&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>semgrep/semgrep</title>
      <link>https://github.com/semgrep/semgrep</link>
      <description>&lt;p&gt;Lightweight static analysis for many languages. Find bug variants with patterns that look like source code.&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>coq/coq</title>
      <link>https://github.com/coq/coq</link>
      <description>&lt;p&gt;Coq is a formal proof management system. It provides a formal language to write mathematical definitions, executable algorithms and theorems together with an environment for semi-interactive development of machine-checked proofs.&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>facebook/infer</title>
      <link>https://github.com/facebook/infer</link>
      <description>&lt;p&gt;A static analyzer for Java, C, C++, and Objective-C&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>semgrep/ocaml-tree-sitter-core</title>
      <link>https://github.com/semgrep/ocaml-tree-sitter-core</link>
      <description>&lt;p&gt;OCaml code generator and runtime library for handling typed tree-sitter CSTs&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>facebook/pyre-check</title>
      <link>https://github.com/facebook/pyre-check</link>
      <description>&lt;p&gt;Performant type-checking for python.&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>janestreet/magic-trace</title>
      <link>https://github.com/janestreet/magic-trace</link>
      <description>&lt;p&gt;magic-trace collects and displays high-resolution traces of what a process is doing&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>astrada/google-drive-ocamlfuse</title>
      <link>https://github.com/astrada/google-drive-ocamlfuse</link>
      <description>&lt;p&gt;FUSE filesystem over Google Drive&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
  </channel>
</rss>
