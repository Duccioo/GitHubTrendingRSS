<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub PowerShell Daily Trending</title>
    <description>Daily Trending of PowerShell in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 01:36:38 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>memstechtips/UnattendedWinstall</title>
      <link>https://github.com/memstechtips/UnattendedWinstall</link>
      <description>&lt;p&gt;Personalized Unattended Answer Files that helps automatically debloat and customize Windows 10 &amp; 11 during the installation process.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UnattendedWinstall&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;UnattendedWinstall leverages Microsoft&#39;s &lt;a href=&quot;https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/update-windows-settings-and-scripts-create-your-own-answer-file-sxs?view=windows-11&quot;&gt;Answer Files&lt;/a&gt; (or Unattend files) to automate and customize Windows installations. &lt;br&gt; It enables modifications to Windows Settings and Packages directly in the Windows ISO during setup.&lt;/p&gt; 
&lt;h3&gt;Why Use an Answer File?&lt;/h3&gt; 
&lt;h4&gt;Security&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provides transparency by allowing inspection of all changes in the answer file.&lt;/li&gt; 
 &lt;li&gt;Runs directly on official Windows ISOs from Microsoft, eliminating the need for unofficial sources.&lt;/li&gt; 
 &lt;li&gt;Utilizes a Microsoft-supported feature designed for streamlined mass deployment of Windows installations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Automation&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enables automated configuration across multiple devices, saving time and effort by eliminating repetitive manual setups.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] UnattendedWinstall has been tested and optimized for personal use. For those interested in customizing further, &lt;a href=&quot;https://schneegans.de/windows/unattend-generator/&quot;&gt;create your own answer file&lt;/a&gt; following &lt;a href=&quot;https://youtu.be/WyLiJl-NQU8&quot;&gt;this video guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Versions&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/releases/tag/v2.1.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Version-2.1.0%20Latest-0078D4?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;Version 2 Release (Latest)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/releases/tag/v1.0.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Version-1.0.0-FFA500?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;Version 1 Release&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Support the Project&lt;/h3&gt; 
&lt;p&gt;If UnattendedWinstall has been useful to you, consider supporting the project, it really does help!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://paypal.me/memstech&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Support-via%20PayPal-FFD700?style=for-the-badge&amp;amp;logo=paypal&amp;amp;logoColor=white&quot; alt=&quot;Support via PayPal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Feedback and Community&lt;/h3&gt; 
&lt;p&gt;If you have feedback, suggestions, or need help with UnattendedWinstall, please feel free to join the discussion on GitHub or our Discord community:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/discussions&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Join-the%20Discussion-2D9F2D?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;Join the Discussion&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.discord.gg/zWGANV8QAX&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Join-Discord%20Community-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Join Discord Community&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 10 or Windows 11 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;(Tested on Windows 10 22H2 &amp;amp; Windows 11 24H2)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;(32-bit, 64-bit and arm64 is supported)&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What Does UnattendedWinstall Do?&lt;/h2&gt; 
&lt;p&gt;The UnattendedWinstall answer file comes with detailed descriptions for nearly all configurations and registry tweaks, which are available for inspection here on GitHub. For customization, download the answer file and open it in editors like &lt;a href=&quot;https://www.cursor.com/&quot;&gt;Cursor&lt;/a&gt; or &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VSCode&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sources and Contributions&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Base Answer File Generation&lt;/strong&gt;: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://schneegans.de/windows/unattend-generator/&quot;&gt;Schneegans Unattend Generator&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Tweaks &amp;amp; Optimizations&lt;/strong&gt;: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/ChrisTitusTech/winutil&quot;&gt;ChrisTitusTech WinUtil&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/FR33THYFR33THY/Ultimate-Windows-Optimization-Guide&quot;&gt;FR33THY&#39;s Ultimate Windows Optimization Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Additional Tweaks&lt;/strong&gt;: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/ntdevlabs/tiny11builder&quot;&gt;Tiny11Builder&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.tenforums.com/&quot;&gt;Ten Forums&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.elevenforum.com/&quot;&gt;Eleven Forum&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://winaerotweaker.com/&quot;&gt;Winaero Tweaker&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ability to choose Windows Edition (Pro is not enforced anymore as in v2.0.0)&lt;/li&gt; 
 &lt;li&gt;Bypasses Windows 11 system requirements&lt;/li&gt; 
 &lt;li&gt;Disables Windows Defender services by default 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;prompted to enable after Windows installation&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Disables User Account Control by default 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;prompted to enable after Windows installation&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Allows execution of PowerShell scripts by default&lt;/li&gt; 
 &lt;li&gt;Skips forced Microsoft account creation during Windows setup&lt;/li&gt; 
 &lt;li&gt;Removes preinstalled bloatware apps except Microsoft Edge, Notepad and Calculator 
  &lt;ul&gt; 
   &lt;li&gt;Copilot and Recall is Disabled.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Sets privacy-related registry keys to disable telemetry&lt;/li&gt; 
 &lt;li&gt;Limits Windows Update to install only security updates for one year&lt;/li&gt; 
 &lt;li&gt;Optimizes registry with various optimization and customization-related keys 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;See the &quot;Set-RecommendedHKLMRegistry&quot; and &quot;Set-RecommendedHKCURegistry&quot; functions for more information&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Disables unnecessary scheduled tasks&lt;/li&gt; 
 &lt;li&gt;Configures Windows services for optimal performance&lt;/li&gt; 
 &lt;li&gt;Enables the Ultimate Performance power plan&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Use the &lt;code&gt;UWScript.ps1&lt;/code&gt; file once Windows is installed to reapply or revert settings in case Windows Update resets some of the settings or if you encounter any issues.&lt;br&gt; It can also be used to achieve a similar experience to UnattendedWinstall on an existing Windows installation without reinstalling Windows.&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;p&gt;&lt;strong&gt;Before Running the Script&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Ensure you open PowerShell as an administrator. Additionally, set the execution policy to allow script execution by running the following command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;Set-ExecutionPolicy Unrestricted
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Running PowerShell with elevated permissions and enabling script execution will ensure that &lt;code&gt;UWScript.ps1&lt;/code&gt; can apply the necessary system changes.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Usage Instructions&lt;/h2&gt; 
&lt;p&gt;To use an answer file, include &lt;code&gt;autounattend.xml&lt;/code&gt; at the root of your Windows Installation Media to be executed during Windows setup.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br&gt; Ensure the answer file is named &lt;code&gt;autounattend.xml&lt;/code&gt;; otherwise, it won’t be recognized by the installer.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;Using Memory&#39;s &lt;a href=&quot;https://github.com/memstechtips/WIMUtil&quot;&gt;WIMUtil&lt;/a&gt; (Highly Preferred)&lt;/h3&gt; 
&lt;p&gt;To use &lt;strong&gt;WIMUtil&lt;/strong&gt;, follow these steps to launch PowerShell as an Administrator and run the installation script:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open PowerShell as Administrator:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Windows 10/11&lt;/strong&gt;: Right-click on the &lt;strong&gt;Start&lt;/strong&gt; button and select &lt;strong&gt;Windows PowerShell (Admin)&lt;/strong&gt; or &lt;strong&gt;Windows Terminal (Admin)&lt;/strong&gt;. &lt;br&gt; PowerShell will open in a new window.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Confirm Administrator Privileges&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If prompted by the User Account Control (UAC), click &lt;strong&gt;Yes&lt;/strong&gt; to allow PowerShell to run as an administrator.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Paste and Run the Command&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Copy the following command: &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;irm &quot;https://github.com/memstechtips/WIMUtil/raw/main/src/WIMUtil.ps1&quot; | iex
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;To paste into PowerShell, &lt;strong&gt;Right-Click&lt;/strong&gt; or press &lt;strong&gt;Ctrl + V&lt;/strong&gt; in the PowerShell or Terminal window. &lt;br&gt; This should automatically paste your copied command.&lt;/li&gt; 
   &lt;li&gt;Press &lt;strong&gt;Enter&lt;/strong&gt; to execute the command.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Once launched, &lt;strong&gt;WIMUtil&lt;/strong&gt; guides you through a wizard:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Select or Download Windows ISO&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Add Latest UnattendedWinstall Answer File Automatically&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extract and Add Current Device Drivers to Installation Media&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create New ISO with Customizations Included&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a Bootable USB Flash Drive with &lt;a href=&quot;https://github.com/ventoy/Ventoy&quot;&gt;Ventoy&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Copy the New ISO File to the Ventoy Flash Drive&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Boot from the USB flash drive, choose your ISO &amp;amp; Install Windows&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For more info, check out the official &lt;a href=&quot;https://github.com/memstechtips/WIMUtil&quot;&gt;WIMUtil&lt;/a&gt; GitHub Repo.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Old Methods&lt;/h3&gt; 
&lt;h4&gt;Method 1: Create a Bootable Windows Installation USB&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/pDEZDD_gEbo&quot;&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Download the &lt;code&gt;autounattend.xml&lt;/code&gt; file and save it on your computer.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Create a &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10&quot;&gt;Windows 10&lt;/a&gt; or &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows11&quot;&gt;Windows 11&lt;/a&gt; Bootable Installation USB drive with &lt;a href=&quot;https://rufus.ie/en/&quot;&gt;Rufus&lt;/a&gt; or the Media Creation Tool.&lt;/p&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Some users have reported issues with the Media Creation Tool when creating the Windows Installation USB. Use it at your own discretion.&lt;/li&gt; 
     &lt;li&gt;When using Rufus, don’t select any of the checkboxes in “Customize Your Windows Experience,” as it creates another &lt;code&gt;autounattend.xml&lt;/code&gt; file that might overwrite settings in the UnattendedWinstall file.&lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/blockquote&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Copy the &lt;code&gt;autounattend.xml&lt;/code&gt; file you downloaded in Step 1 to the root of the Bootable Windows Installation USB you created in Step 2.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Boot from the Windows Installation USB, do a clean install of Windows as normal, and the scripts will run automatically.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h4&gt;Method 2: Create a Custom ISO File&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/pDEZDD_gEbo?si=ChEGghEOLCyLSnp7&amp;amp;t=1117&quot;&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Download the &lt;code&gt;autounattend.xml&lt;/code&gt; file and save it on your computer.&lt;/li&gt; 
  &lt;li&gt;Download the &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10&quot;&gt;Windows 10&lt;/a&gt; or &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows11&quot;&gt;Windows 11&lt;/a&gt; ISO file depending on the version you want.&lt;/li&gt; 
  &lt;li&gt;Download and install &lt;a href=&quot;https://anyburn.com/download.php&quot;&gt;AnyBurn&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;In AnyBurn, select the “Edit Image File” option.&lt;/li&gt; 
    &lt;li&gt;Navigate to and select the Official Windows ISO file you downloaded in Step 2.&lt;/li&gt; 
    &lt;li&gt;Click on “Add” and select the &lt;code&gt;autounattend.xml&lt;/code&gt; file you downloaded in Step 1, or just click and drag the &lt;code&gt;autounattend.xml&lt;/code&gt; into the AnyBurn window.&lt;/li&gt; 
    &lt;li&gt;Click on “Next,” then on “Create Now.” You should be prompted to overwrite the ISO file; click on “Yes.”&lt;/li&gt; 
    &lt;li&gt;Once the process is complete, close AnyBurn.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Use the ISO file to install Windows on a Virtual Machine OR use a program like &lt;a href=&quot;https://rufus.ie/en/&quot;&gt;Rufus&lt;/a&gt; or &lt;a href=&quot;https://github.com/ventoy/Ventoy&quot;&gt;Ventoy&lt;/a&gt; to create a bootable USB flash drive with the edited Windows ISO file.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When using Rufus, don’t select any of the checkboxes in “Customize Your Windows Experience,” as it creates another &lt;code&gt;autounattend.xml&lt;/code&gt; file that might overwrite settings in the UnattendedWinstall file.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;ol start=&quot;5&quot;&gt; 
  &lt;li&gt;Boot from the Windows Installation USB, do a clean install of Windows as normal, and the scripts will run automatically.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h4&gt;Method 3: Use Ventoy Auto Install Plugin&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/4AGZQJTyCOs&quot;&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Download the &lt;code&gt;autounattend.xml&lt;/code&gt; file and save it on your computer.&lt;/li&gt; 
  &lt;li&gt;Download the &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10&quot;&gt;Windows 10&lt;/a&gt; or &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows11&quot;&gt;Windows 11&lt;/a&gt; ISO file, depending on the version you want.&lt;/li&gt; 
  &lt;li&gt;Download and install &lt;a href=&quot;https://github.com/ventoy/Ventoy&quot;&gt;Ventoy&lt;/a&gt; to your desired USB flash drive.&lt;/li&gt; 
  &lt;li&gt;Prepare the folder structure: 
   &lt;ul&gt; 
    &lt;li&gt;In your newly created Ventoy USB disk, create the following folders: &lt;code&gt;ISO&lt;/code&gt; and &lt;code&gt;Templates&lt;/code&gt;. &lt;br&gt; &lt;em&gt;They should be at the root of the drive.&lt;/em&gt;&lt;/li&gt; 
    &lt;li&gt;Inside of the &lt;code&gt;ISO&lt;/code&gt; folder, create a new folder called &lt;code&gt;Windows&lt;/code&gt;.&lt;/li&gt; 
    &lt;li&gt;Copy your Windows ISO files in the &lt;code&gt;ISO\Windows&lt;/code&gt; folder.&lt;/li&gt; 
    &lt;li&gt;Copy your &lt;code&gt;autounattend.xml&lt;/code&gt; into the &lt;code&gt;Templates&lt;/code&gt; folder.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Start VentoyPlugson. Depending on your OS, the steps might differ. 
   &lt;ul&gt; 
    &lt;li&gt;On Windows, run the &lt;code&gt;VentoyPlugson.exe&lt;/code&gt; file.&lt;/li&gt; 
    &lt;li&gt;A new browser window should open up with a Ventoy web interface ready to go.&lt;/li&gt; 
    &lt;li&gt;Select the &lt;code&gt;Auto Install Plugin&lt;/code&gt; menu from the list.&lt;/li&gt; 
    &lt;li&gt;Click on the &lt;code&gt;Add&lt;/code&gt; button.&lt;/li&gt; 
    &lt;li&gt;Select [parent] to make the whole Windows ISO folder benefit from the plugin.&lt;/li&gt; 
    &lt;li&gt;In the Directory Path, paste in the absolute path to your &lt;code&gt;Windows&lt;/code&gt; folder. &lt;br&gt; example: &lt;code&gt;F:\ISO\Windows&lt;/code&gt; (Replace &lt;code&gt;F&lt;/code&gt; with your drive letter.)&lt;/li&gt; 
    &lt;li&gt;In the Template Path, paste in the absolute path to your &lt;code&gt;autounattend.xml&lt;/code&gt; file. &lt;br&gt; example: &lt;code&gt;F:\Templates\autounattend.xml&lt;/code&gt; (Replace &lt;code&gt;F&lt;/code&gt; with your drive letter.) &lt;br&gt; (PSA: If you have more &lt;code&gt;autounattend.xml&lt;/code&gt; files, you can add them later on!)&lt;/li&gt; 
    &lt;li&gt;Click on &lt;code&gt;OK&lt;/code&gt; and you should see a message saying that the configuration has been saved successfully.&lt;/li&gt; 
    &lt;li&gt;Close the VentoyPlugson browser window and stop the VentoyPlugson application.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Boot from the Ventoy USB drive in the computer where you want to install windows. 
   &lt;ul&gt; 
    &lt;li&gt;After selecting a Windows ISO to boot from, you will be prompted to boot with the &lt;code&gt;/Templates/autounattend.xml&lt;/code&gt; file.&lt;/li&gt; 
    &lt;li&gt;Select that option and the &lt;code&gt;autounattend.xml&lt;/code&gt; will be automatically executed during installation.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How can I apply these settings to an existing Windows installation?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run the &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/main/UWScript.ps1&quot;&gt;&lt;code&gt;UWScript.ps1&lt;/code&gt;&lt;/a&gt; file or use the &lt;a href=&quot;https://github.com/ChrisTitusTech/winutil&quot;&gt;Chris Titus Tech Windows Utility&lt;/a&gt; (&lt;a href=&quot;https://youtu.be/pldFPTnOCGM&quot;&gt;Video&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Can this answer file be used for an in-place upgrade?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;No, in-place upgrades do not support answer files.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Why is Windows still updating automatically?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Feature updates are delayed for a year; however, security and driver updates continue as usual.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Why don&#39;t I have internet after installing Windows?&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;p&gt;If you’re unable to connect to the internet after installation, it’s likely because your Wi-Fi or LAN (Ethernet) drivers are missing. Windows sometimes doesn’t include all necessary drivers for network adapters, especially if they’re specific to your device.&lt;/p&gt; 
 &lt;p&gt;To resolve this, follow these steps:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;Download your network driver&lt;/strong&gt; from the manufacturer’s website on another computer with internet access. Look for Wi-Fi or LAN drivers specific to your device model.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Transfer the driver&lt;/strong&gt; to your Windows installation via USB drive.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Install the driver&lt;/strong&gt; on your Windows system and restart if necessary.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;After installation, you should be able to connect to the internet.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;How can I access the previous &quot;IoT-LTSC-Like,&quot; &quot;Standard,&quot; and &quot;Core&quot; versions of the file(s)?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;You still have access to the previous files here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/releases/tag/v1.0.0&quot;&gt;Version 1.0.0 Release&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br&gt; You need to download the &lt;code&gt;Source Code.zip&lt;/code&gt; file. Once extracted, you’ll have access to all the previous v1.0.0 files.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Why isn&#39;t Microsoft Edge Uninstalled?&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Explanation&lt;/summary&gt; 
 &lt;p&gt;I spent a lot of time trying to find a way to uninstall Microsoft Edge during Windows installation. However, it was challenging because of differences between Windows 10 22H2 and Windows 11 24H2. My goal is to use Microsoft’s supported uninstall methods, and I plan to add an easy Edge removal option in future releases.&lt;/p&gt; 
 &lt;p&gt;In the meantime, if you wish to remove Edge after Windows installation, consider using &lt;a href=&quot;https://github.com/FR33THYFR33THY/Ultimate-Windows-Optimization-Guide/raw/main/6%20Windows/14%20Edge.ps1&quot;&gt;this script by FR33THY&lt;/a&gt;. FR33THY’s &lt;em&gt;Ultimate Windows Optimization Guide&lt;/em&gt; was a major inspiration for version 2.0.0 of this project, and I highly recommend exploring it for additional Windows optimization tips.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;How can I add my own Registry Tweaks to v2.0.0 of the &lt;code&gt;autounattend.xml&lt;/code&gt; file?&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;p&gt;You can also still add your own registry entries to the v2.0.0 file, and it is actually easier if you understand where to add it. I&#39;ll give a brief explanation.&lt;/p&gt; 
 &lt;p&gt;For registry entries that apply to the local machine, i.e., &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; registry keys, you can find the &lt;code&gt;function SetRecommendedHKLMRegistry&lt;/code&gt; in the &lt;code&gt;autounattend.xml&lt;/code&gt; file, see here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L1981&quot;&gt;https://github.com/memstechtips/UnattendedWinstall/blob/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L1981&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;and then add whatever registry entries you want to add in &lt;code&gt;.reg&lt;/code&gt; format, like the rest of the entries are set, and just make sure you add it before the &lt;code&gt;&quot;@&lt;/code&gt; to make it part of the &lt;code&gt;.reg&lt;/code&gt; file that will be generated, see here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L3412&quot;&gt;https://github.com/memstechtips/UnattendedWinstall/blob/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L3412&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;and it will then be applied to the registry.&lt;/p&gt; 
 &lt;p&gt;Similarly, if you have &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt; registry keys, you can add those to the &lt;code&gt;User Customization.ps1&lt;/code&gt; file in the same way as explained above, starting here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L3912&quot;&gt;https://github.com/memstechtips/UnattendedWinstall/blob/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L3912&lt;/a&gt; so below the &lt;code&gt;Windows Registry Editor Version 5.00&lt;/code&gt; and then ending before the &lt;code&gt;&quot;@&lt;/code&gt; here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L4423&quot;&gt;https://github.com/memstechtips/UnattendedWinstall/blob/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L4423&lt;/a&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br&gt; The above links might not take you to the correct lines of code once new versions of the file are released, but it does take you to the correct lines on v2.0.0.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>actions/runner-images</title>
      <link>https://github.com/actions/runner-images</link>
      <description>&lt;p&gt;GitHub Actions runner images&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Actions Runner Images&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#available-images&quot;&gt;Available Images&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#announcements&quot;&gt;Announcements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#image-definitions&quot;&gt;Image Definitions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#image-releases&quot;&gt;Image Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#software-and-image-support&quot;&gt;Software and Image Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#how-to-interact-with-the-repo&quot;&gt;How to Interact with the Repo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#faqs&quot;&gt;FAQs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;This repository contains the source code used to create the VM images for &lt;a href=&quot;https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners&quot;&gt;GitHub-hosted runners&lt;/a&gt; used for Actions, as well as for &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops#use-a-microsoft-hosted-agent&quot;&gt;Microsoft-hosted agents&lt;/a&gt; used for Azure Pipelines. To build a VM machine from this repo&#39;s source, see the &lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/docs/create-image-and-azure-resources.md&quot;&gt;instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Available Images&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Image&lt;/th&gt; 
   &lt;th&gt;YAML Label&lt;/th&gt; 
   &lt;th&gt;Included Software&lt;/th&gt; 
   &lt;th&gt;Rollout Status of Latest Image Release&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu 24.04&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ubuntu-latest&lt;/code&gt; or &lt;code&gt;ubuntu-24.04&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/ubuntu/Ubuntu2404-Readme.md&quot;&gt;ubuntu-24.04&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fubuntu24.json&quot; alt=&quot;Endpoint Badge&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu 22.04&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ubuntu-22.04&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/ubuntu/Ubuntu2204-Readme.md&quot;&gt;ubuntu-22.04&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fubuntu22.json&quot; alt=&quot;Endpoint Badge&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu 20.04 &lt;sup&gt;deprecated&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ubuntu-20.04&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/ubuntu/Ubuntu2004-Readme.md&quot;&gt;ubuntu-20.04&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fubuntu20.json&quot; alt=&quot;Endpoint Badge&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 15 &lt;sup&gt;beta&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;macos-15-large&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/macos/macos-15-Readme.md&quot;&gt;macOS-15&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fmacos-15.json&quot; alt=&quot;Endpoint Badge&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 15 Arm64 &lt;sup&gt;beta&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;macos-15&lt;/code&gt; or &lt;code&gt;macos-15-xlarge&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/macos/macos-15-arm64-Readme.md&quot;&gt;macOS-15-arm64&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fmacos-15-arm64.json&quot; alt=&quot;Endpoint Badge&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 14&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;macos-latest-large&lt;/code&gt; or &lt;code&gt;macos-14-large&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/macos/macos-14-Readme.md&quot;&gt;macOS-14&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fmacos-14.json&quot; alt=&quot;Endpoint Badge&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 14 Arm64&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;macos-latest&lt;/code&gt;, &lt;code&gt;macos-14&lt;/code&gt;, &lt;code&gt;macos-latest-xlarge&lt;/code&gt; or &lt;code&gt;macos-14-xlarge&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/macos/macos-14-arm64-Readme.md&quot;&gt;macOS-14-arm64&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fmacos-14-arm64.json&quot; alt=&quot;Endpoint Badge&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 13&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;macos-13&lt;/code&gt; or &lt;code&gt;macos-13-large&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/macos/macos-13-Readme.md&quot;&gt;macOS-13&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fmacos-13.json&quot; alt=&quot;Endpoint Badge&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 13 Arm64&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;macos-13-xlarge&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/macos/macos-13-arm64-Readme.md&quot;&gt;macOS-13-arm64&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fmacos-13-arm64.json&quot; alt=&quot;Endpoint Badge&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Server 2025 &lt;sup&gt;beta&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;windows-2025&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/windows/Windows2025-Readme.md&quot;&gt;windows-2025&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fwin25.json&quot; alt=&quot;Endpoint Badge&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Server 2022&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;windows-latest&lt;/code&gt; or &lt;code&gt;windows-2022&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/windows/Windows2022-Readme.md&quot;&gt;windows-2022&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fwin22.json&quot; alt=&quot;Endpoint Badge&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Server 2019&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;windows-2019&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/windows/Windows2019-Readme.md&quot;&gt;windows-2019&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fwin19.json&quot; alt=&quot;Endpoint Badge&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Label scheme&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;In general the &lt;code&gt;-latest&lt;/code&gt; label is used for the latest OS image version that is GA&lt;/li&gt; 
 &lt;li&gt;Before moving the&lt;code&gt;-latest&lt;/code&gt; label to a new OS version we will announce the change and give sufficient lead time for users to update their workflows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Announcements&lt;/h2&gt; 
&lt;p&gt;See notable upcoming changes by viewing issues with the &lt;a href=&quot;https://github.com/actions/runner-images/labels/Announcement&quot;&gt;Announcement&lt;/a&gt; label.&lt;/p&gt; 
&lt;h2&gt;Image Definitions&lt;/h2&gt; 
&lt;h3&gt;Beta&lt;/h3&gt; 
&lt;p&gt;The purpose of a Beta is to collect feedback on an image before it is released to GA. The goal of a Beta is to identify and fix any potential issues that exist on that image. Images are updated on a weekly cadence. Any workflows that run on a beta image do not fall under the customer &lt;a href=&quot;https://github.com/customer-terms/github-online-services-sla&quot;&gt;SLA&lt;/a&gt; in place for Actions. Customers choosing to use Beta images are encouraged to provide feedback in the runner-images repo by creating an issue. A Beta may take on different availability, i.e. public vs private.&lt;/p&gt; 
&lt;h3&gt;GA&lt;/h3&gt; 
&lt;p&gt;A GA (General Availability) image has been through a Beta period and is deemed ready for general use. Images are updated on a weekly cadence. In order to be moved to GA the image must meet the following criteria:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Has been through a Beta period (public or private)&lt;/li&gt; 
 &lt;li&gt;Most major software we install on the image has a compatible version for the underlying OS and&lt;/li&gt; 
 &lt;li&gt;All major bugs reported during the Beta period have been addressed.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This image type falls under the customer &lt;a href=&quot;https://github.com/customer-terms/github-online-services-sla&quot;&gt;SLA&lt;/a&gt; for actions. GA images are eventually deprecated according to our guidelines as we only support the latest 2 versions of an OS.&lt;/p&gt; 
&lt;h4&gt;Latest Migration Process&lt;/h4&gt; 
&lt;p&gt;GitHub Actions and Azure DevOps use the &lt;code&gt;-latest&lt;/code&gt; YAML label (ex: &lt;code&gt;ubuntu-latest&lt;/code&gt;, &lt;code&gt;windows-latest&lt;/code&gt;, and &lt;code&gt;macos-latest&lt;/code&gt;). These labels point towards the newest stable OS version available.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;-latest&lt;/code&gt; migration process is gradual and happens over 1-2 months in order to allow customers to adapt their workflows to the newest OS version. During this process, any workflow using the &lt;code&gt;-latest&lt;/code&gt; label, may see changes in the OS version in their workflows or pipelines. To avoid unwanted migration, users can specify a specific OS version in the yaml file (ex: macos-14, windows-2022, ubuntu-22.04).&lt;/p&gt; 
&lt;h2&gt;Image Releases&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;How to best follow along with changes&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Find the latest releases for this repository &lt;a href=&quot;https://github.com/actions/runner-images/releases&quot;&gt;here.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Subscribe to the releases coming out of this repository, instructions &lt;a href=&quot;https://docs.github.com/en/account-and-profile/managing-subscriptions-and-notifications-on-github/setting-up-notifications/configuring-notifications#configuring-your-watch-settings-for-an-individual-repository&quot;&gt;here.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Upcoming changes: A pre-release is created when the deployment of an image has started. As soon as the deployment is finished, the pre-release is converted to a release. If you have subscribed to releases, you will get notified of pre-releases as well.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You can also track upcoming changes using the &lt;a href=&quot;https://github.com/actions/runner-images/labels/awaiting-deployment&quot;&gt;awaiting-deployment&lt;/a&gt; label.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For high impact changes, we will post these in advance to the GitHub Changelog on our &lt;a href=&quot;https://github.blog/changelog/&quot;&gt;blog&lt;/a&gt; and on &lt;a href=&quot;https://twitter.com/GHchangelog&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Ex: breaking changes, GA or deprecation of images&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;Cadence&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We typically deploy weekly updates to the software on the runner images.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Software and Image Support&lt;/h2&gt; 
&lt;h3&gt;Support Policy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Tools and versions will typically be removed 6 months after they are deprecated or have reached end-of-life&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We support (at maximum) 2 GA images and 1 beta image at a time. We begin the deprecation process of the oldest image label once the newest OS image label has been released to GA.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The images generally contain the latest versions of packages installed except for Ubuntu LTS where we mostly rely on the Canonical-provided repositories.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Popular tools can have several versions installed side-by-side with the following strategy:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tool name&lt;/th&gt; 
   &lt;th&gt;Installation strategy&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docker images&lt;/td&gt; 
   &lt;td&gt;not more than 3 latest LTS OS\tool versions. New images or new versions of current images are added using the standard tool request process&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Java&lt;/td&gt; 
   &lt;td&gt;all LTS versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;3 latest LTS versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;3 latest minor versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python &lt;br&gt; Ruby&lt;/td&gt; 
   &lt;td&gt;5 most popular &lt;code&gt;major.minor&lt;/code&gt; versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PyPy&lt;/td&gt; 
   &lt;td&gt;3 most popular &lt;code&gt;major.minor&lt;/code&gt; versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;.NET Core&lt;/td&gt; 
   &lt;td&gt;2 latest LTS versions and 1 latest version. For each feature version only latest patch is installed. Note for &lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/docs/dotnet-ubuntu.md&quot;&gt;Ubuntu images see details.&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GCC &lt;br&gt; GNU Fortran &lt;br&gt; Clang &lt;br&gt; GNU C++&lt;/td&gt; 
   &lt;td&gt;3 latest major versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android NDK&lt;/td&gt; 
   &lt;td&gt;1 latest non-LTS, 2 latest LTS versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Xcode&lt;/td&gt; 
   &lt;td&gt;- only one major version of Xcode will be supported per macOS version &lt;br&gt; - all minor versions of the supported major version will be available &lt;br&gt; - beta and RC versions will be provided &quot;as-is&quot; in the latest available macOS image only no matter of beta/GA status of the image &lt;br&gt; - when a new patch version is released, the previous patch version will be replaced&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Package managers usage&lt;/h3&gt; 
&lt;p&gt;We use third-party package managers to install software during the image generation process. The table below lists the package managers and the software installed.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Third-party repositories are re-evaluated every year to identify if they are still useful and secure.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Operating system&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Package manager&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;Third-party repos and packages&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Ubuntu&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://wiki.debian.org/Apt&quot;&gt;APT&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable&quot;&gt;containers&lt;/a&gt; (Ubuntu 20 only) &lt;br&gt; &lt;a href=&quot;https://download.docker.com/linux/ubuntu&quot;&gt;docker&lt;/a&gt; (Ubuntu20 0nly) &lt;br&gt; &lt;a href=&quot;https://packages.adoptium.net/artifactory/deb/&quot;&gt;Eclipse-Temurin (Adoptium)&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://packages.erlang-solutions.com/ubuntu&quot;&gt;Erlang&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;http://ppa.launchpad.net/mozillateam/ppa/ubuntu&quot;&gt;Firefox&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://packagecloud.io/install/repositories/github/git-lfs&quot;&gt;git-lfs&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://launchpad.net/~git-core/+archive/ubuntu/ppa&quot;&gt;git&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://packages.cloud.google.com/apt&quot;&gt;Google Cloud CLI&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://cli-assets.heroku.com/channels/stable/apt&quot;&gt;Heroku&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://dl.hhvm.com/ubuntu&quot;&gt;HHvm&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://repo.mongodb.org/apt/ubuntu&quot;&gt;MongoDB&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://download.mono-project.com/repo/ubuntu&quot;&gt;Mono&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://packages.microsoft.com/repos/edge&quot;&gt;MS Edge&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://apt.postgresql.org/pub/repos/apt/&quot;&gt;PostgreSQL&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://cloud.r-project.org/bin/linux/ubuntu&quot;&gt;R&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://pypa.github.io/pipx&quot;&gt;pipx&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;ansible-core &lt;br&gt;yamllint&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Windows&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://chocolatey.org&quot;&gt;Chocolatey&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;No third-party repos installed&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;macOS&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://github.com/aws/homebrew-tap&quot;&gt;aws-cli v2&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/Azure/homebrew-bicep&quot;&gt;azure/bicep&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/mongodb/homebrew-brew&quot;&gt;mongodb/brew&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://pypa.github.io/pipx/&quot;&gt;pipx&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;yamllint&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Image Deprecation Policy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Images begin the deprecation process of the oldest image label once a new GA OS version has been released.&lt;/li&gt; 
 &lt;li&gt;Deprecation process begins with an announcement that sets a date for deprecation&lt;/li&gt; 
 &lt;li&gt;As it gets closer to the date, GitHub begins doing scheduled brownouts of the image&lt;/li&gt; 
 &lt;li&gt;During this time there will be an Announcement pinned in the repo to remind users of the deprecation.&lt;/li&gt; 
 &lt;li&gt;Finally GitHub will deprecate the image and it will no longer be available&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Preinstallation Policy&lt;/h3&gt; 
&lt;p&gt;In general, these are the guidelines we follow when deciding what to pre-install on our images:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Popularity: widely-used tools and ecosystems will be given priority.&lt;/li&gt; 
 &lt;li&gt;Latest Technology: recent versions of tools will be given priority.&lt;/li&gt; 
 &lt;li&gt;Deprecation: end-of-life tools and versions will not be added.&lt;/li&gt; 
 &lt;li&gt;Licensing: MIT, Apache, or GNU licenses are allowed.&lt;/li&gt; 
 &lt;li&gt;Time &amp;amp; Space on the Image: we will evaluate how much time is saved and how much space is used by having the tool pre-installed.&lt;/li&gt; 
 &lt;li&gt;Support: If a tool requires the support of more than one version, we will consider the cost of this maintenance.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Default Version Update Policy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;In general, once a new version is installed on the image, we announce the default version update 2 weeks prior to deploying it.&lt;/li&gt; 
 &lt;li&gt;For potentially dangerous updates, we may extend the timeline up to 1 month between the announcement and deployment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Interact with the Repo&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Issues&lt;/strong&gt;: To file a bug report, or request tools to be added/updated, please&amp;nbsp;&lt;a href=&quot;https://github.com/actions/runner-images/issues/new/choose&quot;&gt;open an issue using the appropriate template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Discussions&lt;/strong&gt;: If you want to share your thoughts about image configuration, installed software, or bring a new idea, please create a new topic in a&amp;nbsp;&lt;a href=&quot;https://github.com/actions/runner-images/discussions&quot;&gt;discussion&lt;/a&gt;&amp;nbsp;for a corresponding category. Before making a new discussion please make sure no similar topics were created earlier.&lt;/li&gt; 
 &lt;li&gt;For general questions about using the runner images or writing your Actions workflow, please open requests in the &lt;a href=&quot;https://github.community/c/github-actions/41&quot;&gt;GitHub Actions Community Forum&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQs&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;What images are available for GitHub Actions and Azure DevOps?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The availability of images for GitHub Actions and Azure DevOps is the same. However, deprecation policies may differ. See documentation for more details:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners#supported-runners-and-hardware-resources&quot;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&amp;amp;tabs=yaml#software&quot;&gt;Azure DevOps&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;What image version is used in my build?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Usually, image deployment takes 2-3 days, and documentation in the &lt;code&gt;main&lt;/code&gt; branch is only updated when deployment is finished. To find out which image version and what software versions are used in a specific build, see &lt;code&gt;Set up job&lt;/code&gt; (GitHub Actions) or &lt;code&gt;Initialize job&lt;/code&gt; (Azure DevOps) step log. &lt;img width=&quot;1440&quot; alt=&quot;actions-runner-image&quot; src=&quot;https://github.com/actions/runner-images/assets/88318005/922a8bf5-3e4d-4265-9527-b3b51e6bf9c8&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;Looking for other Linux distributions?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;We do not plan to offer other Linux distributions. We recommend using Docker if you&#39;d like to build using other distributions with the hosted runner images. Alternatively, you can leverage &lt;a href=&quot;https://help.github.com/en/actions/hosting-your-own-runners&quot;&gt;self-hosted runners&lt;/a&gt; and fully customize your VM image to your needs.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;How do I contribute to the macOS source?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;macOS source lives in this repository and is available for everyone. However, macOS image-generation CI doesn&#39;t support external contributions yet so we are not able to accept pull-requests for now.&lt;/p&gt; 
 &lt;p&gt;We are in the process of preparing macOS CI to accept contributions. Until then, we appreciate your patience and ask you to continue to make tool requests by filing issues.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;How does GitHub determine what tools are installed on the images?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;For some tools, we always install the latest at the time of the deployment; for others, we pin the tool to specific version(s). For more details please see the &lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#preinstallation-policy&quot;&gt;Preinstallation Policy&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;How do I request that a new tool be pre-installed on the image?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; Please create an issue and get an approval from us to add this tool to the image before creating the pull request. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;What branch should I use to build custom image?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; We strongly encourage customers to build their own images using the main branch. This repository contains multiple branches and releases that serve as document milestones to reflect what software is installed in the images at certain point of time. Current builds are not idempotent and if one tries to build a runner image using the specific tag it is not guaranteed that the build will succeed. 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>Micke-K/IntuneManagement</title>
      <link>https://github.com/Micke-K/IntuneManagement</link>
      <description>&lt;p&gt;Copy, export, import, delete, document and compare policies and profiles in Intune and Azure with PowerShell script and WPF UI. Import ADMX files and registry settings with ADMX ingestion. View and edit PowerShell script.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IntuneManagement with PowerShell and WPF UI&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://twitter.com/Micke_K_72&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/Micke_K_72.svg?style=social&quot; target=&quot;_blank&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;These PowerShell scripts are using Microsoft Authentication Library (MSAL), Microsoft Graph APIs and Azure Management APIs to manage objects in Intune and Azure. The scripts have a simple WPF UI and it supports operations like Export, Import, Copy, Download, Compare etc.&lt;/p&gt; 
&lt;p&gt;This makes it easy to backup or clone a complete Intune environment. The scripts can export and import objects including assignments and support import/export between tenants. The scripts will create a migration table during export and use that for importing assignments in other environments. It will create missing groups in the target environment during import. Group information like name, description and type will be imported based on the exported group e.g. dynamic groups are supported. There will be one json file for each group in the export folder.&lt;/p&gt; 
&lt;p&gt;The script also support dependencies e.g. an App Protection is depending on an App, Policy Sets are depending on Compliance Policies, objects has Scope Tags etc. Dependency support requires exported json files and that the dependency objects are imported in the environment. The script uses the exported json files to get the Id and names of the exported object and uses that information and updates Id&#39;s before import an object from a json file. The Bulk Import form shows the import order of the objects. The objects with the lowest order number will be imported first.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/IntuneManagement.PNG&quot; height=&quot;80%&quot; width=&quot;80%&quot;&gt; &lt;/p&gt; 
&lt;p&gt;This PowerShell application is based on the foundation modules CloudAPIPowerShellManagement and Core. These modules manages UI, settings, logging etc. The functionality for the application is located in the extension modules. This makes it easy to add/remove features, views etc. Additional features will be added...&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Security note:&lt;/strong&gt; Since the scripts are not signed, a warning might be display when running it and files might be blocked. The script will unblock all files. This is to avoid issues that it fails to load the MSAL library etc. If there are any security concerns, the PowerShell code can be reviewed and the DLL files can be downloaded manually from Microsoft repositories, see links below. The DLL files &lt;em&gt;CAN&lt;/em&gt; be removed but MSAL is a pre-requisite for authentication. The script will try to find the DLL in the Az or MSAL.PS module if not found in the script root directory. DLL files are included to reduce dependencies.&lt;/p&gt; 
&lt;h2&gt;Starting the App&lt;/h2&gt; 
&lt;p&gt;Before starting the app:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The CMD files needs to be unblocked before the app can be started. The app can be started without it but Windows will prompt with a security warning.&lt;/li&gt; 
 &lt;li&gt;The script will unblock all other files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Before logging on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The app will use the Intune PowerShell Azure Enterprise Application by default and only use the permissions granted to that appliction. Disable &lt;strong&gt;Use Default Permissions&lt;/strong&gt; in Settings to request additional permissions. This will cause a consent prompt if one or more permissions are missing for the app. &lt;strong&gt;Note:&lt;/strong&gt; If the app has not been approved for the organization, a consent prompt will be displayed.&lt;/li&gt; 
 &lt;li&gt;Enable &lt;strong&gt;Get Tenant List&lt;/strong&gt; in Settings if accessing multiple environments with the same account e.g. a guest account in other tenants. This might cause a Consent prompt&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Start the script by running &lt;strong&gt;Start.cmd&lt;/strong&gt;, &lt;strong&gt;Start-WithJson.cmd&lt;/strong&gt;, &lt;strong&gt;Start-WithConsole.cmd&lt;/strong&gt; or &lt;strong&gt;Start-IntuneManagement.ps1&lt;/strong&gt;. &lt;strong&gt;Start-WithConsole.cmd&lt;/strong&gt; will leave the command prompt window open so you can see the log while running the app.&lt;/p&gt; 
&lt;h2&gt;Silent Batch Job (Beta)&lt;/h2&gt; 
&lt;p&gt;The script can be executed without UI. This is to support DevOps environment.&lt;/p&gt; 
&lt;p&gt;Silent batch job is supported by the following features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Export&lt;/li&gt; 
 &lt;li&gt;Import&lt;/li&gt; 
 &lt;li&gt;Documentation&lt;/li&gt; 
 &lt;li&gt;Compare&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Silent Batch Job feature requires an Azure App to be configured with a secret or a certificate. The app must also be delegated with the required permissions to Graph objects used by the tool.&lt;/p&gt; 
&lt;p&gt;The silent feature uses an exported json file with settings for the specified operation. This file can be generated in the Bulk Export/Import forms. Required settings for the silent job is configured in the form and then exported to a file. The path to the file is then passed on the command line. The file can be used for multiple environments if the &lt;strong&gt;Add company name to the path&lt;/strong&gt; option is selected. Note that this requires that the app must have at least read permission on the Organizations API.&lt;/p&gt; 
&lt;p&gt;The following variables can be used in the path and filename:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;%Date% - This will be translated to yyyy-MM-dd format (eg 2020-02-27)&lt;/li&gt; 
 &lt;li&gt;%DateTime% - This will be translated to yyyyMMdd-HHmm format (eg 20200227-1750)&lt;/li&gt; 
 &lt;li&gt;%Organization% - Name of the tenant&lt;/li&gt; 
 &lt;li&gt;Any environment variable&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The tool will by default generate the files; &lt;code&gt;BulkExport.json&lt;/code&gt; and &lt;code&gt;BulkImport.json&lt;/code&gt;. These files can be merged into one file but that must be done manually. These files can also be edited manually. Each setting represents a control in the UI form. When the script is triggered silently, it will create the form in the background, populate it with the values from the file and then trigger the bulk function.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The Silent Batch feature use settings configured in the UI. If this is triggered in a DevOps envionment, it is recommended to generate a settings JSON file with the desired settings and then use that in the DevOps environment&lt;/p&gt; 
&lt;p&gt;The app authentication can either be passed on the command line or stored in the settings. Tennant Settings is required for multiple environments.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Command line example:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Start-IntuneManagement.ps1 -Silent -TenantId &quot;&amp;lt;&lt;em&gt;TenantID&lt;/em&gt;&amp;gt;&quot; -SilentBatchFile &amp;lt;&lt;em&gt;PathToFile&lt;/em&gt;&amp;gt; [-AppId &amp;lt;&lt;em&gt;AppId&lt;/em&gt;&amp;gt;] [-Secret &amp;lt;&lt;em&gt;Secret&lt;/em&gt;&amp;gt; | -Certificate &amp;lt;&lt;em&gt;CertThumb&lt;/em&gt;&amp;gt;]&lt;/p&gt; 
&lt;p&gt;Start-IntuneManagement.ps1 -Silent -SilentBatchFile &quot;C:\Temp\BatchImport.json&quot; -TenantId &quot;00000000-0000-0000-0000-000000000000&quot; -AppId &quot;00000000-0000-0000-0000-000000000001&quot; -Secret &quot;KJ76P~B9###9-.8I####-_MySecret&quot;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Setting example:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Start-IntuneManagement.ps1 -Silent -SilentBatchFile &quot;C:\Temp\BatchImport.json&quot; -TenantId &quot;00000000-0000-0000-0000-000000000000&quot;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;This script has an extension that can document profiles and policies in Intune. The output is using the same language strings as the Intune portal.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/Documentation.md&quot;&gt;Documentation&lt;/a&gt; for more information&lt;/p&gt; 
&lt;h2&gt;Import&lt;/h2&gt; 
&lt;p&gt;The script can import the exported json files in multiple ways.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Always import:&lt;/strong&gt; The script will try to import the file. It will not check if it exists. This is the default behavior&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Skip if object exists:&lt;/strong&gt; The script will look if there is an existing object with the same name and type. It will not import the file if existing object is detected&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Replace (Preview):&lt;/strong&gt; If an existing object is detected, the script will&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Import the file without assignments&lt;/li&gt; 
   &lt;li&gt;Copy assignments from the existing object&lt;/li&gt; 
   &lt;li&gt;Run PostReplace commands - Priority will be set for Enrollment Restrictions etc.&lt;/li&gt; 
   &lt;li&gt;Update PolicySets object(s) to use the new imported object (detected by policySet assignments)&lt;/li&gt; 
   &lt;li&gt;Delete the original object&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Update (Preview):&lt;/strong&gt; This will update the existing object.&lt;/p&gt; &lt;p&gt;The update APIs do not support all the properties that the import APIs do and object types behaves differently during update e.g. Settings for &lt;strong&gt;Endpoint Security&lt;/strong&gt; objects will not be cleared. There is no API for removing settings, only adding. If a setting does not exist in the import file, the existing setting will be set to &lt;em&gt;Not Configured&lt;/em&gt;. &lt;strong&gt;Settings Catalog&lt;/strong&gt; replaces the whole settings property during update.&lt;/p&gt; &lt;p&gt;This has been tested with all supported object types &lt;em&gt;except&lt;/em&gt; Import Scripts (Shell), Android OEM Config and Apple Enrollment Types.&lt;/p&gt; &lt;p&gt;Each application type works differently. Update functionality has been tested on Win32, Windows MSI LoB, iOS Store, Microsoft Store and Microsoft 365 (Windows and MacOS).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; Use Replace with caution! Replace will delete the existing object after a new object is imported and the assignments are copied, but it could cause issues in the environment if something in the process goes wrong. Replacing single objects can break references e.g. replacing an Application can break AutoPilot profiles, App Protection and App Configuration policies. Verify the process in a test environment before using this!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Recommendation:&lt;/strong&gt; Backup all policies before running Replace/Update.&lt;/p&gt; 
&lt;p&gt;The Replace/Update feature can be used in a scenario where all profiles/policies are managed in a separate reference (Dev/Test) and then implemented in one or more destination environments. The existing objects will then be reset to have the same settings as the reference environment&lt;/p&gt; 
&lt;h2&gt;Comparison&lt;/h2&gt; 
&lt;p&gt;This script has an extension that can compare objects in Intune with exported json files. It will display a data grid with the values and highlight updated values with red.&lt;/p&gt; 
&lt;p&gt;Objects can be compared based on property values or documented values.&lt;/p&gt; 
&lt;p&gt;The property value method is a quick way to compare objects but it will only show the names and values of the native Intune object. This is not a good comparison method for Settings objects since they have all the settings in one property.&lt;/p&gt; 
&lt;p&gt;The documentation method is a bit slower but will show the values as they are stated in the Intune portal. This is the recommended way to compare objects but note that this is only supported on object types that supports documentation.&lt;/p&gt; 
&lt;p&gt;Bulk compare is supported. This can be performed in two ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Intune Objects with Exported Files&lt;/strong&gt; - This will read each exported file and compare it with the existing object&lt;/p&gt; &lt;p&gt;The result file will be stored in the exported folder structure. Either in the Object Type folder or the parent folder depending on the Save as setting.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This cannot be used with files exported from a different environment since it used the Id as identifier&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Named Objects in Intune&lt;/strong&gt; - Compare Intune objects based on patterns&lt;/p&gt; &lt;p&gt;This can be used in where a pattern is used separate objects between different environments e.g. [Test] Policy 1 vs [Prod] Policy 1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Files in Exported Folders&lt;/strong&gt; - Compare two exported folders&lt;/p&gt; &lt;p&gt;This can be used in where a pattern is used separate objects between different environments e.g. [Test] Policy 1 vs [Prod] Policy 1.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Output files are by default stored in the My Documents folder.&lt;/p&gt; 
&lt;p&gt;The output CSV can either be one file for ALL objects or one file for each Object Type.&lt;/p&gt; 
&lt;h2&gt;Bulk Copy&lt;/h2&gt; 
&lt;p&gt;Bulk copy can be used to clone objects based on a name pattern. This can be used in the same scenario as Bulk Compare where the object names includes an environment identifier. The application will identify all objects matching the source pattern and copy each object with a new name matching the &#39;Copy object name pattern&#39;. The object will not be copied if it detects that an object already exists with the new name.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Assignments will NOT be copied.&lt;/p&gt; 
&lt;h2&gt;Intune Tools&lt;/h2&gt; 
&lt;p&gt;Additional Intune Tools is included in the script.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ADMX Import&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Import 3rd part ADMX settings like Chrome etc. by using a UI similar to GPMC&lt;/li&gt; 
   &lt;li&gt;Support for any language if there is an ADML file for it&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Reg Values&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create registry settings in HKLM or HKCU. Supported value types: 
    &lt;ul&gt; 
     &lt;li&gt;String&lt;/li&gt; 
     &lt;li&gt;Multi-String&lt;/li&gt; 
     &lt;li&gt;Expandable String&lt;/li&gt; 
     &lt;li&gt;DWORD&lt;/li&gt; 
     &lt;li&gt;List (Key/Value pair)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;This tool creates a custom ADMX file based on the specified registry keys.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Intune Assignments&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Quickly gather all assignments from an export&lt;/li&gt; 
   &lt;li&gt;Easily identify all profiles/policies a group is assigned to&lt;/li&gt; 
   &lt;li&gt;Export as CSV to analyse in Excel&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/ADMXImport.md&quot;&gt;ADMX Import&lt;/a&gt; for more information about the ADMX tools&lt;/p&gt; 
&lt;h2&gt;Columns&lt;/h2&gt; 
&lt;p&gt;Custom columns is supported. The script will by default add id, displayName and description with exception for some object types. These are configured in the EndpointManager.ps1 and EndpointManagerInfo.psm1 files.&lt;/p&gt; 
&lt;p&gt;Custom columns can be added for each Object Type in the detailed view of an Object.&lt;/p&gt; 
&lt;p&gt;Custom Columns settings are stored in the regitry, in HKCU\SOFTWARE\CloudAPIPowerShellManagement\EndpointManager\ObjectColumns\&lt;em&gt;ObjectType&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;em&gt;ObjectType&lt;/em&gt; value represents the ViewItem ID specified in the EndpointManager.ps1 and EndpointManagerInfo.psm1 files. This is also the same as the parent folder when items are exported.&lt;/p&gt; 
&lt;p&gt;The REG_SZ value has the following syntax:&lt;/p&gt; 
&lt;p&gt;[0|1],Property1[=Header1],Property2[=Header2],...&lt;/p&gt; 
&lt;p&gt;0|1 - Optional value specifying if columns are added or replacing default columns&lt;/p&gt; 
&lt;p&gt;0 = Replace default columns with columns specified in the registry value 1 = Add columns specified in the registry to the default columns. This is default setting.&lt;/p&gt; 
&lt;p&gt;PropertyX - Property to display. View an object to see available properties&lt;/p&gt; 
&lt;p&gt;HeaderX - Optional value for the column header. Property name will be used if this is not specified.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some object types returns multiple object types, @OData.Type. If a custom column is added but the property does not exist on all the object types that were returned, the column value will be empty. The code will &lt;strong&gt;not&lt;/strong&gt; break if the property is missing on one or more returned objects.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt; Reg key: HKCU\SOFTWARE\CloudAPIPowerShellManagement\EndpointManager\ObjectColumns\DeviceConfiguration&lt;/p&gt; 
&lt;p&gt;REG_SZ value: &lt;strong&gt;lastModifiedDateTime&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This will add the &lt;strong&gt;lastModifiedDateTime&lt;/strong&gt; to the existing columns.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Reg key: HKCU\SOFTWARE\CloudAPIPowerShellManagement\EndpointManager\ObjectColumns\TermsOfUse&lt;/p&gt; 
&lt;p&gt;REG_SZ value: 0,id=Id,displayName=Name,files[0].displayName=Display Name&lt;/p&gt; 
&lt;p&gt;This will replace the default columns and add new columns with specific header.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Sub-properties are supported e.g. &lt;strong&gt;files[0].displayName&lt;/strong&gt;. This will add a column based on the first object in the files property.&lt;/p&gt; 
&lt;h2&gt;Change log&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/ReleaseNotes.md&quot;&gt;Change Log&lt;/a&gt; for more information&lt;/p&gt; 
&lt;h2&gt;Authentication&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/MSALInfo.md&quot;&gt;MSAL Info&lt;/a&gt; for more information about authentication&lt;/p&gt; 
&lt;h2&gt;Settings&lt;/h2&gt; 
&lt;p&gt;Settings for the script is default stored in the registry. However, the script supports settings to be stored in a json file so it can be copied between computers. Registry settings can be exported in the Settings dialog.&lt;/p&gt; 
&lt;p&gt;To use settings based on a json file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Start-IntuneManagement.ps1 -JSonSettings [-JSonFile &amp;lt;PathToFile&amp;gt;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If only -JSonSettings is used the script will use the default json setting file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;%LOCALAPPDATA%\CloudAPIPowerShellManagement\Settings.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use -JSonFile for custom location of the file&lt;/p&gt; 
&lt;p&gt;Start-WithJson.cmd is included as an example on how to start the script with json settings.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the file can&#39;t be created, the script will revert back registry. Make sure that the script can write to the file. It is not recommended to store the file in a folder that requires UAC to get write permissions.&lt;/p&gt; 
&lt;h2&gt;Supported Intune objects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ADMX Files [^1]&lt;/li&gt; 
 &lt;li&gt;App Configurations (App and Device)&lt;/li&gt; 
 &lt;li&gt;App Protection&lt;/li&gt; 
 &lt;li&gt;Applications [^2]&lt;/li&gt; 
 &lt;li&gt;Apple Enrolment Types - NOT fully tested&lt;/li&gt; 
 &lt;li&gt;Autopilot profiles&lt;/li&gt; 
 &lt;li&gt;Baseline Security profiles&lt;/li&gt; 
 &lt;li&gt;Compliance policies&lt;/li&gt; 
 &lt;li&gt;Compliance policies v2&lt;/li&gt; 
 &lt;li&gt;Compliance scripts&lt;/li&gt; 
 &lt;li&gt;Conditional Access&lt;/li&gt; 
 &lt;li&gt;Custom Attributes&lt;/li&gt; 
 &lt;li&gt;Device Configuration (Administrative Templates, Configuration Policies, Android OEM Config, Settings Catalog)&lt;/li&gt; 
 &lt;li&gt;Endpoint Security (Account Protection, Disk Encryption, Firewall, Security Baselines etc.) [^3]&lt;/li&gt; 
 &lt;li&gt;Enrollment Restrictions&lt;/li&gt; 
 &lt;li&gt;Enrollment Status Page profiles&lt;/li&gt; 
 &lt;li&gt;Feature Updates&lt;/li&gt; 
 &lt;li&gt;Filters&lt;/li&gt; 
 &lt;li&gt;Intune Branding (Company Portal)&lt;/li&gt; 
 &lt;li&gt;Locations&lt;/li&gt; 
 &lt;li&gt;Named Locations&lt;/li&gt; 
 &lt;li&gt;Notifications&lt;/li&gt; 
 &lt;li&gt;Policy Sets&lt;/li&gt; 
 &lt;li&gt;Quality Updates&lt;/li&gt; 
 &lt;li&gt;Reusable Settings&lt;/li&gt; 
 &lt;li&gt;Role Definitions&lt;/li&gt; 
 &lt;li&gt;Scope Tags&lt;/li&gt; 
 &lt;li&gt;Scripts (PowerShell and Shell scripts, supports download of script)&lt;/li&gt; 
 &lt;li&gt;Terms and Conditions&lt;/li&gt; 
 &lt;li&gt;Terms of Use&lt;/li&gt; 
 &lt;li&gt;Update Policies&lt;/li&gt; 
 &lt;li&gt;Co-management Settings&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;[^1]: ADMX file must be located in the export folder or in the folder defined in Settings. Administrative Template policies based on ADMX files must be imported after the ADMX file is imported. [^2]: Export is support but .intunewin files will not be exported. The .intunewin file must exist in the exported folder or in the folder defined in Settings -&amp;gt; App packages folder. [^3]: Some Endpoint Security policies will be exported to the SettingsCatalg since they are based the Settings Catalog API.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The scripts are using the BETA version of the Graph API which might change at any time.&lt;/p&gt; 
&lt;h2&gt;Azure Management APIs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tenants for the current user&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Management APIs are undocumented APIs which might not be supported and they might change at any time.&lt;/p&gt; 
&lt;h2&gt;Pre-requisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;.Net 4.7&lt;/li&gt; 
 &lt;li&gt;PowerShell 5.1&lt;/li&gt; 
 &lt;li&gt;MSAL 
  &lt;ul&gt; 
   &lt;li&gt;Microsoft.Identity.Client.dll version 4.42.1.0 is included in this version&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;License and permissions in Azure to manage objects in Intune and Azure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/graph/api/overview?toc=./ref/toc.json&amp;amp;view=graph-rest-beta&quot;&gt;Microsoft Graph API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Identity.Client/&quot;&gt;Microsoft.Identity.Client&lt;/a&gt; (MSAL download)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AzureAD/MSAL.PS&quot;&gt;MSAL.PS Module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/azure/new-azureps-module-az&quot;&gt;Az PowerShellModule&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/Intune-PowerShell-SDK&quot;&gt;Microsoft Intune PowerShell Module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft-WindowsAPICodePack-Core&quot;&gt;Microsoft.WindowsAPICodePack&lt;/a&gt; and &lt;a href=&quot;https://www.nuget.org/packages/Microsoft-WindowsAPICodePack-Shell&quot;&gt;Microsoft.WindowsAPICodePack.Shell&lt;/a&gt; for Browse Folder dialogs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;The app encryption and upload is based on &lt;a href=&quot;https://github.com/microsoftgraph/powershell-intune-samples&quot;&gt;Graph PowerShell Intune Examples&lt;/a&gt;&lt;br&gt; Some MSAL functionalities are based on &lt;a href=&quot;https://github.com/AzureAD/MSAL.PS&quot;&gt;MSAL.PS Module&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Known Issues&lt;/h2&gt; 
&lt;p&gt;Device Configuration and App Configuration objects are split up in different object types. They are using different Graph APIs and each object type in the menu uses one API. This is also why all Endpoint Security objects are of the same object type. They use the same API but are separated based on the Baseline Template Id they use.&lt;/p&gt; 
&lt;p&gt;Android Store Apps are &lt;strong&gt;not&lt;/strong&gt; imported. The Create API is documented in Microsoft Graph but it&#39;s not working. Looks like these apps must be synched from Google Play.&lt;/p&gt; 
&lt;p&gt;Using multiple tenants support causes multiple logins/consent prompts the first time if &#39;Microsoft Graph PowerShell&#39; is used. Querying the API for tenant list uses a different scope that is not included by default in the &#39;Microsoft Graph PowerShell&#39; app.&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;Using multiple tenants support &lt;em&gt;might&lt;/em&gt; cause and endless loop in the login screen and cause duplicate accounts in token cache. Actual cause is not found yet but it happens on rare occasions and it looks like it happens when a guest account is used. Workaround: Cancel the login, restart the script, logout and restart the script again.&lt;/del&gt; - Not seen this in a long time. Please create an issue if this happens&lt;/p&gt; 
&lt;p&gt;When multi tenant settings is Enabled/Disabled, the Profile Info is not updated until the account is changed or app is restarted. Profile Info popup is built after logon.&lt;/p&gt; 
&lt;p&gt;The &lt;em&gt;List Applications&lt;/em&gt; API might not list an imported app immediately after the import. Click &lt;em&gt;Refresh&lt;/em&gt; to reload the application objects.&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;When using the filter box to search for items, the checkbox must be clicked twice to select an item.&lt;/del&gt;&lt;br&gt; Issue fixed in 3.3.2&lt;/p&gt; 
&lt;p&gt;Logout will only clear the token from cache and not from the browser e.g. if login is triggered after a logout, the user will still be listed in the &#39;Select user&#39; dialog.&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;Referenced settings will NOT be imported/copied. There is no value stored in a property on the object for these settings. Example: A VPN profile has certificates as referenced properties. The certificates must be added manually after import/copy.&lt;/del&gt; Issue fixed in 3.5.0&lt;/p&gt; 
&lt;p&gt;Terms of Use requires that the pdf file is available. This must be manually copied to either the Export folder for Terms of Use or to the Intune Application folder specified in Settings. It is currently not possible to export the pdf file with Graph API.&lt;/p&gt; 
&lt;p&gt;The ADMX/ADML files must be manually copied to either the Export folder for Administrative Templates or to the Intune Application folder specified in Settings. It is currently not possible to export the pdf file with Graph API.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/Documentation.md&quot;&gt;Documentation&lt;/a&gt; for issues regarding the documentation process.&lt;/p&gt; 
&lt;h2&gt;TIP&lt;/h2&gt; 
&lt;p&gt;Check the log file for errors. The UI might not show errors why login failed etc. The log uses the Endpoint Configuration Manager (SCCM) format and it is best viewed with CMTrace or OneTrace. An old version of CMTrace can be downloaded &lt;a href=&quot;https://www.microsoft.com/en-us/download/confirmation.aspx?id=50012&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/winget-pkgs</title>
      <link>https://github.com/microsoft/winget-pkgs</link>
      <description>&lt;p&gt;The Microsoft community Windows Package Manager manifest repository&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Windows Package Manager Community Repository&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitter.im/Microsoft/winget-pkgs&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/Microsoft/winget-pkgs&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/shine-oss/winget-pkgs/_build?definitionId=14&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://winget-validation-pme-f8gqfjhzacawbecy.z01.azurefd.net/api/GetServiceComponentStatusBadge?component=ValidationPipeline&quot; alt=&quot;Validation Pipeline Badge&quot; title=&quot;Validation Pipeline Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/shine-oss/winget-pkgs/_build?definitionId=12&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://winget-validation-pme-f8gqfjhzacawbecy.z01.azurefd.net/api/GetServiceComponentStatusBadge?component=PublishPipeline&quot; alt=&quot;Publish Pipeline Badge&quot; title=&quot;Publish Pipeline Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.githubstatus.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://api.bittu.eu.org/github-status-badge-endpoint&quot; alt=&quot;GitHub Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://status.dev.azure.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fstatus.dev.azure.com%2F_apis%2Fstatus%2Fhealth%3Fservices%3DPipelines%26geographies%3DUS&amp;amp;query=%24.services%5B0%5D.geographies%5B0%5D.health&amp;amp;label=Azure%20Pipelines%20Status&quot; alt=&quot;Azure Pipelines Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains the manifest files for the &lt;strong&gt;Windows Package Manager&lt;/strong&gt; default source. You are highly encouraged to submit manifests for your favorite application.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] At this time installers must be MSIX, MSI, APPX, or .exe application installers. Script-based installers and fonts are not currently supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The &lt;strong&gt;Windows Package Manager&lt;/strong&gt; is an &lt;a href=&quot;https://github.com/microsoft/winget-cli&quot;&gt;open source client&lt;/a&gt; designed for command-line usage. If you are interested in exploring private repositories offering private WinGet package hosting, see &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/private/README.md&quot;&gt;private repositories&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;Please check the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/README.md&quot;&gt;overview&lt;/a&gt; for detailed topics. Common topics for the WinGet Community repository are available below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/README.md#authoring-a-manifest&quot;&gt;Authoring a manifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/README.md#testing-a-manifest&quot;&gt;Testing a manifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/README.md#submitting-a-manifest&quot;&gt;Submitting a manifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/Issues.md#Request-a-New-Package&quot;&gt;Requesting a new package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/Issues.md#Request-a-New-Package-Version&quot;&gt;Requesting a new package version&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repology&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://repology.org/&quot;&gt;Repology&lt;/a&gt;, the packaging hub monitors package repositories comparing package versions and other information.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://repology.org/repository/winget&quot;&gt;&lt;img src=&quot;https://repology.org/badge/repository-big/winget.svg?sanitize=true&quot; alt=&quot;Repository status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Follow the instructions provided by the bot. You will only need to do this once across all Microsoft repositories using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. See the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments. More information is available in our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/CONTRIBUTING.md&quot;&gt;Contributing document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To avoid doubt, you may not make any Submissions linking to third-party materials if such Submission is prohibited by the applicable third party and/or otherwise violates such third party&#39;s rights.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cisagov/ScubaGear</title>
      <link>https://github.com/cisagov/ScubaGear</link>
      <description>&lt;p&gt;Automation to assess the state of your M365 tenant against CISA&#39;s baselines&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/images/SCuBA%20GitHub%20Graphic%20v6-05.png&quot; alt=&quot;ScubaGear Logo&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/cisagov/ScubaGear/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/cisagov/ScubaGear?label=GitHub&amp;amp;logo=github&quot; alt=&quot;GitHub Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.powershellgallery.com/packages/ScubaGear&quot;&gt;&lt;img src=&quot;https://img.shields.io/powershellgallery/v/ScubaGear?logo=powershell&amp;amp;label=PSGallery&quot; alt=&quot;PSGallery Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cisagov/ScubaGear/actions/workflows/run_pipeline.yaml&quot;&gt;&lt;img src=&quot;https://github.com/cisagov/ScubaGear/actions/workflows/run_pipeline.yaml/badge.svg?sanitize=true&quot; alt=&quot;CI Pipeline&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cisagov/ScubaGear/actions/workflows/test_production_function.yaml&quot;&gt;&lt;img src=&quot;https://github.com/cisagov/ScubaGear/actions/workflows/test_production_function.yaml/badge.svg?sanitize=true&quot; alt=&quot;Functional Tests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cisagov/ScubaGear/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/cisagov/ScubaGear&quot; alt=&quot;GitHub License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cisagov/ScubaGear/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/cisagov/ScubaGear/total?logo=github&quot; alt=&quot;GitHub Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.powershellgallery.com/packages/ScubaGear&quot;&gt;&lt;img src=&quot;https://img.shields.io/powershellgallery/dt/ScubaGear?logo=powershell&quot; alt=&quot;PSGallery Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cisagov/ScubaGear/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/cisagov/ScubaGear&quot; alt=&quot;GitHub Issues&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ScubaGear is an assessment tool that verifies that a Microsoft 365 (M365) tenant’s configuration conforms to the policies described in the Secure Cloud Business Applications (&lt;a href=&quot;https://cisa.gov/scuba&quot;&gt;SCuBA&lt;/a&gt;) Secure Configuration Baseline &lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/baselines/README.md&quot;&gt;documents&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This documentation can be read using &lt;a href=&quot;https://cisagov.github.io/ScubaGear&quot;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Target Audience&lt;/h2&gt; 
&lt;p&gt;ScubaGear is for M365 administrators who want to assess their tenant environments against CISA Secure Configuration Baselines.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;ScubaGear uses a three-step process:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Step One&lt;/strong&gt; - PowerShell code queries M365 APIs for various configuration settings.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Step Two&lt;/strong&gt; - It then calls &lt;a href=&quot;https://www.openpolicyagent.org&quot;&gt;Open Policy Agent&lt;/a&gt; (OPA) to compare these settings against Rego security policies written per the baseline documents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Step Three&lt;/strong&gt; - Finally, it reports the results of the comparison as HTML, JSON, and CSV.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/images/scuba-process.png&quot;&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To install ScubaGear from &lt;a href=&quot;https://www.powershellgallery.com/packages/ScubaGear&quot;&gt;PSGallery&lt;/a&gt;, open a PowerShell 5 terminal on a Windows computer and install the module:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;# Install ScubaGear
Install-Module -Name ScubaGear
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install its dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;# Install the minimum required dependencies
Initialize-SCuBA 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To verify that it is installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;# Check the version
Invoke-SCuBA -Version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run ScubaGear:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;# Assess all products
Invoke-SCuBA -ProductNames *
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Successfully running ScubaGear requires certain prerequisites and configuration settings. To learn more, read through the sections below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;p&gt;The following sections should be read in order.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/installation/psgallery.md&quot;&gt;Install from PSGallery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/installation/github.md&quot;&gt;Download from GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/installation/uninstall.md&quot;&gt;Uninstall&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/prerequisites/dependencies.md&quot;&gt;Dependencies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/prerequisites/permissions.md&quot;&gt;Required Permissions&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/prerequisites/interactive.md&quot;&gt;Interactive Permissions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/prerequisites/noninteractive.md&quot;&gt;Non-Interactive Permissions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Execution&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/execution/execution.md&quot;&gt;Execution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/execution/reports.md&quot;&gt;Reports&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/configuration/parameters.md&quot;&gt;Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/configuration/configuration.md&quot;&gt;Configuration File&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/troubleshooting/tenants.md&quot;&gt;Multiple Tenants&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/troubleshooting/defender.md&quot;&gt;Defender&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/troubleshooting/exchange.md&quot;&gt;Exchange Online&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/troubleshooting/power.md&quot;&gt;Power Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/troubleshooting/graph.md&quot;&gt;Microsoft Graph&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/troubleshooting/proxy.md&quot;&gt;Proxy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Misc&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/misc/assumptions.md&quot;&gt;Assumptions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project License&lt;/h2&gt; 
&lt;p&gt;Unless otherwise noted, this project is distributed under the Creative Commons Zero license. With developer approval, contributions may be submitted with an alternate compatible license. If accepted, those contributions will be listed herein with the appropriate license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ScoopInstaller/Extras</title>
      <link>https://github.com/ScoopInstaller/Extras</link>
      <description>&lt;p&gt;📦 The Extras bucket for Scoop.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Scoop Extras &lt;a href=&quot;https://github.com/ScoopInstaller/Extras/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/ScoopInstaller/Extras/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Tests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ScoopInstaller/Extras/actions/workflows/excavator.yml&quot;&gt;&lt;img src=&quot;https://github.com/ScoopInstaller/Extras/actions/workflows/excavator.yml/badge.svg?sanitize=true&quot; alt=&quot;Excavator&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Extra manifests for &lt;a href=&quot;https://scoop.sh&quot;&gt;Scoop&lt;/a&gt;, the Windows command-line installer. For manifests that don&#39;t fit the &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop/wiki/Criteria-for-including-apps-in-the-main-bucket&quot;&gt;Main criteria&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How do I install these manifests?&lt;/h2&gt; 
&lt;p&gt;To add this bucket, run &lt;code&gt;scoop bucket add extras&lt;/code&gt;. To install, do &lt;code&gt;scoop install &amp;lt;manifest&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;How do I contribute new manifests?&lt;/h2&gt; 
&lt;p&gt;To make a new manifest contribution, please read the &lt;a href=&quot;https://github.com/ScoopInstaller/.github/raw/main/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ScoopInstaller/Scoop</title>
      <link>https://github.com/ScoopInstaller/Scoop</link>
      <description>&lt;p&gt;A command-line installer for Windows.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Scoop&lt;/h1&gt; 
&lt;!--&lt;img src=&quot;scoop.png&quot; alt=&quot;Long live Scoop!&quot;/&gt;--&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop#what-does-scoop-do&quot;&gt;Features&lt;/a&gt; | &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop#installation&quot;&gt;Installation&lt;/a&gt; | &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop/wiki&quot;&gt;Documentation&lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/languages/code-size/ScoopInstaller/Scoop.svg?sanitize=true&quot; alt=&quot;Code Size&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/repo-size/ScoopInstaller/Scoop.svg?sanitize=true&quot; alt=&quot;Repository size&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop/actions/workflows/ci.yml&quot;&gt; &lt;img src=&quot;https://github.com/ScoopInstaller/Scoop/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Scoop Core CI Tests&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://discord.gg/s9yRQHt&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289DA.svg?sanitize=true&quot; alt=&quot;Discord Chat&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://gitter.im/lukesampson/scoop&quot;&gt; &lt;img src=&quot;https://badges.gitter.im/lukesampson/scoop.png&quot; alt=&quot;Gitter Chat&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/ScoopInstaller/Scoop/master/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/license-UNLICENSE%20or%20MIT-blue&quot; alt=&quot;License&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Scoop is a command-line installer for Windows.&lt;/p&gt; 
&lt;h2&gt;What does Scoop do?&lt;/h2&gt; 
&lt;p&gt;Scoop installs apps from the command line with a minimal amount of friction. It:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Eliminates &lt;a href=&quot;https://learn.microsoft.com/windows/security/application-security/application-control/user-account-control/&quot;&gt;User Account Control&lt;/a&gt; (UAC) prompt notifications.&lt;/li&gt; 
 &lt;li&gt;Hides the graphical user interface (GUI) of wizard-style installers.&lt;/li&gt; 
 &lt;li&gt;Prevents polluting the &lt;code&gt;PATH&lt;/code&gt; environment variable. Normally, this variable gets cluttered as different apps are installed on the device.&lt;/li&gt; 
 &lt;li&gt;Avoids unexpected side effects from installing and uninstalling apps.&lt;/li&gt; 
 &lt;li&gt;Resolves and installs dependencies automatically.&lt;/li&gt; 
 &lt;li&gt;Performs all the necessary steps to get an app to a working state.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Scoop is quite script-friendly. Your environment can become the way you like by using repeatable setups. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;scoop install sudo
sudo scoop install 7zip git openssh --global
scoop install aria2 curl grep sed less touch
scoop install python ruby go perl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have built software that you would like others to use, Scoop is an alternative to building an installer (like MSI or InnoSetup). You just need to compress your app to a &lt;code&gt;.zip&lt;/code&gt; file and provide a JSON manifest that describes how to install it.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Run the following commands from a regular (non-admin) PowerShell terminal to install Scoop:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The first command makes your device allow running the installation and management scripts. This is necessary because Windows 10 client devices restrict execution of any PowerShell scripts by default.&lt;/p&gt; 
&lt;p&gt;It will install Scoop to its default location:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;C:\Users\&amp;lt;YOUR USERNAME&amp;gt;\scoop&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can find the complete documentation about the installer, including advanced installation configurations, in &lt;a href=&quot;https://github.com/ScoopInstaller/Install&quot;&gt;ScoopInstaller/Install&lt;/a&gt;. Please create new issues there if you have questions about the installation.&lt;/p&gt; 
&lt;h2&gt;Multi-connection downloads with &lt;code&gt;aria2&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Scoop can utilize &lt;a href=&quot;https://github.com/aria2/aria2&quot;&gt;&lt;code&gt;aria2&lt;/code&gt;&lt;/a&gt; to use multi-connection downloads. Simply install &lt;code&gt;aria2&lt;/code&gt; through Scoop and it will be used for all downloads afterward.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;scoop install aria2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, &lt;code&gt;scoop&lt;/code&gt; displays a warning when running &lt;code&gt;scoop install&lt;/code&gt; or &lt;code&gt;scoop update&lt;/code&gt; while &lt;code&gt;aria2&lt;/code&gt; is enabled. This warning can be suppressed by running &lt;code&gt;scoop config aria2-warning-enabled false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can tweak the following &lt;code&gt;aria2&lt;/code&gt; settings with the &lt;code&gt;scoop config&lt;/code&gt; command:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;aria2-enabled (default: true)&lt;/li&gt; 
 &lt;li&gt;aria2-warning-enabled (default: true)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-retry-wait&quot;&gt;aria2-retry-wait&lt;/a&gt; (default: 2)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-s&quot;&gt;aria2-split&lt;/a&gt; (default: 5)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-x&quot;&gt;aria2-max-connection-per-server&lt;/a&gt; (default: 5)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-k&quot;&gt;aria2-min-split-size&lt;/a&gt; (default: 5M)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/manual/en/html/aria2c.html#options&quot;&gt;aria2-options&lt;/a&gt; (default: )&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Inspiration&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://signalvnoise.com/posts/3264-automating-with-convention-introducing-sub&quot;&gt;Sub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What sort of apps can Scoop install?&lt;/h2&gt; 
&lt;p&gt;The apps that are most likely to get installed fine with Scoop are those referred to as &quot;portable&quot; apps. These apps are compressed files which can run standalone after being extracted. This type of apps does not produce side effects like changing the Windows Registry or placing files outside the app directory.&lt;/p&gt; 
&lt;p&gt;Scoop also supports installer files and their uninstallation methods. Likewise, it can handle single-file apps and PowerShell scripts. These do not even need to be compressed. See the &lt;a href=&quot;https://github.com/ScoopInstaller/Main/raw/master/bucket/runat.json&quot;&gt;runat&lt;/a&gt; package for an example: it is simply a GitHub gist.&lt;/p&gt; 
&lt;h3&gt;Contribute to this project&lt;/h3&gt; 
&lt;p&gt;If you would like to improve Scoop by adding features or fixing bugs, please read our &lt;a href=&quot;https://github.com/ScoopInstaller/.github/raw/main/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Support this project&lt;/h3&gt; 
&lt;p&gt;If you find Scoop useful and would like to support the ongoing development and maintenance of this project, you can donate here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=DM2SUH9EUXSKJ&quot;&gt;PayPal&lt;/a&gt; (one-time donations)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known application buckets&lt;/h2&gt; 
&lt;p&gt;The following buckets are known to Scoop:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/Main&quot;&gt;main&lt;/a&gt; - Default bucket which contains popular non-GUI apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/Extras&quot;&gt;extras&lt;/a&gt; - Apps that do not fit the main bucket&#39;s &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop/wiki/Criteria-for-including-apps-in-the-main-bucket&quot;&gt;criteria&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Calinou/scoop-games&quot;&gt;games&lt;/a&gt; - Open-source and freeware video games and game-related tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/matthewjberger/scoop-nerd-fonts&quot;&gt;nerd-fonts&lt;/a&gt; - Nerd Fonts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/Nirsoft&quot;&gt;nirsoft&lt;/a&gt; - A collection of over 250+ apps from &lt;a href=&quot;https://nirsoft.net&quot;&gt;Nirsoft&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/niheaven/scoop-sysinternals&quot;&gt;sysinternals&lt;/a&gt; - The Sysinternals suite from &lt;a href=&quot;https://learn.microsoft.com/sysinternals/&quot;&gt;Microsoft&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/Java&quot;&gt;java&lt;/a&gt; - A collection of Java development kits (JDKs) and Java runtime engines (JREs), Java&#39;s virtual machine debugging tools and Java based runtime engines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/Nonportable&quot;&gt;nonportable&lt;/a&gt; - Non-portable apps (may trigger UAC prompts).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/PHP&quot;&gt;php&lt;/a&gt; - Installers for most versions of PHP.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/Versions&quot;&gt;versions&lt;/a&gt; - Alternative versions of apps found in other buckets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;main&lt;/code&gt; bucket is installed by default. You can make use of more buckets by typing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;scoop bucket add &amp;lt;name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, to add the &lt;code&gt;extras&lt;/code&gt; bucket, type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;scoop bucket add extras
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You would be able to install apps from the &lt;code&gt;extras&lt;/code&gt; bucket now.&lt;/p&gt; 
&lt;h2&gt;Other application buckets&lt;/h2&gt; 
&lt;p&gt;Many other application buckets hosted on GitHub can be found on &lt;a href=&quot;https://scoop.sh/&quot;&gt;ScoopSearch&lt;/a&gt; or via &lt;a href=&quot;https://rasa.github.io/scoop-directory/#other-search-engines&quot;&gt;other search engines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mandiant/flare-vm</title>
      <link>https://github.com/mandiant/flare-vm</link>
      <description>&lt;p&gt;A collection of software installations scripts for Windows systems that allows you to easily setup and maintain a reverse engineering environment on a VM.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FLARE-VM&lt;/h1&gt; 
&lt;p&gt;Welcome to FLARE-VM - a collection of software installations scripts for Windows systems that allows you to easily setup and maintain a reverse engineering environment on a virtual machine (VM). FLARE-VM was designed to solve the problem of reverse engineering tool curation and relies on two main technologies: &lt;a href=&quot;https://chocolatey.org&quot;&gt;Chocolatey&lt;/a&gt; and &lt;a href=&quot;https://boxstarter.org&quot;&gt;Boxstarter&lt;/a&gt;. Chocolatey is a Windows-based Nuget package management system, where a &quot;package&quot; is essentially a ZIP file containing PowerShell installation scripts that download and configure a specific tool. Boxstarter leverages Chocolatey packages to automate the installation of software and create repeatable, scripted Windows environments.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/Images/flarevm-logo.png&quot; alt=&quot;FLARE-VM Logo&quot; width=&quot;600&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;FLARE-VM should ONLY be installed on a virtual machine&lt;/strong&gt;. The VM should satisfy the following requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows &amp;gt;= 10&lt;/li&gt; 
 &lt;li&gt;PowerShell &amp;gt;= 5&lt;/li&gt; 
 &lt;li&gt;Disk capacity of at least 60 GB and memory of at least 2GB&lt;/li&gt; 
 &lt;li&gt;Usernames without spaces or other special characters&lt;/li&gt; 
 &lt;li&gt;Internet connection&lt;/li&gt; 
 &lt;li&gt;Tamper Protection and any Anti-Malware solution (e.g., Windows Defender) Windows Defender disabled, preferably via Group Policy&lt;/li&gt; 
 &lt;li&gt;Windows Updates Disabled&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation instruction&lt;/h2&gt; 
&lt;p&gt;This section documents the steps to install FLARE-VM. You may also find useful the &lt;a href=&quot;https://www.youtube.com/watch?v=i8dCyy8WMKY&quot;&gt;&lt;em&gt;Building a VM for Reverse Engineering and Malware Analysis! Installing the FLARE-VM&lt;/em&gt; video&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Pre-installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prepare a Windows 10+ virtual machine 
  &lt;ul&gt; 
   &lt;li&gt;Install Windows in the virtual machine, for example using the raw Windows 10 ISO from &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10ISO&quot;&gt;https://www.microsoft.com/en-us/software-download/windows10ISO&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Ensure the &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/#requirements&quot;&gt;requirements above&lt;/a&gt; are satisfied, including: 
    &lt;ul&gt; 
     &lt;li&gt;Disable Windows Updates (at least until installation is finished) 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://www.windowscentral.com/how-stop-updates-installing-automatically-windows-10&quot;&gt;https://www.windowscentral.com/how-stop-updates-installing-automatically-windows-10&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;Disable Tamper Protection and any Anti-Malware solution (e.g., Windows Defender), preferably via Group Policy. 
      &lt;ul&gt; 
       &lt;li&gt;GPO: &lt;a href=&quot;https://superuser.com/a/1757341&quot;&gt;https://stackoverflow.com/questions/62174426/how-to-permanently-disable-windows-defender-real-time-protection-with-gpo&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;Non-GPO - Manual: &lt;a href=&quot;https://www.maketecheasier.com/permanently-disable-windows-defender-windows-10&quot;&gt;https://www.maketecheasier.com/permanently-disable-windows-defender-windows-10/&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;Non-GPO - Automated: &lt;a href=&quot;https://github.com/ionuttbara/windows-defender-remover&quot;&gt;https://github.com/ionuttbara/windows-defender-remover&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;Non-GPO - Semi-Automated (User needs to toggle off Tamper Protection): [https://github.com/AveYo/LeanAndMean/blob/main/ToggleDefender.ps1] (&lt;a href=&quot;https://github.com/AveYo/LeanAndMean/raw/main/ToggleDefender.ps1&quot;&gt;https://github.com/AveYo/LeanAndMean/blob/main/ToggleDefender.ps1&lt;/a&gt;)&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Take a VM snapshot so you can always revert to a state before the FLARE-VM installation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FLARE-VM installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open a &lt;code&gt;PowerShell&lt;/code&gt; prompt as administrator&lt;/li&gt; 
 &lt;li&gt;Download the installation script &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/install.ps1&quot;&gt;&lt;code&gt;installer.ps1&lt;/code&gt;&lt;/a&gt; to your Desktop: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;(New-Object net.webclient).DownloadFile(&#39;https://raw.githubusercontent.com/mandiant/flare-vm/main/install.ps1&#39;,&quot;$([Environment]::GetFolderPath(&quot;Desktop&quot;))\install.ps1&quot;)&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Unblock the installation script: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;Unblock-File .\install.ps1&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Enable script execution: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;Set-ExecutionPolicy Unrestricted -Force&lt;/code&gt; 
    &lt;ul&gt; 
     &lt;li&gt;If you receive an error saying the execution policy is overridden by a policy defined at a more specific scope, you may need to pass a scope in via &lt;code&gt;Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force&lt;/code&gt;. To view execution policies for all scopes, execute &lt;code&gt;Get-ExecutionPolicy -List&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Finally, execute the installer script as follow: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;.\install.ps1&lt;/code&gt; 
    &lt;ul&gt; 
     &lt;li&gt;To pass your password as an argument: &lt;code&gt;.\install.ps1 -password &amp;lt;password&amp;gt;&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;To use the CLI-only mode with minimal user interaction: &lt;code&gt;.\install.ps1 -password &amp;lt;password&amp;gt; -noWait -noGui&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;To use the CLI-only mode with minimal user interaction and a custom config file: &lt;code&gt;.\install.ps1 -customConfig &amp;lt;config.xml&amp;gt; -password &amp;lt;password&amp;gt; -noWait -noGui&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;After installation it is recommended to switch to &lt;code&gt;host-only&lt;/code&gt; networking mode and take a VM snapshot&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Installer Parameters&lt;/h4&gt; 
&lt;p&gt;Below are the CLI parameter descriptions.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PARAMETERS
    -password &amp;lt;String&amp;gt;
        Current user password to allow reboot resiliency via Boxstarter. The script prompts for the password if not provided.

    -noPassword [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter indicating a password is not needed for reboots.

    -customConfig &amp;lt;String&amp;gt;
        Path to a configuration XML file. May be a file path or URL.

    -customLayout &amp;lt;String&amp;gt;
        Path to a taskbar layout XML file. May be a file path or URL.

    -noWait [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter to skip installation message before installation begins.

    -noGui [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter to skip customization GUI.

    -noReboots [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter to prevent reboots (not recommended).

    -noChecks [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter to skip validation checks (not recommended).
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get full usage information by running &lt;code&gt;Get-Help .\install.ps1 -Detailed&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Installer GUI&lt;/h4&gt; 
&lt;p&gt;The Installer GUI is display after executing the validation checks and installing Boxstarter and Chocolatey (if they are not installed already). Using the installer GUI you may customize:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Package selection&lt;/li&gt; 
 &lt;li&gt;Environment variable paths&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/Images/installer-gui.png&quot; alt=&quot;Installer GUI&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Configuration&lt;/h4&gt; 
&lt;p&gt;The installer will download &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/config.xml&quot;&gt;config.xml&lt;/a&gt; from the FLARE-VM repository. This file contains the default configuration, including the list of packages to install and the environment variable paths. You may use your own configuration by specifying the CLI-argument &lt;code&gt;-customConfig&lt;/code&gt; and providing either a local file path or URL to your &lt;code&gt;config.xml&lt;/code&gt; file. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;.\install.ps1 -customConfig &quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/config.xml&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Taskbar Layout&lt;/h4&gt; 
&lt;p&gt;The installer will use &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/CustomStartLayout.xml&quot;&gt;CustomStartLayout.xml&lt;/a&gt; from the FLARE-VM repository. This file contains the default taskbar layout. You may use your own configuration by specifying the CLI-argument &lt;code&gt;-customLayout&lt;/code&gt; and providing a local file path or URL to your &lt;code&gt;CustomStartLayout.xml&lt;/code&gt; file. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;.\install.ps1 -customLayout &quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/CustomStartLayout.xml&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Things to Consider:&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;Items in the .xml that are not installed will not display in the taskbar (no broken links will be pinned)&lt;/li&gt; 
 &lt;li&gt;Only applications (&lt;code&gt;.exe&lt;/code&gt; files) or shortcuts to applications can be pinned.&lt;/li&gt; 
 &lt;li&gt;If you would like to pin something that isn&#39;t an application, consider creating a shortcut that points to &lt;code&gt;cmd.exe&lt;/code&gt; or &lt;code&gt;powershell&lt;/code&gt; with arguments supplied that will perform that actions you would like.&lt;/li&gt; 
 &lt;li&gt;If you would like to make something run with admin rights, consider making a shortcut using &lt;code&gt;VM-Install-Shortcut&lt;/code&gt; with the flag &lt;code&gt;-runAsAdmin&lt;/code&gt; and pinning the shortcut.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Post installation steps&lt;/h4&gt; 
&lt;p&gt;You can include any post installation step you like in the configuration inside the tags &lt;code&gt;apps&lt;/code&gt;, &lt;code&gt;services&lt;/code&gt;, &lt;code&gt;path-items&lt;/code&gt;, &lt;code&gt;registry-items&lt;/code&gt;, and &lt;code&gt;custom-items&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To show known file extensions:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;    &amp;lt;registry-items&amp;gt;
        &amp;lt;registry-item name=&quot;Show known file extensions&quot; path=&quot;HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced&quot; value=&quot;HideFileExt&quot; type=&quot;DWord&quot; data=&quot;0&quot;/&amp;gt;
    &amp;lt;/registry-items&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more examples, check the default configuration file: &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/config.xml&quot;&gt;config.xml&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check our &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING guide&lt;/a&gt; to learn how to contribute to the project.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If your installation fails, please attempt to identify the reason for the installation error by reading through the log files listed below on your system:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;%VM_COMMON_DIR%\log.txt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;%PROGRAMDATA%\chocolatey\logs\chocolatey.log&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;%LOCALAPPDATA%\Boxstarter\boxstarter.log&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Ensure you are running the latest version of the FLARE-VM installer and that your VM satisfies the &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/#requirements&quot;&gt;requirements&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installer Error&lt;/h3&gt; 
&lt;p&gt;If the installation failed due to an issue in the installation script (e.g., &lt;code&gt;install.ps1&lt;/code&gt;), &lt;a href=&quot;https://github.com/mandiant/flare-vm/issues/new?labels=%3Abug%3A+bug&amp;amp;template=bug.yml&quot;&gt;report the bug in FLARE-VM&lt;/a&gt;. Provide all the information requested to ensure we are able to help you.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Rarely should &lt;code&gt;install.ps1&lt;/code&gt; be the reason for an installation failure. Most likely it is a specific package or set of packages that are failing (see below).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Package Error&lt;/h3&gt; 
&lt;p&gt;Packages fail to install from time to time -- this is normal. The most common reasons are outlined below:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Failure or timeout from Chocolatey or MyGet to download a &lt;code&gt;.nupkg&lt;/code&gt; file&lt;/li&gt; 
 &lt;li&gt;Failure or timeout due to remote host when downloading a tool&lt;/li&gt; 
 &lt;li&gt;Intrusion Detection System (IDS) or AV product (e.g., Windows Defender) prevents a tool download or removes the tool from the system&lt;/li&gt; 
 &lt;li&gt;Host specific issue, for example when using an untested version&lt;/li&gt; 
 &lt;li&gt;Tool fails to build due to dependencies&lt;/li&gt; 
 &lt;li&gt;Old tool URL (e.g., &lt;code&gt;HTTP STATUS 404&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Tool&#39;s SHA256 hash has changed from what is hardcoded in the package installation script&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Reasons &lt;strong&gt;1-4&lt;/strong&gt; are difficult for us to fix since we do not control them. If an issue related to reasons &lt;strong&gt;1-4&lt;/strong&gt; is filed, it is unlikely we will be able to assist.&lt;/p&gt; 
&lt;p&gt;We can help with reasons &lt;strong&gt;5-7&lt;/strong&gt; and welcome the community to contribute fixes as well! Please &lt;a href=&quot;https://github.com/mandiant/VM-Packages/issues/new?labels=%3Abug%3A+bug&amp;amp;template=bug.yml&quot;&gt;report the bug in VM-Packages&lt;/a&gt; providing all the information requested.&lt;/p&gt; 
&lt;h3&gt;Updates&lt;/h3&gt; 
&lt;p&gt;Note that package updates are best effort and that updates are not being tested. If you encounter errors, perform a fresh FLARE-VM install.&lt;/p&gt; 
&lt;h2&gt;Legal Notice&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This download configuration script is provided to assist cyber security analysts in creating handy and versatile toolboxes for malware analysis environments. It provides a convenient interface for them to obtain a useful set of analysis tools directly from their original sources. Installation and use of this script is subject to the Apache 2.0 License. You as a user of this script must review, accept and comply with the license terms of each downloaded/installed package. By proceeding with the installation, you are accepting the license terms of each package, and acknowledging that your use of each package will be subject to its respective license terms.&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>ScoopInstaller/Main</title>
      <link>https://github.com/ScoopInstaller/Main</link>
      <description>&lt;p&gt;📦 The default bucket for Scoop.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Scoop Main &lt;a href=&quot;https://github.com/ScoopInstaller/Main/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/ScoopInstaller/Main/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Tests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ScoopInstaller/Main/actions/workflows/excavator.yml&quot;&gt;&lt;img src=&quot;https://github.com/ScoopInstaller/Main/actions/workflows/excavator.yml/badge.svg?sanitize=true&quot; alt=&quot;Excavator&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Core manifests for &lt;a href=&quot;https://scoop.sh&quot;&gt;Scoop&lt;/a&gt;, the Windows command-line installer. For manifests that fit the &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop/wiki/Criteria-for-including-apps-in-the-main-bucket&quot;&gt;Main criteria&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How do I install these manifests?&lt;/h2&gt; 
&lt;p&gt;Just do &lt;code&gt;scoop install &amp;lt;manifest&amp;gt;&lt;/code&gt;. This is the default bucket for Scoop and is added by default.&lt;/p&gt; 
&lt;h2&gt;How do I contribute new manifests?&lt;/h2&gt; 
&lt;p&gt;To make a new manifest contribution, please read the &lt;a href=&quot;https://github.com/ScoopInstaller/.github/raw/main/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/SdnDiagnostics</title>
      <link>https://github.com/microsoft/SdnDiagnostics</link>
      <description>&lt;p&gt;SdnDiagnostics is a PowerShell module that is designed to simplify the diagnostic troubleshooting and data collection process when troubleshooting issues related to Microsoft Software Defined Network.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://scorecard.dev/viewer/?uri=github.com/microsoft/SdnDiagnostics&quot;&gt;&lt;img src=&quot;https://api.scorecard.dev/projects/github.com/microsoft/SdnDiagnostics/badge&quot; alt=&quot;OpenSSF Scorecard&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/microsoft/SdnDiagnostics/actions/workflows/dependency-review.yml/badge.svg?sanitize=true&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://github.com/microsoft/SdnDiagnostics/actions/workflows/powershell.yml/badge.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Project&lt;/h1&gt; 
&lt;p&gt;SdnDiagnostics is a PowerShell module that is designed to simplify the diagnostic troubleshooting and data collection process when troubleshooting issues related to &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/networking/sdn/software-defined-networking&quot;&gt;Microsoft Software Defined Network&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://github.com/microsoft/SdnDiagnostics/wiki&quot;&gt;wiki&lt;/a&gt; on how to install and use SdnDiagnostics in your environment.&lt;/p&gt; 
&lt;h2&gt;Package Statistics&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Package Gallery&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Total Downloads&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Current Version&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;PowerShell Gallery&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.powershellgallery.com/packages/SdnDiagnostics&quot;&gt;&lt;img src=&quot;https://img.shields.io/powershellgallery/dt/SdnDiagnostics.svg?label=Downloads&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.powershellgallery.com/packages/SdnDiagnostics&quot;&gt;&lt;img src=&quot;https://img.shields.io/powershellgallery/v/SdnDiagnostics.svg?label=Version&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;NuGet&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/SdnDiagnostics&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/SdnDiagnostics.svg?label=Downloads&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/SdnDiagnostics&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/SdnDiagnostics.svg?label=Version&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;p&gt;To get started on contributing to this module, refer to the &lt;a href=&quot;https://github.com/microsoft/SdnDiagnostics/raw/main/.github/contributing.md&quot;&gt;contributing&lt;/a&gt; guide on this project.&lt;/p&gt; 
&lt;h1&gt;Trademarks&lt;/h1&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&quot;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&quot;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ItzLevvie/MicrosoftTeams-msinternal</title>
      <link>https://github.com/ItzLevvie/MicrosoftTeams-msinternal</link>
      <description>&lt;p&gt;This project was created from PowerShell which allows people to download the latest internal build of Microsoft Teams.&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://github.com/ItzLevvie/MicrosoftTeams-msinternal/assets/11600822/28e6240c-fc9d-4add-a479-6ef433f47396&quot; width=&quot;256&quot; height=&quot;256&quot;&gt; 
&lt;h1&gt;Welcome to the build repository for Microsoft Teams&lt;/h1&gt; 
&lt;p&gt;This repository contains multiple files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ItzLevvie/MicrosoftTeams-msinternal/master/defconfig&quot;&gt;defconfig&lt;/a&gt; which shows daily builds, experimental builds, preview builds, and public builds for Microsoft Teams classic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ItzLevvie/MicrosoftTeams-msinternal/master/defconfig2&quot;&gt;defconfig2&lt;/a&gt; which shows builds in all rings for Microsoft Teams classic, Microsoft Teams (personal), Microsoft Teams, and Microsoft Teams Rooms.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This repository contains the source code for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ItzLevvie/MicrosoftTeams-msinternal/master/src/Get-MicrosoftTeams.ps1&quot;&gt;Get-MicrosoftTeams.ps1&lt;/a&gt; which allows you to fetch the latest builds in different environments, and different rings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ItzLevvie/MicrosoftTeams-msinternal/master/tools/v1.0%20%2B%20v2.0/launch.ps1&quot;&gt;launch.ps1&lt;/a&gt; which allows you to create your own &lt;code&gt;RELEASES&lt;/code&gt; file.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If you have any feedback for Microsoft Teams (personal), please submit them to our &lt;a href=&quot;https://aka.ms/teamslifefeedback&quot;&gt;public feedback portal&lt;/a&gt;, or to our &lt;a href=&quot;https://aka.ms/teamslifeinternalfeedback&quot;&gt;private feedback portal - only available to Microsoft employees&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;If you have any feedback for Microsoft Teams, please submit them to our &lt;a href=&quot;https://aka.ms/teamsfeedback&quot;&gt;public feedback portal&lt;/a&gt;, or to our &lt;a href=&quot;https://aka.ms/teamsinternalfeedback&quot;&gt;private feedback portal - only available to Microsoft employees&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Installing these builds does not necessarily mean you will have access to new features. For more information, please visit &lt;a href=&quot;https://techcommunity.microsoft.com/t5/microsoft-teams-blog/microsoft-teams-release-processes-why-do-i-not-see-a-feature-but/ba-p/2110426&quot;&gt;this blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Frequently Asked Questions (FAQ)&lt;/h2&gt; 
&lt;h3&gt;Teams 1.0 — Microsoft Teams classic based on Electron 22.3.27 and Electron 31.7.7&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;What are daily builds?&lt;/summary&gt; Preview the latest development builds of Microsoft Teams. These builds may also contain newer versions of SlimCore. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;What are experimental builds?&lt;/summary&gt; Preview the latest development builds of Microsoft Teams but with access to new ideas which may or may not ship into daily builds. These builds may also contain newer versions of SlimCore. 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;code&gt;-E&lt;/code&gt; will be displayed in the three-dot menu (&lt;code&gt;...&lt;/code&gt;) &amp;gt; &lt;code&gt;About&lt;/code&gt; &amp;gt; &lt;code&gt;Version&lt;/code&gt;: &lt;img src=&quot;https://github.com/ItzLevvie/MicrosoftTeams-msinternal/assets/11600822/342163d8-da9d-441b-b2c5-b927b0eaf196&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;Teams 2.0 — Microsoft Teams (personal) based on Microsoft Edge WebView2&lt;/h3&gt; 
&lt;h3&gt;Teams 2.1 — Microsoft Teams based on Microsoft Edge WebView2&lt;/h3&gt; 
&lt;h3&gt;Teams 2.1 — Microsoft Teams Rooms based on Microsoft Edge WebView2&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;What are Canary (R0) builds?&lt;/summary&gt; Preview the latest development builds of Microsoft Teams. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;What are Canary SlimCore (R0s) builds?&lt;/summary&gt; Preview the latest development builds of Microsoft Teams but with access to newer versions of SlimCore. 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;What does Microsoft Teams version 1.7.00.4065 mean?&lt;/h3&gt; 
&lt;p&gt;We use the &lt;code&gt;1.X.00.DDDXX&lt;/code&gt; version format for Teams 1.0.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Here is an example:&lt;/summary&gt; 
 &lt;p&gt;Microsoft Teams version &lt;code&gt;1.7.00.4065&lt;/code&gt; is broken down into the following:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;7&lt;/code&gt; (X) is the year of the build. 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;7&lt;/code&gt; represents 2024.&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;6&lt;/code&gt; represents 2023.&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;5&lt;/code&gt; represents 2022.&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;4&lt;/code&gt; represents 2021.&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;3&lt;/code&gt; represents 2020.&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;2&lt;/code&gt; represents 2019.&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;1&lt;/code&gt; represents 2018.&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;0&lt;/code&gt; represents 2017.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;40&lt;/code&gt; (DDD) is the day number of that year. 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;40&lt;/code&gt; represents Friday, February 9, 2024.&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;39&lt;/code&gt; represents Thursday, February 8, 2024.&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;38&lt;/code&gt; represents Wednesday, February 7, 2024.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;65&lt;/code&gt; (XX) is automatically generated by Azure DevOps.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;We have two build flavors for Teams 1.0:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;Stable (S)&lt;/code&gt; = Any build version ending with &lt;code&gt;51&lt;/code&gt; to &lt;code&gt;99&lt;/code&gt; is a stable build.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Experimental (E)&lt;/code&gt; = Any build version ending with &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;49&lt;/code&gt; is an experimental build.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;What does Microsoft Teams version 24041.300.2689.9173 mean?&lt;/h3&gt; 
&lt;p&gt;We use the &lt;code&gt;YYDDD.XXXX.XXXX.XXXX&lt;/code&gt; version format for Teams 2.0 and Teams 2.1.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Here is an example:&lt;/summary&gt; 
 &lt;p&gt;Microsoft Teams version &lt;code&gt;24041.300.2689.9173&lt;/code&gt; is broken down into the following:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;24&lt;/code&gt; (YY) is the year of the build.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;041&lt;/code&gt; (DDD) is the day number of that year. 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;041&lt;/code&gt; represents Saturday, February 10, 2024.&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;040&lt;/code&gt; represents Friday, February 9, 2024.&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;039&lt;/code&gt; represents Thursday, February 8, 2024.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;300&lt;/code&gt; (XXXX) is automatically generated by Azure DevOps.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;2689&lt;/code&gt; (XXXX) is the amount of builds we have created excluding servicing builds.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;9173&lt;/code&gt; (XXXX) is automatically generated by Azure DevOps.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;What does client version 49/24031000600 mean?&lt;/h3&gt; 
&lt;p&gt;We use the &lt;code&gt;XXXX/YYMMDDXXXXX&lt;/code&gt; version format for the React Web Client (RWC).&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Here is an example:&lt;/summary&gt; 
 &lt;p&gt;Client version &lt;code&gt;49/24031000600&lt;/code&gt; is broken down into the following:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;49&lt;/code&gt; (XXXX) is the platform ID. 
   &lt;ul&gt; 
    &lt;li&gt;Please see &lt;a href=&quot;https://raw.githubusercontent.com/ItzLevvie/MicrosoftTeams-msinternal/master/#what-are-the-different-platform-ids&quot;&gt;What are the different platform IDs?&lt;/a&gt; for more information.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;24&lt;/code&gt; (YY) is the year of the build.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;03&lt;/code&gt; (MM) is the month of the build.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;10&lt;/code&gt; (DD) is the day of the build.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;00600&lt;/code&gt; (XXXXX) is automatically generated by Azure DevOps.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;Microsoft Teams supports the &lt;code&gt;version&lt;/code&gt; parameter which allows you to force different versions of the React Web Client (RWC).&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Here are a few examples:&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://teams.live.com/v2/?ring=ring0&amp;amp;version=24030802300&quot;&gt;https://teams.live.com/v2/?ring=ring0&amp;amp;version=24030802300&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://teams.microsoft.com/v2/?ring=ring1_5&amp;amp;version=24022924507&quot;&gt;https://teams.microsoft.com/v2/?ring=ring1_5&amp;amp;version=24022924507&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://devspaces.skype.com/v2/?ring=ring0&amp;amp;version=24031000600&quot;&gt;https://devspaces.skype.com/v2/?ring=ring0&amp;amp;version=24031000600&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;What are the different platform IDs?&lt;/h3&gt; 
&lt;p&gt;Microsoft Teams uses platform IDs to differentiate different platforms for flighting, telemetry, and more.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Here are a few examples:&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Platform ID&lt;/th&gt; 
    &lt;th&gt;Friendly Name&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;27&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams classic based on Electron (Windows)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;28&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams classic based on Electron (macOS)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;34&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams Rooms based on Electron (Windows)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;35&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams classic for Surface Hub based on Electron (Windows)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;38&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams classic for Surface Hub 2 based on Electron (Windows)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;41&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams classic based on Electron (Linux)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;48&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams (personal) based on Microsoft Edge WebView2 (Windows)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;49&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams based on Microsoft Edge WebView2 (Windows)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;50&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams based on Microsoft Edge WebView2 (macOS)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;51&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams Rooms based on Microsoft Edge WebView2 (Windows)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;1415&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams Web (Windows, macOS, and Linux)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;1416&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams (Android)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;1417&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams (iOS)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;1449&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams Rooms (Android)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;1454&lt;/td&gt; 
    &lt;td&gt;Microsoft Teams PWA (Linux)&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;How can I enable Developer Tools?&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Teams 2.0 — Microsoft Teams (personal):&lt;/summary&gt; 
 &lt;p&gt;You will have to create a JSON file named &lt;code&gt;configuration.json&lt;/code&gt; in &lt;code&gt;%LOCALAPPDATA%\Packages\MicrosoftTeams_8wekyb3d8bbwe\LocalCache\Microsoft\MSTeams&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;core/devMenuEnabled&quot;: true
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Teams 2.1 — Microsoft Teams:&lt;/summary&gt; 
 &lt;p&gt;You will have to create a JSON file named &lt;code&gt;configuration.json&lt;/code&gt; in &lt;code&gt;%LOCALAPPDATA%\Packages\MSTeams_8wekyb3d8bbwe\LocalCache\Microsoft\MSTeams&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;core/devMenuEnabled&quot;: true
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Teams 2.1 — Microsoft Teams Rooms:&lt;/summary&gt; 
 &lt;p&gt;You will have to create a JSON file named &lt;code&gt;configuration.json&lt;/code&gt; in &lt;code&gt;%LOCALAPPDATA%\Packages\MSTeamsRooms_8wekyb3d8bbwe\LocalCache\Microsoft\MSTeams&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;core/devMenuEnabled&quot;: true
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;How can I use this repository for my scripts?&lt;/h3&gt; 
&lt;p&gt;Microsoft Teams uses Experimentation and Configuration Service (ECS) to retrieve the latest builds, experiments, feature flags, settings, and more.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Here are a few examples:&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Domain&lt;/th&gt; 
    &lt;th&gt;Experimentation and Configuration Service (ECS)&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://teams.live.com&quot;&gt;https://teams.live.com&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://config.teams.microsoft.com/config/v1/MicrosoftTeams/48_1.0.0.0?environment=life&amp;amp;audienceGroup=general&amp;amp;teamsRing=general&amp;amp;agent=TeamsBuilds&quot;&gt;https://config.teams.microsoft.com/config/v1/MicrosoftTeams/48_1.0.0.0?environment=life&amp;amp;audienceGroup=general&amp;amp;teamsRing=general&amp;amp;agent=TeamsBuilds&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://teams.cloud.microsoft&quot;&gt;https://teams.cloud.microsoft&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://teams.microsoft.com&quot;&gt;https://teams.microsoft.com&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://int.teams.microsoft.com&quot;&gt;https://int.teams.microsoft.com&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://devspaces.skype.com&quot;&gt;https://devspaces.skype.com&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://config.teams.microsoft.com/config/v1/MicrosoftTeams/49_1.0.0.0?environment=prod&amp;amp;audienceGroup=general&amp;amp;teamsRing=general&amp;amp;agent=TeamsBuilds&quot;&gt;https://config.teams.microsoft.com/config/v1/MicrosoftTeams/49_1.0.0.0?environment=prod&amp;amp;audienceGroup=general&amp;amp;teamsRing=general&amp;amp;agent=TeamsBuilds&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://gov.teams.microsoft.us&quot;&gt;https://gov.teams.microsoft.us&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://config.ecs.gov.teams.microsoft.us/config/v1/MicrosoftTeams/49_1.0.0.0?environment=gcchigh&amp;amp;audienceGroup=general&amp;amp;teamsRing=general&amp;amp;agent=TeamsBuilds&quot;&gt;https://config.ecs.gov.teams.microsoft.us/config/v1/MicrosoftTeams/49_1.0.0.0?environment=gcchigh&amp;amp;audienceGroup=general&amp;amp;teamsRing=general&amp;amp;agent=TeamsBuilds&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://dod.teams.microsoft.us&quot;&gt;https://dod.teams.microsoft.us&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://config.ecs.dod.teams.microsoft.us/config/v1/MicrosoftTeams/49_1.0.0.0?environment=dod&amp;amp;audienceGroup=general&amp;amp;teamsRing=general&amp;amp;agent=TeamsBuilds&quot;&gt;https://config.ecs.dod.teams.microsoft.us/config/v1/MicrosoftTeams/49_1.0.0.0?environment=dod&amp;amp;audienceGroup=general&amp;amp;teamsRing=general&amp;amp;agent=TeamsBuilds&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://teams.microsoftonline.cn&quot;&gt;https://teams.microsoftonline.cn&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://mooncake.config.teams.microsoft.com/config/v1/MicrosoftTeams/49_1.0.0.0?environment=gallatin&amp;amp;audienceGroup=general&amp;amp;teamsRing=general&amp;amp;agent=TeamsBuilds&quot;&gt;https://mooncake.config.teams.microsoft.com/config/v1/MicrosoftTeams/49_1.0.0.0?environment=gallatin&amp;amp;audienceGroup=general&amp;amp;teamsRing=general&amp;amp;agent=TeamsBuilds&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Here are a few examples of these parameters:&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Parameter&lt;/th&gt; 
    &lt;th&gt;Value&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;environment&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;dev&lt;/code&gt;; &lt;code&gt;prod&lt;/code&gt;; &lt;code&gt;life&lt;/code&gt;; &lt;code&gt;gcc&lt;/code&gt;; &lt;code&gt;gcchigh&lt;/code&gt;; &lt;code&gt;dod&lt;/code&gt;; &lt;code&gt;gallatin&lt;/code&gt;; &lt;code&gt;ag08&lt;/code&gt;; &lt;code&gt;ag09&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;audienceGroup&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;ring0&lt;/code&gt;; &lt;code&gt;ring0_s&lt;/code&gt;; &lt;code&gt;ring1&lt;/code&gt;; &lt;code&gt;ring1_5&lt;/code&gt;; &lt;code&gt;ring1_6&lt;/code&gt;; &lt;code&gt;ring2&lt;/code&gt;; &lt;code&gt;ring3&lt;/code&gt;; &lt;code&gt;ring3_6&lt;/code&gt;; &lt;code&gt;ring3_9&lt;/code&gt;; &lt;code&gt;general&lt;/code&gt;; &lt;code&gt;general_gcc&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;teamsRing&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;ring0&lt;/code&gt;; &lt;code&gt;ring0_s&lt;/code&gt;; &lt;code&gt;ring1&lt;/code&gt;; &lt;code&gt;ring1_5&lt;/code&gt;; &lt;code&gt;ring1_6&lt;/code&gt;; &lt;code&gt;ring2&lt;/code&gt;; &lt;code&gt;ring3&lt;/code&gt;; &lt;code&gt;ring3_6&lt;/code&gt;; &lt;code&gt;ring3_9&lt;/code&gt;; &lt;code&gt;general&lt;/code&gt;; &lt;code&gt;general_gcc&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;experience&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;cdl-worker&lt;/code&gt;; &lt;code&gt;react-web-client&lt;/code&gt;; &lt;code&gt;multi-window&lt;/code&gt;; &lt;code&gt;meeting-room&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;buildType&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;production&lt;/code&gt;; &lt;code&gt;container&lt;/code&gt;; &lt;code&gt;local&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;osPlatform&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;windows&lt;/code&gt;; &lt;code&gt;mac&lt;/code&gt;; &lt;code&gt;linux&lt;/code&gt;; &lt;code&gt;chromeos&lt;/code&gt;; &lt;code&gt;android&lt;/code&gt;; &lt;code&gt;ios&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Your Object ID from Microsoft Entra ID. &lt;br&gt; &lt;br&gt; This repository uses &lt;code&gt;3a7cf1d3-06fa-4ead-bf45-a6286ff2620a&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;aaduserid&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Your Object ID from Microsoft Entra ID. &lt;br&gt; &lt;br&gt; This repository uses &lt;code&gt;3a7cf1d3-06fa-4ead-bf45-a6286ff2620a&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;tenantId&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Your Tenant ID from Microsoft Entra ID. &lt;br&gt; &lt;br&gt; This repository uses &lt;code&gt;72f988bf-86f1-41af-91ab-2d7cd011db47&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;agent&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;Segmentation&lt;/code&gt;; &lt;code&gt;TeamsBuilds&lt;/code&gt;; &lt;code&gt;TeamsNorthstar&lt;/code&gt;; &lt;code&gt;TeamsWebview2&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>LeDragoX/Win-Debloat-Tools</title>
      <link>https://github.com/LeDragoX/Win-Debloat-Tools</link>
      <description>&lt;p&gt;Re-imagining Windows like a minimal OS install, already debloated with minimal impact for most functionality.&lt;/p&gt;&lt;hr&gt;&lt;h2 align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/assets/script-logo.png&quot; style=&quot;vertical-align: bottom&quot; width=&quot;90%&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/actions/workflows/powershell.yaml&quot;&gt;&lt;img src=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/actions/workflows/powershell.yaml/badge.svg?style=flat&quot; alt=&quot;PSScriptAnalyzer&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/issues/LeDragoX/Win-Debloat-Tools?label=Issues&quot; alt=&quot;GitHub issues&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/LeDragoX/Win-Debloat-Tools?color=blue&amp;amp;label=License&quot; alt=&quot;GitHub license&quot;&gt; &lt;a href=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/commits/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/LeDragoX/Win-Debloat-Tools?label=Commit%20rate&quot; alt=&quot;Commit rate&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/last-commit/LeDragoX/Win-Debloat-Tools/main?label=Last%20commit&quot; alt=&quot;GitHub last commit (branch)&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/languages/code-size/LeDragoX/Win-Debloat-Tools?label=Code%20size&quot; alt=&quot;GitHub code size in bytes&quot;&gt;&lt;/p&gt; &lt;i&gt; This Project was adapted from &lt;a href=&quot;https://github.com/W4RH4WK/Debloat-Windows-10&quot;&gt;W4RH4WK&#39;s Project&lt;/a&gt; &lt;/i&gt; &lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Re-imagining Windows like a minimal OS install, already debloated with minimal impact for most functionality.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;strong&gt;DISCLAIMER:&lt;/strong&gt; &lt;em&gt;You&#39;re doing this at your own risk, I am not responsible for any data loss or damage that may occur. It&#39;s not guaranteed that every feature removed from the system can be easily restored.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🚀 Download Latest Version&lt;/h2&gt; 
&lt;p&gt;Code located in the &lt;code&gt;main&lt;/code&gt; branch is considered bleeding-edge, but big features/reworks will be implemented in a separate branch.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] &lt;em&gt;Use on a fresh Windows install to notice the differences. Using an admin account is recommended to avoid any compatibility issues.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;table&gt; 
  &lt;thead align=&quot;center&quot;&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Branch to Download&lt;/th&gt; 
    &lt;th&gt;Version(s) Supported&lt;/th&gt; 
    &lt;th&gt;Edition(s)&lt;/th&gt; 
    &lt;th&gt;Architecture&lt;/th&gt; 
    &lt;th&gt;PowerShell Version&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody align=&quot;center&quot;&gt; 
   &lt;tr&gt; 
    &lt;td&gt; &lt;h4&gt;&lt;a href=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/archive/main.zip&quot;&gt;⬇️ Main&lt;/a&gt;&lt;/h4&gt;(Current) &lt;/td&gt; 
    &lt;td rowspan=&quot;2&quot;&gt;23H2 or Older&lt;/td&gt; 
    &lt;td rowspan=&quot;2&quot;&gt;Home / Pro&lt;/td&gt; 
    &lt;td rowspan=&quot;2&quot;&gt; x86/x64 ONLY&lt;br&gt; ARM/ARM64 will break your installation (&lt;a href=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/issues/97&quot;&gt;#97&lt;/a&gt;) &lt;/td&gt; 
    &lt;td rowspan=&quot;2&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/assets/powershell-icon.png&quot; style=&quot;vertical-align: bottom&quot;&gt; v5.1+&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;✨ Usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;To run a variant of the script, follow these steps:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Extract the &lt;strong&gt;entire&lt;/strong&gt; &lt;code&gt;.zip&lt;/code&gt; file to another folder.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;OpenTerminalHere.cmd&lt;/code&gt; (try to &lt;code&gt;run as admin&lt;/code&gt; if nothing happens at all).&lt;/li&gt; 
 &lt;li&gt;Copy and Paste one of the lines below on your &lt;strong&gt;Terminal&lt;/strong&gt; to unblock the scripts and execute it:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GUI Version&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force; ls -Recurse *.ps*1 | Unblock-File; .\&quot;WinDebloatTools.ps1&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/assets/script-gui.png&quot; alt=&quot;Script GUI&quot;&gt; &lt;em&gt;The &lt;code&gt;Apply Tweaks&lt;/code&gt; button is the main one for debloating.&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;CLI Version&lt;/strong&gt; (Straight to debloat)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force; ls -Recurse *.ps*1 | Unblock-File; .\&quot;WinDebloatTools.ps1&quot; &#39;CLI&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts&quot;&gt;Scripts&lt;/a&gt; can be run individually, pick what you need.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;🔄️ Roll-Back&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;If something breaks you can rely on:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you want &lt;strong&gt;(almost)&lt;/strong&gt; everything to it&#39;s original state, use the &lt;code&gt;Undo Tweaks&lt;/code&gt; button on &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/WinDebloatTools.ps1&quot;&gt;&lt;code&gt;WinDebloatTools.ps1&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;A restoration point done by the script itself;&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;Repair Windows&lt;/code&gt; button on &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/WinDebloatTools.ps1&quot;&gt;&lt;code&gt;WinDebloatTools.ps1&lt;/code&gt;&lt;/a&gt;;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;☑️ Common Script Features&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to expand&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;This part is also valid to the &lt;em&gt;Apply Tweaks&lt;/em&gt; button on the GUI.&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Import all necessary &lt;em&gt;modules&lt;/em&gt; before executing everything (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/lib/&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Logs both script runs on &lt;code&gt;C:\Users\&amp;lt;&amp;lt;USERNAME&amp;gt;&amp;gt;\AppData\Local\Temp\Win-DT-Logs&lt;/code&gt;;&lt;/li&gt; 
  &lt;li&gt;Make a Restore Point and Backup the Hosts file (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Backup-System.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Download AdwCleaner and Run the latest version for &lt;em&gt;Virus/Adware&lt;/em&gt; scan and from OOShutUp10 and import all Recommended settings from a file (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Invoke-DebloatSoftware.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Disable &lt;em&gt;non-essential&lt;/em&gt; &lt;strong&gt;Telemetry&lt;/strong&gt; from &lt;strong&gt;Scheduled Tasks&lt;/strong&gt; and Optimize it (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Optimize-TaskScheduler.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Disable &lt;em&gt;heavy&lt;/em&gt; &lt;strong&gt;Services&lt;/strong&gt;, but enable some on SSDs for optimum performance (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Optimize-ServicesRunning.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Remove some of the legacy system components called as &quot;&lt;strong&gt;Capabilities&lt;/strong&gt;&quot;, except the most popular ones (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Remove-CapabilitiesList.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Remove &lt;strong&gt;Bloatware UWP Apps&lt;/strong&gt; that comes with Windows 10+, except from my choice (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Remove-BloatwareAppsList.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Optimize &lt;strong&gt;Privacy&lt;/strong&gt; by disabling more &lt;strong&gt;telemetry&lt;/strong&gt; parts and changing &lt;strong&gt;GPOs&lt;/strong&gt;, all through changing &lt;strong&gt;registry keys&lt;/strong&gt; (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Optimize-Privacy.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Optimize &lt;strong&gt;Performance&lt;/strong&gt; by changing away from default settings that slowdowns the system, utilizing &lt;strong&gt;PowerShell commands&lt;/strong&gt; and &lt;strong&gt;changing registries&lt;/strong&gt; to disable features (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Optimize-Performance.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Apply &lt;strong&gt;Personalization&lt;/strong&gt; tweaks on &lt;strong&gt;UI&lt;/strong&gt; and &lt;strong&gt;System Settings&lt;/strong&gt; via &lt;strong&gt;Registry&lt;/strong&gt; and &lt;strong&gt;PowerShell&lt;/strong&gt; commands (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Register-PersonalTweaksList.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Help improve the &lt;strong&gt;Security&lt;/strong&gt; of Windows while maintaining performance (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Optimize-Security.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Disable &lt;strong&gt;obsolete&lt;/strong&gt; Windows &lt;strong&gt;optional features&lt;/strong&gt; and enable some that might help (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Optimize-WindowsFeaturesList.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;✅ GUI Script Features&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to expand&lt;/summary&gt; 
 &lt;h3&gt;System Tweaks&lt;/h3&gt; 
 &lt;h4&gt;Customize System Features (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/Individual-Tweaks.psm1&quot;&gt;Can be found here&lt;/a&gt;)&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Dark Theme&lt;/code&gt;: Apply &lt;em&gt;Dark Theme&lt;/em&gt; or &lt;em&gt;Light Theme&lt;/em&gt; on Windows;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Activity History&lt;/code&gt;: Manages the &lt;strong&gt;Activity History&lt;/strong&gt; setting;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Background Apps&lt;/code&gt;: Manages &lt;em&gt;ALL&lt;/em&gt; the &lt;strong&gt;Background Apps&lt;/strong&gt; settings;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Clipboard History&lt;/code&gt;: Manages the &lt;strong&gt;Clipboard History&lt;/strong&gt; setting, that keeps a history from your clipboard pressing &lt;code&gt;Windows + V&lt;/code&gt; key;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Clipboard Sync Across Devices&lt;/code&gt;: Manages the &lt;strong&gt;Clipboard Sync Across Devices&lt;/strong&gt; setting, which allows to use the same clipboard for multiple devices (must be using a MS account);&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Cortana&lt;/code&gt;: Manages the &lt;strong&gt;Cortana&lt;/strong&gt; setting;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Hibernate&lt;/code&gt;: Manages the &lt;strong&gt;Hibernate&lt;/strong&gt; setting;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Legacy Context Menu&lt;/code&gt;: Bring back the Windows 10 &lt;strong&gt;context menu&lt;/strong&gt; from right-clicking or default on Windows 11;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Location Tracking&lt;/code&gt;: Allow or block &lt;strong&gt;location sensors and trackers&lt;/strong&gt; on Windows;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable News And Interest&lt;/code&gt;: Show or hide the &lt;strong&gt;temperature and climate&lt;/strong&gt; on the taskbar;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Old Volume Control&lt;/code&gt;: Manages the &lt;strong&gt;Old Volume Control (Win 7/8.1)&lt;/strong&gt; setting;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Online Speech Recognition&lt;/code&gt;: Manages the &lt;strong&gt;Online Speech Recognition&lt;/strong&gt; setting, by pressing the keys &lt;code&gt;Windows + H&lt;/code&gt; you can speak through your mic, then use it to type text using your voice;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Phone Link&lt;/code&gt;: Manages the &lt;strong&gt;Phone Link&lt;/strong&gt; setting, which can link your Android/iPhone devices notifications to Windows;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Photo Viewer&lt;/code&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-photo-viewer.reg&quot;&gt;&lt;em&gt;Enables&lt;/em&gt;&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-photo-viewer.reg&quot;&gt;&lt;em&gt;Disables&lt;/em&gt;&lt;/a&gt; the old &lt;strong&gt;Photo Viewer (Win 7/8.1)&lt;/strong&gt;;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Search App for Unknown Ext.&lt;/code&gt;: When running a unknown extension file, be able to search through &lt;strong&gt;MS Store&lt;/strong&gt; for an App that can open it.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Telemetry&lt;/code&gt;: Manages the &lt;strong&gt;Windows Telemetry Level&lt;/strong&gt; setting;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable WSearch Service&lt;/code&gt;: Manages the &lt;strong&gt;Windows Search Service&lt;/strong&gt; setting;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Windows Spotlight&lt;/code&gt;: Manages the spotlight setting in personalization settings, giving a new desktop and lockscreen wallpaper daily;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Xbox Game Bar/DVR/Mode&lt;/code&gt;: Manages the &lt;strong&gt;Xbox Game Bar/DVR/Mode&lt;/strong&gt; setting, that can open Game Bar anywhere, record clips from games and change Game Mode;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;System Debloat Tools&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;Apply Tweaks&lt;/code&gt;: Run every Common Tweak scripts (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/#%EF%B8%8F-common-script-features&quot;&gt;Go To &lt;strong&gt;☑️ Common Script Features&lt;/strong&gt; section&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Undo Tweaks&lt;/code&gt;: Re-apply some tweaks and &lt;em&gt;Revert&lt;/em&gt; all possible ones, covering the, &lt;code&gt;ShutUp10 settings&lt;/code&gt;, &lt;code&gt;Scheduled Tasks&lt;/code&gt;, &lt;code&gt;Services&lt;/code&gt;, &lt;code&gt;Privacy and Performance&lt;/code&gt;, &lt;code&gt;Personal&lt;/code&gt; and &lt;code&gt;Optional Features&lt;/code&gt; tweaks, then try to &lt;code&gt;Reinstall Pre-Installed Apps&lt;/code&gt;;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Remove-MSEdge.ps1&quot;&gt;&lt;code&gt;Remove Microsoft Edge&lt;/code&gt;&lt;/a&gt;: uninstalls &lt;strong&gt;Microsoft Edge&lt;/strong&gt;, disables Scheduled Tasks and Services related to Edge, then remove the remaining files, &lt;strong&gt;Edge Web View&lt;/strong&gt; files will remain untouched, but apps which depends on &lt;strong&gt;WebView2&lt;/strong&gt; will not install unless you install Microsoft Edge;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Remove-OneDrive.ps1&quot;&gt;&lt;code&gt;Remove OneDrive&lt;/code&gt;&lt;/a&gt;: completely removes OneDrive from the System, re-install is possible via Win Store;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Remove-Xbox.ps1&quot;&gt;&lt;code&gt;Remove Xbox&lt;/code&gt;&lt;/a&gt;: wipe Xbox Apps, disable Services related to Xbox and GameBar/GameDVR;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Install System Apps (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/Install-Individual-System-Apps.psm1&quot;&gt;Can be found here&lt;/a&gt;)&lt;/h4&gt; 
 &lt;p&gt;&lt;em&gt;This section contains options to restore the system apps, by downloading them from the &lt;strong&gt;MS Store&lt;/strong&gt; (mostly) and doing &lt;strong&gt;Stock configurations&lt;/strong&gt; (for some Apps).&lt;/em&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;The Xbox button uses a script to restore functionalities and reinstall the Xbox Apps available on MS Store.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;Other Tools&lt;/h4&gt; 
 &lt;p&gt;&lt;em&gt;This section contains tools to solve some Windows problems and get info about how much debloated the system is.&lt;/em&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/other-scripts/New-SystemColor.ps1&quot;&gt;&lt;code&gt;Randomize System Color&lt;/code&gt;&lt;/a&gt;: Changes the Windows color pallette to a random generated hex color;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Install-DefaultAppsList.ps1&quot;&gt;&lt;code&gt;Reinstall Pre-Installed Apps&lt;/code&gt;&lt;/a&gt;: Rebloat Windows with all the Pre-Installed Apps;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Repair-WindowsSystem.ps1&quot;&gt;&lt;code&gt;Repair Windows&lt;/code&gt;&lt;/a&gt;: Try to Completely fix the Windows worst problems via Command Line;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/other-scripts/Show-DebloatInfo.ps1&quot;&gt;&lt;code&gt;Show Debloat Info&lt;/code&gt;&lt;/a&gt;: Make an overall check-up from disabled and enabled Windows Components (Compare before and after applying tweaks, it&#39;s a great difference);&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Windows Update (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/Individual-Tweaks.psm1&quot;&gt;Can be found here&lt;/a&gt;)&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Automatic Windows Update&lt;/code&gt;: Set Windows updates to automatic or manual;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Optional Features/Task Scheduler/Services/Windows Capabilities (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/Individual-Tweaks.psm1&quot;&gt;Can be found here&lt;/a&gt;)&lt;/h4&gt; 
 &lt;p&gt;&lt;em&gt;These sections can manually adjust &lt;strong&gt;Features&lt;/strong&gt; from the system, working as a ON/OFF toggle.&lt;/em&gt;&lt;/p&gt; 
 &lt;h4&gt;Miscellaneous Features (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/Individual-Tweaks.psm1&quot;&gt;Can be found here&lt;/a&gt;)&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Encrypted DNS&lt;/code&gt;: Sets the DNS Client Servers to &lt;strong&gt;Cloudflare&#39;s&lt;/strong&gt; and &lt;strong&gt;Google&#39;s&lt;/strong&gt; (ipv4 and ipv6), and enables &lt;strong&gt;DNS Over HTTPS&lt;/strong&gt; on &lt;em&gt;Windows 11&lt;/em&gt;.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable God Mode&lt;/code&gt;: Manages the hidden Desktop folder called &quot;&lt;strong&gt;God Mode&lt;/strong&gt;&quot;;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Mouse Acceleration&lt;/code&gt;: Manages the &lt;strong&gt;Enhance Pointer Precision&lt;/strong&gt; setting from mouse settings;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Mouse Natural Scroll&lt;/code&gt;: Sets the mac-like mouse scrolling behavior, basically reverts mouse scroll direction;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Take Ownership menu&lt;/code&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-take-ownership-context-menu.reg&quot;&gt;&lt;em&gt;Enables&lt;/em&gt;&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-take-ownership-context-menu.reg&quot;&gt;&lt;em&gt;Disables&lt;/em&gt;&lt;/a&gt; the &lt;strong&gt;Take Ownership context menu&lt;/strong&gt;;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Shutdown PC shortcut&lt;/code&gt;: Manages the &lt;strong&gt;Shutdown Computer desktop shortcut&lt;/strong&gt;;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Software Install&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/lib/package-managers/&quot;&gt;Install &lt;em&gt;Winget/Chocolatey&lt;/em&gt; package managers&lt;/a&gt;;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Be able to install the listed software in this script! Even from System apps.&lt;/li&gt; 
    &lt;li&gt;&lt;strong&gt;Importante Note:&lt;/strong&gt; When proceeding to install a new app, the script will automatically install the required package manager for that operation.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/lib/package-managers/&quot;&gt;&lt;strong&gt;Create&lt;/strong&gt; or &lt;strong&gt;Remove&lt;/strong&gt; a Daily Upgrade Task for &lt;em&gt;Winget/Chocolatey&lt;/em&gt; packages&lt;/a&gt;;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Creates a new Scheduled Job to daily upgrade all available softwares via &lt;em&gt;Winget&lt;/em&gt; at &lt;strong&gt;12:00&lt;/strong&gt; and &lt;em&gt;Chocolatey&lt;/em&gt; at &lt;strong&gt;13:00&lt;/strong&gt;;&lt;/li&gt; 
    &lt;li&gt;Register daily upgrade logs on &lt;code&gt;C:\Users\&amp;lt;&amp;lt;USERNAME&amp;gt;&amp;gt;\AppData\Local\Temp\Win-DT-Logs&lt;/code&gt; and remove old log files;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;Remove All Chocolatey Packages&lt;/code&gt;: List all packages from Chocolatey which are installed and remove everything at once;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;Upgrade All Softwares&lt;/code&gt;: Upgrades all Softwares installed on your machine installed through &lt;em&gt;Winget&lt;/em&gt; and &lt;em&gt;Chocolatey&lt;/em&gt;.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;WSL will only update itself, not the distros installed.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;Install Selected&lt;/code&gt;: Install the selected apps by marking the checkbox(es);&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;Uninstall Mode&lt;/code&gt;: Default as OFF, clicking this will switch the &lt;code&gt;Install Selected&lt;/code&gt; button to &lt;code&gt;Uninstall Selected&lt;/code&gt; and uninstall every selected apps (&lt;strong&gt;Advice:&lt;/strong&gt; differently colored buttons may not be able to uninstall completely and WSL UWP Apps, but WSL Distros will be unregistered);&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;➕ Contributing&lt;/h2&gt; 
&lt;p&gt;FIRST of all, if have any &lt;em&gt;questions&lt;/em&gt; or &lt;em&gt;concerns&lt;/em&gt; about the project, please refer to the &lt;a href=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/discussions/new/choose&quot;&gt;DISCUSSION&lt;/a&gt; page, not the &lt;strong&gt;ISSUES&lt;/strong&gt;, this helps keeping the project organized, thanks! Found a &lt;em&gt;bug&lt;/em&gt; or want a &lt;em&gt;new feature&lt;/em&gt;? You can open a new &lt;code&gt;Issue&lt;/code&gt; &lt;a href=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/issues/new/choose&quot;&gt;here&lt;/a&gt;. Wanting to add &lt;em&gt;improvements&lt;/em&gt; or &lt;em&gt;fixes&lt;/em&gt;? Please check out the &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;🤍 Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Special thanks to &lt;a href=&quot;https://youtu.be/IU5F01oOzQQ?t=324&quot;&gt;LowSpecGamer&lt;/a&gt;, he is the reason i&#39;ve adapted this script.&lt;/li&gt; 
 &lt;li&gt;Special thanks to &lt;a href=&quot;https://youtu.be/sjrW74Hx5Po?t=318&quot;&gt;Fabio Akita&lt;/a&gt;, for believing in this project and making this script famous 🤍.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/W4RH4WK&quot;&gt;W4RH4WK&lt;/a&gt; - For his project ^^&lt;/li&gt; 
 &lt;li&gt;[Tester] All of &lt;em&gt;my friends and people&lt;/em&gt; who trusted on me to run the script;&lt;/li&gt; 
 &lt;li&gt;[Tester] &lt;a href=&quot;https://github.com/yCr-shiddy&quot;&gt;yCr-shiddy&lt;/a&gt; - Helped giving more ideas and fixes;&lt;/li&gt; 
 &lt;li&gt;[Code] &lt;a href=&quot;https://www.youtube.com/channel/UCjidjWX76LR1g5yx18NSrLA&quot;&gt;Adamx&#39;s&lt;/a&gt; - by &lt;a href=&quot;https://youtu.be/hQSkPmZRCjc&quot;&gt;&lt;em&gt;this video&lt;/em&gt;&lt;/a&gt; (and script);&lt;/li&gt; 
 &lt;li&gt;[Code] &lt;a href=&quot;https://www.youtube.com/user/baboo&quot;&gt;Baboo&#39;s&lt;/a&gt; - by &lt;a href=&quot;https://youtu.be/qWESrvP_uU8&quot;&gt;&lt;em&gt;this video&lt;/em&gt;&lt;/a&gt; (and commands);&lt;/li&gt; 
 &lt;li&gt;[Code] &lt;a href=&quot;https://www.youtube.com/channel/UCg6gPGh8HU2U01vaFCAsvmQ&quot;&gt;ChrisTitusTech&lt;/a&gt; - by having taught how to mess with &lt;em&gt;PowerShell&lt;/em&gt; in &lt;a href=&quot;https://youtu.be/ER27pGt5wH0&quot;&gt;this Stream&lt;/a&gt; (and his &lt;em&gt;open-source&lt;/em&gt; debloat script);&lt;/li&gt; 
 &lt;li&gt;[Code] &lt;a href=&quot;https://www.youtube.com/channel/UCnG-TN23lswO6QbvWhMtxpA&quot;&gt;Daniel Persson&lt;/a&gt; - by &lt;a href=&quot;https://youtu.be/EfrT_Bvgles&quot;&gt;&lt;em&gt;this video&lt;/em&gt;&lt;/a&gt; (and script explanation);&lt;/li&gt; 
 &lt;li&gt;[Code] &lt;a href=&quot;https://gist.github.com/matthewjberger&quot;&gt;matthewjberger&lt;/a&gt; - by &lt;a href=&quot;https://gist.github.com/matthewjberger/2f4295887d6cb5738fa34e597f457b7f&quot;&gt;&lt;em&gt;this script&lt;/em&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🛣️ Roadmap&lt;/h2&gt; 
&lt;p&gt;List of all changes made on the script since the beginning, the file can be accessed &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/ROADMAP.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🏅 Recommended Alternative&lt;/h2&gt; 
&lt;p&gt;The scripts are designed to run without any user interaction. Modify them beforehand. If you want a more interactive approach (also more maintained) then check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChrisTitusTech/winutil&quot;&gt;winutil&lt;/a&gt; from &lt;a href=&quot;https://github.com/ChrisTitusTech&quot;&gt;ChrisTitusTech&lt;/a&gt;;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📝 Legal / License&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;This project is NOT associated to &lt;strong&gt;MalwareBytes&lt;/strong&gt; and &lt;strong&gt;O&amp;amp;O Software GmbH&lt;/strong&gt; in any form.&lt;/em&gt; &lt;strong&gt;MalwareBytes AdwCleaner&lt;/strong&gt; and &lt;strong&gt;O&amp;amp;O ShutUp10++&lt;/strong&gt; have their own licenses.&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/LICENSE.txt&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/core</title>
      <link>https://github.com/dotnet/core</link>
      <description>&lt;p&gt;.NET news, announcements, release notes, and more!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Release Notes&lt;/h1&gt; 
&lt;p&gt;Welcome to the home of .NET &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/README.md&quot;&gt;release notes&lt;/a&gt; and &lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/news&quot;&gt;news&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/releases.md&quot;&gt;Releases&lt;/a&gt; under active support or development:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Version&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Release Date&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Support&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Latest Patch Version&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;End of Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/10.0/README.md&quot;&gt;.NET 10&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;November 11, 2025&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-policies.md&quot;&gt;LTS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/10.0/preview/preview1/10.0.0-preview.1.md&quot;&gt;10.0.0-preview.1&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;May 8, 2028&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/9.0/README.md&quot;&gt;.NET 9&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;November 12, 2024&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-policies.md&quot;&gt;STS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/9.0/9.0.3/9.0.3.md&quot;&gt;9.0.3&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;May 12, 2026&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/8.0/README.md&quot;&gt;.NET 8&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8/&quot;&gt;November 14, 2023&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-policies.md&quot;&gt;LTS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/8.0/8.0.14/8.0.14.md&quot;&gt;8.0.14&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;November 10, 2026&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/README.md&quot;&gt;Release notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet&quot;&gt;Binaries and installers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/install/&quot;&gt;Installation docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/tools/dotnet-install-script&quot;&gt;dotnet-install scripts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Discussions&lt;/h2&gt; 
&lt;p&gt;Follow &lt;a href=&quot;https://github.com/dotnet/core/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you will find the latest news on releases, including PSAs and CVEs.&lt;/p&gt; 
&lt;p&gt;You can subscribe to discussions with the following RSS feeds:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Category&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;GitHub Discussions&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;RSS Feed&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;All Discussions&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions.atom&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;News&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/news&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/news.atom&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;General&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/general&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/general.atom&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>ChrisTitusTech/winutil</title>
      <link>https://github.com/ChrisTitusTech/winutil</link>
      <description>&lt;p&gt;Chris Titus Tech&#39;s Windows Utility - Install Programs, Tweaks, Fixes, and Updates&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chris Titus Tech&#39;s Windows Utility&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ChrisTitusTech/winutil/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/ChrisTitusTech/winutil?color=%230567ff&amp;amp;label=Latest%20Release&amp;amp;style=for-the-badge&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/ChrisTitusTech/winutil/winutil.ps1?label=Total%20Downloads&amp;amp;style=for-the-badge&quot; alt=&quot;GitHub Downloads (specific asset, all releases)&quot;&gt; &lt;a href=&quot;https://discord.gg/RUbZUZyByQ&quot;&gt;&lt;img src=&quot;https://dcbadge.limes.pink/api/server/https://discord.gg/RUbZUZyByQ?theme=default-inverted&amp;amp;style=for-the-badge&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This utility is a compilation of Windows tasks I perform on each Windows system I use. It is meant to streamline &lt;em&gt;installs&lt;/em&gt;, debloat with &lt;em&gt;tweaks&lt;/em&gt;, troubleshoot with &lt;em&gt;config&lt;/em&gt;, and fix Windows &lt;em&gt;updates&lt;/em&gt;. I am extremely picky about any contributions to keep this project clean and efficient.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ChrisTitusTech/winutil/main/docs/assets/Title-Screen.png&quot; alt=&quot;screen-install&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;💡 Usage&lt;/h2&gt; 
&lt;p&gt;Winutil must be run in Admin mode because it performs system-wide tweaks. To achieve this, run PowerShell as an administrator. Here are a few ways to do it:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start menu Method:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Right-click on the start menu.&lt;/li&gt; 
   &lt;li&gt;Choose &quot;Windows PowerShell (Admin)&quot; (for Windows 10) or &quot;Terminal (Admin)&quot; (for Windows 11).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Search and Launch Method:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Press the Windows key.&lt;/li&gt; 
   &lt;li&gt;Type &quot;PowerShell&quot; or &quot;Terminal&quot; (for Windows 11).&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;Ctrl + Shift + Enter&lt;/code&gt; or Right-click and choose &quot;Run as administrator&quot; to launch it with administrator privileges.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Launch Command&lt;/h3&gt; 
&lt;h4&gt;Stable Branch (Recommended)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;irm &quot;https://christitus.com/win&quot; | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Dev Branch&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;irm &quot;https://christitus.com/windev&quot; | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have Issues, refer to &lt;a href=&quot;https://christitustech.github.io/winutil/KnownIssues/&quot;&gt;Known Issues&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🎓 Documentation&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://christitustech.github.io/winutil/&quot;&gt;WinUtil Official Documentation&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6UQZ5oQg8XA&quot;&gt;YouTube Tutorial&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;a href=&quot;https://christitus.com/windows-tool/&quot;&gt;ChrisTitus.com Article&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;💖 Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To morally and mentally support the project, make sure to leave a ⭐️!&lt;/li&gt; 
 &lt;li&gt;EXE Wrapper for $10 @ &lt;a href=&quot;https://www.cttstore.com/windows-toolbox&quot;&gt;https://www.cttstore.com/windows-toolbox&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💖 Sponsors&lt;/h2&gt; 
&lt;p&gt;These are the sponsors that help keep this project alive with monthly contributions.&lt;/p&gt; 
&lt;!-- sponsors --&gt;
&lt;a href=&quot;https://github.com/TriHydera&quot;&gt;&lt;img src=&quot;https://github.com/TriHydera.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: TriHydera&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jozozovko&quot;&gt;&lt;img src=&quot;https://github.com/jozozovko.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/DelDongo&quot;&gt;&lt;img src=&quot;https://github.com/DelDongo.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/markamos&quot;&gt;&lt;img src=&quot;https://github.com/markamos.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Mark Amos&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/dwelfusius&quot;&gt;&lt;img src=&quot;https://github.com/dwelfusius.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/mews-se&quot;&gt;&lt;img src=&quot;https://github.com/mews-se.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Martin Stockzell&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jdiegmueller&quot;&gt;&lt;img src=&quot;https://github.com/jdiegmueller.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Jason A. Diegmueller&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/altugtekiner&quot;&gt;&lt;img src=&quot;https://github.com/altugtekiner.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/robertsandrock&quot;&gt;&lt;img src=&quot;https://github.com/robertsandrock.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: RMS&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/KenichiQaz&quot;&gt;&lt;img src=&quot;https://github.com/KenichiQaz.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Stefan&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/paulsheets&quot;&gt;&lt;img src=&quot;https://github.com/paulsheets.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Paul&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/djones369&quot;&gt;&lt;img src=&quot;https://github.com/djones369.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Dave Jones&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/anthonymendez&quot;&gt;&lt;img src=&quot;https://github.com/anthonymendez.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Anthony Mendez&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/claudemods&quot;&gt;&lt;img src=&quot;https://github.com/claudemods.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: claudemods&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/FatBastard0&quot;&gt;&lt;img src=&quot;https://github.com/FatBastard0.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Ascent7910&quot;&gt;&lt;img src=&quot;https://github.com/Ascent7910.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Max&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/DursleyGuy&quot;&gt;&lt;img src=&quot;https://github.com/DursleyGuy.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: DursleyGuy&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/realmuddy&quot;&gt;&lt;img src=&quot;https://github.com/realmuddy.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Phillip Waters&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/quaszi&quot;&gt;&lt;img src=&quot;https://github.com/quaszi.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/DwayneTheRockLobster1&quot;&gt;&lt;img src=&quot;https://github.com/DwayneTheRockLobster1.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/KieraKujisawa&quot;&gt;&lt;img src=&quot;https://github.com/KieraKujisawa.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Kiera Meredith&quot;&gt;&lt;/a&gt;
&lt;!-- sponsors --&gt; 
&lt;h2&gt;🏅 Thanks to all Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks a lot for spending your time helping Winutil grow. Thanks a lot! Keep rocking 🍻.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ChrisTitusTech/winutil/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=ChrisTitusTech/winutil&quot; alt=&quot;Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📊 GitHub Stats&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://repobeats.axiom.co/api/embed/aad37eec9114c507f109d34ff8d38a59adc9503f.svg?sanitize=true&quot; alt=&quot;Alt&quot; title=&quot;Repobeats analytics image&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Romanitho/Winget-AutoUpdate</title>
      <link>https://github.com/Romanitho/Winget-AutoUpdate</link>
      <description>&lt;p&gt;WAU daily updates apps as system and notify connected users. (Allowlist and Blocklist support)&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;p&gt;&lt;img src=&quot;https://github.com/Romanitho/Winget-AutoUpdate/assets/96626929/0e738c7a-cbe4-4010-94f6-1e9165bc0d49&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Romanitho/Winget-AutoUpdate/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/Romanitho/Winget-AutoUpdate?label=Latest%20Stable%20Release&amp;amp;style=for-the-badge&quot; alt=&quot;GitHub release (latest SemVer)&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/h1&gt; 
&lt;p&gt;This project uses the Winget tool to daily update apps (with system context) and notify users when updates are available and installed.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/96626929/150645599-9460def4-0818-4fe9-819c-dd7081ff8447.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Just download latest release &lt;a href=&quot;https://github.com/Romanitho/Winget-AutoUpdate/releases/latest&quot;&gt;WAU.msi&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/e6b090ff-9c40-46e1-a04b-9b7437f3e2e7&quot; alt=&quot;image&quot;&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/2e4af91b-e319-401b-99cd-3c199e21016b&quot; alt=&quot;image&quot;&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/1b70d77c-4220-4b62-bded-eb1e890e7485&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Use winget to install WAU&lt;/h3&gt; 
&lt;p&gt;The following command will install WAU through winget itself in the newest version available.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-batch&quot;&gt;winget install Romanitho.Winget-AutoUpdate
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configurations&lt;/h2&gt; 
&lt;h3&gt;Keep some apps out of Winget-AutoUpdate&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;BlockList&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can exclude apps from update job (for instance, apps you want to keep at a specific version or apps with built-in auto-update): Add (or remove) the apps&#39; ID you want to disable autoupdate to &#39;excluded_apps.txt&#39;. (File must be placed in the same folder as WAU.msi).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;AllowList&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can update only pre-selected apps. To do so, create an &quot;included_apps.txt&quot; with the apps&#39; ID of the apps you want to auto-update and place it in the same folder as WAU.msi during install.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The lists can contain Wildcard (*). For instance &lt;code&gt;Mozilla.Firefox*&lt;/code&gt; will take care of all Firefox channels.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;List and Mods folder content will be copied to WAU install location:&lt;br&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/a37837b0-b61e-4ce7-b23c-fd8661585e40&quot; alt=&quot;explorer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Notification Level&lt;/h3&gt; 
&lt;p&gt;You can choose which notification will be displayed: &lt;code&gt;Full&lt;/code&gt;, &lt;code&gt;Success only&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Notification language&lt;/h3&gt; 
&lt;p&gt;You can easily translate toast notifications by creating your locale xml config file (and share it with us :) ).&lt;/p&gt; 
&lt;h3&gt;When does the script run?&lt;/h3&gt; 
&lt;p&gt;WAU runs ,by default, at logon. You can configure the frequency with options (Daily, BiDaily, Weekly, BiWeekly, Monthly or Never).&lt;/p&gt; 
&lt;h3&gt;Log location&lt;/h3&gt; 
&lt;p&gt;You can find logs in install location, in logs folder for priviledged executions. For user runs (Winget-Install.ps1) a log file will be created at %AppData%\Winget-AutoUpdate\Logs .&lt;br&gt; If &lt;strong&gt;Intune Management Extension&lt;/strong&gt; is installed, a &lt;strong&gt;SymLink&lt;/strong&gt; (WAU-updates.log) is created under &lt;strong&gt;C:\ProgramData\Microsoft\IntuneManagementExtension\Logs&lt;/strong&gt;&lt;br&gt; If you are deploying winget Apps with &lt;a href=&quot;https://github.com/Romanitho/Winget-AutoUpdate/raw/main/Sources/Winget-AutoUpdate/Winget-Install.ps1&quot;&gt;Winget-Install&lt;/a&gt; a &lt;strong&gt;SymLink&lt;/strong&gt; (WAU-install.log &amp;amp; WAU-user_%username%.log) is also created under &lt;strong&gt;C:\ProgramData\Microsoft\IntuneManagementExtension\Logs&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&quot;Unknown&quot; App version&lt;/h3&gt; 
&lt;p&gt;As explained in this &lt;a href=&quot;https://github.com/microsoft/winget-cli/issues/1255&quot;&gt;post&lt;/a&gt;, Winget cannot detect the current version of some installed apps. We decided to skip managing these apps with WAU to avoid retries each time WAU runs:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/96626929/155092000-c774979d-2db7-4dc6-8b7c-bd11c7643950.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Eventually, try to reinstall or update app manually to see if new version is detected.&lt;/p&gt; 
&lt;h3&gt;Handle metered connections&lt;/h3&gt; 
&lt;p&gt;We might want to stop WAU on metered connection (to save cellular data on connection sharing for instance). The default behavior will detect and stop WAU on limited connections (only for fresh install).&lt;/p&gt; 
&lt;p&gt;To force WAU to run on metered connections anyway, run new installation with &lt;code&gt;-RunOnMetered&lt;/code&gt; parameter.&lt;/p&gt; 
&lt;h3&gt;System &amp;amp; user context&lt;/h3&gt; 
&lt;p&gt;WAU runs with system and user contexts. This way, even apps installed on User&#39;s scope are updated. Shorcuts for manually run can also be installed.&lt;/p&gt; 
&lt;h3&gt;Default install location&lt;/h3&gt; 
&lt;p&gt;By default, scripts and components will be placed in &quot;Program Files&quot; location (inside a Winget-AutoUpdate folder).&lt;/p&gt; 
&lt;h2&gt;Update WAU&lt;/h2&gt; 
&lt;h3&gt;Manual Update&lt;/h3&gt; 
&lt;p&gt;Same process as new installation.&lt;/p&gt; 
&lt;h3&gt;Automatic Update&lt;/h3&gt; 
&lt;p&gt;By default, WAU AutoUpdate is enabled. It will not overwrite the configurations, excluded_apps list,...&lt;/p&gt; 
&lt;h2&gt;Advanced installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Mainly for admins or advanced user installation.&lt;/strong&gt;&lt;br&gt; You can run the &lt;code&gt;WAU.msi&lt;/code&gt; script with parameters :&lt;/p&gt; 
&lt;h3&gt;/qn&lt;/h3&gt; 
&lt;p&gt;Install Winget-AutoUpdate and prerequisites silently.&lt;/p&gt; 
&lt;h3&gt;RUN_WAU&lt;/h3&gt; 
&lt;p&gt;Default value NO. Set &lt;code&gt;RUN_WAU=YES&lt;/code&gt; to run WAU just after installation.&lt;/p&gt; 
&lt;h3&gt;DISABLEWAUAUTOUPDATE&lt;/h3&gt; 
&lt;p&gt;Default value 0. Set &lt;code&gt;DISABLEWAUAUTOUPDATE=1&lt;/code&gt; to disable Winget-AutoUpdate self update checking. By default, WAU auto updates if new version is available on Github.&lt;/p&gt; 
&lt;h3&gt;USEWHITELIST&lt;/h3&gt; 
&lt;p&gt;Set &lt;code&gt;USEWHITELIST=1&lt;/code&gt; to force WAU to use WhiteList. During installation, if a whitelist is provided, this setting is automatically set to 1.&lt;/p&gt; 
&lt;h3&gt;LISTPATH&lt;/h3&gt; 
&lt;p&gt;Get Black/White List from external Path (&lt;strong&gt;URL/UNC/Local/GPO&lt;/strong&gt;) - download/copy to Winget-AutoUpdate installation location if external list is newer.&lt;br&gt; &lt;strong&gt;PATH&lt;/strong&gt; must end with a Directory, not a File...&lt;br&gt; ...if the external Path is an &lt;strong&gt;URL&lt;/strong&gt; and the web host doesn&#39;t respond with a date/time header for the file (i.e &lt;strong&gt;GitHub&lt;/strong&gt;) then the file is always downloaded!&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;If the external Path is a Private Azure Container protected by a SAS token (&lt;strong&gt;resourceURI?sasToken&lt;/strong&gt;), every special character should be escaped at installation time.&lt;br&gt; It doesn&#39;t work to call Powershell in &lt;strong&gt;CMD&lt;/strong&gt; to install &lt;strong&gt;WAU&lt;/strong&gt; with the parameter:&lt;br&gt; &lt;code&gt;-ListPath https://storagesample.blob.core.windows.net/sample-container?v=2023-11-31&amp;amp;sr=b&amp;amp;sig=39Up9jzHkxhUIhFEjEh9594DIxe6cIRCgOVOICGSP%3A377&amp;amp;sp=rcw&lt;/code&gt;&lt;br&gt; Instead you must escape &lt;strong&gt;every&lt;/strong&gt; special character (notice the &lt;code&gt;%&lt;/code&gt; escape too) like:&lt;br&gt; &lt;code&gt;-ListPath https://storagesample.blob.core.windows.net/sample-container^?v=2023-11-31^&amp;amp;sr=b^&amp;amp;sig=39Up9jzHkxhUIhFEjEh9594DIxe6cIRCgOVOICGSP%%3A377^&amp;amp;sp=rcw&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;-ListPath&lt;/code&gt; is set to &lt;strong&gt;GPO&lt;/strong&gt; the Black/White List can be managed from within the GPO itself under &lt;strong&gt;Application GPO Blacklist&lt;/strong&gt;/&lt;strong&gt;Application GPO Whitelist&lt;/strong&gt;. Thanks to &lt;a href=&quot;https://github.com/Weatherlights&quot;&gt;Weatherlights&lt;/a&gt; in &lt;a href=&quot;https://github.com/Romanitho/Winget-AutoUpdate/discussions/256#discussioncomment-4710599&quot;&gt;#256 (reply in thread)&lt;/a&gt;!&lt;/p&gt; 
&lt;h3&gt;MODSPATH&lt;/h3&gt; 
&lt;p&gt;Get Mods from external Path (&lt;strong&gt;URL/UNC/Local/AzureBlob&lt;/strong&gt;) - download/copy to &lt;code&gt;mods&lt;/code&gt; in Winget-AutoUpdate installation location if external mods are newer.&lt;br&gt; For &lt;strong&gt;URL&lt;/strong&gt;: This requires a site directory with &lt;strong&gt;Directory Listing Enabled&lt;/strong&gt; and no index page overriding the listing of files (or an index page with href listing of all the &lt;strong&gt;Mods&lt;/strong&gt; to be downloaded):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;a  href=&quot;Adobe.Acrobat.Reader.32-bit-installed.ps1&quot;&amp;gt;Adobe.Acrobat.Reader.32-bit-installed.ps1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;a  href=&quot;Adobe.Acrobat.Reader.64-bit-override.txt&quot;&amp;gt;Adobe.Acrobat.Reader.64-bit-override.txt&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;a  href=&quot;Notepad++.Notepad++-installed.ps1&quot;&amp;gt;Notepad++.Notepad++-installed.ps1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;a  href=&quot;Notepad++.Notepad++-uninstalled.ps1&quot;&amp;gt;Notepad++.Notepad++-uninstalled.ps1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Validated on &lt;strong&gt;IIS/Apache&lt;/strong&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Nota bene IIS&lt;/strong&gt; :&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The extension &lt;strong&gt;.ps1&lt;/strong&gt; must be added as &lt;strong&gt;MIME Types&lt;/strong&gt; (text/powershell-script) otherwise it&#39;s displayed in the listing but can&#39;t be opened&lt;/li&gt; 
  &lt;li&gt;Files with special characters in the filename can&#39;t be opened by default from an IIS server - config must be administrated: &lt;strong&gt;Enable Allow double escaping&lt;/strong&gt; in &#39;&lt;strong&gt;Request Filtering&lt;/strong&gt;&#39;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For &lt;strong&gt;AzureBlob&lt;/strong&gt;: This requires the parameter &lt;strong&gt;-AzureBlobURL&lt;/strong&gt; to be set with an appropriate Azure Blob Storage URL including the SAS token. See &lt;strong&gt;-AzureBlobURL&lt;/strong&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;AZUREBLOBURL&lt;/h3&gt; 
&lt;p&gt;Used in conjunction with the &lt;strong&gt;-ModsPath&lt;/strong&gt; parameter to provide the Azure Storage Blob URL with SAS token. The SAS token must, at a minimum, have &#39;Read&#39; and &#39;List&#39; permissions. It is recommended to set the permisions at the container level and rotate the SAS token on a regular basis. Ensure the container reflects the same structure as found under the initial &lt;code&gt;mods&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h3&gt;USERCONTEXT&lt;/h3&gt; 
&lt;p&gt;Default value 0. Set &lt;code&gt;USERCONTEXT=1&lt;/code&gt; to install WAU with system and &lt;strong&gt;user&lt;/strong&gt; context executions.&lt;br&gt; Applications installed in system context will be ignored under user context.&lt;/p&gt; 
&lt;h3&gt;BYPASSLISTFORUSERS&lt;/h3&gt; 
&lt;p&gt;Default value 0. Set &lt;code&gt;BYPASSLISTFORUSERS=1&lt;/code&gt; to bypass Black/White list when run in user context.&lt;/p&gt; 
&lt;h3&gt;DESKTOPSHORTCUT&lt;/h3&gt; 
&lt;p&gt;Set &lt;code&gt;DESKTOPSHORTCUT=1&lt;/code&gt; to create a shortcut for user interaction on the Desktop to run task &lt;code&gt;Winget-AutoUpdate&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;STARTMENUSHORTCUT&lt;/h3&gt; 
&lt;p&gt;Set &lt;code&gt;STARTMENUSHORTCUT=1&lt;/code&gt; to create shortcuts for user interaction in the Start Menu to run task &lt;code&gt;Winget-AutoUpdate&lt;/code&gt; and open Logs.&lt;/p&gt; 
&lt;h3&gt;NOTIFICATIONLEVEL&lt;/h3&gt; 
&lt;p&gt;Specify the Notification level: Full (Default, displays all notification), SuccessOnly (Only displays notification for success) or None (Does not show any popup).&lt;/p&gt; 
&lt;h3&gt;UPDATESATLOGON&lt;/h3&gt; 
&lt;p&gt;Default value 1. Set &lt;code&gt;UPDATESATLOGON=0&lt;/code&gt; to disable WAU from running at user logon.&lt;/p&gt; 
&lt;h3&gt;UPDATESINTERVAL&lt;/h3&gt; 
&lt;p&gt;Default value Never. Specify the update frequency: Daily, BiDaily, Weekly, BiWeekly, Monthly or Never.&lt;/p&gt; 
&lt;h3&gt;UPDATESATTIME&lt;/h3&gt; 
&lt;p&gt;Default value 6AM (06:00:00). Specify the time of the update interval execution time. Example &lt;code&gt;UPDATESATTIME=&quot;11:00:00&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;DONOTRUNONMETERED&lt;/h3&gt; 
&lt;p&gt;Default value 1. Set &lt;code&gt;DONOTRUNONMETERED=0&lt;/code&gt; to force WAU to run on metered connections. May add cellular data costs on shared connexion from smartphone for example.&lt;/p&gt; 
&lt;h3&gt;MAXLOGFILES&lt;/h3&gt; 
&lt;p&gt;Specify number of allowed log files.&lt;br&gt; Default is 3 out of 0-99:&lt;br&gt; Setting MaxLogFiles to 0 don&#39;t delete any old archived log files.&lt;br&gt; Setting it to 1 keeps the original one and just let it grow.&lt;/p&gt; 
&lt;h3&gt;MAXLOGSIZE&lt;/h3&gt; 
&lt;p&gt;Specify the size of the log file in bytes before rotating.&lt;br&gt; Default is 1048576 = 1 MB (ca. 7500 lines)&lt;/p&gt; 
&lt;h3&gt;INSTALLDIR&lt;/h3&gt; 
&lt;p&gt;Specify Winget-AutoUpdate installation location. Default: &lt;code&gt;C:\Program Files\Winget-AutoUpdate&lt;/code&gt; (Recommended to leave default).&lt;/p&gt; 
&lt;h3&gt;Deploy with Intune&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://github.com/Romanitho/Winget-AutoUpdate/raw/main/Sources/Winget-AutoUpdate/Winget-Install.ps1&quot;&gt;Winget-Install&lt;/a&gt; to deploy the package for example in Intune:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-batch&quot;&gt;&quot;%systemroot%\sysnative\WindowsPowerShell\v1.0\powershell.exe&quot; -noprofile -executionpolicy bypass -file &quot;C:\Program Files\Winget-AutoUpdate\Winget-Install.ps1&quot; -AppIDs &quot;Romanitho.Winget-AutoUpdate --scope machine --override \&quot;/qn RUN_WAU=YES USERCONTEXT=1 STARTMENUSHORTCUT=1 NOTIFICATIONLEVEL=SuccessOnly UPDATESINTERVAL=Daily&quot;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Custom script (Mods for WAU)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Mods for WAU&lt;/strong&gt; allows you to craft a script to do whatever you like via &lt;code&gt;_WAU-mods.ps1&lt;/code&gt; in the &lt;strong&gt;mods&lt;/strong&gt; folder.&lt;br&gt; This script executes &lt;strong&gt;if the network is active/any version of Winget is installed/WAU is running as SYSTEM&lt;/strong&gt;.&lt;br&gt; If &lt;strong&gt;ExitCode&lt;/strong&gt; is &lt;strong&gt;1&lt;/strong&gt; from &lt;code&gt;_WAU-mods.ps1&lt;/code&gt; then &lt;strong&gt;Re-run WAU&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Custom scripts (Mods feature for Apps)&lt;/h2&gt; 
&lt;p&gt;The Mods feature allows you to run additional scripts when upgrading or installing an app. Just put the scripts in question with the &lt;strong&gt;AppID&lt;/strong&gt; followed by the &lt;code&gt;-preinstall&lt;/code&gt;, &lt;code&gt;-upgrade&lt;/code&gt;, &lt;code&gt;-install&lt;/code&gt;, &lt;code&gt;-installed&lt;/code&gt; or &lt;code&gt;-notinstalled&lt;/code&gt; suffix in the &lt;strong&gt;mods&lt;/strong&gt; folder.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Runs before upgrade/install: &lt;code&gt;AppID-preinstall.ps1&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Runs during upgrade/install (before install check): &lt;code&gt;AppID-upgrade.ps1&lt;/code&gt;/&lt;code&gt;AppID-install.ps1&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Runs after upgrade/install has been confirmed: &lt;code&gt;AppID-installed.ps1&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Runs after a failed upgrade/install: &lt;code&gt;AppID-notinstalled.ps1&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Runs after a failed upgrade/install: &lt;code&gt;_WAU-notinstalled.ps1&lt;/code&gt; (any individual &lt;code&gt;AppID-notinstalled.ps1&lt;/code&gt; overrides this global one)&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The &lt;strong&gt;-install&lt;/strong&gt; mod will be used for upgrades too if &lt;strong&gt;-upgrade&lt;/strong&gt; doesn&#39;t exist (&lt;strong&gt;WAU&lt;/strong&gt; first tries &lt;code&gt;&amp;amp; $Winget upgrade --id&lt;/code&gt; and if the app isn&#39;t detected after that &lt;code&gt;&amp;amp; $Winget install --id&lt;/code&gt; is tried).&lt;br&gt; &lt;code&gt;AppID-install.ps1&lt;/code&gt; is recommended because it&#39;s used in &lt;strong&gt;both&lt;/strong&gt; scenarios.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Example:&lt;br&gt; If you want to run a script that removes the shortcut from &lt;strong&gt;%PUBLIC%\Desktop&lt;/strong&gt; (we don&#39;t want to fill the desktop with shortcuts our users can&#39;t delete) just after installing &lt;strong&gt;Acrobat Reader DC&lt;/strong&gt; (32-bit), prepare a powershell script that removes the Public Desktop shortcut &lt;strong&gt;Acrobat Reader DC.lnk&lt;/strong&gt; and name your script like this: &lt;code&gt;Adobe.Acrobat.Reader.32-bit-installed.ps1&lt;/code&gt; and put it in the &lt;strong&gt;mods&lt;/strong&gt; folder.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can find more information on &lt;a href=&quot;https://github.com/Romanitho/Winget-AutoUpdate?tab=readme-ov-file#custom-script-mods-for-wau&quot;&gt;Winget-Install Repo&lt;/a&gt;, as it&#39;s a related feature.&lt;br&gt; Read more in the &lt;code&gt;README.md&lt;/code&gt; under the directory &lt;strong&gt;mods&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Share your mods with the community:&lt;br&gt; &lt;a href=&quot;https://github.com/Romanitho/Winget-AutoUpdate/discussions/categories/mods&quot;&gt;https://github.com/Romanitho/Winget-AutoUpdate/discussions/categories/mods&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Winget native parameters&lt;/h3&gt; 
&lt;p&gt;Another finess is the &lt;strong&gt;AppID&lt;/strong&gt; followed by the &lt;code&gt;-override&lt;/code&gt; suffix as a &lt;strong&gt;text file&lt;/strong&gt; (.&lt;strong&gt;txt&lt;/strong&gt;) that you can place under the &lt;strong&gt;mods&lt;/strong&gt; folder.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Example:&lt;br&gt; &lt;strong&gt;Canneverbe.CDBurnerXP-override.txt&lt;/strong&gt; with the content &lt;code&gt;ADDLOCAL=All REMOVE=Desktop_Shortcut /qn&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This will use the &lt;strong&gt;content&lt;/strong&gt; of the text file as a native &lt;strong&gt;winget --override&lt;/strong&gt; parameter when upgrading (as proposed by &lt;a href=&quot;https://github.com/JonNesovic&quot;&gt;JonNesovic&lt;/a&gt; in &lt;a href=&quot;https://github.com/Romanitho/Winget-AutoUpdate/discussions/244#discussion-4637666&quot;&gt;Mod for --override argument #244&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;GPO Management&lt;/h2&gt; 
&lt;p&gt;In an enterprise environment it&#39;s crucial that different groups can have different settings in applications etc. or to implement other mandatory settings, i.e for security/management reasons.&lt;br&gt; &lt;strong&gt;WAU&lt;/strong&gt; doesn&#39;t have any setting that can be changed except for when installing (or editing the registry/the task &lt;code&gt;Winget-AutoUpdate&lt;/code&gt; as &lt;strong&gt;Admin&lt;/strong&gt;).&lt;br&gt; With the use of &lt;strong&gt;ADML/ADMX&lt;/strong&gt; files you can manage every &lt;strong&gt;WAU&lt;/strong&gt; setting from within &lt;strong&gt;GPO&lt;/strong&gt;.&lt;br&gt; They will be detected/evaluated on a daily basis.&lt;br&gt; The &lt;strong&gt;GPO ADMX/ADML&lt;/strong&gt; validated with: &lt;a href=&quot;https://web.archive.org/web/20231108145017/https://developer.vmware.com/samples/7115/windows-10---validate-admx-for-ingestion&quot;&gt;Windows 10 - Validate ADMX for Ingestion&lt;/a&gt;&lt;br&gt; Read more in the &lt;code&gt;README.md&lt;/code&gt; under the directory &lt;strong&gt;Policies&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/102996177/213920242-7ff8e2b4-d926-4407-b860-1e5922e29c3e.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Known issues&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;As reported by &lt;a href=&quot;https://github.com/soredake&quot;&gt;soredake&lt;/a&gt;, Powershell from MsStore is not supported with WAU in system context. See &lt;a href=&quot;https://github.com/Romanitho/Winget-AutoUpdate/issues/113&quot;&gt;https://github.com/Romanitho/Winget-AutoUpdate/issues/113&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Optimization&lt;/h2&gt; 
&lt;p&gt;Feel free to give us any suggestions or optimizations in code and support us by adding a star :)&lt;/p&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h3&gt;WAU - GitHub&lt;/h3&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/Romanitho/Winget-AutoUpdate/releases/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/Romanitho/Winget-AutoUpdate?display_name=release&amp;amp;include_prereleases&amp;amp;label=Latest%20Release&amp;amp;style=flat-square&quot; alt=&quot;GitHub release (release name instead of tag name)&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
