<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Shell Daily Trending</title>
    <description>Daily Trending of Shell in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 01:37:37 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>youngyangyang04/leetcode-master</title>
      <link>https://github.com/youngyangyang04/leetcode-master</link>
      <description>&lt;p&gt;《代码随想录》LeetCode 刷题攻略：200道经典题目刷题顺序，共60w字的详细图解，视频难点剖析，50余张思维导图，支持C++，Java，Python，Go，JavaScript等多语言版本，从此算法学习不再迷茫！🔥🔥 来看看，你会发现相见恨晚！🚀&lt;/p&gt;&lt;hr&gt;&lt;p&gt;👉 推荐 &lt;a href=&quot;http://programmercarl.com/&quot;&gt;在线阅读&lt;/a&gt; (Github在国内访问经常不稳定)&lt;br&gt; 👉 推荐 &lt;a href=&quot;https://gitee.com/programmercarl/leetcode-master&quot;&gt;Gitee同步&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;介绍&lt;/strong&gt; ：本项目是一套完整的刷题计划，旨在帮助大家少走弯路，循序渐进学算法，&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/#%E5%85%B3%E4%BA%8E%E4%BD%9C%E8%80%85&quot;&gt;关注作者&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;正式出版&lt;/strong&gt; ：&lt;a href=&quot;https://programmercarl.com/qita/publish.html&quot;&gt;《代码随想录》&lt;/a&gt; 。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;PDF版本&lt;/strong&gt; ：&lt;a href=&quot;https://programmercarl.com/qita/algo_pdf.html&quot;&gt;「代码随想录」算法精讲 PDF 版本&lt;/a&gt; 。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;算法公开课&lt;/strong&gt; ：&lt;a href=&quot;https://www.bilibili.com/video/BV1fA4y1o715&quot;&gt;《代码随想录》算法视频公开课&lt;/a&gt; 。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;最强八股文&lt;/strong&gt; ：&lt;a href=&quot;https://www.programmercarl.com/other/kstar_baguwen.html&quot;&gt;代码随想录知识星球精华PDF&lt;/a&gt; 。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;刷题顺序&lt;/strong&gt; ：README已经将刷题顺序排好了，按照顺序一道一道刷就可以。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;学习社区&lt;/strong&gt; ：一起学习打卡/面试技巧/如何选择offer/大厂内推/职场规则/简历修改/技术分享/程序人生。欢迎加入&lt;a href=&quot;https://programmercarl.com/other/kstar.html&quot;&gt;「代码随想录」知识星球&lt;/a&gt; 。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;提交代码&lt;/strong&gt; ：本项目统一使用C++语言进行讲解，但已经有Java、Python、Go、JavaScript等等多语言版本，感谢&lt;a href=&quot;https://github.com/youngyangyang04/leetcode-master/graphs/contributors&quot;&gt;这里的每一位贡献者&lt;/a&gt;，如果你也想贡献代码点亮你的头像，&lt;a href=&quot;https://www.programmercarl.com/qita/join.html&quot;&gt;点击这里&lt;/a&gt;了解提交代码的方式。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;转载须知&lt;/strong&gt; ：以下所有文章皆为我（&lt;a href=&quot;https://github.com/youngyangyang04&quot;&gt;程序员Carl&lt;/a&gt;）的原创。引用本项目文章请注明出处，发现恶意抄袭或搬运，会动用法律武器维护自己的权益。让我们一起维护一个良好的技术创作环境！&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://programmercarl.com/xunlian/xunlianying.html&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/pics/%E8%AE%AD%E7%BB%83%E8%90%A5.png&quot; width=&quot;800&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;LeetCode 刷题攻略&lt;/h1&gt; 
&lt;h2&gt;刷题攻略的背景&lt;/h2&gt; 
&lt;p&gt;很多刚开始刷题的同学都有一个困惑：面对leetcode上近两千道题目，从何刷起。&lt;/p&gt; 
&lt;p&gt;大家平时刷题感觉效率低，浪费的时间主要在三点：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;找题&lt;/li&gt; 
 &lt;li&gt;找到了不应该现阶段做的题&lt;/li&gt; 
 &lt;li&gt;没有全套的优质题解可以参考&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;其实我之前在知乎上回答过这个问题，回答内容大概是按照如下类型来刷数组-&amp;gt; 链表-&amp;gt; 哈希表-&amp;gt;字符串-&amp;gt;栈与队列-&amp;gt;树-&amp;gt;回溯-&amp;gt;贪心-&amp;gt;动态规划-&amp;gt;图论-&amp;gt;高级数据结构，再从简单刷起，做了几个类型题目之后，再慢慢做中等题目、困难题目。&lt;/p&gt; 
&lt;p&gt;但我能设身处地的感受到：即使有这样一个整体规划，对于一位初学者甚至算法老手寻找合适自己的题目也是很困难，时间成本很高，而且题目还不一定就是经典题目。&lt;/p&gt; 
&lt;p&gt;对于刷题，我们都是想用最短的时间&lt;strong&gt;按照循序渐进的难度顺序把经典题目都做一遍&lt;/strong&gt;，这样效率才是最高的！&lt;/p&gt; 
&lt;p&gt;所以我整理了leetcode刷题攻略：一个超级详细的刷题顺序，&lt;strong&gt;每道题目都是我精心筛选，都是经典题目高频面试题&lt;/strong&gt;，大家只要按照这个顺序刷就可以了，&lt;strong&gt;你没看错，README已经把题目顺序都排好了，文章顺序就是刷题顺序！挨个刷就可以，不用自己再去题海里选题了！&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;而且每道题目我都写了的详细题解（图文并茂，难点配有视频），力扣上我的题解都是排在对应题目的首页，质量是有目共睹的。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;那么现在我把刷题顺序都整理出来，是为了帮助更多的学习算法的同学少走弯路！&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;如果你在刷leetcode，强烈建议先按照本攻略刷题顺序来刷，刷完了你会发现对整个知识体系有一个质的飞跃，不用在题海茫然的寻找方向。&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt;
 &lt;strong&gt;最新文章会首发在公众号「代码随想录」，扫码看看吧，你会发现相见恨晚！&lt;/strong&gt;
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt;
 &lt;img src=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/pics/%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BA%8C%E7%BB%B4%E7%A0%81.jpg&quot; width=&quot;150&quot; alt=&quot;&quot;&gt; 
&lt;/div&gt; 
&lt;h2&gt;如何使用该刷题攻略&lt;/h2&gt; 
&lt;p&gt;按照先面的排列顺序，从数组开始刷起就可以了，顺序都安排好了，按顺序刷就好。&lt;/p&gt; 
&lt;p&gt;在刷题攻略中，每个专题开始都有理论基础篇，并不像是教科书般的理论介绍，而是从实战中归纳需要的基础知识。每个专题结束都有总结篇，最这个专题的归纳总结。&lt;/p&gt; 
&lt;p&gt;如果你是算法老手，这篇攻略也是复习的最佳资料，如果把每个系列对应的总结篇，快速过一遍，整个算法知识体系以及各种解法就重现脑海了。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;这里每一篇题解，都是精品，值得仔细琢磨&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;我在题目讲解中统一使用C++，但你会发现下面几乎每篇题解都配有其他语言版本，Java、Python、Go、JavaScript等等，正是这些&lt;a href=&quot;https://github.com/youngyangyang04/leetcode-master/graphs/contributors&quot;&gt;热心小伙们&lt;/a&gt;贡献的代码，当然我也会严格把控代码质量。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;所以也欢迎大家参与进来，完善题解的各个语言版本，拥抱开源，让更多小伙伴们受益&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;准备好了么，刷题攻略开始咯，go go go！&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;前序&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://programmercarl.com/other/kstar.html&quot;&gt;做项目（多个C++、Java、Go、前端、测开项目）&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;编程语言&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/youngyangyang04/TechCPP&quot;&gt;C++面试&amp;amp;C++学习指南知识点整理&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://kamacoder.com/courseshop.php&quot;&gt;编程语言基础课&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/youngyangyang04/kama-DesignPattern&quot;&gt;23种设计模式&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://kamacoder.com/company.php&quot;&gt;大厂算法笔试题&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;工具&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/youngyangyang04/PowerVim&quot;&gt;一站式vim配置&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Q_O0ey4C9tryPZaZeJocbA&quot;&gt;保姆级Git入门教程，万字详解&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%89%8D%E5%BA%8F/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%86%99%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7.md&quot;&gt;程序员应该用什么用具来写文档？&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;求职&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://kamacoder.com/&quot;&gt;ACM模式练习网站，卡码网&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%89%8D%E5%BA%8F/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%AE%80%E5%8E%86.md&quot;&gt;程序员的简历应该这么写！！（附简历模板）&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://programmercarl.com/other/jianlizhuanye.html&quot;&gt;【专业技能】应该这样写！&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://programmercarl.com/other/jianlixiangmu.html&quot;&gt;【项目经历】应该这样写！&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%89%8D%E5%BA%8F/BAT%E7%BA%A7%E5%88%AB%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E6%B5%81%E7%A8%8B%E5%92%8C%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E9%83%BD%E5%9C%A8%E8%BF%99%E9%87%8C%E4%BA%86.md&quot;&gt;BAT级别技术面试流程和注意事项都在这里了&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;算法性能分析&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%89%8D%E5%BA%8F/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6.md&quot;&gt;关于时间复杂度，你不知道的都在这里！&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%89%8D%E5%BA%8F/%E7%AE%97%E6%B3%95%E8%B6%85%E6%97%B6.md&quot;&gt;O(n)的算法居然超时了，此时的n究竟是多大？&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%89%8D%E5%BA%8F/%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6.md&quot;&gt;通过一道面试题目，讲一讲递归算法的时间复杂度！&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%89%8D%E5%BA%8F/%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6.md&quot;&gt;关于空间复杂度，可能有几个疑问？&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%89%8D%E5%BA%8F/%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E4%B8%8E%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90.md&quot;&gt;递归算法的时间与空间复杂度分析！&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%89%8D%E5%BA%8F/%E5%86%85%E5%AD%98%E6%B6%88%E8%80%97.md&quot;&gt;刷了这么多题，你了解自己代码的内存消耗么？&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;数组&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E6%95%B0%E7%BB%84%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.md&quot;&gt;数组过于简单，但你该了解这些！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0704.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.md&quot;&gt;数组：704.二分查找&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0027.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0.md&quot;&gt;数组：27.移除元素&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0977.%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9.md&quot;&gt;数组：977.有序数组的平方&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.md&quot;&gt;数组：209.长度最小的子数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0058.%E5%8C%BA%E9%97%B4%E5%92%8C.md&quot;&gt;数组：区间和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0044.%E5%BC%80%E5%8F%91%E5%95%86%E8%B4%AD%E4%B9%B0%E5%9C%9F%E5%9C%B0.md&quot;&gt;数组：开发商购买土地&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0059.%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5II.md&quot;&gt;数组：59.螺旋矩阵II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E6%95%B0%E7%BB%84%E6%80%BB%E7%BB%93%E7%AF%87.md&quot;&gt;数组：总结篇&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;链表&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E9%93%BE%E8%A1%A8%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.md&quot;&gt;关于链表，你该了解这些！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0203.%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0.md&quot;&gt;链表：203.移除链表元素&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0707.%E8%AE%BE%E8%AE%A1%E9%93%BE%E8%A1%A8.md&quot;&gt;链表：707.设计链表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0206.%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8.md&quot;&gt;链表：206.翻转链表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0024.%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9.md&quot;&gt;链表：24.两两交换链表中的节点&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0019.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACN%E4%B8%AA%E8%8A%82%E7%82%B9.md&quot;&gt;链表：19.删除链表的倒数第 N 个结点&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E9%9D%A2%E8%AF%95%E9%A2%9802.07.%E9%93%BE%E8%A1%A8%E7%9B%B8%E4%BA%A4.md&quot;&gt;链表：链表相交&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0142.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8II.md&quot;&gt;链表：142.环形链表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E9%93%BE%E8%A1%A8%E6%80%BB%E7%BB%93%E7%AF%87.md&quot;&gt;链表：总结篇！&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;哈希表&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%93%88%E5%B8%8C%E8%A1%A8%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.md&quot;&gt;关于哈希表，你该了解这些！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0242.%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D.md&quot;&gt;哈希表：242.有效的字母异位词&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/1002.%E6%9F%A5%E6%89%BE%E5%B8%B8%E7%94%A8%E5%AD%97%E7%AC%A6.md&quot;&gt;哈希表：1002.查找常用字符&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0349.%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86.md&quot;&gt;哈希表：349.两个数组的交集&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0202.%E5%BF%AB%E4%B9%90%E6%95%B0.md&quot;&gt;哈希表：202.快乐数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0001.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.md&quot;&gt;哈希表：1.两数之和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0454.%E5%9B%9B%E6%95%B0%E7%9B%B8%E5%8A%A0II.md&quot;&gt;哈希表：454.四数相加II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0383.%E8%B5%8E%E9%87%91%E4%BF%A1.md&quot;&gt;哈希表：383.赎金信&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0015.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C.md&quot;&gt;哈希表：15.三数之和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0018.%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C.md&quot;&gt;双指针法：18.四数之和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%93%88%E5%B8%8C%E8%A1%A8%E6%80%BB%E7%BB%93.md&quot;&gt;哈希表：总结篇！&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;字符串&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0344.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.md&quot;&gt;字符串：344.反转字符串&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0541.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2II.md&quot;&gt;字符串：541.反转字符串II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0054.%E6%9B%BF%E6%8D%A2%E6%95%B0%E5%AD%97.md&quot;&gt;字符串：替换数字&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0151.%E7%BF%BB%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8C%E7%9A%84%E5%8D%95%E8%AF%8D.md&quot;&gt;字符串：151.翻转字符串里的单词&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0055.%E5%8F%B3%E6%97%8B%E5%AD%97%E7%AC%A6%E4%B8%B2.md&quot;&gt;字符串：右旋字符串&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0028.%E5%AE%9E%E7%8E%B0strStr.md&quot;&gt;帮你把KMP算法学个通透&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0459.%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2.md&quot;&gt;字符串：459.重复的子字符串&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%80%BB%E7%BB%93.md&quot;&gt;字符串：总结篇！&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;双指针法&lt;/h2&gt; 
&lt;p&gt;双指针法基本都是应用在数组，字符串与链表的题目上&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0027.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0.md&quot;&gt;数组：27.移除元素&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0344.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.md&quot;&gt;字符串：344.反转字符串&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0054.%E6%9B%BF%E6%8D%A2%E6%95%B0%E5%AD%97.md&quot;&gt;字符串：替换数字&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0151.%E7%BF%BB%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8C%E7%9A%84%E5%8D%95%E8%AF%8D.md&quot;&gt;字符串：151.翻转字符串里的单词&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0206.%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8.md&quot;&gt;链表：206.翻转链表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0019.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACN%E4%B8%AA%E8%8A%82%E7%82%B9.md&quot;&gt;链表：19.删除链表的倒数第 N 个结点&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E9%9D%A2%E8%AF%95%E9%A2%9802.07.%E9%93%BE%E8%A1%A8%E7%9B%B8%E4%BA%A4.md&quot;&gt;链表：链表相交&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0142.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8II.md&quot;&gt;链表：142.环形链表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0015.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C.md&quot;&gt;双指针：15.三数之和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0018.%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C.md&quot;&gt;双指针：18.四数之和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%8F%8C%E6%8C%87%E9%92%88%E6%80%BB%E7%BB%93.md&quot;&gt;双指针：总结篇！&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;栈与队列&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.md&quot;&gt;栈与队列：理论基础&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0232.%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97.md&quot;&gt;栈与队列：232.用栈实现队列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0225.%E7%94%A8%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0%E6%A0%88.md&quot;&gt;栈与队列：225.用队列实现栈&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0020.%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7.md&quot;&gt;栈与队列：20.有效的括号&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/1047.%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E7%9B%B8%E9%82%BB%E9%87%8D%E5%A4%8D%E9%A1%B9.md&quot;&gt;栈与队列：1047.删除字符串中的所有相邻重复项&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0150.%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC.md&quot;&gt;栈与队列：150.逆波兰表达式求值&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0239.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC.md&quot;&gt;栈与队列：239.滑动窗口最大值&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0347.%E5%89%8DK%E4%B8%AA%E9%AB%98%E9%A2%91%E5%85%83%E7%B4%A0.md&quot;&gt;栈与队列：347.前K个高频元素&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97%E6%80%BB%E7%BB%93.md&quot;&gt;栈与队列：总结篇！&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;二叉树&lt;/h2&gt; 
&lt;p&gt;题目分类大纲如下：&lt;br&gt; &lt;img src=&quot;https://code-thinking-1253855093.file.myqcloud.com/pics/20240424172231.png&quot; width=&quot;600&quot; alt=&quot;二叉树大纲&quot;&gt; &lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.md&quot;&gt;关于二叉树，你该了解这些！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%80%92%E5%BD%92%E9%81%8D%E5%8E%86.md&quot;&gt;二叉树：二叉树的递归遍历&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%BF%AD%E4%BB%A3%E9%81%8D%E5%8E%86.md&quot;&gt;二叉树：二叉树的迭代遍历&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E7%BB%9F%E4%B8%80%E8%BF%AD%E4%BB%A3%E6%B3%95.md&quot;&gt;二叉树：二叉树的统一迭代法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0102.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86.md&quot;&gt;二叉树：二叉树的层序遍历&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0226.%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91.md&quot;&gt;二叉树：226.翻转二叉树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20200927%E4%BA%8C%E5%8F%89%E6%A0%91%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（二叉树）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0101.%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91.md&quot;&gt;二叉树：101.对称二叉树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0104.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.md&quot;&gt;二叉树：104.二叉树的最大深度&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0111.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6.md&quot;&gt;二叉树：111.二叉树的最小深度&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0222.%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0.md&quot;&gt;二叉树：222.完全二叉树的节点个数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0110.%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91.md&quot;&gt;二叉树：110.平衡二叉树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0257.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84.md&quot;&gt;二叉树：257.二叉树的所有路径&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20201003%E4%BA%8C%E5%8F%89%E6%A0%91%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周总结！（二叉树）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0404.%E5%B7%A6%E5%8F%B6%E5%AD%90%E4%B9%8B%E5%92%8C.md&quot;&gt;二叉树：404.左叶子之和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0513.%E6%89%BE%E6%A0%91%E5%B7%A6%E4%B8%8B%E8%A7%92%E7%9A%84%E5%80%BC.md&quot;&gt;二叉树：513.找树左下角的值&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0112.%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C.md&quot;&gt;二叉树：112.路径总和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0106.%E4%BB%8E%E4%B8%AD%E5%BA%8F%E4%B8%8E%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91.md&quot;&gt;二叉树：106.构造二叉树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0654.%E6%9C%80%E5%A4%A7%E4%BA%8C%E5%8F%89%E6%A0%91.md&quot;&gt;二叉树：654.最大二叉树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20201010%E4%BA%8C%E5%8F%89%E6%A0%91%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（二叉树）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0617.%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91.md&quot;&gt;二叉树：617.合并两个二叉树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0700.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E6%90%9C%E7%B4%A2.md&quot;&gt;二叉树：700.二叉搜索树登场！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0098.%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91.md&quot;&gt;二叉树：98.验证二叉搜索树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0530.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE.md&quot;&gt;二叉树：530.搜索树的最小绝对差&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0501.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E4%BC%97%E6%95%B0.md&quot;&gt;二叉树：501.二叉搜索树中的众数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0236.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.md&quot;&gt;二叉树：236.公共祖先问题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20201017%E4%BA%8C%E5%8F%89%E6%A0%91%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（二叉树）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0235.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.md&quot;&gt;二叉树：235.搜索树的最近公共祖先&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0701.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E6%8F%92%E5%85%A5%E6%93%8D%E4%BD%9C.md&quot;&gt;二叉树：701.搜索树中的插入操作&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0450.%E5%88%A0%E9%99%A4%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9.md&quot;&gt;二叉树：450.搜索树中的删除操作&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0669.%E4%BF%AE%E5%89%AA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91.md&quot;&gt;二叉树：669.修剪二叉搜索树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0108.%E5%B0%86%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91.md&quot;&gt;二叉树：108.将有序数组转换为二叉搜索树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0538.%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%B4%AF%E5%8A%A0%E6%A0%91.md&quot;&gt;二叉树：538.把二叉搜索树转换为累加树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E4%BA%8C%E5%8F%89%E6%A0%91%E6%80%BB%E7%BB%93%E7%AF%87.md&quot;&gt;二叉树：总结篇！（需要掌握的二叉树技能都在这里了）&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;回溯算法&lt;/h2&gt; 
&lt;p&gt;题目分类大纲如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://code-thinking-1253855093.file.myqcloud.com/pics/20240424172311.png&quot; width=&quot;600&quot; alt=&quot;回溯算法大纲&quot;&gt; &lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.md&quot;&gt;关于回溯算法，你该了解这些！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0077.%E7%BB%84%E5%90%88.md&quot;&gt;回溯算法：77.组合&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0077.%E7%BB%84%E5%90%88%E4%BC%98%E5%8C%96.md&quot;&gt;回溯算法：77.组合优化&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0216.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8CIII.md&quot;&gt;回溯算法：216.组合总和III&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0017.%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88.md&quot;&gt;回溯算法：17.电话号码的字母组合&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20201030%E5%9B%9E%E6%BA%AF%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（回溯算法系列一）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0039.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C.md&quot;&gt;回溯算法：39.组合总和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0040.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8CII.md&quot;&gt;回溯算法：40.组合总和II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0131.%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2.md&quot;&gt;回溯算法：131.分割回文串&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0093.%E5%A4%8D%E5%8E%9FIP%E5%9C%B0%E5%9D%80.md&quot;&gt;回溯算法：93.复原IP地址&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0078.%E5%AD%90%E9%9B%86.md&quot;&gt;回溯算法：78.子集&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20201107%E5%9B%9E%E6%BA%AF%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（回溯算法系列二）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0090.%E5%AD%90%E9%9B%86II.md&quot;&gt;回溯算法：90.子集II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0491.%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97.md&quot;&gt;回溯算法：491.递增子序列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0046.%E5%85%A8%E6%8E%92%E5%88%97.md&quot;&gt;回溯算法：46.全排列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0047.%E5%85%A8%E6%8E%92%E5%88%97II.md&quot;&gt;回溯算法：47.全排列II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20201112%E5%9B%9E%E6%BA%AF%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（回溯算法系列三）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95%E5%8E%BB%E9%87%8D%E9%97%AE%E9%A2%98%E7%9A%84%E5%8F%A6%E4%B8%80%E7%A7%8D%E5%86%99%E6%B3%95.md&quot;&gt;回溯算法去重问题的另一种写法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0332.%E9%87%8D%E6%96%B0%E5%AE%89%E6%8E%92%E8%A1%8C%E7%A8%8B.md&quot;&gt;回溯算法：332.重新安排行程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0051.N%E7%9A%87%E5%90%8E.md&quot;&gt;回溯算法：51.N皇后&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0037.%E8%A7%A3%E6%95%B0%E7%8B%AC.md&quot;&gt;回溯算法：37.解数独&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%9B%9E%E6%BA%AF%E6%80%BB%E7%BB%93.md&quot;&gt;回溯算法总结篇&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;贪心算法&lt;/h2&gt; 
&lt;p&gt;题目分类大纲如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://code-thinking-1253855093.file.myqcloud.com/pics/20210917104315.png&quot; width=&quot;600&quot; alt=&quot;贪心算法大纲&quot;&gt; &lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.md&quot;&gt;关于贪心算法，你该了解这些！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0455.%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2.md&quot;&gt;贪心算法：455.分发饼干&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0376.%E6%91%86%E5%8A%A8%E5%BA%8F%E5%88%97.md&quot;&gt;贪心算法：376.摆动序列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0053.%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%92%8C.md&quot;&gt;贪心算法：53.最大子序和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20201126%E8%B4%AA%E5%BF%83%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（贪心算法系列一）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0122.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAII.md&quot;&gt;贪心算法：122.买卖股票的最佳时机II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0055.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F.md&quot;&gt;贪心算法：55.跳跃游戏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0045.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8FII.md&quot;&gt;贪心算法：45.跳跃游戏II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/1005.K%E6%AC%A1%E5%8F%96%E5%8F%8D%E5%90%8E%E6%9C%80%E5%A4%A7%E5%8C%96%E7%9A%84%E6%95%B0%E7%BB%84%E5%92%8C.md&quot;&gt;贪心算法：1005.K次取反后最大化的数组和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20201203%E8%B4%AA%E5%BF%83%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（贪心算法系列二）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0134.%E5%8A%A0%E6%B2%B9%E7%AB%99.md&quot;&gt;贪心算法：134.加油站&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0135.%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C.md&quot;&gt;贪心算法：135.分发糖果&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0860.%E6%9F%A0%E6%AA%AC%E6%B0%B4%E6%89%BE%E9%9B%B6.md&quot;&gt;贪心算法：860.柠檬水找零&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0406.%E6%A0%B9%E6%8D%AE%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97.md&quot;&gt;贪心算法：406.根据身高重建队列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20201217%E8%B4%AA%E5%BF%83%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（贪心算法系列三）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E6%A0%B9%E6%8D%AE%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97%EF%BC%88vector%E5%8E%9F%E7%90%86%E8%AE%B2%E8%A7%A3%EF%BC%89.md&quot;&gt;贪心算法：406.根据身高重建队列（续集）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0452.%E7%94%A8%E6%9C%80%E5%B0%91%E6%95%B0%E9%87%8F%E7%9A%84%E7%AE%AD%E5%BC%95%E7%88%86%E6%B0%94%E7%90%83.md&quot;&gt;贪心算法：452.用最少数量的箭引爆气球&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0435.%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4.md&quot;&gt;贪心算法：435.无重叠区间&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0763.%E5%88%92%E5%88%86%E5%AD%97%E6%AF%8D%E5%8C%BA%E9%97%B4.md&quot;&gt;贪心算法：763.划分字母区间&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0056.%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4.md&quot;&gt;贪心算法：56.合并区间&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20201224%E8%B4%AA%E5%BF%83%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（贪心算法系列四）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0738.%E5%8D%95%E8%B0%83%E9%80%92%E5%A2%9E%E7%9A%84%E6%95%B0%E5%AD%97.md&quot;&gt;贪心算法：738.单调递增的数字&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0968.%E7%9B%91%E6%8E%A7%E4%BA%8C%E5%8F%89%E6%A0%91.md&quot;&gt;贪心算法：968.监控二叉树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E7%AF%87.md&quot;&gt;贪心算法：总结篇！（每逢总结必经典）&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;动态规划&lt;/h2&gt; 
&lt;p&gt;动态规划专题已经开始啦，来不及解释了，小伙伴们上车别掉队！&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://code-thinking.cdn.bcebos.com/pics/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E6%80%BB%E7%BB%93%E5%A4%A7%E7%BA%B21.jpg&quot; width=&quot;500&quot;&gt; &lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.md&quot;&gt;关于动态规划，你该了解这些！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0509.%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0.md&quot;&gt;动态规划：509.斐波那契数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0070.%E7%88%AC%E6%A5%BC%E6%A2%AF.md&quot;&gt;动态规划：70.爬楼梯&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0746.%E4%BD%BF%E7%94%A8%E6%9C%80%E5%B0%8F%E8%8A%B1%E8%B4%B9%E7%88%AC%E6%A5%BC%E6%A2%AF.md&quot;&gt;动态规划：746.使用最小花费爬楼梯&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20210107%E5%8A%A8%E8%A7%84%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（动态规划系列一）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0062.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84.md&quot;&gt;动态规划：62.不同路径&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0063.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84II.md&quot;&gt;动态规划：63.不同路径II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0343.%E6%95%B4%E6%95%B0%E6%8B%86%E5%88%86.md&quot;&gt;动态规划：343.整数拆分&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0096.%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91.md&quot;&gt;动态规划：96.不同的二叉搜索树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20210114%E5%8A%A8%E8%A7%84%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（动态规划系列二）&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;背包问题系列：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://code-thinking.cdn.bcebos.com/pics/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93.png&quot; width=&quot;500&quot; alt=&quot;背包问题大纲&quot;&gt; &lt;/p&gt; 
&lt;ol start=&quot;11&quot;&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-1.md&quot;&gt;动态规划：01背包理论基础（二维dp数组）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-2.md&quot;&gt;动态规划：01背包理论基础（一维dp数组）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0416.%E5%88%86%E5%89%B2%E7%AD%89%E5%92%8C%E5%AD%90%E9%9B%86.md&quot;&gt;动态规划：416.分割等和子集&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/1049.%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E7%9F%B3%E5%A4%B4%E7%9A%84%E9%87%8D%E9%87%8FII.md&quot;&gt;动态规划：1049.最后一块石头的重量II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20210121%E5%8A%A8%E8%A7%84%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（动态规划系列三）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0494.%E7%9B%AE%E6%A0%87%E5%92%8C.md&quot;&gt;动态规划：494.目标和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0474.%E4%B8%80%E5%92%8C%E9%9B%B6.md&quot;&gt;动态规划：474.一和零&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85.md&quot;&gt;动态规划：完全背包理论基础（二维dp数组）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E4%B8%80%E7%BB%B4.md&quot;&gt;动态规划：完全背包理论基础（一维dp数组）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0518.%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2II.md&quot;&gt;动态规划：518.零钱兑换II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20210128%E5%8A%A8%E8%A7%84%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（动态规划系列四）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0377.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%E2%85%A3.md&quot;&gt;动态规划：377.组合总和Ⅳ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0070.%E7%88%AC%E6%A5%BC%E6%A2%AF%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E7%89%88%E6%9C%AC.md&quot;&gt;动态规划：70.爬楼梯（完全背包版本）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0322.%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2.md&quot;&gt;动态规划：322.零钱兑换&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0279.%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0.md&quot;&gt;动态规划：279.完全平方数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20210204%E5%8A%A8%E8%A7%84%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;本周小结！（动态规划系列五）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0139.%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86.md&quot;&gt;动态规划：139.单词拆分&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85.md&quot;&gt;动态规划：多重背包理论基础&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E8%83%8C%E5%8C%85%E6%80%BB%E7%BB%93%E7%AF%87.md&quot;&gt;背包问题总结篇&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;打家劫舍系列：&lt;/p&gt; 
&lt;ol start=&quot;29&quot;&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0198.%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D.md&quot;&gt;动态规划：198.打家劫舍&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0213.%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8DII.md&quot;&gt;动态规划：213.打家劫舍II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0337.%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8DIII.md&quot;&gt;动态规划：337.打家劫舍III&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;股票系列：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://code-thinking.cdn.bcebos.com/pics/%E8%82%A1%E7%A5%A8%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93.jpg&quot; width=&quot;500&quot; alt=&quot;股票问题总结&quot;&gt; &lt;/p&gt; 
&lt;ol start=&quot;32&quot;&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0121.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA.md&quot;&gt;动态规划：121.买卖股票的最佳时机&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20210225%E5%8A%A8%E8%A7%84%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;动态规划：本周小结（系列六）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0122.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAII%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89.md&quot;&gt;动态规划：122.买卖股票的最佳时机II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0123.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAIII.md&quot;&gt;动态规划：123.买卖股票的最佳时机III&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0188.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAIV.md&quot;&gt;动态规划：188.买卖股票的最佳时机IV&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0309.%E6%9C%80%E4%BD%B3%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%97%B6%E6%9C%BA%E5%90%AB%E5%86%B7%E5%86%BB%E6%9C%9F.md&quot;&gt;动态规划：309.最佳买卖股票时机含冷冻期&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%91%A8%E6%80%BB%E7%BB%93/20210304%E5%8A%A8%E8%A7%84%E5%91%A8%E6%9C%AB%E6%80%BB%E7%BB%93.md&quot;&gt;动态规划：本周小结（系列七）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0714.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89.md&quot;&gt;动态规划：714.买卖股票的最佳时机含手续费&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E8%82%A1%E7%A5%A8%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93%E7%AF%87.md&quot;&gt;动态规划：股票系列总结篇&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;子序列系列：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://code-thinking.cdn.bcebos.com/pics/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E5%AD%90%E5%BA%8F%E5%88%97%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93.jpg&quot; width=&quot;500&quot; alt=&quot;&quot;&gt; &lt;/p&gt; 
&lt;ol start=&quot;41&quot;&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0300.%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97.md&quot;&gt;动态规划：300.最长递增子序列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0674.%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E9%80%92%E5%A2%9E%E5%BA%8F%E5%88%97.md&quot;&gt;动态规划：674.最长连续递增序列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0718.%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E6%95%B0%E7%BB%84.md&quot;&gt;动态规划：718.最长重复子数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/1143.%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97.md&quot;&gt;动态规划：1143.最长公共子序列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/1035.%E4%B8%8D%E7%9B%B8%E4%BA%A4%E7%9A%84%E7%BA%BF.md&quot;&gt;动态规划：1035.不相交的线&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0053.%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%92%8C%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89.md&quot;&gt;动态规划：53.最大子序和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0392.%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97.md&quot;&gt;动态规划：392.判断子序列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0115.%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97.md&quot;&gt;动态规划：115.不同的子序列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0583.%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C.md&quot;&gt;动态规划：583.两个字符串的删除操作&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0072.%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB.md&quot;&gt;动态规划：72.编辑距离&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E4%B8%BA%E4%BA%86%E7%BB%9D%E6%9D%80%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%EF%BC%8C%E5%8D%A1%E5%B0%94%E5%81%9A%E4%BA%86%E4%B8%89%E6%AD%A5%E9%93%BA%E5%9E%AB.md&quot;&gt;编辑距离总结篇&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0647.%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2.md&quot;&gt;动态规划：647.回文子串&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0516.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97.md&quot;&gt;动态规划：516.最长回文子序列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E6%80%BB%E7%BB%93%E7%AF%87.md&quot;&gt;动态规划总结篇&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;单调栈&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0739.%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6.md&quot;&gt;单调栈：739.每日温度&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0496.%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0I.md&quot;&gt;单调栈：496.下一个更大元素I&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0503.%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0II.md&quot;&gt;单调栈：503.下一个更大元素II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0042.%E6%8E%A5%E9%9B%A8%E6%B0%B4.md&quot;&gt;单调栈：42.接雨水&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0084.%E6%9F%B1%E7%8A%B6%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2.md&quot;&gt;单调栈：84.柱状图中最大的矩形&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;图论&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/qita/tulunfabu.md&quot;&gt;图论正式发布&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/%E5%9B%BE%E8%AE%BA%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.md&quot;&gt;图论：理论基础&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/%E5%9B%BE%E8%AE%BA%E6%B7%B1%E6%90%9C%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.md&quot;&gt;图论：深度优先搜索理论基础&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0098.%E6%89%80%E6%9C%89%E5%8F%AF%E8%BE%BE%E8%B7%AF%E5%BE%84.md&quot;&gt;图论：所有可达路径&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/%E5%9B%BE%E8%AE%BA%E5%B9%BF%E6%90%9C%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.md&quot;&gt;图论：广度优先搜索理论基础&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0099.%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%95%B0%E9%87%8F%E6%B7%B1%E6%90%9C.md&quot;&gt;图论：岛屿数量.深搜版&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0099.%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%95%B0%E9%87%8F%E5%B9%BF%E6%90%9C.md&quot;&gt;图论：岛屿数量.广搜版&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0100.%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E7%A7%AF.md&quot;&gt;图论：岛屿的最大面积&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0101.%E5%AD%A4%E5%B2%9B%E7%9A%84%E6%80%BB%E9%9D%A2%E7%A7%AF.md&quot;&gt;图论：孤岛的总面积&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0102.%E6%B2%89%E6%B2%A1%E5%AD%A4%E5%B2%9B.md&quot;&gt;图论：沉没孤岛&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0103.%E6%B0%B4%E6%B5%81%E9%97%AE%E9%A2%98.md&quot;&gt;图论：水流问题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0106.%E5%B2%9B%E5%B1%BF%E7%9A%84%E5%91%A8%E9%95%BF.md&quot;&gt;图论：岛屿的周长&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0104.%E5%BB%BA%E9%80%A0%E6%9C%80%E5%A4%A7%E5%B2%9B%E5%B1%BF.md&quot;&gt;图论：建造最大岛屿&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0110.%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%A5%E9%BE%99.md&quot;&gt;图论：字符串接龙&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0105.%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E5%AE%8C%E5%85%A8%E5%8F%AF%E8%BE%BE%E6%80%A7.md&quot;&gt;图论：有向图的完全可达性&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/%E5%9B%BE%E8%AE%BA%E5%B9%B6%E6%9F%A5%E9%9B%86%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.md&quot;&gt;图论：并查集理论基础&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0107.%E5%AF%BB%E6%89%BE%E5%AD%98%E5%9C%A8%E7%9A%84%E8%B7%AF%E5%BE%84.md&quot;&gt;图论：寻找存在的路径&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0108.%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5.md&quot;&gt;图论：冗余连接&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0109.%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5II.md&quot;&gt;图论：冗余连接II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0053.%E5%AF%BB%E5%AE%9D-prim.md&quot;&gt;图论：最小生成树之prim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0053.%E5%AF%BB%E5%AE%9D-Kruskal.md&quot;&gt;图论：最小生成树之kruskal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0117.%E8%BD%AF%E4%BB%B6%E6%9E%84%E5%BB%BA.md&quot;&gt;图论：拓扑排序&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0047.%E5%8F%82%E4%BC%9Adijkstra%E6%9C%B4%E7%B4%A0.md&quot;&gt;图论：dijkstra（朴素版）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0047.%E5%8F%82%E4%BC%9Adijkstra%E5%A0%86.md&quot;&gt;图论：dijkstra（堆优化版）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0094.%E5%9F%8E%E5%B8%82%E9%97%B4%E8%B4%A7%E7%89%A9%E8%BF%90%E8%BE%93I.md&quot;&gt;图论：Bellman_ford 算法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0094.%E5%9F%8E%E5%B8%82%E9%97%B4%E8%B4%A7%E7%89%A9%E8%BF%90%E8%BE%93I-SPFA.md&quot;&gt;图论：Bellman_ford 队列优化算法（又名SPFA）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0095.%E5%9F%8E%E5%B8%82%E9%97%B4%E8%B4%A7%E7%89%A9%E8%BF%90%E8%BE%93II.md&quot;&gt;图论：Bellman_ford之判断负权回路&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0096.%E5%9F%8E%E5%B8%82%E9%97%B4%E8%B4%A7%E7%89%A9%E8%BF%90%E8%BE%93III.md&quot;&gt;图论：Bellman_ford之单源有限最短路&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0097.%E5%B0%8F%E6%98%8E%E9%80%9B%E5%85%AC%E5%9B%AD.md&quot;&gt;图论：Floyd 算法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/0126.%E9%AA%91%E5%A3%AB%E7%9A%84%E6%94%BB%E5%87%BBastar.md&quot;&gt;图论：A * 算法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/%E6%9C%80%E7%9F%AD%E8%B7%AF%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93%E7%AF%87.md&quot;&gt;图论：最短路算法总结篇&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/kamacoder/%E5%9B%BE%E8%AE%BA%E6%80%BB%E7%BB%93%E7%AF%87.md&quot;&gt;图论：图论总结篇&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;（持续更新中....）&lt;/p&gt; 
&lt;h1&gt;补充题目&lt;/h1&gt; 
&lt;p&gt;以上题目是重中之重，大家至少要刷两遍以上才能彻底理解，如果熟练以上题目之后还在找其他题目练手，可以再刷以下题目：&lt;/p&gt; 
&lt;p&gt;这些题目很不错，但有的题目是和刷题攻略类似的，有的题解后面还会适当补充，所以我还没有将其纳入到刷题攻略。一些题解等日后我完善一下，再纳入到刷题攻略。&lt;/p&gt; 
&lt;h2&gt;数组&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/1365.%E6%9C%89%E5%A4%9A%E5%B0%91%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E6%95%B0%E5%AD%97%E7%9A%84%E6%95%B0%E5%AD%97.md&quot;&gt;1365.有多少小于当前数字的数字&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0941.%E6%9C%89%E6%95%88%E7%9A%84%E5%B1%B1%E8%84%89%E6%95%B0%E7%BB%84.md&quot;&gt;941.有效的山脉数组&lt;/a&gt; （双指针）&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/1207.%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C%E7%9A%84%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0.md&quot;&gt;1207.独一无二的出现次数&lt;/a&gt; 数组在哈希法中的经典应用&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0283.%E7%A7%BB%E5%8A%A8%E9%9B%B6.md&quot;&gt;283.移动零&lt;/a&gt; 【数组】【双指针】&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0189.%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84.md&quot;&gt;189.旋转数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0724.%E5%AF%BB%E6%89%BE%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E5%BF%83%E7%B4%A2%E5%BC%95.md&quot;&gt;724.寻找数组的中心索引&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0034.%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE.md&quot;&gt;34.在排序数组中查找元素的第一个和最后一个位置&lt;/a&gt; （二分法）&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0922.%E6%8C%89%E5%A5%87%E5%81%B6%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84II.md&quot;&gt;922.按奇偶排序数组II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0035.%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE.md&quot;&gt;35.搜索插入位置&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;链表&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0024.%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9.md&quot;&gt;24.两两交换链表中的节点&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0234.%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8.md&quot;&gt;234.回文链表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0143.%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8.md&quot;&gt;143.重排链表&lt;/a&gt;【数组】【双向队列】【直接操作链表】&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0141.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8.md&quot;&gt;141.环形链表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/%E9%9D%A2%E8%AF%95%E9%A2%9802.07.%E9%93%BE%E8%A1%A8%E7%9B%B8%E4%BA%A4.md&quot;&gt;160.相交链表&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;哈希表&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0205.%E5%90%8C%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2.md&quot;&gt;205.同构字符串&lt;/a&gt;:【哈希表的应用】&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;字符串&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0925.%E9%95%BF%E6%8C%89%E9%94%AE%E5%85%A5.md&quot;&gt;925.长按键入&lt;/a&gt; 模拟匹配&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0844.%E6%AF%94%E8%BE%83%E5%90%AB%E9%80%80%E6%A0%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2.md&quot;&gt;0844.比较含退格的字符串&lt;/a&gt;【栈模拟】【空间更优的双指针】&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;二叉树&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0129.%E6%B1%82%E6%A0%B9%E5%88%B0%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C.md&quot;&gt;129.求根到叶子节点数字之和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/1382.%E5%B0%86%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E5%8F%98%E5%B9%B3%E8%A1%A1.md&quot;&gt;1382.将二叉搜索树变平衡&lt;/a&gt; 构造平衡二叉搜索树&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0100.%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91.md&quot;&gt;100.相同的树&lt;/a&gt; 同101.对称二叉树 一个思路&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0116.%E5%A1%AB%E5%85%85%E6%AF%8F%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%8F%B3%E4%BE%A7%E8%8A%82%E7%82%B9%E6%8C%87%E9%92%88.md&quot;&gt;116.填充每个节点的下一个右侧节点指针&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;回溯算法&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0052.N%E7%9A%87%E5%90%8EII.md&quot;&gt;52.N皇后II&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;贪心&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0649.Dota2%E5%8F%82%E8%AE%AE%E9%99%A2.md&quot;&gt;649.Dota2参议院&lt;/a&gt; 有难度&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/1221.%E5%88%86%E5%89%B2%E5%B9%B3%E8%A1%A1%E5%AD%97%E7%AC%A6%E4%B8%B2.md&quot;&gt;1221.分割平衡字符&lt;/a&gt; 简单贪心&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;动态规划&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0005.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2.md&quot;&gt;5.最长回文子串&lt;/a&gt; 和&lt;a href=&quot;https://mp.weixin.qq.com/s/2WetyP6IYQ6VotegepVpEw&quot;&gt;647.回文子串&lt;/a&gt; 差不多是一样的&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0132.%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2II.md&quot;&gt;132.分割回文串II&lt;/a&gt; 与647.回文子串和 5.最长回文子串 很像&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0673.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%AA%E6%95%B0.md&quot;&gt;673.最长递增子序列的个数&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;图论&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0463.%E5%B2%9B%E5%B1%BF%E7%9A%84%E5%91%A8%E9%95%BF.md&quot;&gt;463.岛屿的周长&lt;/a&gt; （模拟）&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0841.%E9%92%A5%E5%8C%99%E5%92%8C%E6%88%BF%E9%97%B4.md&quot;&gt;841.钥匙和房间&lt;/a&gt; 【有向图】dfs，bfs都可以&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0127.%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99.md&quot;&gt;127.单词接龙&lt;/a&gt; 广搜&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;并查集&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0684.%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5.md&quot;&gt;684.冗余连接&lt;/a&gt; 【并查集基础题目】&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0685.%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5II.md&quot;&gt;685.冗余连接II&lt;/a&gt;【并查集的应用】&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;模拟&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0657.%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%83%BD%E5%90%A6%E8%BF%94%E5%9B%9E%E5%8E%9F%E7%82%B9.md&quot;&gt;657.机器人能否返回原点&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/0031.%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97.md&quot;&gt;31.下一个排列&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;位运算&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/youngyangyang04/leetcode-master/master/problems/1356.%E6%A0%B9%E6%8D%AE%E6%95%B0%E5%AD%97%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%8B1%E7%9A%84%E6%95%B0%E7%9B%AE%E6%8E%92%E5%BA%8F.md&quot;&gt;1356.根据数字二进制下1的数目排序&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;算法模板&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/youngyangyang04/leetcode/raw/master/problems/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF.md&quot;&gt;各类基础算法模板&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;贡献者&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/youngyangyang04/leetcode-master/graphs/contributors&quot;&gt;点此这里&lt;/a&gt;查看LeetCode-Master的所有贡献者。感谢他们补充了LeetCode-Master的其他语言版本，让更多的读者受益于此项目。&lt;/p&gt; 
&lt;h1&gt;Star 趋势&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://star-history.com/#youngyangyang04/leetcode-master&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=youngyangyang04/leetcode-master&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;关于作者&lt;/h1&gt; 
&lt;p&gt;大家好，我是程序员Carl，哈工大师兄，《代码随想录》作者，先后在腾讯和百度从事后端技术底层技术研发。&lt;/p&gt; 
&lt;h1&gt;PDF下载&lt;/h1&gt; 
&lt;p&gt;添加如下企业微信，会自动发送给大家PDF版本，顺便可以选择是否加入刷题群。&lt;/p&gt; 
&lt;p&gt;添加微信记得备注，如果是已工作，备注：姓名-城市-岗位。如果学生，备注：姓名-学校-年级。&lt;strong&gt;备注没有自我介绍不通过哦&lt;/strong&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt;
 &lt;img src=&quot;https://code-thinking-1253855093.file.myqcloud.com/pics/%E7%AC%AC%E4%BA%8C%E4%BC%81%E4%B8%9A%E5%88%B7%E9%A2%98%E6%B4%BB%E7%A0%81.png&quot; data-img=&quot;1&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>yuaotian/go-cursor-help</title>
      <link>https://github.com/yuaotian/go-cursor-help</link>
      <description>&lt;p&gt;解决Cursor在免费订阅期间出现以下提示的问题: You&#39;ve reached your trial request limit. / Too many free trial accounts used on this machine. Please upgrade to pro. We have this limit in place to prevent abuse. Please let us know if you believe this is a mistake.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🚀 Cursor Free Trial Reset Tool&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/yuaotian/go-cursor-help/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/yuaotian/go-cursor-help?style=flat-square&amp;amp;logo=github&amp;amp;color=blue&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yuaotian/go-cursor-help/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&amp;amp;logo=bookstack&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yuaotian/go-cursor-help/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/yuaotian/go-cursor-help?style=flat-square&amp;amp;logo=github&quot; alt=&quot;Stars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/README.md&quot;&gt;🌟 English&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/README_CN.md&quot;&gt;🌏 中文&lt;/a&gt;&lt;/p&gt; 
 &lt;img src=&quot;https://ai-cursor.com/wp-content/uploads/2024/09/logo-cursor-ai-png.webp&quot; alt=&quot;Cursor Logo&quot; width=&quot;120&quot;&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;IMPORTANT NOTICE&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;This tool currently supports:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ Cursor v0.44.11 and below&lt;/li&gt; 
  &lt;li&gt;✅ Windows: Latest 0.47.x versions (Supported)&lt;/li&gt; 
  &lt;li&gt;✅ Mac/Linux: Latest 0.47.x versions (Supported, feedback welcome)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Please check your Cursor version before using this tool.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;📦 Version History &amp;amp; Downloads&lt;/b&gt;&lt;/summary&gt; 
 &lt;div class=&quot;version-card&quot; style=&quot;background: linear-gradient(135deg, #6e8efb, #a777e3); border-radius: 8px; padding: 15px; margin: 10px 0; color: white;&quot;&gt; 
  &lt;h3&gt;🌟 Latest Versions&lt;/h3&gt; 
  &lt;ul&gt; 
   &lt;li&gt;v0.45.11 (2025-02-07) - Latest Release&lt;/li&gt; 
   &lt;li&gt;v0.44.11 (2025-01-03) - Most Stable Release&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/CursorHistoryDown.md&quot;&gt;View Full Version History&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;📥 Direct Download Links&lt;/h3&gt; 
 &lt;p&gt;&lt;strong&gt;v0.44.11 (Recommended Stable Version)&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Windows: &lt;a href=&quot;https://downloader.cursor.sh/builds/250103fqxdt5u9z/windows/nsis/x64&quot;&gt;Official&lt;/a&gt; | &lt;a href=&quot;https://download.todesktop.com/230313mzl4w4u92/Cursor%20Setup%200.44.11%20-%20Build%20250103fqxdt5u9z-x64.exe&quot;&gt;Mirror&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Mac: &lt;a href=&quot;https://dl.todesktop.com/230313mzl4w4u92/versions/0.44.11/mac/zip/arm64&quot;&gt;Apple Silicon&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;⚠️ &lt;strong&gt;MAC Address Modification Warning&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For Mac users: This script includes a MAC address modification feature that will:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Modify your network interface&#39;s MAC address&lt;/li&gt; 
  &lt;li&gt;Backup original MAC addresses before modification&lt;/li&gt; 
  &lt;li&gt;This modification may temporarily affect network connectivity&lt;/li&gt; 
  &lt;li&gt;You can skip this step when prompted during execution&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;💾 &lt;strong&gt;Download Cursor v0.44.11&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Windows:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://downloader.cursor.sh/builds/250103fqxdt5u9z/windows/nsis/x64&quot;&gt;Download from Cursor Official&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://download.todesktop.com/230313mzl4w4u92/Cursor%20Setup%200.44.11%20-%20Build%20250103fqxdt5u9z-x64.exe&quot;&gt;Download from ToDesktop&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Mac:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://dl.todesktop.com/230313mzl4w4u92/versions/0.44.11/mac/zip/arm64&quot;&gt;Download for Mac (Apple Silicon)&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🔒 Disable Auto-Update Feature&lt;/b&gt;&lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;To prevent Cursor from automatically updating to unsupported new versions, you can choose to disable the auto-update feature.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;Method 1: Using Built-in Script (Recommended)&lt;/h4&gt; 
 &lt;p&gt;When running the reset tool, the script will ask if you want to disable auto-updates:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[Question] Do you want to disable Cursor auto-update feature?
0) No - Keep default settings (Press Enter)
1) Yes - Disable auto-update
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Select &lt;code&gt;1&lt;/code&gt; to automatically complete the disable operation.&lt;/p&gt; 
 &lt;h4&gt;Method 2: Manual Disable&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Close all Cursor processes&lt;/li&gt; 
  &lt;li&gt;Delete directory: &lt;code&gt;%LOCALAPPDATA%\cursor-updater&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Create a file with the same name (without extension) in the same location&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;strong&gt;macOS:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# NOTE: As tested, this method only works for version 0.45.11 and below.
# Close Cursor
pkill -f &quot;Cursor&quot;
# Replacing app-update.yml with a blank/read-only file
cd /Applications/Cursor.app/Contents/Resources
mv app-update.yml app-update.yml.bak
touch app-update.yml
chmod 444 app-update.yml

# Go to Settings -&amp;gt; Application -&amp;gt; Update, set Mode to none.
# This must be done to prevent Cursor from checking for updates.

# NOTE: The cursor-updater modification method may no longer be effective
# In any case, remove update directory and create blocking file
rm -rf ~/Library/Application\ Support/Caches/cursor-updater
touch ~/Library/Application\ Support/Caches/cursor-updater
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Close Cursor
pkill -f &quot;Cursor&quot;
# Remove update directory and create blocking file
rm -rf ~/.config/cursor-updater
touch ~/.config/cursor-updater
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;⚠️ &lt;strong&gt;Note:&lt;/strong&gt; After disabling auto-updates, you&#39;ll need to manually download and install new versions. It&#39;s recommended to update only after confirming the new version is compatible.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;📝 Description&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;When you encounter any of these messages:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Issue 1: Trial Account Limit &lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/#issue1&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Move%20to%20Solution-Blue?style=plastic&quot; alt=&quot;Back To Top&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Too many free trial accounts used on this machine.
Please upgrade to pro. We have this limit in place
to prevent abuse. Please let us know if you believe
this is a mistake.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Issue 2: API Key Limitation &lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/#issue2&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Move%20to%20Solution-green?style=plastic&quot; alt=&quot;Back To Top&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[New Issue]

Composer relies on custom models that cannot be billed to an API key.
Please disable API keys and use a Pro or Business subscription.
Request ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Issue 3: Trial Request Limit&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This indicates you&#39;ve reached the usage limit during the VIP free trial period:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;You&#39;ve reached your trial request limit.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Issue 4: Claude 3.7 High Load &lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/#issue4&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Move%20to%20Solution-purple?style=plastic&quot; alt=&quot;Back To Top&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;High Load 
We&#39;re experiencing high demand for Claude 3.7 Sonnet right now. Please upgrade to Pro, or switch to the
&#39;default&#39; model, Claude 3.5 sonnet, another model, or try again in a few moments.
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;p id=&quot;issue2&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Solution : Uninstall Cursor Completely And Reinstall (API key Issue)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download &lt;a href=&quot;https://geekuninstaller.com/download&quot;&gt;Geek.exe Uninstaller[Free]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Uninstall Cursor app completely&lt;/li&gt; 
 &lt;li&gt;Re-Install Cursor app&lt;/li&gt; 
 &lt;li&gt;Continue to Solution 1&lt;/li&gt; 
&lt;/ol&gt; 
&lt;br&gt; 
&lt;p id=&quot;issue1&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Temporary Solution:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Solution 1: Quick Reset (Recommended)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Close Cursor application&lt;/li&gt; 
 &lt;li&gt;Run the machine code reset script (see installation instructions below)&lt;/li&gt; 
 &lt;li&gt;Reopen Cursor to continue using&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Solution 2: Account Switch&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;File -&amp;gt; Cursor Settings -&amp;gt; Sign Out&lt;/li&gt; 
 &lt;li&gt;Close Cursor&lt;/li&gt; 
 &lt;li&gt;Run the machine code reset script&lt;/li&gt; 
 &lt;li&gt;Login with a new account&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Solution 3: Network Optimization&lt;/h4&gt; 
&lt;p&gt;If the above solutions don&#39;t work, try:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Switch to low-latency nodes (Recommended regions: Japan, Singapore, US, Hong Kong)&lt;/li&gt; 
 &lt;li&gt;Ensure network stability&lt;/li&gt; 
 &lt;li&gt;Clear browser cache and retry&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Solution 4: Claude 3.7 Access Issue (High Load)&lt;/h4&gt; 
&lt;p&gt;If you see the &quot;High Load&quot; message for Claude 3.7 Sonnet, this indicates Cursor is limiting free trial accounts from using the 3.7 model during certain times of the day. Try:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Switch to a new account created with Gmail, possibly connecting through a different IP address&lt;/li&gt; 
 &lt;li&gt;Try accessing during off-peak hours (typically 5-10 AM or 3-7 PM when restrictions are often lighter)&lt;/li&gt; 
 &lt;li&gt;Consider upgrading to Pro for guaranteed access&lt;/li&gt; 
 &lt;li&gt;Use Claude 3.5 Sonnet as a fallback option&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: These access patterns may change as Cursor adjusts their resource allocation policies.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;💻 System Support&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt; ✅&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;x64 (64-bit)&lt;/li&gt; 
     &lt;li&gt;x86 (32-bit)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt; ✅&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Intel (x64)&lt;/li&gt; 
     &lt;li&gt;Apple Silicon (M1/M2)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt; ✅&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;x64 (64-bit)&lt;/li&gt; 
     &lt;li&gt;x86 (32-bit)&lt;/li&gt; 
     &lt;li&gt;ARM64&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;🚀 One-Click Solution&lt;/h3&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;Global Users&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh | sudo bash 
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh | sudo bash 
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;irm https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div align=&quot;center&quot;&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/run_success.png&quot; alt=&quot;Run Success&quot; width=&quot;600&quot;&gt; 
 &lt;/div&gt; 
&lt;/details&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;China Users (Recommended)&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;Windows Terminal Run and Configuration&lt;/b&gt;&lt;/summary&gt; 
 &lt;h4&gt;How to Open Administrator Terminal in Windows:&lt;/h4&gt; 
 &lt;h5&gt;Method 1: Using Win + X Shortcut&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;1. Press Win + X key combination
2. Select one of these options from the menu:
   - &quot;Windows PowerShell (Administrator)&quot;
   - &quot;Windows Terminal (Administrator)&quot;
   - &quot;Terminal (Administrator)&quot;
   (Options may vary depending on Windows version)
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Method 2: Using Win + R Run Command&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;1. Press Win + R key combination
2. Type powershell or pwsh in the Run dialog
3. Press Ctrl + Shift + Enter to run as administrator
   or type in the opened window: Start-Process pwsh -Verb RunAs
4. Enter the reset script in the administrator terminal:

irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Method 3: Using Search&lt;/h5&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/pwsh_1.png&quot; alt=&quot;Search PowerShell&quot;&gt;&lt;/p&gt; 
  &lt;p&gt;Type pwsh in the search box, right-click and select &quot;Run as administrator&quot; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/pwsh_2.png&quot; alt=&quot;Run as Administrator&quot;&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;Enter the reset script in the administrator terminal:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;🔧 PowerShell Installation Guide&lt;/h3&gt; 
 &lt;p&gt;If PowerShell is not installed on your system, you can install it using one of these methods:&lt;/p&gt; 
 &lt;h4&gt;Method 1: Install via Winget (Recommended)&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open Command Prompt or PowerShell&lt;/li&gt; 
  &lt;li&gt;Run the following command:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;winget install --id Microsoft.PowerShell --source winget
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Method 2: Manual Installation&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Download the installer for your system:&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/PowerShell-7.4.6-win-x64.msi&quot;&gt;PowerShell-7.4.6-win-x64.msi&lt;/a&gt; (64-bit systems)&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/PowerShell-7.4.6-win-x86.msi&quot;&gt;PowerShell-7.4.6-win-x86.msi&lt;/a&gt; (32-bit systems)&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/PowerShell-7.4.6-win-arm64.msi&quot;&gt;PowerShell-7.4.6-win-arm64.msi&lt;/a&gt; (ARM64 systems)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Double-click the downloaded installer and follow the installation prompts&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;💡 If you encounter any issues, please refer to the &lt;a href=&quot;https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows&quot;&gt;Microsoft Official Installation Guide&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;h4&gt;Windows 安装特性:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔍 Automatically detects and uses PowerShell 7 if available&lt;/li&gt; 
 &lt;li&gt;🛡️ Requests administrator privileges via UAC prompt&lt;/li&gt; 
 &lt;li&gt;📝 Falls back to Windows PowerShell if PS7 isn&#39;t found&lt;/li&gt; 
 &lt;li&gt;💡 Provides manual instructions if elevation fails&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;That&#39;s it! The script will:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;✨ Install the tool automatically&lt;/li&gt; 
 &lt;li&gt;🔄 Reset your Cursor trial immediately&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;📦 Manual Installation&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Download the appropriate file for your system from &lt;a href=&quot;https://github.com/yuaotian/go-cursor-help/releases/latest&quot;&gt;releases&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;Windows Packages&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;64-bit: &lt;code&gt;cursor-id-modifier_windows_x64.exe&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;32-bit: &lt;code&gt;cursor-id-modifier_windows_x86.exe&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;macOS Packages&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Intel: &lt;code&gt;cursor-id-modifier_darwin_x64_intel&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;M1/M2: &lt;code&gt;cursor-id-modifier_darwin_arm64_apple_silicon&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Linux Packages&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;64-bit: &lt;code&gt;cursor-id-modifier_linux_x64&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;32-bit: &lt;code&gt;cursor-id-modifier_linux_x86&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;ARM64: &lt;code&gt;cursor-id-modifier_linux_arm64&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;🔧 Technical Details&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Configuration Files&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The program modifies Cursor&#39;s &lt;code&gt;storage.json&lt;/code&gt; config file located at:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Windows: &lt;code&gt;%APPDATA%\Cursor\User\globalStorage\storage.json&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;macOS: &lt;code&gt;~/Library/Application Support/Cursor/User/globalStorage/storage.json&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Linux: &lt;code&gt;~/.config/Cursor/User/globalStorage/storage.json&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Modified Fields&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The tool generates new unique identifiers for:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;telemetry.machineId&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;telemetry.macMachineId&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;telemetry.devDeviceId&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;telemetry.sqmId&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Manual Auto-Update Disable&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Windows users can manually disable the auto-update feature:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Close all Cursor processes&lt;/li&gt; 
  &lt;li&gt;Delete directory: &lt;code&gt;C:\Users\username\AppData\Local\cursor-updater&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Create a file with the same name: &lt;code&gt;cursor-updater&lt;/code&gt; (without extension)&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;macOS/Linux users can try to locate similar &lt;code&gt;cursor-updater&lt;/code&gt; directory in their system and perform the same operation.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Safety Features&lt;/b&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ Safe process termination&lt;/li&gt; 
  &lt;li&gt;✅ Atomic file operations&lt;/li&gt; 
  &lt;li&gt;✅ Error handling and recovery&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Registry Modification Notice&lt;/b&gt;&lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;⚠️ &lt;strong&gt;Important: This tool modifies the Windows Registry&lt;/strong&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;Modified Registry&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Path: &lt;code&gt;Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Cryptography&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Key: &lt;code&gt;MachineGuid&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Potential Impact&lt;/h4&gt; 
 &lt;p&gt;Modifying this registry key may affect:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Windows system&#39;s unique device identification&lt;/li&gt; 
  &lt;li&gt;Device recognition and authorization status of certain software&lt;/li&gt; 
  &lt;li&gt;System features based on hardware identification&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Safety Measures&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Automatic Backup&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Original value is automatically backed up before modification&lt;/li&gt; 
    &lt;li&gt;Backup location: &lt;code&gt;%APPDATA%\Cursor\User\globalStorage\backups&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Backup file format: &lt;code&gt;MachineGuid.backup_YYYYMMDD_HHMMSS&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Manual Recovery Steps&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Open Registry Editor (regedit)&lt;/li&gt; 
    &lt;li&gt;Navigate to: &lt;code&gt;Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Cryptography&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Right-click on &lt;code&gt;MachineGuid&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Select &quot;Modify&quot;&lt;/li&gt; 
    &lt;li&gt;Paste the value from backup file&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h4&gt;Important Notes&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Verify backup file existence before modification&lt;/li&gt; 
  &lt;li&gt;Use backup file to restore original value if needed&lt;/li&gt; 
  &lt;li&gt;Administrator privileges required for registry modification&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;📚 Recommended Reading&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/pnJrH7Ifx4WZvseeP1fcEA&quot;&gt;Cursor Issues Collection and Solutions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/PRPz-qVkFJSgkuEKkTdzwg&quot;&gt;AI Universal Development Assistant Prompt Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;b&gt;If you find this helpful, consider buying me a spicy gluten snack (Latiao) as appreciation~ 💁☕️&lt;/b&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;b&gt;微信赞赏&lt;/b&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/wx_zsm2.png&quot; width=&quot;500&quot; alt=&quot;微信赞赏码&quot;&gt;&lt;br&gt; &lt;small&gt;要到饭咧？啊咧？啊咧？不给也没事~ 请随意打赏&lt;/small&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;b&gt;支付宝赞赏&lt;/b&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/alipay.png&quot; width=&quot;500&quot; alt=&quot;支付宝赞赏码&quot;&gt;&lt;br&gt; &lt;small&gt;如果觉得有帮助,来包辣条犒劳一下吧~&lt;/small&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;b&gt;Alipay&lt;/b&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/alipay_scan_pay.jpg&quot; width=&quot;500&quot; alt=&quot;Alipay&quot;&gt;&lt;br&gt; &lt;em&gt;1 Latiao = 1 AI thought cycle&lt;/em&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;b&gt;WeChat&lt;/b&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/wx_group6.jpg&quot; width=&quot;500&quot; alt=&quot;WeChat&quot;&gt;&lt;br&gt; &lt;em&gt;二维码7天内(3月19日前)有效，过期请加微信&lt;/em&gt; &lt;/td&gt; 
    &lt;!-- &lt;td align=&quot;center&quot;&gt;
&lt;b&gt;ETC&lt;/b&gt;&lt;br&gt;
&lt;img src=&quot;img/etc.png&quot; width=&quot;100&quot; alt=&quot;ETC Address&quot;&gt;&lt;br&gt;
ETC: 0xa2745f4CD5d32310AC01694ABDB28bA32D125a6b
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt; --&gt;  
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;⭐ Project Stats&lt;/h2&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://star-history.com/#yuaotian/go-cursor-help&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=yuaotian/go-cursor-help&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://repobeats.axiom.co/api/embed/ddaa9df9a94b0029ec3fad399e1c1c4e75755477.svg?sanitize=true&quot; alt=&quot;Repobeats analytics image&quot; title=&quot;Repobeats analytics image&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;MIT License&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Copyright (c) 2024&lt;/p&gt; 
 &lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
 &lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>acmesh-official/acme.sh</title>
      <link>https://github.com/acmesh-official/acme.sh</link>
      <description>&lt;p&gt;A pure Unix shell script implementing ACME client protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;An ACME Shell script: acme.sh&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;FreeBSD&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;OpenBSD&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;NetBSD&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml/badge.svg?sanitize=true&quot; alt=&quot;MacOS&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml/badge.svg?sanitize=true&quot; alt=&quot;Ubuntu&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml/badge.svg?sanitize=true&quot; alt=&quot;Windows&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml/badge.svg?sanitize=true&quot; alt=&quot;Solaris&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;DragonFlyBSD&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml/badge.svg?sanitize=true&quot; alt=&quot;Omnios&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/workflows/Shellcheck/badge.svg?sanitize=true&quot; alt=&quot;Shellcheck&quot;&gt; &lt;img src=&quot;https://github.com/acmesh-official/acme.sh/workflows/PebbleStrict/badge.svg?sanitize=true&quot; alt=&quot;PebbleStrict&quot;&gt; &lt;img src=&quot;https://github.com/acmesh-official/acme.sh/workflows/Build%20DockerHub/badge.svg?sanitize=true&quot; alt=&quot;DockerHub&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/acmesh&quot; alt=&quot;Financial Contributors on Open Collective&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/all/badge.svg?label=financial+contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/acme-sh/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/acme-sh/Lobby.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/acme-sh/Lobby&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/neilpang/acme.sh&quot; title=&quot;Click to view the image on Docker Hub&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/stars/neilpang/acme.sh.svg?sanitize=true&quot; alt=&quot;Docker stars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/neilpang/acme.sh&quot; title=&quot;Click to view the image on Docker Hub&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/neilpang/acme.sh.svg?sanitize=true&quot; alt=&quot;Docker pulls&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An ACME protocol client written purely in Shell (Unix shell) language.&lt;/li&gt; 
 &lt;li&gt;Full ACME protocol implementation.&lt;/li&gt; 
 &lt;li&gt;Support ECDSA certs&lt;/li&gt; 
 &lt;li&gt;Support SAN and wildcard certs&lt;/li&gt; 
 &lt;li&gt;Simple, powerful and very easy to use. You only need 3 minutes to learn it.&lt;/li&gt; 
 &lt;li&gt;Bash, dash and sh compatible.&lt;/li&gt; 
 &lt;li&gt;Purely written in Shell with no dependencies on python.&lt;/li&gt; 
 &lt;li&gt;Just one script to issue, renew and install your certificates automatically.&lt;/li&gt; 
 &lt;li&gt;DOES NOT require &lt;code&gt;root/sudoer&lt;/code&gt; access.&lt;/li&gt; 
 &lt;li&gt;Docker ready&lt;/li&gt; 
 &lt;li&gt;IPv6 ready&lt;/li&gt; 
 &lt;li&gt;Cron job notifications for renewal or error etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It&#39;s probably the &lt;code&gt;easiest &amp;amp; smartest&lt;/code&gt; shell script to automatically issue &amp;amp; renew the free certificates.&lt;/p&gt; 
&lt;p&gt;Wiki: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For Docker Fans: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Run-acme.sh-in-docker&quot;&gt;acme.sh &lt;span&gt;💕&lt;/span&gt; Docker &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Twitter: &lt;a href=&quot;https://twitter.com/neilpangxa&quot;&gt;@neilpangxa&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E&quot;&gt;中文说明&lt;/a&gt;&lt;/h1&gt; 
&lt;h1&gt;Who:&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.crashed.org/letsencrypt-in-freebsd-org/&quot;&gt;FreeBSD.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ruby-china.org/topics/31983&quot;&gt;ruby-china.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pve.proxmox.com/wiki/Certificate_Management&quot;&gt;Proxmox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pfsense/FreeBSD-ports/pull/89&quot;&gt;pfsense&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.loadbalancer.org/blog/loadbalancer-org-with-lets-encrypt-quick-and-dirty&quot;&gt;Loadbalancer.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meta.discourse.org/t/setting-up-lets-encrypt/40709&quot;&gt;discourse.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://centminmod.com/letsencrypt-acmetool-https.html&quot;&gt;Centminmod&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forum.splynx.com/t/free-ssl-cert-for-splynx-lets-encrypt/297&quot;&gt;splynx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/opnsense/plugins/tree/master/security/acme-client/src/opnsense/scripts/OPNsense/AcmeClient&quot;&gt;opnsense.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://control-webpanel.com&quot;&gt;CentOS Web Panel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lnmp.org/&quot;&gt;lnmp.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Blogs-and-tutorials&quot;&gt;more...&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Tested OS&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;NO&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml/badge.svg?sanitize=true&quot; alt=&quot;MacOS&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mac OSX&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml/badge.svg?sanitize=true&quot; alt=&quot;Windows&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows (cygwin with curl, openssl and crontab included)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;FreeBSD&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;FreeBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml/badge.svg?sanitize=true&quot; alt=&quot;Solaris&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Solaris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml/badge.svg?sanitize=true&quot; alt=&quot;Ubuntu&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;NA&lt;/td&gt; 
   &lt;td&gt;pfsense&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;OpenBSD&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;OpenBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;NetBSD&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;NetBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;DragonFlyBSD&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;DragonFlyBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml/badge.svg?sanitize=true&quot; alt=&quot;Omnios&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Omnios&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Debian&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;CentOS&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;openSUSE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Alpine Linux (with curl)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Archlinux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;fedora&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Kali Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Oracle Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mageia&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Gentoo Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ClearLinux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td&gt;-----&lt;/td&gt; 
   &lt;td&gt;Cloud Linux &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/issues/111&quot;&gt;https://github.com/acmesh-official/acme.sh/issues/111&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td&gt;-----&lt;/td&gt; 
   &lt;td&gt;OpenWRT: Tested and working. See &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-run-on-OpenWRT&quot;&gt;wiki page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/letest#here-are-the-latest-status&quot;&gt;&lt;img src=&quot;https://acmesh-official.github.io/acmetest/status/proxmox.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Proxmox: See Proxmox VE Wiki. Version &lt;a href=&quot;https://pve.proxmox.com/wiki/HTTPS_Certificate_Configuration_(Version_4.x,_5.0_and_5.1)#Let.27s_Encrypt_using_acme.sh&quot;&gt;4.x, 5.0, 5.1&lt;/a&gt;, version &lt;a href=&quot;https://pve.proxmox.com/wiki/Certificate_Management&quot;&gt;5.2 and up&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Check our &lt;a href=&quot;https://github.com/acmesh-official/acmetest&quot;&gt;testing project&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acmetest&quot;&gt;https://github.com/acmesh-official/acmetest&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Supported CA&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA&quot;&gt;ZeroSSL.com CA&lt;/a&gt;(default)&lt;/li&gt; 
 &lt;li&gt;Letsencrypt.org CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/BuyPass.com-CA&quot;&gt;BuyPass.com CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/SSL.com-CA&quot;&gt;SSL.com CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Google-Public-CA&quot;&gt;Google.com Public CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/letsencrypt/pebble&quot;&gt;Pebble strict Mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Any other &lt;a href=&quot;https://tools.ietf.org/html/rfc8555&quot;&gt;RFC8555&lt;/a&gt;-compliant CA&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Supported modes&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Webroot mode&lt;/li&gt; 
 &lt;li&gt;Standalone mode&lt;/li&gt; 
 &lt;li&gt;Standalone tls-alpn mode&lt;/li&gt; 
 &lt;li&gt;Apache mode&lt;/li&gt; 
 &lt;li&gt;Nginx mode&lt;/li&gt; 
 &lt;li&gt;DNS mode&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/DNS-alias-mode&quot;&gt;DNS alias mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Stateless-Mode&quot;&gt;Stateless mode&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;1. How to install&lt;/h1&gt; 
&lt;h3&gt;1. Install online&lt;/h3&gt; 
&lt;p&gt;Check this project: &lt;a href=&quot;https://github.com/acmesh-official/get.acme.sh&quot;&gt;https://github.com/acmesh-official/get.acme.sh&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl https://get.acme.sh | sh -s email=my@example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;wget -O -  https://get.acme.sh | sh -s email=my@example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Or, Install from git&lt;/h3&gt; 
&lt;p&gt;Clone this project and launch installation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/acmesh-official/acme.sh.git
cd ./acme.sh
./acme.sh --install -m my@example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You &lt;code&gt;don&#39;t have to be root&lt;/code&gt; then, although &lt;code&gt;it is recommended&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Advanced Installation: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-install&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-install&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The installer will perform 3 actions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create and copy &lt;code&gt;acme.sh&lt;/code&gt; to your home dir (&lt;code&gt;$HOME&lt;/code&gt;): &lt;code&gt;~/.acme.sh/&lt;/code&gt;. All certs will be placed in this folder too.&lt;/li&gt; 
 &lt;li&gt;Create alias for: &lt;code&gt;acme.sh=~/.acme.sh/acme.sh&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Create daily cron job to check and renew the certs if needed.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Cron entry example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;0 0 * * * &quot;/home/user/.acme.sh&quot;/acme.sh --cron --home &quot;/home/user/.acme.sh&quot; &amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After the installation, you must close the current terminal and reopen it to make the alias take effect.&lt;/p&gt; 
&lt;p&gt;Ok, you are ready to issue certs now.&lt;/p&gt; 
&lt;p&gt;Show help message:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;root@v1:~# acme.sh -h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;2. Just issue a cert&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt; Single domain.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -d example.com -w /home/wwwroot/example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -d example.com -w /home/username/public_html
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -d example.com -w /var/www/html
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt; Multiple domains in the same cert.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -d example.com -d www.example.com -d cp.example.com -w /home/wwwroot/example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The parameter &lt;code&gt;/home/wwwroot/example.com&lt;/code&gt; or &lt;code&gt;/home/username/public_html&lt;/code&gt; or &lt;code&gt;/var/www/html&lt;/code&gt; is the web root folder where you host your website files. You &lt;strong&gt;MUST&lt;/strong&gt; have &lt;code&gt;write access&lt;/code&gt; to this folder.&lt;/p&gt; 
&lt;p&gt;Second argument &lt;strong&gt;&quot;example.com&quot;&lt;/strong&gt; is the main domain you want to issue the cert for. You must have at least one domain there.&lt;/p&gt; 
&lt;p&gt;You must point and bind all the domains to the same webroot dir: &lt;code&gt;/home/wwwroot/example.com&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The certs will be placed in &lt;code&gt;~/.acme.sh/example.com/&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The certs will be renewed automatically every &lt;strong&gt;60&lt;/strong&gt; days.&lt;/p&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;3. Install the cert to Apache/Nginx etc.&lt;/h1&gt; 
&lt;p&gt;After the cert is generated, you probably want to install/copy the cert to your Apache/Nginx or other servers. You &lt;strong&gt;MUST&lt;/strong&gt; use this command to copy the certs to the target files, &lt;strong&gt;DO NOT&lt;/strong&gt; use the certs files in &lt;strong&gt;~/.acme.sh/&lt;/strong&gt; folder, they are for internal use only, the folder structure may change in the future.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Apache&lt;/strong&gt; example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --install-cert -d example.com \
--cert-file      /path/to/certfile/in/apache/cert.pem  \
--key-file       /path/to/keyfile/in/apache/key.pem  \
--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \
--reloadcmd     &quot;service apache2 force-reload&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Nginx&lt;/strong&gt; example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --install-cert -d example.com \
--key-file       /path/to/keyfile/in/nginx/key.pem  \
--fullchain-file /path/to/fullchain/nginx/cert.pem \
--reloadcmd     &quot;service nginx force-reload&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Only the domain is required, all the other parameters are optional.&lt;/p&gt; 
&lt;p&gt;The ownership and permission info of existing files are preserved. You can pre-create the files to define the ownership and permission.&lt;/p&gt; 
&lt;p&gt;Install/copy the cert/key to the production Apache or Nginx path.&lt;/p&gt; 
&lt;p&gt;The cert will be renewed every &lt;strong&gt;60&lt;/strong&gt; days by default (which is configurable). Once the cert is renewed, the Apache/Nginx service will be reloaded automatically by the command: &lt;code&gt;service apache2 force-reload&lt;/code&gt; or &lt;code&gt;service nginx force-reload&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please take care: The reloadcmd is very important. The cert can be automatically renewed, but, without a correct &#39;reloadcmd&#39; the cert may not be flushed to your server(like nginx or apache), then your website will not be able to show renewed cert in 60 days.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;4. Use Standalone server to issue cert&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer or have permission to listen on port 80 (TCP))&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Port &lt;code&gt;80&lt;/code&gt; (TCP) &lt;strong&gt;MUST&lt;/strong&gt; be free to listen on, otherwise you will be prompted to free it and try again.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue --standalone -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;5. Use Standalone ssl server to issue cert&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer or have permission to listen on port 443 (TCP))&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Port &lt;code&gt;443&lt;/code&gt; (TCP) &lt;strong&gt;MUST&lt;/strong&gt; be free to listen on, otherwise you will be prompted to free it and try again.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue --alpn -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;6. Use Apache mode&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer, since it is required to interact with Apache server)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you are running a web server, it is recommended to use the &lt;code&gt;Webroot mode&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Particularly, if you are running an Apache server, you can use Apache mode instead. This mode doesn&#39;t write any files to your web root folder.&lt;/p&gt; 
&lt;p&gt;Just set string &quot;apache&quot; as the second argument and it will force use of apache plugin automatically.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --issue --apache -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;This apache mode is only to issue the cert, it will not change your apache config files. You will need to configure your website config files to use the cert by yourself. We don&#39;t want to mess with your apache server, don&#39;t worry.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;7. Use Nginx mode&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer, since it is required to interact with Nginx server)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you are running a web server, it is recommended to use the &lt;code&gt;Webroot mode&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Particularly, if you are running an nginx server, you can use nginx mode instead. This mode doesn&#39;t write any files to your web root folder.&lt;/p&gt; 
&lt;p&gt;Just set string &quot;nginx&quot; as the second argument.&lt;/p&gt; 
&lt;p&gt;It will configure nginx server automatically to verify the domain and then restore the nginx config to the original version.&lt;/p&gt; 
&lt;p&gt;So, the config is not changed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --issue --nginx -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;This nginx mode is only to issue the cert, it will not change your nginx config files. You will need to configure your website config files to use the cert by yourself. We don&#39;t want to mess with your nginx server, don&#39;t worry.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;8. Automatic DNS API integration&lt;/h1&gt; 
&lt;p&gt;If your DNS provider supports API access, we can use that API to automatically issue the certs.&lt;/p&gt; 
&lt;p&gt;You don&#39;t have to do anything manually!&lt;/p&gt; 
&lt;h3&gt;Currently acme.sh supports most of the dns providers:&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;9. Use DNS manual mode:&lt;/h1&gt; 
&lt;p&gt;See: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode&lt;/a&gt; first.&lt;/p&gt; 
&lt;p&gt;If your dns provider doesn&#39;t support any api access, you can add the txt record by hand.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue --dns -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should get an output like below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Add the following txt record:
Domain:_acme-challenge.example.com
Txt value:9ihDbjYfTExAYeDs4DBUeuTo18KBzwvTEjUnSwd32-c

Add the following txt record:
Domain:_acme-challenge.www.example.com
Txt value:9ihDbjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Please add those txt records to the domains. Waiting for the dns to take effect.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then just rerun with &lt;code&gt;renew&lt;/code&gt; argument:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --renew -d example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ok, it&#39;s done.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Take care, this is dns manual mode, it can not be renewed automatically. you will have to add a new txt record to your domain by your hand when you renew your cert.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please use dns api mode instead.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;10. Issue ECC certificates&lt;/h1&gt; 
&lt;p&gt;Just set the &lt;code&gt;keylength&lt;/code&gt; parameter with a prefix &lt;code&gt;ec-&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;h3&gt;Single domain ECC certificate&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -w /home/wwwroot/example.com -d example.com --keylength ec-256
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SAN multi domain ECC certificate&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -w /home/wwwroot/example.com -d example.com -d www.example.com --keylength ec-256
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please look at the &lt;code&gt;keylength&lt;/code&gt; parameter above.&lt;/p&gt; 
&lt;p&gt;Valid values are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ec-256 (prime256v1, &quot;ECDSA P-256&quot;, which is the default key type)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ec-384 (secp384r1, &quot;ECDSA P-384&quot;)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ec-521 (secp521r1, &quot;ECDSA P-521&quot;, which is not supported by Let&#39;s Encrypt yet.)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2048 (RSA2048)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;3072 (RSA3072)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4096 (RSA4096)&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;11. Issue Wildcard certificates&lt;/h1&gt; 
&lt;p&gt;It&#39;s simple, just give a wildcard domain as the &lt;code&gt;-d&lt;/code&gt; parameter.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh  --issue -d example.com  -d &#39;*.example.com&#39;  --dns dns_cf
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;12. How to renew the certs&lt;/h1&gt; 
&lt;p&gt;No, you don&#39;t need to renew the certs manually. All the certs will be renewed automatically every &lt;strong&gt;60&lt;/strong&gt; days.&lt;/p&gt; 
&lt;p&gt;However, you can also force to renew a cert:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --renew -d example.com --force
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, for ECC cert:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --renew -d example.com --force --ecc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;13. How to stop cert renewal&lt;/h1&gt; 
&lt;p&gt;To stop renewal of a cert, you can execute the following to remove the cert from the renewal list:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --remove -d example.com [--ecc]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The cert/key file is not removed from the disk.&lt;/p&gt; 
&lt;p&gt;You can remove the respective directory (e.g. &lt;code&gt;~/.acme.sh/example.com&lt;/code&gt;) by yourself.&lt;/p&gt; 
&lt;h1&gt;14. How to upgrade &lt;code&gt;acme.sh&lt;/code&gt;&lt;/h1&gt; 
&lt;p&gt;acme.sh is in constant development, so it&#39;s strongly recommended to use the latest code.&lt;/p&gt; 
&lt;p&gt;You can update acme.sh to the latest code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --upgrade
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also enable auto upgrade:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --upgrade --auto-upgrade
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then &lt;strong&gt;acme.sh&lt;/strong&gt; will be kept up to date automatically.&lt;/p&gt; 
&lt;p&gt;Disable auto upgrade:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --upgrade --auto-upgrade 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;15. Issue a cert from an existing CSR&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Issue-a-cert-from-existing-CSR&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/Issue-a-cert-from-existing-CSR&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;16. Send notifications in cronjob&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/notify&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/notify&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;17. Under the Hood&lt;/h1&gt; 
&lt;p&gt;Speak ACME language using shell, directly to &quot;Let&#39;s Encrypt&quot;.&lt;/p&gt; 
&lt;p&gt;TODO:&lt;/p&gt; 
&lt;h1&gt;18. Acknowledgments&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;Acme-tiny: &lt;a href=&quot;https://github.com/diafygi/acme-tiny&quot;&gt;https://github.com/diafygi/acme-tiny&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ACME protocol: &lt;a href=&quot;https://github.com/ietf-wg-acme/acme&quot;&gt;https://github.com/ietf-wg-acme/acme&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;h3&gt;Code Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Financial Contributors&lt;/h3&gt; 
&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&quot;https://opencollective.com/acmesh/contribute&quot;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;h4&gt;Individuals&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/acmesh&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/individuals.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Organizations&lt;/h4&gt; 
&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/acmesh/contribute&quot;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/acmesh/organization/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;19. License &amp;amp; Others&lt;/h1&gt; 
&lt;p&gt;License is GPLv3&lt;/p&gt; 
&lt;p&gt;Please Star and Fork me.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/issues&quot;&gt;Issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/pulls&quot;&gt;pull requests&lt;/a&gt; are welcome.&lt;/p&gt; 
&lt;h1&gt;20. Donate&lt;/h1&gt; 
&lt;p&gt;Your donation makes &lt;strong&gt;acme.sh&lt;/strong&gt; better:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;PayPal/Alipay(支付宝)/Wechat(微信): &lt;a href=&quot;https://donate.acme.sh/&quot;&gt;https://donate.acme.sh/&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Donate-list&quot;&gt;Donate List&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nelvko/clash-for-linux-install</title>
      <link>https://github.com/nelvko/clash-for-linux-install</link>
      <description>&lt;p&gt;😼 优雅地部署基于 clash/mihomo 的代理环境&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linux 一键安装 Clash&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nelvko/clash-for-linux-install/master/resources/preview.png&quot; alt=&quot;preview&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;默认安装 &lt;code&gt;mihomo&lt;/code&gt; 内核，&lt;a href=&quot;https://github.com/nelvko/clash-for-linux-install/wiki/FAQ#%E5%AE%89%E8%A3%85-clash-%E5%86%85%E6%A0%B8&quot;&gt;可选安装&lt;/a&gt; &lt;code&gt;clash&lt;/code&gt;。&lt;/li&gt; 
 &lt;li&gt;自动进行本地订阅转换。&lt;/li&gt; 
 &lt;li&gt;多架构支持，适配主流 &lt;code&gt;Linux&lt;/code&gt; 发行版：&lt;code&gt;CentOS 7.6&lt;/code&gt;、&lt;code&gt;Debian 12&lt;/code&gt;、&lt;code&gt;Ubuntu 24.04.1 LTS&lt;/code&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;h3&gt;环境要求&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;需要 &lt;code&gt;root&lt;/code&gt; 或 &lt;code&gt;sudo&lt;/code&gt; 权限。&lt;/li&gt; 
 &lt;li&gt;具备 &lt;code&gt;bash&lt;/code&gt; 和 &lt;code&gt;systemd&lt;/code&gt; 的系统环境。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;一键安装&lt;/h3&gt; 
&lt;p&gt;下述命令适用于 &lt;code&gt;x86_64&lt;/code&gt; 架构，其他架构请戳：&lt;a href=&quot;https://github.com/nelvko/clash-for-linux-install/wiki#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85-%E5%A4%9A%E6%9E%B6%E6%9E%84&quot;&gt;一键安装-多架构&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone --branch master --depth 1 https://gh-proxy.com/https://github.com/nelvko/clash-for-linux-install.git \
  &amp;amp;&amp;amp; cd clash-for-linux-install \
  &amp;amp;&amp;amp; sudo bash -c &#39;. install.sh; exec bash&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如遇问题，请在查阅&lt;a href=&quot;https://github.com/nelvko/clash-for-linux-install/wiki/FAQ&quot;&gt;常见问题&lt;/a&gt;及 &lt;a href=&quot;https://github.com/nelvko/clash-for-linux-install/issues?q=is%3Aissue&quot;&gt;issue&lt;/a&gt; 未果后进行反馈。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;上述克隆命令使用了&lt;a href=&quot;https://gh-proxy.com/&quot;&gt;加速前缀&lt;/a&gt;，如失效请更换其他&lt;a href=&quot;https://ghproxy.link/&quot;&gt;可用链接&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;默认通过远程订阅获取配置进行安装，本地配置安装详见：&lt;a href=&quot;https://github.com/nelvko/clash-for-linux-install/issues/39&quot;&gt;issue#39&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;没有订阅？&lt;a href=&quot;https://%E6%AC%A1%E5%85%83.net/auth/register?code=oUbI&quot;&gt;click me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;验证是否连通外网：&lt;code&gt;wget www.google.com&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;命令一览&lt;/h3&gt; 
&lt;p&gt;执行 &lt;code&gt;clash&lt;/code&gt; 列出开箱即用的快捷命令。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ clash
Usage:
    clash                    命令一览
    clashon                  开启代理
    clashoff                 关闭代理
    clashui                  面板地址
    clashstatus              内核状况
    clashtun     [on|off]    Tun 模式
    clashmixin   [-e|-r]     Mixin 配置
    clashsecret  [secret]    Web 密钥
    clashupdate  [auto|log]  更新订阅
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;开始使用&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ clashoff
😼 已关闭代理环境

$ clashon
😼 已开启代理环境

$ clashui
😼 Web 控制台...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;原理：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用 &lt;code&gt;systemctl&lt;/code&gt; 控制 &lt;code&gt;clash&lt;/code&gt; 启停，并调整代理环境变量的值（http_proxy 等）。应用程序在发起网络请求时，会通过其指定的代理地址转发流量，不调整会造成：关闭代理但未卸载代理变量导致仍转发请求、开启代理后未设置代理地址导致请求不转发。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;clashon&lt;/code&gt; 等命令封装了上述流程。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;定时更新订阅&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ clashupdate https://example.com
👌 备份配置：/opt/clash/config.yaml.bak
🍃 下载成功：内核验证配置...
🍃 订阅更新成功

$ clashupdate auto [url]
😼 定时任务设置成功

$ clashupdate log
✅ [2025-02-23 22:45:23] 订阅更新成功：https://example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;clashupdate&lt;/code&gt; 会记忆安装和更新成功时的订阅，后续执行无需再指定订阅 &lt;code&gt;url&lt;/code&gt;。&lt;/li&gt; 
 &lt;li&gt;可通过 &lt;code&gt;crontab -e&lt;/code&gt; 修改定时更新频率及订阅链接。&lt;/li&gt; 
 &lt;li&gt;通过配置文件进行更新：&lt;a href=&quot;https://github.com/nelvko/clash-for-linux-install/pull/24#issuecomment-2565054701&quot;&gt;pr#24&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Web 控制台密钥&lt;/h3&gt; 
&lt;p&gt;控制台密钥默认为空，若暴露到公网使用建议更新密钥。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ clashsecret 666
😼 密钥更新成功，已重启生效

$ clashsecret
😼 当前密钥：666
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;Tun&lt;/code&gt; 模式&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ clashtun
😾 Tun 状态：关闭

$ clashtun on
😼 Tun 模式已开启
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;作用：实现本机及 &lt;code&gt;Docker&lt;/code&gt; 等容器的所有流量路由到 &lt;code&gt;clash&lt;/code&gt; 代理、DNS 劫持等。&lt;/li&gt; 
 &lt;li&gt;原理：&lt;a href=&quot;https://www.clashverge.dev/guide/term.html#tun&quot;&gt;clash-verge-rev&lt;/a&gt;、 &lt;a href=&quot;https://clash.wiki/premium/tun-device.html&quot;&gt;clash.wiki&lt;/a&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;Mixin&lt;/code&gt; 配置&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ clashmixin
😼 查看 mixin 配置（less）

$ clashmixin -e
😼 编辑 mixin 配置（vim）

$ clashmixin -r
😼 查看 运行时 配置（less）
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;作用：用来存储自定义配置，防止更新订阅后覆盖丢失自定义配置内容。&lt;/li&gt; 
 &lt;li&gt;运行时配置是订阅配置和 &lt;code&gt;Mixin&lt;/code&gt; 配置的并集。&lt;/li&gt; 
 &lt;li&gt;相同配置项优先级：&lt;code&gt;Mixin&lt;/code&gt; 配置 &amp;gt; 订阅配置。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;卸载&lt;/h3&gt; 
&lt;p&gt;以下为通用命令，&lt;code&gt;root&lt;/code&gt; 用户可直接使用： &lt;code&gt;. uninstall.sh&lt;/code&gt;。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo bash -c &#39;. uninstall.sh; exec bash&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;引用&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clash.wiki/&quot;&gt;Clash 知识库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clash.la/releases/&quot;&gt;Clash 家族下载&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://downloads.clash.wiki/ClashPremium/&quot;&gt;Clash Premium 2023.08.17&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MetaCubeX/mihomo&quot;&gt;mihomo v1.19.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tindy2013/subconverter&quot;&gt;subconverter v0.9.0：本地订阅转换&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/haishanh/yacd&quot;&gt;yacd v0.3.8：Web 控制台&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mikefarah/yq&quot;&gt;yq v4.45.1：处理 yaml&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/TrackRay&quot;&gt;@鑫哥&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特别声明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;编写本项目主要目的为学习和研究 &lt;code&gt;Shell&lt;/code&gt; 编程，不得将本项目中任何内容用于违反国家/地区/组织等的法律法规或相关规定的其他用途。&lt;/li&gt; 
 &lt;li&gt;本项目保留随时对免责声明进行补充或更改的权利，直接或间接使用本项目内容的个人或组织，视为接受本项目的特别声明。&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>ohmyzsh/ohmyzsh</title>
      <link>https://github.com/ohmyzsh/ohmyzsh</link>
      <description>&lt;p&gt;🙃 A delightful community-driven (with 2,400+ contributors) framework for managing your zsh configuration. Includes 300+ optional plugins (rails, git, macOS, hub, docker, homebrew, node, php, python, etc), 140+ themes to spice up your morning, and an auto-update tool that makes it easy to keep up with the latest updates from the community.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://ohmyzsh.s3.amazonaws.com/omz-ansi-github.png&quot; alt=&quot;Oh My Zsh&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Oh My Zsh is an open source, community-driven framework for managing your &lt;a href=&quot;https://www.zsh.org/&quot;&gt;zsh&lt;/a&gt; configuration.&lt;/p&gt; 
&lt;p&gt;Sounds boring. Let&#39;s try again.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Oh My Zsh will not make you a 10x developer...but you may feel like one.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Once installed, your terminal shell will become the talk of the town &lt;em&gt;or your money back!&lt;/em&gt; With each keystroke in your command prompt, you&#39;ll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in cafés and ask you, &lt;em&gt;&quot;that is amazing! are you some sort of genius?&quot;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Finally, you&#39;ll begin to get the sort of attention that you have always felt you deserved. ...or maybe you&#39;ll use the time that you&#39;re saving to start flossing more often. 😬&lt;/p&gt; 
&lt;p&gt;To learn more, visit &lt;a href=&quot;https://ohmyz.sh&quot;&gt;ohmyz.sh&lt;/a&gt;, follow &lt;a href=&quot;https://x.com/ohmyzsh&quot;&gt;@ohmyzsh&lt;/a&gt; on X (formerly Twitter), and join us on &lt;a href=&quot;https://discord.gg/ohmyzsh&quot;&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/actions?query=workflow%3ACI&quot;&gt;&lt;img src=&quot;https://github.com/ohmyzsh/ohmyzsh/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=ohmyzsh&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/ohmyzsh?label=%40ohmyzsh&amp;amp;logo=x&amp;amp;style=flat&quot; alt=&quot;X (formerly Twitter) Follow&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://mstdn.social/@ohmyzsh&quot;&gt;&lt;img src=&quot;https://img.shields.io/mastodon/follow/111169632522566717?label=%40ohmyzsh&amp;amp;domain=https%3A%2F%2Fmstdn.social&amp;amp;logo=mastodon&amp;amp;style=flat&quot; alt=&quot;Mastodon Follow&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/ohmyzsh&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/642496866407284746&quot; alt=&quot;Discord server&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitpod.io/#https://github.com/ohmyzsh/ohmyzsh&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-ready-blue?logo=gitpod&quot; alt=&quot;Gitpod ready&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Table of Contents&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#getting-started&quot;&gt;Getting Started&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#operating-system-compatibility&quot;&gt;Operating System Compatibility&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#basic-installation&quot;&gt;Basic Installation&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-inspection&quot;&gt;Manual Inspection&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#using-oh-my-zsh&quot;&gt;Using Oh My Zsh&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#plugins&quot;&gt;Plugins&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#enabling-plugins&quot;&gt;Enabling Plugins&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#using-plugins&quot;&gt;Using Plugins&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#themes&quot;&gt;Themes&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#selecting-a-theme&quot;&gt;Selecting A Theme&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#advanced-topics&quot;&gt;Advanced Topics&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#advanced-installation&quot;&gt;Advanced Installation&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#custom-directory&quot;&gt;Custom Directory&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#unattended-install&quot;&gt;Unattended Install&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#installing-from-a-forked-repository&quot;&gt;Installing From A Forked Repository&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-installation&quot;&gt;Manual Installation&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#installation-problems&quot;&gt;Installation Problems&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#custom-plugins-and-themes&quot;&gt;Custom Plugins And Themes&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#enable-gnu-ls-in-macos-and-freebsd-systems&quot;&gt;Enable GNU ls In macOS And freeBSD Systems&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#skip-aliases&quot;&gt;Skip Aliases&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#async-git-prompt&quot;&gt;Async git prompt&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#getting-updates&quot;&gt;Getting Updates&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#updates-verbosity&quot;&gt;Updates Verbosity&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-updates&quot;&gt;Manual Updates&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#uninstalling-oh-my-zsh&quot;&gt;Uninstalling Oh My Zsh&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#how-do-i-contribute-to-oh-my-zsh&quot;&gt;How Do I Contribute To Oh My Zsh?&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#do-not-send-us-themes&quot;&gt;Do Not Send Us Themes&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#follow-us&quot;&gt;Follow Us&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#merchandise&quot;&gt;Merchandise&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#about-planet-argon&quot;&gt;About Planet Argon&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Operating System Compatibility&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;O/S&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Android&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;freeBSD&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;LCARS&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🛸&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Linux&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;macOS&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;OS/2 Warp&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Windows (WSL2)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zsh.org&quot;&gt;Zsh&lt;/a&gt; should be installed (v4.3.9 or more recent is fine but we prefer 5.0.8 and newer). If not pre-installed (run &lt;code&gt;zsh --version&lt;/code&gt; to confirm), check the following wiki instructions here: &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH&quot;&gt;Installing ZSH&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;wget&lt;/code&gt; should be installed&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git&lt;/code&gt; should be installed (recommended v2.4.11 or higher)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Basic Installation&lt;/h3&gt; 
&lt;p&gt;Oh My Zsh is installed by running one of the following commands in your terminal. You can install this via the command-line with either &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;wget&lt;/code&gt; or another similar tool.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Method&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;wget&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;fetch&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(fetch -o - https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Alternatively, the installer is also mirrored outside GitHub. Using this URL instead may be required if you&#39;re in a country like China or India (for certain ISPs), that blocks &lt;code&gt;raw.githubusercontent.com&lt;/code&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Method&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(curl -fsSL https://install.ohmyz.sh/)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;wget&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(wget -O- https://install.ohmyz.sh/)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;fetch&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(fetch -o - https://install.ohmyz.sh/)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;em&gt;Note that any previous &lt;code&gt;.zshrc&lt;/code&gt; will be renamed to &lt;code&gt;.zshrc.pre-oh-my-zsh&lt;/code&gt;. After installation, you can move the configuration you want to preserve into the new &lt;code&gt;.zshrc&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Manual Inspection&lt;/h4&gt; 
&lt;p&gt;It&#39;s a good idea to inspect the install script from projects you don&#39;t yet know. You can do that by downloading the install script first, looking through it so everything looks normal, then running it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
sh install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the above URL times out or otherwise fails, you may have to substitute the URL for &lt;code&gt;https://install.ohmyz.sh&lt;/code&gt; to be able to get the script.&lt;/p&gt; 
&lt;h2&gt;Using Oh My Zsh&lt;/h2&gt; 
&lt;h3&gt;Plugins&lt;/h3&gt; 
&lt;p&gt;Oh My Zsh comes with a shitload of plugins for you to take advantage of. You can take a look in the &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins&quot;&gt;plugins&lt;/a&gt; directory and/or the &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins&quot;&gt;wiki&lt;/a&gt; to see what&#39;s currently available.&lt;/p&gt; 
&lt;h4&gt;Enabling Plugins&lt;/h4&gt; 
&lt;p&gt;Once you spot a plugin (or several) that you&#39;d like to use with Oh My Zsh, you&#39;ll need to enable them in the &lt;code&gt;.zshrc&lt;/code&gt; file. You&#39;ll find the zshrc file in your &lt;code&gt;$HOME&lt;/code&gt; directory. Open it with your favorite text editor and you&#39;ll see a spot to list all the plugins you want to load.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;vi ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, this might begin to look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;plugins=(
  git
  bundler
  dotenv
  macos
  rake
  rbenv
  ruby
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note that the plugins are separated by whitespace (spaces, tabs, new lines...). &lt;strong&gt;Do not&lt;/strong&gt; use commas between them or it will break.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Using Plugins&lt;/h4&gt; 
&lt;p&gt;Each built-in plugin includes a &lt;strong&gt;README&lt;/strong&gt;, documenting it. This README should show the aliases (if the plugin adds any) and extra goodies that are included in that particular plugin.&lt;/p&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;We&#39;ll admit it. Early in the Oh My Zsh world, we may have gotten a bit too theme happy. We have over one hundred and fifty themes now bundled. Most of them have &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/Themes&quot;&gt;screenshots&lt;/a&gt; on the wiki (We are working on updating this!). Check them out!&lt;/p&gt; 
&lt;h4&gt;Selecting A Theme&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Robby&#39;s theme is the default one. It&#39;s not the fanciest one. It&#39;s not the simplest one. It&#39;s just the right one (for him).&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Once you find a theme that you&#39;d like to use, you will need to edit the &lt;code&gt;~/.zshrc&lt;/code&gt; file. You&#39;ll see an environment variable (all caps) in there that looks like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME=&quot;robbyrussell&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use a different theme, simply change the value to match the name of your desired theme. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME=&quot;agnoster&quot; # (this is one of the fancy ones)
# see https://github.com/ohmyzsh/ohmyzsh/wiki/Themes#agnoster
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You will many times see screenshots for a zsh theme, and try it out, and find that it doesn&#39;t look the same for you.&lt;/p&gt; 
 &lt;p&gt;This is because many themes require installing a &lt;a href=&quot;https://github.com/powerline/fonts&quot;&gt;Powerline Font&lt;/a&gt; or a &lt;a href=&quot;https://github.com/ryanoasis/nerd-fonts&quot;&gt;Nerd Font&lt;/a&gt; in order to render properly. Without them, these themes will render weird prompt symbols. Check out &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ#i-have-a-weird-character-in-my-prompt&quot;&gt;the FAQ&lt;/a&gt; for more information.&lt;/p&gt; 
 &lt;p&gt;Also, beware that themes only control what your prompt looks like. This is, the text you see before or after your cursor, where you&#39;ll type your commands. Themes don&#39;t control things such as the colors of your terminal window (known as &lt;em&gt;color scheme&lt;/em&gt;) or the font of your terminal. These are settings that you can change in your terminal emulator. For more information, see &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ#what-is-a-zsh-theme&quot;&gt;what is a zsh theme&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;p&gt;Open up a new terminal window and your prompt should look something like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png&quot; alt=&quot;Agnoster theme&quot;&gt;&lt;/p&gt; 
&lt;p&gt;In case you did not find a suitable theme for your needs, please have a look at the wiki for &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes&quot;&gt;more of them&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you&#39;re feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME=&quot;random&quot; # (...please let it be pie... please be some pie..)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And if you want to pick random theme from a list of your favorite themes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME_RANDOM_CANDIDATES=(
  &quot;robbyrussell&quot;
  &quot;agnoster&quot;
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you only know which themes you don&#39;t like, you can add them similarly to an ignored list:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME_RANDOM_IGNORED=(pygmalion tjkirch_mod)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;p&gt;If you have some more questions or issues, you might find a solution in our &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Advanced Topics&lt;/h2&gt; 
&lt;p&gt;If you&#39;re the type that likes to get their hands dirty, these sections might resonate.&lt;/p&gt; 
&lt;h3&gt;Advanced Installation&lt;/h3&gt; 
&lt;p&gt;Some users may want to manually install Oh My Zsh, or change the default path or other settings that the installer accepts (these settings are also documented at the top of the install script).&lt;/p&gt; 
&lt;h4&gt;Custom Directory&lt;/h4&gt; 
&lt;p&gt;The default location is &lt;code&gt;~/.oh-my-zsh&lt;/code&gt; (hidden in your home directory, you can access it with &lt;code&gt;cd ~/.oh-my-zsh&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;If you&#39;d like to change the install directory with the &lt;code&gt;ZSH&lt;/code&gt; environment variable, either by running &lt;code&gt;export ZSH=/your/path&lt;/code&gt; before installing, or by setting it before the end of the install pipeline like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH=&quot;$HOME/.dotfiles/oh-my-zsh&quot; sh install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Unattended Install&lt;/h4&gt; 
&lt;p&gt;If you&#39;re running the Oh My Zsh install script as part of an automated install, you can pass the &lt;code&gt;--unattended&lt;/code&gt; flag to the &lt;code&gt;install.sh&lt;/code&gt; script. This will have the effect of not trying to change the default shell, and it also won&#39;t run &lt;code&gt;zsh&lt;/code&gt; when the installation has finished.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot; &quot;&quot; --unattended
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;re in China, India, or another country that blocks &lt;code&gt;raw.githubusercontent.com&lt;/code&gt;, you may have to substitute the URL for &lt;code&gt;https://install.ohmyz.sh&lt;/code&gt; for it to install.&lt;/p&gt; 
&lt;h4&gt;Installing From A Forked Repository&lt;/h4&gt; 
&lt;p&gt;The install script also accepts these variables to allow the installation of a different repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;REPO&lt;/code&gt; (default: &lt;code&gt;ohmyzsh/ohmyzsh&lt;/code&gt;): this takes the form of &lt;code&gt;owner/repository&lt;/code&gt;. If you set this variable, the installer will look for a repository at &lt;code&gt;https://github.com/{owner}/{repository}&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;REMOTE&lt;/code&gt; (default: &lt;code&gt;https://github.com/${REPO}.git&lt;/code&gt;): this is the full URL of the git repository clone. You can use this setting if you want to install from a fork that is not on GitHub (GitLab, Bitbucket...) or if you want to clone with SSH instead of HTTPS (&lt;code&gt;git@github.com:user/project.git&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;&lt;em&gt;NOTE: it&#39;s incompatible with setting the &lt;code&gt;REPO&lt;/code&gt; variable. This setting will take precedence.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;BRANCH&lt;/code&gt; (default: &lt;code&gt;master&lt;/code&gt;): you can use this setting if you want to change the default branch to be checked out when cloning the repository. This might be useful for testing a Pull Request, or if you want to use a branch other than &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;REPO=apjanke/oh-my-zsh BRANCH=edge sh install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Manual Installation&lt;/h4&gt; 
&lt;h5&gt;1. Clone The Repository 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;2. &lt;em&gt;Optionally&lt;/em&gt;, Backup Your Existing &lt;code&gt;~/.zshrc&lt;/code&gt; File 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cp ~/.zshrc ~/.zshrc.orig
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;3. Create A New Zsh Configuration File 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;p&gt;You can create a new zsh config file by copying the template that we have included for you.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;4. Change Your Default Shell 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;chsh -s $(which zsh)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You must log out from your user session and log back in to see this change.&lt;/p&gt; 
&lt;h5&gt;5. Initialize Your New Zsh Configuration 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;p&gt;Once you open up a new terminal window, it should load zsh with Oh My Zsh&#39;s configuration.&lt;/p&gt; 
&lt;h3&gt;Installation Problems&lt;/h3&gt; 
&lt;p&gt;If you have any hiccups installing, here are a few common fixes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You &lt;em&gt;might&lt;/em&gt; need to modify your &lt;code&gt;PATH&lt;/code&gt; in &lt;code&gt;~/.zshrc&lt;/code&gt; if you&#39;re not able to find some commands after switching to &lt;code&gt;oh-my-zsh&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If you installed manually or changed the install location, check the &lt;code&gt;ZSH&lt;/code&gt; environment variable in &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Custom Plugins And Themes&lt;/h3&gt; 
&lt;p&gt;If you want to override any of the default behaviors, just add a new file (ending in &lt;code&gt;.zsh&lt;/code&gt;) in the &lt;code&gt;custom/&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;If you have many functions that go well together, you can put them as a &lt;code&gt;XYZ.plugin.zsh&lt;/code&gt; file in the &lt;code&gt;custom/plugins/&lt;/code&gt; directory and then enable this plugin.&lt;/p&gt; 
&lt;p&gt;If you would like to override the functionality of a plugin distributed with Oh My Zsh, create a plugin of the same name in the &lt;code&gt;custom/plugins/&lt;/code&gt; directory and it will be loaded instead of the one in &lt;code&gt;plugins/&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Enable GNU ls In macOS And freeBSD Systems&lt;/h3&gt; 
&lt;p&gt;&lt;a name=&quot;enable-gnu-ls&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The default behaviour in Oh My Zsh is to use BSD &lt;code&gt;ls&lt;/code&gt; in macOS and FreeBSD systems. If GNU &lt;code&gt;ls&lt;/code&gt; is installed (as &lt;code&gt;gls&lt;/code&gt; command), you can choose to use it instead. To do it, you can use zstyle-based config before sourcing &lt;code&gt;oh-my-zsh.sh&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;zstyle &#39;:omz:lib:theme-and-appearance&#39; gnu-ls yes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: this is not compatible with &lt;code&gt;DISABLE_LS_COLORS=true&lt;/code&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Skip Aliases&lt;/h3&gt; 
&lt;p&gt;&lt;a name=&quot;remove-directories-aliases&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you want to skip default Oh My Zsh aliases (those defined in &lt;code&gt;lib/*&lt;/code&gt; files) or plugin aliases, you can use the settings below in your &lt;code&gt;~/.zshrc&lt;/code&gt; file, &lt;strong&gt;before Oh My Zsh is loaded&lt;/strong&gt;. Note that there are many different ways to skip aliases, depending on your needs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Skip all aliases, in lib files and enabled plugins
zstyle &#39;:omz:*&#39; aliases no

# Skip all aliases in lib files
zstyle &#39;:omz:lib:*&#39; aliases no
# Skip only aliases defined in the directories.zsh lib file
zstyle &#39;:omz:lib:directories&#39; aliases no

# Skip all plugin aliases
zstyle &#39;:omz:plugins:*&#39; aliases no
# Skip only the aliases from the git plugin
zstyle &#39;:omz:plugins:git&#39; aliases no
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can combine these in other ways taking into account that more specific scopes take precedence:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Skip all plugin aliases, except for the git plugin
zstyle &#39;:omz:plugins:*&#39; aliases no
zstyle &#39;:omz:plugins:git&#39; aliases yes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A previous version of this feature was using the setting below, which has been removed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:directories&#39; aliases no
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Instead, you can now use the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:lib:directories&#39; aliases no
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Notice 
 &lt;!-- omit in toc --&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This feature is currently in a testing phase and it may be subject to change in the future. It is also not currently compatible with plugin managers such as zpm or zinit, which don&#39;t source the init script (&lt;code&gt;oh-my-zsh.sh&lt;/code&gt;) where this feature is implemented in.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It is also not currently aware of &quot;aliases&quot; that are defined as functions. Example of such are &lt;code&gt;gccd&lt;/code&gt;, &lt;code&gt;ggf&lt;/code&gt;, or &lt;code&gt;ggl&lt;/code&gt; functions from the git plugin.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Async git prompt&lt;/h3&gt; 
&lt;p&gt;Async prompt functions are an experimental feature (included on April 3, 2024) that allows Oh My Zsh to render prompt information asynchronously. This can improve prompt rendering performance, but it might not work well with some setups. We hope that&#39;s not an issue, but if you&#39;re seeing problems with this new feature, you can turn it off by setting the following in your .zshrc file, before Oh My Zsh is sourced:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:alpha:lib:git&#39; async-prompt no
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your problem is that the git prompt just stopped appearing, you can try to force it setting the following configuration before &lt;code&gt;oh-my-zsh.sh&lt;/code&gt; is sourced. If it still does not work, please open an issue with your case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:alpha:lib:git&#39; async-prompt force
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Updates&lt;/h2&gt; 
&lt;p&gt;By default, you will be prompted to check for updates every 2 weeks. You can choose other update modes by adding a line to your &lt;code&gt;~/.zshrc&lt;/code&gt; file, &lt;strong&gt;before Oh My Zsh is loaded&lt;/strong&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Automatic update without confirmation prompt:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:update&#39; mode auto
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Just offer a reminder every few days, if there are updates available:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:update&#39; mode reminder
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To disable automatic updates entirely:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:update&#39; mode disabled
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;NOTE: you can control how often Oh My Zsh checks for updates with the following setting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# This will check for updates every 7 days
zstyle &#39;:omz:update&#39; frequency 7
# This will check for updates every time you open the terminal (not recommended)
zstyle &#39;:omz:update&#39; frequency 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Updates Verbosity&lt;/h3&gt; 
&lt;p&gt;You can also limit the update verbosity with the following settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:update&#39; verbose default # default update prompt

zstyle &#39;:omz:update&#39; verbose minimal # only few lines

zstyle &#39;:omz:update&#39; verbose silent # only errors
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Updates&lt;/h3&gt; 
&lt;p&gt;If you&#39;d like to update at any point in time (maybe someone just released a new plugin and you don&#39;t want to wait a week?) you just need to run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;omz update
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you want to automate this process in a script, you should call directly the &lt;code&gt;upgrade&lt;/code&gt; script, like this:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ZSH/tools/upgrade.sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;See more options in the &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ#how-do-i-update-oh-my-zsh&quot;&gt;FAQ: How do I update Oh My Zsh?&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;USE OF &lt;code&gt;omz update --unattended&lt;/code&gt; HAS BEEN REMOVED, AS IT HAS SIDE EFFECTS&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Magic! 🎉&lt;/p&gt; 
&lt;h2&gt;Uninstalling Oh My Zsh&lt;/h2&gt; 
&lt;p&gt;Oh My Zsh isn&#39;t for everyone. We&#39;ll miss you, but we want to make this an easy breakup.&lt;/p&gt; 
&lt;p&gt;If you want to uninstall &lt;code&gt;oh-my-zsh&lt;/code&gt;, just run &lt;code&gt;uninstall_oh_my_zsh&lt;/code&gt; from the command-line. It will remove itself and revert your previous &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt; configuration.&lt;/p&gt; 
&lt;h2&gt;How Do I Contribute To Oh My Zsh?&lt;/h2&gt; 
&lt;p&gt;Before you participate in our delightful community, please read the &lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/CODE_OF_CONDUCT.md&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;I&#39;m far from being a &lt;a href=&quot;https://www.zsh.org/&quot;&gt;Zsh&lt;/a&gt; expert and suspect there are many ways to improve – if you have ideas on how to make the configuration easier to maintain (and faster), don&#39;t hesitate to fork and send pull requests!&lt;/p&gt; 
&lt;p&gt;We also need people to test out pull requests. So take a look through &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/issues&quot;&gt;the open issues&lt;/a&gt; and help where you can.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Do Not Send Us Themes&lt;/h3&gt; 
&lt;p&gt;We have (more than) enough themes for the time being. Please add your theme to the &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes&quot;&gt;external themes&lt;/a&gt; wiki page.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Oh My Zsh has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn&#39;t be so awesome.&lt;/p&gt; 
&lt;p&gt;Thank you so much!&lt;/p&gt; 
&lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=ohmyzsh/ohmyzsh&quot; width=&quot;100%&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;Follow Us&lt;/h2&gt; 
&lt;p&gt;We&#39;re on social media:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://x.com/ohmyzsh&quot;&gt;@ohmyzsh&lt;/a&gt; on X (formerly Twitter). You should follow it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/Oh-My-Zsh-296616263819290/&quot;&gt;Facebook&lt;/a&gt; poke us.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.instagram.com/_ohmyzsh/&quot;&gt;Instagram&lt;/a&gt; tag us in your post showing Oh My Zsh!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/ohmyzsh&quot;&gt;Discord&lt;/a&gt; to chat with us!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Merchandise&lt;/h2&gt; 
&lt;p&gt;We have &lt;a href=&quot;https://shop.planetargon.com/collections/oh-my-zsh?utm_source=github&quot;&gt;stickers, shirts, and coffee mugs available&lt;/a&gt; for you to show off your love of Oh My Zsh. Again, you will become the talk of the town!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Oh My Zsh is released under the &lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;About Planet Argon&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://pa-github-assets.s3.amazonaws.com/PARGON_logo_digital_COL-small.jpg&quot; alt=&quot;Planet Argon&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Oh My Zsh was started by the team at &lt;a href=&quot;https://www.planetargon.com/?utm_source=github&quot;&gt;Planet Argon&lt;/a&gt;, a &lt;a href=&quot;https://www.planetargon.com/services/ruby-on-rails-development?utm_source=github&quot;&gt;Ruby on Rails development agency&lt;/a&gt;. Check out our &lt;a href=&quot;https://www.planetargon.com/open-source?utm_source=github&quot;&gt;other open source projects&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>geerlingguy/mac-dev-playbook</title>
      <link>https://github.com/geerlingguy/mac-dev-playbook</link>
      <description>&lt;p&gt;Mac setup and configuration via Ansible.&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/geerlingguy/mac-dev-playbook/master/files/Mac-Dev-Playbook-Logo.png&quot; width=&quot;250&quot; height=&quot;156&quot; alt=&quot;Mac Dev Playbook Logo&quot;&gt; 
&lt;h1&gt;Mac Development Ansible Playbook&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/geerlingguy/mac-dev-playbook/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/geerlingguy/mac-dev-playbook/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This playbook installs and configures most of the software I use on my Mac for web and software development. Some things in macOS are slightly difficult to automate, so I still have a few manual installation steps, but at least it&#39;s all documented here.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Ensure Apple&#39;s command line tools are installed (&lt;code&gt;xcode-select --install&lt;/code&gt; to launch the installer).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://docs.ansible.com/ansible/latest/installation_guide/index.html&quot;&gt;Install Ansible&lt;/a&gt;:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Run the following command to add Python 3 to your $PATH: &lt;code&gt;export PATH=&quot;$HOME/Library/Python/3.9/bin:/opt/homebrew/bin:$PATH&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Upgrade Pip: &lt;code&gt;sudo pip3 install --upgrade pip&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Install Ansible: &lt;code&gt;pip3 install ansible&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone or download this repository to your local drive.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;ansible-galaxy install -r requirements.yml&lt;/code&gt; inside this directory to install required Ansible roles.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;ansible-playbook main.yml --ask-become-pass&lt;/code&gt; inside this directory. Enter your macOS account password when prompted for the &#39;BECOME&#39; password.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If some Homebrew commands fail, you might need to agree to Xcode&#39;s license or fix some other Brew issue. Run &lt;code&gt;brew doctor&lt;/code&gt; to see if this is the case.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Use with a remote Mac&lt;/h3&gt; 
&lt;p&gt;You can use this playbook to manage other Macs as well; the playbook doesn&#39;t even need to be run from a Mac at all! If you want to manage a remote Mac, either another Mac on your network, or a hosted Mac like the ones from &lt;a href=&quot;https://www.macstadium.com&quot;&gt;MacStadium&lt;/a&gt;, you just need to make sure you can connect to it with SSH:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;(On the Mac you want to connect to:) Go to System Preferences &amp;gt; Sharing.&lt;/li&gt; 
 &lt;li&gt;Enable &#39;Remote Login&#39;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You can also enable remote login on the command line:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;sudo systemsetup -setremotelogin on
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Then edit the &lt;code&gt;inventory&lt;/code&gt; file in this repository and change the line that starts with &lt;code&gt;127.0.0.1&lt;/code&gt; to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[ip address or hostname of mac]  ansible_user=[mac ssh username]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you need to supply an SSH password (if you don&#39;t use SSH keys), make sure to pass the &lt;code&gt;--ask-pass&lt;/code&gt; parameter to the &lt;code&gt;ansible-playbook&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;Running a specific set of tagged tasks&lt;/h3&gt; 
&lt;p&gt;You can filter which part of the provisioning process to run by specifying a set of tags using &lt;code&gt;ansible-playbook&lt;/code&gt;&#39;s &lt;code&gt;--tags&lt;/code&gt; flag. The tags available are &lt;code&gt;dotfiles&lt;/code&gt;, &lt;code&gt;homebrew&lt;/code&gt;, &lt;code&gt;mas&lt;/code&gt;, &lt;code&gt;extra-packages&lt;/code&gt; and &lt;code&gt;osx&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ansible-playbook main.yml -K --tags &quot;dotfiles,homebrew&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Overriding Defaults&lt;/h2&gt; 
&lt;p&gt;Not everyone&#39;s development environment and preferred software configuration is the same.&lt;/p&gt; 
&lt;p&gt;You can override any of the defaults configured in &lt;code&gt;default.config.yml&lt;/code&gt; by creating a &lt;code&gt;config.yml&lt;/code&gt; file and setting the overrides in that file. For example, you can customize the installed packages and apps with something like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;homebrew_installed_packages:
  - git
  - go

mas_installed_apps:
  - { id: 443987910, name: &quot;1Password&quot; }
  - { id: 498486288, name: &quot;Quick Resizer&quot; }
  - { id: 557168941, name: &quot;Tweetbot&quot; }
  - { id: 497799835, name: &quot;Xcode&quot; }

composer_packages:
  - name: hirak/prestissimo
  - name: drush/drush
    version: &#39;^8.1&#39;

gem_packages:
  - name: bundler
    state: latest

npm_packages:
  - name: webpack

pip_packages:
  - name: mkdocs

configure_dock: true
dockitems_remove:
  - Launchpad
  - TV
dockitems_persist:
  - name: &quot;Sublime Text&quot;
    path: &quot;/Applications/Sublime Text.app/&quot;
    pos: 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Any variable can be overridden in &lt;code&gt;config.yml&lt;/code&gt;; see the supporting roles&#39; documentation for a complete list of available variables.&lt;/p&gt; 
&lt;h2&gt;Included Applications / Configuration (Default)&lt;/h2&gt; 
&lt;p&gt;Applications (installed with Homebrew Cask):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sites.google.com/chromium.org/driver/&quot;&gt;ChromeDriver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/new/&quot;&gt;Firefox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Google Chrome&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://handbrake.fr/&quot;&gt;Handbrake&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cockos.com/licecap/&quot;&gt;LICEcap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://brettterpstra.com/projects/nvalt/&quot;&gt;nvALT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sequel-ace.com&quot;&gt;Sequel Ace&lt;/a&gt; (MySQL client)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://panic.com/transmit/&quot;&gt;Transmit&lt;/a&gt; (S/FTP client)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Packages (installed with Homebrew):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;autoconf&lt;/li&gt; 
 &lt;li&gt;bash-completion&lt;/li&gt; 
 &lt;li&gt;doxygen&lt;/li&gt; 
 &lt;li&gt;gettext&lt;/li&gt; 
 &lt;li&gt;gifsicle&lt;/li&gt; 
 &lt;li&gt;git&lt;/li&gt; 
 &lt;li&gt;gh&lt;/li&gt; 
 &lt;li&gt;go&lt;/li&gt; 
 &lt;li&gt;gpg&lt;/li&gt; 
 &lt;li&gt;httpie&lt;/li&gt; 
 &lt;li&gt;iperf&lt;/li&gt; 
 &lt;li&gt;libevent&lt;/li&gt; 
 &lt;li&gt;sqlite&lt;/li&gt; 
 &lt;li&gt;nmap&lt;/li&gt; 
 &lt;li&gt;node&lt;/li&gt; 
 &lt;li&gt;nvm&lt;/li&gt; 
 &lt;li&gt;php&lt;/li&gt; 
 &lt;li&gt;ssh-copy-id&lt;/li&gt; 
 &lt;li&gt;readline&lt;/li&gt; 
 &lt;li&gt;openssl&lt;/li&gt; 
 &lt;li&gt;pv&lt;/li&gt; 
 &lt;li&gt;wget&lt;/li&gt; 
 &lt;li&gt;wrk&lt;/li&gt; 
 &lt;li&gt;zsh-history-substring-search&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;My &lt;a href=&quot;https://github.com/geerlingguy/dotfiles&quot;&gt;dotfiles&lt;/a&gt; are also installed into the current user&#39;s home directory, including the &lt;code&gt;.osx&lt;/code&gt; dotfile for configuring many aspects of macOS for better performance and ease of use. You can disable dotfiles management by setting &lt;code&gt;configure_dotfiles: no&lt;/code&gt; in your configuration.&lt;/p&gt; 
&lt;p&gt;Finally, there are a few other preferences and settings added on for various apps and services.&lt;/p&gt; 
&lt;h2&gt;Full / From-scratch setup guide&lt;/h2&gt; 
&lt;p&gt;Since I&#39;ve used this playbook to set up something like 20 different Macs, I decided to write up a full 100% from-scratch install for my own reference (everyone&#39;s particular install will be slightly different).&lt;/p&gt; 
&lt;p&gt;You can see my full from-scratch setup document here: &lt;a href=&quot;https://raw.githubusercontent.com/geerlingguy/mac-dev-playbook/master/full-mac-setup.md&quot;&gt;full-mac-setup.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Testing the Playbook&lt;/h2&gt; 
&lt;p&gt;Many people have asked me if I often wipe my entire workstation and start from scratch just to test changes to the playbook. Nope! This project is &lt;a href=&quot;https://github.com/geerlingguy/mac-dev-playbook/actions?query=workflow%3ACI&quot;&gt;continuously tested on GitHub Actions&#39; macOS infrastructure&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also run macOS itself inside a VM, for at least some of the required testing (App Store apps and some proprietary software might not install properly). I currently recommend:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mac.getutm.app&quot;&gt;UTM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cirruslabs/tart&quot;&gt;Tart&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ansible for DevOps&lt;/h2&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://www.ansiblefordevops.com/&quot;&gt;Ansible for DevOps&lt;/a&gt;, which teaches you how to automate almost anything with Ansible.&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;This project was created by &lt;a href=&quot;https://www.jeffgeerling.com/&quot;&gt;Jeff Geerling&lt;/a&gt; (originally inspired by &lt;a href=&quot;https://github.com/MWGriffin/ansible-playbooks&quot;&gt;MWGriffin/ansible-playbooks&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>conda-forge/miniforge</title>
      <link>https://github.com/conda-forge/miniforge</link>
      <description>&lt;p&gt;A conda-forge distribution.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Miniforge&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/conda-forge/miniforge/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/conda-forge/miniforge/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Build miniforge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://tooomm.github.io/github-release-stats/?username=conda-forge&amp;amp;repository=miniforge&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/conda-forge/miniforge/total.svg?sanitize=true&quot; alt=&quot;GitHub downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository holds the minimal installers for &lt;a href=&quot;https://conda.io/&quot;&gt;Conda&lt;/a&gt; and &lt;a href=&quot;https://github.com/mamba-org/mamba&quot;&gt;Mamba&lt;/a&gt; specific to &lt;a href=&quot;https://conda-forge.org/&quot;&gt;conda-forge&lt;/a&gt;, with the following features pre-configured:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Packages in the base environment are obtained from the &lt;a href=&quot;https://anaconda.org/conda-forge&quot;&gt;conda-forge channel&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://conda-forge.org/&quot;&gt;conda-forge&lt;/a&gt; channel is set as the default (and only) channel.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We put an emphasis on supporting various CPU architectures (x86_64, ppc64le, and aarch64 including Apple Silicon).&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;🚨 PyPy support is deprecated (&lt;b&gt;Deprecated&lt;/b&gt; as of August 2024) 🚨&lt;/summary&gt; 
 &lt;p&gt;TL;DR: We are planning to remove PyPy from conda-forge feedstock recipes in a few weeks (and thus to stop building new releases of packages for PyPy), unless there is substantial enough interest to justify the continued maintenance effort.&lt;/p&gt; 
 &lt;p&gt;To help with this transition, the latest installers will:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The installer will refuse to proceed every two weeks in October&lt;/li&gt; 
  &lt;li&gt;The installer will refuse to proceed every ten days in November&lt;/li&gt; 
  &lt;li&gt;The installer will refuse to proceed every five days in December&lt;/li&gt; 
  &lt;li&gt;The installer will refuse to proceed in 2025+&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Miniforge-pypy3&lt;/h3&gt; 
 &lt;p&gt;Latest installers with PyPy 3.9 in the base environment are listed below. However, the latest installers will cease to work and will stop being made available in 2025. You should therefore pin to 24.7.0 if you require PyPy3.&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;OS&lt;/th&gt; 
    &lt;th&gt;Architecture&lt;/th&gt; 
    &lt;th&gt;Minimum Version&lt;/th&gt; 
    &lt;th&gt;Miniforge Version&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Linux&lt;/td&gt; 
    &lt;td&gt;x86_64 (amd64)&lt;/td&gt; 
    &lt;td&gt;glibc &amp;gt;= 2.17&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/24.9.2-0&quot;&gt;24.9.2-0&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Linux&lt;/td&gt; 
    &lt;td&gt;x86_64 (amd64)&lt;/td&gt; 
    &lt;td&gt;glibc &amp;gt;= 2.12&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/24.3.0-0&quot;&gt;24.3.0-0&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Linux&lt;/td&gt; 
    &lt;td&gt;aarch64 (arm64)&lt;/td&gt; 
    &lt;td&gt;glibc &amp;gt;= 2.17&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/24.9.2-0&quot;&gt;24.9.2-0&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Linux&lt;/td&gt; 
    &lt;td&gt;aarch64 (arm64)&lt;/td&gt; 
    &lt;td&gt;glibc &amp;gt;= 2.12&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/24.3.0-0&quot;&gt;24.3.0-0&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Linux&lt;/td&gt; 
    &lt;td&gt;ppc64le (POWER8/9)&lt;/td&gt; 
    &lt;td&gt;glibc &amp;gt;= 2.17&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/24.9.2-0&quot;&gt;24.9.2-0&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Linux&lt;/td&gt; 
    &lt;td&gt;ppc64le (POWER8/9)&lt;/td&gt; 
    &lt;td&gt;glibc &amp;gt;= 2.12&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/24.3.0-0&quot;&gt;24.3.0-0&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;macOS&lt;/td&gt; 
    &lt;td&gt;x86_64&lt;/td&gt; 
    &lt;td&gt;macOS &amp;gt;= 10.13&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/24.9.2-0&quot;&gt;24.9.2-0&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;macOS&lt;/td&gt; 
    &lt;td&gt;x86_64&lt;/td&gt; 
    &lt;td&gt;macOS &amp;gt;= 10.9&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/24.3.0-0&quot;&gt;24.3.0-0&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Windows&lt;/td&gt; 
    &lt;td&gt;x86_64&lt;/td&gt; 
    &lt;td&gt;Windows &amp;gt;= 7&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/24.9.2-0&quot;&gt;24.9.2-0&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🚨 Mambaforge (&lt;b&gt;Deprecated&lt;/b&gt; as of July 2024) 🚨&lt;/summary&gt; 
 &lt;p&gt;Update for July 2024:&lt;/p&gt; 
 &lt;p&gt;As of July 2024, &lt;code&gt;Mambaforge&lt;/code&gt; is deprecated. We suggest users switch to &lt;code&gt;Miniforge3&lt;/code&gt; immediately. These installers will be retired from new releases after January 2025. To assist in the migration, we will be introducing rollowing brownouts to the latest Mambaforge installer. Installers up to version 24.5.0-1 will not have any brownouts. 24.5.0-1 will include a warning message. Installers 2024.5.0-2 and later will have the following brownout schedule:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The installer will refuse to proceed every two weeks in October&lt;/li&gt; 
  &lt;li&gt;The installer will refuse to proceed every ten days in November&lt;/li&gt; 
  &lt;li&gt;The installer will refuse to proceed every five days in December&lt;/li&gt; 
  &lt;li&gt;The installer will refuse to proceed in 2025+&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Previous information:&lt;/p&gt; 
 &lt;p&gt;With the &lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/23.3.1-0&quot;&gt;release&lt;/a&gt; of &lt;code&gt;Miniforge3-23.3.1-0&lt;/code&gt;, that incorporated the changes in &lt;a href=&quot;https://github.com/conda-forge/miniforge/pull/277&quot;&gt;#277&lt;/a&gt;, the packages and configuration of &lt;code&gt;Mambaforge&lt;/code&gt; and &lt;code&gt;Miniforge3&lt;/code&gt; are now &lt;strong&gt;identical&lt;/strong&gt;. The only difference between the two is the name of the installer and, subsequently, the default installation directory.&lt;/p&gt; 
 &lt;p&gt;We recommend switching to &lt;code&gt;Miniforge3&lt;/code&gt; immediately. These installers will be retired in January 2025. To assist in the migration to Miniforge3 for CI users, we&#39;ve stopped the latest Mambaforge (24.5+) installer from proceeding with following schedule&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Every two weeks in October&lt;/li&gt; 
  &lt;li&gt;Every ten days in November&lt;/li&gt; 
  &lt;li&gt;Every five days in December&lt;/li&gt; 
  &lt;li&gt;Never in 2025&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;You can still find the latest installers in the &lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/24.9.2-0&quot;&gt;24.9.2 release&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Miniforge provides installers for the commands &lt;a href=&quot;https://conda.io/&quot;&gt;&lt;code&gt;conda&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/mamba-org/mamba&quot;&gt;&lt;code&gt;mamba&lt;/code&gt;&lt;/a&gt;. Once the installer for your OS and architecture has been executed, you should be able to use these commands in a terminal.&lt;/p&gt; 
&lt;h3&gt;conda/mamba usable in any terminals&lt;/h3&gt; 
&lt;p&gt;However, with the default choices of the Windows installer, these commands are only available in the &quot;Anaconda Prompt&quot;. To be able to use these commands in other terminals, one needs to initialize conda for your shell by running in the Anaconda Prompt&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;conda init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that one can also just add the &lt;code&gt;C:\Users\myusername\miniforge3\condabin&lt;/code&gt; folder to the path environment variable &lt;a href=&quot;https://learn.microsoft.com/en-us/previous-versions/office/developer/sharepoint-2010/ee537574(v=office.14)#to-add-a-path-to-the-path-environment-variable&quot;&gt;manually&lt;/a&gt; so &lt;code&gt;conda&lt;/code&gt; and &lt;code&gt;mamba&lt;/code&gt; may be used more conveniently from any command prompt with limited chance of software conflicts.&lt;/p&gt; 
&lt;p&gt;The same situation arises on Unix if you use the non-interactive install. Initialization can be done by calling conda with its full path, with something like&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;~/miniforge3/bin/conda init
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Automatic activation of environments&lt;/h3&gt; 
&lt;p&gt;By default, once conda has been initialized for your shell, the &lt;code&gt;base&lt;/code&gt; environment is activated so that the command &lt;code&gt;python&lt;/code&gt; corresponds to the base Python provided by Miniforge and &lt;code&gt;conda install&lt;/code&gt; installs packages in the &lt;code&gt;base&lt;/code&gt; environment. This can be convenient for but it is cleaner to deactivate this automatic activation with&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;conda config --set auto_activate_base false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and use &lt;code&gt;conda&lt;/code&gt; or &lt;code&gt;mamba&lt;/code&gt; to create and activate other environments, with for example (to create an environment called &lt;code&gt;my_project&lt;/code&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;conda create --name my_project jupyterlab numpy pandas
conda activate my_project
# Now you can start jupyter lab
jupyter lab
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, it is also possible to add to your shell configuration file (typically &lt;code&gt;~/.bashrc&lt;/code&gt; or &lt;code&gt;~/.zshrc&lt;/code&gt; on Unix; on Windows, edit with &lt;code&gt;notepad $PROFILE&lt;/code&gt;) the activation command.&lt;/p&gt; 
&lt;h2&gt;Requirements and installers&lt;/h2&gt; 
&lt;p&gt;Latest installers with Python 3.12 &lt;code&gt;(*)&lt;/code&gt; in the base environment:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;OS&lt;/th&gt; 
   &lt;th&gt;Architecture&lt;/th&gt; 
   &lt;th&gt;Minimum Version&lt;/th&gt; 
   &lt;th&gt;File&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;x86_64 (amd64)&lt;/td&gt; 
   &lt;td&gt;glibc &amp;gt;= 2.17&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Miniforge3-Linux-x86_64.sh&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;aarch64 (arm64) &lt;code&gt;(**)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;glibc &amp;gt;= 2.17&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Miniforge3-Linux-aarch64.sh&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;ppc64le (POWER8/9)&lt;/td&gt; 
   &lt;td&gt;glibc &amp;gt;= 2.17&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Miniforge3-Linux-ppc64le.sh&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;x86_64&lt;/td&gt; 
   &lt;td&gt;macOS &amp;gt;= 10.13&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Miniforge3-MacOSX-x86_64.sh&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;arm64 (Apple Silicon) &lt;code&gt;(***)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;macOS &amp;gt;= 11.0&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Miniforge3-MacOSX-arm64.sh&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;x86_64&lt;/td&gt; 
   &lt;td&gt;Windows &amp;gt;= 7&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Miniforge3-Windows-x86_64.exe&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;code&gt;(*)&lt;/code&gt; The Python version is specific only to the base environment. Conda can create new environments with different Python versions and implementations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;(**)&lt;/code&gt; For Raspberry PI that include a 64 bit processor, you must also use a 64-bit operating system such as &lt;a href=&quot;https://www.raspberrypi.com/software/operating-systems/#raspberry-pi-os-64-bit&quot;&gt;Raspberry Pi OS 64-bit&lt;/a&gt; or &lt;a href=&quot;https://ubuntu.com/raspberry-pi&quot;&gt;Ubuntu for Raspberry PI&lt;/a&gt;. The versions listed as &quot;System: 32-bit&quot; are not compatible with the installers on this website.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;(***)&lt;/code&gt; Apple silicon builds are experimental and haven&#39;t had testing like the other platforms.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;Download and execute &lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Windows-x86_64.exe&quot;&gt;the Windows installer&lt;/a&gt;. Follow the prompts, taking note of the option to &quot;Create start menu shortcuts&quot;. The most convenient and tested way to use the installed software (such as commands &lt;code&gt;conda&lt;/code&gt; and &lt;code&gt;mamba&lt;/code&gt;) is via the &quot;Miniforge Prompt&quot; installed to the start menu.&lt;/p&gt; 
&lt;p&gt;If you require conda to be accessible to other software, you may consider the option to &quot;Add Miniforge3 to my PATH environment variable&quot;. The latter is not selected by default due to the potential of serious conflicts with other software. See &lt;a href=&quot;https://github.com/conda-forge/miniforge/issues/520&quot;&gt;https://github.com/conda-forge/miniforge/issues/520&lt;/a&gt; and &lt;a href=&quot;https://github.com/conda-forge/miniforge/issues/453&quot;&gt;https://github.com/conda-forge/miniforge/issues/453&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;There are known issues with the usage of special characters and spaces in the installation location, see for example &lt;a href=&quot;https://github.com/conda-forge/miniforge/issues/484&quot;&gt;https://github.com/conda-forge/miniforge/issues/484&lt;/a&gt; and &lt;a href=&quot;https://github.com/conda-forge/miniforge/issues/593&quot;&gt;https://github.com/conda-forge/miniforge/issues/593&lt;/a&gt; . We recommend users install in a directory without any such characters in the name.&lt;/p&gt; 
&lt;p&gt;For non-interactive usage one can use the batch install option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;start /wait &quot;&quot; Miniforge3-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\Miniforge3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows Subsystem for Linux (WSL)&lt;/h3&gt; 
&lt;p&gt;The Windows Subsystem for Linux (WSL) lets developers use both Windows and Linux at the same time on a Windows machine. WSL users should make sure they are in a Linux terminal window (not Powershell) and use the Linux installer appropriate for the computer&#39;s architecture as described in the instructions in the next section.&lt;/p&gt; 
&lt;h3&gt;Unix-like platforms (macOS, Linux, &amp;amp; WSL)&lt;/h3&gt; 
&lt;p&gt;From a terminal window, download the installer appropriate for your computer&#39;s architecture using curl or wget or your favorite program.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -L -O &quot;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;wget &quot;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the script with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;bash Miniforge3-$(uname)-$(uname -m).sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The interactive installation will prompt you to initialize conda with your shell. This is typically with recommended workflow.&lt;/p&gt; 
&lt;p&gt;For non-interactive install (for example on a CI), the following command can be used (call with &lt;code&gt;-h&lt;/code&gt; to list the extra options):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;bash Miniforge3-$(uname)-$(uname -m).sh -b
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In non-interactive installations, the conda initialization commands will not be run by default.&lt;/p&gt; 
&lt;p&gt;Note that on macOS, Miniforge can also be installed with &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;As part of a CI pipeline&lt;/h3&gt; 
&lt;p&gt;If you wish to download the appropriate installer through the command line in a more automated fashion, you may wish to a command similar to&lt;/p&gt; 
&lt;p&gt;For Linux, any architecture, use the following command&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;wget -O Miniforge3.sh &quot;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For macOS, any architecture, use the following command&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -fsSLo Miniforge3.sh &quot;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-$(uname -m).sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will download the appropriate installer for the present architecture with the filename &lt;code&gt;Miniforge3.sh&lt;/code&gt;. Run the shell script with the command in batch mode with the &lt;code&gt;-b&lt;/code&gt; flash:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;bash Miniforge3.sh -b -p &quot;${HOME}/conda&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;-p&lt;/code&gt; is prefix option. A directory will be created on &lt;code&gt;&quot;${HOME}/conda&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then you should create the path to conda and activate conda. Run this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;source &quot;${HOME}/conda/etc/profile.d/conda.sh&quot;
# For mamba support also run the following command
source &quot;${HOME}/conda/etc/profile.d/mamba.sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, you can run the command to activate the base environment&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;conda activate
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Uninstall&lt;/h2&gt; 
&lt;h3&gt;Unix-like platforms (macOS &amp;amp; Linux)&lt;/h3&gt; 
&lt;p&gt;Uninstalling Miniforge means removing the files that were created during the installation process. You will typically want to remove:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Any modifications to your shell rc files that were made by Miniforge:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Use this first command to see what rc files will be updated
conda init --reverse --dry-run
# Use this next command to take action on the rc files listed above
conda init --reverse
# Temporarily IGNORE the shell message
#       &#39;For changes to take effect, close and re-open your current shell.&#39;,
# and CLOSE THE SHELL ONLY AFTER the 3rd step below is completed.
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Remove the folder and all subfolders where the base environment for Miniforge was installed:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;CONDA_BASE_ENVIRONMENT=$(conda info --base)
echo The next command will delete all files in ${CONDA_BASE_ENVIRONMENT}
# Warning, the rm command below is irreversible!
# check the output of the echo command above
# To make sure you are deleting the correct directory
rm -rf ${CONDA_BASE_ENVIRONMENT}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Any global conda configuration files that are left behind.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;echo ${HOME}/.condarc will be removed if it exists
rm -f &quot;${HOME}/.condarc&quot;
echo ${HOME}/.conda and underlying files will be removed if they exist.
rm -fr ${HOME}/.conda
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Automatic build of constructor.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Automatic upload of constructor results.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Automatic testing of constructor.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Integration with conda-forge&#39;s developer documentation.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Integration with conda-forge&#39;s official site.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Upstream to Anaconda ?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;After construction on the CI, the installer is tested against a range of distribution that match the installer architecture (&lt;code&gt;$ARCH&lt;/code&gt;). For example when architecture is &lt;code&gt;aarch64&lt;/code&gt;, the constructed installer is tested against:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Centos 7&lt;/li&gt; 
 &lt;li&gt;Debian Bullseye (11)&lt;/li&gt; 
 &lt;li&gt;Debian Bookworm (12)&lt;/li&gt; 
 &lt;li&gt;Ubuntu 16.04 (&lt;a href=&quot;https://ubuntu.com/about/release-cycle&quot;&gt;LTS&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Ubuntu 18.04 (&lt;a href=&quot;https://ubuntu.com/about/release-cycle&quot;&gt;LTS&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Ubuntu 20.04 (&lt;a href=&quot;https://ubuntu.com/about/release-cycle&quot;&gt;LTS&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Ubuntu 22.04 (&lt;a href=&quot;https://ubuntu.com/about/release-cycle&quot;&gt;LTS&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Ubuntu 24.04 (Latest release -- also happens to be LTS)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building a Miniforge Installer&lt;/h2&gt; 
&lt;p&gt;Installers are built and uploaded via the CI but if you want to construct your own Miniforge installer, here is how:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Configuration
export ARCH=aarch64
export DOCKERIMAGE=condaforge/linux-anvil-aarch64

bash build_miniforge.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Support for older operating systems&lt;/h2&gt; 
&lt;h3&gt;Support for macOS 10.9-10.12&lt;/h3&gt; 
&lt;p&gt;If you require support for macOS 10.9 through 10.12 you may download version 24.3.0-0 of miniforge available at &lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/24.3.0-0&quot;&gt;https://github.com/conda-forge/miniforge/releases/tag/24.3.0-0&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Support for glibc 2.12-2.16&lt;/h3&gt; 
&lt;p&gt;If you require support for glibc 2.12 through 2.16 you may download version 24.3.0-0 of miniforge available at &lt;a href=&quot;https://github.com/conda-forge/miniforge/releases/tag/24.3.0-0&quot;&gt;https://github.com/conda-forge/miniforge/releases/tag/24.3.0-0&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;What&#39;s the difference between Mambaforge and Miniforge?&lt;/h3&gt; 
&lt;p&gt;After the release of Miniforge 23.3.1 in August 2023, Miniforge and Mambaforge are essentially identical. The only difference is the name of the installer and subsequently the default installation path.&lt;/p&gt; 
&lt;p&gt;Before that release, Miniforge only shipped conda, while Mambaforge added mamba on top. Since Miniconda started shipping conda-libmamba-solver in July 2023, Miniforge followed suit and started shipping it too in August. At that point, since conda-libmamba-solver depends on libmambapy, the only difference between Miniforge and Mambaforge was the presence of the mamba Python package. To minimize surprises, we decided to add mamba to Miniforge too.&lt;/p&gt; 
&lt;h3&gt;Should I choose one or another going forward at the risk of one of them getting deprecated?&lt;/h3&gt; 
&lt;p&gt;As of June 2024, Mambaforge is deprecated and will be retired in January 2025. We recommend users switch to Miniforge3 immediately. For more details, please see the note above.&lt;/p&gt; 
&lt;h2&gt;Release&lt;/h2&gt; 
&lt;p&gt;To release a new version of Miniforge:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make a new pre-release on GitHub with name &lt;code&gt;$CONDA_VERSION-$BUILD_NUMBER&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Wait until all artifacts are uploaded by CI 
  &lt;ul&gt; 
   &lt;li&gt;For each build, we upload 3 artifacts 
    &lt;ol&gt; 
     &lt;li&gt;One installer with the version name&lt;/li&gt; 
     &lt;li&gt;One installer without the version name&lt;/li&gt; 
     &lt;li&gt;The SHA256&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;At the time of writing, the is a sum of 72 artifacts, and with the two sources, we expect a grand total of 74 artifacts.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mark the pre-release as a release&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;NOTE: using a pre-release is important to make sure the latest links work.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/conda-forge/miniforge/main/LICENSE&quot;&gt;BSD 3-Clause&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;Relevant conversations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/conda-forge/conda-forge.github.io/issues/871#issue-496677528&quot;&gt;https://github.com/conda-forge/conda-forge.github.io/issues/871#issue-496677528&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/conda-forge/conda-forge.github.io/pull/922&quot;&gt;https://github.com/conda-forge/conda-forge.github.io/pull/922&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>six2dez/reconftw</title>
      <link>https://github.com/six2dez/reconftw</link>
      <description>&lt;p&gt;reconFTW is a tool designed to perform automated recon on a target domain by running the best set of tools to perform scanning and finding out vulnerabilities&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/six2dez/reconftw&quot;&gt;&lt;img src=&quot;https://github.com/six2dez/reconftw/raw/main/images/banner.png&quot; alt=&quot;reconftw&quot;&gt;&lt;/a&gt; &lt;br&gt; reconFTW &lt;br&gt; &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/six2dez/reconftw/releases/tag/v3.0&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/release-v3.0-green&quot;&gt; &lt;/a&gt;  &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/Six2dez1&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/twitter-%40Six2dez1-blue&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/six2dez/reconftw/issues?q=is%3Aissue+is%3Aclosed&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/issues-closed-raw/six2dez/reconftw.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/six2dez/reconftw/wiki&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/doc-wiki-blue.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://t.me/joinchat/H5bAaw3YbzzmI5co&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/telegram-@ReconFTW-blue.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://discord.gg/R5DdXVEdTy&quot;&gt; &lt;img src=&quot;https://img.shields.io/discord/1048623782912340038.svg?logo=discord&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;Summary&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;reconFTW&lt;/strong&gt; automates the entire process of reconnaissance for you. It outperforms the work of subdomain enumeration along with various vulnerability checks and obtaining maximum information about your target.&lt;/p&gt; 
&lt;p&gt;reconFTW uses a lot of techniques (passive, bruteforce, permutations, certificate transparency, source code scraping, analytics, DNS records...) for subdomain enumeration which helps you to get the maximum and the most interesting subdomains so that you be ahead of the competition.&lt;/p&gt; 
&lt;p&gt;It also performs various vulnerability checks like XSS, Open Redirects, SSRF, CRLF, LFI, SQLi, SSL tests, SSTI, DNS zone transfers, and much more. Along with these, it performs OSINT techniques, directory fuzzing, dorking, ports scanning, screenshots, nuclei scan on your target.&lt;/p&gt; 
&lt;p&gt;So, what are you waiting for? Go! Go! Go! &lt;span&gt;💥&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;📔 Table of Contents&lt;/h2&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#%EF%B8%8F-config-file&quot;&gt;⚙️ Config file&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#target-options&quot;&gt;TARGET OPTIONS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#mode-options&quot;&gt;MODE OPTIONS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#general-options&quot;&gt;GENERAL OPTIONS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#example-usage&quot;&gt;Example Usage&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#to-perform-a-full-recon-on-single-target&quot;&gt;To perform a full recon on single target&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#to-perform-a-full-recon-on-a-list-of-targets&quot;&gt;To perform a full recon on a list of targets&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#perform-full-recon-with-more-time-intense-tasks-vps-intended-only&quot;&gt;Perform full recon with more time intense tasks &lt;em&gt;(VPS intended only)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#perform-recon-in-a-multi-domain-target&quot;&gt;Perform recon in a multi domain target&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#perform-recon-with-axiom-integration&quot;&gt;Perform recon with axiom integration&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#perform-all-steps-whole-recon--all-attacks-aka-yolo-mode&quot;&gt;Perform all steps (whole recon + all attacks) a.k.a. YOLO mode&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#show-help-section&quot;&gt;Show help section&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#axiom-support-cloud&quot;&gt;Axiom Support &lt;span&gt;☁&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#faraday-support-computer&quot;&gt;Faraday Support &lt;span&gt;💻&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#sample-video&quot;&gt;Sample video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#fire-features-fire&quot;&gt;&lt;span&gt;🔥&lt;/span&gt; Features &lt;span&gt;🔥&lt;/span&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#osint&quot;&gt;Osint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#subdomains&quot;&gt;Subdomains&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#hosts&quot;&gt;Hosts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#webs&quot;&gt;Webs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#vulnerability-checks&quot;&gt;Vulnerability checks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#extras&quot;&gt;Extras&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#mindmapworkflow&quot;&gt;Mindmap/Workflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#data-keep&quot;&gt;Data Keep&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#makefile&quot;&gt;Makefile&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#manual&quot;&gt;Manual&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#main-commands&quot;&gt;Main commands&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#how-to-contribute&quot;&gt;How to contribute&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#need-help-information_source&quot;&gt;Need help? &lt;span&gt;ℹ&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#support-this-project&quot;&gt;Support this project&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#buymeacoffee&quot;&gt;Buymeacoffee&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#digitalocean-referral-link&quot;&gt;DigitalOcean referral link&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#github-sponsorship&quot;&gt;GitHub sponsorship&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#thanks-pray&quot;&gt;Thanks &lt;span&gt;🙏&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/#disclaimer&quot;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;💿 Installation&lt;/h2&gt; 
&lt;h2&gt;a) Using a PC/VPS/VM&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You can check out our wiki for the installation guide &lt;a href=&quot;https://github.com/six2dez/reconftw/wiki/0.-Installation-Guide&quot;&gt;Installation Guide&lt;/a&gt; &lt;span&gt;📖&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Requires &lt;a href=&quot;https://golang.org/dl/&quot;&gt;Golang&lt;/a&gt; &amp;gt; &lt;strong&gt;1.15.0+&lt;/strong&gt; installed and paths correctly set (&lt;strong&gt;$GOPATH&lt;/strong&gt;, &lt;strong&gt;$GOROOT&lt;/strong&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Important: if you are not running reconftw as root, run &lt;code&gt;sudo echo &quot;${USERNAME} ALL=(ALL:ALL) NOPASSWD: ALL&quot; | sudo tee -a /etc/sudoers.d/reconFTW&lt;/code&gt;, to make sure no sudo prompts are required to run the tool and to avoid any permission issues.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/six2dez/reconftw
cd reconftw/
./install.sh
./reconftw.sh -d target.com -r
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;b) Docker Image 🐳 (3 options)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pull the image&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker pull six2dez/reconftw:main
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run the container&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -it --rm \
-v &quot;${PWD}/OutputFolder/&quot;:&#39;/reconftw/Recon/&#39; \
six2dez/reconftw:main -d example.com -r
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;View results (they&#39;re NOT in the Docker container)&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;As the folder you cloned earlier (named &lt;code&gt;reconftw&lt;/code&gt;) is being renamed to &lt;code&gt;OutputFolder&lt;/code&gt;, you&#39;ll have to go to that folder to view results.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you wish to:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Dynamically modify the behaviour &amp;amp; function of the image&lt;/li&gt; 
 &lt;li&gt;Build your own container&lt;/li&gt; 
 &lt;li&gt;Build an Axiom Controller on top of the official image&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://github.com/six2dez/reconftw/wiki/4.-Docker&quot;&gt;Docker&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;c) Terraform + Ansible&lt;/h2&gt; 
&lt;p&gt;Yes! reconFTW can also be easily deployed with Terraform and Ansible to AWS, if you want to know how to do it, you can check the guide &lt;a href=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/Terraform/README.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;⚙️ Config file&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You can find a detailed explanation of the configuration file &lt;a href=&quot;https://github.com/six2dez/reconftw/wiki/3.-Configuration-file&quot;&gt;here&lt;/a&gt; &lt;span&gt;📖&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Through &lt;code&gt;reconftw.cfg&lt;/code&gt; file the whole execution of the tool can be controlled.&lt;/li&gt; 
 &lt;li&gt;Hunters can set various scanning modes, execution preferences, tools, config files, APIs/TOKENS, personalized wordlists and much more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;br&gt;
 &lt;br&gt; 
 &lt;summary&gt; &lt;span&gt;👉&lt;/span&gt; Click here to view default config file &lt;span&gt;👈&lt;/span&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;#############################################
#			reconFTW config file			#
#############################################

# General values
tools=$HOME/Tools   # Path installed tools
SCRIPTPATH=&quot;$( cd &quot;$(dirname &quot;$0&quot;)&quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 ; pwd -P )&quot; # Get current script&#39;s path
profile_shell=&quot;.$(basename $(echo $SHELL))rc&quot; # Get current shell profile
reconftw_version=$(git rev-parse --abbrev-ref HEAD)-$(git describe --tags) # Fetch current reconftw version
generate_resolvers=false # Generate custom resolvers with dnsvalidator
update_resolvers=true # Fetch and rewrite resolvers from trickest/resolvers before DNS resolution
resolvers_url=&quot;https://raw.githubusercontent.com/trickest/resolvers/main/resolvers.txt&quot;
resolvers_trusted_url=&quot;https://gist.githubusercontent.com/six2dez/ae9ed7e5c786461868abd3f2344401b6/raw/trusted_resolvers.txt&quot;
fuzzing_remote_list=&quot;https://raw.githubusercontent.com/six2dez/OneListForAll/main/onelistforallmicro.txt&quot; # Used to send to axiom(if used) on fuzzing
proxy_url=&quot;http://127.0.0.1:8080/&quot; # Proxy url
install_golang=true # Set it to false if you already have Golang configured and ready
upgrade_tools=true
upgrade_before_running=false # Upgrade tools before running
#dir_output=/custom/output/path

# Golang Vars (Comment or change on your own)
export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export PATH=$GOPATH/bin:$GOROOT/bin:$HOME/.local/bin:$PATH

# Rust Vars (Comment or change on your own)
export PATH=&quot;$HOME/.cargo/bin:$PATH&quot;

# Tools config files
#NOTIFY_CONFIG=~/.config/notify/provider-config.yaml # No need to define
GITHUB_TOKENS=${tools}/.github_tokens
GITLAB_TOKENS=${tools}/.gitlab_tokens
#CUSTOM_CONFIG=custom_config_path.txt # In case you use a custom config file, uncomment this line and set your files path

# APIs/TOKENS - Uncomment the lines you want removing the &#39;#&#39; at the beginning of the line
#SHODAN_API_KEY=&quot;XXXXXXXXXXXXX&quot;
#WHOISXML_API=&quot;XXXXXXXXXX&quot;
#XSS_SERVER=&quot;XXXXXXXXXXXXXXXXX&quot;
#COLLAB_SERVER=&quot;XXXXXXXXXXXXXXXXX&quot;
#slack_channel=&quot;XXXXXXXX&quot;
#slack_auth=&quot;xoXX-XXX-XXX-XXX&quot;

# File descriptors
DEBUG_STD=&quot;&amp;amp;&amp;gt;/dev/null&quot; # Skips STD output on installer
DEBUG_ERROR=&quot;2&amp;gt;/dev/null&quot; # Skips ERR output on installer

# Osint
OSINT=true # Enable or disable the whole OSINT module
GOOGLE_DORKS=true
GITHUB_DORKS=true
GITHUB_REPOS=true
METADATA=true # Fetch metadata from indexed office documents
EMAILS=true # Fetch emails from differents sites
DOMAIN_INFO=true # whois info
IP_INFO=true    # Reverse IP search, geolocation and whois
API_LEAKS=true # Check for API leaks
THIRD_PARTIES=true # Check for 3rd parties misconfigs
SPOOF=true # Check spoofable domains
METAFINDER_LIMIT=20 # Max 250

# Subdomains
SUBDOMAINS_GENERAL=true # Enable or disable the whole Subdomains module
SUBPASSIVE=true # Passive subdomains search
SUBCRT=true # crtsh search
CTR_LIMIT=999999 # Limit the number of results
SUBNOERROR=false # Check DNS NOERROR response and BF on them
SUBANALYTICS=true # Google Analytics search
SUBBRUTE=true # DNS bruteforcing
SUBSCRAPING=true # Subdomains extraction from web crawling
SUBPERMUTE=true # DNS permutations
SUBREGEXPERMUTE=true # Permutations by regex analysis
PERMUTATIONS_OPTION=gotator # The alternative is &quot;ripgen&quot; (faster, not deeper)
GOTATOR_FLAGS=&quot; -depth 1 -numbers 3 -mindup -adv -md&quot; # Flags for gotator
SUBTAKEOVER=true # Check subdomain takeovers, false by default cuz nuclei already check this
SUB_RECURSIVE_PASSIVE=false # Uses a lot of API keys queries
DEEP_RECURSIVE_PASSIVE=10 # Number of top subdomains for recursion
SUB_RECURSIVE_BRUTE=false # Needs big disk space and time to resolve
ZONETRANSFER=true # Check zone transfer
S3BUCKETS=true # Check S3 buckets misconfigs
REVERSE_IP=false # Check reverse IP subdomain search (set True if your target is CIDR/IP)
TLS_PORTS=&quot;21,22,25,80,110,135,143,261,271,324,443,448,465,563,614,631,636,664,684,695,832,853,854,990,993,989,992,994,995,1129,1131,1184,2083,2087,2089,2096,2221,2252,2376,2381,2478,2479,2482,2484,2679,2762,3077,3078,3183,3191,3220,3269,3306,3410,3424,3471,3496,3509,3529,3539,3535,3660,36611,3713,3747,3766,3864,3885,3995,3896,4031,4036,4062,4064,4081,4083,4116,4335,4336,4536,4590,4740,4843,4849,5443,5007,5061,5321,5349,5671,5783,5868,5986,5989,5990,6209,6251,6443,6513,6514,6619,6697,6771,7202,7443,7673,7674,7677,7775,8243,8443,8991,8989,9089,9295,9318,9443,9444,9614,9802,10161,10162,11751,12013,12109,14143,15002,16995,41230,16993,20003&quot;
INSCOPE=false # Uses inscope tool to filter the scope, requires .scope file in reconftw folder

# Web detection
WEBPROBESIMPLE=true # Web probing on 80/443
WEBPROBEFULL=true # Web probing in a large port list
WEBSCREENSHOT=true # Webs screenshooting
VIRTUALHOSTS=false # Check virtualhosts by fuzzing HOST header
UNCOMMON_PORTS_WEB=&quot;81,300,591,593,832,981,1010,1311,1099,2082,2095,2096,2480,3000,3001,3002,3003,3128,3333,4243,4567,4711,4712,4993,5000,5104,5108,5280,5281,5601,5800,6543,7000,7001,7396,7474,8000,8001,8008,8014,8042,8060,8069,8080,8081,8083,8088,8090,8091,8095,8118,8123,8172,8181,8222,8243,8280,8281,8333,8337,8443,8500,8834,8880,8888,8983,9000,9001,9043,9060,9080,9090,9091,9092,9200,9443,9502,9800,9981,10000,10250,11371,12443,15672,16080,17778,18091,18092,20720,32000,55440,55672&quot;

# Host
FAVICON=true # Check Favicon domain discovery
PORTSCANNER=true # Enable or disable the whole Port scanner module
GEO_INFO=true # Fetch Geolocalization info
PORTSCAN_PASSIVE=true # Port scanner with Shodan
PORTSCAN_ACTIVE=true # Port scanner with nmap
PORTSCAN_ACTIVE_OPTIONS=&quot;--top-ports 200 -sV -n -Pn --open --max-retries 2 --script vulners&quot;
CDN_IP=true # Check which IPs belongs to CDN

# Web analysis
WAF_DETECTION=true # Detect WAFs
NUCLEICHECK=true # Enable or disable nuclei
NUCLEI_TEMPLATES_PATH=&quot;$HOME/nuclei-templates&quot; # Set nuclei templates path
NUCLEI_SEVERITY=&quot;info,low,medium,high,critical&quot; # Set templates criticity
NUCLEI_EXTRA_ARGS=&quot;&quot; # Additional nuclei extra flags, don&#39;t set the severity here but the exclusions like &quot; -etags openssh&quot;
#NUCLEI_EXTRA_ARGS=&quot;-etags openssh,ssl -eid node-express-dev-env,keycloak-xss,CVE-2023-24044,CVE-2021-20323,header-sql,header-reflection&quot; # Additional nuclei extra flags, don&#39;t set the severity here but the exclusions like &quot; -etags openssh&quot;
NUCLEI_FLAGS=&quot; -silent -t ${NUCLEI_TEMPLATES_PATH}/ -retries 2&quot; # Additional nuclei extra flags, don&#39;t set the severity here but the exclusions like &quot; -etags openssh&quot;
NUCLEI_FLAGS_JS=&quot; -silent -tags exposure,token -severity info,low,medium,high,critical&quot; # Additional nuclei extra flags for js secrets
URL_CHECK=true # Enable or disable URL collection
URL_CHECK_PASSIVE=true # Search for urls, passive methods from Archive, OTX, CommonCrawl, etc
URL_CHECK_ACTIVE=true # Search for urls by crawling the websites
URL_GF=true # Url patterns classification
URL_EXT=true # Returns a list of files divided by extension
JSCHECKS=true # JS analysis
FUZZ=true # Web fuzzing
IIS_SHORTNAME=true
CMS_SCANNER=true # CMS scanner
WORDLIST=true # Wordlist generation
ROBOTSWORDLIST=true # Check historic disallow entries on waybackMachine
PASSWORD_DICT=true # Generate password dictionary
PASSWORD_MIN_LENGTH=5 # Min password length
PASSWORD_MAX_LENGTH=14 # Max password length
CLOUDHUNTER_PERMUTATION=NORMAL # Options: DEEP (very slow), NORMAL (slow), NONE
NUCLEI_FUZZING_TEMPLATES_PATH=&quot;${tools}/fuzzing-templates&quot; # Set nuclei templates path

# Vulns
VULNS_GENERAL=false # Enable or disable the vulnerability module (very intrusive and slow)
XSS=true # Check for xss with dalfox
CORS=true # CORS misconfigs
TEST_SSL=true # SSL misconfigs
OPEN_REDIRECT=true # Check open redirects
SSRF_CHECKS=true # SSRF checks
CRLF_CHECKS=true # CRLF checks
LFI=true # LFI by fuzzing
SSTI=true # SSTI by fuzzing
SQLI=true # Check SQLI
SQLMAP=true # Check SQLI with sqlmap
GHAURI=false # Check SQLI with ghauri
BROKENLINKS=true # Check for brokenlinks
SPRAY=true # Performs password spraying
COMM_INJ=true # Check for command injections with commix
PROTO_POLLUTION=true # Check for prototype pollution flaws
SMUGGLING=true # Check for HTTP request smuggling flaws
WEBCACHE=true # Check for Web Cache issues
BYPASSER4XX=true # Check for 4XX bypasses
FUZZPARAMS=true # Fuzz parameters values

# Extra features
NOTIFICATION=false # Notification for every function
SOFT_NOTIFICATION=false # Only for start/end
DEEP=false # DEEP mode, really slow and don&#39;t care about the number of results
DEEP_LIMIT=500 # First limit to not run unless you run DEEP
DEEP_LIMIT2=1500 # Second limit to not run unless you run DEEP
DIFF=false # Diff function, run every module over an already scanned target, printing only new findings (but save everything)
REMOVETMP=false # Delete temporary files after execution (to free up space)
REMOVELOG=false # Delete logs after execution
PROXY=false # Send to proxy the websites found
SENDZIPNOTIFY=false # Send to zip the results (over notify)
PRESERVE=true      # set to true to avoid deleting the .called_fn files on really large scans
FFUF_FLAGS=&quot; -mc all -fc 404 -sf -noninteractive -of json&quot; # Ffuf flags
HTTPX_FLAGS=&quot; -follow-redirects -random-agent -status-code -silent -title -web-server -tech-detect -location -content-length&quot; # Httpx flags for simple web probing

# HTTP options
HEADER=&quot;User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0&quot; # Default header

# Threads
FFUF_THREADS=40
HTTPX_THREADS=50
HTTPX_UNCOMMONPORTS_THREADS=100
KATANA_THREADS=20
BRUTESPRAY_THREADS=20
BRUTESPRAY_CONCURRENCE=10
DNSTAKE_THREADS=100
DALFOX_THREADS=200
PUREDNS_PUBLIC_LIMIT=0 # Set between 2000 - 10000 if your router blows up, 0 means unlimited
PUREDNS_TRUSTED_LIMIT=400
PUREDNS_WILDCARDTEST_LIMIT=30
PUREDNS_WILDCARDBATCH_LIMIT=1500000
RESOLVE_DOMAINS_THREADS=150
DNSVALIDATOR_THREADS=200
INTERLACE_THREADS=10
TLSX_THREADS=1000
XNLINKFINDER_DEPTH=3

# Rate limits
HTTPX_RATELIMIT=150
NUCLEI_RATELIMIT=150
FFUF_RATELIMIT=0

# Timeouts
SUBFINDER_ENUM_TIMEOUT=180          # Minutes
CMSSCAN_TIMEOUT=3600            # Seconds
FFUF_MAXTIME=900                # Seconds
HTTPX_TIMEOUT=10                # Seconds
HTTPX_UNCOMMONPORTS_TIMEOUT=10  # Seconds
PERMUTATIONS_LIMIT=21474836480  # Bytes, default is 20 GB

# lists
fuzz_wordlist=${tools}/fuzz_wordlist.txt
lfi_wordlist=${tools}/lfi_wordlist.txt
ssti_wordlist=${tools}/ssti_wordlist.txt
subs_wordlist=${tools}/subdomains.txt
subs_wordlist_big=${tools}/subdomains_n0kovo_big.txt
resolvers=${tools}/resolvers.txt
resolvers_trusted=${tools}/resolvers_trusted.txt

# Axiom Fleet
# Will not start a new fleet if one exist w/ same name and size (or larger)
# AXIOM=false Uncomment only to overwrite command line flags
AXIOM_FLEET_LAUNCH=true # Enable or disable spin up a new fleet, if false it will use the current fleet with the AXIOM_FLEET_NAME prefix
AXIOM_FLEET_NAME=&quot;reconFTW&quot; # Fleet&#39;s prefix name
AXIOM_FLEET_COUNT=10 # Fleet&#39;s number
AXIOM_FLEET_REGIONS=&quot;eu-central&quot; # Fleet&#39;s region
AXIOM_FLEET_SHUTDOWN=true # # Enable or disable delete the fleet after the execution
# This is a script on your reconftw host that might prep things your way...
#AXIOM_POST_START=&quot;~/Tools/axiom_config.sh&quot; # Useful  to send your config files to the fleet
AXIOM_EXTRA_ARGS=&quot;&quot; # Leave empty if you don&#39;t want to add extra arguments
#AXIOM_EXTRA_ARGS=&quot; --rm-logs&quot; # Example

# Faraday-Server
FARADAY=false # Enable or disable Faraday integration
FARADAY_SERVER=&quot;http://localhost:5985&quot; # Faraday server address
FARADAY_USER=&quot;faraday&quot; # Faraday user
FARADAY_PASS=&quot;FARADAY_PASSWORD&quot; # Faraday password
FARADAY_WORKSPACE=&quot;reconftw&quot; # Faraday workspace

# TERM COLORS
bred=&#39;\033[1;31m&#39;
bblue=&#39;\033[1;34m&#39;
bgreen=&#39;\033[1;32m&#39;
byellow=&#39;\033[1;33m&#39;
red=&#39;\033[0;31m&#39;
blue=&#39;\033[0;34m&#39;
green=&#39;\033[0;32m&#39;
yellow=&#39;\033[0;33m&#39;
reset=&#39;\033[0m&#39;

&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Check out the wiki section to know which flag performs what all steps/attacks &lt;a href=&quot;https://github.com/six2dez/reconftw/wiki/2.-Usage-Guide&quot;&gt;Usage Guide&lt;/a&gt; &lt;span&gt;📖&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;TARGET OPTIONS&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Flag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-d&lt;/td&gt; 
   &lt;td&gt;Single Target domain &lt;em&gt;(example.com)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-l&lt;/td&gt; 
   &lt;td&gt;List of targets &lt;em&gt;(one per line)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-m&lt;/td&gt; 
   &lt;td&gt;Multiple domain target &lt;em&gt;(companyName)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-x&lt;/td&gt; 
   &lt;td&gt;Exclude subdomains list &lt;em&gt;(Out Of Scope)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-i&lt;/td&gt; 
   &lt;td&gt;Include subdomains list &lt;em&gt;(In Scope)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;MODE OPTIONS&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Flag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-r&lt;/td&gt; 
   &lt;td&gt;Recon - Full recon process (without attacks like sqli,ssrf,xss,ssti,lfi etc.)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-s&lt;/td&gt; 
   &lt;td&gt;Subdomains - Perform only subdomain enumeration, web probing, subdomain takeovers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-p&lt;/td&gt; 
   &lt;td&gt;Passive - Perform only passive steps&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-a&lt;/td&gt; 
   &lt;td&gt;All - Perform whole recon and all active attacks&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-w&lt;/td&gt; 
   &lt;td&gt;Web - Perform only vulnerability checks/attacks on particular target&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-n&lt;/td&gt; 
   &lt;td&gt;OSINT - Performs an OSINT scan (no subdomain enumeration and attacks)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-z&lt;/td&gt; 
   &lt;td&gt;Zen - Performs a recon process covering the basics and some vulns&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-c&lt;/td&gt; 
   &lt;td&gt;Custom - Launches specific function against target&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-h&lt;/td&gt; 
   &lt;td&gt;Help - Show this help menu&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;GENERAL OPTIONS&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Flag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--deep&lt;/td&gt; 
   &lt;td&gt;Deep scan (Enable some slow options for deeper scan, &lt;em&gt;vps intended mode&lt;/em&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-f&lt;/td&gt; 
   &lt;td&gt;Custom config file path&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-o&lt;/td&gt; 
   &lt;td&gt;Output directory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-v&lt;/td&gt; 
   &lt;td&gt;Axiom distributed VPS&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-q&lt;/td&gt; 
   &lt;td&gt;Rate limit in requests per second&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--check-tools&lt;/td&gt; 
   &lt;td&gt;Exit if one of the tools is missing&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Example Usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NOTE: this is applicable when you&#39;ve installed reconFTW on the host (e.g. VM/VPS/cloud) and not in a Docker container.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;To perform a full recon on single target&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./reconftw.sh -d target.com -r
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;To perform a full recon on a list of targets&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./reconftw.sh -l sites.txt -r -o /output/directory/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Perform full recon with more time intense tasks &lt;em&gt;(VPS intended only)&lt;/em&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./reconftw.sh -d target.com -r --deep -o /output/directory/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Perform recon in a multi domain target&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./reconftw.sh -m company -l domains_list.txt -r
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Perform recon with axiom integration&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./reconftw.sh -d target.com -r -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Perform all steps (whole recon + all attacks) a.k.a. YOLO mode&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./reconftw.sh -d target.com -a
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Show help section&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./reconftw.sh -h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Axiom Support &lt;span&gt;☁&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/Jzrgkqt/axiom-readme.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Check out the wiki section for more info &lt;a href=&quot;https://github.com/six2dez/reconftw/wiki/5.-Axiom-version&quot;&gt;Axiom Support&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;As reconFTW actively hits the target with a lot of web traffic, hence there was a need to move to Axiom distributing the work load among various instances leading to reduction of execution time.&lt;/li&gt; 
 &lt;li&gt;During the configuration of axiom you need to select &lt;code&gt;reconftw&lt;/code&gt; as provisoner.&lt;/li&gt; 
 &lt;li&gt;You can create your own axiom&#39;s fleet before running reconFTW or let reconFTW to create and destroy it automatically just modifying reconftw.cfg file.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Faraday Support &lt;span&gt;💻&lt;/span&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;For Faraday community support, you need to install Faraday by yourself, authenticate in faraday-cli and set the workspace both in the config file and in the faraday-cli.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Sample video&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/images/reconFTW.gif&quot; alt=&quot;Video&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;🔥&lt;/span&gt; Features &lt;span&gt;🔥&lt;/span&gt;&lt;/h1&gt; 
&lt;h2&gt;Osint&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Domain information (&lt;a href=&quot;https://github.com/rfc1036/whois&quot;&gt;whois&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Emails addresses and passwords leaks (&lt;a href=&quot;https://github.com/Josue87/EmailFinder&quot;&gt;emailfinder&lt;/a&gt; and &lt;a href=&quot;https://github.com/JoelGMSec/LeakSearch&quot;&gt;LeakSearch&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Microsoft 365 and Azure tenant mapper (&lt;a href=&quot;https://github.com/Arcanum-Sec/msftrecon&quot;&gt;msftrecon&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Metadata finder (&lt;a href=&quot;https://github.com/Josue87/MetaFinder&quot;&gt;MetaFinder&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;API leaks search (&lt;a href=&quot;https://github.com/MandConsultingGroup/porch-pirate&quot;&gt;porch-pirate&lt;/a&gt; and &lt;a href=&quot;https://github.com/UndeadSec/SwaggerSpy&quot;&gt;SwaggerSpy&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Google Dorks (&lt;a href=&quot;https://github.com/six2dez/dorks_hunter&quot;&gt;dorks_hunter&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Github Dorks (&lt;a href=&quot;https://github.com/damit5/gitdorks_go&quot;&gt;gitdorks_go&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;GitHub org&#39;s repos analysis (&lt;a href=&quot;https://github.com/trickest/enumerepo&quot;&gt;enumerepo&lt;/a&gt;, &lt;a href=&quot;https://github.com/trufflesecurity/trufflehog&quot;&gt;trufflehog&lt;/a&gt; and &lt;a href=&quot;https://github.com/gitleaks/gitleaks&quot;&gt;gitleaks&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;3rd parties misconfigurations(&lt;a href=&quot;https://github.com/intigriti/misconfig-mapper&quot;&gt;misconfig-mapper&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Spoofable domains (&lt;a href=&quot;https://github.com/MattKeeley/Spoofy&quot;&gt;spoofcheck&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Subdomains&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Passive (&lt;a href=&quot;https://github.com/projectdiscovery/subfinder&quot;&gt;subfinder&lt;/a&gt; and &lt;a href=&quot;https://github.com/gwen001/github-subdomains&quot;&gt;github-subdomains&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Certificate transparency (&lt;a href=&quot;https://github.com/cemulus/crt&quot;&gt;crt&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;NOERROR subdomain discovery (&lt;a href=&quot;https://github.com/projectdiscovery/dnsx&quot;&gt;dnsx&lt;/a&gt;, more info &lt;a href=&quot;https://www.securesystems.de/blog/enhancing-subdomain-enumeration-ents-and-noerror/&quot;&gt;here&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Bruteforce (&lt;a href=&quot;https://github.com/d3mondev/puredns&quot;&gt;puredns&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Permutations (&lt;a href=&quot;https://github.com/Josue87/gotator&quot;&gt;Gotator&lt;/a&gt;, &lt;a href=&quot;https://github.com/resyncgg/ripgen&quot;&gt;ripgen&lt;/a&gt; and &lt;a href=&quot;https://github.com/cramppet/regulator&quot;&gt;regulator&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;JS files &amp;amp; Source Code Scraping (&lt;a href=&quot;https://github.com/projectdiscovery/katana&quot;&gt;katana&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;DNS Records (&lt;a href=&quot;https://github.com/projectdiscovery/dnsx&quot;&gt;dnsx&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Google Analytics ID (&lt;a href=&quot;https://github.com/Josue87/AnalyticsRelationships&quot;&gt;AnalyticsRelationships&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;TLS handshake (&lt;a href=&quot;https://github.com/projectdiscovery/tlsx&quot;&gt;tlsx&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Recursive search (&lt;a href=&quot;https://github.com/trickest/dsieve&quot;&gt;dsieve&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Subdomains takeover (&lt;a href=&quot;https://github.com/projectdiscovery/nuclei&quot;&gt;nuclei&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;DNS takeover (&lt;a href=&quot;https://github.com/pwnesia/dnstake&quot;&gt;dnstake&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;DNS Zone Transfer (&lt;a href=&quot;https://linux.die.net/man/1/dig&quot;&gt;dig&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Cloud checkers (&lt;a href=&quot;https://github.com/sa7mon/S3Scanner&quot;&gt;S3Scanner&lt;/a&gt; and &lt;a href=&quot;https://github.com/belane/CloudHunter&quot;&gt;CloudHunter&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Hosts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;IP info (&lt;a href=&quot;https://www.ipinfo.io/&quot;&gt;ipinfo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;CDN checker (&lt;a href=&quot;https://github.com/six2dez/ipcdn&quot;&gt;ipcdn&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;WAF checker (&lt;a href=&quot;https://github.com/EnableSecurity/wafw00f&quot;&gt;wafw00f&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Port Scanner (Active with &lt;a href=&quot;https://github.com/nmap/nmap&quot;&gt;nmap&lt;/a&gt; and passive with &lt;a href=&quot;https://github.com/s0md3v/Smap&quot;&gt;smap&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Port services vulnerability checks (&lt;a href=&quot;https://github.com/vulnersCom/nmap-vulners&quot;&gt;vulners&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Password spraying (&lt;a href=&quot;https://github.com/x90skysn3k/brutespray&quot;&gt;brutespray&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Geolocalization info (ipinfo.io)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Webs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Web Prober (&lt;a href=&quot;https://github.com/projectdiscovery/httpx&quot;&gt;httpx&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Web screenshoting (&lt;a href=&quot;https://github.com/projectdiscovery/nuclei&quot;&gt;nuclei&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Web templates scanner (&lt;a href=&quot;https://github.com/projectdiscovery/nuclei&quot;&gt;nuclei&lt;/a&gt; and &lt;a href=&quot;https://github.com/geeknik/the-nuclei-templates.git&quot;&gt;nuclei geeknik&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;CMS Scanner (&lt;a href=&quot;https://github.com/Tuhinshubhra/CMSeeK&quot;&gt;CMSeeK&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Url extraction (&lt;a href=&quot;https://github.com/projectdiscovery/urlfinder&quot;&gt;urlfinder&lt;/a&gt;, &lt;a href=&quot;https://github.com/projectdiscovery/katana&quot;&gt;katana&lt;/a&gt;, &lt;a href=&quot;https://gist.github.com/six2dez/d1d516b606557526e9a78d7dd49cacd3&quot;&gt;github-endpoints&lt;/a&gt; and &lt;a href=&quot;https://github.com/w9w/JSA&quot;&gt;JSA&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;URL patterns Search and filtering (&lt;a href=&quot;https://github.com/xnl-h4ck3r/urless&quot;&gt;urless&lt;/a&gt;, &lt;a href=&quot;https://github.com/tomnomnom/gf&quot;&gt;gf&lt;/a&gt; and &lt;a href=&quot;https://github.com/1ndianl33t/Gf-Patterns&quot;&gt;gf-patterns&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Favicon Real IP (&lt;a href=&quot;https://github.com/pielco11/fav-up&quot;&gt;fav-up&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Javascript analysis (&lt;a href=&quot;https://github.com/lc/subjs&quot;&gt;subjs&lt;/a&gt;, &lt;a href=&quot;https://github.com/w9w/JSA&quot;&gt;JSA&lt;/a&gt;, &lt;a href=&quot;https://github.com/xnl-h4ck3r/xnLinkFinder&quot;&gt;xnLinkFinder&lt;/a&gt;, &lt;a href=&quot;https://github.com/m4ll0k/BBTz&quot;&gt;getjswords&lt;/a&gt;, &lt;a href=&quot;https://github.com/MrEmpy/mantra&quot;&gt;mantra&lt;/a&gt;, &lt;a href=&quot;https://github.com/BishopFox/jsluice&quot;&gt;jsluice&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Sourcemap JS extraction (&lt;a href=&quot;https://github.com/denandz/sourcemapper&quot;&gt;sourcemapper&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Fuzzing (&lt;a href=&quot;https://github.com/ffuf/ffuf&quot;&gt;ffuf&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;URL sorting by extension&lt;/li&gt; 
 &lt;li&gt;Wordlist generation&lt;/li&gt; 
 &lt;li&gt;Passwords dictionary creation (&lt;a href=&quot;https://github.com/LandGrey/pydictor&quot;&gt;pydictor&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Vulnerability checks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;XSS (&lt;a href=&quot;https://github.com/hahwul/dalfox&quot;&gt;dalfox&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Open redirect (&lt;a href=&quot;https://github.com/r0075h3ll/Oralyzer&quot;&gt;Oralyzer&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;SSRF (headers &lt;a href=&quot;https://github.com/projectdiscovery/interactsh&quot;&gt;interactsh&lt;/a&gt; and param values with &lt;a href=&quot;https://github.com/ffuf/ffuf&quot;&gt;ffuf&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;CRLF (&lt;a href=&quot;https://github.com/dwisiswant0/crlfuzz&quot;&gt;crlfuzz&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Cors (&lt;a href=&quot;https://github.com/s0md3v/Corsy&quot;&gt;Corsy&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LFI Checks (&lt;a href=&quot;https://github.com/ffuf/ffuf&quot;&gt;ffuf&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;SQLi Check (&lt;a href=&quot;https://github.com/sqlmapproject/sqlmap&quot;&gt;SQLMap&lt;/a&gt; and &lt;a href=&quot;https://github.com/r0oth3x49/ghauri&quot;&gt;ghauri&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;SSTI (&lt;a href=&quot;https://github.com/ffuf/ffuf&quot;&gt;ffuf&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;SSL tests (&lt;a href=&quot;https://github.com/drwetter/testssl.sh&quot;&gt;testssl&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Broken Links Checker (&lt;a href=&quot;https://github.com/projectdiscovery/katana&quot;&gt;katana&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Prototype Pollution (&lt;a href=&quot;https://github.com/kleiton0x00/ppmap&quot;&gt;ppmap&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Web Cache Vulnerabilities (&lt;a href=&quot;https://github.com/Hackmanit/Web-Cache-Vulnerability-Scanner&quot;&gt;Web-Cache-Vulnerability-Scanner&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;4XX Bypasser (&lt;a href=&quot;https://github.com/devploit/nomore403&quot;&gt;nomore403&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extras&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Multithreading (&lt;a href=&quot;https://github.com/codingo/Interlace&quot;&gt;Interlace&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Custom resolvers generated list (&lt;a href=&quot;https://github.com/vortexau/dnsvalidator&quot;&gt;dnsvalidator&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Docker container included and &lt;a href=&quot;https://hub.docker.com/r/six2dez/reconftw&quot;&gt;DockerHub&lt;/a&gt; integration&lt;/li&gt; 
 &lt;li&gt;Ansible + Terraform deployment over AWS&lt;/li&gt; 
 &lt;li&gt;Allows IP/CIDR as target&lt;/li&gt; 
 &lt;li&gt;Resume the scan from last performed step&lt;/li&gt; 
 &lt;li&gt;Custom output folder option&lt;/li&gt; 
 &lt;li&gt;All in one installer/updater script compatible with most distros&lt;/li&gt; 
 &lt;li&gt;Diff support for continuous running (cron mode)&lt;/li&gt; 
 &lt;li&gt;Support for targets with multiple domains&lt;/li&gt; 
 &lt;li&gt;Raspberry Pi/ARM support&lt;/li&gt; 
 &lt;li&gt;7 modes (recon, passive, subdomains, web, osint, zen and all)&lt;/li&gt; 
 &lt;li&gt;Integration with FaradaySec for webUI and reporting&lt;/li&gt; 
 &lt;li&gt;Out of Scope Support + optional &lt;a href=&quot;https://github.com/tomnomnom/hacks/tree/master/inscope&quot;&gt;inscope&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;Notification system with Slack, Discord and Telegram (&lt;a href=&quot;https://github.com/projectdiscovery/notify&quot;&gt;notify&lt;/a&gt;) and sending zipped results support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Mindmap/Workflow&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/six2dez/reconftw/main/images/mindmap_obsidian.png&quot; alt=&quot;Mindmap&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Data Keep&lt;/h2&gt; 
&lt;p&gt;Follow these simple steps to end up with a private repository with your &lt;code&gt;API Keys&lt;/code&gt; and &lt;code&gt;/Recon&lt;/code&gt; data.&lt;/p&gt; 
&lt;h3&gt;Makefile&lt;/h3&gt; 
&lt;p&gt;A &lt;code&gt;Makefile&lt;/code&gt; is provided to quickly bootstrap a private repo. To use it, you&#39;ll need the &lt;a href=&quot;https://cli.github.com/&quot;&gt;Github CLI&lt;/a&gt; installed.&lt;/p&gt; 
&lt;p&gt;Once done, just run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# below line is optional, the default is ~/reconftw-data
export PRIV_REPO=&quot;$HOME/reconftw-data&quot;
make bootstrap
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To sync your private repo with upstream:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;make sync
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To upload juicy recon data:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;make upload
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Create a private &lt;strong&gt;blank&lt;/strong&gt; repository on &lt;code&gt;Git(Hub|Lab)&lt;/code&gt; (Take into account size limits regarding Recon data upload)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone your project: &lt;code&gt;git clone https://gitlab.com/example/reconftw-data&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Get inside the cloned repository: &lt;code&gt;cd reconftw-data&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a new branch with an empty commit: &lt;code&gt;git commit --allow-empty -m &quot;Empty commit&quot;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add the official repo as a new remote: &lt;code&gt;git remote add upstream https://github.com/six2dez/reconftw&lt;/code&gt; (&lt;code&gt;upstream&lt;/code&gt; is an example)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Update upstream&#39;s repo: &lt;code&gt;git fetch upstream&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Rebase current branch with the official one: &lt;code&gt;git rebase upstream/main master&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Main commands&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Upload changes to your personal repo: &lt;code&gt;git add . &amp;amp;&amp;amp; git commit -m &quot;Data upload&quot; &amp;amp;&amp;amp; git push origin master&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Update tool anytime: &lt;code&gt;git fetch upstream &amp;amp;&amp;amp; git rebase upstream/main master&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to contribute&lt;/h2&gt; 
&lt;p&gt;If you want to contribute to this project, you can do it in multiple ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Submitting an &lt;a href=&quot;https://github.com/six2dez/reconftw/issues/new/choose&quot;&gt;issue&lt;/a&gt; because you have found a bug or you have any suggestion or request.&lt;/li&gt; 
 &lt;li&gt;Making a Pull Request from &lt;a href=&quot;https://github.com/six2dez/reconftw/tree/dev&quot;&gt;dev&lt;/a&gt; branch because you want to improve the code or add something to the script.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Need help? &lt;span&gt;ℹ&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Take a look at the &lt;a href=&quot;https://github.com/six2dez/reconftw/wiki&quot;&gt;wiki&lt;/a&gt; section.&lt;/li&gt; 
 &lt;li&gt;Check &lt;a href=&quot;https://github.com/six2dez/reconftw/wiki/7.-FAQs&quot;&gt;FAQ&lt;/a&gt; for commonly asked questions.&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href=&quot;https://discord.gg/R5DdXVEdTy&quot;&gt;Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ask for help in the &lt;a href=&quot;https://t.me/joinchat/TO_R8NYFhhbmI5co&quot;&gt;Telegram group&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support this project&lt;/h2&gt; 
&lt;h3&gt;Buymeacoffee&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/six2dez&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-green.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;DigitalOcean referral link&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.digitalocean.com/?refcode=f362a6e193a1&amp;amp;utm_campaign=Referral_Invite&amp;amp;utm_medium=Referral_Program&amp;amp;utm_source=badge&quot;&gt;&lt;img src=&quot;https://web-platforms.sfo2.cdn.digitaloceanspaces.com/WWW/Badge%201.svg?sanitize=true&quot; alt=&quot;DigitalOcean Referral Badge&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;GitHub sponsorship&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/six2dez&quot;&gt;Sponsor&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Thanks &lt;span&gt;🙏&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Thank you for lending a helping hand towards the development of the project!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://api.c99.nl/&quot;&gt;C99&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.circl.lu/&quot;&gt;CIRCL&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://networksdb.io/&quot;&gt;NetworksDB&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://ipinfo.io/&quot;&gt;ipinfo&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://hackertarget.com/&quot;&gt;hackertarget&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://censys.io/&quot;&gt;Censys&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://fofa.info/&quot;&gt;Fofa&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://intelx.io/&quot;&gt;intelx&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.whoxy.com/&quot;&gt;Whoxy&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;Usage of this program for attacking targets without consent is illegal. It is the user&#39;s responsibility to obey all applicable laws. The developer assumes no liability and is not responsible for any misuse or damage caused by this program. Please use responsibly.&lt;/p&gt; 
&lt;p&gt;The material contained in this repository is licensed under MIT.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tmux-plugins/tmux-resurrect</title>
      <link>https://github.com/tmux-plugins/tmux-resurrect</link>
      <description>&lt;p&gt;Persists tmux environment across system restarts.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tmux Resurrect&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/tmux-plugins/tmux-resurrect&quot;&gt;&lt;img src=&quot;https://travis-ci.org/tmux-plugins/tmux-resurrect.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Restore &lt;code&gt;tmux&lt;/code&gt; environment after system restart.&lt;/p&gt; 
&lt;p&gt;Tmux is great, except when you have to restart the computer. You lose all the running programs, working directories, pane layouts etc. There are helpful management tools out there, but they require initial configuration and continuous updates as your workflow evolves or you start new projects.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;tmux-resurrect&lt;/code&gt; saves all the little details from your tmux environment so it can be completely restored after a system restart (or when you feel like it). No configuration is required. You should feel like you never quit tmux.&lt;/p&gt; 
&lt;p&gt;It even (optionally) &lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_vim_and_neovim_sessions.md&quot;&gt;restores vim and neovim sessions&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Automatic restoring and continuous saving of tmux env is also possible with &lt;a href=&quot;https://github.com/tmux-plugins/tmux-continuum&quot;&gt;tmux-continuum&lt;/a&gt; plugin.&lt;/p&gt; 
&lt;h3&gt;Screencast&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://vimeo.com/104763018&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/video/screencast_img.png&quot; alt=&quot;screencast screenshot&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Key bindings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;prefix + Ctrl-s&lt;/code&gt; - save&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;prefix + Ctrl-r&lt;/code&gt; - restore&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;About&lt;/h3&gt; 
&lt;p&gt;This plugin goes to great lengths to save and restore all the details from your &lt;code&gt;tmux&lt;/code&gt; environment. Here&#39;s what&#39;s been taken care of:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;all sessions, windows, panes and their order&lt;/li&gt; 
 &lt;li&gt;current working directory for each pane&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;exact pane layouts&lt;/strong&gt; within windows (even when zoomed)&lt;/li&gt; 
 &lt;li&gt;active and alternative session&lt;/li&gt; 
 &lt;li&gt;active and alternative window for each session&lt;/li&gt; 
 &lt;li&gt;windows with focus&lt;/li&gt; 
 &lt;li&gt;active pane for each window&lt;/li&gt; 
 &lt;li&gt;&quot;grouped sessions&quot; (useful feature when using tmux with multiple monitors)&lt;/li&gt; 
 &lt;li&gt;programs running within a pane! More details in the &lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_programs.md&quot;&gt;restoring programs doc&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Optional:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_vim_and_neovim_sessions.md&quot;&gt;restoring vim and neovim sessions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_pane_contents.md&quot;&gt;restoring pane contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_previously_saved_environment.md&quot;&gt;restoring a previously saved environment&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Requirements / dependencies: &lt;code&gt;tmux 1.9&lt;/code&gt; or higher, &lt;code&gt;bash&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Tested and working on Linux, OSX and Cygwin.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;tmux-resurrect&lt;/code&gt; is idempotent! It will not try to restore panes or windows that already exist.&lt;br&gt; The single exception to this is when tmux is started with only 1 pane in order to restore previous tmux env. Only in this case will this single pane be overwritten.&lt;/p&gt; 
&lt;h3&gt;Installation with &lt;a href=&quot;https://github.com/tmux-plugins/tpm&quot;&gt;Tmux Plugin Manager&lt;/a&gt; (recommended)&lt;/h3&gt; 
&lt;p&gt;Add plugin to the list of TPM plugins in &lt;code&gt;.tmux.conf&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;set -g @plugin &#39;tmux-plugins/tmux-resurrect&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hit &lt;code&gt;prefix + I&lt;/code&gt; to fetch the plugin and source it. You should now be able to use the plugin.&lt;/p&gt; 
&lt;h3&gt;Manual Installation&lt;/h3&gt; 
&lt;p&gt;Clone the repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/tmux-plugins/tmux-resurrect ~/clone/path
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add this line to the bottom of &lt;code&gt;.tmux.conf&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;run-shell ~/clone/path/resurrect.tmux
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Reload TMUX environment with: &lt;code&gt;$ tmux source-file ~/.tmux.conf&lt;/code&gt;. You should now be able to use the plugin.&lt;/p&gt; 
&lt;h3&gt;Docs&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/migrating_from_tmuxinator.md&quot;&gt;Guide for migrating from tmuxinator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Configuration&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/custom_key_bindings.md&quot;&gt;Changing the default key bindings&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/hooks.md&quot;&gt;Setting up hooks on save &amp;amp; restore&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Only a conservative list of programs is restored by default:&lt;br&gt; &lt;code&gt;vi vim nvim emacs man less more tail top htop irssi weechat mutt&lt;/code&gt;.&lt;br&gt; &lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_programs.md&quot;&gt;Restoring programs doc&lt;/a&gt; explains how to restore additional programs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/save_dir.md&quot;&gt;Change a directory&lt;/a&gt; where &lt;code&gt;tmux-resurrect&lt;/code&gt; saves tmux environment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Optional features&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_vim_and_neovim_sessions.md&quot;&gt;Restoring vim and neovim sessions&lt;/a&gt; is nice if you&#39;re a vim/neovim user.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_pane_contents.md&quot;&gt;Restoring pane contents&lt;/a&gt; feature.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Other goodies&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tmux-plugins/tmux-copycat&quot;&gt;tmux-copycat&lt;/a&gt; - a plugin for regex searches in tmux and fast match selection&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tmux-plugins/tmux-yank&quot;&gt;tmux-yank&lt;/a&gt; - enables copying highlighted text to system clipboard&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tmux-plugins/tmux-open&quot;&gt;tmux-open&lt;/a&gt; - a plugin for quickly opening highlighted file or a url&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tmux-plugins/tmux-continuum&quot;&gt;tmux-continuum&lt;/a&gt; - automatic restoring and continuous saving of tmux env&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Reporting bugs and contributing&lt;/h3&gt; 
&lt;p&gt;Both contributing and bug reports are welcome. Please check out &lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Credits&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mislav&quot;&gt;Mislav Marohnić&lt;/a&gt; - the idea for the plugin came from his &lt;a href=&quot;https://github.com/mislav/dotfiles/raw/2036b5e03fb430bbcbc340689d63328abaa28876/bin/tmux-session&quot;&gt;tmux-session script&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/LICENSE.md&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ROCm/ROCm</title>
      <link>https://github.com/ROCm/ROCm</link>
      <description>&lt;p&gt;AMD ROCm™ Software - GitHub Home&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AMD ROCm Software&lt;/h1&gt; 
&lt;p&gt;ROCm is an open-source stack, composed primarily of open-source software, designed for graphics processing unit (GPU) computation. ROCm consists of a collection of drivers, development tools, and APIs that enable GPU programming from low-level kernel to end-user applications.&lt;/p&gt; 
&lt;p&gt;With ROCm, you can customize your GPU software to meet your specific needs. You can develop, collaborate, test, and deploy your applications in a free, open source, integrated, and secure software ecosystem. ROCm is particularly well-suited to GPU-accelerated high-performance computing (HPC), artificial intelligence (AI), scientific computing, and computer aided design (CAD).&lt;/p&gt; 
&lt;p&gt;ROCm is powered by AMD’s &lt;a href=&quot;https://github.com/ROCm/HIP&quot;&gt;Heterogeneous-computing Interface for Portability (HIP)&lt;/a&gt;, an open-source software C++ GPU programming environment and its corresponding runtime. HIP allows ROCm developers to create portable applications on different platforms by deploying code on a range of platforms, from dedicated gaming GPUs to exascale HPC clusters.&lt;/p&gt; 
&lt;p&gt;ROCm supports programming models, such as OpenMP and OpenCL, and includes all necessary open source software compilers, debuggers, and libraries. ROCm is fully integrated into machine learning (ML) frameworks, such as PyTorch and TensorFlow.&lt;/p&gt; 
&lt;h2&gt;Getting the ROCm Source Code&lt;/h2&gt; 
&lt;p&gt;AMD ROCm is built from open source software. It is, therefore, possible to modify the various components of ROCm by downloading the source code and rebuilding the components. The source code for ROCm components can be cloned from each of the GitHub repositories using git. For easy access to download the correct versions of each of these tools, the ROCm repository contains a repo manifest file called &lt;a href=&quot;https://raw.githubusercontent.com/ROCm/ROCm/develop/default.xml&quot;&gt;default.xml&lt;/a&gt;. You can use this manifest file to download the source code for ROCm software.&lt;/p&gt; 
&lt;h3&gt;Installing the repo tool&lt;/h3&gt; 
&lt;p&gt;The repo tool from Google allows you to manage multiple git repositories simultaneously. Run the following commands to install the repo tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir -p ~/bin/
curl https://storage.googleapis.com/git-repo-downloads/repo &amp;gt; ~/bin/repo
chmod a+x ~/bin/repo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;~/bin/&lt;/code&gt; folder is used as an example. You can specify a different folder to install the repo tool into if you desire.&lt;/p&gt; 
&lt;h3&gt;Installing git-lfs&lt;/h3&gt; 
&lt;p&gt;Some ROCm projects use the Git Large File Storage (LFS) format that may require you to install git-lfs. Refer to &lt;a href=&quot;https://github.com/git-lfs/git-lfs/raw/main/INSTALLING.md&quot;&gt;Git Large File Storage&lt;/a&gt; for more information. For example, to install git-lfs for Ubuntu, use the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt-get install git-lfs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Downloading the ROCm source code&lt;/h3&gt; 
&lt;p&gt;The following example shows how to use the repo tool to download the ROCm source code. If you choose a directory other than ~/bin/ to install the repo tool, you must use that chosen directory in the code as shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir -p ~/ROCm/
cd ~/ROCm/
export ROCM_VERSION=6.3.3
~/bin/repo init -u http://github.com/ROCm/ROCm.git -b roc-6.3.x -m tools/rocm-build/rocm-${ROCM_VERSION}.xml
~/bin/repo sync
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Using this sample code will cause the repo tool to download the open source code associated with the specified ROCm release. Ensure that you have ssh-keys configured on your machine for your GitHub ID prior to the download as explained at &lt;a href=&quot;https://docs.github.com/en/authentication/connecting-to-github-with-ssh&quot;&gt;Connecting to GitHub with SSH&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building the ROCm source code&lt;/h2&gt; 
&lt;p&gt;Each ROCm component repository contains directions for building that component, such as the rocSPARSE documentation &lt;a href=&quot;https://rocm.docs.amd.com/projects/rocSPARSE/en/latest/install/Linux_Install_Guide.html&quot;&gt;Installation and Building for Linux&lt;/a&gt;. Refer to the specific component documentation for instructions on building the repository.&lt;/p&gt; 
&lt;p&gt;Each release of the ROCm software supports specific hardware and software configurations. Refer to &lt;a href=&quot;https://rocm.docs.amd.com/projects/install-on-linux/en/latest/reference/system-requirements.html&quot;&gt;System requirements (Linux)&lt;/a&gt; for the current supported hardware and OS.&lt;/p&gt; 
&lt;h2&gt;Build ROCm from source&lt;/h2&gt; 
&lt;p&gt;The Build will use as many processors as it can find to build in parallel. Some of the compiles can consume as much as 10GB of RAM, so make sure you have plenty of Swap Space !&lt;/p&gt; 
&lt;p&gt;By default the ROCm build will compile for all supported GPU architectures and will take approximately 500 CPU hours. The Build time will reduce significantly if we limit the GPU Architecture/s against which we need to build by using the environment variable GPU_ARCHS as mentioned below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# --------------------------------------
# Step1: clone source code
# --------------------------------------

mkdir -p ~/WORKSPACE/      # Or any folder name other than WORKSPACE
cd ~/WORKSPACE/
export ROCM_VERSION=6.3.3
~/bin/repo init -u http://github.com/ROCm/ROCm.git -b roc-6.3.x -m tools/rocm-build/rocm-${ROCM_VERSION}.xml
~/bin/repo sync

# --------------------------------------
# Step 2: Prepare build environment
# --------------------------------------

# Option 1: Start a docker container
# Pulling required base docker images:
# Ubuntu20.04 built from ROCm/tools/rocm-build/docker/ubuntu20/Dockerfile
docker pull rocm/rocm-build-ubuntu-20.04:6.3
# Ubuntu22.04 built from ROCm/tools/rocm-build/docker/ubuntu22/Dockerfile
docker pull rocm/rocm-build-ubuntu-22.04:6.3
# Ubuntu24.04 built from ROCm/tools/rocm-build/docker/ubuntu24/Dockerfile
docker pull rocm/rocm-build-ubuntu-24.04:6.3

# Start docker container and mount the source code folder:
docker run -ti \
    -e ROCM_VERSION=${ROCM_VERSION} \
    -e CCACHE_DIR=$HOME/.ccache \
    -e CCACHE_ENABLED=true \
    -e DOCK_WORK_FOLD=/src \
    -w /src \
    -v $PWD:/src \
    -v /etc/passwd:/etc/passwd \
    -v /etc/shadow:/etc/shadow \
    -v ${HOME}/.ccache:${HOME}/.ccache \
    -u $(id -u):$(id -g) \
    &amp;lt;replace_with_required_ubuntu_base_docker_image&amp;gt; bash

# Option 2: Install required packages into the host machine
# For ubuntu20.04 system
cd ROCm/tools/rocm-build/docker/ubuntu20
cp * /tmp &amp;amp;&amp;amp; cd /tmp
bash install-prerequisites.sh
# For ubuntu22.04 system
cd ROCm/tools/rocm-build/docker/ubuntu22
cp * /tmp &amp;amp;&amp;amp; cd /tmp
bash install-prerequisites.sh
# For ubuntu24.04 system
cd ROCm/tools/rocm-build/docker/ubuntu24
cp * /tmp &amp;amp;&amp;amp; cd /tmp
bash install-prerequisites.sh

# --------------------------------------
# Step 3: Run build command line
# --------------------------------------

# Select GPU targets before building:
# When GPU_ARCHS is not set, default GPU targets supported by ROCm6.1 will be used.
# To build against a subset of GFX architectures you can use the below env variable.
# Support MI300 (gfx940, gfx941, gfx942).
export GPU_ARCHS=&quot;gfx942&quot;               # Example
export GPU_ARCHS=&quot;gfx940;gfx941;gfx942&quot; # Example

# Pick and run build commands in the docker container:
# Build rocm-dev packages
make -f ROCm/tools/rocm-build/ROCm.mk -j ${NPROC:-$(nproc)} rocm-dev
# Build all ROCm packages
make -f ROCm/tools/rocm-build/ROCm.mk -j ${NPROC:-$(nproc)} all
# list all ROCm components to find required components
make -f ROCm/tools/rocm-build/ROCm.mk list_components
# Build a single ROCm packages
make -f ROCm/tools/rocm-build/ROCm.mk T_rocblas

# Find built packages in ubuntu20.04:
out/ubuntu-20.04/20.04/deb/
# Find built packages in ubuntu22.04:
out/ubuntu-22.04/22.04/deb/
# Find built packages in ubuntu24.04:
out/ubuntu-24.04/24.04/deb/

# Find built logs in ubuntu20.04:
out/ubuntu-20.04/20.04/logs/
# Find built logs in ubuntu22.04:
out/ubuntu-22.04/22.04/logs/
# Find built logs in ubuntu24.04:
out/ubuntu-24.04/24.04/logs/
# All logs pertaining to failed components, end with .errrors extension.
out/ubuntu-22.04/22.04/logs/rocblas.errors      # Example
# All logs pertaining to building components, end with .inprogress extension.
out/ubuntu-22.04/22.04/logs/rocblas.inprogress  # Example
# All logs pertaining to passed components, use the component names.
out/ubuntu-22.04/22.04/logs/rocblas             # Example
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: &lt;a href=&quot;https://raw.githubusercontent.com/ROCm/ROCm/develop/tools/rocm-build/README.md&quot;&gt;Overview for ROCm.mk&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ROCm documentation&lt;/h2&gt; 
&lt;p&gt;This repository contains the &lt;a href=&quot;https://gerrit.googlesource.com/git-repo/+/HEAD/docs/manifest-format.md&quot;&gt;manifest file&lt;/a&gt; for ROCm releases, changelogs, and release information.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;default.xml&lt;/code&gt; file contains information for all repositories and the associated commit used to build the current ROCm release; &lt;code&gt;default.xml&lt;/code&gt; uses the &lt;a href=&quot;https://gerrit.googlesource.com/git-repo/&quot;&gt;Manifest Format repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Source code for our documentation is located in the &lt;code&gt;/docs&lt;/code&gt; folder of most ROCm repositories. The &lt;code&gt;develop&lt;/code&gt; branch of our repositories contains content for the next ROCm release.&lt;/p&gt; 
&lt;p&gt;The ROCm documentation homepage is &lt;a href=&quot;https://rocm.docs.amd.com&quot;&gt;rocm.docs.amd.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For information on how to contribute to the ROCm documentation, see &lt;a href=&quot;https://rocm.docs.amd.com/en/latest/contribute/contributing.html&quot;&gt;Contributing to the ROCm documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Older ROCm releases&lt;/h2&gt; 
&lt;p&gt;For release information for older ROCm releases, refer to the &lt;a href=&quot;https://rocm.docs.amd.com/en/latest/release/versions.html&quot;&gt;ROCm release history&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fmstrat/winapps</title>
      <link>https://github.com/Fmstrat/winapps</link>
      <description>&lt;p&gt;Run Windows apps such as Microsoft Office/Adobe in Linux (Ubuntu/Fedora) and GNOME/KDE as if they were a part of the native OS, including Nautilus integration.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WinApps for Linux&lt;/h1&gt; 
&lt;p&gt;Run Windows apps such as Microsoft Office/Adobe in Linux (Ubuntu/Fedora) and GNOME/KDE as if they were a part of the native OS, including Nautilus integration for right clicking on files of specific mime types to open them.&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/demo/demo.gif&quot; width=&quot;1000&quot;&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Proud to have made the top spot on &lt;a href=&quot;https://www.reddit.com/r/linux&quot;&gt;r/linux&lt;/a&gt; on launch day.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;p&gt;WinApps was created as an easy, one command way to include apps running inside a VM (or on any RDP server) directly into GNOME as if they were native applications. WinApps works by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Running a Windows RDP server in a background VM container&lt;/li&gt; 
 &lt;li&gt;Checking the RDP server for installed applications such as Microsoft Office&lt;/li&gt; 
 &lt;li&gt;If those programs are installed, it creates shortcuts leveraging FreeRDP for both the CLI and the GNOME tray&lt;/li&gt; 
 &lt;li&gt;Files in your home directory are accessible via the &lt;code&gt;\\tsclient\home&lt;/code&gt; mount inside the VM&lt;/li&gt; 
 &lt;li&gt;You can right click on any files in your home directory to open with an application, too&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Currently supported applications&lt;/h2&gt; 
&lt;h3&gt;WinApps supports &lt;em&gt;&lt;strong&gt;ANY&lt;/strong&gt;&lt;/em&gt; installed application on your system.&lt;/h3&gt; 
&lt;p&gt;It does this by:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Scanning your system for offically configured applications (below)&lt;/li&gt; 
 &lt;li&gt;Scanning your system for any other EXE files with install records in the Windows Registry&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Any officially configured applications will have support for high-resolution icons and mime types for automatically detecting what files can be opened by each application. Any other detected executable files will leverage the icons pulled from the EXE.&lt;/p&gt; 
&lt;p&gt;Note: The officially configured application list below is fueled by the community, and therefore some apps may be untested by the WinApps team.&lt;/p&gt; 
&lt;table cellpadding=&quot;10&quot; cellspacing=&quot;0&quot; border=&quot;0&quot;&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/acrobat-x-pro/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Adobe Acrobat Pro&lt;br&gt;(X)&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/acrobat-reader-dc/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Adobe Acrobat Reader&lt;br&gt;(DC)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/aftereffects-cc/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Adobe After Effects&lt;br&gt;(CC)&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/audition-cc/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Adobe Audition&lt;br&gt;(CC)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/bridge-cs6/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Adobe Bridge&lt;br&gt;(CS6, CC)&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/adobe-cc/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Adobe Creative Cloud&lt;br&gt;(CC)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/illustrator-cc/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Adobe Illustrator&lt;br&gt;(CC)&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/indesign-cc/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Adobe InDesign&lt;br&gt;(CC)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/lightroom-cc/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Adobe Lightroom&lt;br&gt;(CC)&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/photoshop-cc/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Adobe Photoshop&lt;br&gt;(CS6, CC)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/premiere-pro-cc/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Adobe Premiere Pro&lt;br&gt;(CC)&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/cmd/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Command Prompt&lt;br&gt;(cmd.exe)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/explorer/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Explorer&lt;br&gt;(File Manager)&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/iexplorer/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Internet Explorer&lt;br&gt;(11)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/access/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Microsoft Access&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/excel/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Microsoft Excel&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/word/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Microsoft Word&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/onenote/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Microsoft OneNote&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/outlook/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Microsoft Outlook&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/powerpoint/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Microsoft PowerPoint&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/project/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Microsoft Project&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/publisher/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Microsoft Publisher&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/powershell/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Powershell&lt;br&gt;(Standard, Core)&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/vs-enterprise-2019/icon.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Visual Studio&lt;br&gt;(2019 - Ent|Pro|Com)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Fmstrat/winapps/main/icons/windows.svg?sanitize=true&quot; width=&quot;100&quot;&gt;&lt;/td&gt;
   &lt;td&gt;Windows&lt;br&gt;(Full RDP session)&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;&lt;/td&gt;
   &lt;td&gt;&amp;nbsp;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Latest documentation available at: &lt;a href=&quot;https://nowsci.com/winapps/&quot;&gt;https://nowsci.com/winapps/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openshift/release</title>
      <link>https://github.com/openshift/release</link>
      <description>&lt;p&gt;Release tooling for OpenShift&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenShift Release Tooling&lt;/h1&gt; 
&lt;p&gt;This repository holds OpenShift cluster manifests, component build manifests and CI workflow configuration for OpenShift component repositories for both OKD and OCP.&lt;/p&gt; 
&lt;h2&gt;CI Workflow Configuration&lt;/h2&gt; 
&lt;p&gt;To setup a CI workflow for a new repository, use &lt;code&gt;make new-repo&lt;/code&gt;. See the &lt;a href=&quot;https://docs.ci.openshift.org/docs/how-tos/contributing-openshift-release/&quot;&gt;Contributing CI Configuration to the openshift/release Repository&lt;/a&gt; document for detailed information about how to contribute to this repository.&lt;/p&gt; 
&lt;p&gt;Configuration files for CI workflows live under &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/ci-operator/&quot;&gt;&lt;code&gt;ci-operator/&lt;/code&gt;&lt;/a&gt; and are split into the following categories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/ci-operator/config/&quot;&gt;&lt;code&gt;ci-operator/config&lt;/code&gt;&lt;/a&gt; contains configuration for the &lt;code&gt;ci-operator&lt;/code&gt;, detailing builds and tests for component repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/ci-operator/jobs/&quot;&gt;&lt;code&gt;ci-operator/jobs&lt;/code&gt;&lt;/a&gt; contains configuration for &lt;code&gt;prow&lt;/code&gt;, detailing job triggers. In almost all cases, this configuration is generated automatically from the &lt;code&gt;ci-operator&lt;/code&gt; config. For manual edits, see &lt;a href=&quot;https://docs.ci.openshift.org/docs/how-tos/contributing-openshift-release/#component-ci-configuration&quot;&gt;this section&lt;/a&gt; of the contribution document and the &lt;a href=&quot;https://github.com/kubernetes/test-infra/raw/master/prow/README.md#how-to-add-new-jobs&quot;&gt;upstream configuration document&lt;/a&gt;. Prefer the &lt;code&gt;ci-operator&lt;/code&gt; config whenever possible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/ci-operator/step-registry/&quot;&gt;&lt;code&gt;ci-operator/step-registry&lt;/code&gt;&lt;/a&gt; contains the registry of reusable test steps and workflows. See the documentation for this content &lt;a href=&quot;https://docs.ci.openshift.org/docs/architecture/step-registry/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[LEGACY]&lt;/strong&gt; &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/ci-operator/templates/&quot;&gt;&lt;code&gt;ci-operator/templates&lt;/code&gt;&lt;/a&gt; contains black-box test workflows for use by the &lt;code&gt;ci-operator&lt;/code&gt;. The parent directory&#39;s &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/ci-operator#end-to-end-tests&quot;&gt;README&lt;/a&gt; documents how to use them. See the &lt;a href=&quot;https://github.com/openshift/ci-tools/raw/2c9c111a2350ef92a366e6d86e66b82d13d7e704/TEMPLATES.md&quot;&gt;template document&lt;/a&gt; for general information on template tests. Templates are legacy and new ones should not be added. Multi-stage tests using steps from the shared registry should be used instead.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Cluster and Service Configuration Manifests&lt;/h2&gt; 
&lt;h3&gt;Core Services and Configuration&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Only &lt;code&gt;core-services/secrets&lt;/code&gt; folder is applied to the cluster api.ci.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Except &lt;a href=&quot;https://docs.ci.openshift.org/docs/how-tos/adding-a-new-secret-to-ci/&quot;&gt;user secret management&lt;/a&gt;, no services are running on &lt;code&gt;api.ci&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Additional Services and Configuration (legacy)&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;This folder is no longer applied to the cluster api.ci which is going to be offline soon.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Cluster Configuration Manifests (legacy)&lt;/h3&gt; 
&lt;p&gt;Manifests for cluster provisioning and installation live under &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/cluster/&quot;&gt;&lt;code&gt;cluster/&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;https://api.ci.openshift.org/&quot;&gt;OpenShift CI cluster&lt;/a&gt; is configured with the manifests under &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/cluster/ci/&quot;&gt;&lt;code&gt;cluster/ci/&lt;/code&gt;&lt;/a&gt;. (&lt;strong&gt;legacy&lt;/strong&gt;: do not add new services here. Use &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/core-services&quot;&gt;&lt;code&gt;core-services&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/services&quot;&gt;&lt;code&gt;services&lt;/code&gt;&lt;/a&gt; instead.)&lt;/p&gt; 
&lt;p&gt;Clusters that are created by the testing infrastructure for validating OpenShift are configured with the profiles under &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/cluster/test-deploy/&quot;&gt;&lt;code&gt;cluster/test-deploy/&lt;/code&gt;&lt;/a&gt;. For directions on how to set up clusters for development, see the &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/cluster/test-deploy/README.md&quot;&gt;README&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Legacy Service Configuration&lt;/h3&gt; 
&lt;p&gt;Manifests for services that are in development, experimental, legacy or not critical in some other way are present in the &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/projects&quot;&gt;&lt;code&gt;projects&lt;/code&gt;&lt;/a&gt; directory. Compared to the &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/#core-services-and-configuration&quot;&gt;core services&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/#additional-services-and-configuration&quot;&gt;services&lt;/a&gt; configuration, these projects do not need to follow any common structure or conventions other than clear ownership. They must not interfere with the core services in any way.&lt;/p&gt; 
&lt;p&gt;Additionally, manifests for building container images for component repositories live under &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/projects/&quot;&gt;&lt;code&gt;projects/&lt;/code&gt;&lt;/a&gt;. This purpose is deprecated; authors of components built by manifests in this directory should remove them and ensure that their component is appropriately built by the &lt;code&gt;ci-operator&lt;/code&gt; instead.&lt;/p&gt; 
&lt;h2&gt;Tooling Build Manifests&lt;/h2&gt; 
&lt;p&gt;Manifests for building container images for tools live under &lt;a href=&quot;https://raw.githubusercontent.com/openshift/release/master/tools/&quot;&gt;&lt;code&gt;tools/&lt;/code&gt;&lt;/a&gt;. These tools are either useful in managing this repository or are otherwise useful commonly across component repositories.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>antonbabenko/pre-commit-terraform</title>
      <link>https://github.com/antonbabenko/pre-commit-terraform</link>
      <description>&lt;p&gt;pre-commit git hooks to take care of Terraform configurations 🇺🇦&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Collection of git hooks for Terraform to be used with &lt;a href=&quot;http://pre-commit.com/&quot;&gt;pre-commit framework&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/antonbabenko/pre-commit-terraform/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/tag/antonbabenko/pre-commit-terraform.svg?sanitize=true&quot; alt=&quot;Latest Github tag&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/maintenance/yes/2025.svg?sanitize=true&quot; alt=&quot;Maintenance status&quot;&gt; &lt;a href=&quot;https://www.codetriage.com/antonbabenko/pre-commit-terraform&quot;&gt;&lt;img src=&quot;https://www.codetriage.com/antonbabenko/pre-commit-terraform/badges/users.svg?sanitize=true&quot; alt=&quot;Codetriage - Help Contribute to Open Source Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/antonbabenko/pre-commit-terraform/actions/workflows/ci-cd.yml&quot;&gt;&lt;img src=&quot;https://github.com/antonbabenko/pre-commit-terraform/actions/workflows/ci-cd.yml/badge.svg?branch=master&quot; alt=&quot;GHA Tests CI/CD Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.codecov.io/gh/antonbabenko/pre-commit-terraform?flags%5B%5D=pytest&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/antonbabenko/pre-commit-terraform/branch/master/graph/badge.svg?flag=pytest&quot; alt=&quot;Codecov pytest Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://scorecard.dev/viewer/?uri=github.com/antonbabenko/pre-commit-terraform&quot;&gt;&lt;img src=&quot;https://api.scorecard.dev/projects/github.com/antonbabenko/pre-commit-terraform/badge&quot; alt=&quot;OpenSSF Scorecard Badge&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/vshymanskyy/StandWithUkraine/raw/main/docs/README.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct.svg?sanitize=true&quot; alt=&quot;StandWithUkraine Banner&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- markdownlint-disable no-inline-html --&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/assets/pre-commit-terraform-banner.png&quot; alt=&quot;pre-commit-terraform logo&quot; width=&quot;700&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/antonbabenko/pre-commit-terraform&quot;&gt;&lt;code&gt;pre-commit-terraform&lt;/code&gt;&lt;/a&gt; provides a collection of &lt;a href=&quot;https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks&quot;&gt;Git Hooks&lt;/a&gt; for Terraform and related tools and is driven by the &lt;a href=&quot;https://pre-commit.com&quot;&gt;pre-commit framework&lt;/a&gt;. It helps ensure that Terraform, OpenTofu, and Terragrunt configurations are kept in good shape by automatically running various checks and formatting code before committing changes to version control system. This helps maintain code quality and consistency across the project.&lt;/p&gt; 
&lt;p&gt;It can be run:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Locally and in CI&lt;/li&gt; 
 &lt;li&gt;As standalone Git hooks or as a Docker image&lt;/li&gt; 
 &lt;li&gt;For the entire repository or just for change-related files (e.g., local git stash, last commit, or all changes in a Pull Request)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want to contribute? Check &lt;a href=&quot;https://github.com/antonbabenko/pre-commit-terraform/issues?q=label%3A%22good+first+issue%22+is%3Aopen+sort%3Aupdated-desc&quot;&gt;open issues&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/.github/CONTRIBUTING.md&quot;&gt;contributing notes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;If you want to support the development of &lt;code&gt;pre-commit-terraform&lt;/code&gt; and &lt;a href=&quot;https://github.com/antonbabenko/terraform-aws-devops&quot;&gt;many other open-source projects&lt;/a&gt;, please become a &lt;a href=&quot;https://github.com/sponsors/antonbabenko&quot;&gt;GitHub Sponsor&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Table of content&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#sponsors&quot;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#table-of-content&quot;&gt;Table of content&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#how-to-install&quot;&gt;How to install&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#1-install-dependencies&quot;&gt;1. Install dependencies&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#11-custom-terraform-binaries-and-opentofu-support&quot;&gt;1.1 Custom Terraform binaries and OpenTofu support&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#2-install-the-pre-commit-hook-globally&quot;&gt;2. Install the pre-commit hook globally&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#3-add-configs-and-hooks&quot;&gt;3. Add configs and hooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#4-run&quot;&gt;4. Run&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#available-hooks&quot;&gt;Available Hooks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#hooks-usage-notes-and-examples&quot;&gt;Hooks usage notes and examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#known-limitations&quot;&gt;Known limitations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#all-hooks-usage-of-environment-variables-in---args&quot;&gt;All hooks: Usage of environment variables in &lt;code&gt;--args&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#all-hooks-set-env-vars-inside-hook-at-runtime&quot;&gt;All hooks: Set env vars inside hook at runtime&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#all-hooks-disable-color-output&quot;&gt;All hooks: Disable color output&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#all-hooks-log-levels&quot;&gt;All hooks: Log levels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#many-hooks-parallelism&quot;&gt;Many hooks: Parallelism&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#checkov-deprecated-and-terraform_checkov&quot;&gt;checkov (deprecated) and terraform_checkov&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#infracost_breakdown&quot;&gt;infracost_breakdown&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&quot;&gt;terraform_docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs_replace-deprecated&quot;&gt;terraform_docs_replace (deprecated)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_fmt&quot;&gt;terraform_fmt&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_providers_lock&quot;&gt;terraform_providers_lock&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tflint&quot;&gt;terraform_tflint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tfsec-deprecated&quot;&gt;terraform_tfsec (deprecated)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_trivy&quot;&gt;terraform_trivy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&quot;&gt;terraform_validate&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_wrapper_module_for_each&quot;&gt;terraform_wrapper_module_for_each&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terrascan&quot;&gt;terrascan&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#tfupdate&quot;&gt;tfupdate&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terragrunt_providers_lock&quot;&gt;terragrunt_providers_lock&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terragrunt_validate_inputs&quot;&gt;terragrunt_validate_inputs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#docker-usage&quot;&gt;Docker Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#file-permissions&quot;&gt;File Permissions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#download-terraform-modules-from-private-github-repositories&quot;&gt;Download Terraform modules from private GitHub repositories&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#github-actions&quot;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#authors&quot;&gt;Authors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#license&quot;&gt;License&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#additional-information-for-users-from-russia-and-belarus&quot;&gt;Additional information for users from Russia and Belarus&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to install&lt;/h2&gt; 
&lt;h3&gt;1. Install dependencies&lt;/h3&gt; 
&lt;!-- (Do not remove html tags here) --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pre-commit.com/#install&quot;&gt;&lt;code&gt;pre-commit&lt;/code&gt;&lt;/a&gt;, &lt;sub&gt;&lt;sup&gt;&lt;a href=&quot;https://www.terraform.io/downloads.html&quot;&gt;&lt;code&gt;terraform&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://opentofu.org/docs/intro/install/&quot;&gt;&lt;code&gt;opentofu&lt;/code&gt;&lt;/a&gt;, &lt;sub&gt;&lt;sup&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt;, &lt;sub&gt;&lt;sup&gt;&lt;a href=&quot;https://www.gnu.org/software/bash/#download&quot;&gt;BASH &lt;code&gt;3.2.57&lt;/code&gt; or newer&lt;/a&gt;, &lt;sub&gt;&lt;sup&gt;Internet connection (on first run), &lt;sub&gt;&lt;sup&gt;x86_64 or arm64 compatible operating system, &lt;sub&gt;&lt;sup&gt;Some hardware where this OS will run, &lt;sub&gt;&lt;sup&gt;Electricity for hardware and internet connection, &lt;sub&gt;&lt;sup&gt;Some basic physical laws, &lt;sub&gt;&lt;sup&gt;Hope that it all will work. &lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;br&gt;&lt;br&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bridgecrewio/checkov&quot;&gt;&lt;code&gt;checkov&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_checkov&lt;/code&gt; hook&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/terraform-docs/terraform-docs&quot;&gt;&lt;code&gt;terraform-docs&lt;/code&gt;&lt;/a&gt; 0.12.0+ required for &lt;code&gt;terraform_docs&lt;/code&gt; hook&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gruntwork-io/terragrunt&quot;&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terragrunt_validate&lt;/code&gt; and &lt;code&gt;terragrunt_valid_inputs&lt;/code&gt; hooks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tenable/terrascan&quot;&gt;&lt;code&gt;terrascan&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terrascan&lt;/code&gt; hook&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/terraform-linters/tflint&quot;&gt;&lt;code&gt;TFLint&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_tflint&lt;/code&gt; hook&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aquasecurity/tfsec&quot;&gt;&lt;code&gt;TFSec&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_tfsec&lt;/code&gt; hook&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aquasecurity/trivy&quot;&gt;&lt;code&gt;Trivy&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_trivy&lt;/code&gt; hook&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/infracost/infracost&quot;&gt;&lt;code&gt;infracost&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;infracost_breakdown&lt;/code&gt; hook&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stedolan/jq&quot;&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_validate&lt;/code&gt; with &lt;code&gt;--retry-once-with-cleanup&lt;/code&gt; flag, and for &lt;code&gt;infracost_breakdown&lt;/code&gt; hook&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/minamijoyo/tfupdate&quot;&gt;&lt;code&gt;tfupdate&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;tfupdate&lt;/code&gt; hook&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/minamijoyo/hcledit&quot;&gt;&lt;code&gt;hcledit&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt; hook&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;1.1 Custom Terraform binaries and OpenTofu support&lt;/h4&gt; 
&lt;p&gt;It is possible to set custom path to &lt;code&gt;terraform&lt;/code&gt; binary.&lt;br&gt; This makes it possible to use &lt;a href=&quot;https://opentofu.org&quot;&gt;OpenTofu&lt;/a&gt; binary &lt;code&gt;tofu&lt;/code&gt; instead of &lt;code&gt;terraform&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;How binary discovery works and how you can redefine it (first matched takes precedence):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check if per hook configuration &lt;code&gt;--hook-config=--tf-path=&amp;lt;path_to_binary_or_binary_name&amp;gt;&lt;/code&gt; is set&lt;/li&gt; 
 &lt;li&gt;Check if &lt;code&gt;PCT_TFPATH=&amp;lt;path_to_binary_or_binary_name&amp;gt;&lt;/code&gt; environment variable is set&lt;/li&gt; 
 &lt;li&gt;Check if &lt;code&gt;TERRAGRUNT_TFPATH=&amp;lt;path_to_binary_or_binary_name&amp;gt;&lt;/code&gt; environment variable is set&lt;/li&gt; 
 &lt;li&gt;Check if &lt;code&gt;terraform&lt;/code&gt; binary can be found in the user&#39;s $PATH&lt;/li&gt; 
 &lt;li&gt;Check if &lt;code&gt;tofu&lt;/code&gt; binary can be found in the user&#39;s $PATH&lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Docker&lt;/b&gt;&lt;/summary&gt;
 &lt;br&gt; 
 &lt;p&gt;&lt;strong&gt;Pull docker image with all hooks&lt;/strong&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;TAG=latest
docker pull ghcr.io/antonbabenko/pre-commit-terraform:$TAG
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;All available tags &lt;a href=&quot;https://github.com/antonbabenko/pre-commit-terraform/pkgs/container/pre-commit-terraform/versions&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Build from scratch&lt;/strong&gt;:&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;[!IMPORTANT] To build image you need to have &lt;a href=&quot;https://docs.docker.com/build/install-buildx/&quot;&gt;&lt;code&gt;docker buildx&lt;/code&gt;&lt;/a&gt; enabled as default builder.&lt;br&gt; Otherwise - provide &lt;code&gt;TARGETOS&lt;/code&gt; and &lt;code&gt;TARGETARCH&lt;/code&gt; as additional &lt;code&gt;--build-arg&lt;/code&gt;&#39;s to &lt;code&gt;docker build&lt;/code&gt;.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;When hooks-related &lt;code&gt;--build-arg&lt;/code&gt;s are not specified, only the latest version of &lt;code&gt;pre-commit&lt;/code&gt; and &lt;code&gt;terraform&lt;/code&gt; will be installed.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone git@github.com:antonbabenko/pre-commit-terraform.git
cd pre-commit-terraform
# Install the latest versions of all the tools
docker build -t pre-commit-terraform --build-arg INSTALL_ALL=true .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To install a specific version of individual tools, define it using &lt;code&gt;--build-arg&lt;/code&gt; arguments or set it to &lt;code&gt;latest&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker build -t pre-commit-terraform \
    --build-arg PRE_COMMIT_VERSION=latest \
    --build-arg OPENTOFU_VERSION=latest \
    --build-arg TERRAFORM_VERSION=1.5.7 \
    --build-arg CHECKOV_VERSION=2.0.405 \
    --build-arg HCLEDIT_VERSION=latest \
    --build-arg INFRACOST_VERSION=latest \
    --build-arg TERRAFORM_DOCS_VERSION=0.15.0 \
    --build-arg TERRAGRUNT_VERSION=latest \
    --build-arg TERRASCAN_VERSION=1.10.0 \
    --build-arg TFLINT_VERSION=0.31.0 \
    --build-arg TFSEC_VERSION=latest \
    --build-arg TFUPDATE_VERSION=latest \
    --build-arg TRIVY_VERSION=latest \
    .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Set &lt;code&gt;-e PRE_COMMIT_COLOR=never&lt;/code&gt; to disable the color output in &lt;code&gt;pre-commit&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;MacOS&lt;/b&gt;&lt;/summary&gt;
 &lt;br&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew install pre-commit terraform-docs tflint tfsec trivy checkov terrascan infracost tfupdate minamijoyo/hcledit/hcledit jq
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Ubuntu 18.04&lt;/b&gt;&lt;/summary&gt;
 &lt;br&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt update
sudo apt install -y unzip software-properties-common
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt install -y python3.7 python3-pip
python3 -m pip install --upgrade pip
pip3 install --no-cache-dir pre-commit
python3.7 -m pip install -U checkov
curl -L &quot;$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E -m 1 &quot;https://.+?-linux-amd64.tar.gz&quot;)&quot; &amp;gt; terraform-docs.tgz &amp;amp;&amp;amp; tar -xzf terraform-docs.tgz &amp;amp;&amp;amp; rm terraform-docs.tgz &amp;amp;&amp;amp; chmod +x terraform-docs &amp;amp;&amp;amp; sudo mv terraform-docs /usr/bin/
curl -L &quot;$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E -m 1 &quot;https://.+?_linux_amd64.zip&quot;)&quot; &amp;gt; tflint.zip &amp;amp;&amp;amp; unzip tflint.zip &amp;amp;&amp;amp; rm tflint.zip &amp;amp;&amp;amp; sudo mv tflint /usr/bin/
curl -L &quot;$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E -m 1 &quot;https://.+?tfsec-linux-amd64&quot;)&quot; &amp;gt; tfsec &amp;amp;&amp;amp; chmod +x tfsec &amp;amp;&amp;amp; sudo mv tfsec /usr/bin/
curl -L &quot;$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep -o -E -i -m 1 &quot;https://.+?/trivy_.+?_Linux-64bit.tar.gz&quot;)&quot; &amp;gt; trivy.tar.gz &amp;amp;&amp;amp; tar -xzf trivy.tar.gz trivy &amp;amp;&amp;amp; rm trivy.tar.gz &amp;amp;&amp;amp; sudo mv trivy /usr/bin
curl -L &quot;$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E -m 1 &quot;https://.+?_Linux_x86_64.tar.gz&quot;)&quot; &amp;gt; terrascan.tar.gz &amp;amp;&amp;amp; tar -xzf terrascan.tar.gz terrascan &amp;amp;&amp;amp; rm terrascan.tar.gz &amp;amp;&amp;amp; sudo mv terrascan /usr/bin/ &amp;amp;&amp;amp; terrascan init
sudo apt install -y jq &amp;amp;&amp;amp; \
curl -L &quot;$(curl -s https://api.github.com/repos/infracost/infracost/releases/latest | grep -o -E -m 1 &quot;https://.+?-linux-amd64.tar.gz&quot;)&quot; &amp;gt; infracost.tgz &amp;amp;&amp;amp; tar -xzf infracost.tgz &amp;amp;&amp;amp; rm infracost.tgz &amp;amp;&amp;amp; sudo mv infracost-linux-amd64 /usr/bin/infracost &amp;amp;&amp;amp; infracost auth login
curl -L &quot;$(curl -s https://api.github.com/repos/minamijoyo/tfupdate/releases/latest | grep -o -E -m 1 &quot;https://.+?_linux_amd64.tar.gz&quot;)&quot; &amp;gt; tfupdate.tar.gz &amp;amp;&amp;amp; tar -xzf tfupdate.tar.gz tfupdate &amp;amp;&amp;amp; rm tfupdate.tar.gz &amp;amp;&amp;amp; sudo mv tfupdate /usr/bin/
curl -L &quot;$(curl -s https://api.github.com/repos/minamijoyo/hcledit/releases/latest | grep -o -E -m 1 &quot;https://.+?_linux_amd64.tar.gz&quot;)&quot; &amp;gt; hcledit.tar.gz &amp;amp;&amp;amp; tar -xzf hcledit.tar.gz hcledit &amp;amp;&amp;amp; rm hcledit.tar.gz &amp;amp;&amp;amp; sudo mv hcledit /usr/bin/
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Ubuntu 20.04+&lt;/b&gt;&lt;/summary&gt;
 &lt;br&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt update
sudo apt install -y unzip software-properties-common python3 python3-pip python-is-python3
python3 -m pip install --upgrade pip
pip3 install --no-cache-dir pre-commit
pip3 install --no-cache-dir checkov
curl -L &quot;$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E -m 1 &quot;https://.+?-linux-amd64.tar.gz&quot;)&quot; &amp;gt; terraform-docs.tgz &amp;amp;&amp;amp; tar -xzf terraform-docs.tgz terraform-docs &amp;amp;&amp;amp; rm terraform-docs.tgz &amp;amp;&amp;amp; chmod +x terraform-docs &amp;amp;&amp;amp; sudo mv terraform-docs /usr/bin/
curl -L &quot;$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E -m 1 &quot;https://.+?_Linux_x86_64.tar.gz&quot;)&quot; &amp;gt; terrascan.tar.gz &amp;amp;&amp;amp; tar -xzf terrascan.tar.gz terrascan &amp;amp;&amp;amp; rm terrascan.tar.gz &amp;amp;&amp;amp; sudo mv terrascan /usr/bin/ &amp;amp;&amp;amp; terrascan init
curl -L &quot;$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E -m 1 &quot;https://.+?_linux_amd64.zip&quot;)&quot; &amp;gt; tflint.zip &amp;amp;&amp;amp; unzip tflint.zip &amp;amp;&amp;amp; rm tflint.zip &amp;amp;&amp;amp; sudo mv tflint /usr/bin/
curl -L &quot;$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E -m 1 &quot;https://.+?tfsec-linux-amd64&quot;)&quot; &amp;gt; tfsec &amp;amp;&amp;amp; chmod +x tfsec &amp;amp;&amp;amp; sudo mv tfsec /usr/bin/
curl -L &quot;$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep -o -E -i -m 1 &quot;https://.+?/trivy_.+?_Linux-64bit.tar.gz&quot;)&quot; &amp;gt; trivy.tar.gz &amp;amp;&amp;amp; tar -xzf trivy.tar.gz trivy &amp;amp;&amp;amp; rm trivy.tar.gz &amp;amp;&amp;amp; sudo mv trivy /usr/bin
sudo apt install -y jq &amp;amp;&amp;amp; \
curl -L &quot;$(curl -s https://api.github.com/repos/infracost/infracost/releases/latest | grep -o -E -m 1 &quot;https://.+?-linux-amd64.tar.gz&quot;)&quot; &amp;gt; infracost.tgz &amp;amp;&amp;amp; tar -xzf infracost.tgz &amp;amp;&amp;amp; rm infracost.tgz &amp;amp;&amp;amp; sudo mv infracost-linux-amd64 /usr/bin/infracost &amp;amp;&amp;amp; infracost auth login
curl -L &quot;$(curl -s https://api.github.com/repos/minamijoyo/tfupdate/releases/latest | grep -o -E -m 1 &quot;https://.+?_linux_amd64.tar.gz&quot;)&quot; &amp;gt; tfupdate.tar.gz &amp;amp;&amp;amp; tar -xzf tfupdate.tar.gz tfupdate &amp;amp;&amp;amp; rm tfupdate.tar.gz &amp;amp;&amp;amp; sudo mv tfupdate /usr/bin/
curl -L &quot;$(curl -s https://api.github.com/repos/minamijoyo/hcledit/releases/latest | grep -o -E -m 1 &quot;https://.+?_linux_amd64.tar.gz&quot;)&quot; &amp;gt; hcledit.tar.gz &amp;amp;&amp;amp; tar -xzf hcledit.tar.gz hcledit &amp;amp;&amp;amp; rm hcledit.tar.gz &amp;amp;&amp;amp; sudo mv hcledit /usr/bin/
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Windows 10/11&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;We highly recommend using &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/wsl/install&quot;&gt;WSL/WSL2&lt;/a&gt; with Ubuntu and following the Ubuntu installation guide. Or use Docker.&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;[!IMPORTANT] We won&#39;t be able to help with issues that can&#39;t be reproduced in Linux/Mac. So, try to find a working solution and send PR before open an issue.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;Otherwise, you can follow &lt;a href=&quot;https://gist.github.com/etiennejeanneaurevolve/1ed387dc73c5d4cb53ab313049587d09&quot;&gt;this gist&lt;/a&gt;:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Install &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://gitforwindows.org/&quot;&gt;&lt;code&gt;gitbash&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Install &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;Python 3&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Install all prerequisites needed (see above)&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;Ensure your PATH environment variable looks for &lt;code&gt;bash.exe&lt;/code&gt; in &lt;code&gt;C:\Program Files\Git\bin&lt;/code&gt; (the one present in &lt;code&gt;C:\Windows\System32\bash.exe&lt;/code&gt; does not work with &lt;code&gt;pre-commit.exe&lt;/code&gt;)&lt;/p&gt; 
 &lt;p&gt;For &lt;code&gt;checkov&lt;/code&gt;, you may need to also set your &lt;code&gt;PYTHONPATH&lt;/code&gt; environment variable with the path to your Python modules.&lt;br&gt; E.g. &lt;code&gt;C:\Users\USERNAME\AppData\Local\Programs\Python\Python39\Lib\site-packages&lt;/code&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;2. Install the pre-commit hook globally&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Not needed if you use the Docker image&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;DIR=~/.git-template
git config --global init.templateDir ${DIR}
pre-commit init-templatedir -t pre-commit ${DIR}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. Add configs and hooks&lt;/h3&gt; 
&lt;p&gt;Step into the repository you want to have the pre-commit hooks installed and run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git init
cat &amp;lt;&amp;lt;EOF &amp;gt; .pre-commit-config.yaml
repos:
- repo: https://github.com/antonbabenko/pre-commit-terraform
  rev: &amp;lt;VERSION&amp;gt; # Get the latest from: https://github.com/antonbabenko/pre-commit-terraform/releases
  hooks:
    - id: terraform_fmt
    - id: terraform_docs
EOF
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;4. Run&lt;/h3&gt; 
&lt;p&gt;Execute this command to run &lt;code&gt;pre-commit&lt;/code&gt; on all files in the repository (not only changed files):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pre-commit run -a
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, using Docker (&lt;a href=&quot;https://github.com/antonbabenko/pre-commit-terraform/pkgs/container/pre-commit-terraform/versions&quot;&gt;available tags&lt;/a&gt;):&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] This command uses your user id and group id for the docker container to use to access the local files. If the files are owned by another user, update the &lt;code&gt;USERID&lt;/code&gt; environment variable. See &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#file-permissions&quot;&gt;File Permissions section&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;TAG=latest
docker run -e &quot;USERID=$(id -u):$(id -g)&quot; -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:$TAG run -a
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Execute this command to list the versions of the tools in Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;TAG=latest
docker run --rm --entrypoint cat ghcr.io/antonbabenko/pre-commit-terraform:$TAG /usr/bin/tools_versions_info
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Available Hooks&lt;/h2&gt; 
&lt;p&gt;There are several &lt;a href=&quot;https://pre-commit.com/&quot;&gt;pre-commit&lt;/a&gt; hooks to keep Terraform configurations (both &lt;code&gt;*.tf&lt;/code&gt; and &lt;code&gt;*.tfvars&lt;/code&gt;) and Terragrunt configurations (&lt;code&gt;*.hcl&lt;/code&gt;) in a good shape:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Hook name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Dependencies&lt;br&gt;&lt;sup&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#1-install-dependencies&quot;&gt;Install instructions here&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;checkov&lt;/code&gt; and &lt;code&gt;terraform_checkov&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/bridgecrewio/checkov&quot;&gt;checkov&lt;/a&gt; static analysis of terraform templates to spot potential security issues. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#checkov-deprecated-and-terraform_checkov&quot;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;checkov&lt;/code&gt;&lt;br&gt;Ubuntu deps: &lt;code&gt;python3&lt;/code&gt;, &lt;code&gt;python3-pip&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;infracost_breakdown&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Check how much your infra costs with &lt;a href=&quot;https://github.com/infracost/infracost&quot;&gt;infracost&lt;/a&gt;. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#infracost_breakdown&quot;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;infracost&lt;/code&gt;, &lt;code&gt;jq&lt;/code&gt;, &lt;a href=&quot;https://www.infracost.io/docs/#2-get-api-key&quot;&gt;Infracost API key&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terraform_docs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Inserts input and output documentation into &lt;code&gt;README.md&lt;/code&gt;. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&quot;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;terraform-docs&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Runs &lt;code&gt;terraform-docs&lt;/code&gt; and pipes the output directly to README.md. &lt;strong&gt;DEPRECATED&lt;/strong&gt;, see &lt;a href=&quot;https://github.com/antonbabenko/pre-commit-terraform/issues/248&quot;&gt;#248&lt;/a&gt;. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs_replace-deprecated&quot;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;python3&lt;/code&gt;, &lt;code&gt;terraform-docs&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terraform_docs_without_&lt;/code&gt;&lt;br&gt;&lt;code&gt;aggregate_type_defaults&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Inserts input and output documentation into &lt;code&gt;README.md&lt;/code&gt; without aggregate type defaults. Hook notes same as for &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&quot;&gt;terraform_docs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;terraform-docs&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terraform_fmt&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Reformat all Terraform configuration files to a canonical format. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_fmt&quot;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Updates provider signatures in &lt;a href=&quot;https://www.terraform.io/docs/cli/commands/providers/lock.html&quot;&gt;dependency lock files&lt;/a&gt;. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_providers_lock&quot;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terraform_tflint&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Validates all Terraform configuration files with &lt;a href=&quot;https://github.com/terraform-linters/tflint&quot;&gt;TFLint&lt;/a&gt;. &lt;a href=&quot;https://github.com/terraform-linters/tflint-ruleset-terraform/raw/main/docs/rules/README.md&quot;&gt;Available TFLint rules&lt;/a&gt;. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tflint&quot;&gt;Hook notes&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;tflint&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terraform_tfsec&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/aquasecurity/tfsec&quot;&gt;TFSec&lt;/a&gt; static analysis of terraform templates to spot potential security issues. &lt;strong&gt;DEPRECATED&lt;/strong&gt;, use &lt;code&gt;terraform_trivy&lt;/code&gt;. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tfsec-deprecated&quot;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;tfsec&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terraform_trivy&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/aquasecurity/trivy&quot;&gt;Trivy&lt;/a&gt; static analysis of terraform templates to spot potential security issues. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_trivy&quot;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;trivy&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terraform_validate&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Validates all Terraform configuration files. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&quot;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;jq&lt;/code&gt;, only for &lt;code&gt;--retry-once-with-cleanup&lt;/code&gt; flag&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terragrunt_fmt&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Reformat all &lt;a href=&quot;https://github.com/gruntwork-io/terragrunt&quot;&gt;Terragrunt&lt;/a&gt; configuration files (&lt;code&gt;*.hcl&lt;/code&gt;) to a canonical format.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terragrunt_validate&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Validates all &lt;a href=&quot;https://github.com/gruntwork-io/terragrunt&quot;&gt;Terragrunt&lt;/a&gt; configuration files (&lt;code&gt;*.hcl&lt;/code&gt;)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terragrunt_validate_inputs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Validates &lt;a href=&quot;https://github.com/gruntwork-io/terragrunt&quot;&gt;Terragrunt&lt;/a&gt; unused and undefined inputs (&lt;code&gt;*.hcl&lt;/code&gt;)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terragrunt_providers_lock&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Generates &lt;code&gt;.terraform.lock.hcl&lt;/code&gt; files using &lt;a href=&quot;https://github.com/gruntwork-io/terragrunt&quot;&gt;Terragrunt&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Generates Terraform wrappers with &lt;code&gt;for_each&lt;/code&gt; in module. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_wrapper_module_for_each&quot;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;hcledit&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;terrascan&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/tenable/terrascan&quot;&gt;terrascan&lt;/a&gt; Detect compliance and security violations. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terrascan&quot;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;terrascan&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;tfupdate&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/minamijoyo/tfupdate&quot;&gt;tfupdate&lt;/a&gt; Update version constraints of Terraform core, providers, and modules. &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#tfupdate&quot;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;tfupdate&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Check the &lt;a href=&quot;https://github.com/antonbabenko/pre-commit-terraform/raw/master/.pre-commit-hooks.yaml&quot;&gt;source file&lt;/a&gt; to know arguments used for each hook.&lt;/p&gt; 
&lt;h2&gt;Hooks usage notes and examples&lt;/h2&gt; 
&lt;h3&gt;Known limitations&lt;/h3&gt; 
&lt;p&gt;Terraform operates on a per-dir basis, while &lt;code&gt;pre-commit&lt;/code&gt; framework only supports files and files that exist. This means if you only remove the TF-related file without any other changes in the same dir, checks will be skipped. Example and details &lt;a href=&quot;https://github.com/pre-commit/pre-commit/issues/3048&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;All hooks: Usage of environment variables in &lt;code&gt;--args&lt;/code&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;All, except deprecated hooks: &lt;code&gt;checkov&lt;/code&gt;, &lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can use environment variables for the &lt;code&gt;--args&lt;/code&gt; section.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] You &lt;em&gt;must&lt;/em&gt; use the &lt;code&gt;${ENV_VAR}&lt;/code&gt; definition, &lt;code&gt;$ENV_VAR&lt;/code&gt; will not expand.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Config example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_tflint
  args:
  - --args=--config=${CONFIG_NAME}.${CONFIG_EXT}
  - --args=--module
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If for config above set up &lt;code&gt;export CONFIG_NAME=.tflint; export CONFIG_EXT=hcl&lt;/code&gt; before &lt;code&gt;pre-commit run&lt;/code&gt;, args will be expanded to &lt;code&gt;--config=.tflint.hcl --module&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;All hooks: Set env vars inside hook at runtime&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;All, except deprecated hooks: &lt;code&gt;checkov&lt;/code&gt;, &lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can specify environment variables that will be passed to the hook at runtime.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Variable values are exported &lt;em&gt;verbatim&lt;/em&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;No interpolation or expansion are applied&lt;/li&gt; 
  &lt;li&gt;The enclosing double quotes are removed if they are provided&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Config example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_validate
  args:
    - --env-vars=AWS_DEFAULT_REGION=&quot;us-west-2&quot;
    - --env-vars=AWS_PROFILE=&quot;my-aws-cli-profile&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;All hooks: Disable color output&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;All, except deprecated hooks: &lt;code&gt;checkov&lt;/code&gt;, &lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To disable color output for all hooks, set &lt;code&gt;PRE_COMMIT_COLOR=never&lt;/code&gt; var. Eg:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;PRE_COMMIT_COLOR=never pre-commit run
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;All hooks: Log levels&lt;/h3&gt; 
&lt;p&gt;In case you need to debug hooks, you can set &lt;code&gt;PCT_LOG=trace&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;PCT_LOG=trace pre-commit run -a
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Less verbose log levels will be implemented in &lt;a href=&quot;https://github.com/antonbabenko/pre-commit-terraform/issues/562&quot;&gt;#562&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Many hooks: Parallelism&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;All, except deprecated hooks: &lt;code&gt;checkov&lt;/code&gt;, &lt;code&gt;terraform_docs_replace&lt;/code&gt; and hooks which can&#39;t be paralleled this way: &lt;code&gt;infracost_breakdown&lt;/code&gt;, &lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt;.&lt;br&gt; Also, there&#39;s a chance that parallelism have no effect on &lt;code&gt;terragrunt_fmt&lt;/code&gt; and &lt;code&gt;terragrunt_validate&lt;/code&gt; hooks&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;By default, parallelism is set to &lt;code&gt;number of logical CPUs - 1&lt;/code&gt;.&lt;br&gt; If you&#39;d like to disable parallelism, set it to &lt;code&gt;1&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terragrunt_validate
  args:
    - --hook-config=--parallelism-limit=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the same way you can set it to any positive integer.&lt;/p&gt; 
&lt;p&gt;If you&#39;d like to set parallelism value relative to number of CPU logical cores - provide valid Bash arithmetic expression and use &lt;code&gt;CPU&lt;/code&gt; as a reference to the number of CPU logical cores&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_providers_lock
  args:
    - --hook-config=--parallelism-limit=CPU*4
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;details&gt;
  &lt;summary&gt;Info useful for parallelism fine-tunning&lt;/summary&gt; 
  &lt;br&gt; Tests below were run on repo with 45 Terraform dirs on laptop with 16 CPUs, SSD and 1Gbit/s network. Laptop was slightly used in the process. 
  &lt;p&gt;Observed results may vary greatly depending on your repo structure, machine characteristics and their usage.&lt;/p&gt; 
  &lt;p&gt;If during fine-tuning you&#39;ll find that your results are very different from provided below and you think that this data could help someone else - feel free to send PR.&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Hook&lt;/th&gt; 
     &lt;th&gt;Most used resource&lt;/th&gt; 
     &lt;th&gt;Comparison of optimization results / Notes&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;terraform_checkov&lt;/td&gt; 
     &lt;td&gt;CPU heavy&lt;/td&gt; 
     &lt;td&gt;-&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;terraform_fmt&lt;/td&gt; 
     &lt;td&gt;CPU heavy&lt;/td&gt; 
     &lt;td&gt;-&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;terraform_providers_lock (3 platforms,&lt;br&gt;&lt;code&gt;--mode=always-regenerate-lockfile&lt;/code&gt;)&lt;/td&gt; 
     &lt;td&gt;Network &amp;amp; Disk heavy&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;defaults (CPU-1)&lt;/code&gt; - 3m 39s; &lt;code&gt;CPU*2&lt;/code&gt; - 3m 19s; &lt;code&gt;CPU*4&lt;/code&gt; - 2m 56s&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;terraform_tflint&lt;/td&gt; 
     &lt;td&gt;CPU heavy&lt;/td&gt; 
     &lt;td&gt;-&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;terraform_tfsec&lt;/td&gt; 
     &lt;td&gt;CPU heavy&lt;/td&gt; 
     &lt;td&gt;-&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;terraform_trivy&lt;/td&gt; 
     &lt;td&gt;CPU moderate&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;defaults (CPU-1)&lt;/code&gt; - 32s; &lt;code&gt;CPU*2&lt;/code&gt; - 30s; &lt;code&gt;CPU*4&lt;/code&gt; - 31s&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;terraform_validate (t validate only)&lt;/td&gt; 
     &lt;td&gt;CPU heavy&lt;/td&gt; 
     &lt;td&gt;-&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;terraform_validate (t init + t validate)&lt;/td&gt; 
     &lt;td&gt;Network &amp;amp; Disk heavy, CPU moderate&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;defaults (CPU-1)&lt;/code&gt; - 1m 30s; &lt;code&gt;CPU*2&lt;/code&gt; - 1m 25s; &lt;code&gt;CPU*4&lt;/code&gt; - 1m 41s&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;terragrunt_fmt&lt;/td&gt; 
     &lt;td&gt;CPU heavy&lt;/td&gt; 
     &lt;td&gt;N/A? need more info from TG users&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;terragrunt_validate&lt;/td&gt; 
     &lt;td&gt;CPU heavy&lt;/td&gt; 
     &lt;td&gt;N/A? need more info from TG users&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;terrascan&lt;/td&gt; 
     &lt;td&gt;CPU moderate-heavy&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;defaults (CPU-1)&lt;/code&gt; - 8s; &lt;code&gt;CPU*2&lt;/code&gt; - 6s&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;tfupdate&lt;/td&gt; 
     &lt;td&gt;Disk/Network?&lt;/td&gt; 
     &lt;td&gt;too quick in any settings. More info needed&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/details&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;args:
  - --hook-config=--parallelism-ci-cpu-cores=N
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you don&#39;t see code above in your &lt;code&gt;pre-commit-config.yaml&lt;/code&gt; or logs - you don&#39;t need it.&lt;br&gt; &lt;code&gt;--parallelism-ci-cpu-cores&lt;/code&gt; used only in edge cases and is ignored in other situations. Check out its usage in &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/hooks/_common.sh&quot;&gt;hooks/_common.sh&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;checkov (deprecated) and terraform_checkov&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;checkov&lt;/code&gt; hook is deprecated, please use &lt;code&gt;terraform_checkov&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Note that &lt;code&gt;terraform_checkov&lt;/code&gt; runs recursively during &lt;code&gt;-d .&lt;/code&gt; usage. That means, for example, if you change &lt;code&gt;.tf&lt;/code&gt; file in repo root, all existing &lt;code&gt;.tf&lt;/code&gt; files in the repo will be checked.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;You can specify custom arguments. E.g.:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_checkov
  args:
    - --args=--quiet
    - --args=--skip-check CKV2_AWS_8
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Check all available arguments &lt;a href=&quot;https://www.checkov.io/2.Basics/CLI%20Command%20Reference.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For deprecated hook you need to specify each argument separately:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: checkov
  args: [
    &quot;-d&quot;, &quot;.&quot;,
    &quot;--skip-check&quot;, &quot;CKV2_AWS_8&quot;,
  ]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;When you have multiple directories and want to run &lt;code&gt;terraform_checkov&lt;/code&gt; in all of them and share a single config file - use the &lt;code&gt;__GIT_WORKING_DIR__&lt;/code&gt; placeholder. It will be replaced by &lt;code&gt;terraform_checkov&lt;/code&gt; hooks with the Git working directory (repo root) at run time. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_checkov
  args:
    - --args=--config-file __GIT_WORKING_DIR__/.checkov.yml
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;infracost_breakdown&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;infracost_breakdown&lt;/code&gt; executes &lt;code&gt;infracost breakdown&lt;/code&gt; command and compare the estimated costs with those specified in the hook-config. &lt;code&gt;infracost breakdown&lt;/code&gt; parses Terraform HCL code, and calls Infracost Cloud Pricing API (remote version or &lt;a href=&quot;https://www.infracost.io/docs/cloud_pricing_api/self_hosted&quot;&gt;self-hosted version&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Unlike most other hooks, this hook triggers once if there are any changed files in the repository.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;infracost_breakdown&lt;/code&gt; supports all &lt;code&gt;infracost breakdown&lt;/code&gt; arguments (run &lt;code&gt;infracost breakdown --help&lt;/code&gt; to see them). The following example only shows costs:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: infracost_breakdown
  args:
    - --args=--path=./env/dev
  verbose: true # Always show costs
&lt;/code&gt;&lt;/pre&gt; 
  &lt;details&gt;
   &lt;summary&gt;Output&lt;/summary&gt; 
   &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Running in &quot;env/dev&quot;

Summary: {
&quot;unsupportedResourceCounts&quot;: {
    &quot;aws_sns_topic_subscription&quot;: 1
  }
}

Total Monthly Cost:        86.83 USD
Total Monthly Cost (diff): 86.83 USD
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Note that spaces are not allowed in &lt;code&gt;--args&lt;/code&gt;, so you need to split it, like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: infracost_breakdown
  args:
    - --args=--path=./env/dev
    - --args=--terraform-var-file=&quot;terraform.tfvars&quot;
    - --args=--terraform-var-file=&quot;../terraform.tfvars&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;(Optionally) Define &lt;code&gt;cost constraints&lt;/code&gt; the hook should evaluate successfully in order to pass:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: infracost_breakdown
  args:
    - --args=--path=./env/dev
    - --hook-config=&#39;.totalHourlyCost|tonumber &amp;gt; 0.1&#39;
    - --hook-config=&#39;.totalHourlyCost|tonumber &amp;gt; 1&#39;
    - --hook-config=&#39;.projects[].diff.totalMonthlyCost|tonumber != 10000&#39;
    - --hook-config=&#39;.currency == &quot;USD&quot;&#39;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;details&gt;
   &lt;summary&gt;Output&lt;/summary&gt; 
   &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Running in &quot;env/dev&quot;
Passed: .totalHourlyCost|tonumber &amp;gt; 0.1         0.11894520547945205 &amp;gt;  0.1
Failed: .totalHourlyCost|tonumber &amp;gt; 1           0.11894520547945205 &amp;gt;  1
Passed: .projects[].diff.totalMonthlyCost|tonumber !=10000              86.83 != 10000
Passed: .currency == &quot;USD&quot;              &quot;USD&quot; == &quot;USD&quot;

Summary: {
&quot;unsupportedResourceCounts&quot;: {
    &quot;aws_sns_topic_subscription&quot;: 1
  }
}

Total Monthly Cost:        86.83 USD
Total Monthly Cost (diff): 86.83 USD
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Only one path per one hook (&lt;code&gt;- id: infracost_breakdown&lt;/code&gt;) is allowed.&lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;verbose: true&lt;/code&gt; to see cost even when the checks are passed.&lt;/li&gt; 
   &lt;li&gt;Hook uses &lt;code&gt;jq&lt;/code&gt; to process the cost estimation report returned by &lt;code&gt;infracost breakdown&lt;/code&gt; command&lt;/li&gt; 
   &lt;li&gt;Expressions defined as &lt;code&gt;--hook-config&lt;/code&gt; argument should be in a jq-compatible format (e.g. &lt;code&gt;.totalHourlyCost&lt;/code&gt;, &lt;code&gt;.totalMonthlyCost&lt;/code&gt;) To study json output produced by &lt;code&gt;infracost&lt;/code&gt;, run the command &lt;code&gt;infracost breakdown -p PATH_TO_TF_DIR --format json&lt;/code&gt;, and explore it on &lt;a href=&quot;https://jqplay.org/&quot;&gt;jqplay.org&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Supported comparison operators: &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Most useful paths and checks: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;.totalHourlyCost&lt;/code&gt; (same as &lt;code&gt;.projects[].breakdown.totalHourlyCost&lt;/code&gt;) - show total hourly infra cost&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;.totalMonthlyCost&lt;/code&gt; (same as &lt;code&gt;.projects[].breakdown.totalMonthlyCost&lt;/code&gt;) - show total monthly infra cost&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;.projects[].diff.totalHourlyCost&lt;/code&gt; - show the difference in hourly cost for the existing infra and tf plan&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;.projects[].diff.totalMonthlyCost&lt;/code&gt; - show the difference in monthly cost for the existing infra and tf plan&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;.diffTotalHourlyCost&lt;/code&gt; (for Infracost version 0.9.12 or newer) or &lt;code&gt;[.projects[].diff.totalMonthlyCost | select (.!=null) | tonumber] | add&lt;/code&gt; (for Infracost older than 0.9.12)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Docker usage&lt;/strong&gt;. In &lt;code&gt;docker build&lt;/code&gt; or &lt;code&gt;docker run&lt;/code&gt; command:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You need to provide &lt;a href=&quot;https://www.infracost.io/docs/integrations/environment_variables/#infracost_api_key&quot;&gt;Infracost API key&lt;/a&gt; via &lt;code&gt;-e INFRACOST_API_KEY=&amp;lt;your token&amp;gt;&lt;/code&gt;. By default, it is saved in &lt;code&gt;~/.config/infracost/credentials.yml&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;-e INFRACOST_SKIP_UPDATE_CHECK=true&lt;/code&gt; to &lt;a href=&quot;https://www.infracost.io/docs/integrations/environment_variables/#infracost_skip_update_check&quot;&gt;skip the Infracost update check&lt;/a&gt; if you use this hook as part of your CI/CD pipeline.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;terraform_docs&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_docs&lt;/code&gt; and &lt;code&gt;terraform_docs_without_aggregate_type_defaults&lt;/code&gt; will insert/update documentation generated by &lt;a href=&quot;https://github.com/terraform-docs/terraform-docs&quot;&gt;terraform-docs&lt;/a&gt; framed by markers:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;&amp;lt;!-- BEGIN_TF_DOCS --&amp;gt;

&amp;lt;!-- END_TF_DOCS --&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;if they are present in &lt;code&gt;README.md&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;It is possible to pass additional arguments to shell scripts when using &lt;code&gt;terraform_docs&lt;/code&gt; and &lt;code&gt;terraform_docs_without_aggregate_type_defaults&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;It is possible to automatically:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;create a documentation file&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;extend existing documentation file by appending markers to the end of the file (see item 1 above)&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;use different filename for the documentation (default is &lt;code&gt;README.md&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;use the same insertion markers as &lt;code&gt;terraform-docs&lt;/code&gt;. It&#39;s default starting from &lt;code&gt;v1.93&lt;/code&gt;.&lt;br&gt; To migrate everything to &lt;code&gt;terraform-docs&lt;/code&gt; insertion markers, run in repo root:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sed --version &amp;amp;&amp;gt; /dev/null &amp;amp;&amp;amp; SED_CMD=(sed -i) || SED_CMD=(sed -i &#39;&#39;)
grep -rl --null &#39;BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK&#39; . | xargs -0 &quot;${SED_CMD[@]}&quot; -e &#39;s/BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK/BEGIN_TF_DOCS/&#39;
grep -rl --null &#39;END OF PRE-COMMIT-TERRAFORM DOCS HOOK&#39; . | xargs -0 &quot;${SED_CMD[@]}&quot; -e &#39;s/END OF PRE-COMMIT-TERRAFORM DOCS HOOK/END_TF_DOCS/&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_docs
  args:
    - --hook-config=--path-to-file=README.md        # Valid UNIX path. I.e. ../TFDOC.md or docs/README.md etc.
    - --hook-config=--add-to-existing-file=true     # Boolean. true or false
    - --hook-config=--create-file-if-not-exist=true # Boolean. true or false
    - --hook-config=--use-standard-markers=true     # Boolean. Defaults to true (v1.93+), false (&amp;lt;v1.93). Set to true for compatibility with terraform-docs
      # The following two options &quot;--custom-marker-begin&quot; and &quot;--custom-marker-end&quot; are ignored if &quot;--use-standard-markers&quot; is set to false
    - --hook-config=--custom-marker-begin=&amp;lt;!-- BEGIN_TF_DOCS --&amp;gt;  # String.
                                                    # Set to use custom marker which helps you with using other formats like asciidoc.
                                                    # For Asciidoc this could be &quot;--hook-config=--custom-marker-begin=// BEGIN_TF_DOCS&quot;
    - --hook-config=--custom-marker-end=&amp;lt;!-- END_TF_DOCS --&amp;gt;  # String.
                                                    # Set to use custom marker which helps you with using other formats like asciidoc.
                                                    # For Asciidoc this could be &quot;--hook-config=--custom-marker-end=// END_TF_DOCS&quot;
    - --hook-config=--custom-doc-header=&quot;# &quot;        # String. Defaults to &quot;# &quot;
                                                    # Set to use custom marker which helps you with using other formats like asciidoc.
                                                    # For Asciidoc this could be &quot;--hook-config=--custom-marker-end=\= &quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you want to use a terraform-docs config file, you must supply the path to the file, relative to the git repo root path:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_docs
  args:
    - --args=--config=.terraform-docs.yml
&lt;/code&gt;&lt;/pre&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;br&gt; Avoid use &lt;code&gt;recursive.enabled: true&lt;/code&gt; in config file, that can cause unexpected behavior.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can provide &lt;a href=&quot;https://terraform-docs.io/user-guide/configuration/&quot;&gt;any configuration available in &lt;code&gt;terraform-docs&lt;/code&gt;&lt;/a&gt; as an argument to &lt;code&gt;terraform_docs&lt;/code&gt; hook:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_docs
  args:
    - --args=--output-mode=replace
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you need some exotic settings, it can be done too. I.e. this one generates HCL files:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_docs
  args:
    - tfvars hcl --output-file terraform.tfvars.model .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;terraform_docs_replace (deprecated)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;DEPRECATED&lt;/strong&gt;. Will be merged in &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&quot;&gt;&lt;code&gt;terraform_docs&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;terraform_docs_replace&lt;/code&gt; replaces the entire &lt;code&gt;README.md&lt;/code&gt; rather than doing string replacement between markers. Put your additional documentation at the top of your &lt;code&gt;main.tf&lt;/code&gt; for it to be pulled in.&lt;/p&gt; 
&lt;p&gt;To replicate functionality in &lt;code&gt;terraform_docs&lt;/code&gt; hook:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create &lt;code&gt;.terraform-docs.yml&lt;/code&gt; in the repo root with the following content:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;formatter: &quot;markdown&quot;

output:
file: &quot;README.md&quot;
mode: replace
template: |-
    {{/** End of file fixer */}}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Replace &lt;code&gt;terraform_docs_replace&lt;/code&gt; hook config in &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt; with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_docs
  args:
    - --args=--config=.terraform-docs.yml
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;terraform_fmt&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_fmt&lt;/code&gt; supports custom arguments so you can pass &lt;a href=&quot;https://www.terraform.io/docs/cli/commands/fmt.html#usage&quot;&gt;supported flags&lt;/a&gt;. Eg:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt; - id: terraform_fmt
   args:
     - --args=-no-color
     - --args=-diff
     - --args=-write=false
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;terraform_providers_lock&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] The hook requires Terraform 0.14 or later.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] The hook can invoke &lt;code&gt;terraform providers lock&lt;/code&gt; that can be really slow and requires fetching metadata from remote Terraform registries - not all of that metadata is currently being cached by Terraform.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;details&gt;
  &lt;summary&gt;Read this if you used this hook before v1.80.0 | Planned breaking changes in v2.0&lt;/summary&gt; 
  &lt;br&gt; We introduced `--mode` flag for this hook. If you&#39;d like to continue using this hook as before, please: 
  &lt;ul&gt; 
   &lt;li&gt;Specify &lt;code&gt;--hook-config=--mode=always-regenerate-lockfile&lt;/code&gt; in &lt;code&gt;args:&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Before &lt;code&gt;terraform_providers_lock&lt;/code&gt;, add &lt;code&gt;terraform_validate&lt;/code&gt; hook with &lt;code&gt;--hook-config=--retry-once-with-cleanup=true&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Move &lt;code&gt;--tf-init-args=&lt;/code&gt; to &lt;code&gt;terraform_validate&lt;/code&gt; hook&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p&gt;In the end, you should get config like this:&lt;/p&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_validate
  args:
    - --hook-config=--retry-once-with-cleanup=true
    # - --tf-init-args=-upgrade

- id: terraform_providers_lock
  args:
  - --hook-config=--mode=always-regenerate-lockfile
&lt;/code&gt;&lt;/pre&gt; 
  &lt;p&gt;Why? When v2.x will be introduced - the default mode will be changed, probably, to &lt;code&gt;only-check-is-current-lockfile-cross-platform&lt;/code&gt;.&lt;/p&gt; 
  &lt;p&gt;You can check available modes for hook below.&lt;/p&gt; 
 &lt;/details&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;The hook can work in a few different modes: &lt;code&gt;only-check-is-current-lockfile-cross-platform&lt;/code&gt; with and without &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&quot;&gt;terraform_validate hook&lt;/a&gt; and &lt;code&gt;always-regenerate-lockfile&lt;/code&gt; - only with terraform_validate hook.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;only-check-is-current-lockfile-cross-platform&lt;/code&gt; without terraform_validate - only checks that lockfile has all required SHAs for all providers already added to lockfile.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_providers_lock
  args:
  - --hook-config=--mode=only-check-is-current-lockfile-cross-platform
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;only-check-is-current-lockfile-cross-platform&lt;/code&gt; with &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&quot;&gt;terraform_validate hook&lt;/a&gt; - make up-to-date lockfile by adding/removing providers and only then check that lockfile has all required SHAs.&lt;/p&gt; 
    &lt;blockquote&gt; 
     &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt; Next &lt;code&gt;terraform_validate&lt;/code&gt; flag requires additional dependency to be installed: &lt;code&gt;jq&lt;/code&gt;. Also, it could run another slow and time consuming command - &lt;code&gt;terraform init&lt;/code&gt;&lt;/p&gt; 
    &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_validate
  args:
    - --hook-config=--retry-once-with-cleanup=true

- id: terraform_providers_lock
  args:
  - --hook-config=--mode=only-check-is-current-lockfile-cross-platform
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;always-regenerate-lockfile&lt;/code&gt; only with &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&quot;&gt;terraform_validate hook&lt;/a&gt; - regenerate lockfile from scratch. Can be useful for upgrading providers in lockfile to latest versions&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_validate
  args:
    - --hook-config=--retry-once-with-cleanup=true
    - --tf-init-args=-upgrade

- id: terraform_providers_lock
  args:
  - --hook-config=--mode=always-regenerate-lockfile
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt; supports custom arguments:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt; - id: terraform_providers_lock
   args:
      - --args=-platform=windows_amd64
      - --args=-platform=darwin_amd64
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;It may happen that Terraform working directory (&lt;code&gt;.terraform&lt;/code&gt;) already exists but not in the best condition (eg, not initialized modules, wrong version of Terraform, etc.). To solve this problem, you can find and delete all &lt;code&gt;.terraform&lt;/code&gt; directories in your repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;echo &quot;
function rm_terraform {
    find . \( -iname &quot;.terraform*&quot; ! -iname &quot;.terraform-docs*&quot; \) -print0 | xargs -0 rm -r
}
&quot; &amp;gt;&amp;gt;~/.bashrc

# Reload shell and use `rm_terraform` command in the repo root
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt; hook will try to reinitialize directories before running the &lt;code&gt;terraform providers lock&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt; support passing custom arguments to its &lt;code&gt;terraform init&lt;/code&gt;:&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;br&gt; DEPRECATION NOTICE: This is available only in &lt;code&gt;no-mode&lt;/code&gt; mode, which will be removed in v2.0. Please provide this keys to &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&quot;&gt;&lt;code&gt;terraform_validate&lt;/code&gt;&lt;/a&gt; hook, which, to take effect, should be called before &lt;code&gt;terraform_providers_lock&lt;/code&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_providers_lock
  args:
    - --tf-init-args=-upgrade
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;terraform_tflint&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_tflint&lt;/code&gt; supports custom arguments so you can enable module inspection, enable / disable rules, etc.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_tflint
  args:
    - --args=--module
    - --args=--enable-rule=terraform_documented_variables
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;When you have multiple directories and want to run &lt;code&gt;tflint&lt;/code&gt; in all of them and share a single config file, it is impractical to hard-code the path to the &lt;code&gt;.tflint.hcl&lt;/code&gt; file. The solution is to use the &lt;code&gt;__GIT_WORKING_DIR__&lt;/code&gt; placeholder which will be replaced by &lt;code&gt;terraform_tflint&lt;/code&gt; hooks with the Git working directory (repo root) at run time. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_tflint
  args:
    - --args=--config=__GIT_WORKING_DIR__/.tflint.hcl
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;By default, pre-commit-terraform performs directory switching into the terraform modules for you. If you want to delegate the directory changing to the binary - this will allow tflint to determine the full paths for error/warning messages, rather than just module relative paths. &lt;em&gt;Note: this requires &lt;code&gt;tflint&amp;gt;=0.44.0&lt;/code&gt;.&lt;/em&gt; For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_tflint
  args:
    - --hook-config=--delegate-chdir
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;terraform_tfsec (deprecated)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;DEPRECATED&lt;/strong&gt;. &lt;a href=&quot;https://github.com/aquasecurity/tfsec/discussions/1994&quot;&gt;tfsec was replaced by trivy&lt;/a&gt;, so please use &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_trivy&quot;&gt;&lt;code&gt;terraform_trivy&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_tfsec&lt;/code&gt; will consume modified files that pre-commit passes to it, so you can perform whitelisting of directories or files to run against via &lt;a href=&quot;https://pre-commit.com/#config-files&quot;&gt;files&lt;/a&gt; pre-commit flag&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_tfsec
  files: ^prd-infra/
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above will tell pre-commit to pass down files from the &lt;code&gt;prd-infra/&lt;/code&gt; folder only such that the underlying &lt;code&gt;tfsec&lt;/code&gt; tool can run against changed files in this directory, ignoring any other folders at the root level&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To ignore specific warnings, follow the convention from the &lt;a href=&quot;https://github.com/aquasecurity/tfsec#ignoring-warnings&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-hcl&quot;&gt;resource &quot;aws_security_group_rule&quot; &quot;my-rule&quot; {
    type = &quot;ingress&quot;
    cidr_blocks = [&quot;0.0.0.0/0&quot;] #tfsec:ignore:AWS006
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_tfsec&lt;/code&gt; supports custom arguments, so you can pass supported &lt;code&gt;--no-color&lt;/code&gt; or &lt;code&gt;--format&lt;/code&gt; (output), &lt;code&gt;-e&lt;/code&gt; (exclude checks) flags:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt; - id: terraform_tfsec
   args:
     - &amp;gt;
       --args=--format json
       --no-color
       -e aws-s3-enable-bucket-logging,aws-s3-specify-public-access-block
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;When you have multiple directories and want to run &lt;code&gt;tfsec&lt;/code&gt; in all of them and share a single config file - use the &lt;code&gt;__GIT_WORKING_DIR__&lt;/code&gt; placeholder. It will be replaced by &lt;code&gt;terraform_tfsec&lt;/code&gt; hooks with Git working directory (repo root) at run time. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_tfsec
  args:
    - --args=--config-file=__GIT_WORKING_DIR__/.tfsec.json
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Otherwise, will be used files that located in sub-folders:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_tfsec
  args:
    - --args=--config-file=.tfsec.json
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;terraform_trivy&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_trivy&lt;/code&gt; will consume modified files that pre-commit passes to it, so you can perform whitelisting of directories or files to run against via &lt;a href=&quot;https://pre-commit.com/#config-files&quot;&gt;files&lt;/a&gt; pre-commit flag&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_trivy
  files: ^prd-infra/
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above will tell pre-commit to pass down files from the &lt;code&gt;prd-infra/&lt;/code&gt; folder only such that the underlying &lt;code&gt;trivy&lt;/code&gt; tool can run against changed files in this directory, ignoring any other folders at the root level&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To ignore specific warnings, follow the convention from the &lt;a href=&quot;https://aquasecurity.github.io/trivy/latest/docs/configuration/filtering/&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-hcl&quot;&gt;#trivy:ignore:AVD-AWS-0107
#trivy:ignore:AVD-AWS-0124
resource &quot;aws_security_group_rule&quot; &quot;my-rule&quot; {
    type = &quot;ingress&quot;
    cidr_blocks = [&quot;0.0.0.0/0&quot;]
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_trivy&lt;/code&gt; supports custom arguments, so you can pass supported &lt;code&gt;--format&lt;/code&gt; (output), &lt;code&gt;--skip-dirs&lt;/code&gt; (exclude directories) and other flags:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt; - id: terraform_trivy
   args:
     - --args=--format=json
     - --args=--skip-dirs=&quot;**/.terraform&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;When you have multiple directories and want to run &lt;code&gt;trivy&lt;/code&gt; in all of them and share a single config file - use the &lt;code&gt;__GIT_WORKING_DIR__&lt;/code&gt; placeholder. It will be replaced by &lt;code&gt;terraform_trivy&lt;/code&gt; hooks with Git working directory (repo root) at run time. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_trivy
  args:
    - --args=--ignorefile=__GIT_WORKING_DIR__/.trivyignore
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;terraform_validate&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If you use &lt;a href=&quot;https://developer.hashicorp.com/terraform/cli/config/config-file#provider-plugin-cache&quot;&gt;&lt;code&gt;TF_PLUGIN_CACHE_DIR&lt;/code&gt;&lt;/a&gt;, we recommend enabling &lt;code&gt;--hook-config=--retry-once-with-cleanup=true&lt;/code&gt; or disabling parallelism (&lt;code&gt;--hook-config=--parallelism-limit=1&lt;/code&gt;) to avoid &lt;a href=&quot;https://github.com/hashicorp/terraform/issues/31964&quot;&gt;race conditions when &lt;code&gt;terraform init&lt;/code&gt; writes to it&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; supports custom arguments so you can pass supported &lt;code&gt;-no-color&lt;/code&gt; or &lt;code&gt;-json&lt;/code&gt; flags:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt; - id: terraform_validate
   args:
     - --args=-json
     - --args=-no-color
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; also supports passing custom arguments to its &lt;code&gt;terraform init&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_validate
  args:
    - --tf-init-args=-upgrade
    - --tf-init-args=-lockfile=readonly
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;It may happen that Terraform working directory (&lt;code&gt;.terraform&lt;/code&gt;) already exists but not in the best condition (eg, not initialized modules, wrong version of Terraform, etc.). To solve this problem, you can delete broken &lt;code&gt;.terraform&lt;/code&gt; directories in your repository:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Option 1&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_validate
  args:
    - --hook-config=--retry-once-with-cleanup=true     # Boolean. true or false
&lt;/code&gt;&lt;/pre&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;br&gt; The flag requires additional dependency to be installed: &lt;code&gt;jq&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br&gt; Reinit can be very slow and require downloading data from remote Terraform registries, and not all of that downloaded data or meta-data is currently being cached by Terraform.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;When &lt;code&gt;--retry-once-with-cleanup=true&lt;/code&gt;, in each failed directory the cached modules and providers from the &lt;code&gt;.terraform&lt;/code&gt; directory will be deleted, before retrying once more. To avoid unnecessary deletion of this directory, the cleanup and retry will only happen if Terraform produces any of the following error messages:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&quot;Missing or corrupted provider plugins&quot;&lt;/li&gt; 
   &lt;li&gt;&quot;Module source has changed&quot;&lt;/li&gt; 
   &lt;li&gt;&quot;Module version requirements have changed&quot;&lt;/li&gt; 
   &lt;li&gt;&quot;Module not installed&quot;&lt;/li&gt; 
   &lt;li&gt;&quot;Could not load plugin&quot;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;br&gt; When using &lt;code&gt;--retry-once-with-cleanup=true&lt;/code&gt;, problematic &lt;code&gt;.terraform/modules/&lt;/code&gt; and &lt;code&gt;.terraform/providers/&lt;/code&gt; directories will be recursively deleted without prompting for consent. Other files and directories will not be affected, such as the &lt;code&gt;.terraform/environment&lt;/code&gt; file.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;strong&gt;Option 2&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;An alternative solution is to find and delete all &lt;code&gt;.terraform&lt;/code&gt; directories in your repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;echo &quot;
function rm_terraform {
    find . \( -iname &quot;.terraform*&quot; ! -iname &quot;.terraform-docs*&quot; \) -print0 | xargs -0 rm -r
}
&quot; &amp;gt;&amp;gt;~/.bashrc

# Reload shell and use `rm_terraform` command in the repo root
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; hook will try to reinitialize them before running the &lt;code&gt;terraform validate&lt;/code&gt; command.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;&lt;br&gt; If you use Terraform workspaces, DO NOT use this option (&lt;a href=&quot;https://github.com/antonbabenko/pre-commit-terraform/issues/203#issuecomment-918791847&quot;&gt;details&lt;/a&gt;). Consider the first option, or wait for &lt;a href=&quot;https://github.com/antonbabenko/pre-commit-terraform/issues/224&quot;&gt;&lt;code&gt;force-init&lt;/code&gt;&lt;/a&gt; option implementation.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; in a repo with Terraform module, written using Terraform 0.15+ and which uses provider &lt;code&gt;configuration_aliases&lt;/code&gt; (&lt;a href=&quot;https://www.terraform.io/language/modules/develop/providers#provider-aliases-within-modules&quot;&gt;Provider Aliases Within Modules&lt;/a&gt;), errors out.&lt;/p&gt; &lt;p&gt;When running the hook against Terraform code where you have provider &lt;code&gt;configuration_aliases&lt;/code&gt; defined in a &lt;code&gt;required_providers&lt;/code&gt; configuration block, terraform will throw an error like:&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Error: Provider configuration not present To work with &lt;code&gt;&amp;lt;resource&amp;gt;&lt;/code&gt; its original provider configuration at provider &lt;code&gt;[&quot;registry.terraform.io/hashicorp/aws&quot;].&amp;lt;provider_alias&amp;gt;&lt;/code&gt; is required, but it has been removed. This occurs when a provider configuration is removed while objects created by that provider still exist in the state. Re-add the provider configuration to destroy &lt;code&gt;&amp;lt;resource&amp;gt;&lt;/code&gt;, after which you can remove the provider configuration again.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;This is a &lt;a href=&quot;https://github.com/hashicorp/terraform/issues/28490&quot;&gt;known issue&lt;/a&gt; with Terraform and how providers are initialized in Terraform 0.15 and later. To work around this you can add an &lt;code&gt;exclude&lt;/code&gt; parameter to the configuration of &lt;code&gt;terraform_validate&lt;/code&gt; hook like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_validate
  exclude: &#39;^[^/]+$&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will exclude the root directory from being processed by this hook. Then add a subdirectory like &quot;examples&quot; or &quot;tests&quot; and put an example implementation in place that defines the providers with the proper aliases, and this will give you validation of your module through the example. If instead you are using this with multiple modules in one repository you&#39;ll want to set the path prefix in the regular expression, such as &lt;code&gt;exclude: modules/offendingmodule/[^/]+$&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Alternately, you can use &lt;a href=&quot;https://github.com/hashicorp/terraform-config-inspect&quot;&gt;terraform-config-inspect&lt;/a&gt; and use a variant of &lt;a href=&quot;https://github.com/bendrucker/terraform-configuration-aliases-action/raw/main/providers.sh&quot;&gt;this script&lt;/a&gt; to generate a providers file at runtime:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;terraform-config-inspect --json . | jq -r &#39;
  [.required_providers[].aliases]
  | flatten
  | del(.[] | select(. == null))
  | reduce .[] as $entry (
    {};
    .provider[$entry.name] //= [] | .provider[$entry.name] += [{&quot;alias&quot;: $entry.alias}]
  )
&#39; | tee aliased-providers.tf.json
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Save it as &lt;code&gt;.generate-providers.sh&lt;/code&gt; in the root of your repository and add a &lt;code&gt;pre-commit&lt;/code&gt; hook to run it before all other hooks, like so:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- repos:
  - repo: local
    hooks:
      - id: generate-terraform-providers
        name: generate-terraform-providers
        require_serial: true
        entry: .generate-providers.sh
        language: script
        files: \.tf(vars)?$
        pass_filenames: false

  - repo: https://github.com/pre-commit/pre-commit-hooks
&lt;/code&gt;&lt;/pre&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;&lt;br&gt; The latter method will leave an &quot;aliased-providers.tf.json&quot; file in your repo. You will either want to automate a way to clean this up or add it to your &lt;code&gt;.gitignore&lt;/code&gt; or both.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;terraform_wrapper_module_for_each&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt; generates module wrappers for Terraform modules (useful for Terragrunt where &lt;code&gt;for_each&lt;/code&gt; is not supported). When using this hook without arguments it will create wrappers for the root module and all modules available in &quot;modules&quot; directory.&lt;/p&gt; 
&lt;p&gt;You may want to customize some of the options:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;--module-dir=...&lt;/code&gt; - Specify a single directory to process. Values: &quot;.&quot; (means just root module), &quot;modules/iam-user&quot; (a single module), or empty (means include all submodules found in &quot;modules/*&quot;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--module-repo-org=...&lt;/code&gt; - Module repository organization (e.g. &quot;terraform-aws-modules&quot;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--module-repo-shortname=...&lt;/code&gt; - Short name of the repository (e.g. &quot;s3-bucket&quot;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--module-repo-provider=...&lt;/code&gt; - Name of the repository provider (e.g. &quot;aws&quot; or &quot;google&quot;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Sample configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_wrapper_module_for_each
  args:
    - --args=--module-dir=.   # Process only root module
    - --args=--dry-run        # No files will be created/updated
    - --args=--verbose        # Verbose output
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;If you use hook inside Docker:&lt;/strong&gt;&lt;br&gt; The &lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt; hook attempts to determine the module&#39;s short name to be inserted into the generated &lt;code&gt;README.md&lt;/code&gt; files for the &lt;code&gt;source&lt;/code&gt; URLs. Since the container uses a bind mount at a static location, it can cause this short name to be incorrect.&lt;br&gt; If the generated name is incorrect, set them by providing the &lt;code&gt;module-repo-shortname&lt;/code&gt; option to the hook:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terraform_wrapper_module_for_each
  args:
    - &#39;--args=--module-repo-shortname=ec2-instance&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;terrascan&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;terrascan&lt;/code&gt; supports custom arguments so you can pass supported flags like &lt;code&gt;--non-recursive&lt;/code&gt; and &lt;code&gt;--policy-type&lt;/code&gt; to disable recursive inspection and set the policy type respectively:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terrascan
  args:
    - --args=--non-recursive # avoids scan errors on subdirectories without Terraform config files
    - --args=--policy-type=azure
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;See the &lt;code&gt;terrascan run -h&lt;/code&gt; command line help for available options.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use the &lt;code&gt;--args=--verbose&lt;/code&gt; parameter to see the rule ID in the scanning output. Useful to skip validations.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use &lt;code&gt;--skip-rules=&quot;ruleID1,ruleID2&quot;&lt;/code&gt; parameter to skip one or more rules globally while scanning (e.g.: &lt;code&gt;--args=--skip-rules=&quot;ruleID1,ruleID2&quot;&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use the syntax &lt;code&gt;#ts:skip=RuleID optional_comment&lt;/code&gt; inside a resource to skip the rule for that resource.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;tfupdate&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Out of the box &lt;code&gt;tfupdate&lt;/code&gt; will pin the terraform version:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: tfupdate
  name: Autoupdate Terraform versions
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you&#39;d like to pin providers, etc., use custom arguments, i.e &lt;code&gt;provider=PROVIDER_NAME&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: tfupdate
  name: Autoupdate AWS provider versions
  args:
    - --args=provider aws # Will be pined to latest version

- id: tfupdate
  name: Autoupdate Helm provider versions
  args:
    - --args=provider helm
    - --args=--version 2.5.0 # Will be pined to specified version
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Check &lt;a href=&quot;https://github.com/minamijoyo/tfupdate#usage&quot;&gt;&lt;code&gt;tfupdate&lt;/code&gt; usage instructions&lt;/a&gt; for other available options and usage examples.&lt;br&gt; No need to pass &lt;code&gt;--recursive .&lt;/code&gt; as it is added automatically.&lt;/p&gt; 
&lt;h3&gt;terragrunt_providers_lock&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Use this hook only in infrastructure repos managed solely by &lt;code&gt;terragrunt&lt;/code&gt; and do not mix with &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_providers_lock&quot;&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt;&lt;/a&gt; to avoid conflicts.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Hook &lt;em&gt;may&lt;/em&gt; be very slow, because terragrunt invokes &lt;code&gt;t init&lt;/code&gt; under the hood.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Hook produces same results as &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_providers_lock&quot;&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt;&lt;/a&gt;, but for terragrunt root modules.&lt;/p&gt; 
&lt;p&gt;It invokes &lt;code&gt;terragrunt providers lock&lt;/code&gt; under the hood and terragrunt &lt;a href=&quot;https://terragrunt.gruntwork.io/docs/features/lock-file-handling/&quot;&gt;does its&#39; own magic&lt;/a&gt; for handling lock files.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terragrunt_providers_lock
  name: Terragrunt providers lock
  args:
    - --args=-platform=darwin_arm64
    - --args=-platform=darwin_amd64
    - --args=-platform=linux_amd64
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;terragrunt_validate_inputs&lt;/h3&gt; 
&lt;p&gt;Validates Terragrunt unused and undefined inputs. This is useful for keeping configs clean when module versions change or if configs are copied.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://terragrunt.gruntwork.io/docs/reference/cli-options/#validate-inputs&quot;&gt;Terragrunt docs&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- id: terragrunt_validate_inputs
  name: Terragrunt validate inputs
  args:
    # Optionally check for unused inputs
    - --args=--terragrunt-strict-validate
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This hook requires authentication to a given account if defined by config to work properly. For example, if you use a third-party tool to store AWS credentials like &lt;code&gt;aws-vault&lt;/code&gt; you must be authenticated first.&lt;/p&gt; 
 &lt;p&gt;See docs for the &lt;a href=&quot;https://terragrunt.gruntwork.io/docs/reference/config-blocks-and-attributes/#iam_role&quot;&gt;iam_role&lt;/a&gt; attribute and &lt;a href=&quot;https://terragrunt.gruntwork.io/docs/reference/cli-options/#terragrunt-iam-role&quot;&gt;--terragrunt-iam-role&lt;/a&gt; flag for more.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Docker Usage&lt;/h2&gt; 
&lt;h3&gt;File Permissions&lt;/h3&gt; 
&lt;p&gt;A mismatch between the Docker container&#39;s user and the local repository file ownership can cause permission issues in the repository where &lt;code&gt;pre-commit&lt;/code&gt; is run. The container runs as the &lt;code&gt;root&lt;/code&gt; user by default, and uses a &lt;code&gt;tools/entrypoint.sh&lt;/code&gt; script to assume a user ID and group ID if specified by the environment variable &lt;code&gt;USERID&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#4-run&quot;&gt;recommended command&lt;/a&gt; to run the Docker container is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;TAG=latest
docker run -e &quot;USERID=$(id -u):$(id -g)&quot; -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:$TAG run -a
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;which uses your current session&#39;s user ID and group ID to set the variable in the run command. Without this setting, you may find files and directories owned by &lt;code&gt;root&lt;/code&gt; in your local repository.&lt;/p&gt; 
&lt;p&gt;If the local repository is using a different user or group for permissions, you can modify the &lt;code&gt;USERID&lt;/code&gt; to the user ID and group ID needed. &lt;strong&gt;Do not use the username or groupname in the environment variable, as it has no meaning in the container.&lt;/strong&gt; You can get the current directory&#39;s owner user ID and group ID from the 3rd (user) and 4th (group) columns in &lt;code&gt;ls&lt;/code&gt; output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ ls -aldn .
drwxr-xr-x 9 1000 1000 4096 Sep  1 16:23 .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Download Terraform modules from private GitHub repositories&lt;/h3&gt; 
&lt;p&gt;If you use a private Git repository as your Terraform module source, you are required to authenticate to GitHub using a &lt;a href=&quot;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token&quot;&gt;Personal Access Token&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When running pre-commit on Docker, both locally or on CI, you need to configure the &lt;a href=&quot;https://www.gnu.org/software/inetutils/manual/html_node/The-_002enetrc-file.html&quot;&gt;~/.netrc&lt;/a&gt; file, which contains login and initialization information used by the auto-login process.&lt;/p&gt; 
&lt;p&gt;This can be achieved by firstly creating the &lt;code&gt;~/.netrc&lt;/code&gt; file including your &lt;code&gt;GITHUB_PAT&lt;/code&gt; and &lt;code&gt;GITHUB_SERVER_HOSTNAME&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# set GH values (replace with your own values)
GITHUB_PAT=ghp_bl481aBlabl481aBla
GITHUB_SERVER_HOSTNAME=github.com

# create .netrc file
echo -e &quot;machine $GITHUB_SERVER_HOSTNAME\n\tlogin $GITHUB_PAT&quot; &amp;gt;&amp;gt; ~/.netrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;~/.netrc&lt;/code&gt; file will look similar to the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;machine github.com
  login ghp_bl481aBlabl481aBla
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] The value of &lt;code&gt;GITHUB_SERVER_HOSTNAME&lt;/code&gt; can also refer to a GitHub Enterprise server (i.e. &lt;code&gt;github.my-enterprise.com&lt;/code&gt;).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Finally, you can execute &lt;code&gt;docker run&lt;/code&gt; with an additional volume mount so that the &lt;code&gt;~/.netrc&lt;/code&gt; is accessible within the container&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# run pre-commit-terraform with docker
# adding volume for .netrc file
# .netrc needs to be in /root/ dir
docker run --rm -e &quot;USERID=$(id -u):$(id -g)&quot; -v ~/.netrc:/root/.netrc -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:latest run -a
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;GitHub Actions&lt;/h2&gt; 
&lt;p&gt;You can use this hook in your GitHub Actions workflow together with &lt;a href=&quot;https://pre-commit.com&quot;&gt;pre-commit&lt;/a&gt;. To easy up dependency management, you can use the managed &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#docker-usage&quot;&gt;docker image&lt;/a&gt; within your workflow. Make sure to set the image tag to the version you want to use.&lt;/p&gt; 
&lt;p&gt;In this repository&#39;s pre-commit &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/.github/workflows/pre-commit.yaml&quot;&gt;workflow file&lt;/a&gt; we run pre-commit without the container image.&lt;/p&gt; 
&lt;p&gt;Here&#39;s an example using the container image. It includes caching of pre-commit dependencies and utilizes the pre-commit command to run checks (Note: Fixes will not be automatically pushed back to your branch, even when possible.):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;name: pre-commit-terraform

on:
  pull_request:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/antonbabenko/pre-commit-terraform:latest # latest used here for simplicity, not recommended
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

      - name: Get changed files
        id: file_changes
        run: |
          export DIFF=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }})
          echo &quot;Diff between ${{ github.base_ref }} and ${{ github.sha }}&quot;
          echo &quot;files=$( echo &quot;$DIFF&quot; | xargs echo )&quot; &amp;gt;&amp;gt; $GITHUB_OUTPUT

      - name: fix tar dependency in alpine container image
        run: |
          apk --no-cache add tar
          # check python modules installed versions
          python -m pip freeze --local

      - name: Cache pre-commit since we use pre-commit from container
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-3|${{ hashFiles(&#39;.pre-commit-config.yaml&#39;) }}

      - name: Execute pre-commit
        run: |
          pre-commit run --color=always --show-diff-on-failure --files ${{ steps.file_changes.outputs.files }}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;This repository is managed by &lt;a href=&quot;https://github.com/antonbabenko&quot;&gt;Anton Babenko&lt;/a&gt; with help from these awesome contributors:&lt;/p&gt; 
&lt;a href=&quot;https://github.com/antonbabenko/pre-commit-terraform/graphs/contributors&quot;&gt; &lt;img alt=&quot;Contributors&quot; src=&quot;https://contrib.rocks/image?repo=antonbabenko/pre-commit-terraform&quot;&gt; &lt;/a&gt; 
&lt;a href=&quot;https://star-history.com/#antonbabenko/pre-commit-terraform&amp;amp;Date&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=antonbabenko/pre-commit-terraform&amp;amp;type=Date&amp;amp;theme=dark&quot;&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=antonbabenko/pre-commit-terraform&amp;amp;type=Date&quot;&gt; 
  &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=antonbabenko/pre-commit-terraform&amp;amp;type=Date&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT licensed. See &lt;a href=&quot;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for full details.&lt;/p&gt; 
&lt;h3&gt;Additional information for users from Russia and Belarus&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Russia has &lt;a href=&quot;https://en.wikipedia.org/wiki/Annexation_of_Crimea_by_the_Russian_Federation&quot;&gt;illegally annexed Crimea in 2014&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/War_in_Donbas&quot;&gt;brought the war in Donbas&lt;/a&gt; followed by &lt;a href=&quot;https://en.wikipedia.org/wiki/2022_Russian_invasion_of_Ukraine&quot;&gt;full-scale invasion of Ukraine in 2022&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Russia has brought sorrow and devastations to millions of Ukrainians, killed hundreds of innocent people, damaged thousands of buildings, and forced several million people to flee.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Putin_khuylo!&quot;&gt;Putin khuylo!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- Tools links --&gt;</description>
    </item>
    
    <item>
      <title>d3/d3</title>
      <link>https://github.com/d3/d3</link>
      <description>&lt;p&gt;Bring data to life with SVG, Canvas and HTML. 📊📈🎉&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;D3: Data-Driven Documents&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://d3js.org&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3/main/docs/public/logo.svg?sanitize=true&quot; width=&quot;256&quot; height=&quot;256&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;D3&lt;/strong&gt; (or &lt;strong&gt;D3.js&lt;/strong&gt;) is a free, open-source JavaScript library for visualizing data. Its low-level approach built on web standards offers unparalleled flexibility in authoring dynamic, data-driven graphics. For more than a decade D3 has powered groundbreaking and award-winning visualizations, become a foundational building block of higher-level chart libraries, and fostered a vibrant community of data practitioners around the world.&lt;/p&gt; 
&lt;a href=&quot;https://observablehq.observablehq.cloud/oss-analytics/@d3/d3&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://observablehq.observablehq.cloud/oss-analytics/d3/downloads-dark.svg&quot;&gt; 
  &lt;img alt=&quot;Daily downloads of Observable Framework&quot; src=&quot;https://observablehq.observablehq.cloud/oss-analytics/d3/downloads.svg?sanitize=true&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;p&gt;&lt;sub&gt;Daily downloads of D3 · &lt;a href=&quot;https://observablehq.observablehq.cloud/oss-analytics/&quot;&gt;oss-analytics&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://d3js.org&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/gallery&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/releases&quot;&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://d3js.org/community&quot;&gt;Getting help&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>RPi-Distro/pi-gen</title>
      <link>https://github.com/RPi-Distro/pi-gen</link>
      <description>&lt;p&gt;Tool used to create the official Raspberry Pi OS images&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pi-gen&lt;/h1&gt; 
&lt;p&gt;Tool used to create Raspberry Pi OS images, and custom images based on Raspberry Pi OS, which was in turn derived from the Raspbian project.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Raspberry Pi OS 32 bit images are based primarily on Raspbian, while Raspberry Pi OS 64 bit images are based primarily on Debian.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: 32 bit images should be built from the &lt;code&gt;master&lt;/code&gt; branch. 64 bit images should be built from the &lt;code&gt;arm64&lt;/code&gt; branch.&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;pi-gen runs on Debian-based operating systems released after 2017, and we always advise you use the latest OS for security reasons.&lt;/p&gt; 
&lt;p&gt;On other Linux distributions it may be possible to use the Docker build described below.&lt;/p&gt; 
&lt;p&gt;To install the required dependencies for &lt;code&gt;pi-gen&lt;/code&gt; you should run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;apt-get install coreutils quilt parted qemu-user-static debootstrap zerofree zip \
dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc \
gpg pigz xxd arch-test bmap-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The file &lt;code&gt;depends&lt;/code&gt; contains a list of tools needed. The format of this package is &lt;code&gt;&amp;lt;tool&amp;gt;[:&amp;lt;debian-package&amp;gt;]&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started with building your images&lt;/h2&gt; 
&lt;p&gt;Getting started is as simple as cloning this repository on your build machine. You can do so with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/RPI-Distro/pi-gen.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;--depth 1&lt;/code&gt; can be added after &lt;code&gt;git clone&lt;/code&gt; to create a shallow clone, only containing the latest revision of the repository. Do not do this on your development machine.&lt;/p&gt; 
&lt;p&gt;Also, be careful to clone the repository to a base path &lt;strong&gt;NOT&lt;/strong&gt; containing spaces. This configuration is not supported by debootstrap and will lead to &lt;code&gt;pi-gen&lt;/code&gt; not running.&lt;/p&gt; 
&lt;p&gt;After cloning the repository, you can move to the next step and start configuring your build.&lt;/p&gt; 
&lt;h2&gt;Config&lt;/h2&gt; 
&lt;p&gt;Upon execution, &lt;code&gt;build.sh&lt;/code&gt; will source the file &lt;code&gt;config&lt;/code&gt; in the current working directory. This bash shell fragment is intended to set needed environment variables.&lt;/p&gt; 
&lt;p&gt;The following environment variables are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;IMG_NAME&lt;/code&gt; (Default: &lt;code&gt;raspios-$RELEASE-$ARCH&lt;/code&gt;, for example: &lt;code&gt;raspios-bookworm-armhf&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;The name of the image to build with the current stage directories. Use this variable to set the root name of your OS, eg &lt;code&gt;IMG_NAME=Frobulator&lt;/code&gt;. Export files in stages may add suffixes to &lt;code&gt;IMG_NAME&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;PI_GEN_RELEASE&lt;/code&gt; (Default: &lt;code&gt;Raspberry Pi reference&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;The release name to use in &lt;code&gt;/etc/issue.txt&lt;/code&gt;. The default should only be used for official Raspberry Pi builds.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;RELEASE&lt;/code&gt; (Default: &lt;code&gt;bookworm&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;The release version to build images against. Valid values are any supported Debian release. However, since different releases will have different sets of packages available, you&#39;ll need to either modify your stages accordingly, or checkout the appropriate branch. For example, if you&#39;d like to build a &lt;code&gt;bullseye&lt;/code&gt; image, you should do so from the &lt;code&gt;bullseye&lt;/code&gt; branch.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;APT_PROXY&lt;/code&gt; (Default: unset)&lt;/p&gt; &lt;p&gt;If you require the use of an apt proxy, set it here. This proxy setting will not be included in the image, making it safe to use an &lt;code&gt;apt-cacher&lt;/code&gt; or similar package for development.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;BASE_DIR&lt;/code&gt; (Default: location of &lt;code&gt;build.sh&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt;: Currently, changing this value will probably break build.sh&lt;/p&gt; &lt;p&gt;Top-level directory for &lt;code&gt;pi-gen&lt;/code&gt;. Contains stage directories, build scripts, and by default both work and deployment directories.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;WORK_DIR&lt;/code&gt; (Default: &lt;code&gt;$BASE_DIR/work&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Directory in which &lt;code&gt;pi-gen&lt;/code&gt; builds the target system. This value can be changed if you have a suitably large, fast storage location for stages to be built and cached. Note, &lt;code&gt;WORK_DIR&lt;/code&gt; stores a complete copy of the target system for each build stage, amounting to tens of gigabytes in the case of Raspbian.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt;: If your working directory is on an NTFS partition you probably won&#39;t be able to build: make sure this is a proper Linux filesystem.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DEPLOY_DIR&lt;/code&gt; (Default: &lt;code&gt;$BASE_DIR/deploy&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Output directory for target system images and NOOBS bundles.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DEPLOY_COMPRESSION&lt;/code&gt; (Default: &lt;code&gt;zip&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Set to:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;none&lt;/code&gt; to deploy the actual image (&lt;code&gt;.img&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;zip&lt;/code&gt; to deploy a zipped image (&lt;code&gt;.zip&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;gz&lt;/code&gt; to deploy a gzipped image (&lt;code&gt;.img.gz&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;xz&lt;/code&gt; to deploy a xzipped image (&lt;code&gt;.img.xz&lt;/code&gt;).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DEPLOY_ZIP&lt;/code&gt; (Deprecated)&lt;/p&gt; &lt;p&gt;This option has been deprecated in favor of &lt;code&gt;DEPLOY_COMPRESSION&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If &lt;code&gt;DEPLOY_ZIP=0&lt;/code&gt; is still present in your config file, the behavior is the same as with &lt;code&gt;DEPLOY_COMPRESSION=none&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;COMPRESSION_LEVEL&lt;/code&gt; (Default: &lt;code&gt;6&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Compression level to be used when using &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;gz&lt;/code&gt; or &lt;code&gt;xz&lt;/code&gt; for &lt;code&gt;DEPLOY_COMPRESSION&lt;/code&gt;. From 0 to 9 (refer to the tool man page for more information on this. Usually 0 is no compression but very fast, up to 9 with the best compression but very slow ).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;USE_QEMU&lt;/code&gt; (Default: &lt;code&gt;0&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Setting to &#39;1&#39; enables the QEMU mode - creating an image that can be mounted via QEMU for an emulated environment. These images include &quot;-qemu&quot; in the image file name.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;LOCALE_DEFAULT&lt;/code&gt; (Default: &#39;en_GB.UTF-8&#39; )&lt;/p&gt; &lt;p&gt;Default system locale.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TARGET_HOSTNAME&lt;/code&gt; (Default: &#39;raspberrypi&#39; )&lt;/p&gt; &lt;p&gt;Setting the hostname to the specified value.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;KEYBOARD_KEYMAP&lt;/code&gt; (Default: &#39;gb&#39; )&lt;/p&gt; &lt;p&gt;Default keyboard keymap.&lt;/p&gt; &lt;p&gt;To get the current value from a running system, run &lt;code&gt;debconf-show keyboard-configuration&lt;/code&gt; and look at the &lt;code&gt;keyboard-configuration/xkb-keymap&lt;/code&gt; value.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;KEYBOARD_LAYOUT&lt;/code&gt; (Default: &#39;English (UK)&#39; )&lt;/p&gt; &lt;p&gt;Default keyboard layout.&lt;/p&gt; &lt;p&gt;To get the current value from a running system, run &lt;code&gt;debconf-show keyboard-configuration&lt;/code&gt; and look at the &lt;code&gt;keyboard-configuration/variant&lt;/code&gt; value.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TIMEZONE_DEFAULT&lt;/code&gt; (Default: &#39;Europe/London&#39; )&lt;/p&gt; &lt;p&gt;Default time zone.&lt;/p&gt; &lt;p&gt;To get the current value from a running system, look in &lt;code&gt;/etc/timezone&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;FIRST_USER_NAME&lt;/code&gt; (Default: &lt;code&gt;pi&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Username for the first user. This user only exists during the image creation process. Unless &lt;code&gt;DISABLE_FIRST_BOOT_USER_RENAME&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt;, this user will be renamed on the first boot with a name chosen by the final user. This security feature is designed to prevent shipping images with a default username and help prevent malicious actors from taking over your devices.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;FIRST_USER_PASS&lt;/code&gt; (Default: unset)&lt;/p&gt; &lt;p&gt;Password for the first user. If unset, the account is locked.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DISABLE_FIRST_BOOT_USER_RENAME&lt;/code&gt; (Default: &lt;code&gt;0&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Disable the renaming of the first user during the first boot. This make it so &lt;code&gt;FIRST_USER_NAME&lt;/code&gt; stays activated. &lt;code&gt;FIRST_USER_PASS&lt;/code&gt; must be set for this to work. Please be aware of the implied security risk of defining a default username and password for your devices.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;WPA_COUNTRY&lt;/code&gt; (Default: unset)&lt;/p&gt; &lt;p&gt;Sets the default WLAN regulatory domain and unblocks WLAN interfaces. This should be a 2-letter ISO/IEC 3166 country Code, i.e. &lt;code&gt;GB&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ENABLE_SSH&lt;/code&gt; (Default: &lt;code&gt;0&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Setting to &lt;code&gt;1&lt;/code&gt; will enable ssh server for remote log in. Note that if you are using a common password such as the defaults there is a high risk of attackers taking over you Raspberry Pi.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;PUBKEY_SSH_FIRST_USER&lt;/code&gt; (Default: unset)&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Setting this to a value will make that value the contents of the FIRST_USER_NAME&#39;s ~/.ssh/authorized_keys. Obviously the value should therefore be a valid authorized_keys file. Note that this does not automatically enable SSH.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;PUBKEY_ONLY_SSH&lt;/code&gt; (Default: &lt;code&gt;0&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Setting to &lt;code&gt;1&lt;/code&gt; will disable password authentication for SSH and enable public key authentication. Note that if SSH is not enabled this will take effect when SSH becomes enabled.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;SETFCAP&lt;/code&gt; (Default: unset)&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Setting to &lt;code&gt;1&lt;/code&gt; will prevent pi-gen from dropping the &quot;capabilities&quot; feature. Generating the root filesystem with capabilities enabled and running it from a filesystem that does not support capabilities (like NFS) can cause issues. Only enable this if you understand what it is.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;STAGE_LIST&lt;/code&gt; (Default: &lt;code&gt;stage*&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;If set, then instead of working through the numeric stages in order, this list will be followed. For example setting to &lt;code&gt;&quot;stage0 stage1 mystage stage2&quot;&lt;/code&gt; will run the contents of &lt;code&gt;mystage&lt;/code&gt; before stage2. Note that quotes are needed around the list. An absolute or relative path can be given for stages outside the pi-gen directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;EXPORT_CONFIG_DIR&lt;/code&gt; (Default: &lt;code&gt;$BASE_DIR/export-image&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;If set, use this directory path as the location of scripts to run when generating images. An absolute or relative path can be given for a location outside the pi-gen directory.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A simple example for building Raspberry Pi OS:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;IMG_NAME=&#39;raspios&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The config file can also be specified on the command line as an argument the &lt;code&gt;build.sh&lt;/code&gt; or &lt;code&gt;build-docker.sh&lt;/code&gt; scripts.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./build.sh -c myconfig
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is parsed after &lt;code&gt;config&lt;/code&gt; so can be used to override values set there.&lt;/p&gt; 
&lt;h2&gt;How the build process works&lt;/h2&gt; 
&lt;p&gt;The following process is followed to build images:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Iterate through all of the stage directories in alphanumeric order&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Bypass a stage directory if it contains a file called &quot;SKIP&quot;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the script &lt;code&gt;prerun.sh&lt;/code&gt; which is generally just used to copy the build directory between stages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In each stage directory iterate through each subdirectory and then run each of the install scripts it contains, again in alphanumeric order. &lt;strong&gt;These need to be named with a two digit padded number at the beginning.&lt;/strong&gt; There are a number of different files and directories which can be used to control different parts of the build process:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;00-run.sh&lt;/strong&gt; - A unix shell script. Needs to be made executable for it to run.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;00-run-chroot.sh&lt;/strong&gt; - A unix shell script which will be run in the chroot of the image build directory. Needs to be made executable for it to run.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;00-debconf&lt;/strong&gt; - Contents of this file are passed to debconf-set-selections to configure things like locale, etc.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;00-packages&lt;/strong&gt; - A list of packages to install. Can have more than one, space separated, per line.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;00-packages-nr&lt;/strong&gt; - As 00-packages, except these will be installed using the &lt;code&gt;--no-install-recommends -y&lt;/code&gt; parameters to apt-get.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;00-patches&lt;/strong&gt; - A directory containing patch files to be applied, using quilt. If a file named &#39;EDIT&#39; is present in the directory, the build process will be interrupted with a bash session, allowing an opportunity to create/revise the patches.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If the stage directory contains files called &quot;EXPORT_NOOBS&quot; or &quot;EXPORT_IMAGE&quot; then add this stage to a list of images to generate&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Generate the images for any stages that have specified them&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It is recommended to examine build.sh for finer details.&lt;/p&gt; 
&lt;h2&gt;Docker Build&lt;/h2&gt; 
&lt;p&gt;Docker can be used to perform the build inside a container. This partially isolates the build from the host system, and allows using the script on non-debian based systems (e.g. Fedora Linux). The isolation is not complete due to the need to use some kernel level services for arm emulation (binfmt) and loop devices (losetup).&lt;/p&gt; 
&lt;p&gt;To build:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;vi config         # Edit your config file. See above.
./build-docker.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything goes well, your finished image will be in the &lt;code&gt;deploy/&lt;/code&gt; folder. You can then remove the build container with &lt;code&gt;docker rm -v pigen_work&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you encounter errors during the build, you can edit the corresponding scripts, and continue:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;CONTINUE=1 ./build-docker.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To examine the container after a failure you can enter a shell within it using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker run -it --privileged --volumes-from=pigen_work pi-gen /bin/bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After successful build, the build container is by default removed. This may be undesired when making incremental changes to a customized build. To prevent the build script from remove the container add&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;PRESERVE_CONTAINER=1 ./build-docker.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is a possibility that even when running from a docker container, the installation of &lt;code&gt;qemu-user-static&lt;/code&gt; will silently fail when building the image because &lt;code&gt;binfmt-support&lt;/code&gt; &lt;em&gt;must be enabled on the underlying kernel&lt;/em&gt;. An easy fix is to ensure &lt;code&gt;binfmt-support&lt;/code&gt; is installed on the host machine before starting the &lt;code&gt;./build-docker.sh&lt;/code&gt; script (or using your own docker build solution).&lt;/p&gt; 
&lt;h3&gt;Passing arguments to Docker&lt;/h3&gt; 
&lt;p&gt;When the docker image is run various required command line arguments are provided. For example the system mounts the &lt;code&gt;/dev&lt;/code&gt; directory to the &lt;code&gt;/dev&lt;/code&gt; directory within the docker container. If other arguments are required they may be specified in the PIGEN_DOCKER_OPTS environment variable. For example setting &lt;code&gt;PIGEN_DOCKER_OPTS=&quot;--add-host foo:192.168.0.23&quot;&lt;/code&gt; will add &#39;192.168.0.23 foo&#39; to the &lt;code&gt;/etc/hosts&lt;/code&gt; file in the container. The &lt;code&gt;--name&lt;/code&gt; and &lt;code&gt;--privileged&lt;/code&gt; options are already set by the script and should not be redefined.&lt;/p&gt; 
&lt;h2&gt;Stage Anatomy&lt;/h2&gt; 
&lt;h3&gt;Raspbian Stage Overview&lt;/h3&gt; 
&lt;p&gt;The build of Raspbian is divided up into several stages for logical clarity and modularity. This causes some initial complexity, but it simplifies maintenance and allows for more easy customization.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stage 0&lt;/strong&gt; - bootstrap. The primary purpose of this stage is to create a usable filesystem. This is accomplished largely through the use of &lt;code&gt;debootstrap&lt;/code&gt;, which creates a minimal filesystem suitable for use as a base.tgz on Debian systems. This stage also configures apt settings and installs &lt;code&gt;raspberrypi-bootloader&lt;/code&gt; which is missed by debootstrap. The minimal core is installed but not configured. As a result, this stage will not boot.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stage 1&lt;/strong&gt; - truly minimal system. This stage makes the system bootable by installing system files like &lt;code&gt;/etc/fstab&lt;/code&gt;, configures the bootloader, makes the network operable, and installs packages like raspi-config. At this stage the system should boot to a local console from which you have the means to perform basic tasks needed to configure and install the system.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stage 2&lt;/strong&gt; - lite system. This stage produces the Raspberry Pi OS Lite image. Stage 2 installs some optimized memory functions, sets timezone and charmap defaults, installs fake-hwclock and ntp, wireless LAN and bluetooth support, dphys-swapfile, and other basics for managing the hardware. It also creates necessary groups and gives the pi user access to sudo and the standard console hardware permission groups.&lt;/p&gt; &lt;p&gt;Note: Raspberry Pi OS Lite contains a number of tools for development, including &lt;code&gt;Python&lt;/code&gt;, &lt;code&gt;Lua&lt;/code&gt; and the &lt;code&gt;build-essential&lt;/code&gt; package. If you are creating an image to deploy in products, be sure to remove extraneous development tools before deployment.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stage 3&lt;/strong&gt; - desktop system. Here&#39;s where you get the full desktop system with X11 and LXDE, web browsers, git for development, Raspberry Pi OS custom UI enhancements, etc. This is a base desktop system, with some development tools installed.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stage 4&lt;/strong&gt; - Normal Raspberry Pi OS image. System meant to fit on a 4GB card. This is the stage that installs most things that make Raspberry Pi OS friendly to new users - e.g. system documentation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stage 5&lt;/strong&gt; - The Raspberry Pi OS Full image. More development tools, an email client, learning tools like Scratch, specialized packages like sonic-pi, office productivity, etc.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Stage specification&lt;/h3&gt; 
&lt;p&gt;If you wish to build up to a specified stage (such as building up to stage 2 for a lite system), place an empty file named &lt;code&gt;SKIP&lt;/code&gt; in each of the &lt;code&gt;./stage&lt;/code&gt; directories you wish not to include.&lt;/p&gt; 
&lt;p&gt;Then add an empty file named &lt;code&gt;SKIP_IMAGES&lt;/code&gt; to &lt;code&gt;./stage4&lt;/code&gt; and &lt;code&gt;./stage5&lt;/code&gt; (if building up to stage 2) or to &lt;code&gt;./stage2&lt;/code&gt; (if building a minimal system).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Example for building a lite system
echo &quot;IMG_NAME=&#39;raspios&#39;&quot; &amp;gt; config
touch ./stage3/SKIP ./stage4/SKIP ./stage5/SKIP
touch ./stage4/SKIP_IMAGES ./stage5/SKIP_IMAGES
sudo ./build.sh  # or ./build-docker.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you wish to build further configurations upon (for example) the lite system, you can also delete the contents of &lt;code&gt;./stage3&lt;/code&gt; and &lt;code&gt;./stage4&lt;/code&gt; and replace with your own contents in the same format.&lt;/p&gt; 
&lt;h2&gt;Skipping stages to speed up development&lt;/h2&gt; 
&lt;p&gt;If you&#39;re working on a specific stage the recommended development process is as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add a file called SKIP_IMAGES into the directories containing EXPORT_* files (currently stage2, stage4 and stage5)&lt;/li&gt; 
 &lt;li&gt;Add SKIP files to the stages you don&#39;t want to build. For example, if you&#39;re basing your image on the lite image you would add these to stages 3, 4 and 5.&lt;/li&gt; 
 &lt;li&gt;Run build.sh to build all stages&lt;/li&gt; 
 &lt;li&gt;Add SKIP files to the earlier successfully built stages&lt;/li&gt; 
 &lt;li&gt;Modify the last stage&lt;/li&gt; 
 &lt;li&gt;Rebuild just the last stage using &lt;code&gt;sudo CLEAN=1 ./build.sh&lt;/code&gt; (or, for docker builds &lt;code&gt;PRESERVE_CONTAINER=1 CONTINUE=1 CLEAN=1 ./build-docker.sh&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Once you&#39;re happy with the image you can remove the SKIP_IMAGES files and export your image to test&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Troubleshooting&lt;/h1&gt; 
&lt;h2&gt;&lt;code&gt;64 Bit Systems&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;A 64 bit image can be generated from the &lt;code&gt;arm64&lt;/code&gt; branch in this repository. Just replace the command from &lt;a href=&quot;https://raw.githubusercontent.com/RPi-Distro/pi-gen/master/#getting-started-with-building-your-images&quot;&gt;this section&lt;/a&gt; by the one below, and follow the rest of the documentation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone --branch arm64 https://github.com/RPI-Distro/pi-gen.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to generate a 64 bits image from a Raspberry Pi running a 32 bits version, you need to add &lt;code&gt;arm_64bit=1&lt;/code&gt; to your &lt;code&gt;config.txt&lt;/code&gt; file and reboot your machine. This will restart your machine with a 64 bits kernel. This will only work from a Raspberry Pi with a 64-bit capable processor (i.e. Raspberry Pi Zero 2, Raspberry Pi 3 or Raspberry Pi 4).&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;binfmt_misc&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Linux is able to execute binaries from other architectures, meaning that it should be possible to make use of &lt;code&gt;pi-gen&lt;/code&gt; on an x86_64 system, even though it will be running ARM binaries. This requires support from the &lt;a href=&quot;https://en.wikipedia.org/wiki/Binfmt_misc&quot;&gt;&lt;code&gt;binfmt_misc&lt;/code&gt;&lt;/a&gt; kernel module.&lt;/p&gt; 
&lt;p&gt;You may see one of the following errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;update-binfmts: warning: Couldn&#39;t load the binfmt_misc module.
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;W: Failure trying to run: chroot &quot;/pi-gen/work/test/stage0/rootfs&quot; /bin/true
and/or
chroot: failed to run command &#39;/bin/true&#39;: Exec format error
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To resolve this, ensure that the following files are available (install them if necessary):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/lib/modules/$(uname -r)/kernel/fs/binfmt_misc.ko
/usr/bin/qemu-arm-static
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also need to load the module by hand - run &lt;code&gt;modprobe binfmt_misc&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you are using WSL to build you may have to enable the service &lt;code&gt;sudo update-binfmts --enable&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google/oss-fuzz</title>
      <link>https://github.com/google/oss-fuzz</link>
      <description>&lt;p&gt;OSS-Fuzz - continuous fuzzing for open source software.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OSS-Fuzz: Continuous Fuzzing for Open Source Software&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Fuzz_testing&quot;&gt;Fuzz testing&lt;/a&gt; is a well-known technique for uncovering programming errors in software. Many of these detectable errors, like &lt;a href=&quot;https://en.wikipedia.org/wiki/Buffer_overflow&quot;&gt;buffer overflow&lt;/a&gt;, can have serious security implications. Google has found &lt;a href=&quot;https://issues.chromium.org/issues?q=label:Stability-LibFuzzer%20-status:Duplicate,WontFix&quot;&gt;thousands&lt;/a&gt; of security vulnerabilities and stability bugs by deploying &lt;a href=&quot;https://security.googleblog.com/2016/08/guided-in-process-fuzzing-of-chrome.html&quot;&gt;guided in-process fuzzing of Chrome components&lt;/a&gt;, and we now want to share that service with the open source community.&lt;/p&gt; 
&lt;p&gt;In cooperation with the &lt;a href=&quot;https://www.coreinfrastructure.org/&quot;&gt;Core Infrastructure Initiative&lt;/a&gt; and the &lt;a href=&quot;https://www.openssf.org/&quot;&gt;OpenSSF&lt;/a&gt;, OSS-Fuzz aims to make common open source software more secure and stable by combining modern fuzzing techniques with scalable, distributed execution. Projects that do not qualify for OSS-Fuzz (e.g. closed source) can run their own instances of &lt;a href=&quot;https://github.com/google/clusterfuzz&quot;&gt;ClusterFuzz&lt;/a&gt; or &lt;a href=&quot;https://google.github.io/clusterfuzzlite/&quot;&gt;ClusterFuzzLite&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We support the &lt;a href=&quot;https://llvm.org/docs/LibFuzzer.html&quot;&gt;libFuzzer&lt;/a&gt;, &lt;a href=&quot;https://github.com/AFLplusplus/AFLplusplus&quot;&gt;AFL++&lt;/a&gt;, and &lt;a href=&quot;https://github.com/google/honggfuzz&quot;&gt;Honggfuzz&lt;/a&gt; fuzzing engines in combination with &lt;a href=&quot;https://github.com/google/sanitizers&quot;&gt;Sanitizers&lt;/a&gt;, as well as &lt;a href=&quot;https://github.com/google/clusterfuzz&quot;&gt;ClusterFuzz&lt;/a&gt;, a distributed fuzzer execution environment and reporting tool.&lt;/p&gt; 
&lt;p&gt;Currently, OSS-Fuzz supports C/C++, Rust, Go, Python, Java/JVM, and JavaScript code. Other languages supported by &lt;a href=&quot;https://llvm.org&quot;&gt;LLVM&lt;/a&gt; may work too. OSS-Fuzz supports fuzzing x86_64 and i386 builds.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/google/oss-fuzz/master/docs/images/process.png&quot; alt=&quot;OSS-Fuzz process diagram&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://google.github.io/oss-fuzz&quot;&gt;detailed documentation&lt;/a&gt; to learn how to use OSS-Fuzz.&lt;/p&gt; 
&lt;h2&gt;Trophies&lt;/h2&gt; 
&lt;p&gt;As of August 2023, OSS-Fuzz has helped identify and fix over &lt;a href=&quot;https://bugs.chromium.org/p/oss-fuzz/issues/list?q=Type%3DBug-Security%20label%3Aclusterfuzz%20-status%3ADuplicate%2CWontFix&amp;amp;can=1&quot;&gt;10,000&lt;/a&gt; vulnerabilities and &lt;a href=&quot;https://bugs.chromium.org/p/oss-fuzz/issues/list?q=Type%3DBug%20label%3Aclusterfuzz%20-status%3ADuplicate%2CWontFix&amp;amp;can=1&quot;&gt;36,000&lt;/a&gt; bugs across &lt;a href=&quot;https://github.com/google/oss-fuzz/tree/master/projects&quot;&gt;1,000&lt;/a&gt; projects.&lt;/p&gt; 
&lt;h2&gt;Blog posts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;2023-08-16 - &lt;a href=&quot;https://security.googleblog.com/2023/08/ai-powered-fuzzing-breaking-bug-hunting.html&quot;&gt;AI-Powered Fuzzing: Breaking the Bug Hunting Barrier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2023-02-01 - &lt;a href=&quot;https://security.googleblog.com/2023/02/taking-next-step-oss-fuzz-in-2023.html&quot;&gt;Taking the next step: OSS-Fuzz in 2023&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2022-09-08 - &lt;a href=&quot;https://security.googleblog.com/2022/09/fuzzing-beyond-memory-corruption.html&quot;&gt;Fuzzing beyond memory corruption: Finding broader classes of vulnerabilities automatically&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2021-12-16 - &lt;a href=&quot;https://security.googleblog.com/2021/12/improving-oss-fuzz-and-jazzer-to-catch.html&quot;&gt;Improving OSS-Fuzz and Jazzer to catch Log4Shell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2021-03-10 - &lt;a href=&quot;https://security.googleblog.com/2021/03/fuzzing-java-in-oss-fuzz.html&quot;&gt;Fuzzing Java in OSS-Fuzz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2020-12-07 - &lt;a href=&quot;https://security.googleblog.com/2020/12/improving-open-source-security-during.html&quot;&gt;Improving open source security during the Google summer internship program&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2020-10-09 - &lt;a href=&quot;https://security.googleblog.com/2020/10/fuzzing-internships-for-open-source.html&quot;&gt;Fuzzing internships for Open Source Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2018-11-06 - &lt;a href=&quot;https://security.googleblog.com/2018/11/a-new-chapter-for-oss-fuzz.html&quot;&gt;A New Chapter for OSS-Fuzz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2017-05-08 - &lt;a href=&quot;https://opensource.googleblog.com/2017/05/oss-fuzz-five-months-later-and.html&quot;&gt;OSS-Fuzz: Five months later, and rewarding projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2016-12-01 - &lt;a href=&quot;https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html&quot;&gt;Announcing OSS-Fuzz: Continuous fuzzing for open source software&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>bioconda/bioconda-recipes</title>
      <link>https://github.com/bioconda/bioconda-recipes</link>
      <description>&lt;p&gt;Conda recipes for the bioconda channel.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bioconda/bioconda-recipes/master/logo/bioconda_monochrome_small.png&quot; alt=&quot;&quot; title=&quot;Bioconda&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;The bioconda channel&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitter.im/bioconda/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/bioconda/bioconda-recipes.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://anaconda.org&quot;&gt;Conda&lt;/a&gt; is a platform- and language-independent package manager that supports easy distribution, installation and version management of software. The &lt;a href=&quot;https://anaconda.org/bioconda&quot;&gt;bioconda channel&lt;/a&gt; is a Conda channel providing bioinformatics related packages for &lt;strong&gt;Linux&lt;/strong&gt; and &lt;strong&gt;macOS&lt;/strong&gt;, supporting both x86_64 and aarch64/arm64 architectures. This repository hosts the corresponding recipes.&lt;/p&gt; 
&lt;h2&gt;User guide&lt;/h2&gt; 
&lt;p&gt;Please visit &lt;a href=&quot;https://bioconda.github.io&quot;&gt;https://bioconda.github.io&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Developer guide&lt;/h2&gt; 
&lt;p&gt;Please visit the new docs at &lt;a href=&quot;https://bioconda.github.io/contributor/index.html&quot;&gt;https://bioconda.github.io/contributor/index.html&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Nightly build status&lt;/h2&gt; 
&lt;p&gt;The nightly uploader jobs build any recipes that exist on master but were not successfully uploaded to the &lt;a href=&quot;https://anaconda.org/bioconda&quot;&gt;bioconda channel&lt;/a&gt;. Any failure in the nightly build should be resolved with a PR for the affected recipe.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;arch&lt;/th&gt; 
   &lt;th&gt;build status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;linux-64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://dev.azure.com/bioconda/bioconda-recipes/_build/latest?definitionId=4&quot;&gt;&lt;img src=&quot;https://dev.azure.com/bioconda/bioconda-recipes/_apis/build/status/Nightly%20uploader?branchName=master&amp;amp;jobName=build_and_push_linux&amp;amp;label=Nightly%20linux-64&quot; alt=&quot;Nightly linux-64&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;osx-64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://dev.azure.com/bioconda/bioconda-recipes/_build/latest?definitionId=4&quot;&gt;&lt;img src=&quot;https://dev.azure.com/bioconda/bioconda-recipes/_apis/build/status/Nightly%20uploader?branchName=master&amp;amp;jobName=build_and_push_osx&amp;amp;label=Nightly%20osx-64&quot; alt=&quot;Nightly osx-64&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;osx-arm64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/bioconda/bioconda-recipes/actions/workflows/nightly.yml&quot;&gt;&lt;img src=&quot;https://github.com/bioconda/bioconda-recipes/actions/workflows/nightly.yml/badge.svg?sanitize=true&quot; alt=&quot;Nightly osx-arm64&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;linux-aarch64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://app.circleci.com/insights/github/bioconda/bioconda-recipes/workflows/Nightly%20(ARM)/overview?branch=master&amp;amp;reporting-window=last-24-hours&quot;&gt;&lt;img src=&quot;https://dl.circleci.com/insights-snapshot/gh/bioconda/bioconda-recipes/master/Nightly%20(ARM)/badge.svg?window=24h&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>nvm-sh/nvm</title>
      <link>https://github.com/nvm-sh/nvm</link>
      <description>&lt;p&gt;Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions&lt;/p&gt;&lt;hr&gt;&lt;a href=&quot;https://github.com/nvm-sh/logos&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/nvm-sh/logos/HEAD/nvm-logo-white.svg&quot;&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/nvm-sh/logos/HEAD/nvm-logo-color.svg?sanitize=true&quot; height=&quot;50&quot; alt=&quot;nvm project logo&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h1&gt;Node Version Manager &lt;a href=&quot;https://app.travis-ci.com/nvm-sh/nvm&quot;&gt;&lt;img src=&quot;https://app.travis-ci.com/nvm-sh/nvm.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nvm-sh/nvm/releases/tag/v0.40.2&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/version-v0.40.2-yellow.svg?sanitize=true&quot; alt=&quot;nvm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bestpractices.dev/projects/684&quot;&gt;&lt;img src=&quot;https://bestpractices.dev/projects/684/badge&quot; alt=&quot;CII Best Practices&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;!-- To update this table of contents, ensure you have run `npm install` then `npm run doctoc` --&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#intro&quot;&gt;Intro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-and-updating&quot;&gt;Installing and Updating&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#install--update-script&quot;&gt;Install &amp;amp; Update Script&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#additional-notes&quot;&gt;Additional Notes&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-in-docker&quot;&gt;Installing in Docker&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-in-docker-for-cicd-jobs&quot;&gt;Installing in Docker for CICD-Jobs&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#troubleshooting-on-linux&quot;&gt;Troubleshooting on Linux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#troubleshooting-on-macos&quot;&gt;Troubleshooting on macOS&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#ansible&quot;&gt;Ansible&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#verify-installation&quot;&gt;Verify Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#important-notes&quot;&gt;Important Notes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#git-install&quot;&gt;Git Install&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-install&quot;&gt;Manual Install&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-upgrade&quot;&gt;Manual Upgrade&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#long-term-support&quot;&gt;Long-term Support&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#migrating-global-packages-while-installing&quot;&gt;Migrating Global Packages While Installing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#default-global-packages-from-file-while-installing&quot;&gt;Default Global Packages From File While Installing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#iojs&quot;&gt;io.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#system-version-of-node&quot;&gt;System Version of Node&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#listing-versions&quot;&gt;Listing Versions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#setting-custom-colors&quot;&gt;Setting Custom Colors&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#persisting-custom-colors&quot;&gt;Persisting custom colors&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#suppressing-colorized-output&quot;&gt;Suppressing colorized output&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#restoring-path&quot;&gt;Restoring PATH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#set-default-node-version&quot;&gt;Set default node version&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#use-a-mirror-of-node-binaries&quot;&gt;Use a mirror of node binaries&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#pass-authorization-header-to-mirror&quot;&gt;Pass Authorization header to mirror&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#nvmrc&quot;&gt;.nvmrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#deeper-shell-integration&quot;&gt;Deeper Shell Integration&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#calling-nvm-use-automatically-in-a-directory-with-a-nvmrc-file&quot;&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#bash&quot;&gt;bash&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#zsh&quot;&gt;zsh&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#fish&quot;&gt;fish&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#running-tests&quot;&gt;Running Tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#environment-variables&quot;&gt;Environment variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#bash-completion&quot;&gt;Bash Completion&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage-1&quot;&gt;Usage&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#compatibility-issues&quot;&gt;Compatibility Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-nvm-on-alpine-linux&quot;&gt;Installing nvm on Alpine Linux&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#alpine-linux-313&quot;&gt;Alpine Linux 3.13+&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#alpine-linux-35---312&quot;&gt;Alpine Linux 3.5 - 3.12&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#uninstalling--removal&quot;&gt;Uninstalling / Removal&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-uninstall&quot;&gt;Manual Uninstall&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#docker-for-development-environment&quot;&gt;Docker For Development Environment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#problems&quot;&gt;Problems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#macos-troubleshooting&quot;&gt;macOS Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#wsl-troubleshooting&quot;&gt;WSL Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#maintainers&quot;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#project-support&quot;&gt;Project Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#enterprise-support&quot;&gt;Enterprise Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#copyright-notice&quot;&gt;Copyright notice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;Intro&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; allows you to quickly install and use different versions of node via the command line.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm use 16
Now using node v16.9.1 (npm v7.21.1)
$ node -v
v16.9.1
$ nvm use 14
Now using node v14.18.0 (npm v6.14.15)
$ node -v
v14.18.0
$ nvm install 12
Now using node v12.22.6 (npm v6.14.5)
$ node -v
v12.22.6
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Simple as that!&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;nvm is a version manager for &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;, designed to be installed per-user, and invoked per-shell. &lt;code&gt;nvm&lt;/code&gt; works on any POSIX-compliant shell (sh, dash, ksh, zsh, bash), in particular on these platforms: unix, macOS, and &lt;a href=&quot;https://github.com/nvm-sh/nvm#important-notes&quot;&gt;windows WSL&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;installation-and-update&quot;&gt;&lt;/a&gt; &lt;a id=&quot;install-script&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installing and Updating&lt;/h2&gt; 
&lt;h3&gt;Install &amp;amp; Update Script&lt;/h3&gt; 
&lt;p&gt;To &lt;strong&gt;install&lt;/strong&gt; or &lt;strong&gt;update&lt;/strong&gt; nvm, you should run the &lt;a href=&quot;https://github.com/nvm-sh/nvm/raw/v0.40.2/install.sh&quot;&gt;install script&lt;/a&gt;. To do that, you may either download and run the script manually, or use the following cURL or Wget command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running either of the above commands downloads a script and runs it. The script clones the nvm repository to &lt;code&gt;~/.nvm&lt;/code&gt;, and attempts to add the source lines from the snippet below to the correct profile file (&lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, or &lt;code&gt;~/.profile&lt;/code&gt;). If you find the install script is updating the wrong profile file, set the &lt;code&gt;$PROFILE&lt;/code&gt; env var to the profile file’s path, and then rerun the installation script.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;profile_snippet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$([ -z &quot;${XDG_CONFIG_HOME-}&quot; ] &amp;amp;&amp;amp; printf %s &quot;${HOME}/.nvm&quot; || printf %s &quot;${XDG_CONFIG_HOME}/nvm&quot;)&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Additional Notes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If the environment variable &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is present, it will place the &lt;code&gt;nvm&lt;/code&gt; files there.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can add &lt;code&gt;--no-use&lt;/code&gt; to the end of the above script to postpone using &lt;code&gt;nvm&lt;/code&gt; until you manually &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; it:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$([ -z &quot;${XDG_CONFIG_HOME-}&quot; ] &amp;amp;&amp;amp; printf %s &quot;${HOME}/.nvm&quot; || printf %s &quot;${XDG_CONFIG_HOME}/nvm&quot;)&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot; --no-use # This loads nvm, without auto-using the default version
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;You can customize the install source, directory, profile, and version using the &lt;code&gt;NVM_SOURCE&lt;/code&gt;, &lt;code&gt;NVM_DIR&lt;/code&gt;, &lt;code&gt;PROFILE&lt;/code&gt;, and &lt;code&gt;NODE_VERSION&lt;/code&gt; variables. Eg: &lt;code&gt;curl ... | NVM_DIR=&quot;path/to/nvm&quot;&lt;/code&gt;. Ensure that the &lt;code&gt;NVM_DIR&lt;/code&gt; does not contain a trailing slash.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The installer can use &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, or &lt;code&gt;wget&lt;/code&gt; to download &lt;code&gt;nvm&lt;/code&gt;, whichever is available.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can instruct the installer to not edit your shell config (for example if you already get completions via a &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/nvm&quot;&gt;zsh nvm plugin&lt;/a&gt;) by setting &lt;code&gt;PROFILE=/dev/null&lt;/code&gt; before running the &lt;code&gt;install.sh&lt;/code&gt; script. Here&#39;s an example one-line command to do that: &lt;code&gt;PROFILE=/dev/null bash -c &#39;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash&#39;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Installing in Docker&lt;/h4&gt; 
&lt;p&gt;When invoking bash as a non-interactive shell, like in a Docker container, none of the regular profile files are sourced. In order to use &lt;code&gt;nvm&lt;/code&gt;, &lt;code&gt;node&lt;/code&gt;, and &lt;code&gt;npm&lt;/code&gt; like normal, you can instead specify the special &lt;code&gt;BASH_ENV&lt;/code&gt; variable, which bash sources when invoked non-interactively.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Use bash for the shell
SHELL [&quot;/bin/bash&quot;, &quot;-o&quot;, &quot;pipefail&quot;, &quot;-c&quot;]

# Create a script file sourced by both interactive and non-interactive bash shells
ENV BASH_ENV /home/user/.bash_env
RUN touch &quot;${BASH_ENV}&quot;
RUN echo &#39;. &quot;${BASH_ENV}&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc

# Download and install nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | PROFILE=&quot;${BASH_ENV}&quot; bash
RUN echo node &amp;gt; .nvmrc
RUN nvm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Installing in Docker for CICD-Jobs&lt;/h5&gt; 
&lt;p&gt;More robust, works in CI/CD-Jobs. Can be run in interactive and non-interactive containers. See &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/3531&quot;&gt;https://github.com/nvm-sh/nvm/issues/3531&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;FROM ubuntu:latest
ARG NODE_VERSION=20

# install curl
RUN apt update &amp;amp;&amp;amp; apt install curl -y

# install nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash

# set env
ENV NVM_DIR=/root/.nvm

# install node
RUN bash -c &quot;source $NVM_DIR/nvm.sh &amp;amp;&amp;amp; nvm install $NODE_VERSION&quot;

# set ENTRYPOINT for reloading nvm-environment
ENTRYPOINT [&quot;bash&quot;, &quot;-c&quot;, &quot;source $NVM_DIR/nvm.sh &amp;amp;&amp;amp; exec \&quot;$@\&quot;&quot;, &quot;--&quot;]

# set cmd to bash
CMD [&quot;/bin/bash&quot;]

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example defaults to installation of nodejs version 20.x.y. Optionally you can easily override the version with docker build args like:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker build -t nvmimage --build-arg NODE_VERSION=19 .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After creation of the image you can start container interactively and run commands, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --rm -it nvmimage

root@0a6b5a237c14:/# nvm -v
0.40.2

root@0a6b5a237c14:/# node -v
v19.9.0

root@0a6b5a237c14:/# npm -v
9.6.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Noninteractive example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;user@host:/tmp/test $ docker run --rm -it nvmimage node -v
v19.9.0
user@host:/tmp/test $ docker run --rm -it nvmimage npm -v
9.6.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Troubleshooting on Linux&lt;/h4&gt; 
&lt;p&gt;On Linux, after running the install script, if you get &lt;code&gt;nvm: command not found&lt;/code&gt; or see no feedback from your terminal after you type &lt;code&gt;command -v nvm&lt;/code&gt;, simply close your current terminal, open a new terminal, and try verifying again. Alternatively, you can run the following commands for the different shells on the command line:&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;bash&lt;/em&gt;: &lt;code&gt;source ~/.bashrc&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;zsh&lt;/em&gt;: &lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;ksh&lt;/em&gt;: &lt;code&gt;. ~/.profile&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;These should pick up the &lt;code&gt;nvm&lt;/code&gt; command.&lt;/p&gt; 
&lt;h4&gt;Troubleshooting on macOS&lt;/h4&gt; 
&lt;p&gt;Since OS X 10.9, &lt;code&gt;/usr/bin/git&lt;/code&gt; has been preset by Xcode command line tools, which means we can&#39;t properly detect if Git is installed or not. You need to manually install the Xcode command line tools before running the install script, otherwise, it&#39;ll fail. (see &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/1782&quot;&gt;#1782&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;If you get &lt;code&gt;nvm: command not found&lt;/code&gt; after running the install script, one of the following might be the reason:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Since macOS 10.15, the default shell is &lt;code&gt;zsh&lt;/code&gt; and nvm will look for &lt;code&gt;.zshrc&lt;/code&gt; to update, none is installed by default. Create one with &lt;code&gt;touch ~/.zshrc&lt;/code&gt; and run the install script again.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you use bash, the previous default shell, your system may not have &lt;code&gt;.bash_profile&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt; files where the command is set up. Create one of them with &lt;code&gt;touch ~/.bash_profile&lt;/code&gt; or &lt;code&gt;touch ~/.bashrc&lt;/code&gt; and run the install script again. Then, run &lt;code&gt;. ~/.bash_profile&lt;/code&gt; or &lt;code&gt;. ~/.bashrc&lt;/code&gt; to pick up the &lt;code&gt;nvm&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You have previously used &lt;code&gt;bash&lt;/code&gt;, but you have &lt;code&gt;zsh&lt;/code&gt; installed. You need to manually add &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-install&quot;&gt;these lines&lt;/a&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt; and run &lt;code&gt;. ~/.zshrc&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You might need to restart your terminal instance or run &lt;code&gt;. ~/.nvm/nvm.sh&lt;/code&gt;. Restarting your terminal/opening a new tab/window, or running the source command will load the command and the new configuration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If the above didn&#39;t help, you might need to restart your terminal instance. Try opening a new tab/window in your terminal and retry.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the above doesn&#39;t fix the problem, you may try the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you use bash, it may be that your &lt;code&gt;.bash_profile&lt;/code&gt; (or &lt;code&gt;~/.profile&lt;/code&gt;) does not source your &lt;code&gt;~/.bashrc&lt;/code&gt; properly. You could fix this by adding &lt;code&gt;source ~/&amp;lt;your_profile_file&amp;gt;&lt;/code&gt; to it or following the next step below.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Try adding &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#profile_snippet&quot;&gt;the snippet from the install section&lt;/a&gt;, that finds the correct nvm directory and loads nvm, to your usual profile (&lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information about this issue and possible workarounds, please &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/576&quot;&gt;refer here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; For Macs with the Apple Silicon chip, node started offering &lt;strong&gt;arm64&lt;/strong&gt; arch Darwin packages since v16.0.0 and experimental &lt;strong&gt;arm64&lt;/strong&gt; support when compiling from source since v14.17.0. If you are facing issues installing node using &lt;code&gt;nvm&lt;/code&gt;, you may want to update to one of those versions or later.&lt;/p&gt; 
&lt;h4&gt;Ansible&lt;/h4&gt; 
&lt;p&gt;You can use a task:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- name: Install nvm
  ansible.builtin.shell: &amp;gt;
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
  args:
    creates: &quot;{{ ansible_env.HOME }}/.nvm/nvm.sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Verify Installation&lt;/h3&gt; 
&lt;p&gt;To verify that nvm has been installed, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;command -v nvm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;which should output &lt;code&gt;nvm&lt;/code&gt; if the installation was successful. Please note that &lt;code&gt;which nvm&lt;/code&gt; will not work, since &lt;code&gt;nvm&lt;/code&gt; is a sourced shell function, not an executable binary.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On Linux, after running the install script, if you get &lt;code&gt;nvm: command not found&lt;/code&gt; or see no feedback from your terminal after you type &lt;code&gt;command -v nvm&lt;/code&gt;, simply close your current terminal, open a new terminal, and try verifying again.&lt;/p&gt; 
&lt;h3&gt;Important Notes&lt;/h3&gt; 
&lt;p&gt;If you&#39;re running a system without prepackaged binary available, which means you&#39;re going to install node or io.js from its source code, you need to make sure your system has a C++ compiler. For OS X, Xcode will work, for Debian/Ubuntu based GNU/Linux, the &lt;code&gt;build-essential&lt;/code&gt; and &lt;code&gt;libssl-dev&lt;/code&gt; packages work.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;nvm&lt;/code&gt; also supports Windows in some cases. It should work through WSL (Windows Subsystem for Linux) depending on the version of WSL. It should also work with &lt;a href=&quot;https://gitforwindows.org/&quot;&gt;GitBash&lt;/a&gt; (MSYS) or &lt;a href=&quot;https://cygwin.com&quot;&gt;Cygwin&lt;/a&gt;. Otherwise, for Windows, a few alternatives exist, which are neither supported nor developed by us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/coreybutler/nvm-windows&quot;&gt;nvm-windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcelklehr/nodist&quot;&gt;nodist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasongin/nvs&quot;&gt;nvs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;nvm&lt;/code&gt; does not support &lt;a href=&quot;https://fishshell.com&quot;&gt;Fish&lt;/a&gt; either (see &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/303&quot;&gt;#303&lt;/a&gt;). Alternatives exist, which are neither supported nor developed by us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/edc/bass&quot;&gt;bass&lt;/a&gt; allows you to use utilities written for Bash in fish shell&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brigand/fast-nvm-fish&quot;&gt;fast-nvm-fish&lt;/a&gt; only works with version numbers (not aliases) but doesn&#39;t significantly slow your shell startup&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/derekstavis/plugin-nvm&quot;&gt;plugin-nvm&lt;/a&gt; plugin for &lt;a href=&quot;https://github.com/oh-my-fish/oh-my-fish&quot;&gt;Oh My Fish&lt;/a&gt;, which makes nvm and its completions available in fish shell&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jorgebucaran/nvm.fish&quot;&gt;nvm.fish&lt;/a&gt; - The Node.js version manager you&#39;ll adore, crafted just for Fish&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FabioAntunes/fish-nvm&quot;&gt;fish-nvm&lt;/a&gt; - Wrapper around nvm for fish, delays sourcing nvm until it&#39;s actually used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We still have some problems with FreeBSD, because there is no official pre-built binary for FreeBSD, and building from source may need &lt;a href=&quot;https://www.freshports.org/www/node/files/patch-deps_v8_src_base_platform_platform-posix.cc&quot;&gt;patches&lt;/a&gt;; see the issue ticket:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/900&quot;&gt;[#900] [Bug] node on FreeBSD may need to be patched&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/3716&quot;&gt;nodejs/node#3716&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On OS X, if you do not have Xcode installed and you do not wish to download the ~4.3GB file, you can install the &lt;code&gt;Command Line Tools&lt;/code&gt;. You can check out this blog post on how to just that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/&quot;&gt;How to Install Command Line Tools in OS X Mavericks &amp;amp; Yosemite (Without Xcode)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On OS X, if you have/had a &quot;system&quot; node installed and want to install modules globally, keep in mind that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When using &lt;code&gt;nvm&lt;/code&gt; you do not need &lt;code&gt;sudo&lt;/code&gt; to globally install a module with &lt;code&gt;npm -g&lt;/code&gt;, so instead of doing &lt;code&gt;sudo npm install -g grunt&lt;/code&gt;, do instead &lt;code&gt;npm install -g grunt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;If you have an &lt;code&gt;~/.npmrc&lt;/code&gt; file, make sure it does not contain any &lt;code&gt;prefix&lt;/code&gt; settings (which is not compatible with &lt;code&gt;nvm&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;You can (but should not?) keep your previous &quot;system&quot; node install, but &lt;code&gt;nvm&lt;/code&gt; will only be available to your user account (the one used to install nvm). This might cause version mismatches, as other users will be using &lt;code&gt;/usr/local/lib/node_modules/*&lt;/code&gt; VS your user account using &lt;code&gt;~/.nvm/versions/node/vX.X.X/lib/node_modules/*&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Homebrew installation is not supported. If you have issues with homebrew-installed &lt;code&gt;nvm&lt;/code&gt;, please &lt;code&gt;brew uninstall&lt;/code&gt; it, and install it using the instructions below, before filing an issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you&#39;re using &lt;code&gt;zsh&lt;/code&gt; you can easily install &lt;code&gt;nvm&lt;/code&gt; as a zsh plugin. Install &lt;a href=&quot;https://github.com/lukechilds/zsh-nvm&quot;&gt;&lt;code&gt;zsh-nvm&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;nvm upgrade&lt;/code&gt; to upgrade (&lt;a href=&quot;https://github.com/lukechilds/zsh-nvm#auto-use&quot;&gt;you can set&lt;/a&gt; &lt;code&gt;NVM_AUTO_USE=true&lt;/code&gt; to have it automatically detect and use &lt;code&gt;.nvmrc&lt;/code&gt; files).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Git versions before v1.7 may face a problem of cloning &lt;code&gt;nvm&lt;/code&gt; source from GitHub via https protocol, and there is also different behavior of git before v1.6, and git prior to &lt;a href=&quot;https://github.com/git/git/commit/5a7d5b683f869d3e3884a89775241afa515da9e7&quot;&gt;v1.17.10&lt;/a&gt; can not clone tags, so the minimum required git version is v1.7.10. If you are interested in the problem we mentioned here, please refer to GitHub&#39;s &lt;a href=&quot;https://help.github.com/articles/https-cloning-errors/&quot;&gt;HTTPS cloning errors&lt;/a&gt; article.&lt;/p&gt; 
&lt;h3&gt;Git Install&lt;/h3&gt; 
&lt;p&gt;If you have &lt;code&gt;git&lt;/code&gt; installed (requires git v1.7.10+):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;clone this repo in the root of your user profile 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;cd ~/&lt;/code&gt; from anywhere then &lt;code&gt;git clone https://github.com/nvm-sh/nvm.git .nvm&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd ~/.nvm&lt;/code&gt; and check out the latest version with &lt;code&gt;git checkout v0.40.2&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;activate &lt;code&gt;nvm&lt;/code&gt; by sourcing it from your shell: &lt;code&gt;. ./nvm.sh&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Now add these lines to your &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.zshrc&lt;/code&gt; file to have it automatically sourced upon login: (you may have to add to more than one of the above files)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm
[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Install&lt;/h3&gt; 
&lt;p&gt;For a fully manual install, execute the following lines to first clone the &lt;code&gt;nvm&lt;/code&gt; repository into &lt;code&gt;$HOME/.nvm&lt;/code&gt;, and then load &lt;code&gt;nvm&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot; &amp;amp;&amp;amp; (
  git clone https://github.com/nvm-sh/nvm.git &quot;$NVM_DIR&quot;
  cd &quot;$NVM_DIR&quot;
  git checkout `git describe --abbrev=0 --tags --match &quot;v[0-9]*&quot; $(git rev-list --tags --max-count=1)`
) &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now add these lines to your &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.zshrc&lt;/code&gt; file to have it automatically sourced upon login: (you may have to add to more than one of the above files)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm
[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Upgrade&lt;/h3&gt; 
&lt;p&gt;For manual upgrade with &lt;code&gt;git&lt;/code&gt; (requires git v1.7.10+):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;change to the &lt;code&gt;$NVM_DIR&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;pull down the latest changes&lt;/li&gt; 
 &lt;li&gt;check out the latest version&lt;/li&gt; 
 &lt;li&gt;activate the new version&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;(
  cd &quot;$NVM_DIR&quot;
  git fetch --tags origin
  git checkout `git describe --abbrev=0 --tags --match &quot;v[0-9]*&quot; $(git rev-list --tags --max-count=1)`
) &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To download, compile, and install the latest release of node, do this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install node # &quot;node&quot; is an alias for the latest version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install a specific version of node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install 14.7.0 # or 16.3.0, 12.22.1, etc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To set an alias:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm alias my_alias v14.4.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Make sure that your alias does not contain any spaces or slashes.&lt;/p&gt; 
&lt;p&gt;The first version installed becomes the default. New shells will start with the default version of node (e.g., &lt;code&gt;nvm alias default&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;You can list available versions using &lt;code&gt;ls-remote&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm ls-remote
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then in any new shell just use the installed version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm use node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can just run it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm run node --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, you can run any arbitrary command in a subshell with the desired version of node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm exec 4.2 node --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also get the path to the executable to where it was installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm which 12.22
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In place of a version pointer like &quot;14.7&quot; or &quot;16.3&quot; or &quot;12.22.1&quot;, you can use the following special default aliases with &lt;code&gt;nvm install&lt;/code&gt;, &lt;code&gt;nvm use&lt;/code&gt;, &lt;code&gt;nvm run&lt;/code&gt;, &lt;code&gt;nvm exec&lt;/code&gt;, &lt;code&gt;nvm which&lt;/code&gt;, etc:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;node&lt;/code&gt;: this installs the latest version of &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;&lt;code&gt;node&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;iojs&lt;/code&gt;: this installs the latest version of &lt;a href=&quot;https://iojs.org/en/&quot;&gt;&lt;code&gt;io.js&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stable&lt;/code&gt;: this alias is deprecated, and only truly applies to &lt;code&gt;node&lt;/code&gt; &lt;code&gt;v0.12&lt;/code&gt; and earlier. Currently, this is an alias for &lt;code&gt;node&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;unstable&lt;/code&gt;: this alias points to &lt;code&gt;node&lt;/code&gt; &lt;code&gt;v0.11&lt;/code&gt; - the last &quot;unstable&quot; node release, since post-1.0, all node versions are stable. (in SemVer, versions communicate breakage, not stability).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Long-term Support&lt;/h3&gt; 
&lt;p&gt;Node has a &lt;a href=&quot;https://github.com/nodejs/Release#release-schedule&quot;&gt;schedule&lt;/a&gt; for long-term support (LTS) You can reference LTS versions in aliases and &lt;code&gt;.nvmrc&lt;/code&gt; files with the notation &lt;code&gt;lts/*&lt;/code&gt; for the latest LTS, and &lt;code&gt;lts/argon&lt;/code&gt; for LTS releases from the &quot;argon&quot; line, for example. In addition, the following commands support LTS arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;nvm install --lts&lt;/code&gt; / &lt;code&gt;nvm install --lts=argon&lt;/code&gt; / &lt;code&gt;nvm install &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm install lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm uninstall --lts&lt;/code&gt; / &lt;code&gt;nvm uninstall --lts=argon&lt;/code&gt; / &lt;code&gt;nvm uninstall &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm uninstall lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm use --lts&lt;/code&gt; / &lt;code&gt;nvm use --lts=argon&lt;/code&gt; / &lt;code&gt;nvm use &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm use lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm exec --lts&lt;/code&gt; / &lt;code&gt;nvm exec --lts=argon&lt;/code&gt; / &lt;code&gt;nvm exec &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm exec lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm run --lts&lt;/code&gt; / &lt;code&gt;nvm run --lts=argon&lt;/code&gt; / &lt;code&gt;nvm run &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm run lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm ls-remote --lts&lt;/code&gt; / &lt;code&gt;nvm ls-remote --lts=argon&lt;/code&gt; &lt;code&gt;nvm ls-remote &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm ls-remote lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm version-remote --lts&lt;/code&gt; / &lt;code&gt;nvm version-remote --lts=argon&lt;/code&gt; / &lt;code&gt;nvm version-remote &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm version-remote lts/argon&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Any time your local copy of &lt;code&gt;nvm&lt;/code&gt; connects to &lt;a href=&quot;https://nodejs.org&quot;&gt;https://nodejs.org&lt;/a&gt;, it will re-create the appropriate local aliases for all available LTS lines. These aliases (stored under &lt;code&gt;$NVM_DIR/alias/lts&lt;/code&gt;), are managed by &lt;code&gt;nvm&lt;/code&gt;, and you should not modify, remove, or create these files - expect your changes to be undone, and expect meddling with these files to cause bugs that will likely not be supported.&lt;/p&gt; 
&lt;p&gt;To get the latest LTS version of node and migrate your existing installed packages, use&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=current &#39;lts/*&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Migrating Global Packages While Installing&lt;/h3&gt; 
&lt;p&gt;If you want to install a new version of Node.js and migrate npm packages from a previous version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=node node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will first use &quot;nvm version node&quot; to identify the current version you&#39;re migrating packages from. Then it resolves the new version to install from the remote server and installs it. Lastly, it runs &quot;nvm reinstall-packages&quot; to reinstall the npm packages from your prior version of Node to the new one.&lt;/p&gt; 
&lt;p&gt;You can also install and migrate npm packages from specific versions of Node like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=5 6
nvm install --reinstall-packages-from=iojs v4.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that reinstalling packages &lt;em&gt;explicitly does not update the npm version&lt;/em&gt; — this is to ensure that npm isn&#39;t accidentally upgraded to a broken version for the new node version.&lt;/p&gt; 
&lt;p&gt;To update npm at the same time add the &lt;code&gt;--latest-npm&lt;/code&gt; flag, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=default --latest-npm &#39;lts/*&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, you can at any time run the following command to get the latest supported npm version on the current node version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install-latest-npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;ve already gotten an error to the effect of &quot;npm does not support Node.js&quot;, you&#39;ll need to (1) revert to a previous node version (&lt;code&gt;nvm ls&lt;/code&gt; &amp;amp; &lt;code&gt;nvm use &amp;lt;your latest _working_ version from the ls&amp;gt;&lt;/code&gt;), (2) delete the newly created node version (&lt;code&gt;nvm uninstall &amp;lt;your _broken_ version of node from the ls&amp;gt;&lt;/code&gt;), then (3) rerun your &lt;code&gt;nvm install&lt;/code&gt; with the &lt;code&gt;--latest-npm&lt;/code&gt; flag.&lt;/p&gt; 
&lt;h3&gt;Default Global Packages From File While Installing&lt;/h3&gt; 
&lt;p&gt;If you have a list of default packages you want installed every time you install a new version, we support that too -- just add the package names, one per line, to the file &lt;code&gt;$NVM_DIR/default-packages&lt;/code&gt;. You can add anything npm would accept as a package argument on the command line.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# $NVM_DIR/default-packages

rimraf
object-inspect@1.0.2
stevemao/left-pad
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;io.js&lt;/h3&gt; 
&lt;p&gt;If you want to install &lt;a href=&quot;https://github.com/iojs/io.js/&quot;&gt;io.js&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install iojs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to install a new version of io.js and migrate npm packages from a previous version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=iojs iojs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The same guidelines mentioned for migrating npm packages in node are applicable to io.js.&lt;/p&gt; 
&lt;h3&gt;System Version of Node&lt;/h3&gt; 
&lt;p&gt;If you want to use the system-installed version of node, you can use the special default alias &quot;system&quot;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm use system
nvm run system --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Listing Versions&lt;/h3&gt; 
&lt;p&gt;If you want to see what versions are installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm ls
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to see what versions are available to install:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm ls-remote
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Setting Custom Colors&lt;/h3&gt; 
&lt;p&gt;You can set five colors that will be used to display version and alias information. These colors replace the default colors. Initial colors are: g b y r e&lt;/p&gt; 
&lt;p&gt;Color codes:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;r/R = red / bold red

g/G = green / bold green

b/B = blue / bold blue

c/C = cyan / bold cyan

m/M = magenta / bold magenta

y/Y = yellow / bold yellow

k/K = black / bold black

e/W = light grey / white
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm set-colors rgBcm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Persisting custom colors&lt;/h4&gt; 
&lt;p&gt;If you want the custom colors to persist after terminating the shell, export the &lt;code&gt;NVM_COLORS&lt;/code&gt; variable in your shell profile. For example, if you want to use cyan, magenta, green, bold red and bold yellow, add the following line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_COLORS=&#39;cmgRY&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Suppressing colorized output&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;nvm help (or -h or --help)&lt;/code&gt;, &lt;code&gt;nvm ls&lt;/code&gt;, &lt;code&gt;nvm ls-remote&lt;/code&gt; and &lt;code&gt;nvm alias&lt;/code&gt; usually produce colorized output. You can disable colors with the &lt;code&gt;--no-colors&lt;/code&gt; option (or by setting the environment variable &lt;code&gt;TERM=dumb&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm ls --no-colors
nvm help --no-colors
TERM=dumb nvm ls
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Restoring PATH&lt;/h3&gt; 
&lt;p&gt;To restore your PATH, you can deactivate it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm deactivate
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Set default node version&lt;/h3&gt; 
&lt;p&gt;To set a default Node version to be used in any new shell, use the alias &#39;default&#39;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm alias default node # this refers to the latest installed version of node
nvm alias default 18 # this refers to the latest installed v18.x version of node
nvm alias default 18.12  # this refers to the latest installed v18.12.x version of node
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Use a mirror of node binaries&lt;/h3&gt; 
&lt;p&gt;To use a mirror of the node binaries, set &lt;code&gt;$NVM_NODEJS_ORG_MIRROR&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist
nvm install node

NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist nvm install 4.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use a mirror of the io.js binaries, set &lt;code&gt;$NVM_IOJS_ORG_MIRROR&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_IOJS_ORG_MIRROR=https://iojs.org/dist
nvm install iojs-v1.0.3

NVM_IOJS_ORG_MIRROR=https://iojs.org/dist nvm install iojs-v1.0.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;nvm use&lt;/code&gt; will not, by default, create a &quot;current&quot; symlink. Set &lt;code&gt;$NVM_SYMLINK_CURRENT&lt;/code&gt; to &quot;true&quot; to enable this behavior, which is sometimes useful for IDEs. Note that using &lt;code&gt;nvm&lt;/code&gt; in multiple shell tabs with this environment variable enabled can cause race conditions.&lt;/p&gt; 
&lt;h4&gt;Pass Authorization header to mirror&lt;/h4&gt; 
&lt;p&gt;To pass an Authorization header through to the mirror url, set &lt;code&gt;$NVM_AUTH_HEADER&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;NVM_AUTH_HEADER=&quot;Bearer secret-token&quot; nvm install node
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;.nvmrc&lt;/h3&gt; 
&lt;p&gt;You can create a &lt;code&gt;.nvmrc&lt;/code&gt; file containing a node version number (or any other string that &lt;code&gt;nvm&lt;/code&gt; understands; see &lt;code&gt;nvm --help&lt;/code&gt; for details) in the project root directory (or any parent directory). Afterwards, &lt;code&gt;nvm use&lt;/code&gt;, &lt;code&gt;nvm install&lt;/code&gt;, &lt;code&gt;nvm exec&lt;/code&gt;, &lt;code&gt;nvm run&lt;/code&gt;, and &lt;code&gt;nvm which&lt;/code&gt; will use the version specified in the &lt;code&gt;.nvmrc&lt;/code&gt; file if no version is supplied on the command line.&lt;/p&gt; 
&lt;p&gt;For example, to make nvm default to the latest 5.9 release, the latest LTS version, or the latest node version for the current directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ echo &quot;5.9&quot; &amp;gt; .nvmrc

$ echo &quot;lts/*&quot; &amp;gt; .nvmrc # to default to the latest LTS version

$ echo &quot;node&quot; &amp;gt; .nvmrc # to default to the latest version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[NB these examples assume a POSIX-compliant shell version of &lt;code&gt;echo&lt;/code&gt;. If you use a Windows &lt;code&gt;cmd&lt;/code&gt; development environment, eg the &lt;code&gt;.nvmrc&lt;/code&gt; file is used to configure a remote Linux deployment, then keep in mind the &lt;code&gt;&quot;&lt;/code&gt;s will be copied leading to an invalid file. Remove them.]&lt;/p&gt; 
&lt;p&gt;Then when you run nvm use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm use
Found &#39;/path/to/project/.nvmrc&#39; with version &amp;lt;5.9&amp;gt;
Now using node v5.9.1 (npm v3.7.3)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running nvm install will also switch over to the correct version, but if the correct node version isn&#39;t already installed, it will install it for you.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm install
Found &#39;/path/to/project/.nvmrc&#39; with version &amp;lt;5.9&amp;gt;
Downloading and installing node v5.9.1...
Downloading https://nodejs.org/dist/v5.9.1/node-v5.9.1-linux-x64.tar.xz...
#################################################################################### 100.0%
Computing checksum with sha256sum
Checksums matched!
Now using node v5.9.1 (npm v3.7.3)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;nvm use&lt;/code&gt; et. al. will traverse directory structure upwards from the current directory looking for the &lt;code&gt;.nvmrc&lt;/code&gt; file. In other words, running &lt;code&gt;nvm use&lt;/code&gt; et. al. in any subdirectory of a directory with an &lt;code&gt;.nvmrc&lt;/code&gt; will result in that &lt;code&gt;.nvmrc&lt;/code&gt; being utilized.&lt;/p&gt; 
&lt;p&gt;The contents of a &lt;code&gt;.nvmrc&lt;/code&gt; file &lt;strong&gt;must&lt;/strong&gt; contain precisely one &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; (as described by &lt;code&gt;nvm --help&lt;/code&gt;) followed by a newline. &lt;code&gt;.nvmrc&lt;/code&gt; files may also have comments. The comment delimiter is &lt;code&gt;#&lt;/code&gt;, and it and any text after it, as well as blank lines, and leading and trailing white space, will be ignored when parsing.&lt;/p&gt; 
&lt;p&gt;Key/value pairs using &lt;code&gt;=&lt;/code&gt; are also allowed and ignored, but are reserved for future use, and may cause validation errors in the future.&lt;/p&gt; 
&lt;p&gt;Run &lt;a href=&quot;https://npmjs.com/nvmrc&quot;&gt;&lt;code&gt;npx nvmrc&lt;/code&gt;&lt;/a&gt; to validate an &lt;code&gt;.nvmrc&lt;/code&gt; file. If that tool’s results do not agree with nvm, one or the other has a bug - please file an issue.&lt;/p&gt; 
&lt;h3&gt;Deeper Shell Integration&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://github.com/iamogbz/nvshim&quot;&gt;&lt;code&gt;nvshim&lt;/code&gt;&lt;/a&gt; to shim the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;npm&lt;/code&gt;, and &lt;code&gt;npx&lt;/code&gt; bins to automatically use the &lt;code&gt;nvm&lt;/code&gt; config in the current directory. &lt;code&gt;nvshim&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; supported by the &lt;code&gt;nvm&lt;/code&gt; maintainers. Please &lt;a href=&quot;https://github.com/iamogbz/nvshim/issues/new&quot;&gt;report issues to the &lt;code&gt;nvshim&lt;/code&gt; team&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you prefer a lighter-weight solution, the recipes below have been contributed by &lt;code&gt;nvm&lt;/code&gt; users. They are &lt;strong&gt;not&lt;/strong&gt; supported by the &lt;code&gt;nvm&lt;/code&gt; maintainers. We are, however, accepting pull requests for more examples.&lt;/p&gt; 
&lt;h4&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/h4&gt; 
&lt;p&gt;In your profile (&lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt;), add the following to &lt;code&gt;nvm use&lt;/code&gt; whenever you enter a new directory:&lt;/p&gt; 
&lt;h5&gt;bash&lt;/h5&gt; 
&lt;p&gt;Put the following at the end of your &lt;code&gt;$HOME/.bashrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cdnvm() {
    command cd &quot;$@&quot; || return $?
    nvm_path=&quot;$(nvm_find_up .nvmrc | command tr -d &#39;\n&#39;)&quot;

    # If there are no .nvmrc file, use the default nvm version
    if [[ ! $nvm_path = *[^[:space:]]* ]]; then

        declare default_version
        default_version=&quot;$(nvm version default)&quot;

        # If there is no default version, set it to `node`
        # This will use the latest version on your machine
        if [ $default_version = &#39;N/A&#39; ]; then
            nvm alias default node
            default_version=$(nvm version default)
        fi

        # If the current version is not the default version, set it to use the default version
        if [ &quot;$(nvm current)&quot; != &quot;${default_version}&quot; ]; then
            nvm use default
        fi
    elif [[ -s &quot;${nvm_path}/.nvmrc&quot; &amp;amp;&amp;amp; -r &quot;${nvm_path}/.nvmrc&quot; ]]; then
        declare nvm_version
        nvm_version=$(&amp;lt;&quot;${nvm_path}&quot;/.nvmrc)

        declare locally_resolved_nvm_version
        # `nvm ls` will check all locally-available versions
        # If there are multiple matching versions, take the latest one
        # Remove the `-&amp;gt;` and `*` characters and spaces
        # `locally_resolved_nvm_version` will be `N/A` if no local versions are found
        locally_resolved_nvm_version=$(nvm ls --no-colors &quot;${nvm_version}&quot; | command tail -1 | command tr -d &#39;\-&amp;gt;*&#39; | command tr -d &#39;[:space:]&#39;)

        # If it is not already installed, install it
        # `nvm install` will implicitly use the newly-installed version
        if [ &quot;${locally_resolved_nvm_version}&quot; = &#39;N/A&#39; ]; then
            nvm install &quot;${nvm_version}&quot;;
        elif [ &quot;$(nvm current)&quot; != &quot;${locally_resolved_nvm_version}&quot; ]; then
            nvm use &quot;${nvm_version}&quot;;
        fi
    fi
}

alias cd=&#39;cdnvm&#39;
cdnvm &quot;$PWD&quot; || exit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This alias would search &#39;up&#39; from your current directory in order to detect a &lt;code&gt;.nvmrc&lt;/code&gt; file. If it finds it, it will switch to that version; if not, it will use the default version.&lt;/p&gt; 
&lt;h5&gt;zsh&lt;/h5&gt; 
&lt;p&gt;This shell function will install (if needed) and &lt;code&gt;nvm use&lt;/code&gt; the specified Node version when an &lt;code&gt;.nvmrc&lt;/code&gt; is found, and &lt;code&gt;nvm use default&lt;/code&gt; otherwise.&lt;/p&gt; 
&lt;p&gt;Put this into your &lt;code&gt;$HOME/.zshrc&lt;/code&gt; to call &lt;code&gt;nvm use&lt;/code&gt; automatically whenever you enter a directory that contains an &lt;code&gt;.nvmrc&lt;/code&gt; file with a string telling nvm which node to &lt;code&gt;use&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;# place this after nvm initialization!
autoload -U add-zsh-hook

load-nvmrc() {
  local nvmrc_path
  nvmrc_path=&quot;$(nvm_find_nvmrc)&quot;

  if [ -n &quot;$nvmrc_path&quot; ]; then
    local nvmrc_node_version
    nvmrc_node_version=$(nvm version &quot;$(cat &quot;${nvmrc_path}&quot;)&quot;)

    if [ &quot;$nvmrc_node_version&quot; = &quot;N/A&quot; ]; then
      nvm install
    elif [ &quot;$nvmrc_node_version&quot; != &quot;$(nvm version)&quot; ]; then
      nvm use
    fi
  elif [ -n &quot;$(PWD=$OLDPWD nvm_find_nvmrc)&quot; ] &amp;amp;&amp;amp; [ &quot;$(nvm version)&quot; != &quot;$(nvm version default)&quot; ]; then
    echo &quot;Reverting to nvm default version&quot;
    nvm use default
  fi
}

add-zsh-hook chpwd load-nvmrc
load-nvmrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After saving the file, run &lt;code&gt;source ~/.zshrc&lt;/code&gt; to reload the configuration with the latest changes made.&lt;/p&gt; 
&lt;h5&gt;fish&lt;/h5&gt; 
&lt;p&gt;This requires that you have &lt;a href=&quot;https://github.com/edc/bass&quot;&gt;bass&lt;/a&gt; installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-fish&quot;&gt;# ~/.config/fish/functions/nvm.fish
function nvm
  bass source ~/.nvm/nvm.sh --no-use &#39;;&#39; nvm $argv
end

# ~/.config/fish/functions/nvm_find_nvmrc.fish
function nvm_find_nvmrc
  bass source ~/.nvm/nvm.sh --no-use &#39;;&#39; nvm_find_nvmrc
end

# ~/.config/fish/functions/load_nvm.fish
function load_nvm --on-variable=&quot;PWD&quot;
  set -l default_node_version (nvm version default)
  set -l node_version (nvm version)
  set -l nvmrc_path (nvm_find_nvmrc)
  if test -n &quot;$nvmrc_path&quot;
    set -l nvmrc_node_version (nvm version (cat $nvmrc_path))
    if test &quot;$nvmrc_node_version&quot; = &quot;N/A&quot;
      nvm install (cat $nvmrc_path)
    else if test &quot;$nvmrc_node_version&quot; != &quot;$node_version&quot;
      nvm use $nvmrc_node_version
    end
  else if test &quot;$node_version&quot; != &quot;$default_node_version&quot;
    echo &quot;Reverting to default Node version&quot;
    nvm use default
  end
end

# ~/.config/fish/config.fish
# You must call it on initialization or listening to directory switching won&#39;t work
load_nvm &amp;gt; /dev/stderr
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running Tests&lt;/h2&gt; 
&lt;p&gt;Tests are written in &lt;a href=&quot;https://git.sdf.org/tlevine/urchin&quot;&gt;Urchin&lt;/a&gt;. Install Urchin (and other dependencies) like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are slow tests and fast tests. The slow tests do things like install node and check that the right versions are used. The fast tests fake this to test things like aliases and uninstalling. From the root of the nvm git repository, run the fast tests like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run test/fast
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the slow tests like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run test/slow
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run all of the tests like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Nota bene: Avoid running nvm while the tests are running.&lt;/p&gt; 
&lt;h2&gt;Environment variables&lt;/h2&gt; 
&lt;p&gt;nvm exposes the following environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;NVM_DIR&lt;/code&gt; - nvm&#39;s installation directory.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_BIN&lt;/code&gt; - where node, npm, and global packages for the active version of node are installed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_INC&lt;/code&gt; - node&#39;s include file directory (useful for building C/C++ addons for node).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_CD_FLAGS&lt;/code&gt; - used to maintain compatibility with zsh.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_RC_VERSION&lt;/code&gt; - version from .nvmrc file if being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Additionally, nvm modifies &lt;code&gt;PATH&lt;/code&gt;, and, if present, &lt;code&gt;MANPATH&lt;/code&gt; and &lt;code&gt;NODE_PATH&lt;/code&gt; when changing versions.&lt;/p&gt; 
&lt;h2&gt;Bash Completion&lt;/h2&gt; 
&lt;p&gt;To activate, you need to source &lt;code&gt;bash_completion&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;[[ -r $NVM_DIR/bash_completion ]] &amp;amp;&amp;amp; \. $NVM_DIR/bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Put the above sourcing line just below the sourcing line for nvm in your profile (&lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.bash_profile&lt;/code&gt;).&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;nvm:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;alias               deactivate          install             list-remote         reinstall-packages  uninstall           version
cache               exec                install-latest-npm  ls                  run                 unload              version-remote
current             help                list                ls-remote           unalias             use                 which
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;nvm alias:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm alias&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;default      iojs         lts/*        lts/argon    lts/boron    lts/carbon   lts/dubnium  lts/erbium   node         stable       unstable
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm alias my_alias&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;v10.22.0       v12.18.3      v14.8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;nvm use:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm use&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;my_alias        default        v10.22.0       v12.18.3      v14.8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;nvm uninstall:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm uninstall&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;my_alias        default        v10.22.0       v12.18.3      v14.8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Compatibility Issues&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; will encounter some issues if you have some non-default settings set. (see &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/606&quot;&gt;#606&lt;/a&gt;) The following are known to cause issues:&lt;/p&gt; 
&lt;p&gt;Inside &lt;code&gt;~/.npmrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;prefix=&#39;some/path&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Environment Variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$NPM_CONFIG_PREFIX
$PREFIX
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Shell settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;set -e
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installing nvm on Alpine Linux&lt;/h2&gt; 
&lt;p&gt;In order to provide the best performance (and other optimizations), nvm will download and install pre-compiled binaries for Node (and npm) when you run &lt;code&gt;nvm install X&lt;/code&gt;. The Node project compiles, tests and hosts/provides these pre-compiled binaries which are built for mainstream/traditional Linux distributions (such as Debian, Ubuntu, CentOS, RedHat et al).&lt;/p&gt; 
&lt;p&gt;Alpine Linux, unlike mainstream/traditional Linux distributions, is based on &lt;a href=&quot;https://www.busybox.net/&quot;&gt;BusyBox&lt;/a&gt;, a very compact (~5MB) Linux distribution. BusyBox (and thus Alpine Linux) uses a different C/C++ stack to most mainstream/traditional Linux distributions - &lt;a href=&quot;https://www.musl-libc.org/&quot;&gt;musl&lt;/a&gt;. This makes binary programs built for such mainstream/traditional incompatible with Alpine Linux, thus we cannot simply &lt;code&gt;nvm install X&lt;/code&gt; on Alpine Linux and expect the downloaded binary to run correctly - you&#39;ll likely see &quot;...does not exist&quot; errors if you try that.&lt;/p&gt; 
&lt;p&gt;There is a &lt;code&gt;-s&lt;/code&gt; flag for &lt;code&gt;nvm install&lt;/code&gt; which requests nvm download Node source and compile it locally.&lt;/p&gt; 
&lt;p&gt;If installing nvm on Alpine Linux &lt;em&gt;is&lt;/em&gt; still what you want or need to do, you should be able to achieve this by running the following from you Alpine Linux shell, depending on which version you are using:&lt;/p&gt; 
&lt;h3&gt;Alpine Linux 3.13+&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;apk add -U curl bash ca-certificates openssl ncurses coreutils python3 make gcc g++ libgcc linux-headers grep util-linux binutils findutils
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Alpine Linux 3.5 - 3.12&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;apk add -U curl bash ca-certificates openssl ncurses coreutils python2 make gcc g++ libgcc linux-headers grep util-linux binutils findutils
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: Alpine 3.5 can only install NodeJS versions up to v6.9.5, Alpine 3.6 can only install versions up to v6.10.3, Alpine 3.7 installs versions up to v8.9.3, Alpine 3.8 installs versions up to v8.14.0, Alpine 3.9 installs versions up to v10.19.0, Alpine 3.10 installs versions up to v10.24.1, Alpine 3.11 installs versions up to v12.22.6, Alpine 3.12 installs versions up to v12.22.12, Alpine 3.13 &amp;amp; 3.14 install versions up to v14.20.0, Alpine 3.15 &amp;amp; 3.16 install versions up to v16.16.0 (&lt;strong&gt;These are all versions on the main branch&lt;/strong&gt;). Alpine 3.5 - 3.12 required the package &lt;code&gt;python2&lt;/code&gt; to build NodeJS, as they are older versions to build. Alpine 3.13+ requires &lt;code&gt;python3&lt;/code&gt; to successfully build newer NodeJS versions, but you can use &lt;code&gt;python2&lt;/code&gt; with Alpine 3.13+ if you need to build versions of node supported in Alpine 3.5 - 3.15, you just need to specify what version of NodeJS you need to install in the package install script.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The Node project has some desire but no concrete plans (due to the overheads of building, testing and support) to offer Alpine-compatible binaries.&lt;/p&gt; 
&lt;p&gt;As a potential alternative, @mhart (a Node contributor) has some &lt;a href=&quot;https://github.com/mhart/alpine-node&quot;&gt;Docker images for Alpine Linux with Node and optionally, npm, pre-installed&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;removal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Uninstalling / Removal&lt;/h2&gt; 
&lt;h3&gt;Manual Uninstall&lt;/h3&gt; 
&lt;p&gt;To remove &lt;code&gt;nvm&lt;/code&gt; manually, execute the following:&lt;/p&gt; 
&lt;p&gt;First, use &lt;code&gt;nvm unload&lt;/code&gt; to remove the nvm command from your terminal session and delete the installation directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm_dir=&quot;${NVM_DIR:-~/.nvm}&quot;
$ nvm unload
$ rm -rf &quot;$nvm_dir&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Edit &lt;code&gt;~/.bashrc&lt;/code&gt; (or other shell resource config) and remove the lines below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm
[[ -r $NVM_DIR/bash_completion ]] &amp;amp;&amp;amp; \. $NVM_DIR/bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Docker For Development Environment&lt;/h2&gt; 
&lt;p&gt;To make the development and testing work easier, we have a Dockerfile for development usage, which is based on Ubuntu 18.04 base image, prepared with essential and useful tools for &lt;code&gt;nvm&lt;/code&gt; development, to build the docker image of the environment, run the docker command at the root of &lt;code&gt;nvm&lt;/code&gt; repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ docker build -t nvm-dev .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will package your current nvm repository with our pre-defined development environment into a docker image named &lt;code&gt;nvm-dev&lt;/code&gt;, once it&#39;s built with success, validate your image via &lt;code&gt;docker images&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ docker images

REPOSITORY         TAG                 IMAGE ID            CREATED             SIZE
nvm-dev            latest              9ca4c57a97d8        7 days ago          650 MB
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you got no error message, now you can easily involve in:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ docker run -h nvm-dev -it nvm-dev

nvm@nvm-dev:~/.nvm$
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that it&#39;ll take about 8 minutes to build the image and the image size would be about 650MB, so it&#39;s not suitable for production usage.&lt;/p&gt; 
&lt;p&gt;For more information and documentation about docker, please refer to its official website:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;https://www.docker.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/&quot;&gt;https://docs.docker.com/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Problems&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you try to install a node version and the installation fails, be sure to run &lt;code&gt;nvm cache clear&lt;/code&gt; to delete cached node downloads, or you might get an error like the following:&lt;/p&gt; &lt;p&gt;curl: (33) HTTP server doesn&#39;t seem to support byte ranges. Cannot resume.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Where&#39;s my &lt;code&gt;sudo node&lt;/code&gt;? Check out &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/43&quot;&gt;#43&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After the v0.8.6 release of node, nvm tries to install from binary packages. But in some systems, the official binary packages don&#39;t work due to incompatibility of shared libs. In such cases, use &lt;code&gt;-s&lt;/code&gt; option to force install from source:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install -s 0.8.6
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;If setting the &lt;code&gt;default&lt;/code&gt; alias does not establish the node version in new shells (i.e. &lt;code&gt;nvm current&lt;/code&gt; yields &lt;code&gt;system&lt;/code&gt;), ensure that the system&#39;s node &lt;code&gt;PATH&lt;/code&gt; is set before the &lt;code&gt;nvm.sh&lt;/code&gt; source line in your shell profile (see &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/658&quot;&gt;#658&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;macOS Troubleshooting&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;nvm node version not found in vim shell&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you set node version to a version other than your system node version &lt;code&gt;nvm use 6.2.1&lt;/code&gt; and open vim and run &lt;code&gt;:!node -v&lt;/code&gt; you should see &lt;code&gt;v6.2.1&lt;/code&gt; if you see your system version &lt;code&gt;v0.12.7&lt;/code&gt;. You need to run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo chmod ugo-x /usr/libexec/path_helper
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More on this issue in &lt;a href=&quot;https://github.com/dotphiles/dotzsh#mac-os-x&quot;&gt;dotphiles/dotzsh&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;nvm is not compatible with the npm config &quot;prefix&quot; option&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Some solutions for this issue can be found &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/1245&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;There is one more edge case causing this issue, and that&#39;s a &lt;strong&gt;mismatch between the &lt;code&gt;$HOME&lt;/code&gt; path and the user&#39;s home directory&#39;s actual name&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;You have to make sure that the user directory name in &lt;code&gt;$HOME&lt;/code&gt; and the user directory name you&#39;d see from running &lt;code&gt;ls /Users/&lt;/code&gt; &lt;strong&gt;are capitalized the same way&lt;/strong&gt; (&lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/2261&quot;&gt;See this issue&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;To change the user directory and/or account name follow the instructions &lt;a href=&quot;https://support.apple.com/en-us/HT201548&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Homebrew makes zsh directories unsecure&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;zsh compinit: insecure directories, run compaudit for list.
Ignore insecure directories and continue [y] or abort compinit [n]? y
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Homebrew causes insecure directories like &lt;code&gt;/usr/local/share/zsh/site-functions&lt;/code&gt; and &lt;code&gt;/usr/local/share/zsh&lt;/code&gt;. This is &lt;strong&gt;not&lt;/strong&gt; an &lt;code&gt;nvm&lt;/code&gt; problem - it is a homebrew problem. Refer &lt;a href=&quot;https://github.com/zsh-users/zsh-completions/issues/680&quot;&gt;here&lt;/a&gt; for some solutions related to the issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Macs with Apple Silicon chips&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Experimental support for the Apple Silicon chip architecture was added in node.js v15.3 and full support was added in v16.0. Because of this, if you try to install older versions of node as usual, you will probably experience either compilation errors when installing node or out-of-memory errors while running your code.&lt;/p&gt; 
&lt;p&gt;So, if you want to run a version prior to v16.0 on an Apple Silicon Mac, it may be best to compile node targeting the &lt;code&gt;x86_64&lt;/code&gt; Intel architecture so that Rosetta 2 can translate the &lt;code&gt;x86_64&lt;/code&gt; processor instructions to ARM-based Apple Silicon instructions. Here&#39;s what you will need to do:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Install Rosetta, if you haven&#39;t already done so&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ softwareupdate --install-rosetta
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You might wonder, &quot;how will my Apple Silicon Mac know to use Rosetta for a version of node compiled for an Intel chip?&quot;. If an executable contains only Intel instructions, macOS will automatically use Rosetta to translate the instructions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open a shell that&#39;s running using Rosetta&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ arch -x86_64 zsh
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: This same thing can also be accomplished by finding the Terminal or iTerm App in Finder, right clicking, selecting &quot;Get Info&quot;, and then checking the box labeled &quot;Open using Rosetta&quot;.&lt;/p&gt; &lt;p&gt;Note: This terminal session is now running in &lt;code&gt;zsh&lt;/code&gt;. If &lt;code&gt;zsh&lt;/code&gt; is not the shell you typically use, &lt;code&gt;nvm&lt;/code&gt; may not be &lt;code&gt;source&lt;/code&gt;&#39;d automatically like it probably is for your usual shell through your dotfiles. If that&#39;s the case, make sure to source &lt;code&gt;nvm&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ source &quot;${NVM_DIR}/nvm.sh&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install whatever older version of node you are interested in. Let&#39;s use 12.22.1 as an example. This will fetch the node source code and compile it, which will take several minutes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm install v12.22.1 --shared-zlib
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: You&#39;re probably curious why &lt;code&gt;--shared-zlib&lt;/code&gt; is included. There&#39;s a bug in recent versions of Apple&#39;s system &lt;code&gt;clang&lt;/code&gt; compiler. If one of these broken versions is installed on your system, the above step will likely still succeed even if you didn&#39;t include the &lt;code&gt;--shared-zlib&lt;/code&gt; flag. However, later, when you attempt to &lt;code&gt;npm install&lt;/code&gt; something using your old version of node.js, you will see &lt;code&gt;incorrect data check&lt;/code&gt; errors. If you want to avoid the possible hassle of dealing with this, include that flag. For more details, see &lt;a href=&quot;https://github.com/nodejs/node/issues/39313&quot;&gt;this issue&lt;/a&gt; and &lt;a href=&quot;https://github.com/nodejs/node/issues/39313#issuecomment-90.40.276&quot;&gt;this comment&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Exit back to your native shell.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ exit
$ arch
arm64
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: If you selected the box labeled &quot;Open using Rosetta&quot; rather than running the CLI command in the second step, you will see &lt;code&gt;i386&lt;/code&gt; here. Unless you have another reason to have that box selected, you can deselect it now.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Check to make sure the architecture is correct. &lt;code&gt;x64&lt;/code&gt; is the abbreviation for &lt;code&gt;x86_64&lt;/code&gt;, which is what you want to see.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ node -p process.arch
x64
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Now you should be able to use node as usual.&lt;/p&gt; 
&lt;h2&gt;WSL Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you&#39;ve encountered this error on WSL-2:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                Dload  Upload  Total   Spent    Left  Speed
0     0    0     0    0     0      0      0 --:--:--  0:00:09 --:--:--     0curl: (6) Could not resolve host: raw.githubusercontent.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It may be due to your antivirus, VPN, or other reasons.&lt;/p&gt; 
&lt;p&gt;Where you can &lt;code&gt;ping 8.8.8.8&lt;/code&gt; while you can&#39;t &lt;code&gt;ping google.com&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This could simply be solved by running this in your root directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo rm /etc/resolv.conf
sudo bash -c &#39;echo &quot;nameserver 8.8.8.8&quot; &amp;gt; /etc/resolv.conf&#39;
sudo bash -c &#39;echo &quot;[network]&quot; &amp;gt; /etc/wsl.conf&#39;
sudo bash -c &#39;echo &quot;generateResolvConf = false&quot; &amp;gt;&amp;gt; /etc/wsl.conf&#39;
sudo chattr +i /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This deletes your &lt;code&gt;resolv.conf&lt;/code&gt; file that is automatically generated when you run WSL, creates a new file and puts &lt;code&gt;nameserver 8.8.8.8&lt;/code&gt;, then creates a &lt;code&gt;wsl.conf&lt;/code&gt; file and adds &lt;code&gt;[network]&lt;/code&gt; and &lt;code&gt;generateResolveConf = false&lt;/code&gt; to prevent auto-generation of that file.&lt;/p&gt; 
&lt;p&gt;You can check the contents of the file by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cat /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;Currently, the sole maintainer is &lt;a href=&quot;https://github.com/ljharb&quot;&gt;@ljharb&lt;/a&gt; - more maintainers are quite welcome, and we hope to add folks to the team over time. &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/GOVERNANCE.md&quot;&gt;Governance&lt;/a&gt; will be re-evaluated as the project evolves.&lt;/p&gt; 
&lt;h2&gt;Project Support&lt;/h2&gt; 
&lt;p&gt;Only the latest version (v0.40.2 at this time) is supported.&lt;/p&gt; 
&lt;h2&gt;Enterprise Support&lt;/h2&gt; 
&lt;p&gt;If you are unable to update to the latest version of &lt;code&gt;nvm&lt;/code&gt;, our &lt;a href=&quot;https://openjsf.org/ecosystem-sustainability-program&quot;&gt;partners&lt;/a&gt; provide commercial security fixes for all unsupported versions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.herodevs.com/support?utm_source=OpenJS&amp;amp;utm_medium=Link&amp;amp;utm_campaign=nvm_openjs&quot;&gt;HeroDevs Never-Ending Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/LICENSE.md&quot;&gt;LICENSE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Copyright notice&lt;/h2&gt; 
&lt;p&gt;Copyright &lt;a href=&quot;https://openjsf.org&quot;&gt;OpenJS Foundation&lt;/a&gt; and &lt;code&gt;nvm&lt;/code&gt; contributors. All rights reserved. The &lt;a href=&quot;https://openjsf.org&quot;&gt;OpenJS Foundation&lt;/a&gt; has registered trademarks and uses trademarks. For a list of trademarks of the &lt;a href=&quot;https://openjsf.org&quot;&gt;OpenJS Foundation&lt;/a&gt;, please see our &lt;a href=&quot;https://trademark-policy.openjsf.org/&quot;&gt;Trademark Policy&lt;/a&gt; and &lt;a href=&quot;https://trademark-list.openjsf.org/&quot;&gt;Trademark List&lt;/a&gt;. Trademarks and logos not indicated on the &lt;a href=&quot;https://trademark-list.openjsf.org&quot;&gt;list of OpenJS Foundation trademarks&lt;/a&gt; are trademarks™ or registered® trademarks of their respective holders. Use of them does not imply any affiliation with or endorsement by them. &lt;a href=&quot;https://openjsf.org/&quot;&gt;The OpenJS Foundation&lt;/a&gt; | &lt;a href=&quot;https://terms-of-use.openjsf.org/&quot;&gt;Terms of Use&lt;/a&gt; | &lt;a href=&quot;https://privacy-policy.openjsf.org/&quot;&gt;Privacy Policy&lt;/a&gt; | &lt;a href=&quot;https://bylaws.openjsf.org/&quot;&gt;Bylaws&lt;/a&gt; | &lt;a href=&quot;https://code-of-conduct.openjsf.org&quot;&gt;Code of Conduct&lt;/a&gt; | &lt;a href=&quot;https://trademark-policy.openjsf.org/&quot;&gt;Trademark Policy&lt;/a&gt; | &lt;a href=&quot;https://trademark-list.openjsf.org/&quot;&gt;Trademark List&lt;/a&gt; | &lt;a href=&quot;https://www.linuxfoundation.org/cookies/&quot;&gt;Cookie Policy&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bin456789/reinstall</title>
      <link>https://github.com/bin456789/reinstall</link>
      <description>&lt;p&gt;一键DD/重装脚本 (One-click reinstall OS on VPS)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;reinstall&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.codacy.com/gh/bin456789/reinstall/dashboard&quot;&gt;&lt;img src=&quot;https://img.shields.io/codacy/grade/dc679a17751448628fe6d8ac35e26eed?logo=Codacy&amp;amp;label=Codacy&amp;amp;style=flat-square&quot; alt=&quot;Codacy&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codefactor.io/repository/github/bin456789/reinstall&quot;&gt;&lt;img src=&quot;https://img.shields.io/codefactor/grade/github/bin456789/reinstall?logo=CodeFactor&amp;amp;logoColor=white&amp;amp;label=CodeFactor&amp;amp;style=flat-square&quot; alt=&quot;CodeFactor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/XAMPPRocky/tokei&quot;&gt;&lt;img src=&quot;https://tokei.rs/b1/github/bin456789/reinstall?category=code&amp;amp;label=Lines%20of%20Code&amp;amp;style=flat-square&quot; alt=&quot;Lines of Code&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/reinstall_os&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Telegram-2CA5E0?style=flat-square&amp;amp;logo=telegram&amp;amp;logoColor=white&quot; alt=&quot;Telegram Group&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sponsors/bin456789&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/sponsor-30363D?style=flat-square&amp;amp;logo=GitHub-Sponsors&amp;amp;logoColor=#EA4AAA&quot; alt=&quot;Github Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;一键重装脚本 &lt;a href=&quot;https://raw.githubusercontent.com/bin456789/reinstall/main/README.en.md&quot;&gt;English&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/bin456789&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bin456789/sponsors/refs/heads/master/sponsors.svg?sanitize=true&quot; alt=&quot;Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;亮点&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;一键安装 Linux，支持 19 种常见发行版&lt;/li&gt; 
 &lt;li&gt;一键安装 Windows，使用官方 ISO 安装而非自制镜像，&lt;del&gt;脚本会自动获取 ISO 链接&lt;/del&gt;、自动安装 Virtio 等常见驱动&lt;/li&gt; 
 &lt;li&gt;支持任意方向重装，即 &lt;code&gt;Linux to Linux&lt;/code&gt;、&lt;code&gt;Linux to Windows&lt;/code&gt;、&lt;code&gt;Windows to Windows&lt;/code&gt;、&lt;code&gt;Windows to Linux&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;无需填写 IP 参数，自动识别动静态，支持 &lt;code&gt;/32&lt;/code&gt;、&lt;code&gt;/128&lt;/code&gt;、&lt;code&gt;网关不在子网范围内&lt;/code&gt;、&lt;code&gt;纯 IPv6&lt;/code&gt;、&lt;code&gt;双网卡&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;专门适配低配小鸡，比官方 netboot 需要更少的内存&lt;/li&gt; 
 &lt;li&gt;全程用分区表 ID 识别硬盘，确保不会写错硬盘&lt;/li&gt; 
 &lt;li&gt;支持 BIOS、EFI 引导，支持 ARM 服务器&lt;/li&gt; 
 &lt;li&gt;不含自制包，所有资源均实时从镜像源获得&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;系统要求&lt;/h2&gt; 
&lt;p&gt;原系统可以是表格中的任意系统&lt;/p&gt; 
&lt;p&gt;目标系统的配置要求如下：&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;系统&lt;/th&gt; 
   &lt;th&gt;版本&lt;/th&gt; 
   &lt;th&gt;内存&lt;/th&gt; 
   &lt;th&gt;硬盘&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://www.alpinelinux.org/alpine-logo.ico&quot;&gt; Alpine&lt;/td&gt; 
   &lt;td&gt;3.18, 3.19, 3.20, 3.21&lt;/td&gt; 
   &lt;td&gt;256 MB&lt;/td&gt; 
   &lt;td&gt;1 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://www.debian.org/favicon.ico&quot;&gt; Debian&lt;/td&gt; 
   &lt;td&gt;9, 10, 11, 12&lt;/td&gt; 
   &lt;td&gt;256 MB&lt;/td&gt; 
   &lt;td&gt;1 ~ 1.5 GB ^&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://github.com/bin456789/reinstall/assets/7548515/f74b3d5b-085f-4df3-bcc9-8a9bd80bb16d&quot;&gt; Kali&lt;/td&gt; 
   &lt;td&gt;滚动&lt;/td&gt; 
   &lt;td&gt;256 MB&lt;/td&gt; 
   &lt;td&gt;1 ~ 1.5 GB ^&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://canonical-subiquity.readthedocs-hosted.com/en/latest/_static/favicon.png&quot;&gt; Ubuntu&lt;/td&gt; 
   &lt;td&gt;16.04 LTS - 24.04 LTS, 24.10&lt;/td&gt; 
   &lt;td&gt;512 MB *&lt;/td&gt; 
   &lt;td&gt;2 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://img.alicdn.com/imgextra/i1/O1CN01oJnJZg1yK4RzI4Rx2_!!6000000006559-2-tps-118-118.png&quot;&gt; Anolis&lt;/td&gt; 
   &lt;td&gt;7, 8, 23&lt;/td&gt; 
   &lt;td&gt;512 MB *&lt;/td&gt; 
   &lt;td&gt;5 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://www.redhat.com/favicon.ico&quot;&gt; RHEL &amp;nbsp;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://almalinux.org/fav/favicon.ico&quot;&gt; AlmaLinux &amp;nbsp;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://rockylinux.org/favicon.png&quot;&gt; Rocky &amp;nbsp;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://www.oracle.com/asset/web/favicons/favicon-32.png&quot;&gt; Oracle&lt;/td&gt; 
   &lt;td&gt;8, 9&lt;/td&gt; 
   &lt;td&gt;512 MB *&lt;/td&gt; 
   &lt;td&gt;5 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://opencloudos.org/qq.ico&quot;&gt; OpenCloudOS&lt;/td&gt; 
   &lt;td&gt;8, 9, Stream 23&lt;/td&gt; 
   &lt;td&gt;512 MB *&lt;/td&gt; 
   &lt;td&gt;5 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://www.centos.org/assets/icons/favicon.svg?sanitize=true&quot;&gt; CentOS&lt;/td&gt; 
   &lt;td&gt;9, 10&lt;/td&gt; 
   &lt;td&gt;512 MB *&lt;/td&gt; 
   &lt;td&gt;5 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://fedoraproject.org/favicon.ico&quot;&gt; Fedora&lt;/td&gt; 
   &lt;td&gt;40, 41&lt;/td&gt; 
   &lt;td&gt;512 MB *&lt;/td&gt; 
   &lt;td&gt;5 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://www.openeuler.org/favicon.ico&quot;&gt; openEuler&lt;/td&gt; 
   &lt;td&gt;20.03 LTS - 24.03 LTS, 24.09&lt;/td&gt; 
   &lt;td&gt;512 MB *&lt;/td&gt; 
   &lt;td&gt;5 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://static.opensuse.org/favicon.ico&quot;&gt; openSUSE&lt;/td&gt; 
   &lt;td&gt;15.6, Tumbleweed (滚动)&lt;/td&gt; 
   &lt;td&gt;512 MB *&lt;/td&gt; 
   &lt;td&gt;5 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://github.com/user-attachments/assets/99a542b6-6482-4086-addf-f192c06fef73&quot;&gt; NixOS&lt;/td&gt; 
   &lt;td&gt;24.11&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
   &lt;td&gt;5 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://archlinux.org/static/favicon.png&quot;&gt; Arch&lt;/td&gt; 
   &lt;td&gt;滚动&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
   &lt;td&gt;5 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://www.gentoo.org/assets/img/logo/gentoo-g.png&quot;&gt; Gentoo&lt;/td&gt; 
   &lt;td&gt;滚动&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
   &lt;td&gt;5 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://aosc.io/assets/distros/aosc-os.svg?sanitize=true&quot;&gt; 安同 OS&lt;/td&gt; 
   &lt;td&gt;滚动&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
   &lt;td&gt;5 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://www.fnnas.com/favicon.ico&quot;&gt; 飞牛 fnOS&lt;/td&gt; 
   &lt;td&gt;公测&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
   &lt;td&gt;8 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://blogs.windows.com/wp-content/uploads/prod/2022/09/cropped-Windows11IconTransparent512-32x32.png&quot;&gt; Windows (DD)&lt;/td&gt; 
   &lt;td&gt;任何&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
   &lt;td&gt;取决于镜像&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://blogs.windows.com/wp-content/uploads/prod/2022/09/cropped-Windows11IconTransparent512-32x32.png&quot;&gt; Windows (ISO)&lt;/td&gt; 
   &lt;td&gt;Vista, 7, 8.x (Server 2008 - 2012 R2)&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
   &lt;td&gt;25 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://blogs.windows.com/wp-content/uploads/prod/2022/09/cropped-Windows11IconTransparent512-32x32.png&quot;&gt; Windows (ISO)&lt;/td&gt; 
   &lt;td&gt;10, 11 (Server 2016 - 2025)&lt;/td&gt; 
   &lt;td&gt;1 GB&lt;/td&gt; 
   &lt;td&gt;25 GB&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;* 表示使用云镜像安装，非传统网络安装&lt;/p&gt; 
&lt;p&gt;^ 表示需要 256 MB 内存 + 1.5 GB 硬盘，或 512 MB 内存 + 1 GB 硬盘&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] ❌ 本脚本不支持 OpenVZ、LXC 虚拟机&lt;/p&gt; 
 &lt;p&gt;请改用 &lt;a href=&quot;https://github.com/LloydAsp/OsMutation&quot;&gt;https://github.com/LloydAsp/OsMutation&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;下载（当前系统是 &lt;img width=&quot;20&quot; height=&quot;20&quot; src=&quot;https://www.kernel.org/theme/images/logos/favicon.png&quot;&gt; Linux）&lt;/h2&gt; 
&lt;p&gt;国外服务器：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -O https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.sh || wget -O reinstall.sh $_
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;国内服务器：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -O https://gitlab.com/bin456789/reinstall/-/raw/main/reinstall.sh || wget -O reinstall.sh $_
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;下载（当前系统是 &lt;img width=&quot;20&quot; height=&quot;20&quot; src=&quot;https://blogs.windows.com/wp-content/uploads/prod/2022/09/cropped-Windows11IconTransparent512-32x32.png&quot;&gt; Windows）&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] 请先关闭 &lt;code&gt;Windows Defender&lt;/code&gt; 的 &lt;code&gt;实时保护&lt;/code&gt; 功能。该功能会阻止 &lt;code&gt;certutil&lt;/code&gt; 下载任何文件。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;解决 Windows 7 下无法下载脚本&lt;/summary&gt; 
 &lt;p&gt;由于不支持 TLS 1.2、SHA-256、根证书没有更新等原因，Vista，7 和 Server 2008 (R2) 可能无法自动下载脚本，因此需要手动下载，具体操作如下：&lt;/p&gt; 
 &lt;p&gt;用 IE 下载 (先在 IE 高级设置里启用 TLS 1.2)，或者通过远程桌面，将这两个文件保存到同一个目录&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.bat&quot;&gt;https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.bat&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.cygwin.com/setup-x86.exe&quot;&gt;https://www.cygwin.com/setup-x86.exe&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;使用时运行下载的 &lt;code&gt;reinstall.bat&lt;/code&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;国外服务器：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-batch&quot;&gt;certutil -urlcache -f -split https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;国内服务器：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-batch&quot;&gt;certutil -urlcache -f -split https://gitlab.com/bin456789/reinstall/-/raw/main/reinstall.bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;使用&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;所有功能&lt;/strong&gt; 都可在 Linux / Windows 下运行&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux 下运行 &lt;code&gt;bash reinstall.sh ...&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Windows 下先运行 &lt;code&gt;cmd&lt;/code&gt;，再运行 &lt;code&gt;reinstall.bat ...&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;如果参数中的链接包含特殊字符，要用 &lt;code&gt;&quot;&quot;&lt;/code&gt; 将链接包起来，不能用 &lt;code&gt;&#39;&#39;&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;功能 1: 安装 &lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://www.kernel.org/theme/images/logos/favicon.png&quot;&gt; Linux&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户名 &lt;code&gt;root&lt;/code&gt; 默认密码 &lt;code&gt;123@@@&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;安装最新版可不输入版本号&lt;/li&gt; 
 &lt;li&gt;最大化利用磁盘空间：不含 boot 分区（Fedora 例外），不含 swap 分区&lt;/li&gt; 
 &lt;li&gt;自动根据机器类型选择不同的优化内核，例如 &lt;code&gt;Cloud&lt;/code&gt;、&lt;code&gt;HWE&lt;/code&gt; 内核&lt;/li&gt; 
 &lt;li&gt;安装 Red Hat 时需填写 &lt;a href=&quot;https://access.redhat.com/downloads/content/rhel&quot;&gt;https://access.redhat.com/downloads/content/rhel&lt;/a&gt; 得到的 &lt;code&gt;qcow2&lt;/code&gt; 镜像链接，也可以安装其它类 RHEL 系统，例如 &lt;code&gt;Alibaba Cloud Linux&lt;/code&gt; 和 &lt;code&gt;TencentOS Server&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;重装后如需修改 SSH 端口或者改成密钥登录，注意还要修改 &lt;code&gt;/etc/ssh/sshd_config.d/&lt;/code&gt; 里面的文件&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash reinstall.sh anolis      7|8|23
                  opencloudos 8|9|23
                  rocky       8|9
                  redhat      8|9   --img=&quot;http://xxx.com/xxx.qcow2&quot;
                  oracle      8|9
                  almalinux   8|9
                  centos      9|10
                  fedora      40|41
                  nixos       24.11
                  debian      9|10|11|12
                  opensuse    15.6|tumbleweed
                  alpine      3.18|3.19|3.20|3.21
                  openeuler   20.03|22.03|24.03|24.09
                  ubuntu      16.04|18.04|20.04|22.04|24.04|24.10 [--minimal]
                  kali
                  arch
                  gentoo
                  aosc
                  fnos
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;可选参数&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--password PASSWORD&lt;/code&gt; 设置密码&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ssh-key KEY&lt;/code&gt; 设置 SSH 登录公钥，支持以下格式。当使用公钥时，密码为空 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key &quot;ssh-rsa ...&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key &quot;ssh-ed25519 ...&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key &quot;ecdsa-sha2-nistp256/384/521 ...&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key http://path/to/public_key&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key github:your_username&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key gitlab:your_username&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key /path/to/public_key&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key C:\path\to\public_key&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ssh-port PORT&lt;/code&gt; 修改 SSH 端口（安装期间观察日志用，也作用于新系统）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--web-port PORT&lt;/code&gt; 修改 Web 端口（安装期间观察日志用）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--hold 2&lt;/code&gt; 安装结束后不重启，此时可以 SSH 登录修改系统内容，系统挂载在 &lt;code&gt;/os&lt;/code&gt; (此功能不支持 Debian/Kali)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] 安装 Debian/Kali 时，x86 可通过后台 VNC 查看安装进度，ARM 可通过串行控制台查看安装进度。&lt;/p&gt; 
 &lt;p&gt;安装其它系统时，可通过多种方式（SSH、HTTP 80 端口、后台 VNC、串行控制台）查看安装进度。 &lt;br&gt;即使安装过程出错，也能通过 SSH 运行 &lt;code&gt;/trans.sh alpine&lt;/code&gt; 安装到 Alpine。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;实验性功能&lt;/summary&gt; 
 &lt;p&gt;云镜像安装 Debian&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;适合于 CPU 较慢的机器&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash reinstall.sh debian --ci
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;ISO 安装 CentOS, AlmaLinux, Rocky, Fedora&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;仅支持内存大于 2G 且为动态 IP 的机器&lt;/li&gt; 
  &lt;li&gt;密码 &lt;code&gt;123@@@&lt;/code&gt;，SSH 端口 &lt;code&gt;22&lt;/code&gt;，不支持用参数修改&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash reinstall.sh centos --installer
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;ISO 安装 Ubuntu&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;仅支持内存大于 1G 且为动态 IP 的机器&lt;/li&gt; 
  &lt;li&gt;密码 &lt;code&gt;123@@@&lt;/code&gt;，SSH 端口 &lt;code&gt;22&lt;/code&gt;，不支持用参数修改&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash reinstall.sh ubuntu --installer
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;功能 2: DD&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持 &lt;code&gt;raw&lt;/code&gt; &lt;code&gt;vhd&lt;/code&gt; 格式的镜像（未压缩，或者压缩成 &lt;code&gt;.gz&lt;/code&gt; &lt;code&gt;.xz&lt;/code&gt; &lt;code&gt;.zst&lt;/code&gt; &lt;code&gt;.tar&lt;/code&gt; &lt;code&gt;.tar.gz&lt;/code&gt; &lt;code&gt;.tar.xz&lt;/code&gt; &lt;code&gt;.tar.zst&lt;/code&gt;）&lt;/li&gt; 
 &lt;li&gt;DD Windows 镜像时，会自动扩展系统盘，静态 IP 的机器会配置好 IP，可能首次开机几分钟后才生效&lt;/li&gt; 
 &lt;li&gt;DD Linux 镜像时，&lt;strong&gt;不会&lt;/strong&gt;修改镜像的任何内容&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash reinstall.sh dd --img &quot;https://example.com/xxx.xz&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;可选参数&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--allow-ping&lt;/code&gt; 允许被 Ping (仅限 DD Windows)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--rdp-port PORT&lt;/code&gt; 修改 RDP 端口 (仅限 DD Windows)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ssh-port PORT&lt;/code&gt; 修改 SSH 端口（安装期间观察日志用）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--web-port PORT&lt;/code&gt; 修改 Web 端口（安装期间观察日志用）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--hold 2&lt;/code&gt; DD 结束后不重启，此时可以 SSH 登录修改系统内容，Windows 系统会挂载在 &lt;code&gt;/os&lt;/code&gt;，Linux 系统&lt;strong&gt;不会&lt;/strong&gt;自动挂载&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] 可通过多种方式（SSH、HTTP 80 端口、后台 VNC、串行控制台）查看安装进度。 &lt;br&gt;即使安装过程出错，也能通过 SSH 运行 &lt;code&gt;/trans.sh alpine&lt;/code&gt; 安装到 Alpine。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;功能 3: 重启到 &lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://www.alpinelinux.org/alpine-logo.ico&quot;&gt; Alpine Live OS（内存系统）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;可用 ssh 连接，进行备份/恢复硬盘、手动 DD、修改分区、手动安装 Alpine/Arch/Gentoo 等操作&lt;/li&gt; 
 &lt;li&gt;用户名 &lt;code&gt;root&lt;/code&gt; 默认密码 &lt;code&gt;123@@@&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;如果手动操作没有破坏原系统，再次重启将回到原系统&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash reinstall.sh alpine --hold=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;可选参数&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--password PASSWORD&lt;/code&gt; 设置密码&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ssh-port PORT&lt;/code&gt; 修改 SSH 端口&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ssh-key KEY&lt;/code&gt; 设置 SSH 登录公钥，支持以下格式。当使用公钥时，密码为空 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key &quot;ssh-rsa ...&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key &quot;ssh-ed25519 ...&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key &quot;ecdsa-sha2-nistp256/384/521 ...&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key http://path/to/public_key&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key github:your_username&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key gitlab:your_username&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key /path/to/public_key&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--ssh-key C:\path\to\public_key&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;功能 4: 重启到 &lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://netboot.xyz/img/favicon.ico&quot;&gt; netboot.xyz&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;可使用商家后台 VNC 手动安装 &lt;a href=&quot;https://github.com/netbootxyz/netboot.xyz?tab=readme-ov-file#what-operating-systems-are-currently-available-on-netbootxyz&quot;&gt;更多系统&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;如果手动操作没有破坏原系统，再次重启将回到原系统&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash reinstall.sh netboot.xyz
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://netboot.xyz/images/netboot.xyz.gif&quot; alt=&quot;netboot.xyz&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;功能 5: 安装 &lt;img width=&quot;16&quot; height=&quot;16&quot; src=&quot;https://blogs.windows.com/wp-content/uploads/prod/2022/09/cropped-Windows11IconTransparent512-32x32.png&quot;&gt; Windows ISO&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/bin456789/reinstall/assets/7548515/07c1aea2-1ce3-4967-904f-aaf9d6eec3f7&quot; alt=&quot;Windows 安装界面&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户名 &lt;code&gt;administrator&lt;/code&gt; 默认密码 &lt;code&gt;123@@@&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;如果远程登录失败，可以尝试使用用户名 &lt;code&gt;.\administrator&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;静态机器会自动配置好 IP，可能首次开机几分钟后才生效&lt;/li&gt; 
 &lt;li&gt;支持所有语言&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;支持的系统&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows (Vista ~ 11)&lt;/li&gt; 
 &lt;li&gt;Windows Server (2008 ~ 2025) 
  &lt;ul&gt; 
   &lt;li&gt;Windows Server Essentials *&lt;/li&gt; 
   &lt;li&gt;Windows Server (Semi) Annual Channel *&lt;/li&gt; 
   &lt;li&gt;Hyper-V Server *&lt;/li&gt; 
   &lt;li&gt;Azure Stack HCI *&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;del&gt;方法 1: 让脚本自动查找 ISO&lt;/del&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] 目前该 ISO 仓库禁止了直链下载，因此该方法已失效&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;脚本会从 &lt;a href=&quot;https://massgrave.dev/genuine-installation-media&quot;&gt;https://massgrave.dev/genuine-installation-media&lt;/a&gt; 查找 ISO，该网站专门提供官方 ISO 下载&lt;/li&gt; 
 &lt;li&gt;上面带 * 的系统不支持自动查找 ISO&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash reinstall.sh windows \
     --image-name &quot;Windows 11 Enterprise LTSC 2024&quot; \
     --lang zh-cn
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;支持的语言&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;ar-sa
bg-bg
cs-cz
da-dk
de-de
el-gr
en-gb
en-us
es-es
es-mx
et-ee
fi-fi
fr-ca
fr-fr
he-il
hr-hr
hu-hu
it-it
ja-jp
ko-kr
lt-lt
lv-lv
nb-no
nl-nl
pl-pl
pt-pt
pt-br
ro-ro
ru-ru
sk-sk
sl-si
sr-latn-rs
sv-se
th-th
tr-tr
uk-ua
zh-cn
zh-hk
zh-tw
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h4&gt;方法 2: 自行指定 ISO 连接&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;如果不知道 &lt;code&gt;--image-name&lt;/code&gt;，可以随便填，在重启后连接 SSH，根据错误提示重新输入正确的值&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash reinstall.sh windows \
     --image-name &quot;Windows 11 Enterprise LTSC 2024&quot; \
     --iso &quot;https://go.microsoft.com/fwlink/?linkid=2289029&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;或者磁力链接&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash reinstall.sh windows \
     --image-name &quot;Windows 11 Enterprise LTSC 2024&quot; \
     --iso &quot;magnet:?xt=urn:btih:7352bd2db48c3381dffa783763dc75aa4a6f1cff&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;以下网站可找到 ISO 链接&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;正式版 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://msdl.gravesoft.dev&quot;&gt;https://msdl.gravesoft.dev&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://massgrave.dev/genuine-installation-media&quot;&gt;https://massgrave.dev/genuine-installation-media&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://next.itellyou.cn&quot;&gt;https://next.itellyou.cn&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.xitongku.com&quot;&gt;https://www.xitongku.com&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/software-download/windows10&quot;&gt;https://www.microsoft.com/software-download/windows10&lt;/a&gt; (需用非 Windows User-Agent 打开)&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/software-download/windows11&quot;&gt;https://www.microsoft.com/software-download/windows11&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/software-download/windows11arm64&quot;&gt;https://www.microsoft.com/software-download/windows11arm64&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;评估版 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/evalcenter/download-windows-10-enterprise&quot;&gt;https://www.microsoft.com/evalcenter/download-windows-10-enterprise&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/evalcenter/download-windows-11-enterprise&quot;&gt;https://www.microsoft.com/evalcenter/download-windows-11-enterprise&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/evalcenter/download-windows-11-iot-enterprise-ltsc-eval&quot;&gt;https://www.microsoft.com/evalcenter/download-windows-11-iot-enterprise-ltsc-eval&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/evalcenter/download-windows-server-2012-r2&quot;&gt;https://www.microsoft.com/evalcenter/download-windows-server-2012-r2&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/evalcenter/download-windows-server-2016&quot;&gt;https://www.microsoft.com/evalcenter/download-windows-server-2016&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/evalcenter/download-windows-server-2019&quot;&gt;https://www.microsoft.com/evalcenter/download-windows-server-2019&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/evalcenter/download-windows-server-2022&quot;&gt;https://www.microsoft.com/evalcenter/download-windows-server-2022&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/evalcenter/download-windows-server-2025&quot;&gt;https://www.microsoft.com/evalcenter/download-windows-server-2025&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Insider 预览版 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewiso&quot;&gt;https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewiso&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewserver&quot;&gt;https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewserver&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h4&gt;可选参数&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--password PASSWORD&lt;/code&gt; 设置密码&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--allow-ping&lt;/code&gt; 设置 Windows 防火墙允许被 Ping&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--rdp-port PORT&lt;/code&gt; 更改 RDP 端口&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ssh-port PORT&lt;/code&gt; 修改 SSH 端口（安装期间观察日志用）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--web-port PORT&lt;/code&gt; 修改 Web 端口（安装期间观察日志用）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--add-driver INF_OR_DIR&lt;/code&gt; 添加额外驱动，填写 .inf 路径，或者 .inf 所在的文件夹 
  &lt;ul&gt; 
   &lt;li&gt;需先下载驱动到本地&lt;/li&gt; 
   &lt;li&gt;可多次设置该参数以添加不同的驱动&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--hold 2&lt;/code&gt; 在进入 Windows 官方安装程序之前，可以 SSH 登录修改硬盘内容，硬盘挂载在 &lt;code&gt;/os&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;以下驱动会自动按需下载安装，无需手动添加&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Virtio (&lt;a href=&quot;https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/&quot;&gt;Virtio&lt;/a&gt;，&lt;a href=&quot;https://www.alibabacloud.com/help/ecs/user-guide/install-the-virtio-driver-1&quot;&gt;阿里云&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;XEN (&lt;a href=&quot;https://xenproject.org/resources/downloads/&quot;&gt;&lt;del&gt;XEN&lt;/del&gt;&lt;/a&gt; (未签名), &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Upgrading_PV_drivers.html#win2008-citrix-upgrade&quot;&gt;Citrix&lt;/a&gt;, &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/xen-drivers-overview.html&quot;&gt;AWS&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;AWS (&lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ena-driver-releases-windows.html&quot;&gt;ENA 网卡&lt;/a&gt;, &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nvme-driver-version-history.html&quot;&gt;NVME 存储控制器&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;GCP (&lt;a href=&quot;https://cloud.google.com/compute/docs/networking/using-gvnic&quot;&gt;gVNIC 网卡&lt;/a&gt;, &lt;a href=&quot;https://cloud.google.com/compute/docs/instances/enable-instance-virtual-display&quot;&gt;GGA 显卡&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Azure (&lt;a href=&quot;https://learn.microsoft.com/azure/virtual-network/accelerated-networking-mana-windows&quot;&gt;MANA 网卡&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Intel (&lt;a href=&quot;https://www.intel.com/content/www/us/en/download/720755/intel-rapid-storage-technology-driver-installation-software-with-intel-optane-memory-11th-up-to-13th-gen-platforms.html&quot;&gt;VMD 存储控制器&lt;/a&gt;, 网卡: &lt;a href=&quot;https://www.intel.com/content/www/us/en/download/15590/29323/intel-network-adapter-driver-for-windows-7-final-release.html&quot;&gt;7&lt;/a&gt;, &lt;a href=&quot;https://www.intel.com/content/www/us/en/download/16765/intel-network-adapter-driver-for-windows-8-final-release.html&quot;&gt;8&lt;/a&gt;, &lt;a href=&quot;https://www.intel.com/content/www/us/en/download/17479/intel-network-adapter-driver-for-windows-8-1.html&quot;&gt;8.1&lt;/a&gt;, &lt;a href=&quot;https://www.intel.com/content/www/us/en/download/18293/intel-network-adapter-driver-for-windows-10.html&quot;&gt;10&lt;/a&gt;, &lt;a href=&quot;https://www.intel.com/content/www/us/en/download/727998/intel-network-adapter-driver-for-microsoft-windows-11.html&quot;&gt;11&lt;/a&gt;, &lt;a href=&quot;https://www.intel.com/content/www/us/en/download/15590/29323/intel-network-adapter-driver-for-windows-7-final-release.html&quot;&gt;2008 R2&lt;/a&gt;, &lt;a href=&quot;https://www.intel.com/content/www/us/en/download/16789/intel-network-adapter-driver-for-windows-server-2012.html&quot;&gt;2012&lt;/a&gt;, &lt;a href=&quot;https://www.intel.com/content/www/us/en/download/17480/intel-network-adapter-driver-for-windows-server-2012-r2.html&quot;&gt;2012 R2&lt;/a&gt;, &lt;a href=&quot;https://www.intel.com/content/www/us/en/download/18737/intel-network-adapter-driver-for-windows-server-2016.html&quot;&gt;2016&lt;/a&gt;, &lt;a href=&quot;https://www.intel.com/content/www/us/en/download/19372/intel-network-adapter-driver-for-windows-server-2019.html&quot;&gt;2019&lt;/a&gt;, &lt;a href=&quot;https://www.intel.com/content/www/us/en/download/706171/intel-network-adapter-driver-for-windows-server-2022.html&quot;&gt;2022&lt;/a&gt;, &lt;a href=&quot;https://www.intel.com/content/www/us/en/download/838943/intel-network-adapter-driver-for-windows-server-2025.html&quot;&gt;2025&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;如何填写映像名称 &lt;code&gt;--image-name&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;通常一个 ISO 会包含多个系统版本，例如家庭版、专业版。映像名称 &lt;code&gt;--image-name&lt;/code&gt; 就是用来指定要安装的版本，填写时不区分大小写&lt;/p&gt; 
&lt;p&gt;可以用 DISM、DISM++、Wimlib 等工具查询 ISO 包含的映像名称&lt;/p&gt; 
&lt;p&gt;常用的映像名称有：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Windows 7 Ultimate
Windows 11 Pro
Windows 11 Enterprise LTSC 2024
Windows Server 2025 SERVERDATACENTER
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;如何用 &lt;a href=&quot;https://github.com/Chuyu-Team/Dism-Multi-language/releases&quot;&gt;DISM++&lt;/a&gt; 查询 ISO 包含的映像名称&lt;/h4&gt; 
&lt;p&gt;打开文件菜单 &amp;gt; 打开映像文件，选择要安装的 iso，即可得到映像名称，所有映像名称都可以安装&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/bin456789/reinstall/assets/7548515/5aae0a9b-61e2-4f66-bb98-d470a6beaac2&quot; alt=&quot;image-name&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Vista (Server 2008) 和 32 位系统可能会缺少驱动&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] 未开启 CSM 的 EFI 机器，无法安装 Windows 7 (Server 2008 R2)&lt;/p&gt; 
 &lt;p&gt;Hyper-V (Azure) 需选择合适的虚拟机代系 &lt;a href=&quot;https://learn.microsoft.com/windows-server/virtualization/hyper-v/plan/should-i-create-a-generation-1-or-2-virtual-machine-in-hyper-v&quot;&gt;https://learn.microsoft.com/windows-server/virtualization/hyper-v/plan/should-i-create-a-generation-1-or-2-virtual-machine-in-hyper-v&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Windows 10 LTSC 2021 中文版镜像 &lt;code&gt;zh-cn_windows_10_enterprise_ltsc_2021_x64_dvd_033b7312.iso&lt;/code&gt; 的 &lt;code&gt;wsappx&lt;/code&gt; 进程会长期占用 CPU&lt;/p&gt; 
 &lt;p&gt;解决方法是更新系统补丁，或者手动安装 &lt;code&gt;VCLibs&lt;/code&gt; 库 &lt;a href=&quot;https://www.google.com/search?q=ltsc+wsappx&quot;&gt;https://www.google.com/search?q=ltsc+wsappx&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;ARM 安装 Windows 的注意事项&lt;/h4&gt; 
&lt;p&gt;大部分 ARM 机器都支持安装 Windows 11 24H2&lt;/p&gt; 
&lt;p&gt;安装过程可能会黑屏，串行控制台可能会显示 &lt;code&gt;ConvertPages: failed to find range&lt;/code&gt;，均不影响正常安装&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;兼容性&lt;/th&gt; 
   &lt;th&gt;云服务商&lt;/th&gt; 
   &lt;th&gt;实例类型&lt;/th&gt; 
   &lt;th&gt;问题&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;Azure&lt;/td&gt; 
   &lt;td&gt;B2pts_v2&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;阿里云&lt;/td&gt; 
   &lt;td&gt;g6r, c6r&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;阿里云&lt;/td&gt; 
   &lt;td&gt;g8y, c8y, r8y&lt;/td&gt; 
   &lt;td&gt;有几率重启时卡开机 Logo，强制重启即可&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;AWS&lt;/td&gt; 
   &lt;td&gt;T4g&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;Scaleway&lt;/td&gt; 
   &lt;td&gt;COPARM1&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;Gcore&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;❔&lt;/td&gt; 
   &lt;td&gt;甲骨文云&lt;/td&gt; 
   &lt;td&gt;A1.Flex&lt;/td&gt; 
   &lt;td&gt;不一定能安装成功，越新创建的实例越容易成功&lt;br&gt;安装后还需要手动加载显卡驱动&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;谷歌云&lt;/td&gt; 
   &lt;td&gt;t2a&lt;/td&gt; 
   &lt;td&gt;缺少网卡驱动&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;甲骨文云加载显卡驱动&lt;/summary&gt; 
 &lt;p&gt;使用远程桌面登录到服务器，打开设备管理器，找到显卡，选择更新驱动，在列表中选择 &lt;code&gt;Red Hat VirtIO GPU DOD controller&lt;/code&gt; 即可。不需要提前下载驱动。&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/503e1d82-4fa9-4486-917e-73326ad7c988&quot; alt=&quot;virtio-gpu-1&quot;&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/bf3a9af6-13d8-4f93-9d6c-d3b2dbddb37d&quot; alt=&quot;virtio-gpu-2&quot;&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/a9006a78-838f-45bf-a556-2dba193d3c03&quot; alt=&quot;virtio-gpu-3&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;讨论&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bin456789/reinstall/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;GitHub Issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/reinstall_os&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Telegram-2CA5E0?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white&quot; alt=&quot;Telegram Group&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;如何修改脚本自用&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork 本仓库&lt;/li&gt; 
 &lt;li&gt;修改 &lt;code&gt;reinstall.sh&lt;/code&gt; 和 &lt;code&gt;reinstall.bat&lt;/code&gt; 开头的 &lt;code&gt;confhome&lt;/code&gt; 和 &lt;code&gt;confhome_cn&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;修改其它代码&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;感谢&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/bin456789&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/sponsor-30363D?style=for-the-badge&amp;amp;logo=GitHub-Sponsors&amp;amp;logoColor=#EA4AAA&quot; alt=&quot;Github Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;感谢以下商家提供白嫖机器&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oracle.com/cloud/&quot;&gt;&lt;img src=&quot;https://github.com/bin456789/reinstall/assets/7548515/8b430ed4-8344-4f96-b4da-c2bda031cc90&quot; alt=&quot;Oracle Cloud&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dartnode.com/&quot;&gt;&lt;img src=&quot;https://github.com/bin456789/reinstall/assets/7548515/435d6740-bcdd-4f3a-a196-2f60ae397f17&quot; alt=&quot;DartNode&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
