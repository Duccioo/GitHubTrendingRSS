[
  {
    "name": "e3ntity/nanograd",
    "url": "https://github.com/e3ntity/nanograd",
    "description": null,
    "stars": 44,
    "forks": 0,
    "language": "Rust",
    "topics": [],
    "license": "MIT License",
    "created_at": "2025-06-20T10:50:41Z",
    "updated_at": "2025-06-21T20:16:09Z",
    "owner": {
      "name": "e3ntity",
      "avatar_url": "https://avatars.githubusercontent.com/u/32388635?v=4"
    },
    "telegraph_url": null
  },
  {
    "name": "officialunofficial/trek",
    "url": "https://github.com/officialunofficial/trek",
    "description": "Trek is a web content extraction library built in Rust.",
    "stars": 32,
    "forks": 0,
    "language": "Rust",
    "topics": [],
    "license": "Other",
    "created_at": "2025-06-18T00:40:23Z",
    "updated_at": "2025-06-21T15:35:11Z",
    "owner": {
      "name": "officialunofficial",
      "avatar_url": "https://avatars.githubusercontent.com/u/127067914?v=4"
    },
    "telegraph_url": null
  },
  {
    "name": "kozmer/rspy",
    "url": "https://github.com/kozmer/rspy",
    "description": "rust port of pspy with support for process monitoring over dbus",
    "stars": 28,
    "forks": 4,
    "language": "Rust",
    "topics": [],
    "license": "No license",
    "created_at": "2025-06-16T13:12:08Z",
    "updated_at": "2025-06-19T14:59:09Z",
    "owner": {
      "name": "kozmer",
      "avatar_url": "https://avatars.githubusercontent.com/u/87979263?v=4"
    },
    "telegraph_url": null
  },
  {
    "name": "ruvnet/QuDAG",
    "url": "https://github.com/ruvnet/QuDAG",
    "description": "QuDAG Protocol (Quantum-Resistant DAG-Based Anonymous Communication System) - Claude Code implementation of a Test-Driven Development Implementation Plan for QuDAG Protocol with Claude Code",
    "stars": 27,
    "forks": 7,
    "language": "Rust",
    "topics": [],
    "license": "MIT License",
    "created_at": "2025-06-16T02:29:03Z",
    "updated_at": "2025-06-22T01:33:08Z",
    "owner": {
      "name": "ruvnet",
      "avatar_url": "https://avatars.githubusercontent.com/u/2934394?v=4"
    },
    "telegraph_url": null
  },
  {
    "name": "oxalica/palc",
    "url": "https://github.com/oxalica/palc",
    "description": "Prototype of a command line argument parser with several opposite design goals from clap.",
    "stars": 25,
    "forks": 0,
    "language": "Rust",
    "topics": [],
    "license": "Apache License 2.0",
    "created_at": "2025-06-17T11:23:13Z",
    "updated_at": "2025-06-20T08:02:26Z",
    "owner": {
      "name": "oxalica",
      "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4"
    },
    "telegraph_url": null
  },
  {
    "name": "gabrielfalcao/sexprs",
    "url": "https://github.com/gabrielfalcao/sexprs",
    "description": "a minimal lisp dialect REPL written entirely in rust",
    "stars": 19,
    "forks": 1,
    "language": "Rust",
    "topics": [],
    "license": "No license",
    "created_at": "2025-06-16T22:53:53Z",
    "updated_at": "2025-06-21T22:59:55Z",
    "owner": {
      "name": "gabrielfalcao",
      "avatar_url": "https://avatars.githubusercontent.com/u/54914?v=4"
    },
    "telegraph_url": null
  },
  {
    "name": "KOBA789/human-in-the-loop",
    "url": "https://github.com/KOBA789/human-in-the-loop",
    "description": "An MCP (Model Context Protocol) server that allows AI assistants to ask questions to humans via Discord.",
    "stars": 17,
    "forks": 1,
    "language": "Rust",
    "topics": [],
    "license": "No license",
    "created_at": "2025-06-21T02:24:19Z",
    "updated_at": "2025-06-22T02:53:57Z",
    "owner": {
      "name": "KOBA789",
      "avatar_url": "https://avatars.githubusercontent.com/u/239637?v=4"
    },
    "telegraph_url": null
  },
  {
    "name": "stjepangolemac/hammurabi",
    "url": "https://github.com/stjepangolemac/hammurabi",
    "description": "A Rust recreation of the classic 1968 BASIC game Hammurabi with a modern TUI",
    "stars": 15,
    "forks": 0,
    "language": "Rust",
    "topics": [],
    "license": "MIT License",
    "created_at": "2025-06-16T11:30:59Z",
    "updated_at": "2025-06-20T11:42:05Z",
    "owner": {
      "name": "stjepangolemac",
      "avatar_url": "https://avatars.githubusercontent.com/u/15632814?v=4"
    },
    "telegraph_url": null
  },
  {
    "name": "disney/disney-kinesis-client-rust",
    "url": "https://github.com/disney/disney-kinesis-client-rust",
    "description": "Disney's Kinesis Client Library (for AWS Kinesis) in Rust.",
    "stars": 13,
    "forks": 3,
    "language": "Rust",
    "topics": [],
    "license": "Other",
    "created_at": "2025-06-18T15:49:34Z",
    "updated_at": "2025-06-20T23:37:18Z",
    "owner": {
      "name": "disney",
      "avatar_url": "https://avatars.githubusercontent.com/u/622654?v=4"
    },
    "telegraph_url": null
  },
  {
    "name": "simonask/facet-v8",
    "url": "https://github.com/simonask/facet-v8",
    "description": "Experimental Facet/V8 integration, marshalling/unmarshalling data between JavaScript and Rust",
    "stars": 13,
    "forks": 0,
    "language": "Rust",
    "topics": [],
    "license": "No license",
    "created_at": "2025-06-21T07:03:37Z",
    "updated_at": "2025-06-22T00:26:29Z",
    "owner": {
      "name": "simonask",
      "avatar_url": "https://avatars.githubusercontent.com/u/23115?v=4"
    },
    "telegraph_url": null
  },
  {
    "name": "conikeec/mcp-probe",
    "url": "https://github.com/conikeec/mcp-probe",
    "description": "A Model Context Protocol (MCP) client library and debugging toolkit in Rust. This foundation provides both a production-ready SDK for building MCP integrations and the core architecture for an interactive debugger.",
    "stars": 12,
    "forks": 2,
    "language": "Rust",
    "topics": [],
    "license": "MIT License",
    "created_at": "2025-06-20T00:35:31Z",
    "updated_at": "2025-06-22T02:57:47Z",
    "owner": {
      "name": "conikeec",
      "avatar_url": "https://avatars.githubusercontent.com/u/81499?v=4"
    },
    "telegraph_url": null
  },
  {
    "name": "deechtejoao/pcsv",
    "url": "https://github.com/deechtejoao/pcsv",
    "description": "A fast, ncurses-free CLI utility that prints CSV/TSV files as colored, width-aware tables.",
    "stars": 10,
    "forks": 1,
    "language": "Rust",
    "topics": [],
    "license": "No license",
    "created_at": "2025-06-20T21:29:17Z",
    "updated_at": "2025-06-22T02:13:18Z",
    "owner": {
      "name": "deechtejoao",
      "avatar_url": "https://avatars.githubusercontent.com/u/192987271?v=4"
    },
    "telegraph_url": null
  }
]