<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub C# Monthly Trending</title>
    <description>Monthly Trending of C# in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 01:57:48 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>kgrzybek/modular-monolith-with-ddd</title>
      <link>https://github.com/kgrzybek/modular-monolith-with-ddd</link>
      <description>&lt;p&gt;Full Modular Monolith application with Domain-Driven Design approach.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Modular Monolith with DDD&lt;/h1&gt; 
&lt;p&gt;Full Modular Monolith .NET application with Domain-Driven Design approach.&lt;/p&gt; 
&lt;h2&gt;Announcement&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/glory_to_ukraine.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Learn, use and benefit from this project only if:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You &lt;strong&gt;condemn Russia and its military aggression against Ukraine&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;recognize that Russia is an occupant that unlawfully invaded a sovereign state&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;support Ukraine&#39;s territorial integrity, including its claims over temporarily occupied territories of Crimea and Donbas&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;reject false narratives perpetuated by Russian state propaganda&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Otherwise, leave this project immediately and educate yourself.&lt;/p&gt; 
&lt;p&gt;Putin, idi nachuj.&lt;/p&gt; 
&lt;h2&gt;CI&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kgrzybek/modular-monolith-with-ddd/workflows/Build%20Pipeline/badge.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;FrontEnd application&lt;/h2&gt; 
&lt;p&gt;FrontEnd application : &lt;a href=&quot;https://github.com/kgrzybek/modular-monolith-with-ddd-fe-react&quot;&gt;Modular Monolith With DDD: FrontEnd React application&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#1-introduction&quot;&gt;1. Introduction&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#11-purpose-of-this-repository&quot;&gt;1.1 Purpose of this Repository&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#12-out-of-scope&quot;&gt;1.2 Out of Scope&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#13-reason&quot;&gt;1.3 Reason&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#14-disclaimer&quot;&gt;1.4 Disclaimer&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#15-give-a-star&quot;&gt;1.5 Give a Star&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#16-share-it&quot;&gt;1.6 Share It&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#2-domain&quot;&gt;2. Domain&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#21-description&quot;&gt;2.1 Description&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#22-conceptual-model&quot;&gt;2.2 Conceptual Model&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#23-event-storming&quot;&gt;2.3 Event Storming&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#3-architecture&quot;&gt;3. Architecture&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#30-c4-model&quot;&gt;3.0 C4 Model&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#31-high-level-view&quot;&gt;3.1 High Level View&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#32-module-level-view&quot;&gt;3.2 Module Level View&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#33-api-and-module-communication&quot;&gt;3.3 API and Module Communication&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#34-module-requests-processing-via-cqrs&quot;&gt;3.4 Module Requests Processing via CQRS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#35-domain-model-principles-and-attributes&quot;&gt;3.5 Domain Model Principles and Attributes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#36-cross-cutting-concerns&quot;&gt;3.6 Cross-Cutting Concerns&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#37-modules-integration&quot;&gt;3.7 Modules Integration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#38-internal-processing&quot;&gt;3.8 Internal Processing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#39-security&quot;&gt;3.9 Security&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#310-unit-tests&quot;&gt;3.10 Unit Tests&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#311-architecture-decision-log&quot;&gt;3.11 Architecture Decision Log&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#312-architecture-unit-tests&quot;&gt;3.12 Architecture Unit Tests&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#313-integration-tests&quot;&gt;3.13 Integration Tests&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#314-system-integration-testing&quot;&gt;3.14 System Integration Testing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#315-event-sourcing&quot;&gt;3.15 Event Sourcing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#316-database-change-management&quot;&gt;3.16 Database change management&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#317-continuous-integration&quot;&gt;3.17 Continuous Integration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#318-static-code-analysis&quot;&gt;3.18 Static code analysis&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#319-system-under-test-sut&quot;&gt;3.19 System Under Test SUT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#320-mutation-testing&quot;&gt;3.20 Mutation Testing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#4-technology&quot;&gt;4. Technology&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#5-how-to-run&quot;&gt;5. How to Run&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#6-contribution&quot;&gt;6. Contribution&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#7-roadmap&quot;&gt;7. Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#8-authors&quot;&gt;8. Authors&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#9-license&quot;&gt;9. License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#10-inspirations-and-recommendations&quot;&gt;10. Inspirations and Recommendations&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;1. Introduction&lt;/h2&gt; 
&lt;h3&gt;1.1 Purpose of this Repository&lt;/h3&gt; 
&lt;p&gt;This is a list of the main goals of this repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing how you can implement a &lt;strong&gt;monolith&lt;/strong&gt; application in a &lt;strong&gt;modular&lt;/strong&gt; way&lt;/li&gt; 
 &lt;li&gt;Presentation of the &lt;strong&gt;full implementation&lt;/strong&gt; of an application 
  &lt;ul&gt; 
   &lt;li&gt;This is not another simple application&lt;/li&gt; 
   &lt;li&gt;This is not another proof of concept (PoC)&lt;/li&gt; 
   &lt;li&gt;The goal is to present the implementation of an application that would be ready to run in production&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Showing the application of &lt;strong&gt;best practices&lt;/strong&gt; and &lt;strong&gt;object-oriented programming principles&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of the use of &lt;strong&gt;design patterns&lt;/strong&gt;. When, how and why they can be used&lt;/li&gt; 
 &lt;li&gt;Presentation of some &lt;strong&gt;architectural&lt;/strong&gt; considerations, decisions, approaches&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation using &lt;strong&gt;Domain-Driven Design&lt;/strong&gt; approach (&lt;strong&gt;tactical&lt;/strong&gt; patterns)&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation of &lt;strong&gt;Unit Tests&lt;/strong&gt; for Domain Model (Testable Design in mind)&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation of &lt;strong&gt;Integration Tests&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation of &lt;strong&gt;Event Sourcing&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of &lt;strong&gt;C4 Model&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of &lt;strong&gt;diagram as text&lt;/strong&gt; approach&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1.2 Out of Scope&lt;/h3&gt; 
&lt;p&gt;This is a list of subjects which are out of scope for this repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Business requirements gathering and analysis&lt;/li&gt; 
 &lt;li&gt;System analysis&lt;/li&gt; 
 &lt;li&gt;Domain exploration&lt;/li&gt; 
 &lt;li&gt;Domain distillation&lt;/li&gt; 
 &lt;li&gt;Domain-Driven Design &lt;strong&gt;strategic&lt;/strong&gt; patterns&lt;/li&gt; 
 &lt;li&gt;Architecture evaluation, quality attributes analysis&lt;/li&gt; 
 &lt;li&gt;Integration, system tests&lt;/li&gt; 
 &lt;li&gt;Project management&lt;/li&gt; 
 &lt;li&gt;Infrastructure&lt;/li&gt; 
 &lt;li&gt;Containerization&lt;/li&gt; 
 &lt;li&gt;Software engineering process&lt;/li&gt; 
 &lt;li&gt;Deployment process&lt;/li&gt; 
 &lt;li&gt;Maintenance&lt;/li&gt; 
 &lt;li&gt;Documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1.3 Reason&lt;/h3&gt; 
&lt;p&gt;The reason for creating this repository is the lack of something similar. Most sample applications on GitHub have at least one of the following issues:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Very, very simple - few entities and use cases implemented&lt;/li&gt; 
 &lt;li&gt;Not finished (for example there is no authentication, logging, etc..)&lt;/li&gt; 
 &lt;li&gt;Poorly designed (in my opinion)&lt;/li&gt; 
 &lt;li&gt;Poorly implemented (in my opinion)&lt;/li&gt; 
 &lt;li&gt;Not well described&lt;/li&gt; 
 &lt;li&gt;Assumptions and decisions are not clearly explained&lt;/li&gt; 
 &lt;li&gt;Implements &quot;Orders&quot; domain - yes, everyone knows this domain, but something different is needed&lt;/li&gt; 
 &lt;li&gt;Implemented in old technology&lt;/li&gt; 
 &lt;li&gt;Not maintained&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To sum up, there are some very good examples, but there are far too few of them. This repository has the task of filling this gap at some level.&lt;/p&gt; 
&lt;h3&gt;1.4 Disclaimer&lt;/h3&gt; 
&lt;p&gt;Software architecture should always be created to resolve specific &lt;strong&gt;business problems&lt;/strong&gt;. Software architecture always supports some quality attributes and at the same time does not support others. A lot of other factors influence your software architecture - your team, opinions, preferences, experiences, technical constraints, time, budget, etc.&lt;/p&gt; 
&lt;p&gt;Always functional requirements, quality attributes, technical constraints and other factors should be considered before an architectural decision is made.&lt;/p&gt; 
&lt;p&gt;Because of the above, the architecture and implementation presented in this repository is &lt;strong&gt;one of the many ways&lt;/strong&gt; to solve some problems. Take from this repository as much as you want, use it as you like but remember to &lt;strong&gt;always pick the best solution which is appropriate to the problem class you have&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;1.5 Give a Star&lt;/h3&gt; 
&lt;p&gt;My primary focus in this project is on quality. Creating a good quality product involves a lot of analysis, research and work. It takes a lot of time. If you like this project, learned something or you are using it in your applications, please give it a star &lt;span&gt;⭐&lt;/span&gt;. This is the best motivation for me to continue this work. Thanks!&lt;/p&gt; 
&lt;h3&gt;1.6 Share It&lt;/h3&gt; 
&lt;p&gt;There are very few really good examples of this type of application. If you think this repository makes a difference and is worth it, please share it with your friends and on social networks. I will be extremely grateful.&lt;/p&gt; 
&lt;h2&gt;2. Domain&lt;/h2&gt; 
&lt;h3&gt;2.1 Description&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Domain - A sphere of knowledge, influence, or activity. The subject area to which the user applies a program is the domain of the software. &lt;a href=&quot;http://domainlanguage.com/ddd/reference/&quot;&gt;Domain-Driven Design Reference&lt;/a&gt;, Eric Evans&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The &lt;strong&gt;Meeting Groups&lt;/strong&gt; domain was selected for the purposes of this project based on the &lt;a href=&quot;https://www.meetup.com/&quot;&gt;Meetup.com&lt;/a&gt; system.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Main reasons for selecting this domain:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It is common, a lot of people use the Meetup site to organize or attend meetings&lt;/li&gt; 
 &lt;li&gt;There is a system for it, so everyone can check this implementation against a working site which supports this domain&lt;/li&gt; 
 &lt;li&gt;It is not complex so it is easy to understand&lt;/li&gt; 
 &lt;li&gt;It is not trivial - there are some business rules and logic and it is not just CRUD operations&lt;/li&gt; 
 &lt;li&gt;You don&#39;t need much specific domain knowledge unlike other domains like financing, banking, medical&lt;/li&gt; 
 &lt;li&gt;It is not big so it is easier to implement&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Meetings&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The main business entities are &lt;code&gt;Member&lt;/code&gt;, &lt;code&gt;Meeting Group&lt;/code&gt; and &lt;code&gt;Meeting&lt;/code&gt;. A &lt;code&gt;Member&lt;/code&gt; can create a &lt;code&gt;Meeting Group&lt;/code&gt;, be part of a &lt;code&gt;Meeting Group&lt;/code&gt; or can attend a &lt;code&gt;Meeting&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting Group Member&lt;/code&gt; can be an &lt;code&gt;Organizer&lt;/code&gt; of this group or a normal &lt;code&gt;Member&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Only an &lt;code&gt;Organizer&lt;/code&gt; of a &lt;code&gt;Meeting Group&lt;/code&gt; can create a new &lt;code&gt;Meeting&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting&lt;/code&gt; has attendees, not attendees (&lt;code&gt;Members&lt;/code&gt; which declare they will not attend the &lt;code&gt;Meeting&lt;/code&gt;) and &lt;code&gt;Members&lt;/code&gt; on the &lt;code&gt;Waitlist&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting&lt;/code&gt; can have an attendee limit. If the limit is reached, &lt;code&gt;Members&lt;/code&gt; can only sign up to the &lt;code&gt;Waitlist&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting Attendee&lt;/code&gt; can bring guests to the &lt;code&gt;Meeting&lt;/code&gt;. The number of guests allowed is an attribute of the &lt;code&gt;Meeting&lt;/code&gt;. Bringing guests can be unallowed.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting Attendee&lt;/code&gt; can have one of two roles: &lt;code&gt;Attendee&lt;/code&gt; or &lt;code&gt;Host&lt;/code&gt;. A &lt;code&gt;Meeting&lt;/code&gt; must have at least one &lt;code&gt;Host&lt;/code&gt;. The &lt;code&gt;Host&lt;/code&gt; is a special role which grants permission to edit &lt;code&gt;Meeting&lt;/code&gt; information or change the attendees list.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Member&lt;/code&gt; can comment &lt;code&gt;Meetings&lt;/code&gt;. A &lt;code&gt;Member&lt;/code&gt; can reply to, like other &lt;code&gt;Comments&lt;/code&gt;. &lt;code&gt;Organizer&lt;/code&gt; manages commenting of &lt;code&gt;Meeting&lt;/code&gt; by &lt;code&gt;Meeting Commenting Configuration&lt;/code&gt;. &lt;code&gt;Organizer&lt;/code&gt; can delete any &lt;code&gt;Comment&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;Meeting Group&lt;/code&gt; must have an organizer with active &lt;code&gt;Subscription&lt;/code&gt;. One organizer can cover 3 &lt;code&gt;Meeting Groups&lt;/code&gt; by his &lt;code&gt;Subscription&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, Meeting organizer can set an &lt;code&gt;Event Fee&lt;/code&gt;. Each &lt;code&gt;Meeting Attendee&lt;/code&gt; is obliged to pay the fee. All guests should be paid by &lt;code&gt;Meeting Attendee&lt;/code&gt; too.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Administration&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;To create a new &lt;code&gt;Meeting Group&lt;/code&gt;, a &lt;code&gt;Member&lt;/code&gt; needs to propose the group. A &lt;code&gt;Meeting Group Proposal&lt;/code&gt; is sent to &lt;code&gt;Administrators&lt;/code&gt;. An &lt;code&gt;Administrator&lt;/code&gt; can accept or reject a &lt;code&gt;Meeting Group Proposal&lt;/code&gt;. If a &lt;code&gt;Meeting Group Proposal&lt;/code&gt; is accepted, a &lt;code&gt;Meeting Group&lt;/code&gt; is created.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Payments&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;Member&lt;/code&gt; who is the &lt;code&gt;Payer&lt;/code&gt; can buy the &lt;code&gt;Subscription&lt;/code&gt;. He needs to pay the &lt;code&gt;Subscription Payment&lt;/code&gt;. &lt;code&gt;Subscription&lt;/code&gt; can expire so &lt;code&gt;Subscription Renewal&lt;/code&gt; is required (by &lt;code&gt;Subscription Renewal Payment&lt;/code&gt; payment to keep &lt;code&gt;Subscription&lt;/code&gt; active).&lt;/p&gt; 
&lt;p&gt;When the &lt;code&gt;Meeting&lt;/code&gt; fee is required, the &lt;code&gt;Payer&lt;/code&gt; needs to pay &lt;code&gt;Meeting Fee&lt;/code&gt; (through &lt;code&gt;Meeting Fee Payment&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Users&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;Administrator&lt;/code&gt;, &lt;code&gt;Member&lt;/code&gt; and &lt;code&gt;Payer&lt;/code&gt; is a &lt;code&gt;User&lt;/code&gt;. To be a &lt;code&gt;User&lt;/code&gt;, &lt;code&gt;User Registration&lt;/code&gt; is required and confirmed.&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;User&lt;/code&gt; is assigned one or more &lt;code&gt;User Role&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;User Role&lt;/code&gt; has set of &lt;code&gt;Permissions&lt;/code&gt;. A &lt;code&gt;Permission&lt;/code&gt; defines whether &lt;code&gt;User&lt;/code&gt; can invoke a particular action.&lt;/p&gt; 
&lt;h3&gt;2.2 Conceptual Model&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Conceptual Model - A conceptual model is a representation of a system, made of the composition of concepts that are used to help people know, understand, or simulate a subject the model represents. &lt;a href=&quot;https://en.wikipedia.org/wiki/Conceptual_model&quot;&gt;Wikipedia - Conceptual model&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Conceptual Model&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;PlantUML version: &lt;img src=&quot;https://www.plantuml.com/plantuml/proxy?cache=no&amp;amp;src=https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/PlantUML/Conceptual_Model.puml&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;VisualParadigm version (not maintained, only for demonstration): &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Conceptual_Model.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Conceptual Model of commenting feature&lt;/strong&gt; &lt;img src=&quot;https://www.plantuml.com/plantuml/proxy?src=https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/PlantUML/Commenting_Conceptual_Model.puml&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;2.3 Event Storming&lt;/h3&gt; 
&lt;p&gt;While a Conceptual Model focuses on structures and relationships between them, &lt;strong&gt;behavior&lt;/strong&gt; and &lt;strong&gt;events&lt;/strong&gt; that occur in our domain are more important.&lt;/p&gt; 
&lt;p&gt;There are many ways to show behavior and events. One of them is a light technique called &lt;a href=&quot;https://www.eventstorming.com/&quot;&gt;Event Storming&lt;/a&gt; which is becoming more popular. Below are presented 3 main business processes using this technique: user registration, meeting group creation and meeting organization.&lt;/p&gt; 
&lt;p&gt;Note: Event Storming is a light, live workshop. One of the possible outputs of this workshop is presented here. Even if you are not doing Event Storming workshops, this type of process presentation can be very valuable to you and your stakeholders.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;User Registration process&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/User_Registration.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Meeting Group creation&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Meeting_Group_Creation.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Meeting organization&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Meeting_Organization.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Payments&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Payments_EventStorming_Design.jpg&quot; alt=&quot;&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Payments_EventStorming_Design_HighRes.jpg&quot;&gt;Download high resolution file&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;3. Architecture&lt;/h2&gt; 
&lt;h3&gt;3.0 C4 Model&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://c4model.com/&quot;&gt;C4 model&lt;/a&gt; is a lean graphical notation technique for modelling the architecture of software systems. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;As can be found on the website of the author of this model (&lt;a href=&quot;https://simonbrown.je/&quot;&gt;Simon Brown&lt;/a&gt;): &lt;em&gt;The C4 model was created as a way to help software development teams describe and communicate software architecture, both during up-front design sessions and when retrospectively documenting an existing codebase&lt;/em&gt; &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Model C4&lt;/em&gt; defines 4 levels (views) of the system architecture: &lt;em&gt;System Context&lt;/em&gt;, &lt;em&gt;Container&lt;/em&gt;, &lt;em&gt;Component&lt;/em&gt; and &lt;em&gt;Code&lt;/em&gt;. Below are examples of each of these levels that describe the architecture of this system. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: The &lt;a href=&quot;https://plantuml.com/&quot;&gt;PlantUML&lt;/a&gt; (diagram as text) component was used to describe all C4 model levels. Additionally, for levels C1-C3, a &lt;a href=&quot;https://github.com/plantuml-stdlib/C4-PlantUML&quot;&gt;C4-PlantUML&lt;/a&gt; plug-in connecting PlantUML with the C4 model was used&lt;/em&gt;.&lt;/p&gt; 
&lt;h4&gt;3.0.1 C1 System Context&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;http://www.plantuml.com/plantuml/png/7OrDgeD048JtxnGl1z0ca5LMGWuYutIZulIqz0_6d3vZDbLG5Dytc2VruF9tMsikWHHQ_XVttPu0cev-Nds9AOmqItMgtcTXs6Rzd1Djm89HadOiLKgxTiSLY0YSp4a19Hky7f3levrjuV77UNk_Nzg1AhR-0W00&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.2 C2 Container&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/C4/C2_Containers.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.3 C3 Component (high-level)&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/C4/C3_Components.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.4 C3 Component (module-level)&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;http://www.plantuml.com/plantuml/png/jLHFRzCm5B_dKsI1GojjBOKn5QH9wxeTAgrem7QUdEGrjHJRaVqCgX3V7QVUl7XkbnA2BusUVt_y_7xrXK8YKRCoEi8rC8Yhab0U7L6UbJg7U8rOgS_ZiIG_HmN5jKwr0fa9Zi1nb0asDWHU2vmep4kQZkUd9xTrwNvvCsP48KXJUfWBLWbUSwhQB9hbkIlTaMAGC02al539SVmsBUQY5F8yUNEQmRkpZyamn9ESKKuLIe9KS9y57zBfsNGN2twOBtMfNzYy_pIPJ4bTMmcEJzNLTXcPwFj68R27Iw5vJkHca4sEusIvYPUFXuuj81d6lwBOB0TacoV8hA8lEBFRXIFKovrqGBROUj_yZBvStvaz2PRWuFR3CtjKNefSbs2epifMd5lWwAWBlf94eTGPQjcK6Faxxc0tD9N6kxuw98KwVvxZiCLgLbKbpRRJQ_eqoZsON0b6gATlApr8BpX2OTDtlKrLqoNOx6vubJvtGv0qnveJ9BMmojR0oAkIlwCmB_vVoALcvfNRi-FB10dovGxEaQ-Q30yoRsOgS6vizcnhCnKwsdhFPc7k0jy0qlq8BeC-i4vYu1laiSN4fTBp-gf1my0zr4REzX3RLpjPy9W14yqc7DXA6raZ77s3qhwaUn-tUmM64W8RIV5HkvLw8Be4XHnVj3CXZCtV7P0WEOpXXk7WZL7uIMWTY0_VUxklg_u7aLstlzUcLt8unkvD42JjxFR1-gn_2L-tlY-0vvgLVm00&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.5 C4 Code (meeting group aggregate)&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;http://www.plantuml.com/plantuml/png/5OqxheD0303xTugN0x1kg58XvI3HObk0yAwHFqB9wGFDJ3FIJ1xL8flyFRQEaiHfyhz67Fu4i7gMPOirvtGsr1xSew0ss1VxVcRUeIcbL1kQTfKh7SuRH0IjUh01AJgyHi3nZLBTot7V9kvq-GS0&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;3.1 High Level View&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Architecture_high_level.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Module descriptions:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt; - Very thin ASP.NET MVC Core REST API application. Main responsibilities are: 
  &lt;ol&gt; 
   &lt;li&gt;Accept request&lt;/li&gt; 
   &lt;li&gt;Authenticate and authorize request (using User Access module)&lt;/li&gt; 
   &lt;li&gt;Delegate work to specific module sending Command or Query&lt;/li&gt; 
   &lt;li&gt;Return response&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User Access&lt;/strong&gt; - responsible for user authentication and authorization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Registrations&lt;/strong&gt; - responsible for user registration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Meetings&lt;/strong&gt; - implements Meetings Bounded Context: creating meeting groups, meetings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Administration&lt;/strong&gt; - implements Administration Bounded Context: implements administrative tasks like meeting group proposal verification&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Payments&lt;/strong&gt; - implements Payments Bounded Context: implements all functionalities associated with payments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;In Memory Events Bus&lt;/strong&gt; - Publish/Subscribe implementation to asynchronously integrate all modules using events (&lt;a href=&quot;https://en.wikipedia.org/wiki/Event-driven_architecture&quot;&gt;Event Driven Architecture&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Key assumptions:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;API contains no application logic&lt;/li&gt; 
 &lt;li&gt;API communicates with Modules using a small interface to send Queries and Commands&lt;/li&gt; 
 &lt;li&gt;Each Module has its own interface which is used by API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modules communicate each other only asynchronously using Events Bus&lt;/strong&gt; - direct method calls are not allowed&lt;/li&gt; 
 &lt;li&gt;Each Module &lt;strong&gt;has it&#39;s own data&lt;/strong&gt; in a separate schema - shared data is not allowed 
  &lt;ul&gt; 
   &lt;li&gt;Module data could be moved into separate databases if desired&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Modules can only have a dependency on the integration events assembly of other Module (see &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#32-module-level-view&quot;&gt;Module level view&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Each Module has its own &lt;a href=&quot;https://freecontent.manning.com/dependency-injection-in-net-2nd-edition-understanding-the-composition-root/&quot;&gt;Composition Root&lt;/a&gt;, which implies that each Module has its own Inversion-of-Control container&lt;/li&gt; 
 &lt;li&gt;API as a host needs to initialize each module and each module has an initialization method&lt;/li&gt; 
 &lt;li&gt;Each Module is &lt;strong&gt;highly encapsulated&lt;/strong&gt; - only required types and members are public, the rest are internal or private&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.2 Module Level View&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Module_level_diagram.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Each Module has &lt;a href=&quot;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&quot;&gt;Clean Architecture&lt;/a&gt; and consists of the following submodules (assemblies):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Application&lt;/strong&gt; - the application logic submodule which is responsible for requests processing: use cases, domain events, integration events, internal commands.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Domain&lt;/strong&gt; - Domain Model in Domain-Driven Design terms implements the applicable &lt;a href=&quot;https://martinfowler.com/bliki/BoundedContext.html&quot;&gt;Bounded Context&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Infrastructure&lt;/strong&gt; - infrastructural code responsible for module initialization, background processing, data access, communication with Events Bus and other external components or systems&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IntegrationEvents&lt;/strong&gt; - &lt;strong&gt;Contracts&lt;/strong&gt; published to the Events Bus; only this assembly can be called by other modules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/VSSolution.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Application, Domain and Infrastructure assemblies could be merged into one assembly. Some people like horizontal layering or more decomposition, some don&#39;t. Implementing the Domain Model or Infrastructure in separate assembly allows encapsulation using the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/internal&quot;&gt;&lt;code&gt;internal&lt;/code&gt;&lt;/a&gt; keyword. Sometimes Bounded Context logic is not worth it because it is too simple. As always, be pragmatic and take whatever approach you like.&lt;/p&gt; 
&lt;h3&gt;3.3 API and Module Communication&lt;/h3&gt; 
&lt;p&gt;The API only communicates with Modules in two ways: during module initialization and request processing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Module initialization&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each module has a static &lt;code&gt;Initialize&lt;/code&gt; method which is invoked in the API &lt;code&gt;Startup&lt;/code&gt; class. All configuration needed by this module should be provided as arguments to this method. All services are configured during initialization and the Composition Root is created using the Inversion-of-Control Container.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static void Initialize(
    string connectionString,
    IExecutionContextAccessor executionContextAccessor,
    ILogger logger,
    EmailsConfiguration emailsConfiguration)
{
    var moduleLogger = logger.ForContext(&quot;Module&quot;, &quot;Meetings&quot;);

    ConfigureCompositionRoot(connectionString, executionContextAccessor, moduleLogger, emailsConfiguration);

    QuartzStartup.Initialize(moduleLogger);

    EventsBusStartup.Initialize(moduleLogger);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Request processing&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each module has the same interface signature exposed to the API. It contains 3 methods: command with result, command without result and query.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public interface IMeetingsModule
{
    Task&amp;lt;TResult&amp;gt; ExecuteCommandAsync&amp;lt;TResult&amp;gt;(ICommand&amp;lt;TResult&amp;gt; command);

    Task ExecuteCommandAsync(ICommand command);

    Task&amp;lt;TResult&amp;gt; ExecuteQueryAsync&amp;lt;TResult&amp;gt;(IQuery&amp;lt;TResult&amp;gt; query);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some people say that processing a command should not return a result. This is an understandable approach but sometimes impractical, especially when you want to immediately return the ID of a newly created resource. Sometimes the boundary between Command and Query is blurry. One example is &lt;code&gt;AuthenticateCommand&lt;/code&gt; - it returns a token but it is not a query because it has a side effect.&lt;/p&gt; 
&lt;h3&gt;3.4 Module Requests Processing via CQRS&lt;/h3&gt; 
&lt;p&gt;Processing of Commands and Queries is separated by applying the architectural style/pattern &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/architecture/patterns/cqrs&quot;&gt;Command Query Responsibility Segregation (CQRS)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/CQRS.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Commands are processed using &lt;em&gt;Write Model&lt;/em&gt; which is implemented using DDD tactical patterns:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class CreateNewMeetingGroupCommandHandler : ICommandHandler&amp;lt;CreateNewMeetingGroupCommand&amp;gt;
{
    private readonly IMeetingGroupRepository _meetingGroupRepository;
    private readonly IMeetingGroupProposalRepository _meetingGroupProposalRepository;

    internal CreateNewMeetingGroupCommandHandler(
        IMeetingGroupRepository meetingGroupRepository,
        IMeetingGroupProposalRepository meetingGroupProposalRepository)
    {
        _meetingGroupRepository = meetingGroupRepository;
        _meetingGroupProposalRepository = meetingGroupProposalRepository;
    }

    public async Task Handle(CreateNewMeetingGroupCommand request, CancellationToken cancellationToken)
    {
        var meetingGroupProposal = await _meetingGroupProposalRepository.GetByIdAsync(request.MeetingGroupProposalId);

        var meetingGroup = meetingGroupProposal.CreateMeetingGroup();

        await _meetingGroupRepository.AddAsync(meetingGroup);

        
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Queries are processed using &lt;em&gt;Read Model&lt;/em&gt; which is implemented by executing raw SQL statements on database views:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class GetAllMeetingGroupsQueryHandler : IQueryHandler&amp;lt;GetAllMeetingGroupsQuery, List&amp;lt;MeetingGroupDto&amp;gt;&amp;gt;
{
    private readonly ISqlConnectionFactory _sqlConnectionFactory;

    internal GetAllMeetingGroupsQueryHandler(ISqlConnectionFactory sqlConnectionFactory)
    {
        _sqlConnectionFactory = sqlConnectionFactory;
    }

    public async Task&amp;lt;List&amp;lt;MeetingGroupDto&amp;gt;&amp;gt; Handle(GetAllMeetingGroupsQuery request, CancellationToken cancellationToken)
    {
        var connection = _sqlConnectionFactory.GetOpenConnection();

        const string sql = $&quot;&quot;&quot;
                           SELECT 
                                [MeetingGroup].[Id] as [{nameof(MeetingGroupDto.Id)}] , 
                                [MeetingGroup].[Name] as [{nameof(MeetingGroupDto.Name)}], 
                                [MeetingGroup].[Description] as [{nameof(MeetingGroupDto.Description)}] 
                                [MeetingGroup].[LocationCountryCode] as [{nameof(MeetingGroupDto.LocationCountryCode)}],
                                [MeetingGroup].[LocationCity] as [{nameof(MeetingGroupDto.LocationCity)}]
                           FROM [meetings].[v_MeetingGroups] AS [MeetingGroup]
                           &quot;&quot;&quot;;
        var meetingGroups = await connection.QueryAsync&amp;lt;MeetingGroupDto&amp;gt;(sql);

        return meetingGroups.AsList();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key advantages:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Solution is appropriate to the problem - reading and writing needs are usually different&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;Single Responsibility Principle&lt;/a&gt; (SRP) - one handler does one thing&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href=&quot;https://en.wikipedia.org/wiki/Interface_segregation_principle&quot;&gt;Interface Segregation Principle&lt;/a&gt; (ISP) - each handler implements interface with exactly one method&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href=&quot;https://refactoring.com/catalog/introduceParameterObject.html&quot;&gt;Parameter Object pattern&lt;/a&gt; - Commands and Queries are objects which are easy to serialize/deserialize&lt;/li&gt; 
 &lt;li&gt;Easy way to apply &lt;a href=&quot;https://en.wikipedia.org/wiki/Decorator_pattern&quot;&gt;Decorator pattern&lt;/a&gt; to handle cross-cutting concerns&lt;/li&gt; 
 &lt;li&gt;Supports Loose Coupling by use of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mediator_pattern&quot;&gt;Mediator pattern&lt;/a&gt; - separates invoker of request from handler of request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Disadvantage:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Mediator pattern introduces extra indirection and is harder to reason about which class handles the request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information: &lt;a href=&quot;https://www.kamilgrzybek.com/design/simple-cqrs-implementation-with-raw-sql-and-ddd/&quot;&gt;Simple CQRS implementation with raw SQL and DDD&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.5 Domain Model Principles and Attributes&lt;/h3&gt; 
&lt;p&gt;The Domain Model, which is the central and most critical part in the system, should be designed with special attention. Here are some key principles and attributes which are applied to Domain Models of each module:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;High level of encapsulation&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All members are &lt;code&gt;private&lt;/code&gt; by default, then &lt;code&gt;internal&lt;/code&gt; - only &lt;code&gt;public&lt;/code&gt; at the very edge.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;High level of PI (Persistence Ignorance)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;No dependencies to infrastructure, databases, etc. All classes are &lt;a href=&quot;https://en.wikipedia.org/wiki/Plain_old_CLR_object&quot;&gt;POCOs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rich in behavior&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All business logic is located in the Domain Model. No leaks to the application layer or elsewhere.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Low level of Primitive Obsession&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Primitive attributes of Entites grouped together using ValueObjects.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Business language&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All classes, methods and other members are named in business language used in this Bounded Context.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Testable&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The Domain Model is a critical part of the system so it should be easy to test (Testable Design).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class MeetingGroup : Entity, IAggregateRoot
{
    public MeetingGroupId Id { get; private set; }

    private string _name;

    private string _description;

    private MeetingGroupLocation _location;

    private MemberId _creatorId;

    private List&amp;lt;MeetingGroupMember&amp;gt; _members;

    private DateTime _createDate;

    private DateTime? _paymentDateTo;

    internal static MeetingGroup CreateBasedOnProposal(
        MeetingGroupProposalId meetingGroupProposalId,
        string name,
        string description,
        MeetingGroupLocation location, MemberId creatorId)
    {
        return new MeetingGroup(meetingGroupProposalId, name, description, location, creatorId);
    }

     public Meeting CreateMeeting(
            string title,
            MeetingTerm term,
            string description,
            MeetingLocation location,
            int? attendeesLimit,
            int guestsLimit,
            Term rsvpTerm,
            MoneyValue eventFee,
            List&amp;lt;MemberId&amp;gt; hostsMembersIds,
            MemberId creatorId)
        {
            this.CheckRule(new MeetingCanBeOrganizedOnlyByPayedGroupRule(_paymentDateTo));

            this.CheckRule(new MeetingHostMustBeAMeetingGroupMemberRule(creatorId, hostsMembersIds, _members));

            return new Meeting(this.Id,
                title,
                term,
                description,
                location,
                attendeesLimit,
                guestsLimit,
                rsvpTerm,
                eventFee,
                hostsMembersIds,
                creatorId);
        }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.6 Cross-Cutting Concerns&lt;/h3&gt; 
&lt;p&gt;To support &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;Single Responsibility Principle&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&quot;&gt;Don&#39;t Repeat Yourself&lt;/a&gt; principles, the implementation of cross-cutting concerns is done using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Decorator_pattern&quot;&gt;Decorator Pattern&lt;/a&gt;. Each Command processor is decorated by 3 decorators: logging, validation and unit of work.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Decorator.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Logging&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Logging decorator logs execution, arguments and processing of each Command. This way each log inside a processor has the log context of the processing command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class LoggingCommandHandlerDecorator&amp;lt;T&amp;gt; : ICommandHandler&amp;lt;T&amp;gt; where T:ICommand
{
    private readonly ILogger _logger;
    private readonly IExecutionContextAccessor _executionContextAccessor;
    private readonly ICommandHandler&amp;lt;T&amp;gt; _decorated;

    public LoggingCommandHandlerDecorator(
        ILogger logger,
        IExecutionContextAccessor executionContextAccessor,
        ICommandHandler&amp;lt;T&amp;gt; decorated)
    {
        _logger = logger;
        _executionContextAccessor = executionContextAccessor;
        _decorated = decorated;
    }
    public async Task Handle(T command, CancellationToken cancellationToken)
    {
        if (command is IRecurringCommand)
        {
            return await _decorated.Handle(command, cancellationToken);
        }
        using (
            LogContext.Push(
                new RequestLogEnricher(_executionContextAccessor),
                new CommandLogEnricher(command)))
        {
            try
            {
                this._logger.Information(
                    &quot;Executing command {Command}&quot;,
                    command.GetType().Name);

                var result = await _decorated.Handle(command, cancellationToken);

                this._logger.Information(&quot;Command {Command} processed successful&quot;, command.GetType().Name);

                return result;
            }
            catch (Exception exception)
            {
                this._logger.Error(exception, &quot;Command {Command} processing failed&quot;, command.GetType().Name);
                throw;
            }
        }
    }

    private class CommandLogEnricher : ILogEventEnricher
    {
        private readonly ICommand _command;

        public CommandLogEnricher(ICommand command)
        {
            _command = command;
        }
        public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory)
        {
            logEvent.AddOrUpdateProperty(new LogEventProperty(&quot;Context&quot;, new ScalarValue($&quot;Command:{_command.Id.ToString()}&quot;)));
        }
    }

    private class RequestLogEnricher : ILogEventEnricher
    {
        private readonly IExecutionContextAccessor _executionContextAccessor;
        public RequestLogEnricher(IExecutionContextAccessor executionContextAccessor)
        {
            _executionContextAccessor = executionContextAccessor;
        }
        public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory)
        {
            if (_executionContextAccessor.IsAvailable)
            {
                logEvent.AddOrUpdateProperty(new LogEventProperty(&quot;CorrelationId&quot;, new ScalarValue(_executionContextAccessor.CorrelationId)));
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Validation&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Validation decorator performs Command data validation. It checks rules against Command arguments using the FluentValidation library.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class ValidationCommandHandlerDecorator&amp;lt;T&amp;gt; : ICommandHandler&amp;lt;T&amp;gt; where T:ICommand
{
    private readonly IList&amp;lt;IValidator&amp;lt;T&amp;gt;&amp;gt; _validators;
    private readonly ICommandHandler&amp;lt;T&amp;gt; _decorated;

    public ValidationCommandHandlerDecorator(
        IList&amp;lt;IValidator&amp;lt;T&amp;gt;&amp;gt; validators,
        ICommandHandler&amp;lt;T&amp;gt; decorated)
    {
        this._validators = validators;
        _decorated = decorated;
    }

    public Task&amp;lt;Unit&amp;gt; Handle(T command, CancellationToken cancellationToken)
    {
        var errors = _validators
            .Select(v =&amp;gt; v.Validate(command))
            .SelectMany(result =&amp;gt; result.Errors)
            .Where(error =&amp;gt; error != null)
            .ToList();

        if (errors.Any())
        {
            var errorBuilder = new StringBuilder();

            errorBuilder.AppendLine(&quot;Invalid command, reason: &quot;);

            foreach (var error in errors)
            {
                errorBuilder.AppendLine(error.ErrorMessage);
            }

            throw new InvalidCommandException(errorBuilder.ToString(), null);
        }

        return _decorated.Handle(command, cancellationToken);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Unit Of Work&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;All Command processing has side effects. To avoid calling commit on every handler, &lt;code&gt;UnitOfWorkCommandHandlerDecorator&lt;/code&gt; is used. It additionally marks &lt;code&gt;InternalCommand&lt;/code&gt; as processed (if it is Internal Command) and dispatches all Domain Events (as part of &lt;a href=&quot;https://martinfowler.com/eaaCatalog/unitOfWork.html&quot;&gt;Unit Of Work&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class UnitOfWorkCommandHandlerDecorator&amp;lt;T&amp;gt; : ICommandHandler&amp;lt;T&amp;gt; where T:ICommand
{
    private readonly ICommandHandler&amp;lt;T&amp;gt; _decorated;
    private readonly IUnitOfWork _unitOfWork;
    private readonly MeetingsContext _meetingContext;

    public UnitOfWorkCommandHandlerDecorator(
        ICommandHandler&amp;lt;T&amp;gt; decorated,
        IUnitOfWork unitOfWork,
        MeetingsContext meetingContext)
    {
        _decorated = decorated;
        _unitOfWork = unitOfWork;
        _meetingContext = meetingContext;
    }

    public async Task Handle(T command, CancellationToken cancellationToken)
    {
        await this._decorated.Handle(command, cancellationToken);

        if (command is InternalCommandBase)
        {
            var internalCommand =
                await _meetingContext.InternalCommands.FirstOrDefaultAsync(x =&amp;gt; x.Id == command.Id,
                    cancellationToken: cancellationToken);

            if (internalCommand != null)
            {
                internalCommand.ProcessedDate = DateTime.UtcNow;
            }
        }

        await this._unitOfWork.CommitAsync(cancellationToken);

        
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.7 Modules Integration&lt;/h3&gt; 
&lt;p&gt;Integration between modules is strictly &lt;strong&gt;asynchronous&lt;/strong&gt; using Integration Events and the In Memory Event Bus as broker. In this way coupling between modules is minimal and exists only on the structure of Integration Events.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Modules don&#39;t share data&lt;/strong&gt; so it is not possible nor desirable to create a transaction which spans more than one module. To ensure maximum reliability, the &lt;a href=&quot;http://www.kamilgrzybek.com/design/the-outbox-pattern/&quot;&gt;Outbox / Inbox pattern&lt;/a&gt; is used. This pattern provides accordingly &lt;em&gt;&quot;At-Least-Once delivery&quot;&lt;/em&gt; and &lt;em&gt;&quot;At-Least-Once processing&quot;&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/OutboxInbox.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;The Outbox and Inbox is implemented using two SQL tables and a background worker for each module. The background worker is implemented using the Quartz.NET library.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Saving to Outbox:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/OutboxSave.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Processing Outbox:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/OutboxProcessing.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;3.8 Internal Processing&lt;/h3&gt; 
&lt;p&gt;The main principle of this system is that you can change its state only by calling a specific Command.&lt;/p&gt; 
&lt;p&gt;Commands can be called not only by the API, but by the processing module itself. The main use case which implements this mechanism is data processing in eventual consistency mode when we want to process something in a different process and transaction. This applies, for example, to Inbox processing because we want to do something (calling a Command) based on an Integration Event from the Inbox.&lt;/p&gt; 
&lt;p&gt;This idea is taken from Alberto&#39;s Brandolini&#39;s Event Storming picture called &quot;The picture that explains “almost” everything&quot; which shows that every side effect (domain event) is created by invoking a Command on Aggregate. See &lt;a href=&quot;https://xebia.com/blog/eventstorming-cheat-sheet/&quot;&gt;EventStorming cheat sheet&lt;/a&gt; article for more details.&lt;/p&gt; 
&lt;p&gt;Implementation of internal processing is very similar to implementation of the Outbox and Inbox. One SQL table and one background worker for processing. Each internally processing Command must inherit from &lt;code&gt;InternalCommandBase&lt;/code&gt; class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal abstract class InternalCommandBase : ICommand
{
    public Guid Id { get; }

    protected InternalCommandBase(Guid id)
    {
        this.Id = id;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is important because the &lt;code&gt;UnitOfWorkCommandHandlerDecorator&lt;/code&gt; must mark an internal Command as processed during committing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async Task Handle(T command, CancellationToken cancellationToken)
{
    await this._decorated.Handle(command, cancellationToken);

    if (command is InternalCommandBase)
    {
        var internalCommand =
            await _meetingContext.InternalCommands.FirstOrDefaultAsync(x =&amp;gt; x.Id == command.Id,
                cancellationToken: cancellationToken);

        if (internalCommand != null)
        {
            internalCommand.ProcessedDate = DateTime.UtcNow;
        }
    }

    await this._unitOfWork.CommitAsync(cancellationToken);

    
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.9 Security&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Authentication&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Authentication is implemented using JWT Token and Bearer scheme using IdentityServer. For now, only one authentication method is implemented: forms style authentication (username and password) via the OAuth2 &lt;a href=&quot;https://www.oauth.com/oauth2-servers/access-tokens/password-grant/&quot;&gt;Resource Owner Password Grant Type&lt;/a&gt;. It requires implementation of the &lt;code&gt;IResourceOwnerPasswordValidator&lt;/code&gt; interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class ResourceOwnerPasswordValidator : IResourceOwnerPasswordValidator
{
    private readonly IUserAccessModule _userAccessModule;

    public ResourceOwnerPasswordValidator(IUserAccessModule userAccessModule)
    {
        _userAccessModule = userAccessModule;
    }

    public async Task ValidateAsync(ResourceOwnerPasswordValidationContext context)
    {
        var authenticationResult = await _userAccessModule.ExecuteCommandAsync(new AuthenticateCommand(context.UserName, context.Password));
        if (!authenticationResult.IsAuthenticated)
        {
            context.Result = new GrantValidationResult(
                TokenRequestErrors.InvalidGrant,
                authenticationResult.AuthenticationError);
            return;
        }
        context.Result = new GrantValidationResult(
            authenticationResult.User.Id.ToString(),
            &quot;forms&quot;,
            authenticationResult.User.Claims);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Authorization&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Authorization is achieved by implementing &lt;a href=&quot;https://en.wikipedia.org/wiki/Role-based_access_control&quot;&gt;RBAC (Role Based Access Control)&lt;/a&gt; using Permissions. Permissions are more granular and a much better way to secure your application than Roles alone. Each User has a set of Roles and each Role contains one or more Permission. The User&#39;s set of Permissions is extracted from all Roles the User belongs to. Permissions are always checked on &lt;code&gt;Controller&lt;/code&gt; level - never Roles:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[HttpPost]
[Route(&quot;&quot;)]
[HasPermission(MeetingsPermissions.ProposeMeetingGroup)]
public async Task&amp;lt;IActionResult&amp;gt; ProposeMeetingGroup(ProposeMeetingGroupRequest request)
{
    await _meetingsModule.ExecuteCommandAsync(
        new ProposeMeetingGroupCommand(
            request.Name,
            request.Description,
            request.LocationCity,
            request.LocationCountryCode));

    return Ok();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.10 Unit Tests&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A unit test is an automated piece of code that invokes the unit of work being tested, and then checks some assumptions about a single end result of that unit. A unit test is almost always written using a unit testing framework. It can be written easily and runs quickly. It’s trustworthy, readable, and maintainable. It’s consistent in its results as long as production code hasn’t changed. &lt;a href=&quot;https://www.manning.com/books/the-art-of-unit-testing-second-edition&quot;&gt;Art of Unit Testing 2nd Edition&lt;/a&gt; Roy Osherove&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Attributes of good unit test&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automated&lt;/li&gt; 
 &lt;li&gt;Maintainable&lt;/li&gt; 
 &lt;li&gt;Runs very fast (in ms)&lt;/li&gt; 
 &lt;li&gt;Consistent, Deterministic (always the same result)&lt;/li&gt; 
 &lt;li&gt;Isolated from other tests&lt;/li&gt; 
 &lt;li&gt;Readable&lt;/li&gt; 
 &lt;li&gt;Can be executed by anyone&lt;/li&gt; 
 &lt;li&gt;Testing public API, not internal behavior (overspecification)&lt;/li&gt; 
 &lt;li&gt;Looks like production code&lt;/li&gt; 
 &lt;li&gt;Treated as production code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Unit tests should mainly test business logic (domain model): &lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/unit_tests.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Each unit test has 3 standard sections: Arrange, Act and Assert:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/UnitTestsGeneral.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Arrange&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Arrange section is responsible for preparing the Aggregate for testing the public method that we want to test. This public method is often called (from the unit tests perspective) the SUT (system under test).&lt;/p&gt; 
&lt;p&gt;Creating an Aggregate ready for testing involves &lt;strong&gt;calling one or more other public constructors/methods&lt;/strong&gt; on the Domain Model. At first it may seem that we are testing too many things at the same time, but this is not true. We need to be one hundred percent sure that the Aggregate is in a state exactly as it will be in production. This can only be ensured when we:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Use only public API of Domain Model&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Don&#39;t use &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.internalsvisibletoattribute?view=netframework-4.8&quot;&gt;InternalsVisibleToAttribute&lt;/a&gt; class 
  &lt;ul&gt; 
   &lt;li&gt;This exposes the Domain Model to the Unit Tests library, removing encapsulation so our tests and production code are treated differently and it is a very bad thing&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Don&#39;t use &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.conditionalattribute?view=netframework-4.8&quot;&gt;ConditionalAttribute&lt;/a&gt; classes - it reduces readability and increases complexity&lt;/li&gt; 
 &lt;li&gt;Don&#39;t create any special constructors/factory methods for tests (even with conditional compilation symbols) 
  &lt;ul&gt; 
   &lt;li&gt;Special constructor/factory method only for unit tests causes duplication of business logic in the test itself and focuses on state - this kind of approach causes the test to be very sensitive to changes and hard to maintain&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Don&#39;t remove encapsulation from Domain Model (for example: change keywords from &lt;code&gt;internal&lt;/code&gt;/&lt;code&gt;private&lt;/code&gt; to &lt;code&gt;public&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Don&#39;t make methods &lt;code&gt;protected&lt;/code&gt; to inherit from tested class and in this way provide access to internal methods/properties&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Isolation of external dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;There are 2 main concepts - stubs and mocks:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A stub is a controllable replacement for an existing dependency (or collaborator) in the system. By using a stub, you can test your code without dealing with the dependency directly.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A mock object is a fake object in the system that decides whether the unit test has passed or failed. It does so by verifying whether the object under test called the fake object as expected. There’s usually no more than one mock per test. &lt;a href=&quot;https://www.manning.com/books/the-art-of-unit-testing-second-edition&quot;&gt;Art of Unit Testing 2nd Edition&lt;/a&gt; Roy Osherove&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Good advice: use stubs if you need to, but try to avoid mocks. Mocking causes us to test too many internal things and leads to overspecification.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. Act&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This section is very easy - we execute &lt;strong&gt;exactly one&lt;/strong&gt; public method on aggregate (SUT).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Assert&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In this section we check expectations. There are only 2 possible outcomes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Method completed and Domain Event(s) published&lt;/li&gt; 
 &lt;li&gt;Business rule was broken&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Simple example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[Test]
public void NewUserRegistration_WithUniqueLogin_IsSuccessful()
{
    // Arrange
    var usersCounter = Substitute.For&amp;lt;IUsersCounter&amp;gt;();

    // Act
    var userRegistration =
        UserRegistration.RegisterNewUser(
            &quot;login&quot;, &quot;password&quot;, &quot;test@email&quot;,
            &quot;firstName&quot;, &quot;lastName&quot;, usersCounter);

    // Assert
    var newUserRegisteredDomainEvent = AssertPublishedDomainEvent&amp;lt;NewUserRegisteredDomainEvent&amp;gt;(userRegistration);
    Assert.That(newUserRegisteredDomainEvent.UserRegistrationId, Is.EqualTo(userRegistration.Id));
}

[Test]
public void NewUserRegistration_WithoutUniqueLogin_BreaksUserLoginMustBeUniqueRule()
{
    // Arrange
    var usersCounter = Substitute.For&amp;lt;IUsersCounter&amp;gt;();
    usersCounter.CountUsersWithLogin(&quot;login&quot;).Returns(x =&amp;gt; 1);

    // Assert
    AssertBrokenRule&amp;lt;UserLoginMustBeUniqueRule&amp;gt;(() =&amp;gt;
    {
        // Act
        UserRegistration.RegisterNewUser(
            &quot;login&quot;, &quot;password&quot;, &quot;test@email&quot;,
            &quot;firstName&quot;, &quot;lastName&quot;, usersCounter);
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Advanced example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[Test]
public void AddAttendee_WhenMemberIsAlreadyAttendeeOfMeeting_IsNotPossible()
{
    // Arrange
    var creatorId = new MemberId(Guid.NewGuid());
    var meetingTestData = CreateMeetingTestData(new MeetingTestDataOptions
    {
        CreatorId = creatorId
    });
    var newMemberId = new MemberId(Guid.NewGuid());
    meetingTestData.MeetingGroup.JoinToGroupMember(newMemberId);
    meetingTestData.Meeting.AddAttendee(meetingTestData.MeetingGroup, newMemberId, 0);

    // Assert
    AssertBrokenRule&amp;lt;MemberCannotBeAnAttendeeOfMeetingMoreThanOnceRule&amp;gt;(() =&amp;gt;
    {
        // Act
        meetingTestData.Meeting.AddAttendee(meetingTestData.MeetingGroup, newMemberId, 0);
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;CreateMeetingTestData&lt;/code&gt; method is an implementation of &lt;a href=&quot;https://blog.ploeh.dk/2009/02/13/SUTFactory/&quot;&gt;SUT Factory&lt;/a&gt; described by Mark Seemann which allows keeping common creation logic in one place:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;protected MeetingTestData CreateMeetingTestData(MeetingTestDataOptions options)
{
    var proposalMemberId = options.CreatorId ?? new MemberId(Guid.NewGuid());
    var meetingProposal = MeetingGroupProposal.ProposeNew(
        &quot;name&quot;, &quot;description&quot;,
        new MeetingGroupLocation(&quot;Warsaw&quot;, &quot;PL&quot;), proposalMemberId);

    meetingProposal.Accept();

    var meetingGroup = meetingProposal.CreateMeetingGroup();

    meetingGroup.UpdatePaymentInfo(DateTime.Now.AddDays(1));

    var meetingTerm = options.MeetingTerm ??
                      new MeetingTerm(DateTime.UtcNow.AddDays(1), DateTime.UtcNow.AddDays(2));

    var rsvpTerm = options.RvspTerm ?? Term.NoTerm;
    var meeting = meetingGroup.CreateMeeting(&quot;title&quot;,
        meetingTerm,
        &quot;description&quot;,
        new MeetingLocation(&quot;Name&quot;, &quot;Address&quot;, &quot;PostalCode&quot;, &quot;City&quot;),
        options.AttendeesLimit,
        options.GuestsLimit,
        rsvpTerm,
        MoneyValue.Zero,
        new List&amp;lt;MemberId&amp;gt;(),
        proposalMemberId);

    DomainEventsTestHelper.ClearAllDomainEvents(meetingGroup);

    return new MeetingTestData(meetingGroup, meeting);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.11 Architecture Decision Log&lt;/h3&gt; 
&lt;p&gt;All Architectural Decisions (AD) are documented in the &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/architecture-decision-log&quot;&gt;Architecture Decision Log (ADL)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;More information about documenting architecture-related decisions in this way : &lt;a href=&quot;https://github.com/joelparkerhenderson/architecture_decision_record&quot;&gt;https://github.com/joelparkerhenderson/architecture_decision_record&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.12 Architecture Unit Tests&lt;/h3&gt; 
&lt;p&gt;In some cases it is not possible to enforce the application architecture, design or established conventions using compiler (compile-time). For this reason, code implementations can diverge from the original design and architecture. We want to minimize this behavior, not only by code review.&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;To do this, unit tests of system architecture, design, major conventions and assumptions have been written. In .NET there is special library for this task: &lt;a href=&quot;https://github.com/BenMorris/NetArchTest&quot;&gt;NetArchTest&lt;/a&gt;. This library has been written based on the very popular JAVA architecture unit tests library - &lt;a href=&quot;https://www.archunit.org/&quot;&gt;ArchUnit&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;Using this kind of tests we can test proper layering of our application, dependencies, encapsulation, immutability, DDD correct implementation, naming, conventions and so on - everything what we need to test. Example:&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/architecture_unit_tests.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;More information about architecture unit tests here: &lt;a href=&quot;https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit&quot;&gt;https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.13 Integration Tests&lt;/h3&gt; 
&lt;h4&gt;Definition&lt;/h4&gt; 
&lt;p&gt;&quot;Integration Test&quot; term is blurred. It can mean test between classes, modules, services, even systems - see &lt;a href=&quot;https://martinfowler.com/bliki/IntegrationTest.html&quot;&gt;this&lt;/a&gt; article (by Martin Fowler). &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;For this reason, the definition of integration test in this project is as follows:&lt;br&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;it verifies how system works in integration with &quot;out-of-process&quot; dependencies - database, messaging system, file system or external API&lt;/li&gt; 
 &lt;li&gt;it tests particular use case&lt;/li&gt; 
 &lt;li&gt;it can be slow (as opposed to Unit Test)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Approach&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Do not mock dependencies over which you have full control&lt;/strong&gt; (like database). Full control dependency means you can always revert all changes (remove side-effects) and no one can notice it. They are not visible to others. See next point, please.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Use &quot;production&quot;, normal, real database version&lt;/strong&gt;. Some use e.g. in memory repository, some use light databases instead &quot;production&quot; version. This is still mocking. Testing makes sense if we have full confidence in testing. You can&#39;t trust the test if you know that the infrastructure in the production environment will vary. Be always as close to production environment as possible.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mock dependencies over which you don&#39;t have control&lt;/strong&gt;. No control dependency means you can&#39;t remove side-effects after interaction with this dependency (external API, messaging system, SMTP server etc.). They can be visible to others.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Implementation&lt;/h4&gt; 
&lt;p&gt;Integration test should test exactly one use case. One use case is represented by one Command/Query processing so CommandHandler/QueryHandler in Application layer is perfect starting point for running the Integration Test:&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/integration_tests.jpg&quot; alt=&quot;&quot;&gt; For each test, the following preparation steps must be performed:&lt;br&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clear database&lt;/li&gt; 
 &lt;li&gt;Prepare mocks&lt;/li&gt; 
 &lt;li&gt;Initialize testing module&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[SetUp]
public async Task BeforeEachTest()
{
    const string connectionStringEnvironmentVariable =
        &quot;ASPNETCORE_MyMeetings_IntegrationTests_ConnectionString&quot;;
    ConnectionString = Environment.GetEnvironmentVariable(connectionStringEnvironmentVariable, EnvironmentVariableTarget.Machine);
    if (ConnectionString == null)
    {
        throw new ApplicationException(
            $&quot;Define connection string to integration tests database using environment variable: {connectionStringEnvironmentVariable}&quot;);
    }

    using (var sqlConnection = new SqlConnection(ConnectionString))
    {
        await ClearDatabase(sqlConnection);
    }

    Logger = Substitute.For&amp;lt;ILogger&amp;gt;();
    EmailSender = Substitute.For&amp;lt;IEmailSender&amp;gt;();
    EventsBus = new EventsBusMock();
    ExecutionContext = new ExecutionContextMock(Guid.NewGuid());
    
    PaymentsStartup.Initialize(
        ConnectionString,
        ExecutionContext,
        Logger,
        EventsBus,
        false);

    PaymentsModule = new PaymentsModule();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After preparation, test is performed on clear database. Usually, it is the execution of some (or many) Commands and: &lt;br&gt; a) running a Query or/and &lt;br&gt; b) verifying mocks &lt;br&gt; to check the result.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[TestFixture]
public class MeetingPaymentTests : TestBase
{
    [Test]
    public async Task CreateMeetingPayment_Test()
    {
        PayerId payerId = new PayerId(Guid.NewGuid());
        MeetingId meetingId = new MeetingId(Guid.NewGuid());
        decimal value = 100;
        string currency = &quot;EUR&quot;;
        await PaymentsModule.ExecuteCommandAsync(new CreateMeetingPaymentCommand(Guid.NewGuid(),
            payerId, meetingId, value, currency));

        var payment = await PaymentsModule.ExecuteQueryAsync(new GetMeetingPaymentQuery(meetingId.Value, payerId.Value));

        Assert.That(payment.PayerId, Is.EqualTo(payerId.Value));
        Assert.That(payment.MeetingId, Is.EqualTo(meetingId.Value));
        Assert.That(payment.FeeValue, Is.EqualTo(value));
        Assert.That(payment.FeeCurrency, Is.EqualTo(currency));
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Each Command/Query processing is a separate execution (with different object graph resolution, context, database connection etc.) thanks to Composition Root of each module. This behavior is important and desirable.&lt;/p&gt; 
&lt;h3&gt;3.14 System Integration Testing&lt;/h3&gt; 
&lt;h4&gt;Definition&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/System_integration_testing&quot;&gt;System Integration Testing (SIT)&lt;/a&gt; is performed to verify the interactions between the modules of a software system. It involves the overall testing of a complete system of many subsystem components or elements.&lt;/p&gt; 
&lt;h4&gt;Implementation&lt;/h4&gt; 
&lt;p&gt;Implementation of system integration tests is based on approach of integration testing of modules in isolation (invoking commands and queries) described in the previous section.&lt;/p&gt; 
&lt;p&gt;The problem is that in this case we are dealing with &lt;strong&gt;asynchronous communication&lt;/strong&gt;. Due to asynchrony, our &lt;strong&gt;test must wait for the result&lt;/strong&gt; at certain times.&lt;/p&gt; 
&lt;p&gt;To correctly implement such tests, the &lt;strong&gt;Sampling&lt;/strong&gt; technique and implementation described in the &lt;a href=&quot;https://www.amazon.com/Growing-Object-Oriented-Software-Guided-Tests/dp/0321503627&quot;&gt;Growing Object-Oriented Software, Guided by Tests&lt;/a&gt; book was used:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;An asynchronous test must wait for success and use timeouts to detect failure. This implies that every tested activity must have an observable effect: a test must affect the system so that its observable state becomes different. This sounds obvious but it drives how we think about writing asynchronous tests. If an activity has no observable effect, there is nothing the test can wait for, and therefore no way for the test to synchronize with the system it is testing. There are two ways a test can observe the system: by sampling its observable state or by listening for events that it sends out.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/SystemIntegrationTests.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Test below:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Creates Meeting Group Proposal in Meetings module&lt;/li&gt; 
 &lt;li&gt;Waits until Meeting Group Proposal to verification will be available in Administration module with 10 seconds timeout&lt;/li&gt; 
 &lt;li&gt;Accepts Meeting Group Proposal in Administration module&lt;/li&gt; 
 &lt;li&gt;Waits until Meeting Group is created in Meetings module with 15 seconds timeout&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class CreateMeetingGroupTests : TestBase
{
    [Test]
    public async Task CreateMeetingGroupScenario_WhenProposalIsAccepted()
    {
        var meetingGroupId = await MeetingsModule.ExecuteCommandAsync(
            new ProposeMeetingGroupCommand(&quot;Name&quot;,
            &quot;Description&quot;,
            &quot;Location&quot;,
            &quot;PL&quot;));

        AssertEventually(
            new GetMeetingGroupProposalFromAdministrationProbe(meetingGroupId, AdministrationModule), 
            10000);

        await AdministrationModule.ExecuteCommandAsync(new AcceptMeetingGroupProposalCommand(meetingGroupId));

        AssertEventually(
            new GetCreatedMeetingGroupFromMeetingsProbe(meetingGroupId, MeetingsModule),
            15000);
    }

    private class GetCreatedMeetingGroupFromMeetingsProbe : IProbe
    {
        private readonly Guid _expectedMeetingGroupId;

        private readonly IMeetingsModule _meetingsModule;

        private List&amp;lt;MeetingGroupDto&amp;gt; _allMeetingGroups;

        public GetCreatedMeetingGroupFromMeetingsProbe(
            Guid expectedMeetingGroupId, 
            IMeetingsModule meetingsModule)
        {
            _expectedMeetingGroupId = expectedMeetingGroupId;
            _meetingsModule = meetingsModule;
        }

        public bool IsSatisfied()
        {
            return _allMeetingGroups != null &amp;amp;&amp;amp; 
                   _allMeetingGroups.Any(x =&amp;gt; x.Id == _expectedMeetingGroupId);
        }

        public async Task SampleAsync()
        {
            _allMeetingGroups = await _meetingsModule.ExecuteQueryAsync(new GetAllMeetingGroupsQuery());
        }

        public string DescribeFailureTo() 
            =&amp;gt; $&quot;Meeting group with ID: {_expectedMeetingGroupId} is not created&quot;;
    }

    private class GetMeetingGroupProposalFromAdministrationProbe : IProbe
    {
        private readonly Guid _expectedMeetingGroupProposalId;

        private MeetingGroupProposalDto _meetingGroupProposal;

        private readonly IAdministrationModule _administrationModule;

        public GetMeetingGroupProposalFromAdministrationProbe(Guid expectedMeetingGroupProposalId, IAdministrationModule administrationModule)
        {
            _expectedMeetingGroupProposalId = expectedMeetingGroupProposalId;
            _administrationModule = administrationModule;
        }

        public bool IsSatisfied()
        {
            if (_meetingGroupProposal == null)
            {
                return false;
            }

            if (_meetingGroupProposal.Id == _expectedMeetingGroupProposalId &amp;amp;&amp;amp;
                _meetingGroupProposal.StatusCode == MeetingGroupProposalStatus.ToVerify.Value)
            {
                return true;
            }

            return false;
        }

        public async Task SampleAsync()
        {
            try
            {
                _meetingGroupProposal =
                    await _administrationModule.ExecuteQueryAsync(
                        new GetMeetingGroupProposalQuery(_expectedMeetingGroupProposalId));
            }
            catch
            {
                // ignored
            }
        }

        public string DescribeFailureTo()
            =&amp;gt; $&quot;Meeting group proposal with ID: {_expectedMeetingGroupProposalId} to verification not created&quot;;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Poller class implementation (based on example in the book):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class Poller
{
    private readonly int _timeoutMillis;

    private readonly int _pollDelayMillis;

    public Poller(int timeoutMillis)
    {
        _timeoutMillis = timeoutMillis;
        _pollDelayMillis = 1000;
    }

    public void Check(IProbe probe)
    {
        var timeout = new Timeout(_timeoutMillis);
        while (!probe.IsSatisfied())
        {
            if (timeout.HasTimedOut())
            {
                throw new AssertErrorException(DescribeFailureOf(probe));
            }

            Thread.Sleep(_pollDelayMillis);
            probe.SampleAsync();
        }
    }

    private static string DescribeFailureOf(IProbe probe)
    {
        return probe.DescribeFailureTo();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.15 Event Sourcing&lt;/h3&gt; 
&lt;h4&gt;Theory&lt;/h4&gt; 
&lt;p&gt;During the implementation of the Payment module, &lt;em&gt;Event Sourcing&lt;/em&gt; was used. &lt;em&gt;Event Sourcing&lt;/em&gt; is a way of preserving the state of our system by recording a sequence of events. No less, no more.&lt;/p&gt; 
&lt;p&gt;It is important here to really restore the state of our application from events. If we collect events only for auditing purposes, it is an &lt;a href=&quot;https://en.wikipedia.org/wiki/Audit_trail&quot;&gt;Audit Log/Trail&lt;/a&gt; - not the &lt;em&gt;Event Sourcing&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;The main elements of &lt;em&gt;Event Sourcing&lt;/em&gt; are as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Events Stream&lt;/li&gt; 
 &lt;li&gt;Objects that are restored based on events. There are 2 types of such objects depending on the purpose: -- Objects responsible for the change of state. In Domain-Driven Design they will be &lt;em&gt;Aggregates&lt;/em&gt;. -- &lt;em&gt;Projections&lt;/em&gt;: read models prepared for a specific purpose&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Subscriptions&lt;/em&gt; : a way to receive information about new events&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Snapshots&lt;/em&gt;: from time to time, objects saved in the traditional way for performance purposes. Mainly used if there are many events to restore the object from the entire event history. (Note: there is currently no snapshot implementation in the project)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_elements.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Tool&lt;/h4&gt; 
&lt;p&gt;In order not to reinvent the wheel, the &lt;em&gt;SQL Stream Store&lt;/em&gt; library was used. As the &lt;a href=&quot;https://sqlstreamstore.readthedocs.io/en/latest/&quot;&gt;documentation&lt;/a&gt; says:&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;SQL Stream Store is a .NET library to assist with developing applications that use event sourcing or wish to use stream based patterns over a relational database and existing operational infrastructure.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Like every library, it has its limitations and assumptions (I recommend the linked documentation chapter &quot;Things you need to know before adopting&quot;). For me, the most important 2 points from this chapter are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;em&gt;&quot;Subscriptions (and thus projections) are &lt;strong&gt;eventually consistent&lt;/strong&gt; and always will be.&quot;&lt;/em&gt; This means that there will always be an inconsistency time from saving the event to the stream and processing the event by the projector(s).&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;&quot;No support for ambient System.Transaction scopes enforcing the concept of the stream as the consistency and transactional boundary.&quot;&lt;/em&gt; This means that if we save the event to a events stream and want to save something &lt;strong&gt;in the same transaction&lt;/strong&gt;, we must use &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/system.transactions.transactionscope?view=net-8.0&quot;&gt;TransactionScope&lt;/a&gt;. If we cannot use &lt;em&gt;TransactionScope&lt;/em&gt; for some reason, we must accept the Eventual Consistency also in this case.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Other popular tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eventstore.com/&quot;&gt;EventStore&lt;/a&gt; &lt;em&gt;&quot;An industrial-strength database solution built from the ground up for event sourcing.&quot;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://martendb.io/&quot;&gt;Marten&lt;/a&gt; &lt;em&gt;&quot;.NET Transactional Document DB and Event Store on PostgreSQL&quot;&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Implementation&lt;/h4&gt; 
&lt;p&gt;There are 2 main &quot;flows&quot; to handle:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Command handling: change of state - adding new events to stream (writing)&lt;/li&gt; 
 &lt;li&gt;Projection of events to create read models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Command Handling&lt;/h5&gt; 
&lt;p&gt;The whole process looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_command_handling.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;We create / update an aggregate by creating an event&lt;/li&gt; 
 &lt;li&gt;We add changes to the Aggregate Store. This is the class responsible for writing / loading our aggregates. We are not saving changes yet.&lt;/li&gt; 
 &lt;li&gt;As part of Unit Of Work a) Aggregate Store adds events to the stream b) messages are added to the Outbox&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Command Handler:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class BuySubscriptionCommandHandler : ICommandHandler&amp;lt;BuySubscriptionCommand, Guid&amp;gt;
{
    private readonly IAggregateStore _aggregateStore;

    private readonly IPayerContext _payerContext;

    private readonly ISqlConnectionFactory _sqlConnectionFactory;

    public BuySubscriptionCommandHandler(
        IAggregateStore aggregateStore, 
        IPayerContext payerContext, 
        ISqlConnectionFactory sqlConnectionFactory)
    {
        _aggregateStore = aggregateStore;
        _payerContext = payerContext;
        _sqlConnectionFactory = sqlConnectionFactory;
    }

    public async Task&amp;lt;Guid&amp;gt; Handle(BuySubscriptionCommand command, CancellationToken cancellationToken)
    {
        var priceList = await PriceListProvider.GetPriceList(_sqlConnectionFactory.GetOpenConnection());

        var subscriptionPayment = SubscriptionPayment.Buy(
            _payerContext.PayerId,
            SubscriptionPeriod.Of(command.SubscriptionTypeCode),
            command.CountryCode,
            MoneyValue.Of(command.Value, command.Currency),
            priceList);
        
        _aggregateStore.AppendChanges(subscriptionPayment);

        return subscriptionPayment.Id;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;SubscriptionPayment&lt;/code&gt; Aggregate:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SubscriptionPayment : AggregateRoot
{
    private PayerId _payerId;

    private SubscriptionPeriod _subscriptionPeriod;

    private string _countryCode;

    private SubscriptionPaymentStatus _subscriptionPaymentStatus;

    private MoneyValue _value;

    protected override void Apply(IDomainEvent @event)
    {
        this.When((dynamic)@event);
    }

    public static SubscriptionPayment Buy(
        PayerId payerId,
        SubscriptionPeriod period,
        string countryCode,
        MoneyValue priceOffer,
        PriceList priceList)
    {
        var priceInPriceList = priceList.GetPrice(countryCode, period, PriceListItemCategory.New);
        CheckRule(new PriceOfferMustMatchPriceInPriceListRule(priceOffer, priceInPriceList));

        var subscriptionPayment = new SubscriptionPayment();

        var subscriptionPaymentCreated = new SubscriptionPaymentCreatedDomainEvent(
            Guid.NewGuid(),
            payerId.Value,
            period.Code,
            countryCode,
            SubscriptionPaymentStatus.WaitingForPayment.Code,
            priceOffer.Value,
            priceOffer.Currency);

        subscriptionPayment.Apply(subscriptionPaymentCreated);
        subscriptionPayment.AddDomainEvent(subscriptionPaymentCreated);

        return subscriptionPayment;
    }

    private void When(SubscriptionPaymentCreatedDomainEvent @event)
    {
        this.Id = @event.SubscriptionPaymentId;
        _payerId = new PayerId(@event.PayerId);
        _subscriptionPeriod = SubscriptionPeriod.Of(@event.SubscriptionPeriodCode);
        _countryCode = @event.CountryCode;
        _subscriptionPaymentStatus = SubscriptionPaymentStatus.Of(@event.Status);
        _value = MoneyValue.Of(@event.Value, @event.Currency);
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;AggregateRoot&lt;/code&gt; base class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public abstract class AggregateRoot
{
    public Guid Id { get; protected set; }

    public int Version { get; private set; }

    private readonly List&amp;lt;IDomainEvent&amp;gt; _domainEvents;

    protected AggregateRoot()
    {
        _domainEvents = new List&amp;lt;IDomainEvent&amp;gt;();

        Version = -1;
    }

    protected void AddDomainEvent(IDomainEvent @event)
    {
        _domainEvents.Add(@event);
    }

    public IReadOnlyCollection&amp;lt;IDomainEvent&amp;gt; GetDomainEvents() =&amp;gt; _domainEvents.AsReadOnly();

    public void Load(IEnumerable&amp;lt;IDomainEvent&amp;gt; history)
    {
        foreach (var e in history)
        {
            Apply(e);
            Version++;
        }
    }

    protected abstract void Apply(IDomainEvent @event);

    protected static void CheckRule(IBusinessRule rule)
    {
        if (rule.IsBroken())
        {
            throw new BusinessRuleValidationException(rule);
        }
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Aggregate Store implementation with SQL Stream Store library usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SqlStreamAggregateStore : IAggregateStore
{
    private readonly IStreamStore _streamStore;

    private readonly List&amp;lt;IDomainEvent&amp;gt; _appendedChanges;

    private readonly List&amp;lt;AggregateToSave&amp;gt; _aggregatesToSave;

    public SqlStreamAggregateStore(
        ISqlConnectionFactory sqlConnectionFactory)
    {
        _appendedChanges = new List&amp;lt;IDomainEvent&amp;gt;();

        _streamStore =
            new MsSqlStreamStore(
                new MsSqlStreamStoreSettings(sqlConnectionFactory.GetConnectionString())
                    {
                        Schema = DatabaseSchema.Name
                });

        _aggregatesToSave = new List&amp;lt;AggregateToSave&amp;gt;();
    }

    public async Task Save()
    {
        foreach (var aggregateToSave in _aggregatesToSave)
        {
            await _streamStore.AppendToStream(
                GetStreamId(aggregateToSave.Aggregate),
                aggregateToSave.Aggregate.Version,
                aggregateToSave.Messages.ToArray());
        }

        _aggregatesToSave.Clear();
    }

    public async Task&amp;lt;T&amp;gt; Load&amp;lt;T&amp;gt;(AggregateId&amp;lt;T&amp;gt; aggregateId) where T : AggregateRoot
    {
        var streamId = GetStreamId(aggregateId);

        IList&amp;lt;IDomainEvent&amp;gt; domainEvents = new List&amp;lt;IDomainEvent&amp;gt;();
        ReadStreamPage readStreamPage;
        do
        {
            readStreamPage = await _streamStore.ReadStreamForwards(streamId, StreamVersion.Start, maxCount: 100);
            var messages = readStreamPage.Messages;
            foreach (var streamMessage in messages)
            {
                Type type = DomainEventTypeMappings.Dictionary[streamMessage.Type];
                var jsonData = await streamMessage.GetJsonData();
                var domainEvent = JsonConvert.DeserializeObject(jsonData, type) as IDomainEvent;

                domainEvents.Add(domainEvent);
            }
        } while (!readStreamPage.IsEnd);

        var aggregate = (T)Activator.CreateInstance(typeof(T), true);

        aggregate.Load(domainEvents);

        return aggregate;
    }

&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Events Projection&lt;/h5&gt; 
&lt;p&gt;The whole process looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_events_projection.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Special class &lt;code&gt;Subscriptions Manager&lt;/code&gt; subscribes to Events Store (using SQL Store Stream library)&lt;/li&gt; 
 &lt;li&gt;Events Store raises &lt;code&gt;StreamMessageRecievedEvent&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Subscriptions Manager&lt;/code&gt; invokes all projectors&lt;/li&gt; 
 &lt;li&gt;If projector know how to handle given event, it updates particular read model. In current implementation it updates special table in SQL database.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;SubscriptionsManager&lt;/code&gt; class implementation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SubscriptionsManager
{
    private readonly IStreamStore _streamStore;

    public SubscriptionsManager(
        IStreamStore streamStore)
    {
        _streamStore = streamStore;
    }

    public void Start()
    {
        long? actualPosition;

        using (var scope = PaymentsCompositionRoot.BeginLifetimeScope())
        {
            var checkpointStore = scope.Resolve&amp;lt;ICheckpointStore&amp;gt;();

            actualPosition = checkpointStore.GetCheckpoint(SubscriptionCode.All);
        }

        _streamStore.SubscribeToAll(actualPosition, StreamMessageReceived);
    }

    public void Stop()
    {
        _streamStore.Dispose();
    }

    private static async Task StreamMessageReceived(
        IAllStreamSubscription subscription, StreamMessage streamMessage, CancellationToken cancellationToken)
    {
        var type = DomainEventTypeMappings.Dictionary[streamMessage.Type];
        var jsonData = await streamMessage.GetJsonData(cancellationToken);
        var domainEvent = JsonConvert.DeserializeObject(jsonData, type) as IDomainEvent;

        using var scope = PaymentsCompositionRoot.BeginLifetimeScope();

        var projectors = scope.Resolve&amp;lt;IList&amp;lt;IProjector&amp;gt;&amp;gt;();

        var tasks = projectors
            .Select(async projector =&amp;gt;
            {
                await projector.Project(domainEvent);
            });

        await Task.WhenAll(tasks);

        var checkpointStore = scope.Resolve&amp;lt;ICheckpointStore&amp;gt;();
        await checkpointStore.StoreCheckpoint(SubscriptionCode.All, streamMessage.Position);
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example projector:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class SubscriptionDetailsProjector : ProjectorBase, IProjector
{
    private readonly IDbConnection _connection;

    public SubscriptionDetailsProjector(ISqlConnectionFactory sqlConnectionFactory)
    {
        _connection = sqlConnectionFactory.GetOpenConnection();
    }

    public async Task Project(IDomainEvent @event)
    {
        await When((dynamic) @event);
    }

    private async Task When(SubscriptionRenewedDomainEvent subscriptionRenewed)
    {
        var period = SubscriptionPeriod.GetName(subscriptionRenewed.SubscriptionPeriodCode);
        
        await _connection.ExecuteScalarAsync(&quot;UPDATE payments.SubscriptionDetails &quot; +
                                                &quot;SET &quot; +
                                                    &quot;[Status] = @Status, &quot; +
                                                    &quot;[ExpirationDate] = @ExpirationDate, &quot; +
                                                    &quot;[Period] = @Period &quot; +
                                                &quot;WHERE [Id] = @SubscriptionId&quot;,
            new
            {
                subscriptionRenewed.SubscriptionId,
                subscriptionRenewed.Status,
                subscriptionRenewed.ExpirationDate,
                period
            });
    }

    private async Task When(SubscriptionExpiredDomainEvent subscriptionExpired)
    {
        await _connection.ExecuteScalarAsync(&quot;UPDATE payments.SubscriptionDetails &quot; +
                                             &quot;SET &quot; +
                                             &quot;[Status] = @Status &quot; +
                                             &quot;WHERE [Id] = @SubscriptionId&quot;,
            new
            {
                subscriptionExpired.SubscriptionId,
                subscriptionExpired.Status
            });
    }

    private async Task When(SubscriptionCreatedDomainEvent subscriptionCreated)
    {
        var period = SubscriptionPeriod.GetName(subscriptionCreated.SubscriptionPeriodCode);
        
        await _connection.ExecuteScalarAsync(&quot;INSERT INTO payments.SubscriptionDetails &quot; +
                                       &quot;([Id], [Period], [Status], [CountryCode], [ExpirationDate]) &quot; +
                                       &quot;VALUES (@SubscriptionId, @Period, @Status, @CountryCode, @ExpirationDate)&quot;,
            new
            {
                subscriptionCreated.SubscriptionId,
                period,
                subscriptionCreated.Status,
                subscriptionCreated.CountryCode,
                subscriptionCreated.ExpirationDate
            });
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Sample view of Event Store&lt;/h4&gt; 
&lt;p&gt;Sample &lt;em&gt;Event Store&lt;/em&gt; view after execution of SubscriptionLifecycleTests Integration Test which includes following steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Creating Price List&lt;/li&gt; 
 &lt;li&gt;Buying Subscription&lt;/li&gt; 
 &lt;li&gt;Renewing Subscription&lt;/li&gt; 
 &lt;li&gt;Expiring Subscription&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;looks like this (&lt;em&gt;SQL Stream Store&lt;/em&gt; table - &lt;em&gt;payments.Messages&lt;/em&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_event_store_db_sample.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;3.16 Database Change Management&lt;/h3&gt; 
&lt;p&gt;Database change management is accomplished by &lt;em&gt;migrations/transitions&lt;/em&gt; versioning. Additionally, the current state of the database structure is also versioned.&lt;/p&gt; 
&lt;p&gt;Migrations are applied using a simple &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/DatabaseMigrator&quot;&gt;DatabaseMigrator&lt;/a&gt; console application that uses the &lt;a href=&quot;https://dbup.readthedocs.io/en/latest/&quot;&gt;DbUp&lt;/a&gt; library. The current state of the database structure is kept in the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/ssdt/how-to-create-a-new-database-project&quot;&gt;SSDT Database Project&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The database update is performed by running the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;dotnet DatabaseMigrator.dll &quot;connection_string&quot; &quot;scripts_directory_path&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The entire solution is described in detail in the following articles:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamilgrzybek.com/database/database-change-management/&quot;&gt;Database change management&lt;/a&gt; (theory)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamilgrzybek.com/database/using-database-project-and-dbup-for-database-management/&quot;&gt;Using database project and DbUp for database management&lt;/a&gt; (implementation)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.17 Continuous Integration&lt;/h3&gt; 
&lt;h4&gt;Definition&lt;/h4&gt; 
&lt;p&gt;As defined on &lt;a href=&quot;https://martinfowler.com/articles/continuousIntegration.html&quot;&gt;Martin Fowler&#39;s website&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Continuous Integration is a software development practice where members of a team integrate their work frequently, usually each person integrates at least daily - leading to multiple integrations per day. Each integration is verified by an automated build (including test) to detect integration errors as quickly as possible.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;YAML Implementation [OBSOLETE]&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Originally the build was implemented using yaml and GitHub Actions functionality. Currently, the build is implemented with NUKE (see next section). See &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/.github/workflows/buildPipeline.yml&quot;&gt;buildPipeline.yml&lt;/a&gt;&lt;/em&gt; file history.&lt;/p&gt; 
&lt;h5&gt;Pipeline description&lt;/h5&gt; 
&lt;p&gt;CI was implemented using &lt;a href=&quot;https://docs.github.com/en/actions/getting-started-with-github-actions/about-github-actions&quot;&gt;GitHub Actions&lt;/a&gt;. For this purpose, one workflow, which triggers on Pull Request to &lt;em&gt;master&lt;/em&gt; branch or Push to &lt;em&gt;master&lt;/em&gt; branch was created. It contains 2 jobs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;build test, execute Unit Tests and Architecture Tests&lt;/li&gt; 
 &lt;li&gt;execute Integration Tests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ci.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Steps description&lt;/strong&gt;&lt;br&gt; a) Checkout repository - clean checkout of git repository &lt;br&gt; b) Setup .NET - install .NET 8.0 SDK&lt;br&gt; c) Install dependencies - resolve NuGet packages&lt;br&gt; d) Build - build solution&lt;br&gt; e) Run Unit Tests - run automated Unit Tests (see section 3.10)&lt;br&gt; f) Run Architecture Tests - run automated Architecture Tests (see section 3.12)&lt;br&gt; g) Initialize containers - setup Docker container for MS SQL Server&lt;br&gt; h) Wait for SQL Server initialization - after container initialization MS SQL Server is not ready, initialization of server itself takes some time so 30 seconds timeout before execution of next step is needed&lt;br&gt; i) Create Database - create and initialize database&lt;br&gt; j) Migrate Database - execute database upgrade using &lt;em&gt;DatabaseMigrator&lt;/em&gt; application (see 3.16 section)&lt;br&gt; k) Run Integration Tests - perform Integration and System Integration Testing (see section 3.13 and 3.14)&lt;br&gt;&lt;/p&gt; 
&lt;h5&gt;Workflow definition&lt;/h5&gt; 
&lt;p&gt;Workflow definition: &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/.github/workflows/buildPipeline.yml&quot;&gt;buildPipeline.yml&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;Example workflow execution&lt;/h5&gt; 
&lt;p&gt;Example workflow output:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ci_job1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ci_job2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;NUKE&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://nuke.build/&quot;&gt;Nuke&lt;/a&gt; is &lt;em&gt;the cross-platform build automation solution for .NET with C# DSL.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The 2 main advantages of its use over pure yaml defined in GitHub actions are as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You run the same code on local machine and in the build server. See &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/.github/workflows/buildPipeline.yml&quot;&gt;buildPipeline.yml&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;You use C# with all the goodness (debugging, compilation, packages, refactoring and so on)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This is how one of the stage definition looks like (execute Build, Unit Tests, Architecture Tests) &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/build/Build.cs&quot;&gt;Build.cs&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;partial class Build : NukeBuild
{
    /// Support plugins are available for:
    ///   - JetBrains ReSharper        https://nuke.build/resharper
    ///   - JetBrains Rider            https://nuke.build/rider
    ///   - Microsoft VisualStudio     https://nuke.build/visualstudio
    ///   - Microsoft VSCode           https://nuke.build/vscode

    public static int Main () =&amp;gt; Execute&amp;lt;Build&amp;gt;(x =&amp;gt; x.Compile);

    [Parameter(&quot;Configuration to build - Default is &#39;Debug&#39; (local) or &#39;Release&#39; (server)&quot;)]
    readonly Configuration Configuration = IsLocalBuild ? Configuration.Debug : Configuration.Release;

    [Solution] readonly Solution Solution;

    Target Clean =&amp;gt; _ =&amp;gt; _
        .Before(Restore)
        .Executes(() =&amp;gt;
        {
            EnsureCleanDirectory(WorkingDirectory);
        });

    Target Restore =&amp;gt; _ =&amp;gt; _
        .Executes(() =&amp;gt;
        {
            DotNetRestore(s =&amp;gt; s
                .SetProjectFile(Solution));
        });

    Target Compile =&amp;gt; _ =&amp;gt; _
        .DependsOn(Restore)
        .Executes(() =&amp;gt;
        {
            DotNetBuild(s =&amp;gt; s
                .SetProjectFile(Solution)
                .SetConfiguration(Configuration)
                .EnableNoRestore());
        });

    Target UnitTests =&amp;gt; _ =&amp;gt; _
        .DependsOn(Compile)
        .Executes(() =&amp;gt;
        {
            DotNetTest(s =&amp;gt; s
                .SetProjectFile(Solution)
                .SetFilter(&quot;UnitTests&quot;)
                .SetConfiguration(Configuration)
                .EnableNoRestore()
                .EnableNoBuild());
        });

    Target ArchitectureTests =&amp;gt; _ =&amp;gt; _
        .DependsOn(UnitTests)
        .Executes(() =&amp;gt;
        {
            DotNetTest(s =&amp;gt; s
                .SetProjectFile(Solution)
                .SetFilter(&quot;ArchTests&quot;)
                .SetConfiguration(Configuration)
                .EnableNoRestore()
                .EnableNoBuild());
        });

    Target BuildAndUnitTests =&amp;gt; _ =&amp;gt; _
        .Triggers(ArchitectureTests)
        .Executes(() =&amp;gt;
        {
        });
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to see more complex scenario when integration tests are executed (with SQL Server database creation using docker) see &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/build/BuildIntegrationTests.cs&quot;&gt;BuildIntegrationTests.cs&lt;/a&gt; file.&lt;/p&gt; 
&lt;h4&gt;SQL Server database project build&lt;/h4&gt; 
&lt;p&gt;Currently, compilation of database projects is not supported by the .NET Core and dotnet tool. For this reason, the &lt;a href=&quot;https://github.com/rr-wfm/MSBuild.Sdk.SqlProj/&quot;&gt;MSBuild.Sdk.SqlProj&lt;/a&gt; library was used. In order to do that, you need to create .NET standard library, change SDK and create links to scripts folders. Final &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database.Build/CompanyName.MyMeetings.Database.Build.csproj&quot;&gt;database project&lt;/a&gt; looks as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;Project Sdk=&quot;MSBuild.Sdk.SqlProj/1.6.0&quot;&amp;gt;
    &amp;lt;PropertyGroup&amp;gt;
        &amp;lt;TargetFramework&amp;gt;netstandard2.0&amp;lt;/TargetFramework&amp;gt;
    &amp;lt;/PropertyGroup&amp;gt;
    &amp;lt;ItemGroup&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\administration\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\app\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\meetings\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\payments\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\users\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\Security\**\*.sql&quot; /&amp;gt;
    &amp;lt;/ItemGroup&amp;gt;
&amp;lt;/Project&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.18 Static code analysis&lt;/h3&gt; 
&lt;p&gt;In order to standardize the appearance of the code and increase its readability, the &lt;a href=&quot;https://github.com/DotNetAnalyzers/StyleCopAnalyzers&quot;&gt;StyleCopAnalyzers&lt;/a&gt; library was used. This library implements StyleCop rules using the .NET Compiler Platform and is responsible for the static code analysis.&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;Using this library is trivial - it is just added as a NuGet package to all projects. There are many ways to configure rules, but currently the best way to do this is to edit the &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/.editorconfig&quot;&gt;.editorconfig&lt;/a&gt; file. More information can be found at the link above.&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note! Static code analysis works best when the following points are met:&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Each developer has an IDE that respects the rules and helps to follow them&lt;/li&gt; 
 &lt;li&gt;The rules are checked during the project build process as part of Continuous Integration&lt;/li&gt; 
 &lt;li&gt;The rules are set to &lt;em&gt;help your system grow&lt;/em&gt;. &lt;strong&gt;Static analysis is not a value in itself.&lt;/strong&gt; Some rules may not make complete sense and should be turned off. Other rules may have higher priority. It all depends on the project, company standards and people involved in the project. Be pragmatic.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.19 System Under Test SUT&lt;/h3&gt; 
&lt;p&gt;There is always a need to prepare the entire system in a specific state, e.g. for manual, exploratory, UX / UI tests. The fact that the tests are performed manually does not mean that we cannot automate the preparation phase (Given / Arrange). Thanks to the automation of system state preparation (&lt;a href=&quot;https://en.wikipedia.org/wiki/System_under_test&quot;&gt;System Under Test&lt;/a&gt;), we are able to recreate exactly the same state in any environment. In addition, such automation can be used later to automate the entire test (e.g. through an &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#313-integration-tests&quot;&gt;3.13 Integration Tests&lt;/a&gt;).&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;The implementation of such automation based on the use of NUKE and the test framework is presented below. As in the case of integration testing, we use the public API of modules.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/sut-preparation.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Below is a SUT whose task is to go through the whole process - from setting up a &lt;em&gt;Meeting Group&lt;/em&gt;, through its &lt;em&gt;Payment&lt;/em&gt;, adding a new &lt;em&gt;Meeting&lt;/em&gt; and signing up for it by another user.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class CreateMeeting : TestBase
{
    protected override bool PerformDatabaseCleanup =&amp;gt; true;

    [Test]
    public async Task Prepare()
    {
        await UsersFactory.GivenAdmin(
            UserAccessModule,
            &quot;testAdmin@mail.com&quot;,
            &quot;testAdminPass&quot;,
            &quot;Jane Doe&quot;,
            &quot;Jane&quot;,
            &quot;Doe&quot;,
            &quot;testAdmin@mail.com&quot;);

        var userId = await UsersFactory.GivenUser(
            UserAccessModule,
            ConnectionString,
            &quot;adamSmith@mail.com&quot;,
            &quot;adamSmithPass&quot;,
            &quot;Adam&quot;,
            &quot;Smith&quot;,
            &quot;adamSmith@mail.com&quot;);

        ExecutionContextAccessor.SetUserId(userId);

        var meetingGroupId = await MeetingGroupsFactory.GivenMeetingGroup(
            MeetingsModule,
            AdministrationModule,
            ConnectionString,
            &quot;Software Craft&quot;,
            &quot;Group for software craft passionates&quot;,
            &quot;Warsaw&quot;,
            &quot;PL&quot;);

        await TestPriceListManager.AddPriceListItems(PaymentsModule, ConnectionString);

        await TestPaymentsManager.BuySubscription(
            PaymentsModule,
            ExecutionContextAccessor);
        
        SetDate(new DateTime(2022, 7, 1, 10, 0, 0));

        var meetingId = await TestMeetingFactory.GivenMeeting(
            MeetingsModule,
            meetingGroupId,
            &quot;Tactical DDD&quot;,
            new DateTime(2022, 7, 10, 18, 0, 0),
            new DateTime(2022, 7, 10, 20, 0, 0),
            &quot;Meeting about Tactical DDD patterns&quot;,
            &quot;Location Name&quot;,
            &quot;Location Address&quot;,
            &quot;01-755&quot;,
            &quot;Warsaw&quot;,
            50,
            0,
            null,
            null,
            0,
            null,
            new List&amp;lt;Guid&amp;gt;()
        );
        
        var attendeeUserId = await UsersFactory.GivenUser(
            UserAccessModule,
            ConnectionString,
            &quot;rickmorty@mail.com&quot;,
            &quot;rickmortyPass&quot;,
            &quot;Rick&quot;,
            &quot;Morty&quot;,
            &quot;rickmorty@mail.com&quot;);
        
        ExecutionContextAccessor.SetUserId(attendeeUserId);

        await TestMeetingGroupManager.JoinToGroup(MeetingsModule, meetingGroupId);

        await TestMeetingManager.AddAttendee(MeetingsModule, meetingId, guestsNumber: 1);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can create this SUT using following &lt;em&gt;NUKE&lt;/em&gt; target providing connection string and particular test name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt; .\build PrepareSUT --DatabaseConnectionString &quot;connection_string&quot; --SUTTestName CreateMeeting
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.20 Mutation Testing&lt;/h3&gt; 
&lt;h4&gt;Description&lt;/h4&gt; 
&lt;p&gt;Mutation testing is an approach to test and evaluate our existing tests. During mutation testing a special framework modifies pieces of our code and runs our tests. These modifications are called &lt;em&gt;mutations&lt;/em&gt; or &lt;em&gt;mutants&lt;/em&gt;. If a given &lt;em&gt;mutation&lt;/em&gt; does not cause a failure of at least once test, it means that the mutant has &lt;em&gt;survived&lt;/em&gt; so our tests are probably not sufficient.&lt;/p&gt; 
&lt;h4&gt;Example&lt;/h4&gt; 
&lt;p&gt;In this repository, the &lt;a href=&quot;https://stryker-mutator.io/docs/stryker-net/Introduction&quot;&gt;Stryker.NET&lt;/a&gt; framework was used for mutation testing. In the simplest use, after installation, all you need to do is enter the directory of tests that you want to mutate and run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;dotnet stryker
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result of this command is the &lt;em&gt;mutation report file&lt;/em&gt;. Assuming we want to test the unit tests of the Meetings module, such a &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/mutation-tests-reports/mutation-report.html&quot;&gt;report&lt;/a&gt; has been generated. This is its first page:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/mutation_testing_report.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Let us analyze one of the places where the mutant survived. This is the &lt;em&gt;AddNotAttendee&lt;/em&gt; method of the &lt;em&gt;Meeting&lt;/em&gt; class. This method is used to add a &lt;em&gt;Member&lt;/em&gt; to the list of people who have decided not to attend the meeting. According to the logic, if the same person previously indicated that he was going to the &lt;em&gt;Meeting&lt;/em&gt; and later changed his mind, then if there is someone on the &lt;em&gt;Waiting List&lt;/em&gt;, he should be added to the attendees. Based on requirements, this should be the person who signed up on the &lt;em&gt;Waiting List&lt;/em&gt; &lt;strong&gt;first&lt;/strong&gt; (based on &lt;strong&gt;SignUpDate&lt;/strong&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/mutation_testing_example.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;As you can see, the mutation framework changed our sorting in linq query (from default ascending to descending). However, each test was successful, so it means that mutant survived so we don&#39;t have a test that checks the correct sort based on &lt;em&gt;SignUpDate&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;From the example above, one more important thing can be deduced - &lt;strong&gt;code coverage is insufficient&lt;/strong&gt;. In the given example, this code is covered, but our tests do not check the given requirement, therefore our code may have errors. Mutation testing allow to detect such situations. Of course, as with any tool, we should use it wisely, as not every case requires our attention.&lt;/p&gt; 
&lt;h2&gt;4. Technology&lt;/h2&gt; 
&lt;p&gt;List of technologies, frameworks and libraries used for implementation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download&quot;&gt;.NET 8.0&lt;/a&gt; (platform). Note for Visual Studio users: &lt;strong&gt;VS 2019&lt;/strong&gt; is required.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/sql-server/sql-server-editions-express&quot;&gt;MS SQL Server Express&lt;/a&gt; (database)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/ef/core/&quot;&gt;Entity Framework Core 8.0&lt;/a&gt; (ORM Write Model implementation for DDD)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://autofac.org/&quot;&gt;Autofac&lt;/a&gt; (Inversion of Control Container)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://docs.identityserver.io&quot;&gt;IdentityServer4&lt;/a&gt; (Authentication and Authorization)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://serilog.net/&quot;&gt;Serilog&lt;/a&gt; (structured logging)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/khellang/Middleware/tree/master/src/ProblemDetails&quot;&gt;Hellang.Middleware.ProblemDetails&lt;/a&gt; (API Problem Details support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/domaindrivendev/Swashbuckle&quot;&gt;Swashbuckle&lt;/a&gt; (Swagger automated documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/StackExchange/Dapper&quot;&gt;Dapper&lt;/a&gt; (micro ORM for Read Model)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newtonsoft.com/json&quot;&gt;Newtonsoft.Json&lt;/a&gt; (serialization/deserialization to/from JSON)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.quartz-scheduler.net/&quot;&gt;Quartz.NET&lt;/a&gt; (background processing)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fluentvalidation.net/&quot;&gt;FluentValidation&lt;/a&gt; (data validation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jbogard/MediatR&quot;&gt;MediatR&lt;/a&gt; (mediator implementation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getpostman.com/&quot;&gt;Postman&lt;/a&gt; (API tests)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nunit.org/&quot;&gt;NUnit&lt;/a&gt; (Testing framework)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nsubstitute.github.io/&quot;&gt;NSubstitute&lt;/a&gt; (Testing isolation framework)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.visual-paradigm.com/download/community.jsp&quot;&gt;Visual Paradigm Community Edition&lt;/a&gt; (CASE tool for modeling and documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BenMorris/NetArchTest&quot;&gt;NetArchTest&lt;/a&gt; (Architecture Unit Tests library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/App-vNext/Polly&quot;&gt;Polly&lt;/a&gt; (Resilience and transient-fault-handling library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SQLStreamStore&quot;&gt;SQL Stream Store&lt;/a&gt; (Library to assist with Event Sourcing)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dbup.readthedocs.io/en/latest/&quot;&gt;DbUp&lt;/a&gt; (Database migrations deployment)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/ssdt/how-to-create-a-new-database-project&quot;&gt;SSDT Database Project&lt;/a&gt; (Database structure versioning)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/actions&quot;&gt;GitHub Actions&lt;/a&gt; (Continuous Integration workflows implementation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DotNetAnalyzers/StyleCopAnalyzers&quot;&gt;StyleCopAnalyzers&lt;/a&gt; (Static code analysis library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://plantuml.com&quot;&gt;PlantUML&lt;/a&gt; (UML diagrams from textual description, diagrams as text)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://c4model.com/&quot;&gt;C4 Model&lt;/a&gt; (Model for visualising software architecture)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/plantuml-stdlib/C4-PlantUML&quot;&gt;C4-PlantUML&lt;/a&gt; (C4 Model for PlantUML plugin)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nuke.build/&quot;&gt;NUKE&lt;/a&gt; (Build automation system)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rr-wfm/MSBuild.Sdk.SqlProj/&quot;&gt;MSBuild.Sdk.SqlProj&lt;/a&gt; (Database project compilation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stryker-mutator.io/docs/stryker-net/Introduction&quot;&gt;Stryker.NET&lt;/a&gt; (Mutation Testing framework)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;5. How to Run&lt;/h2&gt; 
&lt;h3&gt;Install .NET 8.0 SDK&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&quot;&gt;Download&lt;/a&gt; and install .NET 8.0 SDK&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Create database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and install MS SQL Server Express or other&lt;/li&gt; 
 &lt;li&gt;Create an empty database using &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/CreateDatabase_Windows.sql&quot;&gt;CreateDatabase_Windows.sql&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/CreateDatabase_Linux.sql&quot;&gt;CreateDatabase_Linux.sql&lt;/a&gt;. Script adds &lt;strong&gt;app&lt;/strong&gt; schema which is needed for migrations journal table. Change database file path if needed.&lt;/li&gt; 
 &lt;li&gt;Run database migrations using &lt;strong&gt;MigrateDatabase&lt;/strong&gt; NUKE target by executing the build.sh script present in the root folder:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;.\build MigrateDatabase --DatabaseConnectionString &quot;connection_string&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&quot;connection_string&quot;&lt;/em&gt; - connection string to your database&lt;/p&gt; 
&lt;h3&gt;Seed database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Execute &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/SeedDatabase.sql&quot;&gt;SeedDatabase.sql&lt;/a&gt; script&lt;/li&gt; 
 &lt;li&gt;2 test users will be created - check the script for usernames and passwords&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configure connection string&lt;/h3&gt; 
&lt;p&gt;Set a database connection string called &lt;code&gt;MeetingsConnectionString&lt;/code&gt; in the root of the API project&#39;s appsettings.json or use &lt;a href=&quot;https://blogs.msdn.microsoft.com/mihansen/2017/09/10/managing-secrets-in-net-core-2-0-apps/&quot;&gt;Secrets&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Example config setting in appsettings.json for a database called &lt;code&gt;MyMeetings&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
 &quot;MeetingsConnectionString&quot;: &quot;Server=(localdb)\\mssqllocaldb;Database=MyMeetings;Trusted_Connection=True;&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure startup in IDE&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set the Startup Item in your IDE to the API Project, not IIS Express&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Authenticate&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Once it is running you&#39;ll need a token to make API calls. This is done via OAuth2 &lt;a href=&quot;https://www.oauth.com/oauth2-servers/access-tokens/password-grant/&quot;&gt;Resource Owner Password Grant Type&lt;/a&gt;. By default IdentityServer is configured with the following:&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client_id = ro.client&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client_secret = secret&lt;/code&gt; &lt;strong&gt;(this is literally the value - not a statement that this value is secret!)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;scope = myMeetingsAPI openid profile&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;grant_type = password&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Include the credentials of a test user created in the &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/SeedDatabase.sql&quot;&gt;SeedDatabase.sql&lt;/a&gt; script - for example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;username = testMember@mail.com&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;password = testMemberPass&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Example HTTP Request for an Access Token:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-http&quot;&gt;POST /connect/token HTTP/1.1
Host: localhost:5000
 
grant_type=password
&amp;amp;username=testMember@mail.com
&amp;amp;password=testMemberPass
&amp;amp;client_id=ro.client
&amp;amp;client_secret=secret
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will fetch an access token for this user to make authorized API requests using the HTTP request header &lt;code&gt;Authorization: Bearer &amp;lt;access_token&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you use a tool such as Postman to test your API, the token can be fetched and stored within the tool itself and appended to all API calls. Check your tool documentation for instructions.&lt;/p&gt; 
&lt;h3&gt;Run using Docker Compose&lt;/h3&gt; 
&lt;p&gt;You can run whole application using &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;docker compose&lt;/a&gt; from root folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It will create following services: &lt;br&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MS SQL Server Database&lt;/li&gt; 
 &lt;li&gt;Database Migrator&lt;/li&gt; 
 &lt;li&gt;Application&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run Integration Tests in Docker&lt;/h3&gt; 
&lt;p&gt;You can run all Integration Tests in Docker (exactly the same process is executed on CI) using &lt;strong&gt;RunAllIntegrationTests&lt;/strong&gt; NUKE target:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;.\build RunAllIntegrationTests
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;6. Contribution&lt;/h2&gt; 
&lt;p&gt;This project is still under analysis and development. I assume its maintenance for a long time and I would appreciate your contribution to it. Please let me know by creating an Issue or Pull Request.&lt;/p&gt; 
&lt;h2&gt;7. Roadmap&lt;/h2&gt; 
&lt;p&gt;List of features/tasks/approaches to add:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Release date&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Domain Model Unit Tests&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2019-09-10&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Architecture Decision Log update&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2019-11-09&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Integration automated tests&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-02-24&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Migration to .NET Core 3.1&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-03-04&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;System Integration Testing&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-03-28&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;More advanced Payments module&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-07-11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Event Sourcing implementation&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-07-11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Database Change Management&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-08-23&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Continuous Integration&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-09-01&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;StyleCop Static Code Analysis&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-09-05&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FrontEnd SPA application&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-11-08&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docker support&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-11-26&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PlantUML Conceptual Model&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-03-22&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;C4 Model&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-03-29&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Meeting comments feature&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-03-30&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NUKE build automation&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-06-15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Database project compilation on CI&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-06-15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;System Under Test implementation&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2022-07-17&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mutation Testing&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2022-08-23&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Migration to .NET 8.0&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2023-12-09&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;NOTE: Please don&#39;t hesitate to suggest something else or a change to the existing code. All proposals will be considered.&lt;/p&gt; 
&lt;h2&gt;8. Authors&lt;/h2&gt; 
&lt;p&gt;Kamil Grzybek&lt;/p&gt; 
&lt;p&gt;Blog: &lt;a href=&quot;https://kamilgrzybek.com&quot;&gt;https://kamilgrzybek.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Twitter: &lt;a href=&quot;https://twitter.com/kamgrzybek&quot;&gt;https://twitter.com/kamgrzybek&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;LinkedIn: &lt;a href=&quot;https://www.linkedin.com/in/kamilgrzybek/&quot;&gt;https://www.linkedin.com/in/kamilgrzybek/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;GitHub: &lt;a href=&quot;https://github.com/kgrzybek&quot;&gt;https://github.com/kgrzybek&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;8.1 Main contributors&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndreiGanichev&quot;&gt;Andrei Ganichev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bistok&quot;&gt;Bela Istok&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlmarAubel&quot;&gt;Almar Aubel&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;9. License&lt;/h2&gt; 
&lt;p&gt;The project is under &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;10. Inspirations and Recommendations&lt;/h2&gt; 
&lt;h3&gt;Modular Monolith&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamilgrzybek.com/design/modular-monolith-primer/&quot;&gt;&quot;Modular Monolith: A Primer&quot;&lt;/a&gt; Modular Monolith architecture article series, Kamil Grzybek&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=njDSXUWeik0&quot;&gt;&quot;Modular Monolith Architecture: One to rule them all&quot;&lt;/a&gt; presentation, Kamil Grzybek&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5OjqD-ow8GE&quot;&gt;&quot;Modular Monoliths&quot;&lt;/a&gt; presentation, Simon Brown&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BOvxJaklcr0&quot;&gt;&quot;Majestic Modular Monoliths&quot;&lt;/a&gt; presentation, Axel Fontaine&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/olivergierke/building-better-monoliths-modulithic-applications-with-spring-boot-cd16e6ec-d334-497d-b9f6-3f92d5db035a&quot;&gt;&quot;Building Better Monoliths – Modulithic Applications with Spring Boot&quot;&lt;/a&gt; slides, Oliver Drotbohm&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/bliki/MonolithFirst.html&quot;&gt;&quot;MonolithFirst&quot;&lt;/a&gt; article, Martin Fowler&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://microservices.io/patterns/monolithic.html&quot;&gt;&quot;Pattern: Monolithic Architecture&quot;&lt;/a&gt; pattern description, Chris Richardson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Domain-Driven Design&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215&quot;&gt;&quot;Domain-Driven Design: Tackling Complexity in the Heart of Software&quot;&lt;/a&gt; book, Eric Evans&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Implementing-Domain-Driven-Design-Vaughn-Vernon/dp/0321834577&quot;&gt;&quot;Implementing Domain-Driven Design&quot;&lt;/a&gt; book, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/dp/0134434420&quot;&gt;&quot;Domain-Driven Design Distilled&quot;&lt;/a&gt; book, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design-ebook/dp/B00XLYUA0W&quot;&gt;&quot;Patterns, Principles, and Practices of Domain-Driven Design&quot;&lt;/a&gt; book, Scott Millett, Nick Tune&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Secure-Design-Daniel-Deogun/dp/1617294357&quot;&gt;&quot;Secure By Design&quot;&lt;/a&gt; book, Daniel Deogun, Dan Bergh Johnsson, Daniel Sawano&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Hands-Domain-Driven-Design-NET-ebook/dp/B07C5WSR9B&quot;&gt;&quot;Hands-On Domain-Driven Design with .NET Core: Tackling complexity in the heart of software by putting DDD principles into practice&quot;&lt;/a&gt; book, Alexey Zimarev&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB&quot;&gt;&quot;Domain Modeling Made Functional: Tackle Software Complexity with Domain-Driven Design and F#&quot;&lt;/a&gt; book, Scott Wlaschin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ddd-by-examples/library&quot;&gt;&quot;DDD by examples - library&quot;&lt;/a&gt; GH repository, Jakub Pilimon, Bartłomiej Słota&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VaughnVernon/IDDD_Samples&quot;&gt;&quot;IDDD_Samples&quot;&lt;/a&gt; GH repository, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VaughnVernon/IDDD_Samples_NET&quot;&gt;&quot;IDDD_Samples_NET&quot;&lt;/a&gt; GH repository, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/heynickc/awesome-ddd&quot;&gt;&quot;Awesome Domain-Driven Design&quot;&lt;/a&gt; GH repository, Nick Chamberlain&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Application Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/books/eaa.html&quot;&gt;&quot;Patterns of Enterprise Application Architecture&quot;&lt;/a&gt; book, Martin Fowler&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/dependency-injection-principles-practices-patterns&quot;&gt;&quot;Dependency Injection Principles, Practices, and Patterns&quot;&lt;/a&gt; book, Steven van Deursen, Mark Seemann&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Clean-Architecture-Craftsmans-Software-Structure/dp/0134494164&quot;&gt;&quot;Clean Architecture: A Craftsman&#39;s Guide to Software Structure and Design (Robert C. Martin Series&quot;&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&quot;&gt;&quot;The Clean Architecture&quot;&lt;/a&gt; article, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jeffreypalermo.com/2008/07/the-onion-architecture-part-1/&quot;&gt;&quot;The Onion Architecture&quot;&lt;/a&gt; article series, Jeffrey Palermo&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20180822100852/http://alistair.cockburn.us/Hexagonal+architecture&quot;&gt;&quot;Hexagonal/Ports &amp;amp; Adapters Architecture&quot;&lt;/a&gt; article, Alistair Cockburn&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://herbertograca.com/2017/11/16/explicit-architecture-01-ddd-hexagonal-onion-clean-cqrs-how-i-put-it-all-together/&quot;&gt;&quot;DDD, Hexagonal, Onion, Clean, CQRS, … How I put it all together&quot;&lt;/a&gt; article, Herberto Graca&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Software Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Software-Architecture-Practice-3rd-Engineering/dp/0321815734&quot;&gt;&quot;Software Architecture in Practice (3rd Edition)&quot;&lt;/a&gt; book, Len Bass, Paul Clements, Rick Kazman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://softwarearchitecturefordevelopers.com/&quot;&gt;&quot;Software Architecture for Developers Vol 1 &amp;amp; 2&quot;&lt;/a&gt; book, Simon Brown&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Just-Enough-Software-Architecture-Risk-Driven/dp/0984618104&quot;&gt;&quot;Just Enough Software Architecture: A Risk-Driven Approach&quot;&lt;/a&gt; book, George H. Fairbanks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Software-Systems-Architecture-Stakeholders-Perspectives/dp/032171833X/&quot;&gt;&quot;Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives (2nd Edition)&quot;&lt;/a&gt; book, Nick Rozanski, Eóin Woods&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Design-Programmer-Architect-Pragmatic-Programmers/dp/1680502093&quot;&gt;&quot;Design It!: From Programmer to Software Architect (The Pragmatic Programmers)&quot;&lt;/a&gt; book, Michael Keeling&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;System Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.enterpriseintegrationpatterns.com/&quot;&gt;&quot;Enterprise Integration Patterns : Designing, Building, and Deploying Messaging Solutions&quot;&lt;/a&gt; book and catalogue, Gregor Hohpe, Bobby Woolf&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Designing-Data-Intensive-Applications-Reliable-Maintainable/dp/1449373321&quot;&gt;&quot;Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems &quot;&lt;/a&gt; book, Martin Kleppman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Building-Evolutionary-Architectures-Support-Constant/dp/1491986360&quot;&gt;&quot;Building Evolutionary Architectures: Support Constant Change&quot;&lt;/a&gt; book, Neal Ford&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Building-Microservices-Designing-Fine-Grained-Systems/dp/1491950358&quot;&gt;&quot;Building Microservices: Designing Fine-Grained Systems&quot;&lt;/a&gt; book, Sam Newman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Design&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672&quot;&gt;&quot;Refactoring: Improving the Design of Existing Code&quot;&lt;/a&gt; book, Martin Fowler, Kent Beck, John Brant, William Opdyke, Don Roberts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot;&gt;&quot;Clean Code: A Handbook of Agile Software Craftsmanship&quot;&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Agile-Principles-Patterns-Practices-C/dp/0131857258&quot;&gt;&quot;Agile Principles, Patterns, and Practices in C#&quot;&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Applying-UML-Patterns-Introduction-Object-Oriented/dp/0131489062&quot;&gt;&quot;Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development (3rd Edition)&quot;&lt;/a&gt; book, Craig Larman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052&quot;&gt;&quot;Working Effectively with Legacy Code&quot;&lt;/a&gt; book, Michael Feathers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670&quot;&gt;&quot;Code Complete: A Practical Handbook of Software Construction, Second Edition&quot;&lt;/a&gt; book, Steve McConnell&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612&quot;&gt;&quot;Design Patterns: Elements of Reusable Object-Oriented Software&quot;&lt;/a&gt; book, Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Craftsmanship&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073&quot;&gt;&quot;The Clean Coder: A Code of Conduct for Professional Programmers&quot;&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X&quot;&gt;&quot;The Pragmatic Programmer: From Journeyman to Master&quot;&lt;/a&gt; book, Andrew Hunt&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Art-Unit-Testing-examples/dp/1617290890&quot;&gt;&quot;The Art of Unit Testing: with examples in C#&quot;&lt;/a&gt; book, Roy Osherove&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit&quot;&gt;&quot;Unit Test Your Architecture with ArchUnit&quot;&lt;/a&gt; article, Jonas Havers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Unit-Testing-Principles-Practices-Patterns/dp/1617296279&quot;&gt;&quot;Unit Testing Principles, Practices, and Patterns&quot;&lt;/a&gt; book, Vladimir Khorikov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Growing-Object-Oriented-Software-Guided-Tests/dp/0321503627&quot;&gt;&quot;Growing Object-Oriented Software, Guided by Tests&quot;&lt;/a&gt; book, Steve Freeman, Nat Pryce&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamilgrzybek.com/blog/series/automated-tests&quot;&gt;Automated Tests&lt;/a&gt; article series, Kamil Grzybek&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;UML&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/UML-Distilled-Standard-Modeling-Language/dp/0321193687&quot;&gt;&quot;UML Distilled: A Brief Guide to the Standard Object Modeling Language (3rd Edition)&quot;&lt;/a&gt; book, Martin Fowler&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Event Storming&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leanpub.com/introducing_eventstorming&quot;&gt;&quot;Introducing EventStorming&quot;&lt;/a&gt; book, Alberto Brandolini&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mariuszgil/awesome-eventstorming&quot;&gt;&quot;Awesome EventStorming&quot;&lt;/a&gt; GH repository, Mariusz Gil&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Event Sourcing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Hands-Domain-Driven-Design-NET-ebook/dp/B07C5WSR9B&quot;&gt;&quot;Hands-On Domain-Driven Design with .NET Core: Tackling complexity in the heart of software by putting DDD principles into practice&quot;&lt;/a&gt; book, Alexey Zimarev&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leanpub.com/esversioning&quot;&gt;&quot;Versioning in an Event Sourced System&quot;&lt;/a&gt; book, Greg Young&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PacktPublishing/Hands-On-Domain-Driven-Design-with-.NET-Core&quot;&gt;Hands-On-Domain-Driven-Design-with-.NET-Core&lt;/a&gt; GH repository, Alexey Zimarev&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oskardudycz/EventSourcing.NetCore&quot;&gt;EventSourcing.NetCore&lt;/a&gt; GH repository, Oskar Dudycz&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>rocksdanister/lively</title>
      <link>https://github.com/rocksdanister/lively</link>
      <description>&lt;p&gt;Free and open-source software that allows users to set animated desktop wallpapers and screensavers powered by WinUI 3.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Files Logo&quot; src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/figma_promo_16x9.jpg&quot; width=&quot;450&quot;&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;Lively Wallpaper&lt;/h2&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/rocksdanister/lively/all.svg?sanitize=true&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rocksdanister/lively/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/rocksdanister/lively/total.svg?sanitize=true&quot; alt=&quot;Github all releases&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rocksdanister/lively/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/rocksdanister/lively.svg?sanitize=true&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rocksdanister/lively/wiki&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Docs-WIP-red.svg?sanitize=true&quot; alt=&quot;Documentation&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rocksdanister/lively/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/rocksdanister/lively.svg?sanitize=true&quot; alt=&quot;Issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://crowdin.com/project/lively-wallpaper&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/lively-wallpaper/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#download&quot;&gt;Download&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#support&quot;&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/main_preview.gif&quot; width=&quot;600&quot; height=&quot;338&quot;&gt; 
&lt;p&gt;Animated desktop wallpapers, bring your desktop to life!&lt;/p&gt; 
&lt;h4&gt;Join Discussions:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/LivelyWallpaper/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/discussions/&quot;&gt;Github&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Wait a sec, preview gif clips take some time to load.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Types Of Wallpapers&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Wallpaper&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
   &lt;th&gt;Interactive&lt;/th&gt; 
   &lt;th&gt;Resolution&lt;/th&gt; 
   &lt;th&gt;Performance&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Video/GIF&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/wallpaper_video.gif&quot; width=&quot;256&quot; height=&quot;144&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://www.pexels.com/video/blue-texture-abstract-leaves-7710243/&quot;&gt;Video&lt;/a&gt; by Rostislav Uzunov&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Fixed&lt;/td&gt; 
   &lt;td&gt;Fixed&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Webpage&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/wallpaper_html.gif&quot; width=&quot;256&quot; height=&quot;144&quot;&gt;&lt;br&gt;&lt;a href=&quot;http://louie.co.nz/25th_hour/&quot;&gt; 25th Hour&lt;/a&gt; by Loius Coyle&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Variable&lt;/td&gt; 
   &lt;td&gt;Variable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Application/Games&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/wallpaper_emulator.gif&quot; width=&quot;256&quot; height=&quot;144&quot;&gt;&lt;br&gt;Run Unity or Godot games as wallpaper&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Variable&lt;/td&gt; 
   &lt;td&gt;Variable&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Screensavers&lt;/h4&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/screen_saver.gif&quot; width=&quot;600&quot; height=&quot;338&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lively supports Windows screensaver.&lt;/li&gt; 
 &lt;li&gt;Any wallpaper can be used as screensaver.&lt;/li&gt; 
 &lt;li&gt;Multiple monitor supported.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Screen-Saver&quot;&gt;Learn more..&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Automation&lt;/h4&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/rotary_demo.gif&quot; width=&quot;600&quot; height=&quot;338&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lively can be controlled with command line arguments from terminal.&lt;/li&gt; 
 &lt;li&gt;Integrate with other languages like Python or scripting software AutoHotKey.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Command-Line-Controls&quot;&gt;Learn more..&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Lively API&lt;/h4&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/music_api.gif&quot; width=&quot;600&quot; height=&quot;338&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Powerful set of API for developers to create interactive wallpapers.&lt;/li&gt; 
 &lt;li&gt;Get hardware readings, audio graph, music information..&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/API&quot;&gt;Learn more..&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Machine Learning&lt;/h4&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/wallpaper_depth.gif&quot; width=&quot;600&quot; height=&quot;338&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Leverage Machine Learning inference to create dynamic wallpapers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Machine-Learning&quot;&gt;Learn more..&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;More Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimal webpage renderer powered by chromium.&lt;/li&gt; 
 &lt;li&gt;Hardware accelerated video playback using mpv/vlc player with customizable video filters.&lt;/li&gt; 
 &lt;li&gt;Easy to use; Just drag&#39;n&#39;drop media or webpages into lively to set as wallpaper.&lt;/li&gt; 
 &lt;li&gt;Latest Windows 11 design using WinUI 3 + WindowsAppSDK framework.&lt;/li&gt; 
 &lt;li&gt;Efficient, Lively is native application designed for Windows.&lt;/li&gt; 
 &lt;li&gt;Fully opensource &amp;amp; free; no blackmagic, no features behind paywall.&lt;/li&gt; 
 &lt;li&gt;Shadertoy.com urls are supported as wallpaper.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Performance&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Wallpaper playback pauses when fullscreen application/games run on the machine (~0% cpu, gpu usage).&lt;/li&gt; 
 &lt;li&gt;Set wallpaper playback rules based on running foreground application.&lt;/li&gt; 
 &lt;li&gt;Can be set to pause wallpaper when running on battery power (laptops.)&lt;/li&gt; 
 &lt;li&gt;Wallpaper automatically pauses when running remote desktop session.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Lively is not officially affiliated with Unity technologies, godot, shadertoy;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;h5&gt;Microsoft Store (Windows 10 1809 or above)&lt;/h5&gt; 
&lt;p&gt;&lt;a href=&quot;https://apps.microsoft.com/store/detail/9NTM2QC6QWS7&quot;&gt;&lt;img src=&quot;https://get.microsoft.com/images/en-us%20dark.svg?sanitize=true&quot; alt=&quot;Get it from Microsoft&quot; width=&quot;142px&quot; height=&quot;52px&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/releases/latest&quot;&gt;Installer (Windows 10 1903 or above)&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Installer may give Smartscreen warning, &lt;a href=&quot;https://github.com/rocksdanister/lively/issues/9&quot;&gt;discussion.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Differences-Between-Distributions&quot;&gt;Which version do I download?&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Are you a Lively fan and want to help out? here are some options..&lt;/p&gt; 
&lt;h4&gt;Programmer&lt;/h4&gt; 
&lt;p&gt;Code contributions are welcome, &lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Contributing-Guidelines&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Designer&lt;/h4&gt; 
&lt;p&gt;Help improve UI/UX of Lively, &lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Contributing-Guidelines&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Localization&lt;/h4&gt; 
&lt;p&gt;Help translate Lively to more languages, &lt;a href=&quot;https://github.com/rocksdanister/lively-translations&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Suggestions &amp;amp; Bug report&lt;/h4&gt; 
&lt;p&gt;Suggest new features or file bug reports to improve Lively, &lt;a href=&quot;https://github.com/rocksdanister/lively/issues&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Patreon&lt;/h4&gt; 
&lt;p&gt;Financially support Lively by become a patreon member and get your name listed in-app, &lt;a href=&quot;https://patreon.com/rocksdanister&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Spread the word&lt;/h4&gt; 
&lt;p&gt;Star this repository, leave a Microsoft store review or tell your friend.. any help is welcome :)&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Lively is licensed under &lt;a href=&quot;https://github.com/rocksdanister/lively/raw/core-separation/LICENSE&quot;&gt;GPL-v3.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>marticliment/UniGetUI</title>
      <link>https://github.com/marticliment/UniGetUI</link>
      <description>&lt;p&gt;UniGetUI: The Graphical Interface for your package managers. Could be terribly described as a package manager manager to manage your package managers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/icon.png&quot; height=&quot;40&quot;&gt;UniGetUI (formerly WingetUI)&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/releases/latest/download/UniGetUI.Installer.exe&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/marticliment/UniGetUI/3.1.6/total?style=for-the-badge&quot; alt=&quot;Downloads@latest&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/marticliment/UniGetUI/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/marticliment/UniGetUI?style=for-the-badge&quot; alt=&quot;Release Version Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/marticliment/UniGetUI/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/marticliment/UniGetUI?style=for-the-badge&quot; alt=&quot;Issues Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/marticliment/UniGetUI/issues?q=is%3Aissue+is%3Aclosed&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-closed/marticliment/UniGetUI?color=%238256d0&amp;amp;style=for-the-badge&quot; alt=&quot;Closed Issues Badge&quot;&gt;&lt;/a&gt;&lt;br&gt; The main goal of this project is to create an intuitive GUI for the most common CLI package managers for Windows 10 and 11, such as &lt;a href=&quot;https://learn.microsoft.com/en-us/windows/package-manager/&quot;&gt;WinGet&lt;/a&gt;, &lt;a href=&quot;https://scoop.sh/&quot;&gt;Scoop&lt;/a&gt;, &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/&quot;&gt;Pip&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;Npm&lt;/a&gt;, &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-tool-install&quot;&gt;.NET Tool&lt;/a&gt;, &lt;a href=&quot;https://www.powershellgallery.com/&quot;&gt;PowerShell Gallery&lt;/a&gt; and more (Check out the package manager compatibility table)!. With this app, you can easily download, install, update, and uninstall any software published on the supported package managers — and much more!&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#supported-package-managers&quot;&gt;Supported Package Managers Table&lt;/a&gt; for more details!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This project has no connection with any supported package managers — it&#39;s completely unofficial. Be aware that I, the developer of UniGetUI, am NOT responsible for the downloaded software. Proceed with caution&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fmarticliment.com%2Fresources%2Fbadges%2Fdev-status.json&quot; alt=&quot;Endpoint Badge&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/marticliment/WingetUI/dotnet-test.yml?branch=main&amp;amp;style=for-the-badge&amp;amp;label=Tests&quot; alt=&quot;GitHub Actions Workflow Status&quot;&gt;&lt;br&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] &lt;strong&gt;The OFFICIAL website for UniGetUI is &lt;a href=&quot;https://www.marticliment.com/unigetui/&quot;&gt;https://www.marticliment.com/unigetui/&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;Any other website should be considered unofficial, despite what they may say.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Support the developer&lt;/h2&gt; 
&lt;p&gt;It really does make a big difference, and is very much appreciated. Thanks :)&lt;br&gt; &lt;a href=&quot;https://ko-fi.com/P5P86KKPB&quot;&gt;&lt;img src=&quot;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&quot; alt=&quot;ko-fi&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.marticliment.com/unigetui/&quot;&gt;UniGetUI Homepage&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#table-of-contents&quot;&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#update-UniGetUI&quot;&gt;Update UniGetUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#support-the-developer&quot;&gt;Support the developer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#features&quot;&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#supported-package-managers&quot;&gt;Supported Package Managers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#translating-UniGetUI-to-other-languages&quot;&gt;Translating UniGetUI&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#currently-supported-languages&quot;&gt;Currently supported languages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#screenshots&quot;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#frequently-asked-questions&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/raw/main/cli-arguments.md&quot;&gt;Command-line Arguments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://hellogithub.com/repository/46bec642537f449a857215e39a1d64ae&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=46bec642537f449a857215e39a1d64ae&amp;amp;claim_uid=u6sFoX4hC2HztbD&amp;amp;theme=small&quot; alt=&quot;Featured｜HelloGitHub&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;There are multiple ways to install UniGetUI — choose whichever one you prefer!&lt;/p&gt; 
&lt;h3&gt;Microsoft Store installation (recommended)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://apps.microsoft.com/detail/xpfftq032ptphf&quot;&gt;&lt;img alt=&quot;alt_text&quot; width=&quot;240px&quot; src=&quot;https://get.microsoft.com/images/en-us%20dark.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Download UniGetUI installer:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/marticliment/UniGetUI?style=for-the-badge&quot; alt=&quot;GitHub Release&quot;&gt;&lt;/p&gt; 
&lt;p align=&quot;left&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/releases/latest/download/WingetUI.Installer.exe&quot;&gt;Click here to download UniGetUI&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; 
&lt;h3&gt;Install UniGetUI via WinGet:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/winget/v/MartiCliment.UniGetUI?style=for-the-badge&quot; alt=&quot;WinGet Package Version&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;winget install --exact --id MartiCliment.UniGetUI --source winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install UniGetUI via Scoop:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/scoop/v/unigetui?bucket=extras&amp;amp;style=for-the-badge&quot; alt=&quot;Scoop version&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;scoop bucket add extras
scoop install extras/unigetui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install UniGetUI via Chocolatey:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/chocolatey/v/wingetui?style=for-the-badge&quot; alt=&quot;Chocolatey Version&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;choco install wingetui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Update UniGetUI&lt;/h2&gt; 
&lt;p&gt;UniGetUI has a built-in autoupdater. However, it can also be updated like any other package within UniGetUI (since UniGetUI is available from WinGet, Scoop and Chocolatey).&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install, update, and remove software from your system easily at one click: UniGetUI combines the packages from the most used package managers for windows: Winget, Chocolatey, Scoop, Pip, Npm and .NET Tool.&lt;/li&gt; 
 &lt;li&gt;Discover new packages and filter them to easily find the package you want.&lt;/li&gt; 
 &lt;li&gt;View detailed metadata about any package before installing it. Get the direct download URL or the name of the publisher, as well as the size of the download.&lt;/li&gt; 
 &lt;li&gt;Easily bulk-install, update, or uninstall multiple packages at once selecting multiple packages before performing an operation&lt;/li&gt; 
 &lt;li&gt;Automatically update packages, or be notified when updates become available. Skip versions or completely ignore updates on a per-package basis.&lt;/li&gt; 
 &lt;li&gt;Manage your available updates at the touch of a button from the &lt;strong&gt;Widgets pane&lt;/strong&gt; or from &lt;strong&gt;Dev Home&lt;/strong&gt; pane with &lt;a href=&quot;https://apps.microsoft.com/detail/9NB9M5KZ8SLX&quot;&gt;Widgets for UniGetUI&lt;/a&gt;*.&lt;/li&gt; 
 &lt;li&gt;The system tray icon will also show the available updates and installed packages, to efficiently update a program or remove a package from your system.&lt;/li&gt; 
 &lt;li&gt;Easily customize how and where packages are installed. Select different installation options and switches for each package. Install an older version or force to install a 32 bit architecture. [But don&#39;t worry, those options will be saved for future updates for this package*]&lt;/li&gt; 
 &lt;li&gt;Share packages with your friends to show them off that program you found. Here is an example: &lt;a href=&quot;https://marticliment.com/unigetui/share/?pname=Google%20Chrome&amp;amp;pid=Google.Chrome&amp;amp;psource=Winget:%20winget&quot;&gt;Hey @friend, Check out this program!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Export custom lists of packages to then import them to another machine and install those packages with previously specified, custom installation parameters. Setting up machines or configuring a specific software setup has never been easier.&lt;/li&gt; 
 &lt;li&gt;Backup your packages to a local file to easily recover your setup in a matter of seconds when migrating to a new machine*&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Package Managers&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; All package managers do support basic install, update, and uninstall processes, as well as checking for updates, finding new packages, and retrieving details from a package.&lt;/p&gt; 
&lt;img src=&quot;https://marticliment.com/unigetui/extra/supported-managers.svg?sanitize=true&quot;&gt; 
&lt;p&gt;✅: Supported on UniGetUI&lt;br&gt; ☑️: Not directly supported but can be easily achieved&lt;br&gt; ⚠️: May not work in some cases&lt;br&gt; ❌: Not supported by the Package Manager&lt;br&gt; &lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Translating UniGetUI to other languages&lt;/h1&gt; 
&lt;p&gt;To translate UniGetUI to other languages or to update an old translation, please see &lt;a href=&quot;https://github.com/marticliment/UniGetUI/wiki#translating-wingetui&quot;&gt;Translating UniGetUI - UniGetUI Wiki&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;Currently Supported languages&lt;/h2&gt; 
&lt;!-- Autogenerated translations --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Language&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Translated&lt;/th&gt; 
   &lt;th&gt;Translator(s)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/sa.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Arabic - عربي‎&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;90%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Abdu11ahAS&quot;&gt;Abdu11ahAS&lt;/a&gt;, &lt;a href=&quot;https://github.com/Abdullah-Dev115&quot;&gt;Abdullah-Dev115&lt;/a&gt;, &lt;a href=&quot;https://github.com/bassuny3003&quot;&gt;bassuny3003&lt;/a&gt;, &lt;a href=&quot;https://github.com/DaRandomCube&quot;&gt;DaRandomCube&lt;/a&gt;, &lt;a href=&quot;https://github.com/FancyCookin&quot;&gt;FancyCookin&lt;/a&gt;, &lt;a href=&quot;https://github.com/mo9a7i&quot;&gt;mo9a7i&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/bg.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Bulgarian - български&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;47%&lt;/td&gt; 
   &lt;td&gt;Vasil Kolev&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/bd.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Bangla - বাংলা&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;72%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/fluentmoheshwar&quot;&gt;fluentmoheshwar&lt;/a&gt;, &lt;a href=&quot;https://github.com/itz-rj-here&quot;&gt;itz-rj-here&lt;/a&gt;, Mushfiq Iqbal Rayon, Nilavra Bhattacharya, &lt;a href=&quot;https://github.com/samiulislamsharan&quot;&gt;samiulislamsharan&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ad.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Catalan - Català&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/cz.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Czech - Čeština&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/mlisko&quot;&gt;mlisko&lt;/a&gt;, &lt;a href=&quot;https://github.com/panther7&quot;&gt;panther7&lt;/a&gt;, &lt;a href=&quot;https://github.com/xtorlukas&quot;&gt;xtorlukas&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/dk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Danish - Dansk&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;60%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/AAUCrisp&quot;&gt;AAUCrisp&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikkolukas&quot;&gt;mikkolukas&lt;/a&gt;, &lt;a href=&quot;https://github.com/siewers&quot;&gt;siewers&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/de.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; German - Deutsch&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/1270o1&quot;&gt;1270o1&lt;/a&gt;, &lt;a href=&quot;https://github.com/alxhu-dev&quot;&gt;alxhu-dev&lt;/a&gt;, &lt;a href=&quot;https://github.com/Araxxas&quot;&gt;Araxxas&lt;/a&gt;, &lt;a href=&quot;https://github.com/CanePlayz&quot;&gt;CanePlayz&lt;/a&gt;, &lt;a href=&quot;https://github.com/Datacra5H&quot;&gt;Datacra5H&lt;/a&gt;, &lt;a href=&quot;https://github.com/ebnater&quot;&gt;ebnater&lt;/a&gt;, &lt;a href=&quot;https://github.com/martinwilco&quot;&gt;martinwilco&lt;/a&gt;, &lt;a href=&quot;https://github.com/michaelmairegger&quot;&gt;michaelmairegger&lt;/a&gt;, &lt;a href=&quot;https://github.com/Seeloewen&quot;&gt;Seeloewen&lt;/a&gt;, &lt;a href=&quot;https://github.com/tkohlmeier&quot;&gt;tkohlmeier&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/gr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Greek - Ελληνικά&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;84%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/antwnhsx&quot;&gt;antwnhsx&lt;/a&gt;, &lt;a href=&quot;https://github.com/panos78&quot;&gt;panos78&lt;/a&gt;, &lt;a href=&quot;https://github.com/seijind&quot;&gt;seijind&lt;/a&gt;, &lt;a href=&quot;https://github.com/thunderstrike116&quot;&gt;thunderstrike116&lt;/a&gt;, &lt;a href=&quot;https://github.com/wobblerrrgg&quot;&gt;wobblerrrgg&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ee.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Estonian - Eesti&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;49%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/artjom3729&quot;&gt;artjom3729&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/gb.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; English - English&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;, &lt;a href=&quot;https://github.com/ppvnf&quot;&gt;ppvnf&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/es.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Spanish - Castellano&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apazga&quot;&gt;apazga&lt;/a&gt;, &lt;a href=&quot;https://github.com/dalbitresb12&quot;&gt;dalbitresb12&lt;/a&gt;, &lt;a href=&quot;https://github.com/evaneliasyoung&quot;&gt;evaneliasyoung&lt;/a&gt;, &lt;a href=&quot;https://github.com/guplem&quot;&gt;guplem&lt;/a&gt;, &lt;a href=&quot;https://github.com/JMoreno97&quot;&gt;JMoreno97&lt;/a&gt;, &lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;, &lt;a href=&quot;https://github.com/P10Designs&quot;&gt;P10Designs&lt;/a&gt;, &lt;a href=&quot;https://github.com/rubnium&quot;&gt;rubnium&lt;/a&gt;, &lt;a href=&quot;https://github.com/uKER&quot;&gt;uKER&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ir.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Persian - فارسی‎&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;68%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Imorate&quot;&gt;Imorate&lt;/a&gt;, &lt;a href=&quot;https://github.com/itsarian&quot;&gt;itsarian&lt;/a&gt;, &lt;a href=&quot;https://github.com/Mahdi-Hazrati&quot;&gt;Mahdi-Hazrati&lt;/a&gt;, &lt;a href=&quot;https://github.com/moon24-s&quot;&gt;moon24-s&lt;/a&gt;, &lt;a href=&quot;https://github.com/saeed205&quot;&gt;saeed205&lt;/a&gt;, &lt;a href=&quot;https://github.com/smsi2001&quot;&gt;smsi2001&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/fi.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Finnish - Suomi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;98%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/simakuutio&quot;&gt;simakuutio&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/fr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; French - Français&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;BreatFR, &lt;a href=&quot;https://github.com/Entropiness&quot;&gt;Entropiness&lt;/a&gt;, Evans Costa, &lt;a href=&quot;https://github.com/PikPakPik&quot;&gt;PikPakPik&lt;/a&gt;, Rémi Guerrero, &lt;a href=&quot;https://github.com/W1L7dev&quot;&gt;W1L7dev&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Gujarati - ગુજરાતી&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;8%&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Hindi - हिंदी&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;43%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Ashu-r&quot;&gt;Ashu-r&lt;/a&gt;, &lt;a href=&quot;https://github.com/atharva_xoxo&quot;&gt;atharva_xoxo&lt;/a&gt;, &lt;a href=&quot;https://github.com/satanarious&quot;&gt;satanarious&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/hr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Croatian - Hrvatski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;48%&lt;/td&gt; 
   &lt;td&gt;Stjepan Treger&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/il.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Hebrew - עִבְרִית‎&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;80%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/maximunited&quot;&gt;maximunited&lt;/a&gt;, Oryan Hassidim&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/hu.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Hungarian - Magyar&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/gidano&quot;&gt;gidano&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/it.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Italian - Italiano&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;David Senoner, &lt;a href=&quot;https://github.com/giacobot&quot;&gt;giacobot&lt;/a&gt;, &lt;a href=&quot;https://github.com/maicol07&quot;&gt;maicol07&lt;/a&gt;, &lt;a href=&quot;https://github.com/mapi68&quot;&gt;mapi68&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrfranza&quot;&gt;mrfranza&lt;/a&gt;, Rosario Di Mauro&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/id.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Indonesian - Bahasa Indonesia&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;65%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/arthackrc&quot;&gt;arthackrc&lt;/a&gt;, &lt;a href=&quot;https://github.com/joenior&quot;&gt;joenior&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/jp.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Japanese - 日本語&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;80%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/anmoti&quot;&gt;anmoti&lt;/a&gt;, &lt;a href=&quot;https://github.com/nob-swik&quot;&gt;nob-swik&lt;/a&gt;, Nobuhiro Shintaku, sho9029, &lt;a href=&quot;https://github.com/tacostea&quot;&gt;tacostea&lt;/a&gt;, Yuki Takase&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Kannada - ಕನ್ನಡ&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;11%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/skanda890&quot;&gt;skanda890&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/kr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Korean - 한국어&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;66%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/minbert&quot;&gt;minbert&lt;/a&gt;, &lt;a href=&quot;https://github.com/shblue21&quot;&gt;shblue21&lt;/a&gt;, &lt;a href=&quot;https://github.com/VenusGirl&quot;&gt;VenusGirl&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/lt.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Lithuanian - Lietuvių&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;92%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/dziugas1959&quot;&gt;dziugas1959&lt;/a&gt;, Džiugas Januševičius, &lt;a href=&quot;https://github.com/martyn3z&quot;&gt;martyn3z&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/mk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Macedonian - Македонски&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;49%&lt;/td&gt; 
   &lt;td&gt;LordDeatHunter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/no.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Norwegian (bokmål)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;85%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/mikaelkw&quot;&gt;mikaelkw&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/no.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Norwegian (nynorsk)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;79%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/nl.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Dutch - Nederlands&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/abbydiode&quot;&gt;abbydiode&lt;/a&gt;, &lt;a href=&quot;https://github.com/CateyeNL&quot;&gt;CateyeNL&lt;/a&gt;, &lt;a href=&quot;https://github.com/Stephan-P&quot;&gt;Stephan-P&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/pl.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Polish - Polski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;86%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/GrzegorzKi&quot;&gt;GrzegorzKi&lt;/a&gt;, &lt;a href=&quot;https://github.com/KamilZielinski&quot;&gt;KamilZielinski&lt;/a&gt;, &lt;a href=&quot;https://github.com/kwiateusz&quot;&gt;kwiateusz&lt;/a&gt;, &lt;a href=&quot;https://github.com/RegularGvy13&quot;&gt;RegularGvy13&lt;/a&gt;, &lt;a href=&quot;https://github.com/ThePhaseless&quot;&gt;ThePhaseless&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/br.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Portuguese (Brazil)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/maisondasilva&quot;&gt;maisondasilva&lt;/a&gt;, &lt;a href=&quot;https://github.com/ppvnf&quot;&gt;ppvnf&lt;/a&gt;, &lt;a href=&quot;https://github.com/Rodrigo-Matsuura&quot;&gt;Rodrigo-Matsuura&lt;/a&gt;, &lt;a href=&quot;https://github.com/thiagojramos&quot;&gt;thiagojramos&lt;/a&gt;, &lt;a href=&quot;https://github.com/wanderleihuttel&quot;&gt;wanderleihuttel&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/pt.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Portuguese (Portugal)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;90%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/PoetaGA&quot;&gt;PoetaGA&lt;/a&gt;, &lt;a href=&quot;https://github.com/Tiago_Ferreira&quot;&gt;Tiago_Ferreira&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ro.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Romanian - Română&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/David735453&quot;&gt;David735453&lt;/a&gt;, &lt;a href=&quot;https://github.com/SilverGreen93&quot;&gt;SilverGreen93&lt;/a&gt;, TZACANEL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ru.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Russian - Русский&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/bropines&quot;&gt;bropines&lt;/a&gt;, &lt;a href=&quot;https://github.com/Denisskas&quot;&gt;Denisskas&lt;/a&gt;, &lt;a href=&quot;https://github.com/DvladikD&quot;&gt;DvladikD&lt;/a&gt;, &lt;a href=&quot;https://github.com/flatron4eg&quot;&gt;flatron4eg&lt;/a&gt;, Gleb Saygin, Ilia Petrov, &lt;a href=&quot;https://github.com/katrovsky&quot;&gt;katrovsky&lt;/a&gt;, Sergey, sklart, &lt;a href=&quot;https://github.com/solarscream&quot;&gt;solarscream&lt;/a&gt;, &lt;a href=&quot;https://github.com/tapnisu&quot;&gt;tapnisu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Sanskrit - संस्कृत भाषा&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;10%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/skanda890&quot;&gt;skanda890&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/sk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Slovak - Slovenčina&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;10%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Luk164&quot;&gt;Luk164&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/rs.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Serbian - Srpski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;79%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/daVinci13&quot;&gt;daVinci13&lt;/a&gt;, &lt;a href=&quot;https://github.com/momcilovicluka&quot;&gt;momcilovicluka&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/al.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Albanian - Shqip&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/RDN000&quot;&gt;RDN000&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/lk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Sinhala - සිංහල&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;12%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/SashikaSandeepa&quot;&gt;SashikaSandeepa&lt;/a&gt;, &lt;a href=&quot;https://github.com/Savithu-s3&quot;&gt;Savithu-s3&lt;/a&gt;, &lt;a href=&quot;https://github.com/ttheek&quot;&gt;ttheek&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/si.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Slovene - Slovenščina&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;87%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/rumplin&quot;&gt;rumplin&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/se.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Swedish - Svenska&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;55%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/curudel&quot;&gt;curudel&lt;/a&gt;, &lt;a href=&quot;https://github.com/kakmonster&quot;&gt;kakmonster&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ph.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Tagalog - Tagalog&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;11%&lt;/td&gt; 
   &lt;td&gt;lasersPew&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/th.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Thai - ภาษาไทย&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;78%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apaeisara&quot;&gt;apaeisara&lt;/a&gt;, &lt;a href=&quot;https://github.com/dulapahv&quot;&gt;dulapahv&lt;/a&gt;, &lt;a href=&quot;https://github.com/rikoprushka&quot;&gt;rikoprushka&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/tr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Turkish - Türkçe&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ahmetozmtn&quot;&gt;ahmetozmtn&lt;/a&gt;, &lt;a href=&quot;https://github.com/dogancanyr&quot;&gt;dogancanyr&lt;/a&gt;, &lt;a href=&quot;https://github.com/gokberkgs&quot;&gt;gokberkgs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ua.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Ukrainian - Українська&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;Artem Moldovanenko, Operator404, &lt;a href=&quot;https://github.com/Taron-art&quot;&gt;Taron-art&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/pk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Urdu - اردو&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;55%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/digitio&quot;&gt;digitio&lt;/a&gt;, &lt;a href=&quot;https://github.com/digitpk&quot;&gt;digitpk&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/vn.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Vietnamese - Tiếng Việt&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;96%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/aethervn2309&quot;&gt;aethervn2309&lt;/a&gt;, &lt;a href=&quot;https://github.com/legendsjoon&quot;&gt;legendsjoon&lt;/a&gt;, &lt;a href=&quot;https://github.com/long5436&quot;&gt;long5436&lt;/a&gt;, &lt;a href=&quot;https://github.com/txavlog&quot;&gt;txavlog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/cn.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Simplified Chinese (China)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;Aaron Liu, adfnekc, &lt;a href=&quot;https://github.com/Ardenet&quot;&gt;Ardenet&lt;/a&gt;, &lt;a href=&quot;https://github.com/arthurfsy2&quot;&gt;arthurfsy2&lt;/a&gt;, &lt;a href=&quot;https://github.com/bai0012&quot;&gt;bai0012&lt;/a&gt;, BUGP Association, ciaran, CnYeSheng, Cololi, &lt;a href=&quot;https://github.com/dongfengweixiao&quot;&gt;dongfengweixiao&lt;/a&gt;, &lt;a href=&quot;https://github.com/enKl03B&quot;&gt;enKl03B&lt;/a&gt;, &lt;a href=&quot;https://github.com/seanyu0&quot;&gt;seanyu0&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sigechaishijie&quot;&gt;Sigechaishijie&lt;/a&gt;, &lt;a href=&quot;https://github.com/SpaceTimee&quot;&gt;SpaceTimee&lt;/a&gt;, Yisme&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/tw.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Traditional Chinese (Taiwan)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;Aaron Liu, CnYeSheng, Cololi, &lt;a href=&quot;https://github.com/enKl03B&quot;&gt;enKl03B&lt;/a&gt;, &lt;a href=&quot;https://github.com/Henryliu880922&quot;&gt;Henryliu880922&lt;/a&gt;, &lt;a href=&quot;https://github.com/StarsShine11904&quot;&gt;StarsShine11904&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrctw&quot;&gt;yrctw&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Last updated: Sun Mar 16 00:15:11 2025&lt;/p&gt; 
&lt;!-- END Autogenerated translations --&gt; 
&lt;h1&gt;Contributions&lt;/h1&gt; 
&lt;p&gt;UniGetUI wouldn&#39;t have been possible without the help of our dear contributors. From the person who fixed a typo to the person who improved half of the code, UniGetUI wouldn&#39;t be possible without them! &lt;span&gt;😄&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors:&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=marticliment/UniGetUI&quot; alt=&quot;My dear contributors&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Screenshots&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_1.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_2.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_3.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_4.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_5.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_6.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_7.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_8.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_9.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_10.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Frequently asked questions&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: I am unable to install or upgrade a specific Winget package! What should I do?&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;A: This is likely an issue with Winget rather than UniGetUI.&lt;/p&gt; 
&lt;p&gt;Please check if it&#39;s possible to install/upgrade the package through PowerShell or the Command Prompt by using the commands &lt;code&gt;winget upgrade&lt;/code&gt; or &lt;code&gt;winget install&lt;/code&gt;, depending on the situation (for example: &lt;code&gt;winget upgrade --id Microsoft.PowerToys&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;If this doesn&#39;t work, consider asking for help at &lt;a href=&quot;https://github.com/microsoft/winget-cli&quot;&gt;Winget&#39;s project page&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: The name of a package is trimmed with ellipsis — how do I see its full name/id?&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;A: This is a known limitation of Winget.&lt;/p&gt; 
&lt;p&gt;For more details, see this issue: &lt;a href=&quot;https://github.com/microsoft/winget-cli/issues/2603&quot;&gt;https://github.com/microsoft/winget-cli/issues/2603&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: My antivirus is telling me that UniGetUI is a virus! / My browser is blocking the download of UniGetUI!&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;A: A common reason apps (i.e., executables) get blocked and/or detected as a virus — even when there&#39;s nothing malicious about them, like in the case of UniGetUI — is because a relatively large amount of people are not using them.&lt;/p&gt; 
&lt;p&gt;Combine that with the fact that you might be downloading something recently released, and blocking unknown apps is in many cases a good precaution to take to prevent actual malware.&lt;/p&gt; 
&lt;p&gt;Since UniGetUI is open source and safe to use, whitelist the app in the settings of your antivirus/browser.&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: Are Winget/Scoop packages safe?&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;A: UniGetUI, Microsoft, and Scoop aren&#39;t responsible for the packages available for download, which are provided by third parties and can theoretically be compromised.&lt;/p&gt; 
&lt;p&gt;Microsoft has implemented a few checks for the software available on Winget to mitigate the risks of downloading malware. Even so, it&#39;s recommended that you only download software from trusted publishers.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;i&gt;Check out the &lt;a href=&quot;https://github.com/marticliment/UniGetUI/wiki&quot;&gt;Wiki&lt;/a&gt; for more information!&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;h2&gt;Command-line parameters:&lt;/h2&gt; 
&lt;p&gt;Check out the full list of parameters &lt;a href=&quot;https://github.com/marticliment/UniGetUI/raw/main/cli-arguments.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/AspNetCore.Docs</title>
      <link>https://github.com/dotnet/AspNetCore.Docs</link>
      <description>&lt;p&gt;Documentation for ASP.NET Core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ASP.NET Core Docs&lt;/h1&gt; 
&lt;p&gt;This repository contains the &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/introduction-to-aspnet-core&quot;&gt;ASP.NET Core documentation&lt;/a&gt;. See the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/AspNetCore.Docs/main/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; and the &lt;a href=&quot;https://github.com/dotnet/AspNetCore.Docs/issues&quot;&gt;issues list&lt;/a&gt; if you would like to help.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/dotnet/AspNetDocs&quot;&gt;&lt;code&gt;dotnet/AspNetDocs&lt;/code&gt; GitHub repository&lt;/a&gt;contains the ASP.NET 4.x documentation.&lt;/p&gt; 
&lt;h2&gt;How to open an issue&lt;/h2&gt; 
&lt;p&gt;If the issue is with an ASP.NET Core document:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Do &lt;strong&gt;not&lt;/strong&gt; open a blank issue.&lt;/li&gt; 
 &lt;li&gt;Open the issue using the &lt;strong&gt;Open a documentation issue&lt;/strong&gt; link and feedback form at the bottom of the article.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Using the &lt;strong&gt;Open a documentation issue&lt;/strong&gt; link and form to open an issue adds article metadata for tracking, which indicates the article that you&#39;re commenting on and automatically pings the author for a faster response.&lt;/p&gt; 
&lt;p&gt;If the issue is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A simple typo or similar correction, you can submit a PR. See &lt;a href=&quot;https://docs.microsoft.com/contribute/#quick-edits-to-existing-documents&quot;&gt;the contributor guide&lt;/a&gt; for instructions.&lt;/li&gt; 
 &lt;li&gt;A general support question, consider asking on a support forum site: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/tagged/asp.net-core&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://aspnetcore.slack.com/join/shared_invite/zt-1mv5487zb-EOZxJ1iqb0A0ajowEbxByQ#/shared-invite/email&quot;&gt;ASP.NET Core Slack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://gitter.im/aspnet/Home&quot;&gt;ASP.NET Gitter&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;A site design concern, create an issue at &lt;a href=&quot;https://github.com/MicrosoftDocs/Feedback/issues/new/choose&quot;&gt;MicrosoftDocs/Feedback&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;A problem completing a tutorial, compare your code with the completed sample.&lt;/li&gt; 
 &lt;li&gt;A duplicate of an open or closed issue, leave a comment on that issue.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ShareX/ShareX</title>
      <link>https://github.com/ShareX/ShareX</link>
      <description>&lt;p&gt;ShareX is a free and open source program that lets you capture or record any area of your screen and share it with a single press of a key. It also allows uploading images, text or other types of files to many supported destinations you can choose from.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://getsharex.com&quot;&gt;&lt;img src=&quot;https://getsharex.com/img/ShareX_Banner.png&quot; alt=&quot;ShareX Banner&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;Screen capture, file sharing and productivity tool&lt;/h3&gt; 
&lt;br&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://github.com/ShareX/ShareX/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/ShareX/ShareX/build.yml?branch=develop&amp;amp;label=Build&amp;amp;cacheSeconds=3600&quot; alt=&quot;GitHub Workflow Status&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/ShareX/ShareX/develop/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/ShareX/ShareX?label=License&amp;amp;color=brightgreen&amp;amp;cacheSeconds=3600&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/ShareX/ShareX/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/ShareX/ShareX?label=Release&amp;amp;color=brightgreen&amp;amp;cacheSeconds=3600&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://getsharex.com/downloads&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/ShareX/ShareX/total?label=Downloads&amp;amp;cacheSeconds=3600&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://discord.gg/ShareX&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/194170124859736065?label=Discord&amp;amp;cacheSeconds=3600&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=ShareX&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/ShareX?cacheSeconds=3600&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://getsharex.com&quot;&gt;&lt;img src=&quot;https://getsharex.com/img/ShareX_Screenshot.png&quot; alt=&quot;ShareX Screenshot&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;For further information please check our &lt;a href=&quot;https://getsharex.com&quot;&gt;website&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Official website: &lt;a href=&quot;https://getsharex.com&quot;&gt;https://getsharex.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/ShareX/ShareX&quot;&gt;https://github.com/ShareX/ShareX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Changelog: &lt;a href=&quot;https://getsharex.com/changelog&quot;&gt;https://getsharex.com/changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Privacy policy: &lt;a href=&quot;https://getsharex.com/privacy-policy&quot;&gt;https://getsharex.com/privacy-policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Donate: &lt;a href=&quot;https://getsharex.com/donate&quot;&gt;https://getsharex.com/donate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/ShareX&quot;&gt;https://twitter.com/ShareX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discord: &lt;a href=&quot;https://discord.gg/ShareX&quot;&gt;https://discord.gg/ShareX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Reddit: &lt;a href=&quot;https://www.reddit.com/r/sharex&quot;&gt;https://www.reddit.com/r/sharex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Steam page: &lt;a href=&quot;https://store.steampowered.com/app/400040/ShareX/&quot;&gt;https://store.steampowered.com/app/400040/ShareX/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Microsoft Store page: &lt;a href=&quot;https://apps.microsoft.com/detail/9nblggh4z1sp&quot;&gt;https://apps.microsoft.com/detail/9nblggh4z1sp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Image effects: &lt;a href=&quot;https://getsharex.com/image-effects&quot;&gt;https://getsharex.com/image-effects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Actions: &lt;a href=&quot;https://getsharex.com/actions&quot;&gt;https://getsharex.com/actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dev builds: &lt;a href=&quot;https://getsharex.com/docs/dev-builds&quot;&gt;https://getsharex.com/docs/dev-builds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Keybinds: &lt;a href=&quot;https://getsharex.com/docs/keybinds&quot;&gt;https://getsharex.com/docs/keybinds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Scrolling screenshot: &lt;a href=&quot;https://getsharex.com/docs/scrolling-screenshot&quot;&gt;https://getsharex.com/docs/scrolling-screenshot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Command line arguments: &lt;a href=&quot;https://getsharex.com/docs/command-line-arguments&quot;&gt;https://getsharex.com/docs/command-line-arguments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Translation: &lt;a href=&quot;https://getsharex.com/docs/translation&quot;&gt;https://getsharex.com/docs/translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OCR: &lt;a href=&quot;https://getsharex.com/docs/ocr&quot;&gt;https://getsharex.com/docs/ocr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Custom uploader: &lt;a href=&quot;https://getsharex.com/docs/custom-uploader&quot;&gt;https://getsharex.com/docs/custom-uploader&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Amazon S3 guide: &lt;a href=&quot;https://getsharex.com/docs/amazon-s3&quot;&gt;https://getsharex.com/docs/amazon-s3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google Cloud Storage guide: &lt;a href=&quot;https://getsharex.com/docs/google-cloud-storage&quot;&gt;https://getsharex.com/docs/google-cloud-storage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Cloudflare R2 guide: &lt;a href=&quot;https://getsharex.com/docs/cloudflare-r2&quot;&gt;https://getsharex.com/docs/cloudflare-r2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Brand assets: &lt;a href=&quot;https://getsharex.com/brand-assets&quot;&gt;https://getsharex.com/brand-assets&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Flow-Launcher/Flow.Launcher</title>
      <link>https://github.com/Flow-Launcher/Flow.Launcher</link>
      <description>&lt;p&gt;🔍 Quick file search &amp; app launcher for Windows with community-made plugins&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://flowlauncher.com&quot;&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207167068-2196d2a3-2caa-4856-958b-a780fbda95c6.gif&quot; width=&quot;500&quot;&gt; &lt;/a&gt;&lt;br&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207168016-85d0dd16-1f3b-4d42-9d37-0e0d5a596ead.png&quot; width=&quot;400&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://img.shields.io/maintenance/yes/3000&quot;&gt; &lt;a href=&quot;https://crowdin.com/project/flow-launcher&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/flow-launcher/localized.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://ci.appveyor.com/project/JohnTheGr8/flow-launcher/branch/dev&quot;&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva?svg=true&amp;amp;retina=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/Flow-Launcher/Flow.Launcher/total.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;br&gt; &lt;img src=&quot;https://img.shields.io/github/release-date/Flow-Launcher/Flow.Launcher&quot;&gt; &lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/Flow-Launcher/Flow.Launcher&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://flowlauncher.com/docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Documentation-7389D8&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/AvgAQgh&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/727828229250875472?color=7389D8&amp;amp;labelColor=6A7EC2&amp;amp;label=Community&amp;amp;logo=discord&amp;amp;logoColor=white&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; A quick file search and app launcher for Windows with community-made plugins.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; Dedicated to making your work flow more seamless. Search everything from applications, files, bookmarks, YouTube, Twitter and more. Flow will continue to evolve, designed to be open and built with the community at heart.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;sub&gt;Remember to star it, flow will love you more :)&lt;/sub&gt;&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot;&gt; 
&lt;h4 align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#-getting-started&quot;&gt;Getting Started&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#-features&quot;&gt;Features&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#-plugins&quot;&gt;Plugins&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#%EF%B8%8F-hotkeys&quot;&gt;Hotkeys&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#sponsors&quot;&gt;Sponsors&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#-questionssuggestions&quot;&gt;Questions/Suggestions&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#development&quot;&gt;Development&lt;/a&gt; • &lt;a href=&quot;https://flowlauncher.com/docs&quot;&gt;Docs&lt;/a&gt; &lt;/h4&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot;&gt; 
&lt;h2&gt;🚗 Getting Started&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/releases/latest/download/Flow-Launcher-Setup.exe&quot;&gt;Windows 7+ Installer&lt;/a&gt; or &lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/releases/latest/download/Flow-Launcher-Portable.zip&quot;&gt;Portable Version&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Winget&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;winget install &quot;Flow Launcher&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Scoop&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;scoop install Flow-Launcher
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Chocolatey&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;choco install Flow-Launcher
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;When installing for the first time Windows may raise an issue about security due to code not being signed, if you downloaded from this repo then you are good to continue the set up.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Or download the &lt;a href=&quot;https://github.com/Flow-Launcher/Prereleases/releases&quot;&gt;early access version&lt;/a&gt;.&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot;&gt; 
&lt;h2&gt;🎁 Features&lt;/h2&gt; 
&lt;h3&gt;Applications &amp;amp; Files&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/145332614-74909973-f6eb-47c2-8235-289931e30718.png&quot; width=&quot;400&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search for apps, files or file contents.&lt;/li&gt; 
 &lt;li&gt;Supports Everything and Windows Index.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/145018796-658b7c24-a34f-46b6-98d4-cf4f636d8b60.png&quot; width=&quot;400&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support search using environment variable paths.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Web Searches &amp;amp; URLs&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144517502-5325de01-d0d9-4c2e-aafb-33c3f5d82f81.png&quot; width=&quot;400&quot;&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144831031-0e01e8ea-3247-4ba4-a7b4-48b0db620bc1.png&quot; width=&quot;400&quot;&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/222829602-aabb1144-db5c-4250-b5ae-66f8342e4ae4.png&quot; width=&quot;400&quot;&gt; 
&lt;h3&gt;Browser Bookmarks&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207143428-e6406306-4f1e-4c24-917d-d2a333d5dc2b.png&quot; width=&quot;400&quot;&gt; 
&lt;h3&gt;System Commands&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144517557-9b5b82fc-6408-48a0-af59-69b385a0782e.png&quot; width=&quot;400&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provides system related commands. shutdown, lock, settings, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#system-command-list&quot;&gt;System command list&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Calculator&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207142449-7de0c30d-8d5b-4331-967e-f3e78c17ea93.png&quot; width=&quot;400&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Do mathematical calculations and copy the result to clipboard.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Shell Command&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207142197-9e910147-96a9-466e-bbc4-b1163314ef59.png&quot; width=&quot;400&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run batch and PowerShell commands as Administrator or a different user.&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt; to Run as Administrator.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Explorer&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207145376-fbb68ec2-93b9-4b0f-befe-0aeb792367a7.png&quot; width=&quot;400&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Save file or folder locations for quick access.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Drag &amp;amp; Drop&lt;/h4&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207159486-1993510f-09f2-4e33-bba7-4ca59ca1bc5a.png&quot; width=&quot;500&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Drag a file/folder to File Explorer, or even Discord.&lt;/li&gt; 
 &lt;li&gt;Copy/move behavior can be change via &lt;kbd&gt;Ctrl&lt;/kbd&gt; or &lt;kbd&gt;Shift&lt;/kbd&gt;, and the operation is displayed on the mouse cursor.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Windows &amp;amp; Control Panel Settings&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207140658-52c1bea6-5b14-4db8-ae35-acc65e6bda85.png&quot; width=&quot;400&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search for Windows &amp;amp; Control Panel settings.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Priority&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144517677-857a2b0a-4b94-4be0-bc89-f35723ecddf9.png&quot; width=&quot;500&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prioritise the order of each plugin&#39;s results.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Preview Panel&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207159213-662999d3-2c18-4256-b473-c417efca0069.png&quot; width=&quot;400&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;kbd&gt;F1&lt;/kbd&gt; to toggle the preview panel.&lt;/li&gt; 
 &lt;li&gt;Media files will be displayed as large images, otherwise a large icon and full path will be displayed.&lt;/li&gt; 
 &lt;li&gt;Turn on preview permanently via Settings (Always Preview).&lt;/li&gt; 
 &lt;li&gt;Use &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;+&lt;/kbd&gt;/&lt;kbd&gt;-&lt;/kbd&gt; and &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;[&lt;/kbd&gt;/&lt;kbd&gt;]&lt;/kbd&gt; to adjust search window width and height quickly if the preview area is too narrow.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Customizations&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144693887-1b92ed16-dca1-4b7e-8644-5e9524cdfb31.gif&quot; width=&quot;500&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Window size adjustment, animation, and sound&lt;/li&gt; 
 &lt;li&gt;Color Scheme (aka Dark Mode)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144527796-7c06ca31-d933-4f6b-9eb0-4fb06fa94384.png&quot; width=&quot;500&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;There are various themes and you also can make your own.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Date &amp;amp; Time Display In Search Window&lt;/h4&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207159348-8b0c7a2b-0836-4764-916b-e0236087f7f3.png&quot; width=&quot;400&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Display date and time in search window.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 Languages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports languages from Chinese to Italian and more.&lt;/li&gt; 
 &lt;li&gt;Supports Pinyin (拼音) search.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crowdin.com/project/flow-launcher&quot;&gt;Crowdin&lt;/a&gt; support for language translations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Supported languages&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;English&lt;/li&gt; 
  &lt;li&gt;中文&lt;/li&gt; 
  &lt;li&gt;中文（繁体）&lt;/li&gt; 
  &lt;li&gt;Українська&lt;/li&gt; 
  &lt;li&gt;Русский&lt;/li&gt; 
  &lt;li&gt;Français&lt;/li&gt; 
  &lt;li&gt;日本語&lt;/li&gt; 
  &lt;li&gt;Dutch&lt;/li&gt; 
  &lt;li&gt;Polski&lt;/li&gt; 
  &lt;li&gt;Dansk&lt;/li&gt; 
  &lt;li&gt;de, Deutsch&lt;/li&gt; 
  &lt;li&gt;ko, 한국어&lt;/li&gt; 
  &lt;li&gt;Srpski&lt;/li&gt; 
  &lt;li&gt;Português&lt;/li&gt; 
  &lt;li&gt;Português (Brasil)&lt;/li&gt; 
  &lt;li&gt;Spanish&lt;/li&gt; 
  &lt;li&gt;es-419, Spanish (Latin America)&lt;/li&gt; 
  &lt;li&gt;Italiano&lt;/li&gt; 
  &lt;li&gt;Norsk Bokmål&lt;/li&gt; 
  &lt;li&gt;Slovenčina&lt;/li&gt; 
  &lt;li&gt;Türkçe&lt;/li&gt; 
  &lt;li&gt;čeština&lt;/li&gt; 
  &lt;li&gt;اللغة العربية&lt;/li&gt; 
  &lt;li&gt;Tiếng Việt&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Portable&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully portable.&lt;/li&gt; 
 &lt;li&gt;Type &lt;code&gt;flow user data&lt;/code&gt; to open your saved user settings folder. They are located at: 
  &lt;ul&gt; 
   &lt;li&gt;If using roaming: &lt;code&gt;%APPDATA%\FlowLauncher&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;If using portable, by default: &lt;code&gt;%localappdata%\FlowLauncher\app-&amp;lt;VersionOfYourFlowLauncher&amp;gt;\UserData&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Type &lt;code&gt;open log location&lt;/code&gt; to open your logs folder, they are saved along with your user settings folder.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎮 Game Mode&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207144711-0c5f8b2b-4b1b-44c8-b23e-c123f6b05146.png&quot; width=&quot;200&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pause hotkey activation when you are playing games.&lt;/li&gt; 
 &lt;li&gt;When in search window use &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;F12&lt;/kbd&gt; to toggle on/off.&lt;/li&gt; 
 &lt;li&gt;Type &lt;code&gt;Toggle Game Mode&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot;&gt; 
&lt;h2&gt;📦 Plugins&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support wide range of plugins. Visit &lt;a href=&quot;https://flowlauncher.com/docs/#/plugins&quot;&gt;here&lt;/a&gt; for our plugin portfolio.&lt;/li&gt; 
 &lt;li&gt;Publish your own plugin to flow! Create plugins in:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://flowlauncher.com/docs/#/develop-dotnet-plugins&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/147870065-4096f233-147c-434e-a3ac-69519582605f.png&quot; width=&quot;64&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Flow-Launcher/plugin-samples/tree/master/HelloWorldFSharp&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/26427004/156536959-dfdc7be8-4b59-4587-9c6a-a297903e4ce1.png&quot; width=&quot;64&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.flowlauncher.com/docs/#/py-develop-plugins&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/147870066-7599eb15-0333-468e-82e8-4d432ceb5a45.png&quot; width=&quot;64&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://flowlauncher.com/docs/#/nodejs-develop-plugins&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/147870071-d67c736b-0748-428f-a283-14587696dfa3.png&quot; width=&quot;64&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://flowlauncher.com/docs/#/nodejs-develop-plugins&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/147870069-9bde6fe6-d50c-4d85-8fde-fe5ae921ab8c.png&quot; width=&quot;64&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/fow5040/Flow.Launcher.Plugin.SpotifyPremium&quot;&gt;SpotifyPremium&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533469-da920295-8c36-46e8-89eb-a9cdd94b74ef.png&quot; width=&quot;400&quot;&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/Garulf/Steam-Search&quot;&gt;Steam Search&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533523-afd79dca-a444-40e5-b2d9-6d3fe3aaece1.png&quot; width=&quot;400&quot;&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/liberize/Flow.Launcher.Plugin.ClipboardHistory&quot;&gt;Clipboard History&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533481-58e473fd-38d9-4604-861f-ad870770967d.png&quot; width=&quot;400&quot;&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/Garulf/HA-Commander&quot;&gt;Home Assistant Commander&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533538-3caa2944-3037-4755-87b9-70fa918d2efa.png&quot; width=&quot;400&quot;&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher.Plugin.Color&quot;&gt;Colors&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533487-2caff162-a8f6-4577-af3f-d1b05d423ee4.png&quot; width=&quot;400&quot;&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/JohnTheGr8/Flow.Plugin.Github&quot;&gt;GitHub&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533497-8677f800-95c5-4758-8ca3-c96333ee1943.png&quot; width=&quot;400&quot;&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/taooceros/Flow.Plugin.WindowWalker&quot;&gt;Window Walker&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533517-07bf011f-726c-4221-8657-0e442eca8a82.png&quot; width=&quot;400&quot;&gt; 
&lt;p&gt;......and &lt;a href=&quot;https://flowlauncher.com/docs/#/plugins&quot;&gt;more!&lt;/a&gt;&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot;&gt; 
&lt;h3&gt;🛒 Plugin Store&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207155616-d559f0d2-ee95-4072-a7bc-3ffcc2faec27.png&quot; width=&quot;700&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;You can view the full plugin list or quickly install a plugin via the Plugin Store menu inside Settings&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;or type &lt;code&gt;pm&lt;/code&gt; &lt;code&gt;install&lt;/code&gt;/&lt;code&gt;uninstall&lt;/code&gt;/&lt;code&gt;update&lt;/code&gt; + the plugin name in the search window,&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot;&gt; 
&lt;h2&gt;⌨️ Hotkeys&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Hotkey&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Space&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Open search window (default and configurable)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Enter&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Execute&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Open containing folder&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Run as admin&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;↑&lt;/kbd&gt;/&lt;kbd&gt;↓&lt;/kbd&gt;, &lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Tab&lt;/kbd&gt;/&lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Previous / Next result&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;←&lt;/kbd&gt;/&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Back to result / Open Context Menu&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;O&lt;/kbd&gt; , &lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Open Context Menu&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Autocomplete&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;F1&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Toggle Preview Panel (default and configurable)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Esc&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Back to results / hide search window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Copy folder / file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Copy folder / file path&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;I&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Open Flow&#39;s settings&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;R&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Run the current query again (refresh results)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;F5&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Reload all plugin data&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;F12&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Toggle Game Mode when in search window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;+&lt;/kbd&gt;,&lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Adjust maximum results shown&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;[&lt;/kbd&gt;,&lt;kbd&gt;]&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Adjust search window width&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;H&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Open search history&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Backspace&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Back to previous directory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;/&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Previous / Next Page&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;System Command List&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Shutdown&lt;/td&gt; 
   &lt;td&gt;Shutdown computer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Restart&lt;/td&gt; 
   &lt;td&gt;Restart computer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Restart With Advanced Boot Options&lt;/td&gt; 
   &lt;td&gt;Restart the computer with Advanced Boot option for safe and debugging modes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Log Off/Sign Out&lt;/td&gt; 
   &lt;td&gt;Log off&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Lock&lt;/td&gt; 
   &lt;td&gt;Lock computer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sleep&lt;/td&gt; 
   &lt;td&gt;Put computer to sleep&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hibernate&lt;/td&gt; 
   &lt;td&gt;Hibernate computer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Empty Recycle Bin&lt;/td&gt; 
   &lt;td&gt;Empty recycle bin&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Open Recycle Bin&lt;/td&gt; 
   &lt;td&gt;Open recycle bin&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Exit&lt;/td&gt; 
   &lt;td&gt;Close Flow Launcher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Save Settings&lt;/td&gt; 
   &lt;td&gt;Save all Flow Launcher settings&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Restart Flow Launcher&lt;/td&gt; 
   &lt;td&gt;Restart Flow Launcher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Settings&lt;/td&gt; 
   &lt;td&gt;Tweak this app&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Reload Plugin Data&lt;/td&gt; 
   &lt;td&gt;Refreshes plugin data with new content&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Check For Update&lt;/td&gt; 
   &lt;td&gt;Check for new Flow Launcher update&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Open Log Location&lt;/td&gt; 
   &lt;td&gt;Open Flow Launcher&#39;s log location&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Index Option&lt;/td&gt; 
   &lt;td&gt;Open Windows Search Index window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Flow Launcher Tips&lt;/td&gt; 
   &lt;td&gt;Visit Flow Launcher&#39;s documentation for more help and how to use tips&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Flow Launcher UserData Folder&lt;/td&gt; 
   &lt;td&gt;Open the location where Flow Launcher&#39;s settings are stored&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Toggle Game Mode&lt;/td&gt; 
   &lt;td&gt;Toggle Game Mode&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;💁‍♂️ Tips&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flowlauncher.com/docs/#/usage-tips&quot;&gt;More tips&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot;&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://coderabbit.ai/&quot;&gt; &lt;img src=&quot;https://github.com/Flow-Launcher/Flow.Launcher/assets/6903107/7c996d74-0c69-4011-922f-a95ca7e874b0&quot; width=&quot;30%&quot; alt=&quot;Coderabbit Logo&quot;&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/TheBestPessimist&quot;&gt; &lt;img src=&quot;https://avatars.githubusercontent.com/u/4482210?v=4&quot; width=&quot;10%&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/AjmalParkar006&quot;&gt; &lt;img src=&quot;https://avatars.githubusercontent.com/u/76547256?v=4&quot; width=&quot;10%&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://appwrite.io&quot;&gt; &lt;img src=&quot;https://appwrite.io/assets/logotype/white.svg?sanitize=true&quot; width=&quot;30%&quot; alt=&quot;Appwrite Logo&quot;&gt; &lt;/a&gt; &lt;br&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/itsonlyfrans&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46535667?v=4&quot; width=&quot;10%&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/andreqramos&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/49326063?v=4&quot; width=&quot;10%&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Yuba4&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46278200?v=4&quot; width=&quot;10%&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Mavrik327&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/121626149?v=4&quot; width=&quot;10%&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/tikkatek&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26571381?v=4&quot; width=&quot;10%&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/patrickdobler&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16536946?v=4&quot; width=&quot;10%&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/benflap&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62034481?v=4&quot; width=&quot;10%&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Mentions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dev.to/appwrite/appwrite-loves-open-source-why-i-chose-to-support-flow-launcher-54pj&quot;&gt;Why I Chose to Support Flow-Launcher&lt;/a&gt; - Appwrite&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.softpedia.com/get/System/Launchers-Shutdown-Tools/Flow-Launcher.shtml&quot;&gt;Softpedia Editor&#39;s Pick&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot;&gt; 
&lt;h2&gt;❔ Questions/Suggestions&lt;/h2&gt; 
&lt;p&gt;Yes please, let us know in the &lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/discussions/categories/q-a&quot;&gt;Q&amp;amp;A&lt;/a&gt; section. &lt;strong&gt;Join our community on &lt;a href=&quot;https://discord.gg/AvgAQgh&quot;&gt;Discord&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot;&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;New changes&lt;/h3&gt; 
&lt;p&gt;All changes to flow are captured via pull requests. Some new changes will have been merged but still pending release, this means whilst a change may not exist in the current release, it may very well have been accepted and merged into the dev branch and available as a pre-release download. It is therefore a good idea that before you start to make changes, search through the open and closed pull requests to make sure the change you intend to make is not already done.&lt;/p&gt; 
&lt;p&gt;Each of the pull requests will be marked with a milestone indicating the planned release version for the change.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Contributions are very welcome, in addition to the main project(C#) there are also &lt;a href=&quot;https://github.com/Flow-Launcher/docs&quot;&gt;documentation&lt;/a&gt;(md), &lt;a href=&quot;https://github.com/Flow-Launcher/flow-launcher.github.io&quot;&gt;website&lt;/a&gt;(html/css) and &lt;a href=&quot;https://github.com/Flow-Launcher&quot;&gt;others&lt;/a&gt; that can be contributed to. If you are unsure of a change you want to make, let us know in the &lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/discussions/categories/ideas&quot;&gt;Discussions&lt;/a&gt;, otherwise feel free to put in a pull request.&lt;/p&gt; 
&lt;p&gt;You will find the main goals of flow placed under the &lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/projects&quot;&gt;Projects board&lt;/a&gt;, so feel free to contribute on that. If you would like to make small incremental changes, feel free to do so as well.&lt;/p&gt; 
&lt;p&gt;Get in touch if you like to join the Flow-Launcher Team and help build this great tool.&lt;/p&gt; 
&lt;h3&gt;Developing/Debugging&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Flow Launcher&#39;s target framework is .Net 7&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install Visual Studio 2022&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install .Net 7 SDK&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;via Visual Studio installer&lt;/li&gt; 
   &lt;li&gt;via winget &lt;code&gt;winget install Microsoft.DotNet.SDK.7&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Manually from &lt;a href=&quot;https://dotnet.microsoft.com/en-us/download/dotnet/7.0&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>PowerShell/PowerShell</title>
      <link>https://github.com/PowerShell/PowerShell</link>
      <description>&lt;p&gt;PowerShell for every system!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/assets/ps_black_64.svg?sanitize=true&quot; alt=&quot;logo&quot;&gt; PowerShell&lt;/h1&gt; 
&lt;p&gt;Welcome to the PowerShell GitHub Community! &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/overview&quot;&gt;PowerShell&lt;/a&gt; is a cross-platform (Windows, Linux, and macOS) automation and configuration tool/framework that works well with your existing tools and is optimized for dealing with structured data (e.g. JSON, CSV, XML, etc.), REST APIs, and object models. It includes a command-line shell, an associated scripting language, and a framework for processing cmdlets.&lt;/p&gt; 
&lt;h2&gt;Windows PowerShell vs. PowerShell 7+&lt;/h2&gt; 
&lt;p&gt;Although this repository started as a fork of the Windows PowerShell codebase, changes made in this repository are not ported back to Windows PowerShell 5.1. This also means that &lt;a href=&quot;https://github.com/PowerShell/PowerShell/issues&quot;&gt;issues tracked here&lt;/a&gt; are only for PowerShell 7.x and higher. Windows PowerShell specific issues should be reported with the &lt;a href=&quot;https://support.microsoft.com/windows/send-feedback-to-microsoft-with-the-feedback-hub-app-f59187f8-8739-22d6-ba93-f66612949332&quot;&gt;Feedback Hub app&lt;/a&gt;, by choosing &quot;Apps &amp;gt; PowerShell&quot; in the category.&lt;/p&gt; 
&lt;h2&gt;New to PowerShell?&lt;/h2&gt; 
&lt;p&gt;If you are new to PowerShell and want to learn more, we recommend reviewing the &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/learn/more-powershell-learning&quot;&gt;getting started&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;Get PowerShell&lt;/h2&gt; 
&lt;p&gt;PowerShell is supported on Windows, macOS, and a variety of Linux platforms. For more information, see &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/install/installing-powershell&quot;&gt;Installing PowerShell&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Upgrading PowerShell&lt;/h2&gt; 
&lt;p&gt;For best results when upgrading, you should use the same install method you used when you first installed PowerShell. The update method is different for each platform and install method.&lt;/p&gt; 
&lt;h2&gt;Community Dashboard&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://aka.ms/PSPublicDashboard&quot;&gt;Dashboard&lt;/a&gt; with visualizations for community contributions and project status using PowerShell, Azure, and PowerBI.&lt;/p&gt; 
&lt;p&gt;For more information on how and why we built this dashboard, check out this &lt;a href=&quot;https://devblogs.microsoft.com/powershell/powershell-open-source-community-dashboard/&quot;&gt;blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Discussions&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/discussions/quickstart&quot;&gt;GitHub Discussions&lt;/a&gt; is a feature to enable free and open discussions within the community for topics that are not related to code, unlike issues.&lt;/p&gt; 
&lt;p&gt;This is an experiment we are trying in our repositories, to see if it helps move discussions out of issues so that issues remain actionable by the team or members of the community. There should be no expectation that PowerShell team members are regular participants in these discussions. Individual PowerShell team members may choose to participate in discussions, but the expectation is that community members help drive discussions so that team members can focus on issues.&lt;/p&gt; 
&lt;p&gt;Create or join a &lt;a href=&quot;https://github.com/PowerShell/PowerShell/discussions&quot;&gt;discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Chat&lt;/h2&gt; 
&lt;p&gt;Want to chat with other members of the PowerShell community?&lt;/p&gt; 
&lt;p&gt;There are dozens of topic-specific channels on our community-driven PowerShell Virtual User Group, which you can join on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitter.im/PowerShell/PowerShell&quot;&gt;Gitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/PowerShell&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://web.libera.chat/#powershell&quot;&gt;IRC&lt;/a&gt; on Libera.Chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/psslack&quot;&gt;Slack&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building the Repository&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Linux&lt;/th&gt; 
   &lt;th&gt;Windows&lt;/th&gt; 
   &lt;th&gt;macOS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/building/linux.md&quot;&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/building/windows-core.md&quot;&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/building/macos.md&quot;&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you have any problems building, consult the developer &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/FAQ.md&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Build status of nightly builds&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Azure CI (Windows)&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Azure CI (Linux)&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Azure CI (macOS)&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;CodeFactor Grade&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://powershell.visualstudio.com/PowerShell/_build?definitionId=32&quot;&gt;&lt;img src=&quot;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-Windows-daily&quot; alt=&quot;windows-nightly-image&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://powershell.visualstudio.com/PowerShell/_build?definitionId=23&quot;&gt;&lt;img src=&quot;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-linux-daily?branchName=master&quot; alt=&quot;linux-nightly-image&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://powershell.visualstudio.com/PowerShell/_build?definitionId=24&quot;&gt;&lt;img src=&quot;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-macos-daily?branchName=master&quot; alt=&quot;macOS-nightly-image&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.codefactor.io/repository/github/powershell/powershell&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/powershell/powershell/badge&quot; alt=&quot;cf-image&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Downloading the Source Code&lt;/h2&gt; 
&lt;p&gt;You can clone the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/PowerShell/PowerShell.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, see &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/git&quot;&gt;working with the PowerShell repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Developing and Contributing&lt;/h2&gt; 
&lt;p&gt;Please look into the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/raw/master/.github/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; to know how to develop and contribute. If you are developing .NET Core C# applications targeting PowerShell Core, &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/FAQ.md#where-do-i-get-the-powershell-core-sdk-package&quot;&gt;check out our FAQ&lt;/a&gt; to learn more about the PowerShell SDK NuGet package.&lt;/p&gt; 
&lt;p&gt;Also, make sure to check out our &lt;a href=&quot;https://github.com/powershell/powershell-rfc&quot;&gt;PowerShell-RFC repository&lt;/a&gt; for request-for-comments (RFC) documents to submit and give comments on proposed and future designs.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;For support, see the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/.github/SUPPORT.md&quot;&gt;Support Section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Legal and Licensing&lt;/h2&gt; 
&lt;p&gt;PowerShell is licensed under the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Windows Docker Files and Images&lt;/h3&gt; 
&lt;p&gt;License: By requesting and using the Container OS Image for Windows containers, you acknowledge, understand, and consent to the Supplemental License Terms available on &lt;a href=&quot;https://mcr.microsoft.com/en-us/product/powershell/tags&quot;&gt;Microsoft Artifact Registry&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Telemetry&lt;/h3&gt; 
&lt;p&gt;Please visit our &lt;a href=&quot;https://learn.microsoft.com/powershell/module/microsoft.powershell.core/about/about_telemetry&quot;&gt;about_Telemetry&lt;/a&gt; topic to read details about telemetry gathered by PowerShell.&lt;/p&gt; 
&lt;h2&gt;Governance&lt;/h2&gt; 
&lt;p&gt;The governance policy for the PowerShell project is described the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/raw/master/docs/community/governance.md&quot;&gt;PowerShell Governance&lt;/a&gt; document.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; before participating in this project.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/SECURITY.md&quot;&gt;Security Policy&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;For any security issues, please see our &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/SECURITY.md&quot;&gt;Security Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>files-community/Files</title>
      <link>https://github.com/files-community/Files</link>
      <description>&lt;p&gt;A modern file manager that helps users organize their files and folders.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Files hero image&quot; src=&quot;https://raw.githubusercontent.com/files-community/Files/main/assets/ReadmeHero.png&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://files.community/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Files-Website-F9B81F&quot; alt=&quot;Files Website&quot;&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://github.com/files-community/Files/actions/workflows/ci.yml&quot;&gt; &lt;img src=&quot;https://github.com/files-community/Files/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Files CI Status&quot;&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://crowdin.com/project/files-app&quot;&gt; &lt;img src=&quot;https://badges.crowdin.net/files-app/localized.svg?sanitize=true&quot; alt=&quot;Files Localization Status&quot;&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://discord.gg/files&quot;&gt; &lt;img src=&quot;https://img.shields.io/discord/725513575971684472?label=Discord&amp;amp;color=7289da&quot; alt=&quot;Files Discord&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Files is a modern file manager that helps users organize their files and folders. Our mission with Files is to build the best file manager for Windows, and we’re proud to be building it out in the open so everyone can participate. User feedback helps shape the features we work on, &amp;amp; the bug reports on GitHub help to make Files more reliable. Built and maintained by the open-source community, Files features robust multitasking experiences, file tags, deep integrations, and an intuitive design.&lt;/p&gt; 
&lt;h2&gt;Installing and running Files&lt;/h2&gt; 
&lt;p&gt;Files is a community-driven project that depends on your support to grow and improve. Please consider purchasing Files through the Microsoft Store or supporting us on GitHub if you use the classic installer.&lt;/p&gt; 
&lt;p&gt;You can also use the preview version alongside the stable release to get early access to new features and improvements.&lt;/p&gt; 
&lt;p align=&quot;left&quot;&gt; 
 &lt;!-- Store Badge --&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://apps.microsoft.com/detail/9NGHP3DX8HDX?launch=true&amp;amp;mode=full&quot;&gt; 
  &lt;picture&gt; 
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./assets/StoreBadge-dark.png&quot; width=&quot;220&quot;&gt; 
   &lt;img src=&quot;https://raw.githubusercontent.com/files-community/Files/main/assets/StoreBadge-light.png&quot; width=&quot;220&quot;&gt; 
  &lt;/picture&gt;&lt;/a&gt;   
 &lt;!-- Classic Installer Badge --&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://files.community/appinstallers/Files.stable.appinstaller&quot;&gt; 
  &lt;picture&gt; 
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./assets/ClassicInstallerBadge-dark.png&quot; width=&quot;220&quot;&gt; 
   &lt;img src=&quot;https://raw.githubusercontent.com/files-community/Files/main/assets/ClassicInstallerBadge-light.png&quot; width=&quot;220&quot;&gt; 
  &lt;/picture&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;Instructions for building the source code can be found on our &lt;a href=&quot;https://files.community/docs/contributing/building-from-source&quot;&gt;documentation site&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Files&lt;/h2&gt; 
&lt;p&gt;Want to contribute to this project? Let us know with an &lt;a href=&quot;https://github.com/files-community/Files/issues&quot;&gt;issue&lt;/a&gt; that communicates your intent to create a &lt;a href=&quot;https://github.com/files-community/Files/pulls&quot;&gt;pull request&lt;/a&gt;. Also, view our &lt;a href=&quot;https://github.com/files-community/Files/raw/main/.github/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; to make sure you&#39;re up to date on the coding conventions.&lt;/p&gt; 
&lt;p&gt;Looking for a place to start? Check out the &lt;a href=&quot;https://github.com/orgs/files-community/projects/3/views/2&quot;&gt;task board&lt;/a&gt;, where you can sort tasks by size and priority.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/files-community/Files/main/assets/FilesScreenshot.png&quot; alt=&quot;Files&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QuantConnect/Lean</title>
      <link>https://github.com/QuantConnect/Lean</link>
      <description>&lt;p&gt;Lean Algorithmic Trading Engine by QuantConnect (Python, C#)&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/f3581da5-1983-4f6c-af5a-55c79b37913a&quot;&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/user-attachments/assets/0f8022d5-952d-418c-9011-2644830137d2&quot;&gt; 
 &lt;img alt=&quot;lean-header&quot; width=&quot;100%&quot;&gt; 
&lt;/picture&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/QuantConnect/Lean/actions?query=workflow%3A%22Build%20%26%20Test%20Lean%22&quot;&gt;&lt;img src=&quot;https://github.com/QuantConnect/Lean/workflows/Build%20%26%20Test%20Lean/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;https://github.com/QuantConnect/Lean/actions?query=workflow%3A%22Regression%20Tests%22&quot;&gt;&lt;img src=&quot;https://github.com/QuantConnect/Lean/workflows/Regression%20Tests/badge.svg?sanitize=true&quot; alt=&quot;Regression Tests&quot;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;https://www.quantconnect.com/forum/discussions/1/lean&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/debug-LEAN%20Forum-53c82b.svg?sanitize=true&quot; alt=&quot;LEAN Forum&quot;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;https://www.quantconnect.com/discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-Discord-53c82b.svg?sanitize=true&quot; alt=&quot;Discord Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.lean.io/&quot; title=&quot;Lean Open Source Home Page&quot;&gt;Lean Home&lt;/a&gt; | &lt;a href=&quot;https://www.lean.io/docs/&quot; title=&quot;Lean Documentation&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://github.com/QuantConnect/Lean/archive/master.zip&quot;&gt;Download Zip&lt;/a&gt; | &lt;a href=&quot;https://hub.docker.com/orgs/quantconnect/repositories&quot;&gt;Docker Hub&lt;/a&gt; | &lt;a href=&quot;https://www.nuget.org/profiles/jaredbroad&quot;&gt;Nuget&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/09d7707d-619d-48e2-b6d9-ef2d2d61144b&quot;&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/user-attachments/assets/aab2422c-f480-421d-9ad2-5a355843d82a&quot;&gt; 
 &lt;img alt=&quot;features-header&quot; width=&quot;100%&quot;&gt; 
&lt;/picture&gt; 
&lt;p&gt;LEAN is an event-driven, professional-caliber algorithmic trading platform built with a passion for elegant engineering and deep quant concept modeling. Out-of-the-box alternative data and live-trading support. &lt;br&gt; &lt;br&gt;&lt;/p&gt; 
&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/d0ca17eb-307f-4155-b989-9afe502845b9&quot;&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/user-attachments/assets/9135fa86-c3e3-48e6-bbf9-de97f17afb52&quot;&gt; 
 &lt;img alt=&quot;feature-list&quot; width=&quot;100%&quot;&gt; 
&lt;/picture&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/f486e040-e350-4c9b-98c5-7b3902c0b7d8&quot;&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/user-attachments/assets/d28fd3d4-dad8-4828-94a9-676ddb360bdd&quot;&gt; 
 &lt;img alt=&quot;modular-header&quot; width=&quot;100%&quot;&gt; 
&lt;/picture&gt; LEAN is modular in design, with each component pluggable and customizable. It ships with models for all major plug-in points. 
&lt;br&gt; 
&lt;br&gt; 
&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/7989d185-45cd-4a40-acef-6ff61d9d82f6&quot;&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/user-attachments/assets/5f9cc976-a715-495a-9977-87961509d2e0&quot;&gt; 
 &lt;img alt=&quot;modular-architecture&quot; width=&quot;100%&quot;&gt; 
&lt;/picture&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/9b7b7abf-b0f5-41a3-8a1b-a9400738b27a&quot;&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/user-attachments/assets/1bb1dd23-dbc7-4a96-b556-edbae84012b5&quot;&gt; 
 &lt;img alt=&quot;cli-header&quot; width=&quot;100%&quot;&gt; 
&lt;/picture&gt; 
&lt;img width=&quot;100%&quot; alt=&quot;lean-animation&quot; src=&quot;https://github.com/user-attachments/assets/09a32ba9-99ee-4fa9-9b33-d98dbf5d291f&quot;&gt; 
&lt;p&gt;QuantConnect Lean CLI is a command-line interface tool for interacting with the Lean algorithmic trading engine, which is an open-source platform for backtesting and live trading algorithms in multiple financial markets. It allows developers to manage projects, run backtests, deploy live algorithms, and perform various other tasks related to algorithmic trading directly from the terminal. The CLI simplifies the workflow by automating tasks, enabling seamless integration with cloud services, and facilitating collaboration with the QuantConnect community. It&#39;s designed for quant developers who need a powerful and flexible tool to streamline their trading strategies. Please watch the &lt;a href=&quot;https://www.youtube.com/watch?v=QJibe1XpP-U&amp;amp;list=PLD7-B3LE6mz61Hojce6gKshv5-7Qo4y0r&quot;&gt;instructions videos&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;pip install lean
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Commands&lt;/h3&gt; 
&lt;p&gt;Create a new project containing starter code&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;lean project-create
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run a local Jupyter Lab environment using Docker&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;lean research
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Backtest a project locally using Docker&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;lean backtest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optimize a project locally using Docker&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;lean optimize
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start live trading a project locally using Docker&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;lean live
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Download the &lt;a href=&quot;https://cdn.quantconnect.com/i/tu/cli-cheat-sheet.pdf&quot;&gt;LEAN CLI Cheat Sheet&lt;/a&gt; for the full list of commands.&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/85b548f8-9fd1-47f1-9b10-d73b3cfc6b23&quot;&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/user-attachments/assets/b6866983-adac-4461-ac2f-8642a72ef2a5&quot;&gt; 
 &lt;img alt=&quot;modular-architecture&quot; width=&quot;100%&quot;&gt; 
&lt;/picture&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/f482fae4-5908-4d95-a427-4b1d685c355c&quot; alt=&quot;diagram&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/7b230a0d-6bf2-45bb-872e-c0faf4f1471e&quot;&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/user-attachments/assets/23b59138-aab5-43c3-91b0-20eff46ab21a&quot;&gt; 
 &lt;img alt=&quot;modular-architecture&quot; width=&quot;100%&quot;&gt; 
&lt;/picture&gt; 
&lt;p&gt;This section will cover how to install lean locally for you to use in your environment. &lt;strong&gt;For most users we strongly recommend the LEAN CLI which is prebuilt and runs on all platforms.&lt;/strong&gt; Refer to the following readme files for a detailed guide regarding using your local IDE with Lean. &lt;br&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/QuantConnect/Lean/master/.vscode/readme.md&quot;&gt;VS Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/QuantConnect/Lean/master/.vs/readme.md&quot;&gt;VS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To install locally, download the zip file with the &lt;a href=&quot;https://github.com/QuantConnect/Lean/archive/master.zip&quot;&gt;latest master&lt;/a&gt; and unzip it to your favorite location. Alternatively, install &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;Git&lt;/a&gt; and clone the repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/QuantConnect/Lean.git
cd Lean
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;NOTE: Visual Studio for Mac &lt;a href=&quot;https://learn.microsoft.com/en-gb/visualstudio/releases/2022/what-happened-to-vs-for-mac&quot;&gt;has been discontinued&lt;/a&gt;, use Visual Studio Code instead&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://code.visualstudio.com/download&quot;&gt;Visual Studio Code for Mac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit&quot;&gt;C# Dev Kit extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://dotnet.microsoft.com/en-us/download/dotnet/9.0&quot;&gt;dotnet 9 SDK&lt;/a&gt;:&lt;/li&gt; 
 &lt;li&gt;To build the solution, either: 
  &lt;ul&gt; 
   &lt;li&gt;choose &lt;strong&gt;Run Task&lt;/strong&gt; &amp;gt; &lt;strong&gt;build&lt;/strong&gt; from the Panel task dropdown, or&lt;/li&gt; 
   &lt;li&gt;from the command line run &lt;pre&gt;&lt;code&gt;dotnet build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;To run the solution, either: 
  &lt;ul&gt; 
   &lt;li&gt;choose &lt;strong&gt;Run and Debug&lt;/strong&gt; from the Activity Bar, then click &lt;strong&gt;Launch&lt;/strong&gt;, or&lt;/li&gt; 
   &lt;li&gt;click F5, or&lt;/li&gt; 
   &lt;li&gt;from the command line run &lt;pre&gt;&lt;code&gt;cd Launcher/bin/Debug
dotnet QuantConnect.Lean.Launcher.dll
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Linux (Debian, Ubuntu)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/core/install/linux&quot;&gt;dotnet 9&lt;/a&gt;:&lt;/li&gt; 
 &lt;li&gt;Compile Lean Solution:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;dotnet build QuantConnect.Lean.sln
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run Lean:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;cd Launcher/bin/Debug
dotnet QuantConnect.Lean.Launcher.dll
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx&quot;&gt;Visual Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;QuantConnect.Lean.sln&lt;/code&gt; in Visual Studio&lt;/li&gt; 
 &lt;li&gt;Build the solution by clicking Build Menu -&amp;gt; Build Solution (this should trigger the NuGet package restore)&lt;/li&gt; 
 &lt;li&gt;Press &lt;code&gt;F5&lt;/code&gt; to run&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Python Support&lt;/h3&gt; 
&lt;p&gt;A full explanation of the Python installation process can be found in the &lt;a href=&quot;https://github.com/QuantConnect/Lean/tree/master/Algorithm.Python#quantconnect-python-algorithm-project&quot;&gt;Algorithm.Python&lt;/a&gt; project.&lt;/p&gt; 
&lt;h3&gt;Local-Cloud Hybrid Development.&lt;/h3&gt; 
&lt;p&gt;Seamlessly develop locally in your favorite development environment, with full autocomplete and debugging support to quickly and easily identify problems with your strategy. Please see the &lt;a href=&quot;https://www.lean.io/cli&quot;&gt;CLI Home&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Issues and Feature Requests&lt;/h2&gt; 
&lt;p&gt;Please submit bugs and feature requests as an issue to the &lt;a href=&quot;https://github.com/QuantConnect/Lean/issues&quot;&gt;Lean Repository&lt;/a&gt;. Before submitting an issue, please read the instructions to ensure it is not duplicated.&lt;/p&gt; 
&lt;h2&gt;Mailing List&lt;/h2&gt; 
&lt;p&gt;The mailing list for the project can be found on &lt;a href=&quot;https://www.quantconnect.com/forum/discussions/1/lean&quot;&gt;LEAN Forum&lt;/a&gt;. Please use this to ask for assistance with your installation and setup questions.&lt;/p&gt; 
&lt;h2&gt;Contributors and Pull Requests&lt;/h2&gt; 
&lt;p&gt;Contributions are warmly welcomed, but we ask you to read the existing code to see how it is formatted and commented on and ensure contributions match the existing style. All code submissions must include accompanying tests. Please see the &lt;a href=&quot;https://github.com/QuantConnect/Lean/raw/master/CONTRIBUTING.md&quot;&gt;contributor guidelines&lt;/a&gt;. All accepted pull requests will get a $50 cloud credit on QuantConnect. Once your pull request has been merged, write to us at &lt;a href=&quot;mailto:support@quantconnect.com&quot;&gt;support@quantconnect.com&lt;/a&gt; with a link to your PR to claim your free live trading. QC &amp;lt;3 Open Source.&lt;/p&gt; 
&lt;p&gt;A huge thank you to all our contributors!&lt;/p&gt; 
&lt;br&gt; 
&lt;a href=&quot;https://github.com/QuantConnect/Lean/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=QuantConnect/Lean&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;The open sourcing of QuantConnect would not have been possible without the support of the Pioneers. The Pioneers formed the core 100 early adopters of QuantConnect who subscribed and allowed us to launch the project into open source.&lt;/p&gt; 
&lt;p&gt;Ryan H, Pravin B, Jimmie B, Nick C, Sam C, Mattias S, Michael H, Mark M, Madhan, Paul R, Nik M, Scott Y, BinaryExecutor.com, Tadas T, Matt B, Binumon P, Zyron, Mike O, TC, Luigi, Lester Z, Andreas H, Eugene K, Hugo P, Robert N, Christofer O, Ramesh L, Nicholas S, Jonathan E, Marc R, Raghav N, Marcus, Hakan D, Sergey M, Peter McE, Jim M, INTJCapital.com, Richard E, Dominik, John L, H. Orlandella, Stephen L, Risto K, E.Subasi, Peter W, Hui Z, Ross F, Archibald112, MooMooForex.com, Jae S, Eric S, Marco D, Jerome B, James B. Crocker, David Lypka, Edward T, Charlie Guse, Thomas D, Jordan I, Mark S, Bengt K, Marc D, Al C, Jan W, Ero C, Eranmn, Mitchell S, Helmuth V, Michael M, Jeremy P, PVS78, Ross D, Sergey K, John Grover, Fahiz Y, George L.Z., Craig E, Sean S, Brad G, Dennis H, Camila C, Egor U, David T, Cameron W, Napoleon Hernandez, Keeshen A, Daniel E, Daniel H, M.Patterson, Asen K, Virgil J, Balazs Trader, Stan L, Con L, Will D, Scott K, Barry K, Pawel D, S Ray, Richard C, Peter L, Thomas L., Wang H, Oliver Lee, Christian L..&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/PowerToys</title>
      <link>https://github.com/microsoft/PowerToys</link>
      <description>&lt;p&gt;Windows system utilities to maximize productivity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft PowerToys&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/images/overview/PT_hero_image.png&quot; alt=&quot;Hero image for Microsoft PowerToys&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://aka.ms/powertoys-docs&quot;&gt;How to use PowerToys&lt;/a&gt; | &lt;a href=&quot;https://aka.ms/installPowerToys&quot;&gt;Downloads &amp;amp; Release notes&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/#contributing&quot;&gt;Contributing to PowerToys&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/#whats-happening&quot;&gt;What&#39;s Happening&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/#powertoys-roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Microsoft PowerToys is a set of utilities for power users to tune and streamline their Windows experience for greater productivity. For more info on &lt;a href=&quot;https://aka.ms/powertoys-docs&quot;&gt;PowerToys overviews and how to use the utilities&lt;/a&gt;, or any other tools and resources for &lt;a href=&quot;https://learn.microsoft.com/windows/dev-environment/overview&quot;&gt;Windows development environments&lt;/a&gt;, head over to &lt;a href=&quot;https://aka.ms/powertoys-docs&quot;&gt;learn.microsoft.com&lt;/a&gt;!&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Current utilities:&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_AdvancedPaste&quot;&gt;Advanced Paste&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_AoT&quot;&gt;Always on Top&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_Awake&quot;&gt;PowerToys Awake&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_CmdNotFound&quot;&gt;Command Not Found&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ColorPicker&quot;&gt;Color Picker&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_CropAndLock&quot;&gt;Crop And Lock&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_EnvironmentVariables&quot;&gt;Environment Variables&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_FancyZones&quot;&gt;FancyZones&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_FileExplorerAddOns&quot;&gt;File Explorer Add-ons&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_FileLocksmith&quot;&gt;File Locksmith&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_HostsFileEditor&quot;&gt;Hosts File Editor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ImageResizer&quot;&gt;Image Resizer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_KeyboardManager&quot;&gt;Keyboard Manager&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_MouseUtilities&quot;&gt;Mouse utilities&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_MouseWithoutBorders&quot;&gt;Mouse Without Borders&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_NewPlus&quot;&gt;New+&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_Peek&quot;&gt;Peek&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_PastePlain&quot;&gt;Paste as Plain Text&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_PowerRename&quot;&gt;PowerRename&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_PowerToysRun&quot;&gt;PowerToys Run&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_QuickAccent&quot;&gt;Quick Accent&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_RegistryPreview&quot;&gt;Registry Preview&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ScreenRuler&quot;&gt;Screen Ruler&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ShortcutGuide&quot;&gt;Shortcut Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_TextExtractor&quot;&gt;Text Extractor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_Workspaces&quot;&gt;Workspaces&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ZoomIt&quot;&gt;ZoomIt&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Installing and running Microsoft PowerToys&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 11 or Windows 10 version 2004 (code name 20H1 / build number 19041) or newer.&lt;/li&gt; 
 &lt;li&gt;x64 or ARM64 processor&lt;/li&gt; 
 &lt;li&gt;Our installer will install the following items: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://go.microsoft.com/fwlink/p/?LinkId=2124703&quot;&gt;Microsoft Edge WebView2 Runtime&lt;/a&gt; bootstrapper. This will install the latest version.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Via GitHub with EXE [Recommended]&lt;/h3&gt; 
&lt;p&gt;Go to the &lt;a href=&quot;https://aka.ms/installPowerToys&quot;&gt;Microsoft PowerToys GitHub releases page&lt;/a&gt; and click on &lt;code&gt;Assets&lt;/code&gt; at the bottom to show the files available in the release. Please use the appropriate PowerToys installer that matches your machine&#39;s architecture and install scope. For most, it is &lt;code&gt;x64&lt;/code&gt; and per-user.&lt;/p&gt; 
&lt;!-- items that need to be updated release to release --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Filename&lt;/th&gt; 
   &lt;th&gt;sha256 hash&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per user - x64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.89.0/PowerToysUserSetup-0.89.0-x64.exe&quot;&gt;PowerToysUserSetup-0.89.0-x64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;B4F130CC96F321024A257499247F6FF6DA56612215ED3882E868AAE26C689E33&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per user - ARM64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.89.0/PowerToysUserSetup-0.89.0-arm64.exe&quot;&gt;PowerToysUserSetup-0.89.0-arm64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;F69B00F4E520EB09FA0D1D1669E21910C5225FE7A2EEDC0FA7C283B201A5F9C6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Machine wide - x64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.89.0/PowerToysSetup-0.89.0-x64.exe&quot;&gt;PowerToysSetup-0.89.0-x64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;E18AC8F9023E341CF7DAD35367FB9DDDB6565D83D8155DBCDDB40AE8A24AE731&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Machine wide - ARM64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.89.0/PowerToysSetup-0.89.0-arm64.exe&quot;&gt;PowerToysSetup-0.89.0-arm64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;17DEADEC601D6061D7AF4F487595CC36D9191813003CC2ECE381017F0EC71FBB&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;This is our preferred method.&lt;/p&gt; 
&lt;h3&gt;Via Microsoft Store&lt;/h3&gt; 
&lt;p&gt;Install from the &lt;a href=&quot;https://aka.ms/getPowertoys&quot;&gt;Microsoft Store&#39;s PowerToys page&lt;/a&gt;. You must be using the &lt;a href=&quot;https://blogs.windows.com/windowsExperience/2021/06/24/building-a-new-open-microsoft-store-on-windows-11/&quot;&gt;new Microsoft Store&lt;/a&gt; which is available for both Windows 11 and Windows 10.&lt;/p&gt; 
&lt;h3&gt;Via WinGet&lt;/h3&gt; 
&lt;p&gt;Download PowerToys from &lt;a href=&quot;https://github.com/microsoft/winget-cli#installing-the-client&quot;&gt;WinGet&lt;/a&gt;. Updating PowerToys via winget will respect current PowerToys installation scope. To install PowerToys, run the following command from the command line / PowerShell:&lt;/p&gt; 
&lt;h4&gt;User scope installer [default]&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;winget install Microsoft.PowerToys -s winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Machine-wide scope installer&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;winget install --scope machine Microsoft.PowerToys -s winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other install methods&lt;/h3&gt; 
&lt;p&gt;There are &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/unofficialInstallMethods.md&quot;&gt;community driven install methods&lt;/a&gt; such as Chocolatey and Scoop. If these are your preferred install solutions, you can find the install instructions there.&lt;/p&gt; 
&lt;h2&gt;Third-Party Run Plugins&lt;/h2&gt; 
&lt;p&gt;There is a collection of &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/thirdPartyRunPlugins.md&quot;&gt;third-party plugins&lt;/a&gt; created by the community that aren&#39;t distributed with PowerToys.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions of all types. Besides coding features / bug fixes, other ways to assist include spec writing, design, documentation, and finding bugs. We are excited to work with the power user community to build a set of tools for helping you get the most out of Windows.&lt;/p&gt; 
&lt;p&gt;We ask that &lt;strong&gt;before you start work on a feature that you would like to contribute&lt;/strong&gt;, please read our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/CONTRIBUTING.md&quot;&gt;Contributor&#39;s Guide&lt;/a&gt;. We would be happy to work with you to figure out the best approach, provide guidance and mentorship throughout feature development, and help avoid any wasted or duplicate effort.&lt;/p&gt; 
&lt;p&gt;Most contributions require you to agree to a &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;Contributor License Agreement (CLA)&lt;/a&gt; declaring that you grant us the rights to use your contribution and that you have permission to do so.&lt;/p&gt; 
&lt;p&gt;For guidance on developing for PowerToys, please read the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/devdocs&quot;&gt;developer docs&lt;/a&gt; for a detailed breakdown. This includes how to setup your computer to compile.&lt;/p&gt; 
&lt;h2&gt;What&#39;s Happening&lt;/h2&gt; 
&lt;h3&gt;PowerToys Roadmap&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/microsoft/PowerToys/wiki/Roadmap&quot;&gt;prioritized roadmap&lt;/a&gt; of features and utilities that the core team is focusing on.&lt;/p&gt; 
&lt;h3&gt;0.89 - February 2025 Update&lt;/h3&gt; 
&lt;p&gt;In this release, we focused on new features, stability, accessibility and automation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;✨Highlights&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enhanced Advanced Paste by adding media transcoding support to convert different video and audio file formats! Thanks &lt;a href=&quot;https://github.com/snickler&quot;&gt;@snickler&lt;/a&gt; for your help!&lt;/li&gt; 
 &lt;li&gt;Fixed crashes when loading thumbnails after the .NET 9 update and resolved PowerLauncher.exe blocking other MSI installers from creating shortcuts!&lt;/li&gt; 
 &lt;li&gt;Fixed accessibility issues across FancyZones, Image Resizer, and Settings to improve screen reader support and clarity!&lt;/li&gt; 
 &lt;li&gt;Enhanced UI automation framework across modules and added new tests to cover manual checks, with more improvements coming!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;General&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed an issue where updating PowerToys on Windows 11 did not properly update context menu entries, impacting New+, PowerRename, Image Resizer, and File Locksmith.&lt;/li&gt; 
 &lt;li&gt;Updated .NET Packages from 9.0.1 to 9.0.2. Thanks &lt;a href=&quot;https://github.com/snickler&quot;&gt;@snickler&lt;/a&gt; for this.&lt;/li&gt; 
 &lt;li&gt;Enabled compatibility with VS17.3 and later, for C++23. Thanks &lt;a href=&quot;https://github.com/LNKLEO&quot;&gt;@LNKLEO&lt;/a&gt; for this.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Paste&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added media transcoding support to convert different video and audio file formats, improved UI layouts, refined clipboard handling, and integrated Semantic Kernel for smarter pasting. Thanks &lt;a href=&quot;https://github.com/snickler&quot;&gt;@snickler&lt;/a&gt; for your help!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FancyZones&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed accessibility by improving the text for monitors, ensuring clearer naming and help text for screen readers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Image Resizer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed issues with Width and Height fields in Image Resizer&#39;s Custom preset, ensuring empty values no longer cause errors, settings save correctly, and auto-scaling behaves as expected. Thanks &lt;a href=&quot;https://github.com/daverayment&quot;&gt;@daverayment&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed accessibility by ensuring screen readers announce selected image dimensions in the combo-box for better navigation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Monaco Preview&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed open link in default browser rather than Microsoft Edge. Thanks &lt;a href=&quot;https://github.com/OldUser101&quot;&gt;@OldUser101&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mouse Highlighter&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed a highlight released on an Administrator window will start fading, instead of staying on the screen indefinitely until the mouse button is pressed again on an unelevated window.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mouse Without Borders&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed an issue in service mode where copy-paste and drag-drop file transfers didn’t work, ensuring seamless file operations.&lt;/li&gt; 
 &lt;li&gt;Enabled GPO for enable/disable for Mouse Without Borders in Service Mode. Thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review and comments!&lt;/li&gt; 
 &lt;li&gt;Fixed code maintainability by refactoring the oversized &#39;Common&#39; class in Mouse Without Borders into smaller, focused classes for better structure and clarity. Thanks &lt;a href=&quot;https://github.com/mikeclayton&quot;&gt;@mikeclayton&lt;/a&gt; and thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PowerRename&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supported negative value as Start value in regular expression, e.g. ${start=-1314}&lt;/li&gt; 
 &lt;li&gt;Enhanced RegEx help by adding $, ^, quantifiers, and common patterns for better usability. Thanks &lt;a href=&quot;https://github.com/PesBandi&quot;&gt;@PesBandi&lt;/a&gt; and thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PowerToys Run&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed crashes when loading thumbnails after the .NET 9 update by disabling CETCompat.&lt;/li&gt; 
 &lt;li&gt;Fixed PowerLauncher.exe blocking other MSI installers creating shortcuts. Thanks &lt;a href=&quot;https://github.com/OneBlue&quot;&gt;@OneBlue&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed Run’s dark mode detection to work reliably, preventing issues with incorrect theme detection and ensuring a smoother user experience. Thanks &lt;a href=&quot;https://github.com/daverayment&quot;&gt;@daverayment&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed list separator handling in Calculator, allowing functions with multiple arguments to work correctly across different locales. For example pow(2;3) would be replaced with pow(2,3). Thanks &lt;a href=&quot;https://github.com/PesBandi&quot;&gt;@PesBandi&lt;/a&gt; and thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review!&lt;/li&gt; 
 &lt;li&gt;Fixed angle unit conversions in the PowerToys Run calculator, allowing quick conversions between radians, degrees, and gradians. Thanks &lt;a href=&quot;https://github.com/OldUser101&quot;&gt;@OldUser101&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Accent&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added ǎ, ǒ and ǔ to the IPA character set. Thanks &lt;a href=&quot;https://github.com/PesBandi&quot;&gt;@PesBandi&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added ` (backtick) and ~ (tilde) to the VK_OEM_5 character set. Thanks &lt;a href=&quot;https://github.com/xanatos&quot;&gt;@xanatos&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added ς (final sigma) to the Greek character set. Thanks &lt;a href=&quot;https://github.com/IamSmeagol&quot;&gt;@IamSmeagol&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Settings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enabled GPO for the &quot;run at startup&quot; setting. Thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review and comments!&lt;/li&gt; 
 &lt;li&gt;Fixed accessibility issue by allowing screen readers to announce the group name for secondary links in Settings pages, instead of reading link descriptions without context.&lt;/li&gt; 
 &lt;li&gt;Fixed an issue where the Color Picker shortcut was not displaying correctly in the Dashboard.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Workspaces&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed if a window was last placed on a disconnected monitor, it launches minimized and repositions within the main monitor&#39;s visible area when restored, instead of remaining off-screen and invisible.&lt;/li&gt; 
 &lt;li&gt;Fixed on ARM64 to correctly display icons for packaged apps by resolving path mismatches.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ZoomIt&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed warning C4706 and related error C2220 during build. Thanks &lt;a href=&quot;https://github.com/xanatos&quot;&gt;@xanatos&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed runner-ipc.md doc on the broken link. Thanks &lt;a href=&quot;https://github.com/daverayment&quot;&gt;@daverayment&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed the new plugin checklist by updating the target framework, removing duplicates, and improving statement organization. Thanks &lt;a href=&quot;https://github.com/hlaueriksson&quot;&gt;@hlaueriksson&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Updated runner documentation to align with the latest code structure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stabilized pipeline on ARM64 and forked build.&lt;/li&gt; 
 &lt;li&gt;Added fuzz testing for HostUILib, added as part of pipeline for OneFuzz.&lt;/li&gt; 
 &lt;li&gt;Fixed and improved UI-Test automation framework, and added new test cases for the FancyZones and Hosts module.&lt;/li&gt; 
 &lt;li&gt;Optimized Logger function as AOT compatible, improving performance by 18%.&lt;/li&gt; 
 &lt;li&gt;Made Common.UI and Setting.UI to be AOT compatible.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;What is being planned for version 0.90&lt;/h3&gt; 
&lt;p&gt;For &lt;a href=&quot;https://github.com/microsoft/PowerToys/issues?q=is%3Aissue+milestone%3A%22PowerToys+0.90%22&quot;&gt;v0.90&lt;/a&gt;, we&#39;ll work on the items below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;New module: PowerToys Run v2&lt;/li&gt; 
 &lt;li&gt;New module: File Actions Menu&lt;/li&gt; 
 &lt;li&gt;Working on installer upgrades&lt;/li&gt; 
 &lt;li&gt;Upgrading keyboard manager&#39;s editor UI&lt;/li&gt; 
 &lt;li&gt;Stability / bug fixes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;PowerToys Community&lt;/h2&gt; 
&lt;p&gt;The PowerToys team is extremely grateful to have the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/COMMUNITY.md&quot;&gt;support of an amazing active community&lt;/a&gt;. The work you do is incredibly important. PowerToys wouldn’t be nearly what it is today without your help filing bugs, updating documentation, guiding the design, or writing features. We want to say thank you and take time to recognize your work. Month by month, you directly help make PowerToys a better piece of software.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/CODE_OF_CONDUCT.md&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Privacy Statement&lt;/h2&gt; 
&lt;p&gt;The application logs basic diagnostic data (telemetry). For more information on privacy and what we collect, see our &lt;a href=&quot;https://aka.ms/powertoys-data-and-privacy-documentation&quot;&gt;PowerToys Data and Privacy documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mcmonkeyprojects/SwarmUI</title>
      <link>https://github.com/mcmonkeyprojects/SwarmUI</link>
      <description>&lt;p&gt;SwarmUI (formerly StableSwarmUI), A Modular Stable Diffusion Web-User-Interface, with an emphasis on making powertools easily accessible, high performance, and extensibility.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SwarmUI&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;SwarmUI v0.9.5 Beta&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Formerly known as StableSwarmUI.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;A Modular AI Image Generation Web-User-Interface, with an emphasis on making powertools easily accessible, high performance, and extensibility. Supports AI image models (&lt;em&gt;Stable Diffusion, Flux, etc.&lt;/em&gt;), and AI video models (&lt;em&gt;LTX-V, Hunyuan Video, Cosmos, Wan, etc.&lt;/em&gt;), with plans to support eg audio and more in the future.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mcmonkeyprojects/SwarmUI/master/.github/images/swarmui.jpg&quot; alt=&quot;ui-screenshot&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Discord Community&lt;/strong&gt;: Join the &lt;a href=&quot;https://discord.gg/q2y38cqjNw&quot;&gt;Discord&lt;/a&gt; to discuss the project, get support, see announcements, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Announcements&lt;/strong&gt;: Follow the &lt;a href=&quot;https://github.com/mcmonkeyprojects/SwarmUI/discussions/1&quot;&gt;Feature Announcements Thread&lt;/a&gt; for updates on new features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General documentation&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mcmonkeyprojects/SwarmUI/raw/master/docs/README.md&quot;&gt;/docs folder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Website&lt;/strong&gt;: &lt;a href=&quot;https://swarmui.net/&quot;&gt;SwarmUI.net&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;Status&lt;/h1&gt; 
&lt;p&gt;This project is in &lt;strong&gt;Beta&lt;/strong&gt; status. This means for most tasks, Swarm has excellent tooling available to you, but there is much more planned. Swarm is recommended as an ideal UI for most users, beginners and pros alike. There are still some things to be worked out.&lt;/p&gt; 
&lt;p&gt;Beginner users will love Swarm&#39;s primary Generate tab interface, making it easy to generate anything with a variety of powerful features. Advanced users may favor the Comfy Workflow tab to get the unrestricted raw graph, but will still have reason to come back to the Generate tab for convenience features (image editor, auto-workflow-generation, etc) and powertools (eg Grid Generator).&lt;/p&gt; 
&lt;p&gt;Those interested in helping push Swarm from Beta to a Full ready-for-anything perfected Release status are welcome to submit PRs (read the &lt;a href=&quot;https://raw.githubusercontent.com/mcmonkeyprojects/SwarmUI/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; document first), and you can contact us here on GitHub or on &lt;a href=&quot;https://discord.gg/q2y38cqjNw&quot;&gt;Discord&lt;/a&gt;. I highly recommend reaching out to ask about plans for a feature before PRing it. There may already be specific plans or even a work in progress.&lt;/p&gt; 
&lt;p&gt;Key feature targets not yet implemented:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Better mobile browser support&lt;/li&gt; 
 &lt;li&gt;full detail &quot;Current Model&quot; display in UI, separate from the model selector (probably as a tab within the batch sidebar?)&lt;/li&gt; 
 &lt;li&gt;LLM-assisted prompting (there&#39;s an extension for it, but LLM control should be natively supported)&lt;/li&gt; 
 &lt;li&gt;convenient direct-distribution of Swarm as a program (&lt;a href=&quot;https://tauri.app/&quot;&gt;Tauri&lt;/a&gt;, &lt;a href=&quot;https://learn.microsoft.com/en-us/training/modules/build-blazor-hybrid/&quot;&gt;Blazor Desktop&lt;/a&gt;, or an Electron app?)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Try It On Google Colab&lt;/h1&gt; 
&lt;h3&gt;Google Colab&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: Google Colab does not necessarily allow remote WebUIs, particularly for free accounts, use at your own risk.&lt;/p&gt; 
&lt;p&gt;Colab link if you want to try Swarm: &lt;a href=&quot;https://colab.research.google.com/github/mcmonkeyprojects/SwarmUI/blob/master/colab/colab-notebook.ipynb&quot;&gt;https://colab.research.google.com/github/mcmonkeyprojects/SwarmUI/blob/master/colab/colab-notebook.ipynb&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Run it on a Cloud GPU Provider&lt;/h1&gt; 
&lt;h3&gt;Runpod&lt;/h3&gt; 
&lt;p&gt;Runpod template (note: maintained by third party contributor &lt;a href=&quot;https://github.com/nerdylive123&quot;&gt;nerdylive123&lt;/a&gt;): &lt;a href=&quot;https://runpod.io/console/deploy?template=u7mlkrmxq3&amp;amp;ref=c6jd6jj0&quot;&gt;https://runpod.io/console/deploy?template=u7mlkrmxq3&amp;amp;ref=c6jd6jj0&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Vast.ai&lt;/h3&gt; 
&lt;p&gt;Vast.ai template (&lt;a href=&quot;https://cloud.vast.ai/template/readme/8e5e6ab1fceb9db3f813e815907b3390&quot;&gt;readme&lt;/a&gt;): &lt;a href=&quot;https://cloud.vast.ai?template_id=21b140f47ee8d4ebb2ce836afe2f9ad9&quot;&gt;https://cloud.vast.ai?template_id=21b140f47ee8d4ebb2ce836afe2f9ad9&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Note it may take several minutes to start up the first time. Check the container logs to see setup progress. Check the template &lt;code&gt;?&lt;/code&gt; info for hints on how to use.&lt;/p&gt; 
&lt;h1&gt;Installing on Windows&lt;/h1&gt; 
&lt;p&gt;Note: if you&#39;re on Windows 10, you may need to manually install &lt;a href=&quot;https://git-scm.com/download/win&quot;&gt;git&lt;/a&gt; and &lt;a href=&quot;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&quot;&gt;DotNET 8 SDK&lt;/a&gt; first. (Windows 11 this is automated).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download &lt;a href=&quot;https://github.com/mcmonkeyprojects/SwarmUI/releases/download/0.9.5-Beta/install-windows.bat&quot;&gt;The Install-Windows.bat file&lt;/a&gt;, store it somewhere you want to install at (not &lt;code&gt;Program Files&lt;/code&gt;), and run it. 
  &lt;ul&gt; 
   &lt;li&gt;It should open a command prompt and install itself.&lt;/li&gt; 
   &lt;li&gt;If it closes without going further, try running it again, it sometimes needs to run twice. (TODO: Fix that)&lt;/li&gt; 
   &lt;li&gt;It will place an icon on your desktop that you can use to re-launch the server at any time.&lt;/li&gt; 
   &lt;li&gt;When the installer completes, it will automatically launch the SwarmUI server, and open a browser window to the install page.&lt;/li&gt; 
   &lt;li&gt;Follow the install instructions on the page.&lt;/li&gt; 
   &lt;li&gt;After you submit, be patient, some of the install processing take a few minutes (downloading models and etc).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(TODO): Even easier self-contained pre-installer, a &lt;code&gt;.msi&lt;/code&gt; or &lt;code&gt;.exe&lt;/code&gt; that provides a general install screen and lets you pick folder and all.&lt;/p&gt; 
&lt;h1&gt;Alternate Manual Windows Install&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install git from &lt;a href=&quot;https://git-scm.com/download/win&quot;&gt;https://git-scm.com/download/win&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install DotNET 8 SDK from &lt;a href=&quot;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&quot;&gt;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&lt;/a&gt; (Make sure to get the SDK x64 for Windows)&lt;/li&gt; 
 &lt;li&gt;open a terminal to the folder you want swarm in and run &lt;code&gt;git clone https://github.com/mcmonkeyprojects/SwarmUI&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;open the folder and run &lt;code&gt;launch-windows.bat&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Installing on Linux&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;python3&lt;/code&gt; via your OS package manager if they are not already installed (make sure to include &lt;code&gt;pip&lt;/code&gt; and &lt;code&gt;venv&lt;/code&gt; on distros that do not include them in python directly)&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For example, on recent Ubuntu versions, &lt;code&gt;sudo apt install git python3-pip python3-venv&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Download &lt;a href=&quot;https://github.com/mcmonkeyprojects/SwarmUI/releases/download/0.6.5-Beta/install-linux.sh&quot;&gt;the install-linux.sh file&lt;/a&gt;, store it somewhere you want to install at, and run it&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If you like terminals, you can open a terminal to the folder and run the following commands: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;wget https://github.com/mcmonkeyprojects/SwarmUI/releases/download/0.6.5-Beta/install-linux.sh -O install-linux.sh&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;chmod +x install-linux.sh&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the &lt;code&gt;./install-linux.sh&lt;/code&gt; script, it will install everything for you and eventually open the webpage in your browser.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the install instructions on-page.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can at any time in the future run the &lt;code&gt;launch-linux.sh&lt;/code&gt; script to re-launch Swarm.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If the page doesn&#39;t open itself, you can manually open &lt;code&gt;http://localhost:7801&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Alternate Manual Linux Install&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;python3&lt;/code&gt; via your OS package manager if they are not already installed (make sure to include &lt;code&gt;pip&lt;/code&gt; and &lt;code&gt;venv&lt;/code&gt; on distros that do not include them in python directly) 
  &lt;ul&gt; 
   &lt;li&gt;For example, on recent Ubuntu versions, &lt;code&gt;sudo apt install git python3-pip python3-venv&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;You&#39;ll want Python 3.11. Things should also work fine with 3.10 or 3.12. Do not use 3.13.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install DotNET 8 using the instructions at &lt;a href=&quot;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&quot;&gt;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&lt;/a&gt; (you need &lt;code&gt;dotnet-sdk-8.0&lt;/code&gt;, as that includes all relevant sub-packages) 
  &lt;ul&gt; 
   &lt;li&gt;Some users &lt;a href=&quot;https://github.com/Stability-AI/StableSwarmUI/pull/6&quot;&gt;have said&lt;/a&gt; that certain Linux distros expect &lt;code&gt;aspnet-runtime&lt;/code&gt; to be installed separately&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Open a shell terminal and &lt;code&gt;cd&lt;/code&gt; to a directory you want to install into&lt;/li&gt; 
 &lt;li&gt;Run shell commands: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;git clone https://github.com/mcmonkeyprojects/SwarmUI&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;cd &lt;code&gt;SwarmUI&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;./launch-linux.sh&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;or if running on a headless server, &lt;code&gt;./launch-linux.sh --launch_mode none --host 0.0.0.0&lt;/code&gt; and/or swap host for &lt;a href=&quot;https://raw.githubusercontent.com/mcmonkeyprojects/SwarmUI/master/docs/Advanced%20Usage.md&quot;&gt;cloudflared&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;open &lt;code&gt;http://localhost:7801/Install&lt;/code&gt; (if it doesn&#39;t launch itself)&lt;/li&gt; 
 &lt;li&gt;Follow the install instructions on-page.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(TODO): Maybe outlink a dedicated document with per-distro details and whatever. Maybe also make a one-click installer for Linux?&lt;/p&gt; 
&lt;h1&gt;Installing on Mac&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can only run SwarmUI on Mac computers with M-Series Apple silicon processors (eg M1, M2, ...).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open Terminal.&lt;/li&gt; 
 &lt;li&gt;Ensure your &lt;code&gt;brew&lt;/code&gt; packages are updated with &lt;code&gt;brew update&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Verify your &lt;code&gt;brew&lt;/code&gt; installation with &lt;code&gt;brew doctor&lt;/code&gt;. You should not see any error in the command output.&lt;/li&gt; 
 &lt;li&gt;Install .NET for macOS: &lt;code&gt;brew install dotnet&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If you don&#39;t have Python, install it: &lt;code&gt;brew install python@3.11&lt;/code&gt; and &lt;code&gt;brew install virtualenv&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Python 3.11, 3.10, 3.12 are all fine. 3.13 is not, do not use 3.13.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Change the directory (&lt;code&gt;cd&lt;/code&gt;) to the folder where you want to install SwarmUI.&lt;/li&gt; 
 &lt;li&gt;Clone the SwarmUI GitHub repository: &lt;code&gt;git clone https://github.com/mcmonkeyprojects/SwarmUI&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd SwarmUI&lt;/code&gt; and run the installation script: &lt;code&gt;./launch-macos.sh&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Wait for the web browser to open, and follow the install instructions on-page.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Installing With Docker&lt;/h1&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/mcmonkeyprojects/SwarmUI/master/docs/Docker.md&quot;&gt;Docs/Docker.md&lt;/a&gt; for detailed instructions on using SwarmUI in Docker.&lt;/p&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/mcmonkeyprojects/SwarmUI/master/docs/README.md&quot;&gt;the documentation folder&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Motivations&lt;/h1&gt; 
&lt;p&gt;The &quot;Swarm&quot; name is in reference to the original key function of the UI: enabling a &#39;swarm&#39; of GPUs to all generate images for the same user at once (especially for large grid generations). This is just the feature that inspired the name and not the end all of what Swarm is.&lt;/p&gt; 
&lt;p&gt;The overall goal of SwarmUI is to a be full-featured one-stop-shop for all things Stable Diffusion.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/mcmonkeyprojects/SwarmUI/master/docs/Motivations.md&quot;&gt;the motivations document&lt;/a&gt; for motivations on technical choices.&lt;/p&gt; 
&lt;h1&gt;Legal&lt;/h1&gt; 
&lt;p&gt;This project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;embeds a copy of &lt;a href=&quot;https://7-zip.org/download.html&quot;&gt;7-zip&lt;/a&gt; (LGPL).&lt;/li&gt; 
 &lt;li&gt;has the ability to auto-install &lt;a href=&quot;https://github.com/comfyanonymous/ComfyUI&quot;&gt;ComfyUI&lt;/a&gt; (GPL).&lt;/li&gt; 
 &lt;li&gt;has the option to use as a backend &lt;a href=&quot;https://github.com/AUTOMATIC1111/stable-diffusion-webui&quot;&gt;AUTOMATIC1111/stable-diffusion-webui&lt;/a&gt; (AGPL).&lt;/li&gt; 
 &lt;li&gt;can automatically install &lt;a href=&quot;https://github.com/christophschuhmann/improved-aesthetic-predictor&quot;&gt;christophschuhmann/improved-aesthetic-predictor&lt;/a&gt; (Apache2) and &lt;a href=&quot;https://github.com/yuvalkirstain/PickScore&quot;&gt;yuvalkirstain/PickScore&lt;/a&gt; (MIT).&lt;/li&gt; 
 &lt;li&gt;can automatically install &lt;a href=&quot;https://git-scm.com/download/win&quot;&gt;git-for-windows&lt;/a&gt; (GPLv2).&lt;/li&gt; 
 &lt;li&gt;can automatically install MIT/BSD/Apache2/PythonSoftwareFoundation pip packages: &lt;a href=&quot;https://pypi.org/project/spandrel/&quot;&gt;spandrel&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/project/dill/&quot;&gt;dill&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/project/imageio-ffmpeg/&quot;&gt;imageio-ffmpeg&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/project/opencv-python-headless/&quot;&gt;opencv-python-headless&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/project/matplotlib/&quot;&gt;matplotlib&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/project/rembg/&quot;&gt;rembg&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/project/kornia/&quot;&gt;kornia&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/project/Cython/&quot;&gt;Cython&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;can automatically install &lt;a href=&quot;https://github.com/ultralytics/ultralytics&quot;&gt;ultralytics&lt;/a&gt; (AGPL) for &lt;code&gt;YOLOv8&lt;/code&gt; face detection (ie &lt;code&gt;SwarmYoloDetection&lt;/code&gt; node or &lt;code&gt;&amp;lt;segment:yolo-...&amp;gt;&lt;/code&gt; syntax usage may become subject to AGPL terms),&lt;/li&gt; 
 &lt;li&gt;can automatically install &lt;a href=&quot;https://github.com/deepinsight/insightface&quot;&gt;insightface&lt;/a&gt; (MIT) for &lt;code&gt;IP Adapter - Face&lt;/code&gt; support&lt;/li&gt; 
 &lt;li&gt;uses &lt;a href=&quot;https://github.com/JamesNK/Newtonsoft.Json&quot;&gt;JSON.NET&lt;/a&gt; (MIT), &lt;a href=&quot;https://github.com/FreneticLLC/FreneticUtilities&quot;&gt;FreneticUtilities&lt;/a&gt; (MIT), &lt;a href=&quot;https://github.com/mbdavid/LiteDB&quot;&gt;LiteDB&lt;/a&gt; (MIT), &lt;a href=&quot;https://github.com/SixLabors/ImageSharp/&quot;&gt;ImageSharp&lt;/a&gt; (Apache2 under open-source Split License)&lt;/li&gt; 
 &lt;li&gt;embeds copies of web assets from &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;BootStrap&lt;/a&gt; (MIT), &lt;a href=&quot;https://select2.org/&quot;&gt;Select2&lt;/a&gt; (MIT), &lt;a href=&quot;https://jquery.com/&quot;&gt;JQuery&lt;/a&gt; (MIT), &lt;a href=&quot;https://github.com/MikeKovarik/exifr&quot;&gt;exifr&lt;/a&gt; (MIT).&lt;/li&gt; 
 &lt;li&gt;contains some icons from &lt;a href=&quot;https://www.figma.com/community/file/1311159026125960259/7000-free-ui-icons&quot;&gt;Cristian Munoz&lt;/a&gt; (CC-BY-4.0), the font &lt;a href=&quot;https://github.com/rsms/inter&quot;&gt;inter by rsms&lt;/a&gt; (OFL), &lt;a href=&quot;https://unifoundry.com/unifont/&quot;&gt;Unifont by GNU&lt;/a&gt; (OFL), &lt;a href=&quot;https://fonts.google.com/icons&quot;&gt;Material Symbols Outlined by Google&lt;/a&gt; (Apache2).&lt;/li&gt; 
 &lt;li&gt;can be used to install some custom node packs, which have individual license notices for any non-pure-FOSS licenses before install.&lt;/li&gt; 
 &lt;li&gt;supports user-built extensions which may have their own licenses or legal conditions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;SwarmUI itself is under the MIT license, however some usages may be affected by the GPL variant licenses of connected projects list above, and note that any models used have their own licenses.&lt;/p&gt; 
&lt;h3&gt;Previous License&lt;/h3&gt; 
&lt;p&gt;(For updates prior to June 2024)&lt;/p&gt; 
&lt;p&gt;The MIT License (MIT) Copyright (c) 2024 Stability AI&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;The MIT License (MIT)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2024-2025 Alex &quot;mcmonkey&quot; Goodwin&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/semantic-kernel</title>
      <link>https://github.com/microsoft/semantic-kernel</link>
      <description>&lt;p&gt;Integrate cutting-edge LLM technology quickly and easily into your apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Semantic Kernel&lt;/h1&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Python &lt;br&gt; &lt;a href=&quot;https://pypi.org/project/semantic-kernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/semantic-kernel&quot; alt=&quot;Python package&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;.NET &lt;br&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.SemanticKernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.SemanticKernel&quot; alt=&quot;Nuget package&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci-docker.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci-docker.yml/badge.svg?branch=main&quot; alt=&quot;dotnet Docker&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci-windows.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci-windows.yml/badge.svg?branch=main&quot; alt=&quot;dotnet Windows&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/semantic-kernel&quot; alt=&quot;License: MIT&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1063152441819942922?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=d82679&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/overview/&quot;&gt;Semantic Kernel&lt;/a&gt; is an SDK that integrates Large Language Models (LLMs) like &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, and &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt; with conventional programming languages like C#, Python, and Java. Semantic Kernel achieves this by allowing you to define &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/plugins&quot;&gt;plugins&lt;/a&gt; that can be chained together in just a &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/chaining-functions?tabs=Csharp#using-the-runasync-method-to-simplify-your-code&quot;&gt;few lines of code&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;What makes Semantic Kernel &lt;em&gt;special&lt;/em&gt;, however, is its ability to &lt;em&gt;automatically&lt;/em&gt; orchestrate plugins with AI. With Semantic Kernel &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/planner&quot;&gt;planners&lt;/a&gt;, you can ask an LLM to generate a plan that achieves a user&#39;s unique goal. Afterwards, Semantic Kernel will execute the plan for the user.&lt;/p&gt; 
&lt;p&gt;It provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;abstractions for AI services (such as chat, text to images, audio to text, etc.) and memory stores&lt;/li&gt; 
 &lt;li&gt;implementations of those abstractions for services from &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt;, local models, and more, and for a multitude of vector databases, such as those from &lt;a href=&quot;https://docs.trychroma.com/getting-started&quot;&gt;Chroma&lt;/a&gt;, &lt;a href=&quot;https://qdrant.tech/&quot;&gt;Qdrant&lt;/a&gt;, &lt;a href=&quot;https://milvus.io/&quot;&gt;Milvus&lt;/a&gt;, and &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search&quot;&gt;Azure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;a common representation for &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/plugins&quot;&gt;plugins&lt;/a&gt;, which can then be orchestrated automatically by AI&lt;/li&gt; 
 &lt;li&gt;the ability to create such plugins from a multitude of sources, including from OpenAPI specifications, prompts, and arbitrary code written in the target language&lt;/li&gt; 
 &lt;li&gt;extensible support for prompt management and rendering, including built-in handling of common formats like Handlebars and Liquid&lt;/li&gt; 
 &lt;li&gt;and a wealth of functionality layered on top of these abstractions, such as filters for responsible AI, dependency injection integration, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Semantic Kernel is utilized by enterprises due to its flexibility, modularity and observability. Backed with security enhancing capabilities like telemetry support, and hooks and filters so you’ll feel confident you’re delivering responsible AI solutions at scale. Semantic Kernel was designed to be future proof, easily connecting your code to the latest AI models evolving with the technology as it advances. When new models are released, you’ll simply swap them out without needing to rewrite your entire codebase.&lt;/p&gt; 
&lt;h4&gt;Please star the repo to show your support for this project!&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/enterprise-ready.png&quot; alt=&quot;Enterprise-ready&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Getting started with Semantic Kernel&lt;/h2&gt; 
&lt;p&gt;The Semantic Kernel SDK is available in C#, Python, and Java. To get started, choose your preferred language below. See the &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/supported-languages&quot;&gt;Feature Matrix&lt;/a&gt; for a breakdown of feature parity between our currently supported languages.&lt;/p&gt; 
&lt;table width=&quot;100%&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; src=&quot;https://user-images.githubusercontent.com/371009/230673036-fad1e8e6-5d48-49b1-a9c1-6f9834e0d165.png&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/dotnet/README.md&quot;&gt;Using Semantic Kernel in C#&lt;/a&gt; &amp;nbsp;
     &lt;br&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; src=&quot;https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg?sanitize=true&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/python/README.md&quot;&gt;Using Semantic Kernel in Python&lt;/a&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; height=&quot;52px&quot; src=&quot;https://upload.wikimedia.org/wikipedia/en/3/30/Java_programming_language_logo.svg?sanitize=true&quot; alt=&quot;Java logo&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java/raw/main/README.md&quot;&gt;Using Semantic Kernel in Java&lt;/a&gt; 
    &lt;/div&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The quickest way to get started with the basics is to get an API key from either OpenAI or Azure OpenAI and to run one of the C#, Python, and Java console applications/scripts below.&lt;/p&gt; 
&lt;h3&gt;For C#:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the Quick start page &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide?pivots=programming-language-csharp&quot;&gt;here&lt;/a&gt; and follow the steps to dive in.&lt;/li&gt; 
 &lt;li&gt;After Installing the SDK, we advise you follow the steps and code detailed to write your first console app. &lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/dotnetmap.png&quot; alt=&quot;dotnetmap&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;For Python:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the Quick start page &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide?pivots=programming-language-python&quot;&gt;here&lt;/a&gt; and follow the steps to dive in.&lt;/li&gt; 
 &lt;li&gt;You&#39;ll need to ensure that you toggle to Python in the Choose a programming language table at the top of the page. &lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/pythonmap.png&quot; alt=&quot;pythonmap&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;For Java:&lt;/h3&gt; 
&lt;p&gt;The Java code is in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java&quot;&gt;semantic-kernel-java&lt;/a&gt; repository. See &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java/raw/main/BUILD.md&quot;&gt;semantic-kernel-java build&lt;/a&gt; for instructions on how to build and run the Java code.&lt;/p&gt; 
&lt;p&gt;Please file Java Semantic Kernel specific issues in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java&quot;&gt;semantic-kernel-java&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Learning how to use Semantic Kernel&lt;/h2&gt; 
&lt;p&gt;The fastest way to learn how to use Semantic Kernel is with our C# and Python Jupyter notebooks. These notebooks demonstrate how to use Semantic Kernel with code snippets that you can run with a push of a button.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/dotnet/notebooks/00-getting-started.ipynb&quot;&gt;Getting Started with C# notebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/python/samples/getting_started/00-getting-started.ipynb&quot;&gt;Getting Started with Python notebook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Once you&#39;ve finished the getting started notebooks, you can then check out the main walkthroughs on our Learn site. Each sample comes with a completed C# and Python project that you can run locally.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;📖 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔌 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/detailed-samples&quot;&gt;Detailed Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/kernel&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Finally, refer to our API references for more details on the C# and Python APIs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/microsoft.semantickernel?view=semantic-kernel-dotnet&quot;&gt;C# API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/python/api/semantic-kernel/semantic_kernel?view=semantic-kernel-python&quot;&gt;Python API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Java API reference (coming soon)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Visual Studio Code extension: design semantic functions with ease&lt;/h2&gt; 
&lt;p&gt;The Semantic Kernel extension for Visual Studio Code makes it easy to design and test semantic functions. The extension provides an interface for designing semantic functions and allows you to test them with the push of a button with your existing models and data.&lt;/p&gt; 
&lt;h2&gt;Join the community&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions and suggestions to SK community! One of the easiest ways to participate is to engage in discussions in the GitHub repository. Bug reports and fixes are welcome!&lt;/p&gt; 
&lt;p&gt;For new features, components, or extensions, please open an issue and discuss with us before sending a PR. This is to avoid rejection as we might be taking the core in a different direction, but also to consider the impact on the larger ecosystem.&lt;/p&gt; 
&lt;p&gt;To learn more and get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Read the &lt;a href=&quot;https://aka.ms/sk/learn&quot;&gt;documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Learn how to &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/support/contributing&quot;&gt;contribute&lt;/a&gt; to the project&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel/discussions&quot;&gt;GitHub discussions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;Discord community&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Attend &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/COMMUNITY.md&quot;&gt;regular office hours and SK community events&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the team on our &lt;a href=&quot;https://aka.ms/sk/blog&quot;&gt;blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributor Wall of Fame&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=microsoft/semantic-kernel&quot; alt=&quot;semantic-kernel contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/LICENSE&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>YSGStudyHards/DotNetGuide</title>
      <link>https://github.com/YSGStudyHards/DotNetGuide</link>
      <description>&lt;p&gt;🌈【C#/.NET/.NET Core学习、工作、面试指南】记录、收集和总结C#/.NET/.NET Core基础知识、学习路线、开发实战、编程技巧练习、学习视频、文章、书籍、项目框架、社区组织、开发必备工具、技术前沿周刊、常见面试题、面试须知、简历模板、人才招聘、以及自己在学习和工作中的一些微薄见解。希望能和大家一起学习，共同进步。如果本知识库能为您提供帮助，别忘了给予支持哦(关注、点赞、分享)💖。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🌈C#/.NET/.NET Core学习、工作、面试指南&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;让现在的自己不再迷茫✨✨✨。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://images.cnblogs.com/cnblogs_com/Can-daydayup/2336807/o_230817182324_%E5%AD%A6%E4%B9%A0%E5%B7%A5%E4%BD%9C%E9%9D%A2%E8%AF%95%E6%8C%87%E5%8D%97.png&quot; alt=&quot;C#/.NET/.NET Core学习、工作、面试指南&quot; title=&quot;C#/.NET/.NET Core学习、工作、面试指南&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;📚DotNetGuide简介&lt;/h2&gt; 
&lt;p&gt;现如今网上关于Java、前端、Android、Golang...等相关技术的学习资料、工作心得、面试指南一搜都是一大把，但是咱们C#/.NET的相关学习资料、工作心得、面试指南都是寥寥无几。&lt;strong&gt;我在微信技术群、知乎里面经常会看到这样的提问：有没有好的C#/.NET相关的学习书籍、视频教程、项目框架和常见面试题推荐的？&lt;/strong&gt;。并不是没有人写，而是因为网上的资料和文章太零散了，缺少一个这方面汇总的知识库。作为一名.NET开发者而言当然是不想让这种现象普遍存在的，建立DotNetGuide知识库的初衷就是为了记录、收集和总结优质的.NET相关学习资料（学习路线、视频、文章、书籍、项目、框架...等）、开发实战教程、编程技巧练习、开发必备工具、技术前沿周刊、常见面试题、面试须知、简历模板、人才招聘、以及自己在学习和工作中的一些微薄见解，希望可以帮助到那些想要入门学习.NET或者正在使用.NET的同学。一个人的力量是十分有限的，由衷的欢迎大家可以在Issues中投稿或者直接提交PR一起完善我们的C#/.NET/.NET Core学习、工作、面试指南知识库🤞。&lt;/p&gt; 
&lt;h2&gt;👨‍👩‍👦DotNetGuide技术社区&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;DotNetGuide技术社区是一个面向.NET开发者的开源技术社区，旨在为开发者们提供全面的C#/.NET/.NET Core相关学习资料、技术分享和咨询、项目框架推荐、求职和招聘资讯、以及解决问题的平台。&lt;/li&gt; 
 &lt;li&gt;在DotNetGuide技术社区中，开发者们可以分享自己的技术文章、项目经验、学习心得、遇到的疑难技术问题以及解决方案，并且还有机会结识志同道合的开发者。&lt;/li&gt; 
 &lt;li&gt;我们致力于构建一个积极向上、和谐友善的.NET技术交流平台。无论您是初学者还是有丰富经验的开发者，我们都希望能为您提供更多的价值和成长机会。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;欢迎关注作者（DotNetGuide官方公众号：&lt;strong&gt;&lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzIxMTUzNzM5Ng==&amp;amp;action=getalbum&amp;amp;album_id=1881849804402589699#wechat_redirect&quot;&gt;追逐时光者&lt;/a&gt;&lt;/strong&gt;），与大姚一起沟通、交流学习、共同进步。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/BStnJHEyMntyMsHaPiX_Sg&quot;&gt;🤖强大的.NET AI智能体&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.yuque.com/ysgstudyhard/eonn6x/wbbtrsgegg6g9dhc&quot;&gt;🎯DotNetGuide编程学院&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/dCyKG6n6l5ICTl24dKNqbw&quot;&gt;😎了解作者&amp;amp;获取更多学习资料&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/07UYvW8uuspWaaBrWjw2MQ&quot;&gt;👨‍👩‍👦DotNetGuide技术社区微信交流群&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.yuque.com/ysgstudyhard/eonn6x/wbbtrsgegg6g9dhc&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;https://images.cnblogs.com/cnblogs_com/Can-daydayup/2447345/o_250302093353_DotNetGuideFaculty.jpg&quot; width=&quot;58%&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🎉Issues宝藏存库&lt;/h2&gt; 
&lt;p&gt;🙌知识库中有总结不足的地方，欢迎各位大佬给我提意见(&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/7&quot;&gt;💖留下您宝贵的建议&lt;/a&gt;)。 如果DotNetGuide知识库对大家有帮助的话记得给作者一个星星哟⭐(您的小星星就是对我最大的肯定和鼓励)！&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;点击下面的图片，前往&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues?q=is%3Aissue+is%3Aopen+sort%3Acomments-desc&quot;&gt;Issues&lt;/a&gt;留下您压箱底的大宝藏👇：&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues?q=is%3Aissue+is%3Aopen+sort%3Acomments-desc&quot;&gt;&lt;img src=&quot;https://images.cnblogs.com/cnblogs_com/Can-daydayup/2138171/o_7116bc4a.png&quot; alt=&quot;DotNetGuide宝藏收集地&quot; title=&quot;宝藏存库&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🔍目录导航(善用Ctrl+F)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%EF%B8%8F%E4%BC%98%E8%B4%A8%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%94%B6%E5%BD%95%E6%A0%88&quot;&gt;🏷️优质学习资料收录栈&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%E7%BC%96%E7%A8%8B%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87%E6%8A%80%E5%B7%A7%E9%9B%86&quot;&gt;🏹编程效率提升技巧集&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%EF%B8%8F%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6&quot;&gt;⚒️程序员常用的工具软件&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#cnetnet-core%E5%85%85%E7%94%B5%E7%AB%99&quot;&gt;🔋C#/.NET/.NET Core充电站&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/43&quot;&gt;👨‍🎓C#/.NET/.NET Core人才招聘&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#cnetnet-core%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8&quot;&gt;🎁C#/.NET/.NET Core面试宝典&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#cnetnet-core%E6%8B%BE%E9%81%97%E8%A1%A5%E6%BC%8F&quot;&gt;🚀C#/.NET/.NET Core拾遗补漏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/16&quot;&gt;📰C#/.NET/.NET Core最新资讯&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#cnetnet-core%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E9%9B%86%E5%90%88&quot;&gt;🕹C#/.NET/.NET Core学习路线集合&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#cnetnet-core%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98%E6%95%99%E7%A8%8B&quot;&gt;🥇C#/.NET/.NET Core开发实战教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/23&quot;&gt;✋C#/.NET/.NET Core疑难问题答疑&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#cnetnet-core%E6%8E%A8%E8%8D%90%E5%AD%A6%E4%B9%A0%E4%B9%A6%E7%B1%8D&quot;&gt;📚C#/.NET/.NET Core推荐学习书籍&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#cnetnet-core%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E6%B1%87%E6%80%BB&quot;&gt;📺C#/.NET/.NET Core学习视频汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%EF%B8%8Fcnetnet-core%E4%BC%98%E7%A7%80%E9%A1%B9%E7%9B%AE%E6%A1%86%E6%9E%B6&quot;&gt;🏗️C#/.NET/.NET Core优秀项目框架&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#cnetnet-core%E6%8A%80%E6%9C%AF%E5%89%8D%E6%B2%BF%E5%91%A8%E5%88%8A&quot;&gt;🏆C#/.NET/.NET Core技术前沿周刊&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#cnetnet-core%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7%E7%BB%83%E4%B9%A0%E9%9B%86&quot;&gt;⚔C#/.NET/.NET Core编程技巧练习集&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#aigcai%E8%B5%8B%E8%83%BD&quot;&gt;🤖AIGC&amp;amp;AI赋能&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F&quot;&gt;🧱设计模式&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%EF%B8%8F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84&quot;&gt;🛠️数据结构&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%E9%80%BB%E8%BE%91%E7%AE%97%E6%B3%95&quot;&gt;🧮逻辑算法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93sql&quot;&gt;🍇关系型数据库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93nosql&quot;&gt;🍉非关系型数据库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1&quot;&gt;💡系统设计&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F&quot;&gt;💻操作系统&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%EF%B8%8F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C&quot;&gt;🛰️计算机网络&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%EF%B8%8F%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF&quot;&gt;☁️容器技术&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#devopscicd%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7&quot;&gt;🧰DevOps&amp;amp;CI&amp;amp;CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#web%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91&quot;&gt;🌍Web前端开发&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7&quot;&gt;🧲版本控制工具&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%E9%9D%A2%E8%AF%95%E9%A1%BB%E7%9F%A5&quot;&gt;🙇面试须知&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%E7%AE%80%E5%8E%86%E6%A8%A1%E6%9D%BF&quot;&gt;👩‍💻简历模板&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%E5%AE%9D%E8%97%8F%E6%8C%87%E5%8D%97&quot;&gt;🧭宝藏指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide?tab=readme-ov-file#%E7%A4%BE%E5%8C%BA%E7%BB%84%E7%BB%87&quot;&gt;⚖社区组织&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏷️优质学习资料收录栈&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.yuque.com/ysgstudyhard/da6e0c/nkoqf7&quot;&gt;🥇高质量付费学习课程推荐&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/12&quot;&gt;🚤适合后端程序员的前端框架&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/9XqcJUdfFgbUkKclfHGz7Q&quot;&gt;🏹C#设计模式入门实战教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/zh-cn/dotnet/architecture/&quot;&gt;📚.NET应用程序体系结构文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/XMnvST5qUk2QJWKENB3jeQ&quot;&gt;🏄‍♂️一文带你了解.NET能做什么？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/ncn-xhr2_vXBfT5hI-R_CA&quot;&gt;🎯Java开发者快速上手.NET指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/XPRmwWmoZa4zq29Kx-u4HA&quot;&gt;🀄C#数据结构与算法实战入门指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/yY5Znvg6J2FcG5NSIFKBfA&quot;&gt;🧭C#/.NET/.NET Core自学入门指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MoienTajik/AspNetCore-Developer-Roadmap/tree/master&quot;&gt;📚2024年ASP.NET Core开发者学习指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/15911410.html&quot;&gt;🥏值得推荐的.NET/.NET Core ORM框架汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/kr1vlt4tj3dSyXyRv-GqOw&quot;&gt;🧱.NET常见的几种项目架构模式，你知道几种？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/8&quot;&gt;🐮C#/.NET/.NET Core推荐博客&amp;amp;博主&amp;amp;公众号&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/10&quot;&gt;⛵C#/.NET/.NET Core推荐学习路线&amp;amp;文档&amp;amp;文章&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/zh-cn/dotnet/csharp/&quot;&gt;📚C#指南(微软提供的最权威，最全面的C#学习资料)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/zh-cn/dotnet/&quot;&gt;📚.NET文档(微软提供的最权威，最全面的.NET学习资料)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/zh-cn/learn&quot;&gt;💥微软官方.NET免费教程(面向从初学者到高级开发人员)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.azure.cn/zh-cn/?product=popular&quot;&gt;☁️Azure文档(微软提供的最权威，最全面的Azure学习资料)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/zh-cn/&quot;&gt;🔎面向开发人员和技术专业人员的Microsoft文档和学习主页&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/dotnet/maui/?view=net-maui-8.0&quot;&gt;📚.NET MAUI(微软提供的最权威，最全面的.NET MAUI学习资料)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/csharplang&quot;&gt;🧀C#编程语言设计的官方存储库（C#功能讨论&amp;amp;提案&amp;amp;语言规范）&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🏹编程效率提升技巧集&lt;/h2&gt; 
&lt;h3&gt;.NET相关开发环境&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/zh-cn/download/dotnet&quot;&gt;所有.NET版本下载&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/zh-cn/download/dotnet-framework&quot;&gt;.NET Framework版本下载&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/_/microsoft-dotnet&quot;&gt;.NET 和 ASP.NET Core官方映像&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/zh-cn/download/intellisense&quot;&gt;下载本地化的 .NET IntelliSense&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Visual Studio&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://visualstudio.microsoft.com/zh-hans/downloads/&quot;&gt;Visual Studio 2022下载&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://visualstudio.microsoft.com/zh-hans/vs/mac/&quot;&gt;Visual Studio for Mac下载&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/6Ekqufb4r2VvQGd9TifpEg&quot;&gt;Visual Studio常用快捷键&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/4vo2OvWdj9fMrKCIKi70Dg&quot;&gt;Visual Studio的奇淫技巧&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/A5mMJZkcUMdfkJFNG7sEWQ&quot;&gt;28款Visual Studio实用插件推荐&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/JDCsr-sH1Z7jMEcxNfjbmg&quot;&gt;使用Visual Studio分析.NET Dump&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/LnFV2K2CoqiorArBM8XkDg&quot;&gt;使用Visual Studio调试 .NET源代码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/-X04QR3rgXAubCnMVGJosQ&quot;&gt;Visual Studio 2022 Git多存储库管理&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/7eiN_RAf_DfPXM86pQOuuw&quot;&gt;Visual Studio 2022进行文件差异比较&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/AhQq4IJLEUiTuRqsjTGG_w&quot;&gt;Visual Studio中的四款代码格式化工具&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/m0UKt78brvZVx5-GODlIKA&quot;&gt;在Visual Studio中查看EF Core查询计划&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/YnW9ifsHluV69HLnu4mc7A&quot;&gt;Visual Studio 2022版本17.8中的实用功能&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/EkxAdqceID7PCkNGtNSqwg&quot;&gt;Visual Studio文件编码显示与修改扩展插件&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Cijr_e1qOjNXOS1TtZjxgA&quot;&gt;Visual Studio实用的搜索、查找、替换技巧&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/1r4QK1bYDH7MdOTNLZli-g&quot;&gt;Visual Studio中使用CodeGeeX AI编程助手&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Cc2kgPBjj-mjVigxceKtRw&quot;&gt;合理使用Visual Studio 2022内置任务列表-TODO&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/-5dL_b5pMLV0LQoVMsFjjQ&quot;&gt;Visual Studio将JSON格式数据自动转化为对应的类&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/T2Ya3NWlv1gQN7_FQcHWnw&quot;&gt;Visual Studio使用Git忽略不想上传到远程仓库的文件&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/E731dDi00Bf_uL1iU2roGQ&quot;&gt;Visual Studio使用GitHub Copilot提高.NET开发工作效率&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Z_nZ31j7X_fgGH4NG2sFBg&quot;&gt;Visual Studio使用Web Deploy发布应用到指定服务器的IIS中&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Visual Studio Code&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/?wt.mc_id=vscom_downloads&quot;&gt;VS Code下载&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/BTja1gAsbWnPQ_b9uFr27g&quot;&gt;VS Code常用快捷键&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csharp&quot;&gt;C# for Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit&quot;&gt;Visual Studio Code的C#开发工具包&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Ud4ihBzPzjf3EZyqs0_jMA&quot;&gt;22款Visual Studio Code实用插件推荐&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/nvlLTMP-svb4vqpAvIjkWA&quot;&gt;VS Code使用Git可视化管理源代码详细教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/YxHpE1WljKWF6aZJkmBquA&quot;&gt;VS Code调试和发布ASP.NET Core Web应用&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/kKVPdxp9p-7QZ45XMosDWw&quot;&gt;VS Code安装C#开发工具包并编写ASP.NET Core Web应用&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/xGFgBh_OsQ0hwOtUFQzxdg&quot;&gt;VS Code安装CodeGeeX AI编程助手提高.NET开发工作效率&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;.NET开发效率工具&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/9lGdDchHgHCQMlfgqpaXQg&quot;&gt;JetBrains官方宣布 Rider 非商用免费开放！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sharplab.io&quot;&gt;一个强大的在线.NET代码预览与分析利器 - SharpLab&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/4TOZQC45EOEznbnjDjiJUw&quot;&gt;一个方便易用的在线.NET代码编辑工具 - .NET Fiddle&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;AI辅助编程工具&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codegeex.cn/zh-CN&quot;&gt;AI编程助手：CodeGeeX &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raccoon.sensetime.com/code&quot;&gt;AI智能助手：代码小浣熊&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tongyi.aliyun.com/lingma&quot;&gt;智能编码助手：通义灵码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/cn/pm/codewhisperer&quot;&gt;AI编程工具：CodeWhisperer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.github.com/zh/copilot/quickstart&quot;&gt;AI辅助神器：GitHub Copilot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://comate.baidu.com/zh&quot;&gt;智能编码助手：Baidu Comate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cursor.com&quot;&gt;高效的AI代码编辑助手：Cursor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.marscode.cn/home&quot;&gt;免费AI编程助手：豆包MarsCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/continuedev/continue&quot;&gt;领先的开源AI代码助手：Continue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code.fittentech.com&quot;&gt;免费好用的AI编程助手：Fitten Code&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GitHub&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/phodal/github&quot;&gt;GitHub漫游指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trending/c%23?since=daily&quot;&gt;C# GitHub趋势榜&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.github.com/zh/issues/tracking-your-work-with-issues/quickstart&quot;&gt;GitHub Issues 快速入门&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/YJwW9AFPoEKuU_MXqL_Pcg&quot;&gt;如何给GitHub上的开源项目提交PR?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/liXDb4MGXlSrAryRDSkcbw&quot;&gt;我找回了我喜欢的GitHub Old Feed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/17581307.html&quot;&gt;五分钟教你使用GitHub寻找优质开源项目&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/B84wXcX_AlTfCphcL_4MHA&quot;&gt;详细概述Gitee和GitHub生成/添加SSH公钥&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/x7uZvQvtipr2wbNzxqJ5Ng&quot;&gt;30分钟快速搭建并部署一个免费的个人博客&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Git管理工具&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.github.com/zh/desktop&quot;&gt;GitHub Desktop使用教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/18J-YoEArJS_rCxkx4-D5w&quot;&gt;10款实用便捷的Git可视化管理工具&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/thZS99hNOc6dM_pEDa3LMQ&quot;&gt;最全面的SourceTree使用教程详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/nWX11NUogNSTAjg-NQJzBQ&quot;&gt;TortoiseGit使用教程（图文详细版）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;超详细的Visual Studio Git使用图解&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/nvlLTMP-svb4vqpAvIjkWA&quot;&gt;VS Code使用Git可视化管理源代码详细教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;⚒️程序员常用的工具软件&lt;/h2&gt; 
&lt;p&gt;在当今这个技术日新月异的时代，开发者只有持续学习，才能紧跟时代的浪潮。为了助力开发者在高效学习与工作中实现平衡（告别996的束缚），众多卓越且实用的开发工具应运而生，它们如同强大的助力器，极大地提升了我们的工作效率与创造力。Awesome Tools，程序员常用高效实用工具、软件资源精选，办公效率提升利器。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;实用效率工具公众号详细介绍专栏：&lt;/strong&gt; &lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzIxMTUzNzM5Ng==&amp;amp;action=getalbum&amp;amp;album_id=2983928075727978497&amp;amp;scene=126&amp;amp;sessionid=-1550706823#wechat_redirect&quot;&gt;前往订阅👉&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;欢迎PR或Issues投稿：&lt;/strong&gt; &lt;a href=&quot;https://github.com/YSGStudyHards/Awesome-Tools/issues&quot;&gt;https://github.com/YSGStudyHards/Awesome-Tools/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Awesome Tools，程序员常用高效实用工具、软件资源精选：&lt;/strong&gt; &lt;a href=&quot;https://github.com/YSGStudyHards/Awesome-Tools&quot;&gt;https://github.com/YSGStudyHards/Awesome-Tools&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🔋C#/.NET/.NET Core充电站&lt;/h2&gt; 
&lt;h3&gt;在线学习站&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/zh-cn/&quot;&gt;.NET官网&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/zh-cn/platform/community&quot;&gt;.NET开发者社区&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/&quot;&gt;.NET Blog官方博客&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/dotnet-ch/?c=85&amp;amp;WT.mc_id=dotnet-35129-website&quot;&gt;.NET中文官方博客&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/&quot;&gt;Stack Overflow&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/tagged/c%23&quot;&gt;Stack Overflow C#问题专栏&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/tagged/.net&quot;&gt;Stack Overflow .NET问题专栏&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/visualstudio/?cis=vshelp&quot;&gt;Visual Studio Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bbs.csdn.net/forums/DotNET&quot;&gt;CSDN .NET社区论坛&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/cate/108698/&quot;&gt;博客园 .NET技术专区&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.infoq.com/dotnet/&quot;&gt;InfoQ .NET文章集合&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.51cto.com/nav/aspnet&quot;&gt;51CTO博客 .NET专栏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://source.dot.net&quot;&gt;.NET在线源码查询&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://referencesource.microsoft.com&quot;&gt;.NET Fx在线源码查询&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apisof.net/catalog&quot;&gt;.NET API在线目录查询&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nugettrends.com&quot;&gt;NuGet包下载趋势在线查询&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nuget.org&quot;&gt;.NET在线的包管理器NuGet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nuget.org/packages?q=&amp;amp;includeComputedFrameworks=true&amp;amp;packagetype=template&amp;amp;prerel=true&amp;amp;sortby=totalDownloads-desc&quot;&gt;.NET开源模板大全在线搜索&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Awesome Collection&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/quozd/awesome-dotnet&quot;&gt;Awesome .NET&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thangchung/awesome-dotnet-core&quot;&gt;Awesome .NET Core&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EasyAbp/awesome-abp&quot;&gt;Awesome Abp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AdrienTorris/awesome-blazor&quot;&gt;Awesome Blazor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/insthync/awesome-unity3d&quot;&gt;Awesome Unity3D&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AvaloniaCommunity/awesome-avalonia&quot;&gt;Awesome Avalonia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Carlos487/awesome-wpf&quot;&gt;Awesome .NET WPF&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jsuarezruiz/awesome-dotnet-maui&quot;&gt;Awesome .NET MAUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aloisdeniel/awesome-monogame&quot;&gt;Awesome MonoGame&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chutianshu1981/AwesomeUnityTutorial&quot;&gt;Awesome Unity Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tbolon/awesome-dotnet-winforms&quot;&gt;Awesome .NET WinForms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mjebrahimi/Awesome-Nuget-Packages&quot;&gt;Awesome Nuget Packages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adamsitnik/awesome-dot-net-performance&quot;&gt;Awesome .NET Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mjebrahimi/Awesome-Microservices-DotNet&quot;&gt;Awesome Microservices .NET&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🎁C#/.NET/.NET Core面试宝典&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;因为个人的能力和精力有限没法把涉及的所有知识点都总结归纳（现在主要是对一些常见的知识点进行了总结和归纳），希望有更多的小伙伴能加入和我一起完善这方面的相关知识点。对知识库有贡献者可获得更多学习资源。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;🐱‍🚀C#/.NET/.NET Core相关技术常见面试题汇总，不仅仅为了面试而学习，更多的是查漏补缺、扩充知识面和大家共同学习进步。&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;面试宝典地址（点赞收藏不迷路）：&lt;/strong&gt; &lt;a href=&quot;https://www.yuque.com/ysgstudyhard/da6e0c&quot;&gt;https://www.yuque.com/ysgstudyhard/da6e0c👉&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://images.cnblogs.com/cnblogs_com/Can-daydayup/2145479/o_240328134732_%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8.png&quot; alt=&quot;C#.NET.NET Core面试宝典（基础版）&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀C#/.NET/.NET Core拾遗补漏&lt;/h2&gt; 
&lt;p&gt;在这个快速发展的技术世界中，时常会有一些重要的知识点、信息或细节被忽略或遗漏。《C#/.NET/.NET Core拾遗补漏》专栏我们将探讨一些可能被忽略或遗漏的重要知识点、信息或细节，以帮助大家更全面地了解这些技术栈的特性和发展方向。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/DotNet/DotNetStudy.md&quot;&gt;✍C#/.NET/.NET Core拾遗补漏合集&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/37&quot;&gt;🚀C#/.NET/.NET Core拾遗补漏Issues投稿&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🕹C#/.NET/.NET Core学习路线集合&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;C#、.NET、.NET Core、WPF、WinForm、MAUI、Avalonia、Unity等相关技术的学习、工作路线集合（持续更新）！！！&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;C#/.NET/.NET Core学习路线集合地址：&lt;/strong&gt; &lt;a href=&quot;https://www.yuque.com/ysgstudyhard/lg56l0/ub8s6b0re9h26epr&quot;&gt;https://www.yuque.com/ysgstudyhard/lg56l0/ub8s6b0re9h26epr👉&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://images.cnblogs.com/cnblogs_com/Can-daydayup/2426875/o_250119131352_%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E9%9B%86%E5%90%88.png&quot; alt=&quot;C#/.NET/.NET Core学习路线集合&quot; title=&quot;C#/.NET/.NET Core学习路线集合&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🥇C#/.NET/.NET Core开发实战教程&lt;/h2&gt; 
&lt;h3&gt;全面的.NET Core MongoDB入门到实战教程&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/16797608.html&quot;&gt;MongoDB从入门到实战之MongoDB简介&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/16804415.html&quot;&gt;MongoDB从入门到实战之MongoDB快速入门&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/16838976.html&quot;&gt;MongoDB从入门到实战之Docker快速安装MongoDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/16840085.html&quot;&gt;MongoDB从入门到实战之MongoDB工作常用操作命令&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/17020707.html&quot;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（1）-后端项目框架搭建&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/17020885.html&quot;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（2）-Swagger框架集成&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/17033785.html&quot;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（3）-系统数据集合设计&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/17157135.html&quot;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（4）-Mongo数据仓储和工作单元模式封装&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/17294749.html&quot;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（5）-Mongo数据仓储和工作单元模式实操&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/17157143.html&quot;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（6）-Blazor介绍和快速入门&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/17439106.html&quot;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（7）-Blazor UI框架选型&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/17453162.html&quot;&gt;MongoDB从入门到实战之.NET Core使用MongoDB开发ToDoList系统（8）-Ant Design Blazor前端框架搭建&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;七天.NET 8操作SQLite入门到实战详细教程&lt;/h3&gt; 
&lt;h4&gt;选型、开发详细教程&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/wCKjqDv2hpvsu-01meSMNA&quot;&gt;第一天 SQLite 简介&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/fbsLOfE1gQLG3OPpz3UZMA&quot;&gt;第二天 在 Windows 上配置 SQLite环境&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/wgMDqIdaQsMfOuiLl07ggw&quot;&gt;第三天SQLite快速入门&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/RTqRsTrzn7LdTBcMmBtkVw&quot;&gt;第四天EasySQLite前后端项目框架搭建&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/RIT7HnPlrLg5KFtJ6a_Biw&quot;&gt;第五天引入 SQLite-net ORM 并封装常用方法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/dI6tb7WtOyB6p1iqYraH5g&quot;&gt;第六天后端班级管理相关接口完善和Swagger自定义配置&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/UIeKSqym8ibLRvDwra8aww&quot;&gt;第七天BootstrapBlazor UI组件库引入（1）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/lpXu5Hx_3F7nf970iBo-5A&quot;&gt;第七天Blazor班级管理页面编写和接口对接（2）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/9a6y8Lw1kGSjfddLQhQRoQ&quot;&gt;第七天Blazor学生管理页面编写和接口对接（3）&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;发布部署详细教程&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/oaqypmpHOTLA9_5sF6-W7Q&quot;&gt;Windows10 IIS Web服务器安装配置&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/MfScgBu0QMRT3D5aIT5A3w&quot;&gt;在IIS上部署ASP.NET Core Web API和Blazor Wasm&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;拓展文章教程&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/HHqkwpXIi7p3K5eUnTcLTw&quot;&gt;10款值得推荐的Blazor UI组件库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/hcZBhbTab02HqWqryB_oEA&quot;&gt;全面的ASP.NET Core Blazor简介和快速入门&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/qFHUC9UKg_2wY2jSthI9Kw&quot;&gt;.NET中使用BootstrapBlazor组件库Table实操篇&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;.NET微信网页开发相关文章教程&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/iOS_WKWebview.html&quot;&gt;微信网页开发官方详细文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/zlSKXQg8IgzEFC-7v-Gngg&quot;&gt;全面的.NET微信网页开发之JS-SDK使用步骤、配置信息和接口请求签名生成详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/XiFxwEREJxmOuFLwZzDBww&quot;&gt;.NET微信网页开发之通过UnionID机制解决多应用用户帐号统一问题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/5eGEt1JEVKflsR360NexHA&quot;&gt;.NET微信网页开发之网页授权获取用户基本信息&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/7hC-DrELYJiz8YUt06WxKw&quot;&gt;.NET微信网页开发之使用微信JS-SDK自定义微信分享内容&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/dLeHIASFrrZZh3j1ggD41Q&quot;&gt;.NET微信网页开发之使用微信JS-SDK调用微信扫一扫功能&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/j3_TKYiwk_ZqUQ4tj0Y9BQ&quot;&gt;.NET微信网页开发之使用微信JS-SDK获取当前地理位置&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;.NET Core NPOI实操教程&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/11588531.html&quot;&gt;.NET Core使用NPOI导出复杂Word详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/10513764.html&quot;&gt;.NET之NPOI Excel数据导出和批量导入功能&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/12501400.html&quot;&gt;.NET Core使用NPOI导出复杂，美观的Excel详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/12593165.html&quot;&gt;.NET Core使用NPOI将Excel中的数据批量导入到MySQL&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;.NET高级调试系列-WinDbg调试实战教程&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;文章源于一线码农大佬，更多高级调试系列教程欢迎关注大佬的GitHub仓库&lt;a href=&quot;https://github.com/ctripxchuang/dotnetfly&quot;&gt;dotnetfly👉&lt;/a&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247498809&amp;amp;idx=1&amp;amp;sn=5bfe1f19d60650436413154dddbd8dd6&amp;amp;chksm=a69b8f7491ec06626668e491b98c82c84b81b8b56673f8bc3795fd4fbc1be7aa3b6488377da5&amp;amp;token=515366489&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET某零售管理系统 存储不足分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247498174&amp;amp;idx=1&amp;amp;sn=e74bc981a2cf505eed652b44746aa8e1&amp;amp;chksm=a69b8af391ec03e570ed0c4231ef2f268161130bf2e24ab6a1359e342d50b246c25660cdf99c&amp;amp;token=785224166&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET某新能源MES 非托管泄露&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496819&amp;amp;idx=1&amp;amp;sn=48c91cbbc6ecd7783aac2308cf89110c&amp;amp;chksm=a69b873e91ec0e287b0c4cdd3112956271360e78a5c1f6a7f03207299c1719de03f9effbc77d&amp;amp;token=1657656528&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某手术室行为信息系统 内存泄露分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496797&amp;amp;idx=1&amp;amp;sn=76c6a17a86b1333555ce278b91b8121b&amp;amp;chksm=a69b871091ec0e06f73e37a692448b605c7cd94a0a14290caff4b255b33d973dafbd3c4198c2&amp;amp;token=1657656528&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某传感器采集系统 线程爆高分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496710&amp;amp;idx=1&amp;amp;sn=2c2027c3020c0de6c9161920c4f9bb14&amp;amp;chksm=a69b874b91ec0e5d1ec0ed0b7124682944308f1c349851ad37e60f7fbbc156621f23a4f93ac5&amp;amp;token=143112780&amp;amp;lang=zh_CN#rd&quot;&gt;记一次.NET某企业ERP网站系统 崩溃分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496658&amp;amp;idx=1&amp;amp;sn=f7e019eeef2cb478c84223c2c6841940&amp;amp;chksm=a69b809f91ec0989d649d3f9fbc59030713373adbd77874c9147388a5bb83b06a46759b9f5ab&amp;amp;token=143112780&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某医疗住院系统 崩溃分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496599&amp;amp;idx=1&amp;amp;sn=b3673090594341e35703de20fadb72f2&amp;amp;chksm=a69b80da91ec09cc509d4665233b9b1340f519070e0a3226a085fe39d24113dd39c9bca3f5db&amp;amp;token=272209279&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET某汽车零件采集系统 卡死分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496557&amp;amp;idx=1&amp;amp;sn=65252d960b0e22a4c19e2b9696671440&amp;amp;chksm=a69b802091ec0936ebd715a4311db47797a8390a4c8ad0f3892bdd6a3f1afd9d6f658c0ff5e0&amp;amp;token=1227076055&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET某家装ERP 内存暴涨分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496557&amp;amp;idx=1&amp;amp;sn=65252d960b0e22a4c19e2b9696671440&amp;amp;chksm=a69b802091ec0936ebd715a4311db47797a8390a4c8ad0f3892bdd6a3f1afd9d6f658c0ff5e0&amp;amp;token=1227076055&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET某家装ERP 内存暴涨分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496507&amp;amp;idx=2&amp;amp;sn=2f78f01f01754259b9b059f30429bfd6&amp;amp;chksm=a69b807691ec0960db2f7adecf19e8466ef270ccb91b7f12569a6f978def54b05e65c0da0d4e&amp;amp;token=1227076055&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某医保平台 CPU爆高分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247496418&amp;amp;idx=1&amp;amp;sn=f47f12b9aa479de45c5ea9bfd09f14ca&amp;amp;chksm=a69b81af91ec08b9d86ac97b14d0a5ae130f55d7204117cfe3659037dd417a92dbe5af3169fe&amp;amp;token=246753473&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某游戏网站 CPU爆高分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495965&amp;amp;idx=1&amp;amp;sn=2087fb7e30e536bff7aee6f2928ae86c&amp;amp;chksm=a69b825091ec0b46e8a44099ded5a83b2a8d0ab88b58f6765d262f8eafd49dac5a80e3559f26&amp;amp;token=103031729&amp;amp;lang=zh_CN#rd&quot;&gt;记一次.NET 某安全生产系统 CPU爆高分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495943&amp;amp;idx=2&amp;amp;sn=c2e34e949edd8cb24c1a275f71e98891&amp;amp;chksm=a69b824a91ec0b5c727fdaa67e3f7a11a135d97eef00c19eddce537a06260314f23be10efd6b&amp;amp;token=103031729&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某工控MES程序 崩溃分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495897&amp;amp;idx=1&amp;amp;sn=2f81da9c5a6a3efc3433229469a2a908&amp;amp;chksm=a69b839491ec0a8272d3ecabd1ca2dd308beeb4127b40960a51e046a4be35a1ff019c66fb725&amp;amp;token=103031729&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某工控软件 内存泄露分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495866&amp;amp;idx=1&amp;amp;sn=9cc3c442b43855f0f8129b1c1911b2c2&amp;amp;chksm=a69b83f791ec0ae1b2d495dcbb8b334385b9f89d6c4bbee2e81188bb0e5a0fd792c4be1353ad&amp;amp;token=1751121168&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某电子厂OA系统 非托管内存泄露分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495763&amp;amp;idx=1&amp;amp;sn=f1ff8b53898edfc14d38e65e6028f977&amp;amp;chksm=a69b831e91ec0a0889913af94ba6ea92025eb64dab4201962ab47d5a2926294bbe25796ddc82&amp;amp;token=1946171397&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某自动化采集软件 崩溃分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495731&amp;amp;idx=1&amp;amp;sn=289d6388bedc172fe6a2438e4304b99a&amp;amp;chksm=a69b837e91ec0a685f15f9dce9d843cc4b186542d1c1a156fc9272bb53775c16438aac04c0a8&amp;amp;token=1946171397&amp;amp;lang=zh_CN#rd&quot;&gt;记一次.NET某工控图片上传CPU爆高分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495663&amp;amp;idx=1&amp;amp;sn=eacf1e9e70184ce6349e90fa7bb63429&amp;amp;chksm=a69b9ca291ec15b497d0442d7729ca9aeb8638ce79db32ac5c0dcc7c3513a57a0a0c1de3e670&amp;amp;token=1947614004&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某制造业 MES 系统崩溃分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495591&amp;amp;idx=1&amp;amp;sn=ffa939a902fbec5e961afe1fcb4b8347&amp;amp;chksm=a69b9cea91ec15fc82aaaefb5d54dd0f2b24dab1dc1762804000051841f61e8600ba81003068&amp;amp;token=730191575&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某医疗器械 程序崩溃分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495548&amp;amp;idx=1&amp;amp;sn=9f377a2c229981481a2af6eefd652a10&amp;amp;chksm=a69b9c3191ec1527596da4e18106e26e01ff678e4701c4ac1d2faff0a0b8e7a3dd46d02cfb1c&amp;amp;token=1362409699&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某娱乐聊天流平台 CPU 爆高分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495503&amp;amp;idx=1&amp;amp;sn=9b3066ad6b3f846ede84cb18a355f294&amp;amp;chksm=a69b9c0291ec15140121b12fddf4d5c9645f4ccc824ea1cbc27f16b2f9694f02d09e22b3b715&amp;amp;token=1362409699&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某企业OA后端服务 卡死分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MzI5Mzg1OA==&amp;amp;mid=2247495487&amp;amp;idx=1&amp;amp;sn=727e2a2d7afc15857e42c603b4d28114&amp;amp;chksm=a69b9c7291ec1564dadb868713b16b11587d53a56547c7dd0ccb8b74b5dbaaea1d044f2dd125&amp;amp;token=1007664770&amp;amp;lang=zh_CN#rd&quot;&gt;记一次 .NET 某电子病历 CPU 爆高分析&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;C#开发PACS、RIS、3D医学影像处理系统系列教程&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;文章源于博客园乔克灬叔叔，更多C#开发PACS、RIS、3D医学影像处理系统系列教程欢迎关注&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker&quot;&gt;乔克灬叔叔博客👉&lt;/a&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13646949.html&quot;&gt;C#开发PACS医学影像处理系统(一)：开发背景和功能预览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13650213.html&quot;&gt;C#开发PACS医学影像处理系统(二)：界面布局之菜单栏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13650330.html&quot;&gt;C#开发PACS医学影像处理系统(三)：界面布局之工具栏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13650514.html&quot;&gt;C#开发PACS医学影像处理系统(四)：界面布局之状态栏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13651660.html&quot;&gt;C#开发PACS医学影像处理系统(五)：查询病人信息列表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13665748.html&quot;&gt;C#开发PACS医学影像处理系统(六)：加载Dicom影像&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13666034.html&quot;&gt;C#开发PACS医学影像处理系统(七)：读取影像Dicom信息&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13666817.html&quot;&gt;C#开发PACS医学影像处理系统(八)：单元格变换&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13672042.htm&quot;&gt;C#开发PACS医学影像处理系统(九)：序列控件与拖拽&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13667467.html&quot;&gt;C#开发PACS医学影像处理系统(十)：Dicom影像下载策略与算法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13677272.html&quot;&gt;C#开发PACS医学影像处理系统(十一)：Dicom影像挂片协议&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13677726.html&quot;&gt;C#开发PACS医学影像处理系统(十二)：绘图处理之图形标记&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13679635.html&quot;&gt;C#开发PACS医学影像处理系统(十三)：绘图处理之病灶测量&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13683841.html&quot;&gt;C#开发PACS医学影像处理系统(十四)：处理Dicom影像窗宽窗位&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13686618.html&quot;&gt;C#开发PACS医学影像处理系统(十五)：Dicom影像交叉定位线算法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13690213.html&quot;&gt;C#开发PACS医学影像处理系统(十六)：2D处理之影像平移和缩放&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13690483.html&quot;&gt;C#开发PACS医学影像处理系统(十七)：2D处理之影像旋转和翻转&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13690710.html&quot;&gt;C#开发PACS医学影像处理系统(十八)：Dicom使用LUT色彩增强和反色&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Uncle-Joker/p/13690862.html&quot;&gt;C#开发PACS医学影像处理系统(十九)：Dicom影像放大镜&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ASP.NET Core Blazor入门到实战教程&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/aspnet/core/mvc/views/razor?view=aspnetcore-8.0&quot;&gt;ASP.NET Core的Razor语法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/HHqkwpXIi7p3K5eUnTcLTw&quot;&gt;值得推荐的Blazor UI组件库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/aspnet/core/blazor/supported-platforms?view=aspnetcore-8.0&quot;&gt;ASP.NET Core Blazor 支持的平台&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/aspnet/core/blazor/?view=aspnetcore-8.0&quot;&gt;微软官方教程ASP.NET Core Blazor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/hcZBhbTab02HqWqryB_oEA&quot;&gt;全面的ASP.NET Core Blazor简介和快速入门&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/aspnet/core/blazor/tutorials/build-a-blazor-app?view=aspnetcore-8.0&amp;amp;pivots=server&quot;&gt;生成Blazor待办事项列表应用&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/zh-cn/learn/aspnet/blazor-tutorial/intro&quot;&gt;构建你的第一个 Blazor 应用&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/training/paths/build-web-apps-with-blazor/&quot;&gt;使用 Blazor 构建 Web 应用程序&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/training/modules/blazor-introduction/&quot;&gt;使用 Blazor 进行 Web 开发的简介&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/training/modules/blazor-build-reusable-components/&quot;&gt;使用 Blazor 生成可重用组件&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/training/modules/dotnet-connect-four/&quot;&gt;使用 Blazor 生成四子棋游戏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/training/modules/interact-with-data-blazor-web-apps/&quot;&gt;与 Blazor Web 应用中的数据交互&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/aspnet/core/blazor/tutorials/build-a-blazor-app?view=aspnetcore-6.0&amp;amp;pivots=server&quot;&gt;使用Blazor的ASP.NET Core SignalR&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/AfTWnRfS-aq32hdTn2VgdQ&quot;&gt;在Blazor中使用Chart.js快速创建图表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/training/modules/use-pages-routing-layouts-control-blazor-navigation/&quot;&gt;使用页面、路由和布局改进 Blazor 导航&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/training/modules/blazor-build-rich-interactive-components/&quot;&gt;在Blazor Web应用中构建丰富的交互式组件&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/training/modules/blazor-improve-how-forms-work/&quot;&gt;改进表单和验证在Blazor Web应用中的工作方式&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/ittranslator/p/a-beginners-guide-to-blazor-server-and-webassembly-applications.html&quot;&gt;Blazor Server和WebAssembly应用程序入门指南&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ASP.NET Core从壹开始微服务[DDD]教程&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;文章源于博客园老张的哲学，更多.NET相关优质文章教程欢迎关注&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/&quot;&gt;老张的哲学👉&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/9806335.html&quot;&gt;从壹开始微服务 [ DDD ] 之一 ║ D3模式设计初探 与 我的计划书&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/9832684.html&quot;&gt;从壹开始微服务 [ DDD ] 之二 ║ DDD入门 &amp;amp; 项目结构粗搭建&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/9845573.html&quot;&gt;从壹开始微服务 [ DDD ] 之三 ║ 简单说说：领域、子域、限界上下文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/9872450.html&quot;&gt;从壹开始微服务 [ DDD ] 之四 ║让你明白DDD的小故事 &amp;amp; EFCore初探&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/9888502.html&quot;&gt;从壹开始微服务 [ DDD ] 之五 ║聚合：实体与值对象 （上）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/9916785.html&quot;&gt;从壹开始微服务 [ DDD ] 之六 ║聚合 与 聚合根 （下）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/9931304.html&quot;&gt;从壹开始微服务 [ DDD ] 之七 ║项目第一次实现 &amp;amp; CQRS初探&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/9962759.html&quot;&gt;从壹开始微服务 [ DDD ] 之八 ║剪不断理还乱的 值对象和Dto&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/9984740.html&quot;&gt;从壹开始微服务 [ DDD ] 之九 ║从军事故事中，明白领域命令验证（上）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/10000662.html&quot;&gt;从壹开始微服务 [ DDD ] 之十 ║领域驱动【实战篇】：命令总线Bus分发（一）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/10025913.html&quot;&gt;从壹开始微服务 [ DDD ] 之十一 ║ 基于源码分析，命令分发的过程（二）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/10059878.html&quot;&gt;从壹开始微服务 [ DDD ] 之十二 ║ 核心篇【下】：事件驱动EDA 详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/laozhang-is-phi/p/10093444.html&quot;&gt;从壹开始微服务 [ DDD ] 之终篇 ║当事件溯源&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📚C#/.NET/.NET Core推荐学习书籍&lt;/h2&gt; 
&lt;p&gt;古人云：“书中自有黄金屋，书中自有颜如玉”，说明了书籍的重要性。作为程序员，我们需要不断学习以提升自己的核心竞争力。以下是一些优秀的C#/.NET/.NET Core相关学习书籍，值得.NET开发者们学习和专研。书籍已分类，欢迎大家PR分享自己觉得不错的C#/.NET/.NET Core宝藏书籍。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/9&quot;&gt;📚C#/.NET/.NET Core推荐学习书籍Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/DotNet/CsharpRecommendedBooks.md&quot;&gt;📖C#/.NET/.NET Core推荐学习书籍（已分类）&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📺C#/.NET/.NET Core学习视频汇总&lt;/h2&gt; 
&lt;p&gt;收集、汇总网上一些比较好的C#/.NET/.NET Core这方面的学习视频，希望能够帮助到有需要的小伙伴们。当然假如小伙伴们有更好的学习资源视频推荐可以在我的文章下面留言，该篇文章会持续更新同时也欢迎大家一起来完善和贡献自己觉得不错的C#/.NET/.NET Core学习视频资源。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/15046838.html&quot;&gt;🧀最全面的C#/.NET/.NET Core学习视频汇总&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🏗️C#/.NET/.NET Core优秀项目框架&lt;/h2&gt; 
&lt;h3&gt;C#/.NET/.NET Core项目宝库&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;为.NET开发者提供一个寻找优秀C#/.NET/.NET Core项目和框架的入口，通过了解和对比更多的项目和框架来选择最适合我们自己学习、工作开发的一套项目或者框架。优秀的项目不应该被埋没，欢迎大家一起加入这个组织共同完善、发展.NET社区！！这些都是非常优秀的项目和框架，排名不分先后，欢迎前往项目原址Star💖。大家可以在该&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/5&quot;&gt;🏗️C#/.NET/.NET Core优秀项目和框架Issues&lt;/a&gt;中留言，我会定期收录到项目宝库组织中。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/dotNetTreasury&quot;&gt;🎁C#/.NET/.NET Core项目宝库组织&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;C#/.NET/.NET Core优秀项目和框架Issues&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;为.NET开源勇士提供一个推荐自己优秀项目和框架的Issues，大家可以把自己写的或者感觉不错的C#/.NET/.NET Core项目or框架链接地址和描述提交到在这里，提供给广大.NET开发者们参考、学习和使用，并且我会定期在&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/DotNet/DotNetProjectMonthly.md&quot;&gt;公众号推广和分享👀&lt;/a&gt;这些优秀项目和框架（注意：排名不分先后，都是十分优秀的开源框架和项目💖）。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/5&quot;&gt;🏗️C#/.NET/.NET Core优秀项目和框架Issues&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;C#/.NET/.NET Core优秀项目和框架精选&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;帮助开发者发现功能强大、性能优越、创新前沿、简单易用的C#/.NET/.NET Core优秀项目和框架，无论你是寻找灵感、学习新技术、改进代码质量，还是想拓展自己的技术视野，都能为你提供有价值的参考和指导。关注优秀项目和框架精选能让你及时了解C#、.NET和.NET Core领域的最新动态和最佳实践，提高开发效率和质量。坑已挖，欢迎大家&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/DotNet/DotNetProjectPicks.md&quot;&gt;踊跃提交PR&lt;/a&gt;或者在该&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/5&quot;&gt;🏗️C#/.NET/.NET Core优秀项目和框架Issues&lt;/a&gt;中留言（&lt;strong&gt;让优秀的项目和框架不被埋没&lt;/strong&gt;），我会定期收录、&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/DotNet/DotNetProjectMonthly.md&quot;&gt;公众号推广和分享👀&lt;/a&gt;（注意：排名不分先后，都是十分优秀的开源项目和框架，每周定期更新分享💖）。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ysgdaydayup/DotNetGuide/blob/main/docs/DotNet/DotNetProjectPicks.md&quot;&gt;💡C#/.NET/.NET Core优秀项目和框架Gitee精选&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/DotNet/DotNetProjectPicks.md&quot;&gt;🔔C#/.NET/.NET Core优秀项目和框架GitHub精选&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🏆C#/.NET/.NET Core技术前沿周刊&lt;/h2&gt; 
&lt;p&gt;C#/.NET/.NET Core技术前沿周刊，你的每周技术指南针！记录、追踪C#/.NET/.NET Core领域、生态的每周最新、最实用、最有价值的技术文章、社区动态、优质项目和学习资源等。让你时刻站在技术前沿，助力技术成长与视野拓宽。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;欢迎投稿，推荐或自荐优质文章/项目/学习资源等。&lt;strong&gt;每周一定期发布！！！&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/DotNet/DotNetWeekly.md&quot;&gt;📰C#/.NET/.NET Core技术前沿周刊汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/44&quot;&gt;🏆C#/.NET/.NET Core技术前沿周刊Issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;⚔C#/.NET/.NET Core编程技巧练习集&lt;/h2&gt; 
&lt;p&gt;C#/.NET/.NET Core编程常用语法、算法、技巧、中间件、类库、工作业务实操练习集，配套详细的文章教程讲解，助你快速掌握C#/.NET/.NET Core中各种编程常用语法、算法、技巧、中间件、类库、工作业务实操等等。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;DotNetExercises源码仓库地址：&lt;/strong&gt; &lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises&quot;&gt;https://github.com/YSGStudyHards/DotNetExercises&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;想要学习C#/.NET/.NET Core什么技术欢迎Issues中留言：&lt;/strong&gt; &lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/42&quot;&gt;https://github.com/YSGStudyHards/DotNetGuide/issues/42&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;文章详细教程&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/QuestPDFExercise&quot;&gt;&lt;strong&gt;1、QuestPDFExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/ZLxDsDE-UQnYdLnVw4h3Kg&quot;&gt;.NET使用QuestPDF高效地生成PDF文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/TimeCrontabExercise&quot;&gt;&lt;strong&gt;2、TimeCrontabExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/sO_TdFNNsUUQKePoEliTAA&quot;&gt;.NET 全能 Cron 表达式解析库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/BouncyCastleExercise&quot;&gt;&lt;strong&gt;3、BouncyCastleExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/_VLzuDkyELusgsjFO6Wkog&quot;&gt;C#版开源免费的Bouncy Castle密码库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/ScottPlotWinFormsExercise&quot;&gt;&lt;strong&gt;4、ScottPlotWinFormsExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/d-nUV3pLQ5_MhyfV4rEzAg&quot;&gt;使用ScottPlot库在.NET WinForms中快速实现大型数据集的交互式显示 &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/ChartjsExercise&quot;&gt;&lt;strong&gt;5、ChartjsExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/AfTWnRfS-aq32hdTn2VgdQ&quot;&gt;在Blazor中使用Chart.js快速创建图表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/GenericRepositoryExercise&quot;&gt;&lt;strong&gt;6、GenericRepositoryExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/OQINTUyppNyh53GkOOaxMA&quot;&gt;一个库帮你快速实现EF Core数据仓储模式&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/raw/main/DotNetGuidePractice/HelloDotNetGuide/%E5%BC%82%E6%AD%A5%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/MultithreadingExample.cs&quot;&gt;&lt;strong&gt;7、MultithreadingExample&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/mnyoD9l6VNmjbTbvI0x1nA&quot;&gt;C#实现多线程的几种方式&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/raw/main/DotNetGuidePractice/HelloDotNetGuide/%E5%BC%82%E6%AD%A5%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/AsyncProgrammingExample.cs&quot;&gt;&lt;strong&gt;8、AsyncProgrammingExample&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/4XQ9uVmLvnOQwnkYLHFNag&quot;&gt;.NET实现异步的几种方式&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/DotnetSpiderExercise&quot;&gt;&lt;strong&gt;9、DotnetSpiderExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/Z4liThmMdTXJXXrSIZCUxg&quot;&gt;.NET快速实现网页数据抓取&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/MapsuiExercise&quot;&gt;&lt;strong&gt;10、MapsuiExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/ltw3K87fqJO9qvSCQ0ao6g&quot;&gt;一个 .NET 开源的地图组件库 - Mapsui&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/SpectreExercise&quot;&gt;&lt;strong&gt;11、SpectreExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/K1yOmNQFyl3RObrnBbG8LA&quot;&gt;一个库帮你轻松的创建漂亮的.NET控制台应用程序&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/IdGeneratorExercise&quot;&gt;&lt;strong&gt;12、IdGeneratorExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/U1qKb4nYkQNtbXmQJkxyPA&quot;&gt;.NET集成IdGenerator生成分布式全局唯一ID&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/FusionCacheExercise&quot;&gt;&lt;strong&gt;13、FusionCacheExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/7CnK70qJRRb-OAqR9qAvAw&quot;&gt;.NET开源强大、易于使用的缓存框架 - FusionCache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/AutoMapperExercise&quot;&gt;&lt;strong&gt;14、AutoMapperExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/i4Wn0ox22gIffB8UwoBZXQ&quot;&gt;ASP.NET Core Web中使用AutoMapper进行对象映射&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/CsvHelperExercise&quot;&gt;&lt;strong&gt;15、CsvHelperExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/md9kqIyVOKkvQv8xD7LCWA&quot;&gt;.NET使用CsvHelper快速读取和写入CSV文件&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/FileCompDecompExercise&quot;&gt;&lt;strong&gt;16、FileCompDecompExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/CCV2QC9-TFIM45sSyKYLag&quot;&gt;.NET使用原生方法实现文件压缩和解压&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/TerminalGuiExercise&quot;&gt;&lt;strong&gt;17、TerminalGuiExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/c9eonfbaHksv5vIc3tH0Ig&quot;&gt;使用Terminal.Gui构建功能强大的.NET控制台应用&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetExercises/tree/master/MLNETExercise&quot;&gt;&lt;strong&gt;18、MLNETExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/TMC6Dzk-k_Xs13THNNhbbA&quot;&gt;使用ML.NET训练一个属于自己的图像分类模型，对图像进行分类就这么简单！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/raw/main/DotNetGuidePractice/HelloDotNetGuide/CSharp%E8%AF%AD%E6%B3%95/CSharp12GrammarExercise.cs&quot;&gt;&lt;strong&gt;19、CSharp12GrammarExercise&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/P-f-cP9bpUD99RsB3lQOzA&quot;&gt;C# 12 新增功能实操&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/FFmpegAudioAndVideoMerge&quot;&gt;&lt;strong&gt;20、FFmpegAudioAndVideoMerge&lt;/strong&gt;&lt;/a&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s/7mz0cUddAp0vhR7JnD3hNg&quot;&gt;C#进程调用FFmpeg操作音视频&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🤖AIGC&amp;amp;AI赋能&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/BStnJHEyMntyMsHaPiX_Sg&quot;&gt;一个免费且强大的.NET AI智能体&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/T9VIEm-9UGRXv01QLjKAcA&quot;&gt;清华大学《AIGC发展研究报告3.0版》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/F5GF_ISFRQucs9aETJwmeQ&quot;&gt;全面系统的AI学习路径，帮助普通人也能玩转AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/kapZm6g9vN5YB8MiRcIXVg&quot;&gt;利用腾讯元器，将公众号变身为强大的.NET AI智能体&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/KCiqOvJ6KF4gz1sr4B5XRg&quot;&gt;8款支持 C# 语言的 AI 辅助编程神器，高效编程利器！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/D62jLkvDqxiIOiaxan80qA&quot;&gt;分享 5 个在微信中使用 DeepSeek 的方法，建议收藏！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/r901bHIDrsd77B0yRI1Nuw&quot;&gt;北京大学DeepSeek系列教程：《DeepSeek与AIGC应用》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Cj3T1DR57w4rx7_QGq0CQg&quot;&gt;北京大学DeepSeek系列教程：《DeepSeek提示词工程和落地场景》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/zeY5qztR2tbgqwvwK6TWMQ&quot;&gt;DeepSeek 官方推出的提示词库，AI内容生成的精准导航仪！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/b94N2WSSNydwAlJiZineUw&quot;&gt;清华大学推出的 DeepSeek 从入门到精通（104页）免费教程！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/z6Osmc3FtMpNl_MEcUeiOg&quot;&gt;清华大学推出第二讲 DeepSeek 如何赋能职场应用？从提示语技巧到多场景应用！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/CWhRgwzx6Ya93hwgnnDU3A&quot;&gt;清华大学推出第三讲普通人如何抓住 DeepSeek 红利，普通人必备的免费AI手册！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/3inmjt8omsZFBXsjtoVn1A&quot;&gt;清华大学推出第四讲使用 DeepSeek + DeepResearch 让科研像聊天一样简单！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/HtYVzjDGb2HhV4IuP0_SEw&quot;&gt;清华大学推出第五讲《DeepSeek与AI幻觉》，避免你的AI一本正经地胡说八道！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/KT3P-L1SNtF8rSjGOF2edA&quot;&gt;清华大学推出第六讲：使用DeepSeek赋能家庭教育，开启智能育儿新时代！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/xl5_WgfYf1QynT5pVqWNvg&quot;&gt;腾讯元宝接入 DeepSeek R1 模型，支持深度思考 + 联网搜索，好用不卡机！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/XNVeUE_kgLgF_0INcs5d6Q&quot;&gt;告别 DeepSeek 系统繁忙，七个 DeepSeek 曲线救国平替入口，官网崩溃也能用！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/K1SJGSHLxDS_Qa17wo43EA&quot;&gt;我的公众号接入了DeepSeek-R1模型，成为了一个会深度思考的强大.NET AI智能体！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/-l4Jih7Ua3cXcf4RL4YXRw&quot;&gt;一个免费、快速、无限量使用的满血 DeepSeek R1 模型，支持深度思考和联网搜索！&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🧱设计模式&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;设计模式（Design Pattern） 是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结，使用设计模式是为了可重用代码、让代码更容易被他人理解并且保证代码可靠性。 面向对象结合设计模式，才能真正体会到程序变得可维护、可复用、可扩展、灵活性好。设计模式对于程序员而言并不陌生，每个程序员在编程时都会或多或少地接触到设计模式。无论是在大型程序的架构中，亦或是在源码的学习中，设计模式都扮演着非常重要的角色。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;设计模式推荐学习教程&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ddooo.com/softdown/109592.htm&quot;&gt;大话设计模式&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/me115/design_patterns&quot;&gt;图说设计模式&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/9XqcJUdfFgbUkKclfHGz7Q&quot;&gt;C#设计模式入门实战教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kancloud.cn/sstd521/design/193489&quot;&gt;设计模式之禅（第2版）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/lovelion/article/details/17517213&quot;&gt;史上最全设计模式导学目录&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlfredTheBest/Design-Pattern&quot;&gt;design pattern 包教不包会&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://refactoringguru.cn/&quot;&gt;免费在线学习代码重构和设计模式&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sheng-jie/Design-Pattern&quot;&gt;C#常见的23种设计模式（含源码）圣杰&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EdisonChou/DesignPattern.Samples.CSharp&quot;&gt;23种面向对象设计模式示例代码（C#实现）Edison Zhou&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;经典的23种设计模式&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://images.cnblogs.com/cnblogs_com/Can-daydayup/2441975/o_250120135924_DesignPatterns.webp&quot; alt=&quot;经典的23种设计模式思维脑图&quot; title=&quot;经典的23种设计模式思维脑图&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🛠️数据结构&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;数据结构是一种组织和存储数据的方式，它用于管理和操作数据的集合。数据结构可以定义为不同数据元素之间的关系，以及在存储和访问数据时使用的算法。它涉及到如何存储、组织和管理数据，以便能够高效地进行检索和操作。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84&quot;&gt;数据结构-维基百科&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/547679051&quot;&gt;八种数据结构分类&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/356047870&quot;&gt;数据结构知识点大汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/138523723&quot;&gt;十三张图带你彻底了解所有数据结构&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🧮逻辑算法&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;逻辑算法是一种基于逻辑推理和结构化思维的算法设计方法。它是指通过逻辑关系和规则来解决问题的算法。逻辑算法通常使用形式化的逻辑语言和符号进行描述和表达，以便于机器或计算机程序的理解和执行。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;逻辑算法提升&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bookstack.cn/read/hello-algorithm/README.md&quot;&gt;小浩算法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hello-algo.com/&quot;&gt;Hello算法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.acwing.com/problem/&quot;&gt;AcWing在线题库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nowcoder.com/exam/intelligent?questionJobId=10&amp;amp;tagId=21000&quot;&gt;牛客网基础算法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codetop.cc/home&quot;&gt;CodeTop企业题库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/&quot;&gt;在线算法刷题平台-力扣&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://labuladong.gitee.io/algo/&quot;&gt;labuladong的算法小抄&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://visualgo.net/zh&quot;&gt;VisuAlgo可视化学习算法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/367994409&quot;&gt;程序员必须掌握的算法有哪些？&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;C#常见逻辑算法&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/RZpAuht7yNLdG4Nb6TGinw&quot;&gt;C#经典十大排序算法&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/z_LPZ6QUFNJcwaEw_H5qbQ&quot;&gt;C#冒泡排序算法&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/B1QdqyP8HQgOv8tlSujtog&quot;&gt;C#选择排序算法&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/YEregZ_GOGgEltGUJadycw&quot;&gt;C#插入排序算法&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/_t9QVuj_rLcNomyv7LcGMA&quot;&gt;C#希尔排序算法&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/ToURWBfVIl7087Ago8fGdQ&quot;&gt;C#归并排序算法&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/7vms2Q4s7DBdFs31w4cfVA&quot;&gt;C#快速排序算法&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/zS_ESKzlg05ICqFPIaePkg&quot;&gt;C#堆排序算法&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/PA5NNqcy3CM9PSncWCsmEg&quot;&gt;C#计数排序算法&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/YzviDcm3-4E5Wf2jooylJQ&quot;&gt;C#桶排序算法&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/dCG-LLim4UGD1kIY2a3hmA&quot;&gt;C#基数排序算法&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/zj9oZBajcewU6yP4y8e_ow&quot;&gt;C#经典查找算法&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/uCuqv0zOI0ZsF48Q1LoCsQ&quot;&gt;C#二分查找算法&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/VKC5lEYCL7SHieNMaPOE3A&quot;&gt;C#线性查找算法&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/qs8CZzjtmyXkQhkRWmqllA&quot;&gt;C#二叉搜索树算法&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/WaXCFshzuqVQD6YX2Kcw5g&quot;&gt;C#哈希查找算法&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/1YouL0smeUszjcrbRRpQ9g&quot;&gt;C#面试常见递归算法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/%E7%AE%97%E6%B3%95/C%23%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95%E9%9D%A2%E8%AF%95%E9%A2%98.md&quot;&gt;C#经典算法面试题汇总&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🍇关系型数据库（SQL）&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;关系型数据库（SQL）库指的是使用关系模型（二维表格模型）来组织数据的数据库，是一种使用结构化查询语言（Structured Query Language，简称SQL）进行数据管理和操作的数据库类型。它采用表格的形式来组织和存储数据，通过定义表之间的关系来建立数据之间的联系。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;SQL和数据库相关&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://xuesql.cn/&quot;&gt;自学SQL网&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cyc2018.xyz/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%20%E8%AF%AD%E6%B3%95.html#%E4%B8%80%E3%80%81%E5%9F%BA%E7%A1%80&quot;&gt;SQL语法基础&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cyc2018.xyz/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86.html#%E4%B8%80%E3%80%81%E4%BA%8B%E5%8A%A1&quot;&gt;数据库系统原理&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liyupi/sql-mother&quot;&gt;闯关式SQL自学网&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nowcoder.com/exam/oj?tab=SQL%E7%AF%87&amp;amp;topicId=199&quot;&gt;牛客网在线SQL练习&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/14353082.html#_label1&quot;&gt;关系型数据库概念详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/h7y0UwFowIOoMh2UzN4iuA&quot;&gt;7种系统设计中的数据库范式&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/lIrxpuY340zV2Nj5LxcKzQ&quot;&gt;SQL中的各种连接的区别总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/OcE2zgKOqUkg6fdjNwstxA&quot;&gt;一个不错的 SQL 编码风格的指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/590oWXEgTYFkC6lzPc682A&quot;&gt;3款免费且实用的数据库管理工具&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MySQL&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.runoob.com/mysql/mysql-tutorial.html&quot;&gt;MySQL教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mysql/mysql-server&quot;&gt;MySQL源代码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.w3cschool.cn/mysql/mysql-tutorial.html&quot;&gt;MySQL入门教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mysqlzh.com/&quot;&gt;MySQL中文文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xiaolincoder/CS-Base?tab=readme-ov-file#open_book%E5%9B%BE%E8%A7%A3-mysql&quot;&gt;MySQL图解教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Gao-yubo/p/15525872.html&quot;&gt;MySQL知识汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shlomi-noach/awesome-mysql&quot;&gt;Awesome MySQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/U68NCGkjGLHXahWmPMHwNA&quot;&gt;MySQL调优13连问&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/pnbI7xSDk7_hQMLgVryPaA&quot;&gt;MySQL基础快速入门&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cyc2018.xyz/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL.html#%E4%B8%80%E3%80%81%E7%B4%A2%E5%BC%95&quot;&gt;MySQL基础知识汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html&quot;&gt;21分钟MySQL入门教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/XnYFIc4Oq6kQrLIhOXblig&quot;&gt;MySQL入门到实战详细教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/j657b2Ihe7PXarCxawZemQ&quot;&gt;15个MySQL表设计的经验准则&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/bPAKZsXwDxRy5mzEODFljw&quot;&gt;6本值得推荐的MySQL学习书籍&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/pN6azE6v4y9sk96FJqctBw&quot;&gt;MySQL中，21个写SQL的好习惯&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/BRn6zBkBhA_3a5NHkqpj4Q&quot;&gt;26个SQL优化小技巧，收藏学习！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/uNvj1azCdQMVljgyox0CTg&quot;&gt;MySQL日志15连问，你能抗住嘛？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/eJepG60ll0gaEPVb1IAKVA&quot;&gt;MySQL夺命16问，你能回答出几个？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jaywcjlove/mysql-tutorial&quot;&gt;MySQL入门教程（MySQL tutorial book）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blog.codinglabs.org/articles/theory-of-mysql-index.html&quot;&gt;MySQL索引背后的数据结构及算法原理&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/1iO33FX_eNTDi_S-DbKIeQ&quot;&gt;万字解析MySQL InnoDB锁机制实现原理&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Microsoft SQL Server&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.w3cschool.cn/sqlserver/sqlserver-1p6728kn.html&quot;&gt;SQL Server教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/zh-cn/sql/?view=sql-server-ver15&quot;&gt;Microsoft SQL文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/zh-cn/sql/sql-server/?view=sql-server-ver15&quot;&gt;SQL Server 技术文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/CareySon/archive/2012/05/08/2489748.html&quot;&gt;SQL Server文章目录&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/zh-cn/sql/ssms/quickstarts/ssms-connect-query-sql-server?view=sql-server-ver15&quot;&gt;SSMS管理工具快速入门&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PostgreSQL&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.runoob.com/postgresql/postgresql-tutorial.html&quot;&gt;PostgreSQL教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.postgres.cn/v2/document&quot;&gt;PostgreSQL中文文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.postgres.cn/docs/11/&quot;&gt;PostgreSQL 11.2 手册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.postgres.cn/docs/12/&quot;&gt;PostgreSQL 12.2 手册&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Oracle&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.w3cschool.cn/oraclejc/&quot;&gt;Oracle入门教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oraclejsq.com/article/010100110.html&quot;&gt;Oracle基础教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1u54y1G7xq?spm_id_from=333.337.search-card.all.click&quot;&gt;Oracle快速入门视频教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;SQLite&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/wCKjqDv2hpvsu-01meSMNA&quot;&gt;SQLite简介&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sqlite.org/index.html&quot;&gt;SQLite官网&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.runoob.com/sqlite/sqlite-intro.html&quot;&gt;SQLite教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/EasySQLite&quot;&gt;.NET操作SQLite实战教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/0nwhfbIWSl2rqaOuAuIX3g&quot;&gt;7款实用的SQLite可视化管理工具&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🍉非关系型数据库（NoSQL）&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;非关系型数据库又被称为 NoSQL（Not Only SQL )，意为不仅仅是 SQL。指的是与传统关系型数据库（RDBMS）相对应的一类数据库管理系统。与关系型数据库不同的是非关系型数据库不使用传统的表格和行列结构来存储数据，而是采用更灵活的数据模型，例如键值对、文档、列族、图形等形式。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;NoSQL相关概念&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/14353082.html#_label2&quot;&gt;非关系型数据库概念详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/GUnXVSszDZ9vpPQG2BS3UA&quot;&gt;常见的 NoSQL 数据库有哪些？&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Redis&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MyBigKnowledgeBase/CS-Base#open_book-%E5%9B%BE%E8%A7%A3redis&quot;&gt;Redis图解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.redis.com.cn/documentation.html&quot;&gt;Redis中文文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/kRpdvtRajvs9DuDt7UHGpQ&quot;&gt;Redis全景解析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://doc.redisfans.com/&quot;&gt;Redis命令参考&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://redisbook.com/&quot;&gt;Redis设计与实现&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cyc2018.xyz/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis.html#%E4%B8%80%E3%80%81%E6%A6%82%E8%BF%B0&quot;&gt;Redis基础知识汇总&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/CiFSsOx_g9g-0PUGXDuvcQ&quot;&gt;一天吃透Redis面试八股文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huangz1990/annotated_redis_source&quot;&gt;带有详细注释的 Redis 2.6 代码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huangz1990/redis-3.0-annotated&quot;&gt;带有详细注释的 Redis 3.0 代码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/3Fmv7h5p2QDtLxc9n1dp5A&quot;&gt;面试前必须要知道的Redis面试题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/z7Wdch8pc0o696DuBY8v0A&quot;&gt;5款.NET开源免费的Redis客户端组件库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/hHQ69esiJbS_pspcid3FkA&quot;&gt;4款实用、跨平台的Redis可视化管理工具&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MongoDB&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mongoing.com/&quot;&gt;MongoDB中文社区&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mongoing.com/archives/docs/mongodb%e5%88%9d%e5%ad%a6%e8%80%85%e6%95%99%e7%a8%8b/mongodb%e9%ab%98%e9%a2%91%e9%9d%a2%e8%af%95%e9%a2%98&quot;&gt;MongoDB高频面试题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mongodb.com/zh-cn/docs/&quot;&gt;MongoDB官方中文文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.yuque.com/ysgstudyhard/da6e0c/eetrswgetml77m1h&quot;&gt;95道MongoDB面试题详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/16797608.html&quot;&gt;MongoDB从入门到实战之MongoDB简介&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/16804415.html&quot;&gt;MongoDB从入门到实战之MongoDB快速入门&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/16838976.html&quot;&gt;MongoDB从入门到实战之Docker快速安装MongoDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/16840085.html&quot;&gt;MongoDB从入门到实战之MongoDB工作常用操作命令&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Can-daydayup/p/16970210.html&quot;&gt;MongoDB安全加固，防止数据库攻击删除勒索威胁&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Memcached&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.runoob.com/memcached/memcached-tutorial.html&quot;&gt;Memcached入门教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.php.cn/course/list/55.html&quot;&gt;Memcached免费学习视频教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;💡系统设计&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/donnemartin/system-design-primer&quot;&gt;系统设计入门&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zaiyunduan123/Java-Summarize/raw/master/notes/scene/Scene-Design.md&quot;&gt;系统与架构设计&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qiurunze123/miaosha&quot;&gt;秒杀系统设计与实现&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DocsHome/microservices&quot;&gt;微服务：从设计到部署&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/HXi2SBQcjjAk-WExmiXyCA&quot;&gt;浅谈6种流行的API架构风格&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;💻操作系统&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/raw/main/docs/Linux/Linux.md&quot;&gt;Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CyC2018/CS-Notes/raw/master/notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20-%20%E7%9B%AE%E5%BD%95.md&quot;&gt;计算机操作系统&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MyBigKnowledgeBase/CS-Base#open_book%E5%9B%BE%E8%A7%A3%E7%B3%BB%E7%BB%9F&quot;&gt;图解计算机操作系统&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1YE411D7nH?from=search&amp;amp;seid=13464543417132613798&amp;amp;spm_id_from=333.337.0.0&quot;&gt;王道计算机考研操作系统视频教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🛰️计算机网络&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cyc2018.xyz/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/HTTP/HTTP.html#%E4%B8%80-%E3%80%81%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5&quot;&gt;HTTP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cyc2018.xyz/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/Socket/Socket.html#%E4%B8%80%E3%80%81i-o-%E6%A8%A1%E5%9E%8B&quot;&gt;Socket&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/7d6853140e13&quot;&gt;什么是RPC？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/24860273&quot;&gt;TCP和UDP的区别&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cyc2018.xyz/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20-%20%E7%9B%AE%E5%BD%95.html#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5&quot;&gt;计算机网络基础&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MyBigKnowledgeBase/CS-Base#open_book%E5%9B%BE%E8%A7%A3%E7%BD%91%E7%BB%9C&quot;&gt;图解计算机网络&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/2isYFwIIiZ9fJilnEaY6lQ&quot;&gt;全面的网络基础思维导图&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/XY3TPLnr3bNIij_f3e7W1g&quot;&gt;学习网络技术的方法和路径&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;☁️容器技术&lt;/h2&gt; 
&lt;h3&gt;Kubernetes（K8s）&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Kubernetes是容器集群管理系统，是一个开源的平台，可以实现容器集群的自动化部署、自动扩缩容、维护等功能。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/feiskyer/kubernetes-handbook&quot;&gt;Kubernetes指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kubernetes.org.cn/&quot;&gt;Kubernetes中文社区&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/162928436&quot;&gt;一文了解 Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/329365548/answer/1545488275&quot;&gt;Kubernetes(K8s) 解决了哪些问题？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/GptvqgZB6HYYlDdEnx3ILw&quot;&gt;在 Kubernetes 上优化 RabbitMQ 性能&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Docker是一个开源的应用容器引擎，基于Golang 语言开发，可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 服务器。容器是一个沙箱机制，相互之间不会有影响（类似于我们手机上运行的 app），并且容器开销是很低的。Docker 是一个供开发人员和系统管理员构建、运行和与容器共享应用程序的平台。使用容器部署应用程序称为容器化。容器并不是新事物，但它们用于轻松部署应用程序却是新鲜的。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/187505981&quot;&gt;什么是Docker？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/dotnet/core/docker/build-container?tabs=windows&amp;amp;pivots=dotnet-8-0&quot;&gt;.NET应用容器化&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.docker.org.cn/&quot;&gt;Docker中文社区&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/dotnet/core/docker/introduction&quot;&gt;.NET和Docker简介&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/&quot;&gt;Docker官方文档教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuepress.mirror.docker-practice.com/&quot;&gt;Docker从入门到实践&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/RrMkeIWO0PePhXf3pTjsRQ&quot;&gt;Docker容器入门详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/_XK3MtVn-KKuVxf13TPwug&quot;&gt;Docker是怎么工作的？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/-uwOq2iR0nvNfFJkzrLbUw&quot;&gt;CentOS 8.4安装Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/aDw1uXMngvjjClE6oZmdJw&quot;&gt;Ubuntu 20.04安装Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/fd-_oY624s0sh25Dkf6iGA&quot;&gt;Docker日常工作常用命令&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/A5-al_qhQzYq5-1a4U7MAQ&quot;&gt;全面的Docker快速入门教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/x_p2FgIWIkFHdPruNi2oTQ&quot;&gt;8个实用的Docker容器监控工具&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/jYbIG1TgiZQaZqwJMpZ0eQ&quot;&gt;Windows10 Docker安装详细教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/zxCPi_CtCVL33jNOZM3hOQ&quot;&gt;Docker安装MySQL并使用Navicat连接&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/jp2qYzeuGxAX-fsDf4JK7g&quot;&gt;Docker安装MongoDB并使用Navicat连接&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/collabnix/dockerlabs&quot;&gt;Docker初级、中级、高级实战教程和指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/aOl85vnWbXY-Ts5i3S0FAQ&quot;&gt;3款免费又好用的 Docker 可视化管理工具&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/JCJXjq6RYS80Q2E9nbVOkg&quot;&gt;十本你不容错过的Docker入门到精通书籍推荐&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/YFsGGnQPQ5JYCKEoJ0S0Rw&quot;&gt;Docker安装MS SQL Server并使用Navicat远程连接&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/CAc-PJWcLHHtE4Il5QTq9w&quot;&gt;Docker安装Redis并使用Another Redis Desktop Manager连接&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;容器编排平台&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;容器编排平台的主要作用是帮助用户有效地管理和调度大规模的容器化应用程序，从而提高应用程序的可靠性、弹性和可扩展性。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.rancher.cn/docs/rancher2/overview/_index/&quot;&gt;Rancher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/swarm&quot;&gt;Docker Swarm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mesos-cn.gitbooks.io/mesos-cn/content/OverView/Mesos-Architecture.html&quot;&gt;Apache Mesos&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🧰DevOps、CI&amp;amp;CD自动化工具&lt;/h2&gt; 
&lt;h3&gt;DevOps&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;DevOps 是软件开发（Development）和运营（Operations）的结合。代表着重视软件开发人员（Dev）和 IT 运维技术人员（Ops）之间沟通合作的文化；旨在透过自动化软件交付和架构变更的流程，使得构建、 测试、发布软件的过程能够更加地快捷、频繁和可靠。Gartner 咨询公司认为 DevOps 代表了 IT 文化的变化趋势。DevOps 可以很好地解释为人们一起工作以快速构思、构建和交付安全软件。DevOps 实践使软件开发（dev）和运营（ops）团队能够通过自动化、协作、快速反馈和迭代改进来加速交付。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/7gZawUuKHSVe7e3ik_wEew&quot;&gt;DevOps，CI，CD，自动化简单介绍&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;DevOps研发效能平台 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://gitee.com/koderover/zadig&quot;&gt;Zadig&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://pingcode.com/&quot;&gt;PingCode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://cloud.tencent.com/product/coding&quot;&gt;CODING DevOps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/zh-cn/products/devops/&quot;&gt;Azure DevOps&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;持续集成与部署（CI&amp;amp;CD）自动化工具&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;越来越多的工程团队正在采用敏捷开发，推动更短，更快的发布周期。代码库增长和创建新生产构建的频率导致持续集成和持续部署/交付工具的兴起。持续集成（CI）和持续交付/部署（CD）自动化工具是用于实现软件开发和发布流程自动化的工具。这些工具能够帮助开发团队更高效地集成代码、运行测试、进行构建和部署，从而提高软件开发的效率和质量。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jenkins.io/&quot;&gt;Jenkins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/topics/ci-cd/&quot;&gt;GitLab CI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com/&quot;&gt;Circle CI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jetbrains.com/teamcity&quot;&gt;TeamCity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/zh/software/bamboo&quot;&gt;Bamboo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/features/actions&quot;&gt;Github Actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/zh-cn/services/devops/pipelines/&quot;&gt;Azure Pipelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🌍Web前端开发&lt;/h2&gt; 
&lt;h3&gt;Web前端学习路线和教程&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://v3.cn.vuejs.org/&quot;&gt;Vue官网&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yuchengkai.cn/&quot;&gt;前端进阶之道&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shengxinjing.cn/&quot;&gt;大圣编程自学网&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CurrentVastStars/front-end-roadmap&quot;&gt;前端学习路线图&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://web.qianguyihao.com/#%E5%89%8D%E8%A8%80&quot;&gt;千古前端图文教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.runoob.com/&quot;&gt;HTML/CSS菜鸟教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wangdoc.com/typescript/intro&quot;&gt;TypeScript使用教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/learn/Front-end_web_developer&quot;&gt;MDN Web前端学习路线图&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Web前端面试宝典和常见面试题&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33889997&quot;&gt;TCP/IP协议详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lucifer.ren/fe-interview/#/?id=%E5%A4%A7%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8-%E5%9B%BE%E8%A7%A3%E5%89%8D%E7%AB%AF&quot;&gt;大前端面试宝典&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/haizlin/fe-interview&quot;&gt;前端3+1面试题库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/azl397985856/fe-interview&quot;&gt;宇宙最强的前端面试指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/GICbiyJpINrHZ41u_4zT-A&quot;&gt;HTTP1.0、HTTP1.1 和 HTTP2.0 的区别&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/Jet_Lover/article/details/115637795&quot;&gt;最新前端面试中常见的面试题（附答案）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844903928442667015&quot;&gt;面试分享：两年工作经验成功面试阿里P6总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844903809206976520&quot;&gt;中高级前端面试-JavaScript手写代码无敌秘籍&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844904115428917255&quot;&gt;写给女朋友的中级前端面试秘籍（含详细答案，15k级别）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844903776512393224&quot;&gt;中高级前端大厂面试秘籍，为你保驾护航金三银四，直通大厂(上)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/cswiki/p/14429730.html&quot;&gt;经典面试题：在浏览器地址栏输入一个URL后回车，背后发生了什么?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Web前端优质资源和文章汇总&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide/issues/12&quot;&gt;适合后端程序员的前端框架&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Aky1uQe3FnSlEy3YwjEWTw&quot;&gt;开源实用的大屏数据展示模板&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FrontEndGitHub/FrontEndGitHub&quot;&gt;GitHub最全的前端资源汇总仓库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nealyang/PersonalBlog/issues/48&quot;&gt;一个优秀的前端都应该阅读这些文章&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🧲版本控制工具&lt;/h2&gt; 
&lt;h3&gt;Git&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/all-about-git&quot;&gt;Git大全&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rogerdudler.github.io/git-guide/index.zh.html&quot;&gt;Git简明指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gitref.justjavac.com/&quot;&gt;Git参考手册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/521xueweihan/git-tips&quot;&gt;Git的奇技淫巧&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/896043488029600&quot;&gt;Git教程-廖雪峰&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://backlogtool.com/git-guide/cn/&quot;&gt;猴子都能懂的Git入门&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/github/gitignore&quot;&gt;gitignore templates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/9BKDDndazxW-uFUzxH5Mxg&quot;&gt;Git从入门到实战详细教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/IKczx06dinmmGOkVKDaN3g&quot;&gt;工作中必备的12个Git命令&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/thZS99hNOc6dM_pEDa3LMQ&quot;&gt;最全面SourceTree使用教程详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/L4YOVenR1QPiftpi8-gy1A&quot;&gt;Git开发、发布、缺陷分离模型概述&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/WxPPZ8QrhR8opcqADlveMQ&quot;&gt;实际项目中如何使用Git做分支管理&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/18J-YoEArJS_rCxkx4-D5w&quot;&gt;10款实用便捷的Git可视化管理工具&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/nWX11NUogNSTAjg-NQJzBQ&quot;&gt;TortoiseGit使用教程（图文详细版）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/nvlLTMP-svb4vqpAvIjkWA&quot;&gt;VS Code使用Git可视化管理源代码详细教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/I6LgkVPJFwopnYeANq3uOQ&quot;&gt;Git入门图文教程(1.5W字40图)--深入浅出、图文并茂&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/T2Ya3NWlv1gQN7_FQcHWnw&quot;&gt;Visual Studio使用Git忽略不想上传到远程仓库的文件&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/31p8oXyKJW7T2_0grcE7HQ&quot;&gt;在开发过程中使用git rebase还是git merge，优缺点分别是什么？&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;SVN&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://svnbook.red-bean.com/nightly/zh/index.html&quot;&gt;Subversion版本控制&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.runoob.com/svn/svn-tutorial.html&quot;&gt;SVN教程-菜鸟教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1mW411M7yR?p=5&quot;&gt;SVN版本控制软件视频教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🙇面试须知&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/121555573&quot;&gt;面试工作流程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nowcoder.com/interview/center?entranceType=%25E9%259D%25A2%25E8%25AF%2595%25E7%25BB%258F%25E9%25AA%258Ctab&quot;&gt;牛客网面试经验&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nowcoder.com/interview/ai/index?entranceType=AI%25E6%25A8%25A1%25E6%258B%259F%25E9%259D%25A2%25E8%25AF%2595tab&quot;&gt;牛客网AI模拟面试&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/137490246&quot;&gt;程序员面试都需要准备什么?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/65287910&quot;&gt;程序员面试时如何做自我介绍?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yifeikong/reverse-interview-zh&quot;&gt;技术面试最后反问面试官的话&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/aobing/p/12117044.html&quot;&gt;大厂面试,面试官看了直呼想要的简历&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lietoumai/Awesome-offer&quot;&gt;关于面试/谈Offer/程序员职场生涯等&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/StartInterview/Awesome-Tech-Words&quot;&gt;程序员写简历必须要注意的技术词汇拼写&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CodingDocs/advanced-programmer#%E9%9D%A2%E8%AF%95%E5%BF%85%E7%9F%A5&quot;&gt;程序员应该有的一些好习惯+面试必知事项&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/R6QtYjKYoeHNRAJv96qmgw&quot;&gt;互联网寒冬下，如何写好一份.NET求职简历？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/VxL7Lr_FCr37gJu_vGZNCw&quot;&gt;面试常见的10个问题(成功率高达90%的回答技巧)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/HrbIlWDY7oqFOWDonKD89A&quot;&gt;专科学历的程序员想要面试获胜必须要做的两个点&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;👩‍💻简历模板&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;项目描述&lt;/th&gt; 
   &lt;th&gt;项目地址&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;mdnice resume&lt;/strong&gt;：在线简历排版工具，支持切换 4 种模版、自定义和导出功能（支持Markdown和富文本的在线简历排版工具）。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/mdnice/markdown-resume&quot;&gt;https://github.com/mdnice/markdown-resume&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;冷熊简历&lt;/strong&gt;：是一款在线 MarkDown 简历书写工具，支持基本的 markdown 语法。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;http://cv.ftqq.com/?fr=github&quot;&gt;http://cv.ftqq.com/?fr=github&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Resume Generator&lt;/strong&gt;：在线简历生成器，支持在线预览、编辑和下载 PDF 简历。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/visiky/resume&quot;&gt;https://github.com/visiky/resume&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;best resume ever&lt;/strong&gt;：快速、简单的制作多种漂亮的简历，打造你有史以来最好的简历。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/salomonelli/best-resume-ever&quot;&gt;https://github.com/salomonelli/best-resume-ever&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Magic Resume&lt;/strong&gt;：Magic Resume 是一个现代化的在线简历编辑器，让创建专业简历变得简单有趣。基于 Next.js 和 Motion 构建，支持实时预览和自定义主题。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/JOYCEQL/magic-resume&quot;&gt;https://github.com/JOYCEQL/magic-resume&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;codecv&lt;/strong&gt;：一款使用 markdown 制作简历的工具，它可以将你编写的markdown 简历转换为 PDF，支持多种模板，完全免费。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmenlei/codecv&quot;&gt;https://github.com/acmenlei/codecv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ResumeSample&lt;/strong&gt;：程序员简历模板系列，包括PHP程序员简历模板、iOS程序员简历模板、Android程序员简历模板、Web前端程序员简历模板、Java程序员简历模板、C/C++程序员简历模板、NodeJS程序员简历模板、架构师简历模板以及通用程序员简历模板。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/geekcompany/ResumeSample&quot;&gt;https://github.com/geekcompany/ResumeSample&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Awesome Resume&lt;/strong&gt;：程序员简历例句，程序员简历范例，简历模版。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/resumejob/awesome-resume&quot;&gt;https://github.com/resumejob/awesome-resume&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DeerResume&lt;/strong&gt;：好用的MarkDown在线简历工具，可在线预览、编辑、设置访问密码和生成PDF。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/geekcompany/DeerResume&quot;&gt;https://github.com/geekcompany/DeerResume&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Markdown Resume&lt;/strong&gt;：用 markdown 语法来写的简历模版，非常简洁通用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/CyC2018/Markdown-Resume&quot;&gt;https://github.com/CyC2018/Markdown-Resume&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Awesome Resume for Chinese&lt;/strong&gt;：汇总收集中文的简历模板。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/dyweb/awesome-resume-for-chinese&quot;&gt;https://github.com/dyweb/awesome-resume-for-chinese&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Markdown Resume Template&lt;/strong&gt;：BAT程序员自己的简历模板分享出来了。技术简历追求简单明了，避免没有必要的花哨修饰，大家可以fork到自己仓库中，基于这个模板进行修改。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/youngyangyang04/Markdown-Resume-Template&quot;&gt;https://github.com/youngyangyang04/Markdown-Resume-Template&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Resume template for Coder&lt;/strong&gt;：适合程序员的简历模板。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/byoungd/Resume-template-for-Coder&quot;&gt;https://github.com/byoungd/Resume-template-for-Coder&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;latexcv&lt;/strong&gt;：一套简单易用、功能强大的 LaTeX 简历模板集合，所有模板均为自行设计和实现，未复制自其他模板集合。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/jankapunkt/latexcv&quot;&gt;https://github.com/jankapunkt/latexcv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AI Job Resume&lt;/strong&gt;：AI 算法岗简历模板。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/amusi/AI-Job-Resume&quot;&gt;https://github.com/amusi/AI-Job-Resume&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;King of Pigeon&lt;/strong&gt;：计算机保研简历与文书实用模板。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/yuezih/King-of-Pigeon&quot;&gt;https://github.com/yuezih/King-of-Pigeon&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Deedy Resume&lt;/strong&gt;：适合应届毕业生的 LaTeX 简历模板。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/dyweb/Deedy-Resume-for-Chinese&quot;&gt;https://github.com/dyweb/Deedy-Resume-for-Chinese&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LapisCV&lt;/strong&gt;：基于 Markdown 格式，易于编辑，所见即所得。风格简洁正式，适用于大部分求职、求学场景。&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BingyanStudio/LapisCV&quot;&gt;https://github.com/BingyanStudio/LapisCV&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🧭宝藏指南&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MyBigKnowledgeBase/skill-map&quot;&gt;程序员技能图谱&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PKUFlyingPig/cs-self-learning&quot;&gt;计算机自学指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trending&quot;&gt;Github-Trending&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://markdown.com.cn/basic-syntax/&quot;&gt;Markdown语法教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jobbole/awesome-programming-books&quot;&gt;经典编程书籍大全&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liyupi/free-programming-resources&quot;&gt;免费的编程资源大全&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fangzesheng/free-api&quot;&gt;免费的接口服务收集&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MyBigKnowledgeBase/Awesome-Design-Tools&quot;&gt;Awesome-Design-Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/t92aadaH1Os9vDPBI-rv8Q&quot;&gt;3款程序员常用的画图工具&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/free-programming-books-zh_CN&quot;&gt;免费的计算机编程类中文书籍&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/i9WwbP8r2BJ3-fPGYbM_fg&quot;&gt;10款程序员常用的API管理工具&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/m7nUv_z-THQC-y-D9IoCIw&quot;&gt;推荐几个不错的数据库设计工具&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shimohq/chinese-programmer-wrong-pronunciation&quot;&gt;中国程序员容易发音错误的单词&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/F52kY4kqPovLcTlm5kFo7w&quot;&gt;推荐一些程序员常逛的开发者社区&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/toutiaoio/awesome-architecture&quot;&gt;架构师技术图谱，助你早日成为架构师&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Gdm2wHhiLB9I7ib2Ue5ysA&quot;&gt;值得推荐的4款免费且功能强大的在线文档工具&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/chinese-independent-developer&quot;&gt;中国独立开发者项目列表 -- 分享大家都在做什么&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/Docsify-Guide&quot;&gt;使用Typora+Docsify打造最强、最轻量级的个人&amp;amp;团队文档&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;⚖社区组织&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aspnet&quot;&gt;ASP.NET&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft&quot;&gt;Microsoft&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet&quot;&gt;.NET Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/App-vNext&quot;&gt;App vNext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/dotnetchina&quot;&gt;dotNET China&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NewLifeX&quot;&gt;新生命开发团队&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotNetTreasury&quot;&gt;dotNetTreasury&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet-foundation&quot;&gt;.NET Foundation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MicrosoftDocs&quot;&gt;Microsoft Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Azure&quot;&gt;Microsoft Azure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnetcore&quot;&gt;.NET Core Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aws&quot;&gt;Amazon Web Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitstar-ranking.com/organizations&quot;&gt;Organizations Ranking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet-architecture&quot;&gt;.NET Application Architecture&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/YSGStudyHards/DotNetGuide#%E7%9B%AE%E5%BD%95%E5%AF%BC%E8%88%AA%E5%96%84%E7%94%A8ctrlf&quot;&gt;🔝返回目录&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;𓆌𓆉𓆈𓃻𓄿𓅜𓃹𓆉𓆈𓃻𓄿𓅜𓆌𓆉𓆈𓃻𓄿𓅜𓃹𓆉𓃲𓃟𓃠𓃗𓃵𓆉𓇼𓆡𓆜𓆉𓃹𓃡𓃟𓃵𓆏𓅦𓄿𓅜𓆌𓆉𓆈𓃻𓄿𓅜𓆌𓆉𓆈𓃻𓄿𓅜𓃹𓆉&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cysharp/UniTask</title>
      <link>https://github.com/Cysharp/UniTask</link>
      <description>&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UniTask&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Cysharp/UniTask/actions&quot;&gt;&lt;img src=&quot;https://github.com/Cysharp/UniTask/workflows/Build-Debug/badge.svg?sanitize=true&quot; alt=&quot;GitHub Actions&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Cysharp/UniTask/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/Cysharp/UniTask.svg?sanitize=true&quot; alt=&quot;Releases&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Cysharp/UniTask/raw/master/README_CN.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/UniTask-%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-red&quot; alt=&quot;Readme_CN&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Struct based &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; and custom AsyncMethodBuilder to achieve zero allocation&lt;/li&gt; 
 &lt;li&gt;Makes all Unity AsyncOperations and Coroutines awaitable&lt;/li&gt; 
 &lt;li&gt;PlayerLoop based task(&lt;code&gt;UniTask.Yield&lt;/code&gt;, &lt;code&gt;UniTask.Delay&lt;/code&gt;, &lt;code&gt;UniTask.DelayFrame&lt;/code&gt;, etc..) that enable replacing all coroutine operations&lt;/li&gt; 
 &lt;li&gt;MonoBehaviour Message Events and uGUI Events as awaitable/async-enumerable&lt;/li&gt; 
 &lt;li&gt;Runs completely on Unity&#39;s PlayerLoop so doesn&#39;t use threads and runs on WebGL, wasm, etc.&lt;/li&gt; 
 &lt;li&gt;Asynchronous LINQ, with Channel and AsyncReactiveProperty&lt;/li&gt; 
 &lt;li&gt;TaskTracker window to prevent memory leaks&lt;/li&gt; 
 &lt;li&gt;Highly compatible behaviour with Task/ValueTask/IValueTaskSource&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For technical details, see blog post: &lt;a href=&quot;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&quot;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ &lt;/a&gt;&lt;br&gt; For advanced tips, see blog post: &lt;a href=&quot;https://medium.com/@neuecc/extends-unitywebrequest-via-async-decorator-pattern-advanced-techniques-of-unitask-ceff9c5ee846&quot;&gt;Extends UnityWebRequest via async decorator pattern — Advanced Techniques of UniTask&lt;/a&gt;&lt;/p&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#basics-of-unitask-and-asyncoperation&quot;&gt;Basics of UniTask and AsyncOperation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&quot;&gt;Cancellation and Exception handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#timeout-handling&quot;&gt;Timeout handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#progress&quot;&gt;Progress&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&quot;&gt;PlayerLoop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#async-void-vs-async-unitaskvoid&quot;&gt;async void vs async UniTaskVoid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasktracker&quot;&gt;UniTaskTracker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#external-assets&quot;&gt;External Assets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#asyncenumerable-and-async-linq&quot;&gt;AsyncEnumerable and Async LINQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#awaitable-events&quot;&gt;Awaitable Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#channel&quot;&gt;Channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#vs-awaitable&quot;&gt;vs Awaitable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unit-testing&quot;&gt;For Unit Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#threadpool-limitation&quot;&gt;ThreadPool limitation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#ienumeratortounitask-limitation&quot;&gt;IEnumerator.ToUniTask limitation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unityeditor&quot;&gt;For UnityEditor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#compare-with-standard-task-api&quot;&gt;Compare with Standard Task API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#pooling-configuration&quot;&gt;Pooling Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#allocation-on-profiler&quot;&gt;Allocation on Profiler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasksynchronizationcontext&quot;&gt;UniTaskSynchronizationContext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#api-references&quot;&gt;API References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&quot;&gt;UPM Package&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#install-via-git-url&quot;&gt;Install via git URL&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#net-core&quot;&gt;.NET Core&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Install via &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&quot;&gt;UPM package&lt;/a&gt; with git reference or asset package(&lt;code&gt;UniTask.*.*.*.unitypackage&lt;/code&gt;) available in &lt;a href=&quot;https://github.com/Cysharp/UniTask/releases&quot;&gt;UniTask/releases&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// extension awaiter/methods can be used by this namespace
using Cysharp.Threading.Tasks;

// You can return type as struct UniTask&amp;lt;T&amp;gt;(or UniTask), it is unity specialized lightweight alternative of Task&amp;lt;T&amp;gt;
// zero allocation and fast excution for zero overhead async/await integrate with Unity
async UniTask&amp;lt;string&amp;gt; DemoAsync()
{
    // You can await Unity&#39;s AsyncObject
    var asset = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;foo&quot;);
    var txt = (await UnityWebRequest.Get(&quot;https://...&quot;).SendWebRequest()).downloadHandler.text;
    await SceneManager.LoadSceneAsync(&quot;scene2&quot;);

    // .WithCancellation enables Cancel, GetCancellationTokenOnDestroy synchornizes with lifetime of GameObject
    // after Unity 2022.2, you can use `destroyCancellationToken` in MonoBehaviour
    var asset2 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;bar&quot;).WithCancellation(this.GetCancellationTokenOnDestroy());

    // .ToUniTask accepts progress callback(and all options), Progress.Create is a lightweight alternative of IProgress&amp;lt;T&amp;gt;
    var asset3 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;baz&quot;).ToUniTask(Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x)));

    // await frame-based operation like a coroutine
    await UniTask.DelayFrame(100); 

    // replacement of yield return new WaitForSeconds/WaitForSecondsRealtime
    await UniTask.Delay(TimeSpan.FromSeconds(10), ignoreTimeScale: false);
    
    // yield any playerloop timing(PreUpdate, Update, LateUpdate, etc...)
    await UniTask.Yield(PlayerLoopTiming.PreLateUpdate);

    // replacement of yield return null
    await UniTask.Yield();
    await UniTask.NextFrame();

    // replacement of WaitForEndOfFrame
#if UNITY_2023_1_OR_NEWER
    await UniTask.WaitForEndOfFrame();
#else
    // requires MonoBehaviour(CoroutineRunner))
    await UniTask.WaitForEndOfFrame(this); // this is MonoBehaviour
#endif

    // replacement of yield return new WaitForFixedUpdate(same as UniTask.Yield(PlayerLoopTiming.FixedUpdate))
    await UniTask.WaitForFixedUpdate();
    
    // replacement of yield return WaitUntil
    await UniTask.WaitUntil(() =&amp;gt; isActive == false);

    // special helper of WaitUntil
    await UniTask.WaitUntilValueChanged(this, x =&amp;gt; x.isActive);

    // You can await IEnumerator coroutines
    await FooCoroutineEnumerator();

    // You can await a standard task
    await Task.Run(() =&amp;gt; 100);

    // Multithreading, run on ThreadPool under this code
    await UniTask.SwitchToThreadPool();

    /* work on ThreadPool */

    // return to MainThread(same as `ObserveOnMainThread` in UniRx)
    await UniTask.SwitchToMainThread();

    // get async webrequest
    async UniTask&amp;lt;string&amp;gt; GetTextAsync(UnityWebRequest req)
    {
        var op = await req.SendWebRequest();
        return op.downloadHandler.text;
    }

    var task1 = GetTextAsync(UnityWebRequest.Get(&quot;http://google.com&quot;));
    var task2 = GetTextAsync(UnityWebRequest.Get(&quot;http://bing.com&quot;));
    var task3 = GetTextAsync(UnityWebRequest.Get(&quot;http://yahoo.com&quot;));

    // concurrent async-wait and get results easily by tuple syntax
    var (google, bing, yahoo) = await UniTask.WhenAll(task1, task2, task3);

    // shorthand of WhenAll, tuple can await directly
    var (google2, bing2, yahoo2) = await (task1, task2, task3);

    // return async-value.(or you can use `UniTask`(no result), `UniTaskVoid`(fire and forget)).
    return (asset as TextAsset)?.text ?? throw new InvalidOperationException(&quot;Asset not found&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Basics of UniTask and AsyncOperation&lt;/h2&gt; 
&lt;p&gt;UniTask features rely on C# 7.0(&lt;a href=&quot;https://github.com/dotnet/roslyn/raw/master/docs/features/task-types.md&quot;&gt;task-like custom async method builder feature&lt;/a&gt;) so the required Unity version is after &lt;code&gt;Unity 2018.3&lt;/code&gt;, the official lowest version supported is &lt;code&gt;Unity 2018.4.13f1&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Why is UniTask(custom task-like object) required? Because Task is too heavy and not matched to Unity threading (single-thread). UniTask does not use threads and SynchronizationContext/ExecutionContext because Unity&#39;s asynchronous object is automaticaly dispatched by Unity&#39;s engine layer. It achieves faster and lower allocation, and is completely integrated with Unity.&lt;/p&gt; 
&lt;p&gt;You can await &lt;code&gt;AsyncOperation&lt;/code&gt;, &lt;code&gt;ResourceRequest&lt;/code&gt;, &lt;code&gt;AssetBundleRequest&lt;/code&gt;, &lt;code&gt;AssetBundleCreateRequest&lt;/code&gt;, &lt;code&gt;UnityWebRequestAsyncOperation&lt;/code&gt;, &lt;code&gt;AsyncGPUReadbackRequest&lt;/code&gt;, &lt;code&gt;IEnumerator&lt;/code&gt; and others when &lt;code&gt;using Cysharp.Threading.Tasks;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;UniTask provides three pattern of extension methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;* await asyncOperation;
* .WithCancellation(CancellationToken);
* .ToUniTask(IProgress, PlayerLoopTiming, CancellationToken);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;WithCancellation&lt;/code&gt; is a simple version of &lt;code&gt;ToUniTask&lt;/code&gt;, both return &lt;code&gt;UniTask&lt;/code&gt;. For details of cancellation, see: &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&quot;&gt;Cancellation and Exception handling&lt;/a&gt; section.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: await directly is returned from native timing of PlayerLoop but WithCancellation and ToUniTask are returned from specified PlayerLoopTiming. For details of timing, see: &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&quot;&gt;PlayerLoop&lt;/a&gt; section.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: AssetBundleRequest has &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;allAssets&lt;/code&gt;, default await returns &lt;code&gt;asset&lt;/code&gt;. If you want to get &lt;code&gt;allAssets&lt;/code&gt;, you can use &lt;code&gt;AwaitForAllAssets()&lt;/code&gt; method.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The type of &lt;code&gt;UniTask&lt;/code&gt; can use utilities like &lt;code&gt;UniTask.WhenAll&lt;/code&gt;, &lt;code&gt;UniTask.WhenAny&lt;/code&gt;, &lt;code&gt;UniTask.WhenEach&lt;/code&gt;. They are like &lt;code&gt;Task.WhenAll&lt;/code&gt;/&lt;code&gt;Task.WhenAny&lt;/code&gt; but the return type is more useful. They return value tuples so you can deconstruct each result and pass multiple types.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTaskVoid LoadManyAsync()
{
    // parallel load.
    var (a, b, c) = await UniTask.WhenAll(
        LoadAsSprite(&quot;foo&quot;),
        LoadAsSprite(&quot;bar&quot;),
        LoadAsSprite(&quot;baz&quot;));
}

async UniTask&amp;lt;Sprite&amp;gt; LoadAsSprite(string path)
{
    var resource = await Resources.LoadAsync&amp;lt;Sprite&amp;gt;(path);
    return (resource as Sprite);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to convert a callback to UniTask, you can use &lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt; which is a lightweight edition of &lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public UniTask&amp;lt;int&amp;gt; WrapByUniTaskCompletionSource()
{
    var utcs = new UniTaskCompletionSource&amp;lt;int&amp;gt;();

    // when complete, call utcs.TrySetResult();
    // when failed, call utcs.TrySetException();
    // when cancel, call utcs.TrySetCanceled();

    return utcs.Task; //return UniTask&amp;lt;int&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can convert Task -&amp;gt; UniTask: &lt;code&gt;AsUniTask&lt;/code&gt;, &lt;code&gt;UniTask&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&amp;lt;AsyncUnit&amp;gt;&lt;/code&gt;: &lt;code&gt;AsAsyncUnitUniTask&lt;/code&gt;, &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;: &lt;code&gt;AsUniTask&lt;/code&gt;. &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;&#39;s conversion cost is free.&lt;/p&gt; 
&lt;p&gt;If you want to convert async to coroutine, you can use &lt;code&gt;.ToCoroutine()&lt;/code&gt;, this is useful if you want to only allow using the coroutine system.&lt;/p&gt; 
&lt;p&gt;UniTask can not await twice. This is a similar constraint to the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask-1?view=netcore-3.1&quot;&gt;ValueTask/IValueTaskSource&lt;/a&gt; introduced in .NET Standard 2.1.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The following operations should never be performed on a ValueTask
  &lt;tresult&gt;
    instance:
  &lt;/tresult&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Awaiting the instance multiple times.&lt;/li&gt; 
  &lt;li&gt;Calling AsTask multiple times.&lt;/li&gt; 
  &lt;li&gt;Using .Result or .GetAwaiter().GetResult() when the operation hasn&#39;t yet completed, or using them multiple times.&lt;/li&gt; 
  &lt;li&gt;Using more than one of these techniques to consume the instance.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;If you do any of the above, the results are undefined.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var task = UniTask.DelayFrame(10);
await task;
await task; // NG, throws Exception
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Store to the class field, you can use &lt;code&gt;UniTask.Lazy&lt;/code&gt; that supports calling multiple times. &lt;code&gt;.Preserve()&lt;/code&gt; allows for multiple calls (internally cached results). This is useful when there are multiple calls in a function scope.&lt;/p&gt; 
&lt;p&gt;Also &lt;code&gt;UniTaskCompletionSource&lt;/code&gt; can await multiple times and await from many callers.&lt;/p&gt; 
&lt;h2&gt;Cancellation and Exception handling&lt;/h2&gt; 
&lt;p&gt;Some UniTask factory methods have a &lt;code&gt;CancellationToken cancellationToken = default&lt;/code&gt; parameter. Also some async operations for Unity have &lt;code&gt;WithCancellation(CancellationToken)&lt;/code&gt; and &lt;code&gt;ToUniTask(..., CancellationToken cancellation = default)&lt;/code&gt; extension methods.&lt;/p&gt; 
&lt;p&gt;You can pass &lt;code&gt;CancellationToken&lt;/code&gt; to parameter by standard &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.cancellationtokensource&quot;&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cts = new CancellationTokenSource();

cancelButton.onClick.AddListener(() =&amp;gt;
{
    cts.Cancel();
});

await UnityWebRequest.Get(&quot;http://google.co.jp&quot;).SendWebRequest().WithCancellation(cts.Token);

await UniTask.DelayFrame(1000, cancellationToken: cts.Token);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;CancellationToken can be created by &lt;code&gt;CancellationTokenSource&lt;/code&gt; or MonoBehaviour&#39;s extension method &lt;code&gt;GetCancellationTokenOnDestroy&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// this CancellationToken lifecycle is same as GameObject.
await UniTask.DelayFrame(1000, cancellationToken: this.GetCancellationTokenOnDestroy());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For propagate Cancellation, all async method recommend to accept &lt;code&gt;CancellationToken cancellationToken&lt;/code&gt; at last argument, and pass &lt;code&gt;CancellationToken&lt;/code&gt; from root to end.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await FooAsync(this.GetCancellationTokenOnDestroy());

// ---

async UniTask FooAsync(CancellationToken cancellationToken)
{
    await BarAsync(cancellationToken);
}

async UniTask BarAsync(CancellationToken cancellationToken)
{
    await UniTask.Delay(TimeSpan.FromSeconds(3), cancellationToken);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;CancellationToken&lt;/code&gt; means lifecycle of async. You can hold your own lifecycle insteadof default CancellationTokenOnDestroy.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class MyBehaviour : MonoBehaviour
{
    CancellationTokenSource disableCancellation = new CancellationTokenSource();
    CancellationTokenSource destroyCancellation = new CancellationTokenSource();

    private void OnEnable()
    {
        if (disableCancellation != null)
        {
            disableCancellation.Dispose();
        }
        disableCancellation = new CancellationTokenSource();
    }

    private void OnDisable()
    {
        disableCancellation.Cancel();
    }

    private void OnDestroy()
    {
        destroyCancellation.Cancel();
        destroyCancellation.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After Unity 2022.2, Unity adds CancellationToken in &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/MonoBehaviour-destroyCancellationToken.html&quot;&gt;MonoBehaviour.destroyCancellationToken&lt;/a&gt; and &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Application-exitCancellationToken.html&quot;&gt;Application.exitCancellationToken&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When cancellation is detected, all methods throw &lt;code&gt;OperationCanceledException&lt;/code&gt; and propagate upstream. When exception(not limited to &lt;code&gt;OperationCanceledException&lt;/code&gt;) is not handled in async method, it is propagated finally to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. The default behaviour of received unhandled exception is to write log as exception. Log level can be changed using &lt;code&gt;UniTaskScheduler.UnobservedExceptionWriteLogType&lt;/code&gt;. If you want to use custom behaviour, set an action to &lt;code&gt;UniTaskScheduler.UnobservedTaskException.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;And also &lt;code&gt;OperationCanceledException&lt;/code&gt; is a special exception, this is silently ignored at &lt;code&gt;UnobservedTaskException&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to cancel behaviour in an async UniTask method, throw &lt;code&gt;OperationCanceledException&lt;/code&gt; manually.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask&amp;lt;int&amp;gt; FooAsync()
{
    await UniTask.Yield();
    throw new OperationCanceledException();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you handle an exception but want to ignore(propagate to global cancellation handling), use an exception filter.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask&amp;lt;int&amp;gt; BarAsync()
{
    try
    {
        var x = await FooAsync();
        return x * 2;
    }
    catch (Exception ex) when (!(ex is OperationCanceledException)) // when (ex is not OperationCanceledException) at C# 9.0
    {
        return -1;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;throws/catch &lt;code&gt;OperationCanceledException&lt;/code&gt; is slightly heavy, so if performance is a concern, use &lt;code&gt;UniTask.SuppressCancellationThrow&lt;/code&gt; to avoid OperationCanceledException throw. It returns &lt;code&gt;(bool IsCanceled, T Result)&lt;/code&gt; instead of throwing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var (isCanceled, _) = await UniTask.DelayFrame(10, cancellationToken: cts.Token).SuppressCancellationThrow();
if (isCanceled)
{
    // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Only suppress throws if you call directly into the most source method. Otherwise, the return value will be converted, but the entire pipeline will not suppress throws.&lt;/p&gt; 
&lt;p&gt;Some features that use Unity&#39;s player loop, such as &lt;code&gt;UniTask.Yield&lt;/code&gt; and &lt;code&gt;UniTask.Delay&lt;/code&gt; etc, determines CancellationToken state on the player loop. This means it does not cancel immediately upon &lt;code&gt;CancellationToken&lt;/code&gt; fired.&lt;/p&gt; 
&lt;p&gt;If you want to change this behaviour, the cancellation to be immediate, set the &lt;code&gt;cancelImmediately&lt;/code&gt; flag as an argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await UniTask.Yield(cancellationToken, cancelImmediately: true);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Setting &lt;code&gt;cancelImmediately&lt;/code&gt; to true and detecting an immediate cancellation is more costly than the default behavior. This is because it uses &lt;code&gt;CancellationToken.Register&lt;/code&gt;; it is heavier than checking CancellationToken on the player loop.&lt;/p&gt; 
&lt;h2&gt;Timeout handling&lt;/h2&gt; 
&lt;p&gt;Timeout is a variation of cancellation. You can set timeout by &lt;code&gt;CancellationTokenSouce.CancelAfterSlim(TimeSpan)&lt;/code&gt; and pass CancellationToken to async methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cts = new CancellationTokenSource();
cts.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.

try
{
    await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest().WithCancellation(cts.Token);
}
catch (OperationCanceledException ex)
{
    if (ex.CancellationToken == cts.Token)
    {
        UnityEngine.Debug.Log(&quot;Timeout&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;CancellationTokenSouce.CancelAfter&lt;/code&gt; is a standard api. However in Unity you should not use it because it depends threading timer. &lt;code&gt;CancelAfterSlim&lt;/code&gt; is UniTask&#39;s extension methods, it uses PlayerLoop instead.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;CancellationTokenSource.CreateLinkedTokenSource&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cancelToken = new CancellationTokenSource();
cancelButton.onClick.AddListener(() =&amp;gt;
{
    cancelToken.Cancel(); // cancel from button click.
});

var timeoutToken = new CancellationTokenSource();
timeoutToken.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.

try
{
    // combine token
    var linkedTokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancelToken.Token, timeoutToken.Token);

    await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest().WithCancellation(linkedTokenSource.Token);
}
catch (OperationCanceledException ex)
{
    if (timeoutToken.IsCancellationRequested)
    {
        UnityEngine.Debug.Log(&quot;Timeout.&quot;);
    }
    else if (cancelToken.IsCancellationRequested)
    {
        UnityEngine.Debug.Log(&quot;Cancel clicked.&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optimize for reduce allocation of CancellationTokenSource for timeout per call async method, you can use UniTask&#39;s &lt;code&gt;TimeoutController&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;TimeoutController timeoutController = new TimeoutController(); // setup to field for reuse.

async UniTask FooAsync()
{
    try
    {
        // you can pass timeoutController.Timeout(TimeSpan) to cancellationToken.
        await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest()
            .WithCancellation(timeoutController.Timeout(TimeSpan.FromSeconds(5)));
        timeoutController.Reset(); // call Reset(Stop timeout timer and ready for reuse) when succeed.
    }
    catch (OperationCanceledException ex)
    {
        if (timeoutController.IsTimeout())
        {
            UnityEngine.Debug.Log(&quot;timeout&quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;new TimeoutController(CancellationToken)&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;TimeoutController timeoutController;
CancellationTokenSource clickCancelSource;

void Start()
{
    this.clickCancelSource = new CancellationTokenSource();
    this.timeoutController = new TimeoutController(clickCancelSource);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: UniTask has &lt;code&gt;.Timeout&lt;/code&gt;, &lt;code&gt;.TimeoutWithoutException&lt;/code&gt; methods however, if possible, do not use these, please pass &lt;code&gt;CancellationToken&lt;/code&gt;. Because &lt;code&gt;.Timeout&lt;/code&gt; work from external of task, can not stop timeoutted task. &lt;code&gt;.Timeout&lt;/code&gt; means ignore result when timeout. If you pass a &lt;code&gt;CancellationToken&lt;/code&gt; to the method, it will act from inside of the task, so it is possible to stop a running task.&lt;/p&gt; 
&lt;h2&gt;Progress&lt;/h2&gt; 
&lt;p&gt;Some async operations for unity have &lt;code&gt;ToUniTask(IProgress&amp;lt;float&amp;gt; progress = null, ...)&lt;/code&gt; extension methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var progress = Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x));

var request = await UnityWebRequest.Get(&quot;http://google.co.jp&quot;)
    .SendWebRequest()
    .ToUniTask(progress: progress);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should not use standard &lt;code&gt;new System.Progress&amp;lt;T&amp;gt;&lt;/code&gt;, because it causes allocation every time. Use &lt;code&gt;Cysharp.Threading.Tasks.Progress&lt;/code&gt; instead. This progress factory has two methods, &lt;code&gt;Create&lt;/code&gt; and &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt;. &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt; calls only when the progress value has changed.&lt;/p&gt; 
&lt;p&gt;Implementing IProgress interface to caller is better as there is no lambda allocation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class Foo : MonoBehaviour, IProgress&amp;lt;float&amp;gt;
{
    public void Report(float value)
    {
        UnityEngine.Debug.Log(value);
    }

    public async UniTaskVoid WebRequest()
    {
        var request = await UnityWebRequest.Get(&quot;http://google.co.jp&quot;)
            .SendWebRequest()
            .ToUniTask(progress: this); // pass this
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;PlayerLoop&lt;/h2&gt; 
&lt;p&gt;UniTask is run on a custom &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/LowLevel.PlayerLoop.html&quot;&gt;PlayerLoop&lt;/a&gt;. UniTask&#39;s playerloop based methods (such as &lt;code&gt;Delay&lt;/code&gt;, &lt;code&gt;DelayFrame&lt;/code&gt;, &lt;code&gt;asyncOperation.ToUniTask&lt;/code&gt;, etc...) accept this &lt;code&gt;PlayerLoopTiming&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public enum PlayerLoopTiming
{
    Initialization = 0,
    LastInitialization = 1,

    EarlyUpdate = 2,
    LastEarlyUpdate = 3,

    FixedUpdate = 4,
    LastFixedUpdate = 5,

    PreUpdate = 6,
    LastPreUpdate = 7,

    Update = 8,
    LastUpdate = 9,

    PreLateUpdate = 10,
    LastPreLateUpdate = 11,

    PostLateUpdate = 12,
    LastPostLateUpdate = 13
    
#if UNITY_2020_2_OR_NEWER
    TimeUpdate = 14,
    LastTimeUpdate = 15,
#endif
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It indicates when to run, you can check &lt;a href=&quot;https://gist.github.com/neuecc/bc3a1cfd4d74501ad057e49efcd7bdae&quot;&gt;PlayerLoopList.md&lt;/a&gt; to Unity&#39;s default playerloop and injected UniTask&#39;s custom loop.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is similar to &lt;code&gt;yield return null&lt;/code&gt; in a coroutine, but it is called before Update(Update and uGUI events(button.onClick, etc...) are called on &lt;code&gt;ScriptRunBehaviourUpdate&lt;/code&gt;, yield return null is called on &lt;code&gt;ScriptRunDelayedDynamicFrameRate&lt;/code&gt;). &lt;code&gt;PlayerLoopTiming.FixedUpdate&lt;/code&gt; is similar to &lt;code&gt;WaitForFixedUpdate&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;PlayerLoopTiming.LastPostLateUpdate&lt;/code&gt; is not equivalent to coroutine&#39;s &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;. Coroutine&#39;s WaitForEndOfFrame seems to run after the PlayerLoop is done. Some methods that require coroutine&#39;s end of frame(&lt;code&gt;Texture2D.ReadPixels&lt;/code&gt;, &lt;code&gt;ScreenCapture.CaptureScreenshotAsTexture&lt;/code&gt;, &lt;code&gt;CommandBuffer&lt;/code&gt;, etc) do not work correctly when replaced with async/await. In these cases, pass MonoBehaviour(coroutine runnner) to &lt;code&gt;UniTask.WaitForEndOfFrame&lt;/code&gt;. For example, &lt;code&gt;await UniTask.WaitForEndOfFrame(this);&lt;/code&gt; is lightweight allocation free alternative of &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;Note: In Unity 2023.1 or newer, &lt;code&gt;await UniTask.WaitForEndOfFrame();&lt;/code&gt; no longer requires MonoBehaviour. It uses &lt;code&gt;UnityEngine.Awaitable.EndOfFrameAsync&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;yield return null&lt;/code&gt; and &lt;code&gt;UniTask.Yield&lt;/code&gt; are similar but different. &lt;code&gt;yield return null&lt;/code&gt; always returns next frame but &lt;code&gt;UniTask.Yield&lt;/code&gt; returns next called. That is, call &lt;code&gt;UniTask.Yield(PlayerLoopTiming.Update)&lt;/code&gt; on &lt;code&gt;PreUpdate&lt;/code&gt;, it returns same frame. &lt;code&gt;UniTask.NextFrame()&lt;/code&gt; guarantees return next frame, you can expect this to behave exactly the same as &lt;code&gt;yield return null&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;UniTask.Yield(without CancellationToken) is a special type, returns &lt;code&gt;YieldAwaitable&lt;/code&gt; and runs on YieldRunner. It is the most lightweight and fastest.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;AsyncOperation&lt;/code&gt; is returned from native timing. For example, await &lt;code&gt;SceneManager.LoadSceneAsync&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.UpdatePreloading&lt;/code&gt; and after being called, the loaded scene&#39;s &lt;code&gt;Start&lt;/code&gt; is called from &lt;code&gt;EarlyUpdate.ScriptRunDelayedStartupFrame&lt;/code&gt;. Also &lt;code&gt;await UnityWebRequest&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.ExecuteMainThreadJobs&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In UniTask, await directly uses native timing, while &lt;code&gt;WithCancellation&lt;/code&gt; and &lt;code&gt;ToUniTask&lt;/code&gt; use specified timing. This is usually not a particular problem, but with &lt;code&gt;LoadSceneAsync&lt;/code&gt;, it causes a different order of Start and continuation after await. So it is recommended not to use &lt;code&gt;LoadSceneAsync.ToUniTask&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When using Unity 2023.1 or newer, ensure you have &lt;code&gt;using UnityEngine;&lt;/code&gt; in the using statements of your file when working with new &lt;code&gt;UnityEngine.Awaitable&lt;/code&gt; methods like &lt;code&gt;SceneManager.LoadSceneAsync&lt;/code&gt;. This prevents compilation errors by avoiding the use of the &lt;code&gt;UnityEngine.AsyncOperation&lt;/code&gt; version.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;In the stacktrace, you can check where it is running in playerloop.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83735571-83caea80-a68b-11ea-8d22-5e22864f0d24.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;By default, UniTask&#39;s PlayerLoop is initialized at &lt;code&gt;[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The order in which methods are called in BeforeSceneLoad is nondeterministic, so if you want to use UniTask in other BeforeSceneLoad methods, you should try to initialize it before this.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// AfterAssembliesLoaded is called before BeforeSceneLoad
[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterAssembliesLoaded)]
public static void InitUniTaskLoop()
{
    var loop = PlayerLoop.GetCurrentPlayerLoop();
    Cysharp.Threading.Tasks.PlayerLoopHelper.Initialize(ref loop);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you import Unity&#39;s &lt;code&gt;Entities&lt;/code&gt; package, that resets the custom player loop to default at &lt;code&gt;BeforeSceneLoad&lt;/code&gt; and injects ECS&#39;s loop. When Unity calls ECS&#39;s inject method after UniTask&#39;s initialize method, UniTask will no longer work.&lt;/p&gt; 
&lt;p&gt;To solve this issue, you can re-initialize the UniTask PlayerLoop after ECS is initialized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Get ECS Loop.
var playerLoop = ScriptBehaviourUpdateOrder.CurrentPlayerLoop;

// Setup UniTask&#39;s PlayerLoop.
PlayerLoopHelper.Initialize(ref playerLoop);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can diagnose whether UniTask&#39;s player loop is ready by calling &lt;code&gt;PlayerLoopHelper.IsInjectedUniTaskPlayerLoop()&lt;/code&gt;. And also &lt;code&gt;PlayerLoopHelper.DumpCurrentPlayerLoop&lt;/code&gt; logs all current playerloops to console.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;void Start()
{
    UnityEngine.Debug.Log(&quot;UniTaskPlayerLoop ready? &quot; + PlayerLoopHelper.IsInjectedUniTaskPlayerLoop());
    PlayerLoopHelper.DumpCurrentPlayerLoop();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can optimize loop cost slightly by remove unuse PlayerLoopTiming injection. You can call &lt;code&gt;PlayerLoopHelper.Initialize(InjectPlayerLoopTimings)&lt;/code&gt; on initialize.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var loop = PlayerLoop.GetCurrentPlayerLoop();
PlayerLoopHelper.Initialize(ref loop, InjectPlayerLoopTimings.Minimum); // minimum is Update | FixedUpdate | LastPostLateUpdate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;InjectPlayerLoopTimings&lt;/code&gt; has three preset, &lt;code&gt;All&lt;/code&gt; and &lt;code&gt;Standard&lt;/code&gt;(All without last except LastPostLateUpdate), &lt;code&gt;Minimum&lt;/code&gt;(&lt;code&gt;Update | FixedUpdate | LastPostLateUpdate&lt;/code&gt;). Default is All and you can combine custom inject timings like &lt;code&gt;InjectPlayerLoopTimings.Update | InjectPlayerLoopTimings.FixedUpdate | InjectPlayerLoopTimings.PreLateUpdate&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can make error to use uninjected &lt;code&gt;PlayerLoopTiming&lt;/code&gt; by &lt;a href=&quot;https://github.com/dotnet/roslyn-analyzers/raw/master/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/BannedApiAnalyzers.Help.md&quot;&gt;Microsoft.CodeAnalysis.BannedApiAnalyzers&lt;/a&gt;. For example, you can setup &lt;code&gt;BannedSymbols.txt&lt;/code&gt; like this for &lt;code&gt;InjectPlayerLoopTimings.Minimum&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;F:Cysharp.Threading.Tasks.PlayerLoopTiming.Initialization; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastInitialization; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.EarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastEarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.d
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastFixedUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PostLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.TimeUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastTimeUpdate; Isn&#39;t injected this PlayerLoop in this project.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can configure &lt;code&gt;RS0030&lt;/code&gt; severity to error.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/109150837-bb933880-77ac-11eb-85ba-4fd15819dbd0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;async void vs async UniTaskVoid&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;async void&lt;/code&gt; is a standard C# task system so it does not run on UniTask systems. It is better not to use it. &lt;code&gt;async UniTaskVoid&lt;/code&gt; is a lightweight version of &lt;code&gt;async UniTask&lt;/code&gt; because it does not have awaitable completion and reports errors immediately to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. If you don&#39;t require awaiting (fire and forget), using &lt;code&gt;UniTaskVoid&lt;/code&gt; is better. Unfortunately to dismiss warning, you&#39;re required to call &lt;code&gt;Forget()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTaskVoid FireAndForgetMethod()
{
    // do anything...
    await UniTask.Yield();
}

public void Caller()
{
    FireAndForgetMethod().Forget();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also UniTask has the &lt;code&gt;Forget&lt;/code&gt; method, it is similar to &lt;code&gt;UniTaskVoid&lt;/code&gt; and has the same effects. However &lt;code&gt;UniTaskVoid&lt;/code&gt; is more efficient if you completely don&#39;t use &lt;code&gt;await&lt;/code&gt;。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask DoAsync()
{
    // do anything...
    await UniTask.Yield();
}

public void Caller()
{
    DoAsync().Forget();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use an async lambda registered to an event, don&#39;t use &lt;code&gt;async void&lt;/code&gt;. Instead you can use &lt;code&gt;UniTask.Action&lt;/code&gt; or &lt;code&gt;UniTask.UnityAction&lt;/code&gt;, both of which create a delegate via &lt;code&gt;async UniTaskVoid&lt;/code&gt; lambda.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Action actEvent;
UnityAction unityEvent; // especially used in uGUI

// Bad: async void
actEvent += async () =&amp;gt; { };
unityEvent += async () =&amp;gt; { };

// Ok: create Action delegate by lambda
actEvent += UniTask.Action(async () =&amp;gt; { await UniTask.Yield(); });
unityEvent += UniTask.UnityAction(async () =&amp;gt; { await UniTask.Yield(); });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;UniTaskVoid&lt;/code&gt; can also be used in MonoBehaviour&#39;s &lt;code&gt;Start&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;class Sample : MonoBehaviour
{
    async UniTaskVoid Start()
    {
        // async init code.
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;UniTaskTracker&lt;/h2&gt; 
&lt;p&gt;useful for checking (leaked) UniTasks. You can open tracker window in &lt;code&gt;Window -&amp;gt; UniTask Tracker&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83527073-4434bf00-a522-11ea-86e9-3b3975b26266.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable AutoReload(Toggle) - Reload automatically.&lt;/li&gt; 
 &lt;li&gt;Reload - Reload view.&lt;/li&gt; 
 &lt;li&gt;GC.Collect - Invoke GC.Collect.&lt;/li&gt; 
 &lt;li&gt;Enable Tracking(Toggle) - Start to track async/await UniTask. Performance impact: low.&lt;/li&gt; 
 &lt;li&gt;Enable StackTrace(Toggle) - Capture StackTrace when task is started. Performance impact: high.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;UniTaskTracker is intended for debugging use only as enabling tracking and capturing stacktraces is useful but has a heavy performance impact. Recommended usage is to enable both tracking and stacktraces to find task leaks and to disable them both when done.&lt;/p&gt; 
&lt;h2&gt;External Assets&lt;/h2&gt; 
&lt;p&gt;By default, UniTask supports TextMeshPro(&lt;code&gt;BindTo(TMP_Text)&lt;/code&gt; and &lt;code&gt;TMP_InputField&lt;/code&gt; event extensions like standard uGUI &lt;code&gt;InputField&lt;/code&gt;), DOTween(&lt;code&gt;Tween&lt;/code&gt; as awaitable) and Addressables(&lt;code&gt;AsyncOperationHandle&lt;/code&gt; and &lt;code&gt;AsyncOperationHandle&amp;lt;T&amp;gt;&lt;/code&gt; as awaitable).&lt;/p&gt; 
&lt;p&gt;There are defined in separated asmdefs like &lt;code&gt;UniTask.TextMeshPro&lt;/code&gt;, &lt;code&gt;UniTask.DOTween&lt;/code&gt;, &lt;code&gt;UniTask.Addressables&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;TextMeshPro and Addressables support are automatically enabled when importing their packages from package manager. However for DOTween support, after importing from the &lt;a href=&quot;https://assetstore.unity.com/packages/tools/animation/dotween-hotween-v2-27676r&quot;&gt;DOTWeen assets&lt;/a&gt; and define the scripting define symbol &lt;code&gt;UNITASK_DOTWEEN_SUPPORT&lt;/code&gt; to enable it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// sequential
await transform.DOMoveX(2, 10);
await transform.DOMoveZ(5, 20);

// parallel with cancellation
var ct = this.GetCancellationTokenOnDestroy();

await UniTask.WhenAll(
    transform.DOMoveX(10, 3).WithCancellation(ct),
    transform.DOScale(10, 3).WithCancellation(ct));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;DOTween support&#39;s default behaviour(&lt;code&gt;await&lt;/code&gt;, &lt;code&gt;WithCancellation&lt;/code&gt;, &lt;code&gt;ToUniTask&lt;/code&gt;) awaits tween is killed. It works on both Complete(true/false) and Kill(true/false). But if you want to reuse tweens (&lt;code&gt;SetAutoKill(false)&lt;/code&gt;), it does not work as expected. If you want to await for another timing, the following extension methods exist in Tween, &lt;code&gt;AwaitForComplete&lt;/code&gt;, &lt;code&gt;AwaitForPause&lt;/code&gt;, &lt;code&gt;AwaitForPlay&lt;/code&gt;, &lt;code&gt;AwaitForRewind&lt;/code&gt;, &lt;code&gt;AwaitForStepComplete&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;AsyncEnumerable and Async LINQ&lt;/h2&gt; 
&lt;p&gt;Unity 2020.2 supports C# 8.0 so you can use &lt;code&gt;await foreach&lt;/code&gt;. This is the new Update notation in the async era.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Unity 2020.2, C# 8.0
await foreach (var _ in UniTaskAsyncEnumerable.EveryUpdate().WithCancellation(token))
{
    Debug.Log(&quot;Update() &quot; + Time.frameCount);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In a C# 7.3 environment, you can use the &lt;code&gt;ForEachAsync&lt;/code&gt; method to work in almost the same way.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// C# 7.3(Unity 2018.3~)
await UniTaskAsyncEnumerable.EveryUpdate().ForEachAsync(_ =&amp;gt;
{
    Debug.Log(&quot;Update() &quot; + Time.frameCount);
}, token);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;UniTask.WhenEach&lt;/code&gt; that is similar to .NET 9&#39;s &lt;code&gt;Task.WhenEach&lt;/code&gt; can consume new way for await multiple tasks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await foreach (var result in UniTask.WhenEach(task1, task2, task3))
{
    // The result is of type WhenEachResult&amp;lt;T&amp;gt;.
    // It contains either `T Result` or `Exception Exception`.
    // You can check `IsCompletedSuccessfully` or `IsFaulted` to determine whether to access `.Result` or `.Exception`.
    // If you want to throw an exception when `IsFaulted` and retrieve the result when successful, use `GetResult()`.
    Debug.Log(result.GetResult());
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UniTaskAsyncEnumerable implements asynchronous LINQ, similar to LINQ in &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; or Rx in &lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt;. All standard LINQ query operators can be applied to asynchronous streams. For example, the following code shows how to apply a Where filter to a button-click asynchronous stream that runs once every two clicks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).ForEachAsync(_ =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Fire and Forget style(for example, event handling), you can also use &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).Subscribe(_ =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Async LINQ is enabled when &lt;code&gt;using Cysharp.Threading.Tasks.Linq;&lt;/code&gt;, and &lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is defined in &lt;code&gt;UniTask.Linq&lt;/code&gt; asmdef.&lt;/p&gt; 
&lt;p&gt;It&#39;s closer to UniRx (Reactive Extensions), but UniTaskAsyncEnumerable is a pull-based asynchronous stream, whereas Rx was a push-based asynchronous stream. Note that although similar, the characteristics are different and the details behave differently along with them.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is the entry point like &lt;code&gt;Enumerable&lt;/code&gt;. In addition to the standard query operators, there are other generators for Unity such as &lt;code&gt;EveryUpdate&lt;/code&gt;, &lt;code&gt;Timer&lt;/code&gt;, &lt;code&gt;TimerFrame&lt;/code&gt;, &lt;code&gt;Interval&lt;/code&gt;, &lt;code&gt;IntervalFrame&lt;/code&gt;, and &lt;code&gt;EveryValueChanged&lt;/code&gt;. And also added additional UniTask original query operators like &lt;code&gt;Append&lt;/code&gt;, &lt;code&gt;Prepend&lt;/code&gt;, &lt;code&gt;DistinctUntilChanged&lt;/code&gt;, &lt;code&gt;ToHashSet&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;CombineLatest&lt;/code&gt;,&lt;code&gt;Merge&lt;/code&gt; &lt;code&gt;Do&lt;/code&gt;, &lt;code&gt;Never&lt;/code&gt;, &lt;code&gt;ForEachAsync&lt;/code&gt;, &lt;code&gt;Pairwise&lt;/code&gt;, &lt;code&gt;Publish&lt;/code&gt;, &lt;code&gt;Queue&lt;/code&gt;, &lt;code&gt;Return&lt;/code&gt;, &lt;code&gt;SkipUntil&lt;/code&gt;, &lt;code&gt;TakeUntil&lt;/code&gt;, &lt;code&gt;SkipUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeLast&lt;/code&gt;, &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The method with Func as an argument has three additional overloads, &lt;code&gt;***Await&lt;/code&gt;, &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Select(Func&amp;lt;T, TR&amp;gt; selector)
SelectAwait(Func&amp;lt;T, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)
SelectAwaitWithCancellation(Func&amp;lt;T, CancellationToken, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use the &lt;code&gt;async&lt;/code&gt; method inside the func, use the &lt;code&gt;***Await&lt;/code&gt; or &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;How to create an async iterator: C# 8.0 supports async iterator(&lt;code&gt;async yield return&lt;/code&gt;) but it only allows &lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; and of course requires C# 8.0. UniTask supports &lt;code&gt;UniTaskAsyncEnumerable.Create&lt;/code&gt; method to create custom async iterator.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// IAsyncEnumerable, C# 8.0 version of async iterator. ( do not use this style, IAsyncEnumerable is not controled in UniTask).
public async IAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate([EnumeratorCancellation]CancellationToken cancelationToken = default)
{
    var frameCount = 0;
    await UniTask.Yield();
    while (!token.IsCancellationRequested)
    {
        yield return frameCount++;
        await UniTask.Yield();
    }
}

// UniTaskAsyncEnumerable.Create and use `await writer.YieldAsync` instead of `yield return`.
public IUniTaskAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate()
{
    // writer(IAsyncWriter&amp;lt;T&amp;gt;) has `YieldAsync(value)` method.
    return UniTaskAsyncEnumerable.Create&amp;lt;int&amp;gt;(async (writer, token) =&amp;gt;
    {
        var frameCount = 0;
        await UniTask.Yield();
        while (!token.IsCancellationRequested)
        {
            await writer.YieldAsync(frameCount++); // instead of `yield return`
            await UniTask.Yield();
        }
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Awaitable Events&lt;/h2&gt; 
&lt;p&gt;All uGUI component implements &lt;code&gt;***AsAsyncEnumerable&lt;/code&gt; to convert asynchronous streams of events.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;async UniTask TripleClick()
{
    // In default, used button.GetCancellationTokenOnDestroy to manage lieftime of async
    await button.OnClickAsync();
    await button.OnClickAsync();
    await button.OnClickAsync();
    Debug.Log(&quot;Three times clicked&quot;);
}

// more efficient way
async UniTask TripleClick()
{
    using (var handler = button.GetAsyncClickEventHandler())
    {
        await handler.OnClickAsync();
        await handler.OnClickAsync();
        await handler.OnClickAsync();
        Debug.Log(&quot;Three times clicked&quot;);
    }
}

// use async LINQ
async UniTask TripleClick(CancellationToken token)
{
    await button.OnClickAsAsyncEnumerable().Take(3).Last();
    Debug.Log(&quot;Three times clicked&quot;);
}

// use async LINQ2
async UniTask TripleClick(CancellationToken token)
{
    await button.OnClickAsAsyncEnumerable().Take(3).ForEachAsync(_ =&amp;gt;
    {
        Debug.Log(&quot;Every clicked&quot;);
    });
    Debug.Log(&quot;Three times clicked, complete.&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All MonoBehaviour message events can convert async-streams by &lt;code&gt;AsyncTriggers&lt;/code&gt; that can be enabled by &lt;code&gt;using Cysharp.Threading.Tasks.Triggers;&lt;/code&gt;. AsyncTrigger can be created using &lt;code&gt;GetAsync***Trigger&lt;/code&gt; and triggers itself as UniTaskAsyncEnumerable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var trigger = this.GetOnCollisionEnterAsyncHandler();
await trigger.OnCollisionEnterAsync();
await trigger.OnCollisionEnterAsync();
await trigger.OnCollisionEnterAsync();

// every moves.
await this.GetAsyncMoveTrigger().ForEachAsync(axisEventData =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;AsyncReactiveProperty&lt;/code&gt;, &lt;code&gt;AsyncReadOnlyReactiveProperty&lt;/code&gt; is UniTask&#39;s version of ReactiveProperty. &lt;code&gt;BindTo&lt;/code&gt; extension method of &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; for binding asynchronous stream values to Unity components(Text/Selectable/TMP/Text).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var rp = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);

// AsyncReactiveProperty itself is IUniTaskAsyncEnumerable, you can query by LINQ
rp.ForEachAsync(x =&amp;gt;
{
    Debug.Log(x);
}, this.GetCancellationTokenOnDestroy()).Forget();

rp.Value = 10; // push 10 to all subscriber
rp.Value = 11; // push 11 to all subscriber

// WithoutCurrent ignore initial value
// BindTo bind stream value to unity components.
rp.WithoutCurrent().BindTo(this.textComponent);

await rp.WaitAsync(); // wait until next value set

// also exists ToReadOnlyAsyncReactiveProperty
var rp2 = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);
var rorp = rp.CombineLatest(rp2, (x, y) =&amp;gt; (x, y)).ToReadOnlyAsyncReactiveProperty(CancellationToken.None);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A pull-type asynchronous stream does not get the next values until the asynchronous processing in the sequence is complete. This could spill data from push-type events such as buttons.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// can not get click event during 3 seconds complete.
await button.OnClickAsAsyncEnumerable().ForEachAwaitAsync(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is useful (prevent double-click) but not useful sometimes.&lt;/p&gt; 
&lt;p&gt;Using the &lt;code&gt;Queue()&lt;/code&gt; method will also queue events during asynchronous processing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// queued message in asynchronous processing
await button.OnClickAsAsyncEnumerable().Queue().ForEachAwaitAsync(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use &lt;code&gt;Subscribe&lt;/code&gt;, fire and forget style.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;button.OnClickAsAsyncEnumerable().Subscribe(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Channel&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Channel&lt;/code&gt; is the same as &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.channels?view=netcore-3.1&quot;&gt;System.Threading.Tasks.Channels&lt;/a&gt; which is similar to a GoLang Channel.&lt;/p&gt; 
&lt;p&gt;Currently it only supports multiple-producer, single-consumer unbounded channels. It can create by &lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For producer(&lt;code&gt;.Writer&lt;/code&gt;), use &lt;code&gt;TryWrite&lt;/code&gt; to push value and &lt;code&gt;TryComplete&lt;/code&gt; to complete channel. For consumer(&lt;code&gt;.Reader&lt;/code&gt;), use &lt;code&gt;TryRead&lt;/code&gt;, &lt;code&gt;WaitToReadAsync&lt;/code&gt;, &lt;code&gt;ReadAsync&lt;/code&gt;, &lt;code&gt;Completion&lt;/code&gt; and &lt;code&gt;ReadAllAsync&lt;/code&gt; to read queued messages.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ReadAllAsync&lt;/code&gt; returns &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; so query LINQ operators. Reader only allows single-consumer but uses &lt;code&gt;.Publish()&lt;/code&gt; query operator to enable multicast message. For example, make pub/sub utility.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class AsyncMessageBroker&amp;lt;T&amp;gt; : IDisposable
{
    Channel&amp;lt;T&amp;gt; channel;

    IConnectableUniTaskAsyncEnumerable&amp;lt;T&amp;gt; multicastSource;
    IDisposable connection;

    public AsyncMessageBroker()
    {
        channel = Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;();
        multicastSource = channel.Reader.ReadAllAsync().Publish();
        connection = multicastSource.Connect(); // Publish returns IConnectableUniTaskAsyncEnumerable.
    }

    public void Publish(T value)
    {
        channel.Writer.TryWrite(value);
    }

    public IUniTaskAsyncEnumerable&amp;lt;T&amp;gt; Subscribe()
    {
        return multicastSource;
    }

    public void Dispose()
    {
        channel.Writer.TryComplete();
        connection.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;vs Awaitable&lt;/h2&gt; 
&lt;p&gt;Unity 6 introduces the awaitable type, &lt;a href=&quot;https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Awaitable.html&quot;&gt;Awaitable&lt;/a&gt;. To put it simply, Awaitable can be considered a subset of UniTask, and in fact, Awaitable&#39;s design was influenced by UniTask. It should be able to handle PlayerLoop-based awaits, pooled Tasks, and support for cancellation with &lt;code&gt;CancellationToken&lt;/code&gt; in a similar way. With its inclusion in the standard library, you may wonder whether to continue using UniTask or migrate to Awaitable. Here&#39;s a brief guide.&lt;/p&gt; 
&lt;p&gt;First, the functionality provided by Awaitable is equivalent to what coroutines offer. Instead of &lt;code&gt;yield return&lt;/code&gt;, you use await; &lt;code&gt;await NextFrameAsync()&lt;/code&gt; replaces &lt;code&gt;yield return null&lt;/code&gt;; and there are equivalents for &lt;code&gt;WaitForSeconds&lt;/code&gt; and &lt;code&gt;EndOfFrame&lt;/code&gt;. However, that&#39;s the extent of it. Being coroutine-based in terms of functionality, it lacks Task-based features. In practical application development using async/await, operations like &lt;code&gt;WhenAll&lt;/code&gt; are essential. Additionally, UniTask enables many frame-based operations (such as &lt;code&gt;DelayFrame&lt;/code&gt;) and more flexible PlayerLoopTiming control, which are not available in Awaitable. Of course, there&#39;s no Tracker Window either.&lt;/p&gt; 
&lt;p&gt;Therefore, I recommend using UniTask for application development. UniTask is a superset of Awaitable and includes many essential features. For library development, where you want to avoid external dependencies, using Awaitable as a return type for methods would be appropriate. Awaitable can be converted to UniTask using &lt;code&gt;AsUniTask&lt;/code&gt;, so there&#39;s no issue in handling Awaitable-based functionality within the UniTask library. Of course, if you don&#39;t need to worry about dependencies, using UniTask would be the best choice even for library development.&lt;/p&gt; 
&lt;h2&gt;For Unit Testing&lt;/h2&gt; 
&lt;p&gt;Unity&#39;s &lt;code&gt;[UnityTest]&lt;/code&gt; attribute can test coroutine(IEnumerator) but can not test async. &lt;code&gt;UniTask.ToCoroutine&lt;/code&gt; bridges async/await to coroutine so you can test async methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[UnityTest]
public IEnumerator DelayIgnore() =&amp;gt; UniTask.ToCoroutine(async () =&amp;gt;
{
    var time = Time.realtimeSinceStartup;

    Time.timeScale = 0.5f;
    try
    {
        await UniTask.Delay(TimeSpan.FromSeconds(3), ignoreTimeScale: true);

        var elapsed = Time.realtimeSinceStartup - time;
        Assert.AreEqual(3, (int)Math.Round(TimeSpan.FromSeconds(elapsed).TotalSeconds, MidpointRounding.ToEven));
    }
    finally
    {
        Time.timeScale = 1.0f;
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UniTask&#39;s own unit tests are written using Unity Test Runner and &lt;a href=&quot;https://github.com/Cysharp/RuntimeUnitTestToolkit&quot;&gt;Cysharp/RuntimeUnitTestToolkit&lt;/a&gt; to integrate with CI and check if IL2CPP is working.&lt;/p&gt; 
&lt;h2&gt;ThreadPool limitation&lt;/h2&gt; 
&lt;p&gt;Most UniTask methods run on a single thread (PlayerLoop), with only &lt;code&gt;UniTask.Run&lt;/code&gt;(&lt;code&gt;Task.Run&lt;/code&gt; equivalent) and &lt;code&gt;UniTask.SwitchToThreadPool&lt;/code&gt; running on a thread pool. If you use a thread pool, it won&#39;t work with WebGL and so on.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;UniTask.Run&lt;/code&gt; is now deprecated. You can use &lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt; instead. And also consider whether you can use &lt;code&gt;UniTask.Create&lt;/code&gt; or &lt;code&gt;UniTask.Void&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;IEnumerator.ToUniTask limitation&lt;/h2&gt; 
&lt;p&gt;You can convert coroutine(IEnumerator) to UniTask(or await directly) but it has some limitations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;WaitForEndOfFrame&lt;/code&gt;/&lt;code&gt;WaitForFixedUpdate&lt;/code&gt;/&lt;code&gt;Coroutine&lt;/code&gt; is not supported.&lt;/li&gt; 
 &lt;li&gt;Consuming loop timing is not the same as &lt;code&gt;StartCoroutine&lt;/code&gt;, it uses the specified &lt;code&gt;PlayerLoopTiming&lt;/code&gt; and the default &lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is run before MonoBehaviour&#39;s &lt;code&gt;Update&lt;/code&gt; and &lt;code&gt;StartCoroutine&lt;/code&gt;&#39;s loop.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you want fully compatible conversion from coroutine to async, use the &lt;code&gt;IEnumerator.ToUniTask(MonoBehaviour coroutineRunner)&lt;/code&gt; overload. It executes StartCoroutine on an instance of the argument MonoBehaviour and waits for it to complete in UniTask.&lt;/p&gt; 
&lt;h2&gt;For UnityEditor&lt;/h2&gt; 
&lt;p&gt;UniTask can run on Unity Editor like an Editor Coroutine. However, there are some limitations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UniTask.Delay&#39;s DelayType.DeltaTime, UnscaledDeltaTime do not work correctly because they can not get deltaTime in editor. Therefore run on EditMode, automatically change DelayType to &lt;code&gt;DelayType.Realtime&lt;/code&gt; that wait for the right time.&lt;/li&gt; 
 &lt;li&gt;All PlayerLoopTiming run on the timing &lt;code&gt;EditorApplication.update&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-batchmode&lt;/code&gt; with &lt;code&gt;-quit&lt;/code&gt; does not work because Unity does not run &lt;code&gt;EditorApplication.update&lt;/code&gt; and quit after a single frame. Instead, don&#39;t use &lt;code&gt;-quit&lt;/code&gt; and quit manually with &lt;code&gt;EditorApplication.Exit(0)&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Compare with Standard Task API&lt;/h2&gt; 
&lt;p&gt;UniTask has many standard Task-like APIs. This table shows what the alternative apis are.&lt;/p&gt; 
&lt;p&gt;Use standard type.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;.NET Type&lt;/th&gt; 
   &lt;th&gt;UniTask Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IProgress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Use UniTask type.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;.NET Type&lt;/th&gt; 
   &lt;th&gt;UniTask Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task&lt;/code&gt;/&lt;code&gt;ValueTask&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;ValueTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;async void&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;async UniTaskVoid&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;+= async () =&amp;gt; { }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Void&lt;/code&gt;, &lt;code&gt;UniTask.Action&lt;/code&gt;, &lt;code&gt;UniTask.UnityAction&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;---&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;AutoResetUniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ManualResetValueTaskSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IValueTaskSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskSource&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IValueTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ValueTask.IsCompleted&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ValueTask&amp;lt;T&amp;gt;.IsCompleted&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;new Progress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Progress.Create&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken.Register(UnsafeRegister)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken.RegisterWithoutCaptureExecutionContext&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfter&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfterSlim&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Channel.CreateUnbounded&amp;lt;T&amp;gt;(false){ SingleReader = true }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncDisposable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Delay&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Delay&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Yield&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Yield&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Run&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenAll&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenAll&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenAny&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenAny&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenEach&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenEach&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.CompletedTask&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.CompletedTask&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromException&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromException&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromResult&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromResult&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromCanceled&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromCanceled&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.ContinueWith&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.ContinueWith&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Pooling Configuration&lt;/h2&gt; 
&lt;p&gt;UniTask aggressively caches async promise objects to achieve zero allocation (for technical details, see blog post &lt;a href=&quot;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&quot;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ&lt;/a&gt;). By default, it caches all promises but you can configure &lt;code&gt;TaskPool.SetMaxPoolSize&lt;/code&gt; to your value, the value indicates cache size per type. &lt;code&gt;TaskPool.GetCacheSizeInfo&lt;/code&gt; returns currently cached objects in pool.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;foreach (var (type, size) in TaskPool.GetCacheSizeInfo())
{
    Debug.Log(type + &quot;:&quot; + size);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Allocation on Profiler&lt;/h2&gt; 
&lt;p&gt;In UnityEditor the profiler shows allocation of compiler generated AsyncStateMachine but it only occurs in debug(development) build. C# Compiler generates AsyncStateMachine as class on Debug build and as struct on Release build.&lt;/p&gt; 
&lt;p&gt;Unity supports Code Optimization option starting in 2020.1 (right, footer).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/89967342-2f944600-dc8c-11ea-99fc-0b74527a16f6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;You can change C# compiler optimization to release to remove AsyncStateMachine allocation in development builds. This optimization option can also be set via &lt;code&gt;Compilation.CompilationPipeline-codeOptimization&lt;/code&gt;, and &lt;code&gt;Compilation.CodeOptimization&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;UniTaskSynchronizationContext&lt;/h2&gt; 
&lt;p&gt;Unity&#39;s default SynchronizationContext(&lt;code&gt;UnitySynchronizationContext&lt;/code&gt;) is a poor implementation for performance. UniTask bypasses &lt;code&gt;SynchronizationContext&lt;/code&gt;(and &lt;code&gt;ExecutionContext&lt;/code&gt;) so it does not use it but if exists in &lt;code&gt;async Task&lt;/code&gt;, still used it. &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is a replacement of &lt;code&gt;UnitySynchronizationContext&lt;/code&gt; which is better for performance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SyncContextInjecter
{
    [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
    public static void Inject()
    {
        SynchronizationContext.SetSynchronizationContext(new UniTaskSynchronizationContext());
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is an optional choice and is not always recommended; &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is less performant than &lt;code&gt;async UniTask&lt;/code&gt; and is not a complete UniTask replacement. It also does not guarantee full behavioral compatibility with the &lt;code&gt;UnitySynchronizationContext&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;API References&lt;/h2&gt; 
&lt;p&gt;UniTask&#39;s API References are hosted at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.html&quot;&gt;cysharp.github.io/UniTask&lt;/a&gt; by &lt;a href=&quot;https://dotnet.github.io/docfx/&quot;&gt;DocFX&lt;/a&gt; and &lt;a href=&quot;https://github.com/Cysharp/DocfxTemplate&quot;&gt;Cysharp/DocfXTemplate&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For example, UniTask&#39;s factory methods can be seen at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.UniTask.html#methods-1&quot;&gt;UniTask#methods&lt;/a&gt;. UniTaskAsyncEnumerable&#39;s factory/extension methods can be seen at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.Linq.UniTaskAsyncEnumerable.html#methods-1&quot;&gt;UniTaskAsyncEnumerable#methods&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;UPM Package&lt;/h2&gt; 
&lt;h3&gt;Install via git URL&lt;/h3&gt; 
&lt;p&gt;Requires a version of unity that supports path query parameter for git packages (Unity &amp;gt;= 2019.3.4f1, Unity &amp;gt;= 2020.1a21). You can add &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&lt;/code&gt; to Package Manager&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/79450714-3aadd100-8020-11ea-8aae-b8d87fc4d7be.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83702872-e0f17c80-a648-11ea-8183-7469dcd4f810.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;or add &lt;code&gt;&quot;com.cysharp.unitask&quot;: &quot;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&quot;&lt;/code&gt; to &lt;code&gt;Packages/manifest.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to set a target version, UniTask uses the &lt;code&gt;*.*.*&lt;/code&gt; release tag so you can specify a version like &lt;code&gt;#2.1.0&lt;/code&gt;. For example &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask#2.1.0&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;.NET Core&lt;/h2&gt; 
&lt;p&gt;For .NET Core, use NuGet.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/UniTask&quot;&gt;UniTask&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;UniTask of .NET Core version is a subset of Unity UniTask with PlayerLoop dependent methods removed.&lt;/p&gt; 
&lt;p&gt;It runs at higher performance than the standard Task/ValueTask, but you should be careful to ignore the ExecutionContext/SynchronizationContext when using it. &lt;code&gt;AsyncLocal&lt;/code&gt; also does not work because it ignores ExecutionContext.&lt;/p&gt; 
&lt;p&gt;If you use UniTask internally, but provide ValueTask as an external API, you can write it like the following(Inspired by &lt;a href=&quot;https://github.com/mgravell/PooledAwait&quot;&gt;PooledAwait&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class ZeroAllocAsyncAwaitInDotNetCore
{
    public ValueTask&amp;lt;int&amp;gt; DoAsync(int x, int y)
    {
        return Core(this, x, y);

        static async UniTask&amp;lt;int&amp;gt; Core(ZeroAllocAsyncAwaitInDotNetCore self, int x, int y)
        {
            // do anything...
            await Task.Delay(TimeSpan.FromSeconds(x + y));
            await UniTask.Yield();

            return 10;
        }
    }
}

// UniTask does not return to original SynchronizationContext but you can use helper `ReturnToCurrentSynchronizationContext`.
public ValueTask TestAsync()
{
    await using (UniTask.ReturnToCurrentSynchronizationContext())
    {
        await UniTask.SwitchToThreadPool();
        // do anything..
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;.NET Core version is intended to allow users to use UniTask as an interface when sharing code with Unity (such as &lt;a href=&quot;https://github.com/Cysharp/MagicOnion/&quot;&gt;Cysharp/MagicOnion&lt;/a&gt;). .NET Core version of UniTask enables smooth code sharing.&lt;/p&gt; 
&lt;p&gt;Utility methods such as WhenAll which are equivalent to UniTask are provided as &lt;a href=&quot;https://github.com/Cysharp/ValueTaskSupplement&quot;&gt;Cysharp/ValueTaskSupplement&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is under the MIT License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenRA/OpenRA</title>
      <link>https://github.com/OpenRA/OpenRA</link>
      <description>&lt;p&gt;Open Source real-time strategy game engine for early Westwood games such as Command &amp; Conquer: Red Alert written in C# using SDL and OpenGL. Runs on Windows, Linux, *BSD and Mac OS X.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenRA&lt;/h1&gt; 
&lt;p&gt;A Libre/Free Real Time Strategy game engine supporting early Westwood classics.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href=&quot;https://www.openra.net&quot;&gt;https://www.openra.net&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat: &lt;a href=&quot;ircs://irc.libera.chat:6697/openra&quot;&gt;#openra on Libera&lt;/a&gt; (&lt;a href=&quot;https://web.libera.chat/#openra&quot;&gt;web&lt;/a&gt;) or &lt;a href=&quot;https://discord.openra.net&quot;&gt;Discord&lt;/a&gt; &lt;img src=&quot;https://discordapp.com/api/guilds/153649279762694144/widget.png&quot; alt=&quot;Discord Badge&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Repository: &lt;a href=&quot;https://github.com/OpenRA/OpenRA&quot;&gt;https://github.com/OpenRA/OpenRA&lt;/a&gt; &lt;img src=&quot;https://github.com/OpenRA/OpenRA/workflows/Continuous%20Integration/badge.svg?sanitize=true&quot; alt=&quot;Continuous Integration&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;https://github.com/OpenRA/OpenRA/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt; in our &lt;a href=&quot;https://github.com/OpenRA/OpenRA/wiki&quot;&gt;Wiki&lt;/a&gt; and report problems at &lt;a href=&quot;https://github.com/OpenRA/OpenRA/issues&quot;&gt;https://github.com/OpenRA/OpenRA/issues&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Join the &lt;a href=&quot;https://forum.openra.net/&quot;&gt;Forum&lt;/a&gt; for discussion.&lt;/p&gt; 
&lt;h2&gt;Play&lt;/h2&gt; 
&lt;p&gt;Distributed mods include a reimagining of&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Command &amp;amp; Conquer: Red Alert&lt;/li&gt; 
 &lt;li&gt;Command &amp;amp; Conquer: Tiberian Dawn&lt;/li&gt; 
 &lt;li&gt;Dune 2000&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;EA has not endorsed and does not support this product.&lt;/p&gt; 
&lt;p&gt;Check our &lt;a href=&quot;https://github.com/OpenRA/OpenRA/wiki/Playing-the-game&quot;&gt;Playing the Game&lt;/a&gt; Guide to win multiplayer matches.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Please read &lt;a href=&quot;https://github.com/OpenRA/OpenRA/raw/bleed/INSTALL.md&quot;&gt;INSTALL.md&lt;/a&gt; and &lt;a href=&quot;https://github.com/OpenRA/OpenRA/wiki/Compiling&quot;&gt;Compiling&lt;/a&gt; on how to set up an OpenRA development environment.&lt;/li&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://github.com/OpenRA/OpenRA/wiki/Hacking&quot;&gt;Hacking&lt;/a&gt; for a (now very outdated) overview of the engine.&lt;/li&gt; 
 &lt;li&gt;Read and follow our &lt;a href=&quot;https://github.com/OpenRA/OpenRA/raw/bleed/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;To get your patches merged, please adhere to the &lt;a href=&quot;https://github.com/OpenRA/OpenRA/raw/bleed/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; guidelines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Mapping&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;We offer a &lt;a href=&quot;https://github.com/OpenRA/OpenRA/wiki/Mapping&quot;&gt;Mapping&lt;/a&gt; Tutorial as you can change gameplay drastically with custom rules.&lt;/li&gt; 
 &lt;li&gt;For scripted mission have a look at the &lt;a href=&quot;https://docs.openra.net/en/latest/release/lua/&quot;&gt;Lua API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you want to share your maps with the community, upload them at the &lt;a href=&quot;https://resource.openra.net&quot;&gt;OpenRA Resource Center&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Modding&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download a copy of the &lt;a href=&quot;https://github.com/OpenRA/OpenRAModSDK&quot;&gt;OpenRA Mod SDK&lt;/a&gt; to start your own mod.&lt;/li&gt; 
 &lt;li&gt;Check the &lt;a href=&quot;https://github.com/OpenRA/OpenRA/wiki/Modding-Guide&quot;&gt;Modding Guide&lt;/a&gt; to create your own classic RTS.&lt;/li&gt; 
 &lt;li&gt;There exists an auto-generated &lt;a href=&quot;https://docs.openra.net/en/latest/release/traits/&quot;&gt;Trait documentation&lt;/a&gt; to get started with yaml files.&lt;/li&gt; 
 &lt;li&gt;Some hints on how to create new OpenRA compatible &lt;a href=&quot;https://github.com/OpenRA/OpenRA/wiki/Pixelart&quot;&gt;Pixelart&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Upload total conversions at &lt;a href=&quot;https://www.moddb.com/games/openra/mods&quot;&gt;our Mod DB profile&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Sponsor a &lt;a href=&quot;https://github.com/OpenRA/OpenRAWebsiteV3/tree/master/packages&quot;&gt;mirror server&lt;/a&gt; if you have some bandwidth to spare.&lt;/li&gt; 
 &lt;li&gt;You can immediately set up a &lt;a href=&quot;https://github.com/OpenRA/OpenRA/wiki/Dedicated-Server&quot;&gt;Dedicated&lt;/a&gt; Game Server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) OpenRA Developers and Contributors This file is part of OpenRA, which is free software. It is made available to you under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. For more information, see &lt;a href=&quot;https://github.com/OpenRA/OpenRA/raw/bleed/COPYING&quot;&gt;COPYING&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>d2phap/ImageGlass</title>
      <link>https://github.com/d2phap/ImageGlass</link>
      <description>&lt;p&gt;🏞 A lightweight, versatile image viewer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ImageGlass - A lightweight, versatile image viewer&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://imageglass.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/www-imageglass.org-0099BC.svg?maxAge=3600&amp;amp;color=%233097B8&quot; alt=&quot;Website&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/d2phap/ImageGlass/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-GPLv3-green.svg?maxAge=3600&quot; alt=&quot;GPL Licence&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://crowdin.com/project/imageglass&quot;&gt;&lt;img src=&quot;https://d322cqt584bo4o.cloudfront.net/imageglass/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/tWjbynH2X8&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/818852544859209748?label=chat&amp;amp;logo=discord&amp;amp;color=%233097B8&amp;amp;style=social&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/duongdieuphap&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/duongdieuphap?style=social&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ImageGlass is a lightweight software designed for seamless viewing of images in a clean and intuitive interface. With support for over 80 common image formats including &lt;code&gt;WEBP&lt;/code&gt;, &lt;code&gt;GIF&lt;/code&gt;, &lt;code&gt;SVG&lt;/code&gt;, &lt;code&gt;PNG&lt;/code&gt;, &lt;code&gt;JXL&lt;/code&gt;, &lt;code&gt;HEIC&lt;/code&gt;,... ImageGlass also offers advanced features that cater to the needs of both regular users and designers, making it the excellent tool to enhance workflow efficiency.&lt;/p&gt; 
&lt;a href=&quot;https://www.imageglass.org/download&quot; target=&quot;_blank&quot; title=&quot;View screen shots&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/ImageGlass/releases/main/screenshots/v9.0/9.0_b1.webp&quot; alt=&quot;ImageGlass 9&quot; width=&quot;640&quot;&gt; &lt;/a&gt;
&lt;br&gt; 
&lt;h2&gt;📥 Download&lt;/h2&gt; 
&lt;a href=&quot;https://apps.microsoft.com/detail/9N33VZK3C7TH?launch=true&amp;amp;cid=GitHubRelease&amp;amp;mode=full&quot;&gt; &lt;img height=&quot;58&quot; src=&quot;https://github.com/d2phap/ImageGlass/assets/3154213/08a071bb-a6ae-420c-b53b-2317004570d4&quot;&gt; &lt;/a&gt; 
&lt;br&gt; 
&lt;a href=&quot;https://imageglass.org/download&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/d2phap/imageglass/total?color=%232A7C91&amp;amp;label=total%20downloads&amp;amp;style=for-the-badge&quot;&gt;&lt;/a&gt; 
&lt;a href=&quot;https://imageglass.org/download&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/d2phap/imageglass/latest/total?color=%232A7C91&amp;amp;label=latest%20version&amp;amp;style=for-the-badge&quot;&gt;&lt;/a&gt; 
&lt;h3&gt;ImageGlass on Microsoft Store!&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you want to support the development of ImageGlass, you can purchase ImageGlass from Microsoft Store.&lt;/li&gt; 
 &lt;li&gt;Alternatively, you can use the one-time donation from &lt;a href=&quot;https://github.com/sponsors/d2phap&quot;&gt;♥ GitHub Sponsor&lt;/a&gt;, then drop me a message in &lt;a href=&quot;https://discord.com/channels/818852544859209748/818852544859209751&quot;&gt;ImageGlass Discord&lt;/a&gt; or &lt;a href=&quot;https://imageglass.org/about&quot;&gt;email&lt;/a&gt;, and I will send the code shortly.&lt;/li&gt; 
 &lt;li&gt;ImageGlass Store provides the convenience of fast, easy installation onto all of your Windows devices along with fully automatic, behind-the-scenes updates with all the newest features, improvements, and fixes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Difference Between ImageGlass Classic and Store Release&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;ImageGlass Classic&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://apps.microsoft.com/detail/9N33VZK3C7TH?launch=true&amp;amp;cid=GitHubRelease&amp;amp;mode=full&quot;&gt;ImageGlass Store&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://imageglass.org/docs/features&quot;&gt;All features&lt;/a&gt;, &lt;br&gt;including Explorer sort order&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://imageglass.org/docs/app-configs&quot;&gt;Advanced configs&lt;br&gt;for Power users&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Distribution&lt;/td&gt; 
   &lt;td&gt;🌐&lt;a href=&quot;https://imageglass.org&quot;&gt;ImageGlass.org&lt;/a&gt; and various sources&lt;/td&gt; 
   &lt;td&gt;🛍️&lt;a href=&quot;https://apps.microsoft.com/detail/9N33VZK3C7TH?launch=true&amp;amp;cid=GitHubRelease&amp;amp;mode=full&quot;&gt;Microsoft Store&lt;/a&gt; only&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Price&lt;/td&gt; 
   &lt;td&gt;🆓 Free&lt;/td&gt; 
   &lt;td&gt;🪙Fee, with a 7-day trial&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Commercial use&lt;/td&gt; 
   &lt;td&gt;✅ Recommended to &lt;a href=&quot;https://imageglass.org/license&quot;&gt;register&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Auto-update&lt;/td&gt; 
   &lt;td&gt;❌ User-managed&lt;/td&gt; 
   &lt;td&gt;✅ Seamless auto-updates&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hotfix update&lt;/td&gt; 
   &lt;td&gt;❌ Available in official releases only&lt;/td&gt; 
   &lt;td&gt;✅ Available as soon as they are fixed&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🪁 System Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 10/11 64-bit, version 1809 (build 17763) or later&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&quot;&gt;.NET Desktop Runtime 8 (64-bit)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/webview2/#download-section&quot;&gt;WebView2 Runtime 64-bit v119.0.2151 or later&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;👨‍💻 Development&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 11&lt;/li&gt; 
 &lt;li&gt;Visual Studio 2022&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;develop&lt;/code&gt; branch contains the latest commits while the &lt;code&gt;prod&lt;/code&gt; branch is for the final stable release.&lt;/p&gt; 
&lt;h2&gt;🗝️ License&lt;/h2&gt; 
&lt;p&gt;ImageGlass is free for both personal and commercial use, except the Store version. If you intend to use ImageGlass at your place of business or for commercial purposes, it&#39;s recommended but not enforced to register at &lt;a href=&quot;https://imageglass.org/license&quot;&gt;https://imageglass.org/license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📚 Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imageglass.org/docs/features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imageglass.org/docs/supported-formats&quot;&gt;Supported formats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imageglass.org/docs/ui-shortcuts-reference&quot;&gt;Shortcuts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imageglass.org/docs/app-configs&quot;&gt;App configs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imageglass.org/docs/command-line-utilities&quot;&gt;Command lines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imageglass.org/license&quot;&gt;EULA&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about ImageGlass, go to &lt;a href=&quot;https://imageglass.org/docs&quot;&gt;ImageGlass Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🤼 Community and Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d2phap/ImageGlass/issues&quot;&gt;GitHub issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.io/imageglass&quot;&gt;ImageGlass Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/imageglass&quot;&gt;Google forum&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💖 This project needs your help!&lt;/h2&gt; 
&lt;p&gt;ImageGlass stands as an open-source, ad-free photo viewer, yet its development and upkeep demand resources. Your financial backing not only sustains this project but also fuels my motivation for crafting future releases.&lt;/p&gt; 
&lt;p&gt;Should you opt for &lt;strong&gt;GitHub Sponsor&lt;/strong&gt; or &lt;strong&gt;Patreon&lt;/strong&gt;, be sure to explore the tier-specific benefits on offer.&lt;/p&gt; 
&lt;p&gt;Your support is greatly appreciated!&lt;/p&gt; 
&lt;a href=&quot;https://github.com/sponsors/d2phap&quot; target=&quot;_blank&quot; title=&quot;Become a sponsor&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Github-@d2phap-24292e.svg?maxAge=3600&amp;amp;logo=github&quot; height=&quot;30&quot; alt=&quot;Become a sponsor&quot;&gt; &lt;/a&gt; 
&lt;a href=&quot;https://www.patreon.com/d2phap&quot; target=&quot;_blank&quot; title=&quot;Become a patron&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Patreon-@d2phap%20-e85b46.svg?maxAge=3600&amp;amp;logo=patreon&quot; height=&quot;30&quot; alt=&quot;Become a patron&quot;&gt; &lt;/a&gt; 
&lt;a href=&quot;https://www.paypal.me/d2phap&quot; target=&quot;_blank&quot; title=&quot;Buy me a beer?&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/PayPal-Donate%20$10%20-0070ba.svg?maxAge=3600&amp;amp;logo=paypal&quot; height=&quot;30&quot; alt=&quot;Buy me a beer?&quot;&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>dotnet/efcore</title>
      <link>https://github.com/dotnet/efcore</link>
      <description>&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Repository&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build?definitionId=17&quot;&gt;&lt;img src=&quot;https://img.shields.io/azure-devops/build/dnceng-public/public/17/main&quot; alt=&quot;build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build?definitionId=17&quot;&gt;&lt;img src=&quot;https://img.shields.io/azure-devops/tests/dnceng-public/public/17/main&quot; alt=&quot;test results&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository is home to the following &lt;a href=&quot;https://dotnetfoundation.org/&quot;&gt;.NET Foundation&lt;/a&gt; projects. These projects are maintained by &lt;a href=&quot;https://github.com/microsoft&quot;&gt;Microsoft&lt;/a&gt; and licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/LICENSE.txt&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/#entity-framework-core&quot;&gt;Entity Framework Core&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/#microsoftdatasqlite&quot;&gt;Microsoft.Data.Sqlite&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img alt=&quot;EF&quot; src=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/logo/ef-logo.png&quot; width=&quot;32&quot;&gt; Entity Framework Core&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Microsoft.EntityFrameworkCore&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.EntityFrameworkCore&quot; alt=&quot;preview version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/Microsoft.EntityFrameworkCore&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations. EF Core works with SQL Server, Azure SQL Database, SQLite, Azure Cosmos DB, MariaDB, MySQL, PostgreSQL, and other databases through a provider plugin API.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;EF Core is available on &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&quot;&gt;NuGet&lt;/a&gt;. Install the provider package corresponding to your target database. See the &lt;a href=&quot;https://docs.microsoft.com/ef/core/providers/&quot;&gt;list of providers&lt;/a&gt; in the docs for additional databases.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet add package Microsoft.EntityFrameworkCore.Sqlite
dotnet add package Microsoft.EntityFrameworkCore.Cosmos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest&quot;&gt;preview version&lt;/a&gt; to install.&lt;/p&gt; 
&lt;h3&gt;Daily builds&lt;/h3&gt; 
&lt;p&gt;We recommend using the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/DailyBuilds.md&quot;&gt;daily builds&lt;/a&gt; to get the latest code and provide feedback on EF Core. These builds contain latest features and bug fixes; previews and official releases lag significantly behind.&lt;/p&gt; 
&lt;h3&gt;Basic usage&lt;/h3&gt; 
&lt;p&gt;The following code demonstrates basic usage of EF Core. For a full tutorial configuring the &lt;code&gt;DbContext&lt;/code&gt;, defining the model, and creating the database, see &lt;a href=&quot;https://docs.microsoft.com/ef/core/get-started/&quot;&gt;getting started&lt;/a&gt; in the docs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cs&quot;&gt;using var db = new BloggingContext();

// Inserting data into the database
db.Add(new Blog { Url = &quot;http://blogs.msdn.com/adonet&quot; });
db.SaveChanges();

// Querying
var blog = db.Blogs
    .OrderBy(b =&amp;gt; b.BlogId)
    .First();

// Updating
blog.Url = &quot;https://devblogs.microsoft.com/dotnet&quot;;
blog.Posts.Add(
    new Post
    {
        Title = &quot;Hello World&quot;,
        Content = &quot;I wrote an app using EF Core!&quot;
    });
db.SaveChanges();

// Deleting
db.Remove(blog);
db.SaveChanges();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;p&gt;Most people use EF Core by installing pre-build NuGet packages, as shown above. Alternately, &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/getting-and-building-the-code.md&quot;&gt;the code can be built and packages can be created directly on your development machine&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;We welcome community pull requests for bug fixes, enhancements, and documentation. See &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CONTRIBUTING.md&quot;&gt;How to contribute&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Getting support&lt;/h3&gt; 
&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href=&quot;https://stackoverflow.com/questions/tagged/entity-framework-core*?tab=Votes&quot;&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href=&quot;https://github.com/dotnet/efcore/issues/new/choose&quot;&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/SUPPORT.md&quot;&gt;getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Microsoft.Data.Sqlite&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Microsoft.Data.Sqlite&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.Data.Sqlite&quot; alt=&quot;preview version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/Microsoft.Data.Sqlite.Core&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Microsoft.Data.Sqlite is a lightweight ADO.NET provider for SQLite. The EF Core provider for SQLite is built on top of this library. However, it can also be used independently or with other data access libraries.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;The latest stable version is available on &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite&quot;&gt;NuGet&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;dotnet add package Microsoft.Data.Sqlite
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest&quot;&gt;preview version&lt;/a&gt; to install.&lt;/p&gt; 
&lt;h3&gt;Daily builds&lt;/h3&gt; 
&lt;p&gt;We recommend using the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/DailyBuilds.md&quot;&gt;daily builds&lt;/a&gt; to get the latest code and provide feedback on Microsoft.Data.Sqlite. These builds contain latest features and bug fixes; previews and official releases lag significantly behind.&lt;/p&gt; 
&lt;h3&gt;Basic usage&lt;/h3&gt; 
&lt;p&gt;This library implements the common &lt;a href=&quot;https://docs.microsoft.com/dotnet/framework/data/adonet/&quot;&gt;ADO.NET&lt;/a&gt; abstractions for connections, commands, data readers, and so on. For more information, see &lt;a href=&quot;https://docs.microsoft.com/dotnet/standard/data/sqlite/&quot;&gt;Microsoft.Data.Sqlite&lt;/a&gt; on Microsoft Docs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cs&quot;&gt;using var connection = new SqliteConnection(&quot;Data Source=Blogs.db&quot;);
connection.Open();

using var command = connection.CreateCommand();
command.CommandText = &quot;SELECT Url FROM Blogs&quot;;

using var reader = command.ExecuteReader();
while (reader.Read())
{
    var url = reader.GetString(0);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;p&gt;Most people use Microsoft.Data.Sqlite by installing pre-build NuGet packages, as shown above. Alternately, &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/getting-and-building-the-code.md&quot;&gt;the code can be built and packages can be created directly on your development machine&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;We welcome community pull requests for bug fixes, enhancements, and documentation. See &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CONTRIBUTING.md&quot;&gt;How to contribute&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Getting support&lt;/h3&gt; 
&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href=&quot;https://stackoverflow.com/questions/tagged/microsoft.data.sqlite&quot;&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href=&quot;https://github.com/dotnet/efcore/issues/new/choose&quot;&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/SUPPORT.md&quot;&gt;getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;See also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ef/core/&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ef/core/what-is-new/roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/efcore/issues/23884&quot;&gt;Weekly status updates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ef/core/what-is-new/release-planning&quot;&gt;Release planning process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ef/core/providers/writing-a-provider&quot;&gt;How to write an EF Core provider&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/security.md&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CODE_OF_CONDUCT.md&quot;&gt;Code of conduct&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Azure/azure-sdk-for-net</title>
      <link>https://github.com/Azure/azure-sdk-for-net</link>
      <description>&lt;p&gt;This repository is for active development of the Azure SDK for .NET. For consumers of the SDK we recommend visiting our public developer docs at https://learn.microsoft.com/dotnet/azure/ or our versioned developer docs at https://azure.github.io/azure-sdk-for-net.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure SDK for .NET&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://azure.github.io/azure-sdk/releases/latest/dotnet.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/packages-latest-blue.svg?sanitize=true&quot; alt=&quot;Packages&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-net/dependencies/dependencies.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dependency-report-blue.svg?sanitize=true&quot; alt=&quot;Dependencies&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-net/dependencies/dependencyGraph/dagre.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dependency-graph-blue.svg?sanitize=true&quot; alt=&quot;Dependencies Graph&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository is for active development of the Azure SDK for .NET. For consumers of the SDK we recommend visiting our &lt;a href=&quot;https://docs.microsoft.com/dotnet/azure/&quot;&gt;public developer docs&lt;/a&gt; or our versioned &lt;a href=&quot;https://azure.github.io/azure-sdk-for-net&quot;&gt;developer docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;To get started with a library, see the README.md file located in the library&#39;s project folder. You can find these library folders grouped by service in the /sdk directory.&lt;/p&gt; 
&lt;p&gt;For tutorials, samples, quick starts, and other documentation, go to &lt;a href=&quot;https://docs.microsoft.com/dotnet/azure/&quot;&gt;Azure for .NET Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Packages available&lt;/h2&gt; 
&lt;p&gt;Each service might have a number of libraries available from each of the following categories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#client-new-releases&quot;&gt;Client - New Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#client-previous-versions&quot;&gt;Client - Previous Versions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#management-new-releases&quot;&gt;Management - New Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#management-previous-versions&quot;&gt;Management - Previous Versions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Client: New Releases&lt;/h3&gt; 
&lt;p&gt;New wave of packages that we are announcing as &lt;strong&gt;GA&lt;/strong&gt; and several that are currently releasing in &lt;strong&gt;preview&lt;/strong&gt;. These libraries follow the &lt;a href=&quot;https://azure.github.io/azure-sdk/dotnet/guidelines/&quot;&gt;Azure SDK Design Guidelines for .NET&lt;/a&gt; and share a number of core features such as HTTP retries, logging, transport protocols, authentication protocols, etc., so that once you learn how to use these features in one client library, you will know how to use them in other client libraries. You can learn about these shared features at &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/raw/main/sdk/core/Azure.Core/README.md&quot;&gt;Azure.Core&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;These new client libraries can be identified by the naming used for their folder, package, and namespace. Each will start with &lt;code&gt;Azure&lt;/code&gt;, followed by the service category, and then the name of the service. For example &lt;code&gt;Azure.Storage.Blobs&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For a complete list of available packages, please see the &lt;a href=&quot;https://azure.github.io/azure-sdk/releases/latest/dotnet.html&quot;&gt;latest available packages&lt;/a&gt; page.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: If you need to ensure your code is ready for production we strongly recommend using one of the stable, non-preview libraries.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Client: Previous Versions&lt;/h3&gt; 
&lt;p&gt;Last stable versions of packages that are production-ready. These libraries provide similar functionalities to the preview packages, as they allow you to use and consume existing resources and interact with them, for example: upload a storage blob. Stable library directories typically contain &#39;Microsoft.Azure&#39; in their names, e.g. &#39;Microsoft.Azure.KeyVault&#39;. They might not implement the &lt;a href=&quot;https://azure.github.io/azure-sdk/dotnet_introduction.html&quot;&gt;guidelines&lt;/a&gt; or have the same feature set as the November releases. They do however offer wider coverage of services.&lt;/p&gt; 
&lt;h3&gt;Management: New Releases&lt;/h3&gt; 
&lt;p&gt;A new set of management libraries that follow the &lt;a href=&quot;https://azure.github.io/azure-sdk/dotnet_introduction.html&quot;&gt;Azure SDK Design Guidelines for .NET&lt;/a&gt; and based on &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/core/Azure.Core&quot;&gt;Azure.Core libraries&lt;/a&gt; are now in Public Preview. These new libraries provide a number of core capabilities that are shared amongst all Azure SDKs, including the intuitive Azure Identity library, an HTTP Pipeline with custom policies, error-handling, distributed tracing, and much more. You can find the list of new packages &lt;a href=&quot;https://azure.github.io/azure-sdk/releases/latest/dotnet.html&quot;&gt;on this page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To get started with these new libraries, please see the &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/raw/main/doc/mgmt_preview_quickstart.md&quot;&gt;quickstart guide here&lt;/a&gt;. These new libraries can be identified by namespaces that start with &lt;code&gt;Azure.ResourceManager&lt;/code&gt;, e.g. &lt;code&gt;Azure.ResourceManager.Network&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: If you need to ensure your code is ready for production use one of the stable, non-preview libraries.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Management: Previous Versions&lt;/h3&gt; 
&lt;p&gt;For a complete list of management libraries which enable you to provision and manage Azure resources, please check &lt;a href=&quot;https://azure.github.io/azure-sdk/releases/latest/all/dotnet.html&quot;&gt;here&lt;/a&gt;. They might not have the same feature set as the new releases but they do offer wider coverage of services. Previous versions of management libraries can be identified by namespaces that start with &lt;code&gt;Microsoft.Azure.Management&lt;/code&gt;, e.g. &lt;code&gt;Microsoft.Azure.Management.Network&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Documentation and code samples for these libraries can be found &lt;a href=&quot;https://azure.github.io/azure-sdk-for-net&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Need help?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;For reference documentation visit the &lt;a href=&quot;https://aka.ms/net-docs&quot;&gt;Azure SDK for .NET API Reference&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For tutorials, samples, quick starts, and other documentation, go to &lt;a href=&quot;https://docs.microsoft.com/dotnet/azure/&quot;&gt;Azure for .NET Developers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;File an issue via &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/issues/new/choose&quot;&gt;Github Issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Check &lt;a href=&quot;https://stackoverflow.com/questions/tagged/azure+.net&quot;&gt;previous questions&lt;/a&gt; or ask new ones on StackOverflow using &lt;code&gt;azure&lt;/code&gt; and &lt;code&gt;.net&lt;/code&gt; tags.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat with other community members &lt;a href=&quot;https://gitter.im/azure/azure-sdk-for-net?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/azure/azure-sdk-for-net&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Reporting security issues and security bugs&lt;/h3&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&quot;https://www.microsoft.com/msrc/faqs-report-an-issue&quot;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;We want your thoughts!&lt;/h2&gt; 
&lt;h3&gt;Feature Requests&lt;/h3&gt; 
&lt;p&gt;What features are important to you? You can let us know by looking at our open &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/issues?q=is%3Aopen+label%3Afeature-request+sort%3Areactions-%2B1-desc&quot;&gt;feature requests&lt;/a&gt; and sharing your thoughts by giving the issue a thumbs up or thumbs down. (Note the list is sorted by number of thumbs up in descending order.)&lt;/p&gt; 
&lt;h3&gt;Design Discussions&lt;/h3&gt; 
&lt;p&gt;We would love to incorporate the community&#39;s input into our library design process. Here&#39;s a list of &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/labels/design-discussion&quot;&gt;design discussions&lt;/a&gt; that we&#39;re currently having. Participate in the discussions by leaving your comments in the issue!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;For details on contributing to this repository, see the &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/raw/main/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.microsoft.com&quot;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>beeradmoore/dlss-swapper</title>
      <link>https://github.com/beeradmoore/dlss-swapper</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;150px&quot; src=&quot;https://raw.githubusercontent.com/beeradmoore/dlss-swapper/main/docs/logo_250.png&quot; align=&quot;center&quot; alt=&quot;GitHub Readme Stats&quot;&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;DLSS Swapper &lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt;DLSS Swapper is a tool that allows you to conveniently download, manage, and swap &lt;strong&gt;DLSS&lt;/strong&gt;, &lt;strong&gt;FSR&lt;/strong&gt; and &lt;strong&gt;XeSS&lt;/strong&gt; dlls allowing you to upgrade or downgrade DLSS, FSR and XeSS version in a game without the game needing an update.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/beeradmoore/dlss-swapper/releases&quot;&gt;&lt;img alt=&quot;Github Release&quot; src=&quot;https://img.shields.io/github/v/release/beeradmoore/dlss-swapper&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/beeradmoore/dlss-swapper/graphs/contributors&quot;&gt;&lt;img alt=&quot;GitHub Contributors&quot; src=&quot;https://img.shields.io/github/contributors/beeradmoore/dlss-swapper&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/beeradmoore/dlss-swapper/issues&quot;&gt;&lt;img alt=&quot;Github Issues&quot; src=&quot;https://img.shields.io/github/issues/beeradmoore/dlss-swapper?color=0088ff&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/beeradmoore/dlss-swapper/pulls&quot;&gt;&lt;img alt=&quot;GitHub Pull Requests&quot; src=&quot;https://img.shields.io/github/issues-pr/beeradmoore/dlss-swapper?color=0088ff&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/beeradmoore/dlss-swapper/releases&quot;&gt;Releases&lt;/a&gt; · &lt;a href=&quot;https://github.com/beeradmoore/dlss-swapper/issues/new?template=bug_report.yml&quot;&gt;Report Bug&lt;/a&gt; · &lt;a href=&quot;https://github.com/beeradmoore/dlss-swapper/issues/new?template=feature_request.yml&quot;&gt;Request Feature&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; English · &lt;a href=&quot;https://raw.githubusercontent.com/beeradmoore/dlss-swapper/main/docs/readmes/readme_pt-BR.md&quot;&gt;Português BR&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/beeradmoore/dlss-swapper/main/docs/readmes/readme_es.md&quot;&gt;Español&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/beeradmoore/dlss-swapper/main/docs/readmes/readme_ja-JP.md&quot;&gt;日本語&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/beeradmoore/dlss-swapper/main/docs/readmes/readme_zh-TW.md&quot;&gt;繁體中文&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/beeradmoore/dlss-swapper/main/docs/images/usage/usage_4.gif&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;What game libraries are supported?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://store.steampowered.com/&quot;&gt;Steam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gog.com/en/&quot;&gt;GOG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://store.epicgames.com/&quot;&gt;Epic Games&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ubisoft.com/&quot;&gt;Ubisoft Connect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xbox.com/&quot;&gt;Xbox App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Manually added via the &lt;code&gt;Add Game&lt;/code&gt; button.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why would you want to change the DLSS dlls in your game?&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://youtube.com/clip/UgzYyeox3s7jFJZAvYF4AaABCQ&quot;&gt;this&lt;/a&gt; clip, or better yet just watch the entire video (&lt;a href=&quot;https://www.youtube.com/watch?v=dtbqJXb1UDw&quot;&gt;Lego Builder&#39;s Journey Ray Tracing Showcase + DLSS 2.2 Upgrades Analysis&lt;/a&gt;) from Digital Foundry. DLSS 2.2 discussions start at 11:40.&lt;/p&gt; 
&lt;h2&gt;Please note&lt;/h2&gt; 
&lt;p&gt;This tool does &lt;strong&gt;NOT&lt;/strong&gt; allow you to add DLSS to games that don&#39;t support it.&lt;/p&gt; 
&lt;p&gt;This tool does &lt;strong&gt;NOT&lt;/strong&gt; guarantee that swapping DLSS dlls will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Improve DLSS performance.&lt;/li&gt; 
 &lt;li&gt;Reduce DLSS artifacts.&lt;/li&gt; 
 &lt;li&gt;Give a crash free experience.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In many cases you may fix some issues, in other cases you may prevent a game from launching (until you restore your original dll, provided in the tool).&lt;/p&gt; 
&lt;p&gt;Happy experimenting. As my university professor once said,&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The good thing about computer [science] is we will never die wondering &#39;What if...?&#39;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Please, come and share your DLSS experience over in &lt;a href=&quot;https://www.reddit.com/r/DLSS_Swapper/&quot;&gt;r/DLSS_Swapper&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How do I get it?&lt;/h2&gt; 
&lt;p&gt;You can get the latest builds from our &lt;a href=&quot;https://github.com/beeradmoore/dlss-swapper/releases&quot;&gt;GitHub releases&lt;/a&gt; page.&lt;/p&gt; 
&lt;h2&gt;It would be cool if DLSS Swapper could...&lt;/h2&gt; 
&lt;p&gt;Create a &lt;a href=&quot;https://github.com/beeradmoore/dlss-swapper/issues/new?template=feature_request.yml&quot;&gt;feature request&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How can I contribute?&lt;/h2&gt; 
&lt;p&gt;More info on this soon.&lt;/p&gt; 
&lt;h2&gt;Minimum System Requirements&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Requirement&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OS&lt;/td&gt; 
   &lt;td&gt;Windows 10 64-bit (20H1, build 19041)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GPU&lt;/td&gt; 
   &lt;td&gt;Any&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>rmcrackan/Libation</title>
      <link>https://github.com/rmcrackan/Libation</link>
      <description>&lt;p&gt;Libation: Liberate your Library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Libation: Liberate your Library&lt;/h1&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/rmcrackan/Libation/releases/latest&quot;&gt;Download Libation&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;If you found this useful, tell a friend. If you found this REALLY useful, you can click here to &lt;a href=&quot;https://paypal.me/mcrackan?locale.x=en_us&quot;&gt;PayPal.me&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;...or just tell more friends. As long as I&#39;m maintaining this software, it will remain &lt;strong&gt;free&lt;/strong&gt; and &lt;strong&gt;open source&lt;/strong&gt;.&lt;/p&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/#audible-audiobook-manager&quot;&gt;Audible audiobook manager&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/#the-good&quot;&gt;The good&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/#the-bad&quot;&gt;The bad&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/#the-ugly&quot;&gt;The ugly&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/GettingStarted.md&quot;&gt;Getting started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/GettingStarted.md#download-libation-1&quot;&gt;Download Libation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/GettingStarted.md#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/GettingStarted.md#create-accounts&quot;&gt;Create Accounts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/GettingStarted.md#import-your-library&quot;&gt;Import your library&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/GettingStarted.md#download-your-books----drm-free&quot;&gt;Download your books -- DRM-free!&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/GettingStarted.md#download-pdf-attachments&quot;&gt;Download PDF attachments&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/GettingStarted.md#details-of-downloaded-files&quot;&gt;Details of downloaded files&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/GettingStarted.md#export-your-library&quot;&gt;Export your library&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/SearchingAndFiltering.md&quot;&gt;Searching and filtering&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/SearchingAndFiltering.md#tags&quot;&gt;Tags&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/SearchingAndFiltering.md#searches&quot;&gt;Searches&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/SearchingAndFiltering.md#search-examples&quot;&gt;Search examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/SearchingAndFiltering.md#filters&quot;&gt;Filters&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/Advanced.md&quot;&gt;Advanced&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/Advanced.md#files-and-folders&quot;&gt;Files and folders&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/Advanced.md#settings&quot;&gt;Settings&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/NamingTemplates.md&quot;&gt;Custom File Naming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/Advanced.md#command-line-interface&quot;&gt;Command Line Interface&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/Docker.md&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/FrequentlyAskedQuestions.md&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rmcrackan/Libation/releases/latest&quot;&gt;Download&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rmcrackan/Libation/master/Documentation/GettingStarted.md&quot;&gt;Step-by-step walk-through&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Audible audiobook manager&lt;/h2&gt; 
&lt;h3&gt;The good&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Import library from audible, including cover art&lt;/li&gt; 
 &lt;li&gt;Download and remove DRM from all books&lt;/li&gt; 
 &lt;li&gt;Download accompanying PDFs&lt;/li&gt; 
 &lt;li&gt;Add tags to books for better organization&lt;/li&gt; 
 &lt;li&gt;Powerful advanced search built on the Lucene search engine&lt;/li&gt; 
 &lt;li&gt;Customizable saved filters for common searches&lt;/li&gt; 
 &lt;li&gt;Open source&lt;/li&gt; 
 &lt;li&gt;Supports most regions: US, UK, Canada, Germany, France, Australia, Japan, India, and Spain&lt;/li&gt; 
 &lt;li&gt;Fully supported in Windows, Mac, and Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;a name=&quot;theBad&quot;&gt;&lt;/a&gt; 
&lt;h3&gt;The bad&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Large file size&lt;/li&gt; 
 &lt;li&gt;Made by a programmer, not a designer so the goals are function rather than beauty. And it shows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;The ugly&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation? Yer lookin&#39; at it&lt;/li&gt; 
 &lt;li&gt;This is a single-developer personal passion project. Support, response, updates, enhancements, bug fixes etc are as my free time allows&lt;/li&gt; 
 &lt;li&gt;I have a full-time job, a life, and a finite attention span. Therefore a lot of time can potentially go by with no improvements of any kind&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Disclaimer: I&#39;ve made every good-faith effort to include nothing insecure, malicious, anti-privacy, or destructive. That said: use at your own risk.&lt;/p&gt; 
&lt;p&gt;I made this for myself and I want to share it with the great programming and audible/audiobook communities which have been so generous with their time and help.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/runtime</title>
      <link>https://github.com/dotnet/runtime</link>
      <description>&lt;p&gt;.NET is a cross-platform runtime for cloud, mobile, desktop, and IoT apps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Runtime&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=129&amp;amp;branchName=main&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/runtime/runtime?branchName=main&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/runtime/labels/help%20wanted&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/runtime/help%20wanted?style=flat-square&amp;amp;color=%232EA043&amp;amp;label=help%20wanted&quot; alt=&quot;Help Wanted&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/runtime/labels/good%20first%20issue&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/runtime/good%20first%20issue?style=flat-square&amp;amp;color=%232EA043&amp;amp;label=good%20first%20issue&quot; alt=&quot;Good First Issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/dotnet/runtime&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/dotnet-discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/732297728826277939?style=flat-square&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=7289DA&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#what-is-net&quot;&gt;What is .NET?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#how-can-i-contribute&quot;&gt;How can I contribute?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#reporting-security-issues-and-security-bugs&quot;&gt;Reporting security issues and security bugs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#filing-issues&quot;&gt;Filing issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#useful-links&quot;&gt;Useful Links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#net-foundation&quot;&gt;.NET Foundation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This repo contains the code to build the .NET runtime, libraries and shared host (&lt;code&gt;dotnet&lt;/code&gt;) installers for all supported platforms, as well as the sources to .NET runtime and libraries.&lt;/p&gt; 
&lt;h2&gt;What is .NET?&lt;/h2&gt; 
&lt;p&gt;Official Starting Page: &lt;a href=&quot;https://dotnet.microsoft.com&quot;&gt;https://dotnet.microsoft.com&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/get-started&quot;&gt;How to use .NET&lt;/a&gt; (with VS, VS Code, command-line CLI) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download&quot;&gt;Install official releases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core&quot;&gt;Documentation&lt;/a&gt; (Get Started, Tutorials, Porting from .NET Framework, API reference, ...) 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/deploying&quot;&gt;Deploying apps&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/core/raw/main/support.md&quot;&gt;Support&lt;/a&gt; (Releases, OS Versions, ...)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/core/raw/main/roadmap.md&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How can I contribute?&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Many people all over the world have helped make this project better.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; explains what kinds of contributions we welcome&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/docs/workflow/README.md&quot;&gt;Workflow Instructions&lt;/a&gt; explains how to build and test&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/docs/project/dogfooding.md&quot;&gt;Dogfooding .NET&lt;/a&gt; explains how to get nightly builds of the runtime and its libraries to test them in your own projects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting security issues and security bugs&lt;/h2&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&quot;https://www.microsoft.com/msrc/faqs-report-an-issue&quot;&gt;Security TechCenter&lt;/a&gt;. You can also find these instructions in this repo&#39;s &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/SECURITY.md&quot;&gt;Security doc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also see info about related &lt;a href=&quot;https://www.microsoft.com/msrc/bounty-dot-net-core&quot;&gt;Microsoft .NET Bounty Program&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Filing issues&lt;/h2&gt; 
&lt;p&gt;This repo should contain issues that are tied to the runtime, the class libraries and frameworks, the installation of the &lt;code&gt;dotnet&lt;/code&gt; binary (sometimes known as the &lt;code&gt;muxer&lt;/code&gt;) and the installation of the .NET runtime and libraries.&lt;/p&gt; 
&lt;p&gt;For other issues, please file them to their appropriate sibling repos. We have links to many of them on &lt;a href=&quot;https://github.com/dotnet/runtime/issues/new/choose&quot;&gt;our new issue page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Useful Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://source.dot.net&quot;&gt;.NET source index&lt;/a&gt; / &lt;a href=&quot;https://referencesource.microsoft.com&quot;&gt;.NET Framework source index&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/api&quot;&gt;API Reference docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apisof.net&quot;&gt;.NET API Catalog&lt;/a&gt; (incl. APIs from daily builds and API usage info)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/dotnet-api-docs/wiki&quot;&gt;API docs writing guidelines&lt;/a&gt; - useful when writing /// comments&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/dotnet-discord&quot;&gt;.NET Discord Server&lt;/a&gt; - a place to discuss the development of .NET and its ecosystem&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;.NET Foundation&lt;/h2&gt; 
&lt;p&gt;.NET Runtime is a &lt;a href=&quot;https://www.dotnetfoundation.org/projects&quot;&gt;.NET Foundation&lt;/a&gt; project.&lt;/p&gt; 
&lt;p&gt;There are many .NET related projects on GitHub.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/dotnet&quot;&gt;.NET home repo&lt;/a&gt;&amp;nbsp;- links to 100s of .NET projects, from Microsoft and the community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/aspnet/core&quot;&gt;ASP.NET Core home&lt;/a&gt; - the best place to start learning about ASP.NET Core.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This project has adopted the code of conduct defined by the &lt;a href=&quot;https://contributor-covenant.org&quot;&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community. For more information, see the &lt;a href=&quot;https://www.dotnetfoundation.org/code-of-conduct&quot;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;General .NET OSS discussions: &lt;a href=&quot;https://github.com/dotnet-foundation/Home/discussions&quot;&gt;.NET Foundation Discussions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;.NET (including the runtime repo) is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/LICENSE.TXT&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Unity-Technologies/ml-agents</title>
      <link>https://github.com/Unity-Technologies/ml-agents</link>
      <description>&lt;p&gt;The Unity Machine Learning Agents Toolkit (ML-Agents) is an open-source project that enables games and simulations to serve as environments for training intelligent agents using deep reinforcement learning and imitation learning.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unity ML-Agents Toolkit&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/tree/release_22_docs/docs/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-reference-blue.svg?sanitize=true&quot; alt=&quot;docs badge&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/LICENSE.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-Apache--2.0-green.svg?sanitize=true&quot; alt=&quot;license badge&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;(&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/releases/tag/latest_release&quot;&gt;latest release&lt;/a&gt;) (&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/releases&quot;&gt;all releases&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The Unity Machine Learning Agents Toolkit&lt;/strong&gt; (ML-Agents) is an open-source project that enables games and simulations to serve as environments for training intelligent agents. We provide implementations (based on PyTorch) of state-of-the-art algorithms to enable game developers and hobbyists to easily train intelligent agents for 2D, 3D and VR/AR games. Researchers can also use the provided simple-to-use Python API to train Agents using reinforcement learning, imitation learning, neuroevolution, or any other methods. These trained agents can be used for multiple purposes, including controlling NPC behavior (in a variety of settings such as multi-agent and adversarial), automated testing of game builds and evaluating different game design decisions pre-release. The ML-Agents Toolkit is mutually beneficial for both game developers and AI researchers as it provides a central platform where advances in AI can be evaluated on Unity’s rich environments and then made accessible to the wider research and game developer communities.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;17+ &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Learning-Environment-Examples.md&quot;&gt;example Unity environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Support for multiple environment configurations and training scenarios&lt;/li&gt; 
 &lt;li&gt;Flexible Unity SDK that can be integrated into your game or custom Unity scene&lt;/li&gt; 
 &lt;li&gt;Support for training single-agent, multi-agent cooperative, and multi-agent competitive scenarios via several Deep Reinforcement Learning algorithms (PPO, SAC, MA-POCA, self-play).&lt;/li&gt; 
 &lt;li&gt;Support for learning from demonstrations through two Imitation Learning algorithms (BC and GAIL).&lt;/li&gt; 
 &lt;li&gt;Quickly and easily add your own &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Python-Custom-Trainer-Plugin.md&quot;&gt;custom training algorithm&lt;/a&gt; and/or components.&lt;/li&gt; 
 &lt;li&gt;Easily definable Curriculum Learning scenarios for complex tasks&lt;/li&gt; 
 &lt;li&gt;Train robust agents using environment randomization&lt;/li&gt; 
 &lt;li&gt;Flexible agent control with On Demand Decision Making&lt;/li&gt; 
 &lt;li&gt;Train using multiple concurrent Unity environment instances&lt;/li&gt; 
 &lt;li&gt;Utilizes the &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Sentis.md&quot;&gt;Sentis&lt;/a&gt; to provide native cross-platform support&lt;/li&gt; 
 &lt;li&gt;Unity environment &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Python-LLAPI.md&quot;&gt;control from Python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Wrap Unity learning environments as a &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Python-Gym-API.md&quot;&gt;gym&lt;/a&gt; environment&lt;/li&gt; 
 &lt;li&gt;Wrap Unity learning environments as a &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Python-PettingZoo-API.md&quot;&gt;PettingZoo&lt;/a&gt; environment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See our &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/ML-Agents-Overview.md&quot;&gt;ML-Agents Overview&lt;/a&gt; page for detailed descriptions of all these features. Or go straight to our &lt;a href=&quot;https://unity-technologies.github.io/ml-agents/&quot;&gt;web docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases &amp;amp; Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Our latest, stable release is &lt;code&gt;Release 22&lt;/code&gt;. Click &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Getting-Started.md&quot;&gt;here&lt;/a&gt; to get started with the latest release of ML-Agents.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You can also check out our new &lt;a href=&quot;https://unity-technologies.github.io/ml-agents/&quot;&gt;web docs&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The table below lists all our releases, including our &lt;code&gt;main&lt;/code&gt; branch which is under active development and may be unstable. A few helpful guidelines:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Versioning.md&quot;&gt;Versioning page&lt;/a&gt; overviews how we manage our GitHub releases and the versioning process for each of the ML-Agents components.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/releases&quot;&gt;Releases page&lt;/a&gt; contains details of the changes between releases.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/Migrating.md&quot;&gt;Migration page&lt;/a&gt; contains details on how to upgrade from earlier releases of the ML-Agents Toolkit.&lt;/li&gt; 
 &lt;li&gt;The &lt;strong&gt;Documentation&lt;/strong&gt; links in the table below include installation and usage instructions specific to each release. Remember to always use the documentation that corresponds to the release version you&#39;re using.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;com.unity.ml-agents&lt;/code&gt; package is &lt;a href=&quot;https://docs.unity3d.com/2020.1/Documentation/Manual/pack-safe.html&quot;&gt;verified&lt;/a&gt; for Unity 2020.1 and later. Verified packages releases are numbered 1.0.x.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Release Date&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Source&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Python Package&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Unity Package&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Release 22&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;October 5, 2024&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/tree/release_22&quot;&gt;source&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://unity-technologies.github.io/ml-agents/&quot;&gt;docs&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/archive/release_22.zip&quot;&gt;download&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://pypi.org/project/mlagents/1.1.0/&quot;&gt;1.1.0&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@3.0/manual/index.html&quot;&gt;3.0.0&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;develop (unstable)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;--&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/tree/develop&quot;&gt;source&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://unity-technologies.github.io/ml-agents/&quot;&gt;docs&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/archive/develop.zip&quot;&gt;download&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;--&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you are a researcher interested in a discussion of Unity as an AI platform, see a pre-print of our &lt;a href=&quot;https://arxiv.org/abs/1809.02627&quot;&gt;reference paper on Unity and the ML-Agents Toolkit&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you use Unity or the ML-Agents Toolkit to conduct research, we ask that you cite the following paper as a reference:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@article{juliani2020,
  title={Unity: A general platform for intelligent agents},
  author={Juliani, Arthur and Berges, Vincent-Pierre and Teng, Ervin and Cohen, Andrew and Harper, Jonathan and Elion, Chris and Goy, Chris and Gao, Yuan and Henry, Hunter and Mattar, Marwan and Lange, Danny},
  journal={arXiv preprint arXiv:1809.02627},
  url={https://arxiv.org/pdf/1809.02627.pdf},
  year={2020}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally, if you use the MA-POCA trainer in your research, we ask that you cite the following paper as a reference:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@article{cohen2022,
  title={On the Use and Misuse of Absorbing States in Multi-agent Reinforcement Learning},
  author={Cohen, Andrew and Teng, Ervin and Berges, Vincent-Pierre and Dong, Ruo-Ping and Henry, Hunter and Mattar, Marwan and Zook, Alexander and Ganguly, Sujoy},
  journal={RL in Games Workshop AAAI 2022},
  url={http://aaai-rlg.mlanctot.info/papers/AAAI22-RLG_paper_32.pdf},
  year={2022}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Additional Resources&lt;/h2&gt; 
&lt;p&gt;We have a Unity Learn course, &lt;a href=&quot;https://learn.unity.com/course/ml-agents-hummingbirds&quot;&gt;ML-Agents: Hummingbirds&lt;/a&gt;, that provides a gentle introduction to Unity and the ML-Agents Toolkit.&lt;/p&gt; 
&lt;p&gt;We&#39;ve also partnered with &lt;a href=&quot;https://www.youtube.com/c/CodeMonkeyUnity&quot;&gt;CodeMonkeyUnity&lt;/a&gt; to create a &lt;a href=&quot;https://www.youtube.com/playlist?list=PLzDRvYVwl53vehwiN_odYJkPBzcqFw110&quot;&gt;series of tutorial videos&lt;/a&gt; on how to implement and use the ML-Agents Toolkit.&lt;/p&gt; 
&lt;p&gt;We have also published a series of blog posts that are relevant for ML-Agents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;(July 12, 2021) &lt;a href=&quot;https://blog.unity.com/technology/ml-agents-plays-dodgeball&quot;&gt;ML-Agents plays Dodgeball&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(May 5, 2021) &lt;a href=&quot;https://blogs.unity3d.com/2021/05/05/ml-agents-v2-0-release-now-supports-training-complex-cooperative-behaviors/&quot;&gt;ML-Agents v2.0 release: Now supports training complex cooperative behaviors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(December 28, 2020) &lt;a href=&quot;https://blogs.unity3d.com/2020/12/28/happy-holidays-from-the-unity-ml-agents-team/&quot;&gt;Happy holidays from the Unity ML-Agents team!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(November 20, 2020) &lt;a href=&quot;https://blogs.unity3d.com/2020/11/20/how-eidos-montreal-created-grid-sensors-to-improve-observations-for-training-agents/&quot;&gt;How Eidos-Montréal created Grid Sensors to improve observations for training agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(November 11, 2020) &lt;a href=&quot;https://blogs.unity3d.com/2020/11/11/2020-aiunity-interns-shoutout/&quot;&gt;2020 AI@Unity interns shoutout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(May 12, 2020) &lt;a href=&quot;https://blogs.unity3d.com/2020/05/12/announcing-ml-agents-unity-package-v1-0/&quot;&gt;Announcing ML-Agents Unity Package v1.0!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(February 28, 2020) &lt;a href=&quot;https://blogs.unity3d.com/2020/02/28/training-intelligent-adversaries-using-self-play-with-ml-agents/&quot;&gt;Training intelligent adversaries using self-play with ML-Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(November 11, 2019) &lt;a href=&quot;https://blogs.unity3d.com/2019/11/11/training-your-agents-7-times-faster-with-ml-agents/&quot;&gt;Training your agents 7 times faster with ML-Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(October 21, 2019) &lt;a href=&quot;https://blogs.unity3d.com/2019/10/21/the-aiunity-interns-help-shape-the-world/&quot;&gt;The AI@Unity interns help shape the world&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(April 15, 2019) &lt;a href=&quot;https://blogs.unity3d.com/2019/04/15/unity-ml-agents-toolkit-v0-8-faster-training-on-real-games/&quot;&gt;Unity ML-Agents Toolkit v0.8: Faster training on real games&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(March 1, 2019) &lt;a href=&quot;https://blogs.unity3d.com/2019/03/01/unity-ml-agents-toolkit-v0-7-a-leap-towards-cross-platform-inference/&quot;&gt;Unity ML-Agents Toolkit v0.7: A leap towards cross-platform inference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(December 17, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/12/17/ml-agents-toolkit-v0-6-improved-usability-of-brains-and-imitation-learning/&quot;&gt;ML-Agents Toolkit v0.6: Improved usability of Brains and Imitation Learning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(October 2, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/10/02/puppo-the-corgi-cuteness-overload-with-the-unity-ml-agents-toolkit/&quot;&gt;Puppo, The Corgi: Cuteness Overload with the Unity ML-Agents Toolkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(September 11, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/09/11/ml-agents-toolkit-v0-5-new-resources-for-ai-researchers-available-now/&quot;&gt;ML-Agents Toolkit v0.5, new resources for AI researchers available now&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(June 26, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/06/26/solving-sparse-reward-tasks-with-curiosity/&quot;&gt;Solving sparse-reward tasks with Curiosity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(June 19, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/06/19/unity-ml-agents-toolkit-v0-4-and-udacity-deep-reinforcement-learning-nanodegree/&quot;&gt;Unity ML-Agents Toolkit v0.4 and Udacity Deep Reinforcement Learning Nanodegree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(May 24, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/05/24/imitation-learning-in-unity-the-workflow/&quot;&gt;Imitation Learning in Unity: The Workflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(March 15, 2018) &lt;a href=&quot;https://blogs.unity3d.com/2018/03/15/ml-agents-v0-3-beta-released-imitation-learning-feedback-driven-features-and-more/&quot;&gt;ML-Agents Toolkit v0.3 Beta released: Imitation Learning, feedback-driven features, and more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(December 11, 2017) &lt;a href=&quot;https://blogs.unity3d.com/2017/12/11/using-machine-learning-agents-in-a-real-game-a-beginners-guide/&quot;&gt;Using Machine Learning Agents in a real game: a beginner’s guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(December 8, 2017) &lt;a href=&quot;https://blogs.unity3d.com/2017/12/08/introducing-ml-agents-v0-2-curriculum-learning-new-environments-and-more/&quot;&gt;Introducing ML-Agents Toolkit v0.2: Curriculum Learning, new environments, and more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(September 19, 2017) &lt;a href=&quot;https://blogs.unity3d.com/2017/09/19/introducing-unity-machine-learning-agents/&quot;&gt;Introducing: Unity Machine Learning Agents Toolkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Overviewing reinforcement learning concepts (&lt;a href=&quot;https://blogs.unity3d.com/2017/06/26/unity-ai-themed-blog-entries/&quot;&gt;multi-armed bandit&lt;/a&gt; and &lt;a href=&quot;https://blogs.unity3d.com/2017/08/22/unity-ai-reinforcement-learning-with-q-learning/&quot;&gt;Q-learning&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;More from Unity&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unity.com/products/sentis&quot;&gt;Unity Sentis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.unity.com/engine-platform/introducing-unity-muse-and-unity-sentis-ai&quot;&gt;Introducing Unity Muse and Sentis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community and Feedback&lt;/h2&gt; 
&lt;p&gt;The ML-Agents Toolkit is an open-source project and we encourage and welcome contributions. If you wish to contribute, be sure to review our &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/Unity-Technologies/ml-agents/develop/CODE_OF_CONDUCT.md&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For problems with the installation and setup of the ML-Agents Toolkit, or discussions about how to best setup or train your agents, please create a new thread on the &lt;a href=&quot;https://forum.unity.com/forums/ml-agents.453/&quot;&gt;Unity ML-Agents forum&lt;/a&gt; and make sure to include as much detail as possible. If you run into any other problems using the ML-Agents Toolkit or have a specific feature request, please &lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/issues&quot;&gt;submit a GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please tell us which samples you would like to see shipped with the ML-Agents Unity package by replying to &lt;a href=&quot;https://forum.unity.com/threads/feedback-wanted-shipping-sample-s-with-the-ml-agents-package.1073468/&quot;&gt;this forum thread&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Your opinion matters a great deal to us. Only by hearing your thoughts on the Unity ML-Agents Toolkit can we continue to improve and grow. Please take a few minutes to &lt;a href=&quot;https://unitysoftware.co1.qualtrics.com/jfe/form/SV_55pQKCZ578t0kbc&quot;&gt;let us know about it&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For any other questions or feedback, connect directly with the ML-Agents team at &lt;a href=&quot;mailto:ml-agents@unity3d.com&quot;&gt;ml-agents@unity3d.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;In order to improve the developer experience for Unity ML-Agents Toolkit, we have added in-editor analytics. Please refer to &quot;Information that is passively collected by Unity&quot; in the &lt;a href=&quot;https://unity3d.com/legal/privacy-policy&quot;&gt;Unity Privacy Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yaobiao131/downkyicore</title>
      <link>https://github.com/yaobiao131/downkyicore</link>
      <description>&lt;p&gt;哔哩下载姬(跨平台版)downkyi，哔哩哔哩网站视频下载工具，支持批量下载，支持8K、HDR、杜比视界，提供工具箱（音视频提取、去水印等）。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;哔哩下载姬(跨平台版)&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/yaobiao131/downkyicore/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/yaobiao131/downkyicore&quot; alt=&quot;GitHub Repo stars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/network&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/yaobiao131/downkyicore&quot; alt=&quot;GitHub forks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/yaobiao131/downkyicore&quot; alt=&quot;GitHub issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/yaobiao131/downkyicore&quot; alt=&quot;LICENSE&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;下载&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/yaobiao131/downkyicore/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/yaobiao131/downkyicore&quot; alt=&quot;GitHub release (latest by date)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-date/yaobiao131/downkyicore&quot; alt=&quot;GitHub Release Date&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/yaobiao131/downkyicore/total&quot; alt=&quot;GitHub all releases&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yaobiao131/downkyicore/main/CHANGELOG.md&quot;&gt;更新日志&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于&lt;a href=&quot;https://github.com/leiurayer/downkyi&quot;&gt;哔哩下载姬Windows版&lt;/a&gt;和&lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia&quot;&gt;AvaloniaUI&lt;/a&gt;制作的跨平台版本(支持Windows、linux、macOS)。&lt;/li&gt; 
 &lt;li&gt;开发这个版本目的是由于本人日常使用macOS，当我想下载up视频是偶然间发现了&lt;a href=&quot;https://github.com/leiurayer/downkyi&quot;&gt;哔哩下载姬Windows版&lt;/a&gt;，发现很好用，就是不能支持macOS使用，就基于AvaloniaUI重新开发了一个跨平台版本。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;使用说明&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;软件自带.NET6、ffmpeg、aria2运行环境、无需自行安装&lt;/li&gt; 
 &lt;li&gt;默认下载路径: 
  &lt;ul&gt; 
   &lt;li&gt;Windows: 软件运行目录下的Media文件夹&lt;/li&gt; 
   &lt;li&gt;macOS: ~/Library/Application Support/DownKyi/Media&lt;/li&gt; 
   &lt;li&gt;linux: ~/.config/DownKyi/Media&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;免责申明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;本软件只提供视频解析，不提供任何资源上传、存储到服务器的功能。&lt;/li&gt; 
 &lt;li&gt;本软件仅解析来自B站的内容，不会对解析到的音视频进行二次编码，部分视频会进行有限的格式转换、拼接等操作。&lt;/li&gt; 
 &lt;li&gt;本软件解析得到的所有内容均来自B站UP主上传、分享，其版权均归原作者所有。内容提供者、上传者（UP主）应对其提供、上传的内容承担全部责任。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;本软件提供的所有内容，仅可用作学习交流使用，未经原作者授权，禁止用于其他用途。请在下载24小时内删除。为尊重作者版权，请前往资源的原始发布网站观看，支持原创，谢谢。&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;因使用本软件产生的版权问题，软件作者概不负责。&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
  </channel>
</rss>
