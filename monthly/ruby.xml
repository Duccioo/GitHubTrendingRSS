<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Ruby Monthly Trending</title>
    <description>Monthly Trending of Ruby in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 02:08:20 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>fastlane/fastlane</title>
      <link>https://github.com/fastlane/fastlane</link>
      <description>&lt;p&gt;üöÄ The easiest way to automate building and releasing your iOS and Android apps&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/fastlane/fastlane/raw/master/fastlane/assets/fastlane_text.png&quot;&gt; &lt;img src=&quot;https://github.com/fastlane/fastlane/raw/master/fastlane/assets/fastlane_text.png?raw=true&quot; alt=&quot;fastlane Logo&quot; width=&quot;500&quot;&gt; &lt;/a&gt; &lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/FastlaneTools&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contact-@FastlaneTools-blue.svg?style=flat&quot; alt=&quot;Twitter: @FastlaneTools&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/fastlane/fastlane/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-green.svg?style=flat&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://rubygems.org/gems/fastlane&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/fastlane.svg?style=flat&quot; alt=&quot;Gem&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://formulae.brew.sh/formula/fastlane&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://formulae.brew.sh/api/formula/fastlane.json&amp;amp;query=$.versions.stable&amp;amp;label=homebrew&quot; alt=&quot;Homebrew&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/fastlane/fastlane&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/fastlane/fastlane/master.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/fastlane/fastlane/raw/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs welcome!&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;fastlane&lt;/em&gt; is a tool for iOS and Android developers to automate tedious tasks like generating screenshots, dealing with provisioning profiles, and releasing your application.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2 align=&quot;center&quot;&gt; ‚ú® All fastlane docs were moved to &lt;a href=&quot;https://docs.fastlane.tools/&quot;&gt;docs.fastlane.tools&lt;/a&gt; ‚ú® &lt;/h2&gt; 
&lt;hr&gt; 
&lt;h2&gt;Need Help?&lt;/h2&gt; 
&lt;p&gt;Before submitting a new GitHub issue, please make sure to&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out &lt;a href=&quot;https://docs.fastlane.tools&quot;&gt;docs.fastlane.tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Search for &lt;a href=&quot;https://github.com/fastlane/fastlane/issues&quot;&gt;existing GitHub issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the above doesn&#39;t help, please &lt;a href=&quot;https://github.com/fastlane/fastlane/issues&quot;&gt;submit an issue&lt;/a&gt; on GitHub and provide information about your setup, in particular the output of the &lt;code&gt;fastlane env&lt;/code&gt; command.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you want to report a regression in &lt;em&gt;fastlane&lt;/em&gt; (something that has worked before, but broke with a new release), please mark your issue title as such using &lt;code&gt;[Regression] Your title here&lt;/code&gt;. This enables us to quickly detect and fix regressions.&lt;/p&gt; 
&lt;h2&gt;&lt;em&gt;fastlane&lt;/em&gt; team&lt;/h2&gt; 
&lt;!-- This table is regenerated and resorted on each release --&gt; 
&lt;table id=&quot;team&quot;&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td id=&quot;roger-oba&quot;&gt; &lt;a href=&quot;https://github.com/rogerluan&quot;&gt; &lt;img src=&quot;https://github.com/rogerluan.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/rogerluan_&quot;&gt;Roger Oba&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;aaron-brager&quot;&gt; &lt;a href=&quot;https://github.com/getaaron&quot;&gt; &lt;img src=&quot;https://github.com/getaaron.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/getaaron&quot;&gt;Aaron Brager&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;iulian-onofrei&quot;&gt; &lt;a href=&quot;https://github.com/revolter&quot;&gt; &lt;img src=&quot;https://github.com/revolter.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/Revolt666&quot;&gt;Iulian Onofrei&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;stefan-natchev&quot;&gt; &lt;a href=&quot;https://github.com/snatchev&quot;&gt; &lt;img src=&quot;https://github.com/snatchev.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/snatchev&quot;&gt;Stefan Natchev&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;jimmy-dee&quot;&gt; &lt;a href=&quot;https://github.com/jdee&quot;&gt; &lt;img src=&quot;https://github.com/jdee.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;Jimmy Dee&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;manish-rathi&quot;&gt; &lt;a href=&quot;https://github.com/crazymanish&quot;&gt; &lt;img src=&quot;https://github.com/crazymanish.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/iammanishrathi&quot;&gt;Manish Rathi&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;fumiya-nakamura&quot;&gt; &lt;a href=&quot;https://github.com/nafu&quot;&gt; &lt;img src=&quot;https://github.com/nafu.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/nafu003&quot;&gt;Fumiya Nakamura&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;luka-mirosevic&quot;&gt; &lt;a href=&quot;https://github.com/lmirosevic&quot;&gt; &lt;img src=&quot;https://github.com/lmirosevic.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/lmirosevic&quot;&gt;Luka Mirosevic&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;felix-krause&quot;&gt; &lt;a href=&quot;https://github.com/KrauseFx&quot;&gt; &lt;img src=&quot;https://github.com/KrauseFx.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/KrauseFx&quot;&gt;Felix Krause&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;jan-piotrowski&quot;&gt; &lt;a href=&quot;https://github.com/janpio&quot;&gt; &lt;img src=&quot;https://github.com/janpio.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/Sujan&quot;&gt;Jan Piotrowski&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;j√©r√¥me-lacoste&quot;&gt; &lt;a href=&quot;https://github.com/lacostej&quot;&gt; &lt;img src=&quot;https://github.com/lacostej.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/lacostej&quot;&gt;J√©r√¥me Lacoste&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;≈Çukasz-grabowski&quot;&gt; &lt;a href=&quot;https://github.com/lucgrabowski&quot;&gt; &lt;img src=&quot;https://github.com/lucgrabowski.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;≈Åukasz Grabowski&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;satoshi-namai&quot;&gt; &lt;a href=&quot;https://github.com/ainame&quot;&gt; &lt;img src=&quot;https://github.com/ainame.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/ainame&quot;&gt;Satoshi Namai&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;kohki-miki&quot;&gt; &lt;a href=&quot;https://github.com/giginet&quot;&gt; &lt;img src=&quot;https://github.com/giginet.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/giginet&quot;&gt;Kohki Miki&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;max-ott&quot;&gt; &lt;a href=&quot;https://github.com/max-ott&quot;&gt; &lt;img src=&quot;https://github.com/max-ott.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/ott_max&quot;&gt;Max Ott&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;jorge-revuelta-h&quot;&gt; &lt;a href=&quot;https://github.com/minuscorp&quot;&gt; &lt;img src=&quot;https://github.com/minuscorp.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/minuscorp&quot;&gt;Jorge Revuelta H&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;maksym-grebenets&quot;&gt; &lt;a href=&quot;https://github.com/mgrebenets&quot;&gt; &lt;img src=&quot;https://github.com/mgrebenets.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/mgrebenets&quot;&gt;Maksym Grebenets&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;matthew-ellis&quot;&gt; &lt;a href=&quot;https://github.com/matthewellis&quot;&gt; &lt;img src=&quot;https://github.com/matthewellis.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/mellis1995&quot;&gt;Matthew Ellis&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;joshua-liebowitz&quot;&gt; &lt;a href=&quot;https://github.com/taquitos&quot;&gt; &lt;img src=&quot;https://github.com/taquitos.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/taquitos&quot;&gt;Joshua Liebowitz&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;josh-holtz&quot;&gt; &lt;a href=&quot;https://github.com/joshdholtz&quot;&gt; &lt;img src=&quot;https://github.com/joshdholtz.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/joshdholtz&quot;&gt;Josh Holtz&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;danielle-tomlinson&quot;&gt; &lt;a href=&quot;https://github.com/endocrimes&quot;&gt; &lt;img src=&quot;https://github.com/endocrimes.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/endocrimes&quot;&gt;Danielle Tomlinson&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;andrew-mcburney&quot;&gt; &lt;a href=&quot;https://github.com/armcburney&quot;&gt; &lt;img src=&quot;https://github.com/armcburney.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/armcburney&quot;&gt;Andrew McBurney&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;daniel-jankowski&quot;&gt; &lt;a href=&quot;https://github.com/mollyIV&quot;&gt; &lt;img src=&quot;https://github.com/mollyIV.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/mollyIV&quot;&gt;Daniel Jankowski&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;helmut-januschka&quot;&gt; &lt;a href=&quot;https://github.com/hjanuschka&quot;&gt; &lt;img src=&quot;https://github.com/hjanuschka.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/hjanuschka&quot;&gt;Helmut Januschka&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;olivier-halligon&quot;&gt; &lt;a href=&quot;https://github.com/AliSoftware&quot;&gt; &lt;img src=&quot;https://github.com/AliSoftware.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/aligatr&quot;&gt;Olivier Halligon&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;manu-wallner&quot;&gt; &lt;a href=&quot;https://github.com/milch&quot;&gt; &lt;img src=&quot;https://github.com/milch.png&quot; width=&quot;140px;&quot;&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/acrooow&quot;&gt;Manu Wallner&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Special thanks to all &lt;a href=&quot;https://github.com/fastlane/fastlane/graphs/contributors&quot;&gt;contributors&lt;/a&gt; for extending and improving &lt;em&gt;fastlane&lt;/em&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribute to &lt;em&gt;fastlane&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://raw.githubusercontent.com/fastlane/fastlane/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on how to help with &lt;em&gt;fastlane&lt;/em&gt;.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Help us keep &lt;em&gt;fastlane&lt;/em&gt; open and inclusive. Please read and follow our &lt;a href=&quot;https://github.com/fastlane/fastlane/raw/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Metrics&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;fastlane&lt;/em&gt; tracks a few key metrics to understand how developers are using the tool and to help us know what areas need improvement. No personal/sensitive information is ever collected. Metrics that are collected include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The number of &lt;em&gt;fastlane&lt;/em&gt; runs&lt;/li&gt; 
 &lt;li&gt;A salted hash of the app identifier or package name, which helps us anonymously identify unique usage of &lt;em&gt;fastlane&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can easily opt-out of metrics collection by adding &lt;code&gt;opt_out_usage&lt;/code&gt; at the top of your &lt;code&gt;Fastfile&lt;/code&gt; or by setting the environment variable &lt;code&gt;FASTLANE_OPT_OUT_USAGE&lt;/code&gt;. &lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/fastlane_core/lib/fastlane_core/analytics&quot;&gt;Check out the metrics code on GitHub&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the MIT license. See the &lt;a href=&quot;https://raw.githubusercontent.com/fastlane/fastlane/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This project and all fastlane tools are in no way affiliated with Apple Inc. This project is open source under the MIT license, which means you have full access to the source code and can modify it to fit your own needs. All fastlane tools run on your own computer or server, so your credentials or other sensitive information will never leave your own computer. You are responsible for how you use fastlane tools.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h2 align=&quot;center&quot;&gt; ‚ú® All fastlane docs were moved to &lt;a href=&quot;https://docs.fastlane.tools/&quot;&gt;docs.fastlane.tools&lt;/a&gt; ‚ú® &lt;/h2&gt; 
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>basecamp/kamal</title>
      <link>https://github.com/basecamp/kamal</link>
      <description>&lt;p&gt;Deploy web apps anywhere.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kamal: Deploy web apps anywhere&lt;/h1&gt; 
&lt;p&gt;From bare metal to cloud VMs, deploy web apps anywhere with zero downtime. Kamal uses &lt;a href=&quot;https://github.com/basecamp/kamal-proxy&quot;&gt;kamal-proxy&lt;/a&gt; to seamlessly switch requests between containers. Works seamlessly across multiple servers, using SSHKit to execute commands. Originally built for Rails apps, Kamal will work with any type of web app that can be containerized with Docker.&lt;/p&gt; 
&lt;p&gt;‚û°Ô∏è See &lt;a href=&quot;https://kamal-deploy.org&quot;&gt;kamal-deploy.org&lt;/a&gt; for documentation on &lt;a href=&quot;https://kamal-deploy.org/docs/installation&quot;&gt;installation&lt;/a&gt;, &lt;a href=&quot;https://kamal-deploy.org/docs/configuration&quot;&gt;configuration&lt;/a&gt;, and &lt;a href=&quot;https://kamal-deploy.org/docs/commands&quot;&gt;commands&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to the documentation&lt;/h2&gt; 
&lt;p&gt;Please help us improve Kamal&#39;s documentation on the &lt;a href=&quot;https://github.com/basecamp/kamal-site&quot;&gt;the basecamp/kamal-site repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Kamal is released under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zammad/zammad</title>
      <link>https://github.com/zammad/zammad</link>
      <description>&lt;p&gt;Zammad is a web based open source helpdesk/customer support system&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Zammad&lt;/h1&gt; 
&lt;p&gt;Are you juggling countless customer inquiries across multiple channels? Struggling to keep your support team on the same page? Or spending more time managing your helpdesk than delivering exceptional support to your customers?&lt;/p&gt; 
&lt;p&gt;Zammad is your Swiss Army knife - a web-based, open-source helpdesk and customer support platform packed with features to streamline customer communication across channels like email, chat, telephone and social media.&lt;/p&gt; 
&lt;h2&gt;The Software&lt;/h2&gt; 
&lt;p&gt;The Zammad software is and will stay open source. It is licensed under the GNU AGPLv3. The source code is &lt;a href=&quot;https://github.com/zammad/zammad&quot;&gt;available on GitHub&lt;/a&gt; and owned by the &lt;a href=&quot;https://zammad-foundation.org/&quot;&gt;Zammad Foundation&lt;/a&gt;, which is independent of commercial providers such as Zammad GmbH.&lt;/p&gt; 
&lt;h2&gt;The Company - Zammad GmbH&lt;/h2&gt; 
&lt;p&gt;The development of Zammad is carried out by the &lt;a href=&quot;https://zammad.com/en/company&quot;&gt;amazing team of people&lt;/a&gt; at &lt;a href=&quot;https://zammad.com/&quot;&gt;Zammad GmbH&lt;/a&gt; in collaboration with the community. We love to create open source software for you. If you want to ensure the Zammad software has a bright and sustainable future, consider becoming a Zammad customer!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Are you tired of complex setup, configuration, backup and update tasks? Let us handle this stuff for you! üöÄ&lt;/p&gt; 
 &lt;p&gt;The easiest and often most cost-effective way to operate Zammad is &lt;a href=&quot;https://zammad.com/en/pricing&quot;&gt;our cloud service&lt;/a&gt;. Give it a try with a &lt;a href=&quot;https://zammad.com/en/getting-started&quot;&gt;free trial instance&lt;/a&gt;!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Toolchain: &lt;a href=&quot;https://github.com/zammad/zammad/actions/workflows/ci.yaml&quot;&gt;&lt;img src=&quot;https://github.com/zammad/zammad/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/zammad/zammad/actions/workflows/docker-release.yaml&quot;&gt;&lt;img src=&quot;https://github.com/zammad/zammad/workflows/docker-release/badge.svg?sanitize=true&quot; alt=&quot;docker-release workflow&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.zammad.org&quot;&gt;&lt;img src=&quot;https://readthedocs.org/projects/zammad/badge/&quot; alt=&quot;documentation status&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Docker container images: &lt;a href=&quot;https://hub.docker.com/r/zammad/zammad-docker-compose&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/version-stable-blue.svg?sanitize=true&quot; alt=&quot;Docker images for Zammad&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/zammad/zammad-docker-compose/&quot;&gt;&lt;img src=&quot;https://badgen.net/docker/pulls/zammad/zammad-docker-compose?icon=docker&amp;amp;label=pulls&quot; alt=&quot;Dockerhub Pulls&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Helm chart for Kubernetes: &lt;a href=&quot;https://artifacthub.io/packages/helm/zammad/zammad&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/zammad&quot; alt=&quot;Artifact Hub&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/zammad/zammad-helm/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/zammad/zammad-helm/total.svg?sanitize=true&quot; alt=&quot;Release downloads&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download DEB/RPM: &lt;a href=&quot;https://packager.io/gh/zammad/zammad/refs/stable&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Branch-stable-blue.svg?sanitize=true&quot; alt=&quot;binary packages for Zammad stable&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://packager.io/gh/zammad/zammad/refs/develop&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Branch-develop-lightgrey.svg?sanitize=true&quot; alt=&quot;binary packages for Zammad develop&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;License: &lt;a href=&quot;https://github.com/zammad/zammad/raw/develop/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-AGPL%203.0-brightgreen.svg?sanitize=true&quot; alt=&quot;AGPL license&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installing &amp;amp; Getting Started&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.zammad.org&quot;&gt;https://docs.zammad.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://zammad.org/screenshots&quot;&gt;https://zammad.org/screenshots&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Developer Manual&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zammad/zammad/develop/doc/developer_manual/index.md&quot;&gt;Developer Manual&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;REST API&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.zammad.org/en/latest/api/intro.html&quot;&gt;https://docs.zammad.org/en/latest/api/intro.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Security Policy&lt;/h2&gt; 
&lt;p&gt;For reporting security vulnerabilities, please see &lt;a href=&quot;https://raw.githubusercontent.com/zammad/zammad/develop/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://zammad.org/participate&quot;&gt;https://zammad.org/participate&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks! ‚ù§Ô∏è ‚ù§Ô∏è ‚ù§Ô∏è&lt;/p&gt; 
&lt;p&gt;Your Zammad Team&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rails/rails</title>
      <link>https://github.com/rails/rails</link>
      <description>&lt;p&gt;Ruby on Rails&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Rails&lt;/h1&gt; 
&lt;h2&gt;What&#39;s Rails?&lt;/h2&gt; 
&lt;p&gt;Rails is a web-application framework that includes everything needed to create database-backed web applications according to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Model-view-controller&quot;&gt;Model-View-Controller (MVC)&lt;/a&gt; pattern.&lt;/p&gt; 
&lt;p&gt;Understanding the MVC pattern is key to understanding Rails. MVC divides your application into three layers: Model, View, and Controller, each with a specific responsibility.&lt;/p&gt; 
&lt;h2&gt;Model layer&lt;/h2&gt; 
&lt;p&gt;The &lt;em&gt;&lt;strong&gt;Model layer&lt;/strong&gt;&lt;/em&gt; represents the domain model (such as Account, Product, Person, Post, etc.) and encapsulates the business logic specific to your application. In Rails, database-backed model classes are derived from &lt;code&gt;ActiveRecord::Base&lt;/code&gt;. &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activerecord/README.rdoc&quot;&gt;Active Record&lt;/a&gt; allows you to present the data from database rows as objects and embellish these data objects with business logic methods. Although most Rails models are backed by a database, models can also be ordinary Ruby classes, or Ruby classes that implement a set of interfaces as provided by the &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activemodel/README.rdoc&quot;&gt;Active Model&lt;/a&gt; module.&lt;/p&gt; 
&lt;h2&gt;View layer&lt;/h2&gt; 
&lt;p&gt;The &lt;em&gt;&lt;strong&gt;View layer&lt;/strong&gt;&lt;/em&gt; is composed of &quot;templates&quot; that are responsible for providing appropriate representations of your application&#39;s resources. Templates can come in a variety of formats, but most view templates are HTML with embedded Ruby code (ERB files). Views are typically rendered to generate a controller response or to generate the body of an email. In Rails, View generation is handled by &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionview/README.rdoc&quot;&gt;Action View&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Controller layer&lt;/h2&gt; 
&lt;p&gt;The &lt;em&gt;&lt;strong&gt;Controller layer&lt;/strong&gt;&lt;/em&gt; is responsible for handling incoming HTTP requests and providing a suitable response. Usually, this means returning HTML, but Rails controllers can also generate XML, JSON, PDFs, mobile-specific views, and more. Controllers load and manipulate models, and render view templates in order to generate the appropriate HTTP response. In Rails, incoming requests are routed by Action Dispatch to an appropriate controller, and controller classes are derived from &lt;code&gt;ActionController::Base&lt;/code&gt;. Action Dispatch and Action Controller are bundled together in &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionpack/README.rdoc&quot;&gt;Action Pack&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Frameworks and libraries&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activerecord/README.rdoc&quot;&gt;Active Record&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activemodel/README.rdoc&quot;&gt;Active Model&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionpack/README.rdoc&quot;&gt;Action Pack&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionview/README.rdoc&quot;&gt;Action View&lt;/a&gt; can each be used independently outside Rails.&lt;/p&gt; 
&lt;p&gt;In addition to that, Rails also comes with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionmailer/README.rdoc&quot;&gt;Action Mailer&lt;/a&gt;, a library to generate and send emails&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionmailbox/README.md&quot;&gt;Action Mailbox&lt;/a&gt;, a library to receive emails within a Rails application&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activejob/README.md&quot;&gt;Active Job&lt;/a&gt;, a framework for declaring jobs and making them run on a variety of queuing backends&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actioncable/README.md&quot;&gt;Action Cable&lt;/a&gt;, a framework to integrate WebSockets with a Rails application&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activestorage/README.md&quot;&gt;Active Storage&lt;/a&gt;, a library to attach cloud and local files to Rails applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actiontext/README.md&quot;&gt;Action Text&lt;/a&gt;, a library to handle rich text content&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activesupport/README.rdoc&quot;&gt;Active Support&lt;/a&gt;, a collection of utility classes and standard library extensions that are useful for Rails, and may also be used independently outside Rails&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install Rails at the command prompt if you haven&#39;t yet:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gem install rails
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;At the command prompt, create a new Rails application:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ rails new myapp
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;where &quot;myapp&quot; is the application name.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Change directory to &lt;code&gt;myapp&lt;/code&gt; and start the web server:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cd myapp
$ bin/rails server
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Run with &lt;code&gt;--help&lt;/code&gt; or &lt;code&gt;-h&lt;/code&gt; for options.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Go to &lt;code&gt;http://localhost:3000&lt;/code&gt; and you&#39;ll see the Rails bootscreen with your Rails and Ruby versions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the guidelines to start developing your application. You may find the following resources handy:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://guides.rubyonrails.org/getting_started.html&quot;&gt;Getting Started with Rails&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://guides.rubyonrails.org&quot;&gt;Ruby on Rails Guides&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://api.rubyonrails.org&quot;&gt;The API Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We encourage you to contribute to Ruby on Rails! Please check out the &lt;a href=&quot;https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html&quot;&gt;Contributing to Ruby on Rails guide&lt;/a&gt; for guidelines about how to proceed. &lt;a href=&quot;https://contributors.rubyonrails.org&quot;&gt;Join us!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Trying to report a possible security vulnerability in Rails? Please check out our &lt;a href=&quot;https://rubyonrails.org/security&quot;&gt;security policy&lt;/a&gt; for guidelines about how to proceed.&lt;/p&gt; 
&lt;p&gt;Everyone interacting in Rails and its sub-projects&#39; codebases, issue trackers, chat rooms, and mailing lists is expected to follow the Rails &lt;a href=&quot;https://rubyonrails.org/conduct&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Ruby on Rails is released under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>opf/openproject</title>
      <link>https://github.com/opf/openproject</link>
      <description>&lt;p&gt;OpenProject is the leading open source project management software.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenProject&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/opf/openproject&quot; alt=&quot;GitHub release (latest by date)&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/opf/openproject&quot; alt=&quot;GitHub commit activity&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/checks-status/opf/openproject/dev&quot; alt=&quot;GitHub branch checks state&quot;&gt; &lt;a href=&quot;https://github.com/opf/openproject/actions/workflows/test-core.yml&quot;&gt;&lt;img src=&quot;https://github.com/opf/openproject/actions/workflows/test-core.yml/badge.svg?branch=dev&quot; alt=&quot;Github Tests&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We empower teams to achieve great things together for the good of society.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;OpenProject is a web-based project management software. Use OpenProject to manage your projects, tasks and goals. Collaborate via work packages and link them to your pull requests on Github. &lt;a href=&quot;https://www.openproject.org/docs/system-admin-guide/integrations/github-integration/&quot;&gt;Read more about the OpenProject GitHub integration&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/opf/openproject/dev/GitHub-tab-new.png&quot; alt=&quot;Screenshot of OpenProject, showing the GitHub tab on a work package&quot;&gt;&lt;/p&gt; 
&lt;p&gt;OpenProject&#39;s key features are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/collaboration-software-features/#project-planning&quot;&gt;Project planning and scheduling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/collaboration-software-features/#product-management&quot;&gt;Product roadmap and release planning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/collaboration-software-features/#task-management&quot;&gt;Task management and team collaboration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/collaboration-software-features/#agile-scrum&quot;&gt;Agile and Scrum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/collaboration-software-features/#time-tracking&quot;&gt;Time tracking, cost reporting, and budgeting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/collaboration-software-features/#bug-tracking&quot;&gt;Bug tracking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/docs/user-guide/wysiwyg/&quot;&gt;Wikis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/docs/user-guide/forums/&quot;&gt;Forums&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/docs/user-guide/meetings/&quot;&gt;Meeting agendas and meeting minutes&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;More information and screenshots can be found on our &lt;a href=&quot;https://www.openproject.org&quot;&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Start now with OpenProject&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free Trial&lt;/strong&gt;: &lt;a href=&quot;https://start.openproject.com/&quot;&gt;Start a 14-days free trial of OpenProject&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Community Edition&lt;/strong&gt;, free of charge: Download OpenProject and get started with the self-hosted Community edition. If you want to run an instance of OpenProject in production (or for evaluation), refer to our in-depth &lt;a href=&quot;https://www.openproject.org/download-and-installation/&quot;&gt;installation guides&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise Edition&lt;/strong&gt;: Sign up for the Enterprise version, choose between cloud or on-premises and benefit from comprehensive support and Enterprise add-ons.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: Explore our &lt;a href=&quot;https://www.openproject.org/docs/&quot;&gt;comprehensive documentation&lt;/a&gt; to help you get up and running quickly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Training&lt;/strong&gt;: &lt;a href=&quot;https://www.openproject.org/training-and-consulting/#training-signup&quot;&gt;Book one of our training or consulting offers&lt;/a&gt; to get your team on board in no time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Report bugs&lt;/h2&gt; 
&lt;p&gt;You found a bug? Please &lt;a href=&quot;https://www.openproject.org/docs/development/report-a-bug/&quot;&gt;report it&lt;/a&gt; to our &lt;a href=&quot;https://community.openproject.org/projects/openproject&quot;&gt;OpenProject Community&lt;/a&gt;. Thank you!&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenProject is supported by its Community members, both companies and individuals.&lt;/p&gt; 
&lt;p&gt;We are always looking for new members to our Community, so if you are interested in improving OpenProject we would be glad to welcome and support you getting into the code. There are guides as well, e.g. a &lt;a href=&quot;https://www.openproject.org/docs/development/development-environment/&quot;&gt;Quick Start for Developers&lt;/a&gt;, but don&#39;t hesitate to simply &lt;a href=&quot;https://www.openproject.org/contact&quot;&gt;contact us&lt;/a&gt; if you have questions.&lt;/p&gt; 
&lt;p&gt;Working on OpenProject comes with the satisfaction of working on a widely used open source application.&lt;/p&gt; 
&lt;p&gt;Also, if you do not want to be limited to working on open source in your free time, OpenProject GmbH, the company contributing to the OpenProject development, &lt;a href=&quot;https://www.openproject.org/career/&quot;&gt;is hiring&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Stay in contact&lt;/h2&gt; 
&lt;p&gt;Here you can find our &lt;a href=&quot;https://www.openproject.org/contact/&quot;&gt;contact information&lt;/a&gt;. As we regularly update OpenProject, we recommend staying in touch ‚Äì here is where you can find us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/blog/community-instance/&quot;&gt;OpenProject Community&lt;/a&gt; with &lt;a href=&quot;https://community.openproject.org/projects/openproject/forums&quot;&gt;forum discussions&lt;/a&gt;: The open instance where we develop our features ‚Äì transparent and open for discussions, bug reports or feature requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/company/18706985&quot;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/openproject/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fosstodon.org/@openproject&quot;&gt;Fosstodon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/openproject&quot;&gt;Twitter/X&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security / responsible disclosure&lt;/h2&gt; 
&lt;p&gt;We take security very seriously at OpenProject. We value any kind of feedback that will keep our Community secure. If you happen to come across a security issue we urge you to disclose it to us privately to allow our users and Community enough time to upgrade. Security issues will always take precedence over anything else in the pipeline.&lt;/p&gt; 
&lt;p&gt;For more information on how to disclose a security vulnerability, &lt;a href=&quot;https://raw.githubusercontent.com/opf/openproject/dev/docs/security-and-privacy/statement-on-security/README.md&quot;&gt;please see this page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenProject is licensed under the terms of the GNU General Public License version 3. See &lt;a href=&quot;https://raw.githubusercontent.com/opf/openproject/dev/COPYRIGHT&quot;&gt;COPYRIGHT&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/opf/openproject/dev/LICENSE&quot;&gt;LICENSE&lt;/a&gt; files for details.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;h3&gt;Icons&lt;/h3&gt; 
&lt;p&gt;Thanks to Vincent Le Moign and his fabulous Minicons icons on &lt;a href=&quot;http://www.webalys.com/minicons/icons-free-pack.php&quot;&gt;webalys.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;OpenProject icon font&lt;/h3&gt; 
&lt;p&gt;Published and created by the OpenProject Foundation (OPF) under &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons Attribution 3.0 Unported License&lt;/a&gt; with icons from the following sources &lt;a href=&quot;http://www.webalys.com/minicons&quot;&gt;Minicons Free Vector Icons Pack&lt;/a&gt; and &lt;a href=&quot;http://www.webalys.com/design-interface-application-framework.php&quot;&gt;User Interface Design framework&lt;/a&gt; both by webalys&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Creative Commons License&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;OpenProject Icon Font by the OpenProject Foundation (OPF) is licensed under Creative Commons Attribution 3.0 Unported License and Free for both personal and commercial use. You can copy, adapt, remix, distribute or transmit it.&lt;/p&gt; 
&lt;p&gt;Under this condition: provide a mention of the &quot;OpenProject Foundation&quot; and a link back to OpenProject &lt;a href=&quot;http://www.openproject.org&quot;&gt;www.openproject.org&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chatwoot/chatwoot</title>
      <link>https://github.com/chatwoot/chatwoot</link>
      <description>&lt;p&gt;Open-source live-chat, email support, omni-channel desk. An alternative to Intercom, Zendesk, Salesforce Service Cloud etc. üî•üí¨&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;üö® Note: This branch is unstable. For the stable branch&#39;s source code, please use the branch &lt;a href=&quot;https://github.com/chatwoot/chatwoot/tree/3.x&quot;&gt;3.x&lt;/a&gt;&lt;/h2&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/2246121/282256557-1570674b-d142-4198-9740-69404cc6a339.png#gh-light-mode-only&quot; width=&quot;100%&quot; alt=&quot;Chat dashboard dark mode&quot;&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/2246121/282256632-87f6a01b-6467-4e0e-8a93-7bbf66d03a17.png#gh-dark-mode-only&quot; width=&quot;100%&quot; alt=&quot;Chat dashboard&quot;&gt; 
&lt;hr&gt; 
&lt;h1&gt;Chatwoot&lt;/h1&gt; 
&lt;p&gt;Customer engagement suite, an open-source alternative to Intercom, Zendesk, Salesforce Service Cloud etc.&lt;/p&gt; 
&lt;p&gt; &lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/chatwoot/chatwoot/tree/master&quot; alt=&quot;Deploy to Heroku&quot;&gt; &lt;img width=&quot;150&quot; alt=&quot;Deploy&quot; src=&quot;https://www.herokucdn.com/deploy/button.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://marketplace.digitalocean.com/apps/chatwoot?refcode=f2238426a2a8&quot; alt=&quot;Deploy to DigitalOcean&quot;&gt; &lt;img width=&quot;200&quot; alt=&quot;Deploy to DO&quot; src=&quot;https://www.deploytodo.com/do-btn-blue.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt; &lt;a href=&quot;https://codeclimate.com/github/chatwoot/chatwoot/maintainability&quot;&gt;&lt;img src=&quot;https://api.codeclimate.com/v1/badges/e6e3f66332c91e5a4c0c/maintainability&quot; alt=&quot;Maintainability&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/circleci/build/github/chatwoot/chatwoot&quot; alt=&quot;CircleCI Badge&quot;&gt; &lt;a href=&quot;https://hub.docker.com/r/chatwoot/chatwoot/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/chatwoot/chatwoot&quot; alt=&quot;Docker Pull Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/chatwoot/chatwoot/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/cloud/build/chatwoot/chatwoot&quot; alt=&quot;Docker Build Badge&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/chatwoot/chatwoot&quot; alt=&quot;Commits-per-month&quot;&gt; &lt;a title=&quot;Crowdin&quot; target=&quot;_self&quot; href=&quot;https://chatwoot.crowdin.com/chatwoot&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/e/37ced7eba411064bd792feb3b7a28b16/localized.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/cJXdrwS&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/647412545203994635&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://status.chatwoot.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fchatwoot%2Fstatus%2Fmaster%2Fapi%2Fchatwoot%2Fuptime.json&quot; alt=&quot;uptime&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://status.chatwoot.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fchatwoot%2Fstatus%2Fmaster%2Fapi%2Fchatwoot%2Fresponse-time.json&quot; alt=&quot;response time&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://artifacthub.io/packages/helm/chatwoot/chatwoot&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/artifact-hub&quot; alt=&quot;Artifact HUB&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/2246121/282255783-ee8a50c9-f42d-4752-8201-2d59965a663d.png#gh-light-mode-only&quot; width=&quot;100%&quot; alt=&quot;Chat dashboard dark mode&quot;&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/2246121/282255784-3d1994ec-d895-4ff5-ac68-d819987e1869.png#gh-dark-mode-only&quot; width=&quot;100%&quot; alt=&quot;Chat dashboard&quot;&gt; 
&lt;p&gt;Chatwoot is an open-source, self-hosted customer engagement suite. Chatwoot lets you view and manage your customer data, communicate with them irrespective of which medium they use, and re-engage them based on their profile.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Chatwoot supports the following conversation channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Website&lt;/strong&gt;: Talk to your customers using our live chat widget and make use of our SDK to identify a user and provide contextual support.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Facebook&lt;/strong&gt;: Connect your Facebook pages and start replying to the direct messages to your page.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Instagram&lt;/strong&gt;: Connect your Instagram profile and start replying to the direct messages.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Twitter&lt;/strong&gt;: Connect your Twitter profiles and reply to direct messages or the tweets where you are mentioned.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Telegram&lt;/strong&gt;: Connect your Telegram bot and reply to your customers right from a single dashboard.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WhatsApp&lt;/strong&gt;: Connect your WhatsApp business account and manage the conversation in Chatwoot.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Line&lt;/strong&gt;: Connect your Line account and manage the conversations in Chatwoot.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SMS&lt;/strong&gt;: Connect your Twilio SMS account and reply to the SMS queries in Chatwoot.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API Channel&lt;/strong&gt;: Build custom communication channels using our API channel.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt;: Forward all your email queries to Chatwoot and view it in our integrated dashboard.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And more.&lt;/p&gt; 
&lt;p&gt;Other features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;CRM&lt;/strong&gt;: Save all your customer information right inside Chatwoot, use contact notes to log emails, phone calls, or meeting notes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Attributes&lt;/strong&gt;: Define custom attribute attributes to store information about a contact or a conversation and extend the product to match your workflow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shared multi-brand inboxes&lt;/strong&gt;: Manage multiple brands or pages using a shared inbox.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Private notes&lt;/strong&gt;: Use @mentions and private notes to communicate internally about a conversation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Canned responses (Saved replies)&lt;/strong&gt;: Improve the response rate by adding saved replies for frequently asked questions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Conversation Labels&lt;/strong&gt;: Use conversation labels to create custom workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto assignment&lt;/strong&gt;: Chatwoot intelligently assigns a ticket to the agents who have access to the inbox depending on their availability and load.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Conversation continuity&lt;/strong&gt;: If the user has provided an email address through the chat widget, Chatwoot will send an email to the customer under the agent name so that the user can continue the conversation over the email.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-lingual support&lt;/strong&gt;: Chatwoot supports 10+ languages.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Powerful API &amp;amp; Webhooks&lt;/strong&gt;: Extend the capability of the software using Chatwoot‚Äôs webhooks and APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt;: Chatwoot natively integrates with Slack right now. Manage your conversations in Slack without logging into the dashboard.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Detailed documentation is available at &lt;a href=&quot;https://www.chatwoot.com/help-center&quot;&gt;chatwoot.com/help-center&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Translation process&lt;/h2&gt; 
&lt;p&gt;The translation process for Chatwoot web and mobile app is managed at &lt;a href=&quot;https://translate.chatwoot.com&quot;&gt;https://translate.chatwoot.com&lt;/a&gt; using Crowdin. Please read the &lt;a href=&quot;https://www.chatwoot.com/docs/contributing/translating-chatwoot-to-your-language&quot;&gt;translation guide&lt;/a&gt; for contributing to Chatwoot.&lt;/p&gt; 
&lt;h2&gt;Branching model&lt;/h2&gt; 
&lt;p&gt;We use the &lt;a href=&quot;https://nvie.com/posts/a-successful-git-branching-model/&quot;&gt;git-flow&lt;/a&gt; branching model. The base branch is &lt;code&gt;develop&lt;/code&gt;. If you are looking for a stable version, please use the &lt;code&gt;master&lt;/code&gt; or tags labelled as &lt;code&gt;v1.x.x&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;h3&gt;Heroku one-click deploy&lt;/h3&gt; 
&lt;p&gt;Deploying Chatwoot to Heroku is a breeze. It&#39;s as simple as clicking this button:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/chatwoot/chatwoot/tree/master&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg?sanitize=true&quot; alt=&quot;Deploy&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Follow this &lt;a href=&quot;https://www.chatwoot.com/docs/environment-variables&quot;&gt;link&lt;/a&gt; to understand setting the correct environment variables for the app to work with all the features. There might be breakages if you do not set the relevant environment variables.&lt;/p&gt; 
&lt;h3&gt;DigitalOcean 1-Click Kubernetes deployment&lt;/h3&gt; 
&lt;p&gt;Chatwoot now supports 1-Click deployment to DigitalOcean as a kubernetes app.&lt;/p&gt; 
&lt;a href=&quot;https://marketplace.digitalocean.com/apps/chatwoot?refcode=f2238426a2a8&quot; alt=&quot;Deploy to DigitalOcean&quot;&gt; &lt;img width=&quot;200&quot; alt=&quot;Deploy to DO&quot; src=&quot;https://www.deploytodo.com/do-btn-blue.svg?sanitize=true&quot;&gt; &lt;/a&gt; 
&lt;h3&gt;Other deployment options&lt;/h3&gt; 
&lt;p&gt;For other supported options, checkout our &lt;a href=&quot;https://chatwoot.com/deploy&quot;&gt;deployment page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Looking to report a vulnerability? Please refer our &lt;a href=&quot;https://raw.githubusercontent.com/chatwoot/chatwoot/develop/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Community? Questions? Support ?&lt;/h2&gt; 
&lt;p&gt;If you need help or just want to hang out, come, say hi on our &lt;a href=&quot;https://discord.gg/cJXdrwS&quot;&gt;Discord&lt;/a&gt; server.&lt;/p&gt; 
&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; 
&lt;p&gt;Thanks goes to all these &lt;a href=&quot;https://www.chatwoot.com/docs/contributors&quot;&gt;wonderful people&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chatwoot/chatwoot/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/chatwoot/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Chatwoot&lt;/em&gt; ¬© 2017-2025, Chatwoot Inc - Released under the MIT License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docusealco/docuseal</title>
      <link>https://github.com/docusealco/docuseal</link>
      <description>&lt;p&gt;Open source DocuSign alternative. Create, fill, and sign digital documents ‚úçÔ∏è&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot; style=&quot;border-bottom: none&quot;&gt; 
 &lt;div&gt; 
  &lt;a href=&quot;https://www.docuseal.com&quot;&gt; &lt;img alt=&quot;DocuSeal&quot; src=&quot;https://github.com/docusealco/docuseal/assets/5418788/c12cd051-81cd-4402-bc3a-92f2cfdc1b06&quot; width=&quot;80&quot;&gt; &lt;br&gt; &lt;/a&gt; DocuSeal 
 &lt;/div&gt; &lt;/h1&gt; 
&lt;h3 align=&quot;center&quot;&gt; Open source document filling and signing &lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://hub.docker.com/r/docuseal/docuseal&quot;&gt; &lt;img alt=&quot;Docker releases&quot; src=&quot;https://img.shields.io/docker/v/docuseal/docuseal&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://discord.gg/qygYCDGck9&quot;&gt; &lt;img src=&quot;https://img.shields.io/discord/1125112641170448454?logo=discord&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=docusealco&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/docusealco?style=social&quot; alt=&quot;Follow @docusealco&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt; DocuSeal is an open source platform that provides secure and efficient digital document signing and processing. Create PDF forms to have them filled and signed online on any device with an easy-to-use, mobile-optimized web tool. &lt;/p&gt; 
&lt;h2 align=&quot;center&quot;&gt; &lt;a href=&quot;https://demo.docuseal.tech&quot;&gt;‚ú® Live Demo&lt;/a&gt; &lt;span&gt;|&lt;/span&gt; &lt;a href=&quot;https://docuseal.com/sign_up&quot;&gt;‚òÅÔ∏è Try in Cloud&lt;/a&gt; &lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://demo.docuseal.tech&quot;&gt;&lt;img src=&quot;https://github.com/docusealco/docuseal/assets/5418788/d8703ea3-361a-423f-8bfe-eff1bd9dbe14&quot; alt=&quot;Demo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;PDF form fields builder (WYSIWYG)&lt;/li&gt; 
 &lt;li&gt;12 field types available (Signature, Date, File, Checkbox etc.)&lt;/li&gt; 
 &lt;li&gt;Multiple submitters per document&lt;/li&gt; 
 &lt;li&gt;Automated emails via SMTP&lt;/li&gt; 
 &lt;li&gt;Files storage on disk or AWS S3, Google Storage, Azure Cloud&lt;/li&gt; 
 &lt;li&gt;Automatic PDF eSignature&lt;/li&gt; 
 &lt;li&gt;PDF signature verification&lt;/li&gt; 
 &lt;li&gt;Users management&lt;/li&gt; 
 &lt;li&gt;Mobile-optimized&lt;/li&gt; 
 &lt;li&gt;6 UI languages with signing available in 13 languages&lt;/li&gt; 
 &lt;li&gt;API and Webhooks for integrations&lt;/li&gt; 
 &lt;li&gt;Easy to deploy in minutes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Pro Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Company logo and white-label&lt;/li&gt; 
 &lt;li&gt;User roles&lt;/li&gt; 
 &lt;li&gt;Automated reminders&lt;/li&gt; 
 &lt;li&gt;Invitation and identify verification via SMS&lt;/li&gt; 
 &lt;li&gt;Conditional fields and formulas&lt;/li&gt; 
 &lt;li&gt;Bulk send with CSV, XLSX spreadsheet import&lt;/li&gt; 
 &lt;li&gt;SSO / SAML&lt;/li&gt; 
 &lt;li&gt;Template creation with HTML API (&lt;a href=&quot;https://www.docuseal.com/guides/create-pdf-document-fillable-form-with-html-api&quot;&gt;Guide&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Template creation with PDF or DOCX and field tags API (&lt;a href=&quot;https://www.docuseal.com/guides/use-embedded-text-field-tags-in-the-pdf-to-create-a-fillable-form&quot;&gt;Guide&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Embedded signing form (&lt;a href=&quot;https://github.com/docusealco/docuseal-react&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;https://github.com/docusealco/docuseal-vue&quot;&gt;Vue&lt;/a&gt;, &lt;a href=&quot;https://github.com/docusealco/docuseal-angular&quot;&gt;Angular&lt;/a&gt; or &lt;a href=&quot;https://www.docuseal.com/docs/embedded&quot;&gt;JavaScript&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Embedded document form builder (&lt;a href=&quot;https://github.com/docusealco/docuseal-react&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;https://github.com/docusealco/docuseal-vue&quot;&gt;Vue&lt;/a&gt;, &lt;a href=&quot;https://github.com/docusealco/docuseal-angular&quot;&gt;Angular&lt;/a&gt; or &lt;a href=&quot;https://www.docuseal.com/docs/embedded&quot;&gt;JavaScript&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.docuseal.com/pricing&quot;&gt;Learn more&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deploy&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Heroku&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Railway&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/docusealco/docuseal-heroku&quot;&gt;&lt;img alt=&quot;Deploy on Heroku&quot; src=&quot;https://www.herokucdn.com/deploy/button.svg?sanitize=true&quot; height=&quot;40&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://railway.app/template/IGoDnc?referralCode=ruU7JR&quot;&gt;&lt;img alt=&quot;Deploy on Railway&quot; src=&quot;https://railway.app/button.svg?sanitize=true&quot; height=&quot;40&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;DigitalOcean&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Render&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://cloud.digitalocean.com/apps/new?repo=https://github.com/docusealco/docuseal-digitalocean/tree/master&amp;amp;refcode=421d50f53990&quot;&gt;&lt;img alt=&quot;Deploy on DigitalOcean&quot; src=&quot;https://www.deploytodo.com/do-btn-blue.svg?sanitize=true&quot; height=&quot;40&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://render.com/deploy?repo=https://github.com/docusealco/docuseal-render&quot;&gt;&lt;img alt=&quot;Deploy to Render&quot; src=&quot;https://render.com/images/deploy-to-render-button.svg?sanitize=true&quot; height=&quot;40&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Docker&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;docker run --name docuseal -p 3000:3000 -v.:/data docuseal/docuseal
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default DocuSeal docker container uses an SQLite database to store data and configurations. Alternatively, it is possible use PostgreSQL or MySQL databases by specifying the &lt;code&gt;DATABASE_URL&lt;/code&gt; env variable.&lt;/p&gt; 
&lt;h4&gt;Docker Compose&lt;/h4&gt; 
&lt;p&gt;Download docker-compose.yml into your private server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl https://raw.githubusercontent.com/docusealco/docuseal/master/docker-compose.yml &amp;gt; docker-compose.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the app under a custom domain over https using docker compose (make sure your DNS points to the server to automatically issue ssl certs with Caddy):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo HOST=your-domain-name.com docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;For Businesses&lt;/h2&gt; 
&lt;h3&gt;Integrate seamless document signing into your web or mobile apps with DocuSeal&lt;/h3&gt; 
&lt;p&gt;At DocuSeal we have expertise and technologies to make documents creation, filling, signing and processing seamlessly integrated with your product. We specialize in working with various industries, including &lt;strong&gt;Banking, Healthcare, Transport, Real Estate, eCommerce, KYC, CRM, and other software products&lt;/strong&gt; that require bulk document signing. By leveraging DocuSeal, we can assist in reducing the overall cost of developing and processing electronic documents while ensuring security and compliance with local electronic document laws.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.docuseal.com/contact&quot;&gt;Book a Meeting&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Distributed under the AGPLv3 License. See &lt;a href=&quot;https://github.com/docusealco/docuseal/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for more information. Unless otherwise noted, all files ¬© 2023 DocuSeal LLC.&lt;/p&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.docuseal.com/online-signature&quot;&gt;Signature Maker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.docuseal.com/sign-documents-online&quot;&gt;Sign Document Online&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.docuseal.com/fill-pdf&quot;&gt;Fill PDF Online&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ruby/ruby</title>
      <link>https://github.com/ruby/ruby</link>
      <description>&lt;p&gt;The Ruby Programming Language&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ruby/ruby/actions?query=workflow%3A%22MinGW%22&quot;&gt;&lt;img src=&quot;https://github.com/ruby/ruby/workflows/MinGW/badge.svg?sanitize=true&quot; alt=&quot;Actions Status: MinGW&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ruby/ruby/actions?query=workflow%3A%22Ubuntu%22&quot;&gt;&lt;img src=&quot;https://github.com/ruby/ruby/workflows/Ubuntu/badge.svg?sanitize=true&quot; alt=&quot;Actions Status: Ubuntu&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ruby/ruby/actions?query=workflow%3A%22Windows%22&quot;&gt;&lt;img src=&quot;https://github.com/ruby/ruby/workflows/Windows/badge.svg?sanitize=true&quot; alt=&quot;Actions Status: Windows&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.travis-ci.com/ruby/ruby&quot;&gt;&lt;img src=&quot;https://app.travis-ci.com/ruby/ruby.svg?branch=master&quot; alt=&quot;Travis Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;What is Ruby?&lt;/h1&gt; 
&lt;p&gt;Ruby is an interpreted object-oriented programming language often used for web development. It also offers many scripting features to process plain text and serialized files, or manage system tasks. It is simple, straightforward, and extensible.&lt;/p&gt; 
&lt;h2&gt;Features of Ruby&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple Syntax&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Normal&lt;/strong&gt; Object-oriented Features (e.g. class, method calls)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced&lt;/strong&gt; Object-oriented Features (e.g. mix-in, singleton-method)&lt;/li&gt; 
 &lt;li&gt;Operator Overloading&lt;/li&gt; 
 &lt;li&gt;Exception Handling&lt;/li&gt; 
 &lt;li&gt;Iterators and Closures&lt;/li&gt; 
 &lt;li&gt;Garbage Collection&lt;/li&gt; 
 &lt;li&gt;Dynamic Loading of Object Files (on some architectures)&lt;/li&gt; 
 &lt;li&gt;Highly Portable (works on many Unix-like/POSIX compatible platforms as well as Windows, macOS, etc.) cf. &lt;a href=&quot;https://docs.ruby-lang.org/en/master/maintainers_md.html#label-Platform+Maintainers&quot;&gt;https://docs.ruby-lang.org/en/master/maintainers_md.html#label-Platform+Maintainers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to get Ruby&lt;/h2&gt; 
&lt;p&gt;For a complete list of ways to install Ruby, including using third-party tools like rvm, see:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;https://www.ruby-lang.org/en/downloads/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can download release packages and the snapshot of the repository. If you want to download whole versions of Ruby, please visit &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/releases/&quot;&gt;https://www.ruby-lang.org/en/downloads/releases/&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Download with Git&lt;/h3&gt; 
&lt;p&gt;The mirror of the Ruby source tree can be checked out with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ruby/ruby.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are some other branches under development. Try the following command to see the list of branches:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git ls-remote https://github.com/ruby/ruby.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also want to use &lt;a href=&quot;https://git.ruby-lang.org/ruby.git&quot;&gt;https://git.ruby-lang.org/ruby.git&lt;/a&gt; (actual master of Ruby source) if you are a committer.&lt;/p&gt; 
&lt;h2&gt;How to build&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://docs.ruby-lang.org/en/master/contributing/building_ruby_md.html&quot;&gt;Building Ruby&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Ruby home page&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.ruby-lang.org/&quot;&gt;https://www.ruby-lang.org/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ruby-lang.org/en/master/index.html&quot;&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ruby-lang.org/ja/master/index.html&quot;&gt;Japanese&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Mailing list&lt;/h2&gt; 
&lt;p&gt;There is a mailing list to discuss Ruby. To subscribe to this list, please send the following phrase:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;join
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;in the mail subject (not body) to the address &lt;a href=&quot;mailto:ruby-talk-request@ml.ruby-lang.org?subject=join&quot;&gt;ruby-talk-request@ml.ruby-lang.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Copying&lt;/h2&gt; 
&lt;p&gt;See the file &lt;a href=&quot;rdoc-ref:COPYING&quot;&gt;COPYING&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feedback&lt;/h2&gt; 
&lt;p&gt;Questions about the Ruby language can be asked on the &lt;a href=&quot;https://www.ruby-lang.org/en/community/mailing-lists&quot;&gt;Ruby-Talk&lt;/a&gt; mailing list or on websites like &lt;a href=&quot;https://stackoverflow.com&quot;&gt;https://stackoverflow.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Bugs should be reported at &lt;a href=&quot;https://bugs.ruby-lang.org&quot;&gt;https://bugs.ruby-lang.org&lt;/a&gt;. Read &lt;a href=&quot;https://docs.ruby-lang.org/en/master/contributing/reporting_issues_md.html&quot;&gt;&quot;Reporting Issues&quot;&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://docs.ruby-lang.org/en/master/contributing_md.html&quot;&gt;&quot;Contributing to Ruby&quot;&lt;/a&gt;, which includes setup and build instructions.&lt;/p&gt; 
&lt;h2&gt;The Author&lt;/h2&gt; 
&lt;p&gt;Ruby was originally designed and developed by Yukihiro Matsumoto (Matz) in 1995.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;mailto:matz@ruby-lang.org&quot;&gt;matz@ruby-lang.org&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>18F/identity-idp</title>
      <link>https://github.com/18F/identity-idp</link>
      <description>&lt;p&gt;Login.gov Core App: Identity Provider (IdP)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Login.gov Identity Provider (IdP)&lt;/h1&gt; 
&lt;p&gt;Login.gov is the public&#39;s one account for government. Use one account and password for secure, private access to participating government agencies.&lt;/p&gt; 
&lt;p&gt;This repository contains the core code base and documentation for the identity management system powering secure.login.gov.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This file is auto-generated&lt;/strong&gt;. Run &lt;code&gt;make README.md&lt;/code&gt; to regenerate its contents.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Refer to the &lt;a href=&quot;https://raw.githubusercontent.com/18F/identity-idp/main/docs/local-development.md&quot;&gt;&lt;em&gt;Local Development&lt;/em&gt; documentation&lt;/a&gt; to learn how to set up your environment for local development.&lt;/p&gt; 
&lt;h2&gt;Guides&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/18F/identity-idp/main/CONTRIBUTING.md&quot;&gt;The Contributing Guide&lt;/a&gt; includes basic guidelines around pull requests, commit messages, and the code review process.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://handbook.login.gov/&quot;&gt;The Login.gov Handbook&lt;/a&gt; describes organizational practices, including process runbooks and team structures.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/18F/identity-idp/main/docs/ab-testing.md&quot;&gt;A/B Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/18F/identity-idp/main/docs/backend.md&quot;&gt;Back-end Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/18F/identity-idp/main/docs/frontend.md&quot;&gt;Front-end Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/18F/identity-idp/main/docs/local-development.md&quot;&gt;Local Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/18F/identity-idp/main/docs/mobile.md&quot;&gt;Mobile local development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/18F/identity-idp/main/docs/SECURITY.md&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/18F/identity-idp/main/docs/troubleshooting.md&quot;&gt;Troubleshooting Local Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/18F/identity-idp/main/docs/sdk-upgrade.md&quot;&gt;Upgrade and A/B test Acuant SDK&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Homebrew/brew</title>
      <link>https://github.com/Homebrew/brew</link>
      <description>&lt;p&gt;üç∫ The missing package manager for macOS (or Linux)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Homebrew&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Homebrew/brew/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/Homebrew/brew.svg?sanitize=true&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Features, usage and installation instructions are &lt;a href=&quot;https://brew.sh&quot;&gt;summarised on the homepage&lt;/a&gt;. Terminology (e.g. the difference between a Cellar, Tap, Cask and so forth) is &lt;a href=&quot;https://docs.brew.sh/Formula-Cookbook#homebrew-terminology&quot;&gt;explained here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;What Packages Are Available?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Type &lt;code&gt;brew formulae&lt;/code&gt; for a list.&lt;/li&gt; 
 &lt;li&gt;Or visit &lt;a href=&quot;https://formulae.brew.sh&quot;&gt;formulae.brew.sh&lt;/a&gt; to browse packages online.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;More Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;brew help&lt;/code&gt;, &lt;code&gt;man brew&lt;/code&gt; or check &lt;a href=&quot;https://docs.brew.sh/&quot;&gt;our documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;First, please run &lt;code&gt;brew update&lt;/code&gt; and &lt;code&gt;brew doctor&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Second, read the &lt;a href=&quot;https://docs.brew.sh/Troubleshooting&quot;&gt;Troubleshooting Checklist&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If you don&#39;t read these it will take us far longer to help you with your problem.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;Homebrew is a non-profit project run entirely by unpaid volunteers. We need your funds to pay for software, hardware and hosting around continuous integration and future improvements to the project. Every donation will be spent on making Homebrew better for our users.&lt;/p&gt; 
&lt;p&gt;Please consider a regular donation through &lt;a href=&quot;https://github.com/sponsors/Homebrew&quot;&gt;GitHub Sponsors&lt;/a&gt;, &lt;a href=&quot;https://opencollective.com/homebrew&quot;&gt;Open Collective&lt;/a&gt; or &lt;a href=&quot;https://www.patreon.com/homebrew&quot;&gt;Patreon&lt;/a&gt;. Homebrew is fiscally hosted by the &lt;a href=&quot;https://opencollective.com/opensource&quot;&gt;Open Source Collective&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For questions about donations, including corporate giving, please email the Homebrew PLC at &lt;a href=&quot;mailto:plc@brew.sh&quot;&gt;plc@brew.sh&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/orgs/Homebrew/discussions&quot;&gt;Homebrew/discussions (forum)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fosstodon.org/@homebrew&quot;&gt;@homebrew@fosstodon.org (Mastodon)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://x.com/MacHomebrew&quot;&gt;@MacHomebrew (ùïè (formerly known as Twitter))&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We&#39;d love you to contribute to Homebrew. First, please read our &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/brew/master/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/.github/raw/HEAD/CODE_OF_CONDUCT.md#code-of-conduct&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We explicitly welcome contributions from people who have never contributed to open-source before: we were all beginners once! We can help build on a partially working pull request with the aim of getting it merged. We are also actively seeking to diversify our contributors and especially welcome contributions from women from all backgrounds and people of colour.&lt;/p&gt; 
&lt;p&gt;A good starting point for contributing is to first &lt;a href=&quot;https://docs.brew.sh/FAQ#can-i-edit-formulae-myself&quot;&gt;tap &lt;code&gt;homebrew/core&lt;/code&gt;&lt;/a&gt;, then run &lt;code&gt;brew audit --strict&lt;/code&gt; with some of the packages you use (e.g. &lt;code&gt;brew audit --strict wget&lt;/code&gt; if you use &lt;code&gt;wget&lt;/code&gt;) and read through the warnings. Try to fix them until &lt;code&gt;brew audit --strict&lt;/code&gt; shows no results and &lt;a href=&quot;https://docs.brew.sh/How-To-Open-a-Homebrew-Pull-Request&quot;&gt;submit a pull request&lt;/a&gt;. If no formulae you use have warnings you can run &lt;code&gt;brew audit --strict&lt;/code&gt; without arguments to have it run on all packages and pick one.&lt;/p&gt; 
&lt;p&gt;Alternatively, for something more substantial, check out one of the issues labelled &lt;code&gt;help wanted&lt;/code&gt; in &lt;a href=&quot;https://github.com/homebrew/brew/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22&quot;&gt;Homebrew/brew&lt;/a&gt; or &lt;a href=&quot;https://github.com/homebrew/homebrew-core/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22&quot;&gt;Homebrew/homebrew-core&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Good luck!&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Please report security issues by filling in &lt;a href=&quot;https://github.com/homebrew/brew/security/advisories/new&quot;&gt;the security advisory form&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Who We Are&lt;/h2&gt; 
&lt;p&gt;Homebrew&#39;s &lt;a href=&quot;https://docs.brew.sh/Homebrew-Governance#6-project-leader&quot;&gt;Project Leader&lt;/a&gt; is &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;Mike McQuaid&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Homebrew&#39;s &lt;a href=&quot;https://docs.brew.sh/Homebrew-Governance#4-project-leadership-committee&quot;&gt;Project Leadership Committee&lt;/a&gt; is &lt;a href=&quot;https://github.com/colindean&quot;&gt;Colin Dean&lt;/a&gt;, &lt;a href=&quot;https://github.com/iMichka&quot;&gt;Michka Popoff&lt;/a&gt;, &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;Mike McQuaid&lt;/a&gt;, &lt;a href=&quot;https://github.com/p-linnane&quot;&gt;Patrick Linnane&lt;/a&gt; and &lt;a href=&quot;https://github.com/mozzadrella&quot;&gt;Vanessa Gennarelli&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Homebrew&#39;s &lt;a href=&quot;https://docs.brew.sh/Homebrew-Governance#7-technical-steering-committee&quot;&gt;Technical Steering Committee&lt;/a&gt; is &lt;a href=&quot;https://github.com/Bo98&quot;&gt;Bo Anderson&lt;/a&gt;, &lt;a href=&quot;https://github.com/fxcoudert&quot;&gt;FX Coudert&lt;/a&gt;, &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;Mike McQuaid&lt;/a&gt; and &lt;a href=&quot;https://github.com/Rylan12&quot;&gt;Rylan Polster&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Homebrew&#39;s maintainers are &lt;a href=&quot;https://github.com/bayandin&quot;&gt;Alexander Bayandin&lt;/a&gt;, &lt;a href=&quot;https://github.com/bevanjkay&quot;&gt;Bevan Kay&lt;/a&gt;, &lt;a href=&quot;https://github.com/Bo98&quot;&gt;Bo Anderson&lt;/a&gt;, &lt;a href=&quot;https://github.com/branchvincent&quot;&gt;Branch Vincent&lt;/a&gt;, &lt;a href=&quot;https://github.com/alebcay&quot;&gt;Caleb Xu&lt;/a&gt;, &lt;a href=&quot;https://github.com/carlocab&quot;&gt;Carlo Cabrera&lt;/a&gt;, &lt;a href=&quot;https://github.com/daeho-ro&quot;&gt;Daeho Ro&lt;/a&gt;, &lt;a href=&quot;https://github.com/dduugg&quot;&gt;Douglas Eichelberger&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtrodrigues&quot;&gt;Dustin Rodrigues&lt;/a&gt;, &lt;a href=&quot;https://github.com/EricFromCanada&quot;&gt;Eric Knibbe&lt;/a&gt;, &lt;a href=&quot;https://github.com/fxcoudert&quot;&gt;FX Coudert&lt;/a&gt;, &lt;a href=&quot;https://github.com/issyl0&quot;&gt;Issy Long&lt;/a&gt;, &lt;a href=&quot;https://github.com/krehel&quot;&gt;Justin Krehel&lt;/a&gt;, &lt;a href=&quot;https://github.com/khipp&quot;&gt;Klaus Hipp&lt;/a&gt;, &lt;a href=&quot;https://github.com/reitermarkus&quot;&gt;Markus Reiter&lt;/a&gt;, &lt;a href=&quot;https://github.com/cho-m&quot;&gt;Michael Cho&lt;/a&gt;, &lt;a href=&quot;https://github.com/iMichka&quot;&gt;Michka Popoff&lt;/a&gt;, &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;Mike McQuaid&lt;/a&gt;, &lt;a href=&quot;https://github.com/nandahkrishna&quot;&gt;Nanda H Krishna&lt;/a&gt;, &lt;a href=&quot;https://github.com/p-linnane&quot;&gt;Patrick Linnane&lt;/a&gt;, &lt;a href=&quot;https://github.com/chenrui333&quot;&gt;Rui Chen&lt;/a&gt;, &lt;a href=&quot;https://github.com/ZhongRuoyu&quot;&gt;Ruoyu Zhong&lt;/a&gt;, &lt;a href=&quot;https://github.com/Rylan12&quot;&gt;Rylan Polster&lt;/a&gt;, &lt;a href=&quot;https://github.com/samford&quot;&gt;Sam Ford&lt;/a&gt;, &lt;a href=&quot;https://github.com/SMillerDev&quot;&gt;Sean Molenaar&lt;/a&gt;, &lt;a href=&quot;https://github.com/stefanb&quot;&gt;≈†tefan Baebler&lt;/a&gt;, &lt;a href=&quot;https://github.com/Moisan&quot;&gt;Thierry Moisan&lt;/a&gt;, &lt;a href=&quot;https://github.com/timsutton&quot;&gt;Timothy Sutton&lt;/a&gt; and &lt;a href=&quot;https://github.com/woodruffw&quot;&gt;William Woodruff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Former maintainers with significant contributions include &lt;a href=&quot;https://github.com/miccal&quot;&gt;Miccal Matthews&lt;/a&gt;, &lt;a href=&quot;https://github.com/mistydemeo&quot;&gt;Misty De M√©o&lt;/a&gt;, &lt;a href=&quot;https://github.com/sjackman&quot;&gt;Shaun Jackman&lt;/a&gt;, &lt;a href=&quot;https://github.com/vitorgalvao&quot;&gt;V√≠tor Galv√£o&lt;/a&gt;, &lt;a href=&quot;https://github.com/claui&quot;&gt;Claudia Pellegrino&lt;/a&gt;, &lt;a href=&quot;https://github.com/SeekingMeaning&quot;&gt;Seeker&lt;/a&gt;, &lt;a href=&quot;https://github.com/javian&quot;&gt;Jan Viljanen&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcount&quot;&gt;JCount&lt;/a&gt;, &lt;a href=&quot;https://github.com/commitay&quot;&gt;commitay&lt;/a&gt;, &lt;a href=&quot;https://github.com/DomT4&quot;&gt;Dominyk Tiller&lt;/a&gt;, &lt;a href=&quot;https://github.com/tdsmith&quot;&gt;Tim Smith&lt;/a&gt;, &lt;a href=&quot;https://github.com/bfontaine&quot;&gt;Baptiste Fontaine&lt;/a&gt;, &lt;a href=&quot;https://github.com/xu-cheng&quot;&gt;Xu Cheng&lt;/a&gt;, &lt;a href=&quot;https://github.com/UniqMartin&quot;&gt;Martin Afanasjew&lt;/a&gt;, &lt;a href=&quot;https://github.com/asparagui&quot;&gt;Brett Koonce&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sharpie&quot;&gt;Charlie Sharpsteen&lt;/a&gt;, &lt;a href=&quot;https://github.com/jacknagel&quot;&gt;Jack Nagel&lt;/a&gt;, &lt;a href=&quot;https://github.com/adamv&quot;&gt;Adam Vandenberg&lt;/a&gt;, &lt;a href=&quot;https://github.com/apjanke&quot;&gt;Andrew Janke&lt;/a&gt;, &lt;a href=&quot;https://github.com/dunn&quot;&gt;Alex Dunn&lt;/a&gt;, &lt;a href=&quot;https://github.com/neutric&quot;&gt;neutric&lt;/a&gt;, &lt;a href=&quot;https://github.com/nijikon&quot;&gt;Tomasz Pajor&lt;/a&gt;, &lt;a href=&quot;https://github.com/vladshablinsky&quot;&gt;Uladzislau Shablinski&lt;/a&gt;, &lt;a href=&quot;https://github.com/alyssais&quot;&gt;Alyssa Ross&lt;/a&gt;, &lt;a href=&quot;https://github.com/ilovezfs&quot;&gt;ilovezfs&lt;/a&gt;, &lt;a href=&quot;https://github.com/lembacon&quot;&gt;Chongyu Zhu&lt;/a&gt; and Homebrew&#39;s creator: &lt;a href=&quot;https://github.com/mxcl&quot;&gt;Max Howell&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Code is under the &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/brew/master/LICENSE.txt&quot;&gt;BSD 2-clause &quot;Simplified&quot; License&lt;/a&gt;. Documentation is under the &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Our macOS continuous integration infrastructure is hosted by &lt;a href=&quot;https://www.macstadium.com/customers/homebrew&quot;&gt;MacStadium&#39;s Orka&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.macstadium.com&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/125011/22776032/097557ac-eea6-11e6-8ba8-eff22dfd58f1.png&quot; alt=&quot;Powered by MacStadium&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Secure password storage and syncing is provided by &lt;a href=&quot;https://1password.com/teams/&quot;&gt;1Password for Teams&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://1password.com&quot;&gt;&lt;img src=&quot;https://i.1password.com/akb/featured/1password-icon.svg?sanitize=true&quot; alt=&quot;1Password&quot; height=&quot;64&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://brew.sh&quot;&gt;https://brew.sh&lt;/a&gt;&#39;s DNS is &lt;a href=&quot;https://dnsimple.com/resolving/homebrew&quot;&gt;resolving with DNSimple&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://dnsimple.com/resolving/homebrew#gh-light-mode-only&quot;&gt;&lt;img src=&quot;https://cdn.dnsimple.com/assets/resolving-with-us/logo-light.png&quot; alt=&quot;DNSimple&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dnsimple.com/resolving/homebrew#gh-dark-mode-only&quot;&gt;&lt;img src=&quot;https://cdn.dnsimple.com/assets/resolving-with-us/logo-dark.png&quot; alt=&quot;DNSimple&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Homebrew is generously supported by &lt;a href=&quot;https://github.com/github&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;https://github.com/customink&quot;&gt;Custom Ink&lt;/a&gt;, &lt;a href=&quot;https://github.com/ydnar&quot;&gt;Randy Reddig&lt;/a&gt;, &lt;a href=&quot;https://github.com/henokmikre&quot;&gt;Henok Mikre&lt;/a&gt;, &lt;a href=&quot;https://github.com/Codecademy&quot;&gt;Codecademy&lt;/a&gt;, &lt;a href=&quot;https://github.com/MacPaw&quot;&gt;MacPaw Inc.&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikadelbert&quot;&gt;mikadelbert&lt;/a&gt;, &lt;a href=&quot;https://github.com/Workbrew&quot;&gt;Workbrew&lt;/a&gt; and many other users and organisations via &lt;a href=&quot;https://github.com/sponsors/Homebrew&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/github&quot;&gt;&lt;img src=&quot;https://github.com/github.png?size=64&quot; alt=&quot;GitHub&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>postalserver/postal</title>
      <link>https://github.com/postalserver/postal</link>
      <description>&lt;p&gt;üìÆ A fully featured open source mail delivery platform for incoming &amp; outgoing e-mail&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://github.com/postalserver/.github/assets/4765/7a63c35d-2f47-412f-a6b3-aebc92a55310&quot; alt=&quot;GitHub Header&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Postal&lt;/strong&gt; is a complete and fully featured mail server for use by websites &amp;amp; web servers. Think Sendgrid, Mailgun or Postmark but open source and ready for you to run on your own servers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.postalserver.io&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.postalserver.io/getting-started&quot;&gt;Installation Instructions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.postalserver.io/welcome/faqs&quot;&gt;FAQs&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://docs.postalserver.io/welcome/feature-list&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/postalserver/postal/discussions&quot;&gt;Discussions&lt;/a&gt; - ask for help or request a feature&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.postalserver.io&quot;&gt;Join us on Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>instructure/canvas-lms</title>
      <link>https://github.com/instructure/canvas-lms</link>
      <description>&lt;p&gt;The open LMS by Instructure, Inc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Canvas LMS&lt;/h1&gt; 
&lt;p&gt;Canvas is a modern, open-source &lt;a href=&quot;https://en.wikipedia.org/wiki/Learning_management_system&quot;&gt;LMS&lt;/a&gt; developed and maintained by &lt;a href=&quot;https://www.instructure.com/&quot;&gt;Instructure Inc.&lt;/a&gt; It is released under the AGPLv3 license for use by anyone interested in learning more about or using learning management systems.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://github.com/instructure/canvas-lms/wiki&quot;&gt;Please see our main wiki page for more information&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Detailed instructions for installation and configuration of Canvas are provided on our wiki.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://github.com/instructure/canvas-lms/wiki/Quick-Start&quot;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://github.com/instructure/canvas-lms/wiki/Production-Start&quot;&gt;Production Start&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>rubygems/rubygems</title>
      <link>https://github.com/rubygems/rubygems</link>
      <description>&lt;p&gt;Library packaging and distribution for Ruby.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RubyGems &lt;a href=&quot;https://codeclimate.com/github/rubygems/rubygems/maintainability&quot;&gt;&lt;img src=&quot;https://api.codeclimate.com/v1/badges/30f913e9c2dd932132c1/maintainability&quot; alt=&quot;Maintainability&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;RubyGems is a package management framework for Ruby.&lt;/p&gt; 
&lt;p&gt;A package (also known as a library) contains a set of functionality that can be invoked by a Ruby program, such as reading and parsing an XML file. We call these packages &quot;gems&quot; and RubyGems is a tool to install, create, manage and load these packages in your Ruby environment.&lt;/p&gt; 
&lt;p&gt;RubyGems is also a client for &lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems.org&lt;/a&gt;, a public repository of Gems that allows you to publish a Gem that can be shared and used by other developers. See our guide on publishing a Gem at &lt;a href=&quot;https://guides.rubygems.org/publishing/&quot;&gt;guides.rubygems.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Installing and managing a Gem is done through the &lt;code&gt;gem&lt;/code&gt; command. To install a Gem such as &lt;a href=&quot;https://github.com/lostisland/faraday?tab=readme-ov-file&quot;&gt;Faraday&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gem install faraday
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;RubyGems will download the Faraday Gem from RubyGems.org and install it into your Ruby environment.&lt;/p&gt; 
&lt;p&gt;Finally, inside your Ruby program, load the Faraday gem and start hacking:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;require &#39;faraday&#39;
response = Faraday.get(&#39;https://rubygems.org&#39;)
# do something with `response`...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information about how to use RubyGems, see our RubyGems basics guide at &lt;a href=&quot;https://guides.rubygems.org/rubygems-basics/&quot;&gt;guides.rubygems.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;RubyGems supports Ruby 3.0 or later.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;RubyGems is already installed in your Ruby environment, you can check the version you have installed by running &lt;code&gt;gem --version&lt;/code&gt; in your terminal emulator.&lt;/p&gt; 
&lt;p&gt;In some cases Ruby &amp;amp; RubyGems may be provided as OS packages. This is not a recommended way to use Ruby &amp;amp; RubyGems. It&#39;s better to use a Ruby Version Manager, such as &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt; or &lt;a href=&quot;https://github.com/postmodern/chruby&quot;&gt;chruby&lt;/a&gt;. If you still want to use the version provided by your OS package manager, please also use your OS package manager to upgrade rubygems, and disregard any other installation instructions given below.&lt;/p&gt; 
&lt;p&gt;If you would like to manually install RubyGems:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download from &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;https://rubygems.org/pages/download&lt;/a&gt;, unpack, and &lt;code&gt;cd&lt;/code&gt; into RubyGems&#39; src&lt;/li&gt; 
 &lt;li&gt;OR clone this repository and &lt;code&gt;cd&lt;/code&gt; into the repository&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Install RubyGems by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ruby setup.rb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details and other options, see:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ruby setup.rb --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Upgrading RubyGems&lt;/h2&gt; 
&lt;p&gt;To upgrade to the latest RubyGems, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ gem update --system
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/rubygems/rubygems/master/doc/bundler/UPGRADING.md&quot;&gt;UPGRADING&lt;/a&gt; for more details and alternative instructions.&lt;/p&gt; 
&lt;h2&gt;Release policy&lt;/h2&gt; 
&lt;p&gt;RubyGems and Bundler are released in sync, although they do not share their major version number. It is planned that also their major version numbers will be sync&#39;ed in the future.&lt;/p&gt; 
&lt;p&gt;The release policy is somewhat similar to the release policy of Ruby itself:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Frequent patch releases (every 2-4 weeks) including bug fixes, minor enhancements, small features, or even medium sized features declared as experimental for battle testing.&lt;/li&gt; 
 &lt;li&gt;Yearly minor releases including bigger features, and minor breaking changes (affecting only edge cases and a very small set of users).&lt;/li&gt; 
 &lt;li&gt;Occasional major releases (replacing yearly minors) including major breaking changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;RubyGems uses &lt;a href=&quot;https://github.com/rdoc/rdoc&quot;&gt;rdoc&lt;/a&gt; for documentation. A compiled set of the docs can be viewed online at &lt;a href=&quot;https://docs.ruby-lang.org/en/master/Gem.html&quot;&gt;docs.ruby-lang.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;RubyGems also provides a comprehensive set of guides which covers numerous topics such as creating a new gem, security practices and other resources at &lt;a href=&quot;https://guides.rubygems.org&quot;&gt;https://guides.rubygems.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;h3&gt;Filing Tickets&lt;/h3&gt; 
&lt;p&gt;Got a bug and you&#39;re not sure? You&#39;re sure you have a bug, but don&#39;t know what to do next? In any case, let us know about it! The best place for letting the RubyGems team know about bugs or problems you&#39;re having is &lt;a href=&quot;https://github.com/rubygems/rubygems/issues&quot;&gt;on the RubyGems issues page at GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Bundler Compatibility&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://bundler.io/compatibility&quot;&gt;https://bundler.io/compatibility&lt;/a&gt; for known issues.&lt;/p&gt; 
&lt;h3&gt;Supporting&lt;/h3&gt; 
&lt;p&gt;RubyGems is managed by &lt;a href=&quot;https://rubycentral.org&quot;&gt;Ruby Central&lt;/a&gt;, a non-profit organization that supports the Ruby community through projects like this one, as well as &lt;a href=&quot;https://rubyconf.org&quot;&gt;RubyConf&lt;/a&gt;, &lt;a href=&quot;https://railsconf.org&quot;&gt;RailsConf&lt;/a&gt;, and &lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems.org&lt;/a&gt;. You can support Ruby Central by attending or &lt;a href=&quot;https://raw.githubusercontent.com/rubygems/rubygems/master/sponsors@rubycentral.org&quot;&gt;sponsoring&lt;/a&gt; a conference, or by &lt;a href=&quot;https://rubycentral.org/#/portal/signup&quot;&gt;joining as a supporting member&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;If you&#39;d like to contribute to RubyGems, that&#39;s awesome, and we &amp;lt;3 you. Check out our &lt;a href=&quot;https://raw.githubusercontent.com/rubygems/rubygems/master/doc/rubygems/CONTRIBUTING.md&quot;&gt;guide to contributing&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Code of Conduct&lt;/h3&gt; 
&lt;p&gt;Everyone interacting in the RubyGems project‚Äôs codebases, issue trackers, chat rooms, and mailing lists is expected to follow the &lt;a href=&quot;https://github.com/rubygems/rubygems/raw/master/CODE_OF_CONDUCT.md&quot;&gt;contributor code of conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>citation-style-language/styles</title>
      <link>https://github.com/citation-style-language/styles</link>
      <description>&lt;p&gt;Official repository for Citation Style Language (CSL) citation styles.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://citationstyles.org/&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;300&quot; src=&quot;https://raw.githubusercontent.com/citation-style-language/logo/master/assets/rgb/%C2%ABCSL%C2%BB.svg?sanitize=true&quot; alt=&quot;CSL logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Citation Style Language - Style Repository&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/citation-style-language/styles#licensing&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-CC%20BY%20SA%203.0-blue.svg?sanitize=true&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/citation-style-language/styles/actions&quot;&gt;&lt;img src=&quot;https://github.com/citation-style-language/styles/workflows/Merge%20to%20release/badge.svg?event=push&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;The independent open source &lt;a href=&quot;https://citationstyles.org/&quot;&gt;Citation Style Language&lt;/a&gt; (CSL) project aims to facilitate scholarly communication by automating the formatting of citations and bibliographies. The primary components of the CSL ecosystem are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The CSL schema and specification, which describe how the XML-based CSL styles and locale files should be written and interpreted&lt;/li&gt; 
 &lt;li&gt;Curated repositories of CSL styles and locale files&lt;/li&gt; 
 &lt;li&gt;Third party CSL processors, software libraries for rendering formatted citation and bibliographies from CSL styles, CSL locale files, and item metadata&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This README describes our official curated repository of CSL styles, hosted at &lt;a href=&quot;https://github.com/citation-style-language/styles/&quot;&gt;https://github.com/citation-style-language/styles/&lt;/a&gt;. CSL locale files, which provide default localization data for CSL styles (such as translations and date formats), can be found at &lt;a href=&quot;https://github.com/citation-style-language/locales&quot;&gt;https://github.com/citation-style-language/locales&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more information about CSL and CSL styles, check out &lt;a href=&quot;https://citationstyles.org/&quot;&gt;https://citationstyles.org/&lt;/a&gt; and the information files in this repository (&lt;a href=&quot;https://github.com/citation-style-language/styles/raw/master/STYLE_REQUIREMENTS.md&quot;&gt;Style Requirements&lt;/a&gt;, &lt;a href=&quot;https://github.com/citation-style-language/styles/raw/master/STYLE_DEVELOPMENT.md&quot;&gt;Style Development&lt;/a&gt;, &lt;a href=&quot;https://github.com/citation-style-language/styles/raw/master/REQUESTING.md&quot;&gt;Requesting Styles&lt;/a&gt;, &lt;a href=&quot;https://github.com/citation-style-language/styles/raw/master/CONTRIBUTING.md&quot;&gt;Contributing Styles&lt;/a&gt;, and &lt;a href=&quot;https://github.com/citation-style-language/styles/raw/master/QUALITY_CONTROL.md&quot;&gt;Quality Control&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;Criteria for inclusion&lt;/h2&gt; 
&lt;p&gt;The official CSL style repository is the only repository of its kind, is used by dozens of third-party software products, and is relied upon by hundreds of thousands of users. The popularity of this repository is in large part due to its crowd-sourced nature, and, we believe, also due to our careful curation. While we evaluate style submissions on a case-by-case basis, we generally use the following criteria for inclusion in the CSL style repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Styles must be of sufficient quality and meet our &lt;a href=&quot;https://github.com/citation-style-language/styles/raw/master/STYLE_REQUIREMENTS.md&quot;&gt;style requirements&lt;/a&gt;. While we may be able to assist with this, its ultimately the submitter&#39;s responsibility to provide a style that meets our standards.&lt;/li&gt; 
 &lt;li&gt;Styles should be based on an official style guide (and link to the style guide in online or printed form).&lt;/li&gt; 
 &lt;li&gt;Styles should be of interest to a wider audience. We are happy to accept styles with a niche audience, but as a rule of thumb, style submitters should not know all individuals who would be interested in their style. If you do, it&#39;s generally better to distribute your style to them yourself.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Based on these criteria, we generally accept:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;styles for journals with open (unsolicited) submissions (and styles for publishers of such journals).&lt;/li&gt; 
 &lt;li&gt;styles for published style guides, such as those from professional organizations, universities, and university departments.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;However, we typically won&#39;t accept:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;styles for personal use, or for internal use within small organizations.&lt;/li&gt; 
 &lt;li&gt;styles solely for use with an (internal) API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If in doubt whether your style is a good fit for the repository, feel free to open an issue or pull request and ask for our opinion. If we don&#39;t accept your submission, we encourage you to distribute your CSL style yourself.&lt;/p&gt; 
&lt;h2&gt;Versioning and style distribution&lt;/h2&gt; 
&lt;p&gt;We currently only actively maintain CSL styles in the &quot;master&quot; branch for the latest released version of CSL.&lt;/p&gt; 
&lt;p&gt;In addition, in order to provide a stable location for styles of a given CSL version, styles in &quot;master&quot; are automatically copied to a branch named after the latest version of CSL (e.g. &quot;v1.0.2&quot; when CSL 1.0.2 is the latest version). Once a new version of CSL is released (e.g. CSL 1.1.0), &quot;master&quot; will upgrade to that version, after which styles will be copied from &quot;master&quot; to a new version branch (&quot;v1.1.0&quot;). Version branches for old versions of CSL are kept but typically become dormant, as for these branches we generally stop maintenance, won&#39;t accept third-party contributions via pull requests, nor backport changes made to styles in &quot;master&quot;.&lt;/p&gt; 
&lt;p&gt;Starting with branch &quot;v1.0.1&quot;, the version branches differ from &quot;master&quot; in the following ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;the latest version branch only receives updates from &quot;master&quot; if all tests in &quot;master&quot; pass&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;updated/&amp;gt;&lt;/code&gt; timestamps of styles in the version branch are changed to match the git modification date of each individual style in &quot;master&quot;&lt;/li&gt; 
 &lt;li&gt;superfluous files present in &quot;master&quot;, e.g. for style testing, are removed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As such, especially for downstream integrators, you are encouraged to obtain your CSL styles from the appropriate version branch (e.g. &quot;v1.0.2&quot; for CSL 1.0.2 styles). Currently, the styles repository includes the following (protected) branches:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&quot;master&quot;&lt;/li&gt; 
 &lt;li&gt;&quot;v1.0.2&quot; (for CSL 1.0.2 styles)&lt;/li&gt; 
 &lt;li&gt;&quot;v1.0.1&quot; (for CSL 1.0.1 styles)&lt;/li&gt; 
 &lt;li&gt;&quot;v1.0&quot; (for CSL 1.0 styles)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The release regimen described here is also used for our &lt;a href=&quot;https://github.com/citation-style-language/locales&quot;&gt;CSL locales&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;As of November 2020, &lt;a href=&quot;https://github.com/citation-style-language/styles-distribution&quot;&gt;https://github.com/citation-style-language/styles-distribution&lt;/a&gt;, which fulfilled a similar role to the version branches, has been deprecated and no longer receives updates from &lt;a href=&quot;https://github.com/citation-style-language/styles&quot;&gt;https://github.com/citation-style-language/styles&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;All styles in this repository are released under the &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;Creative Commons Attribution-ShareAlike 3.0 Unported license&lt;/a&gt;. For attribution, any software using CSL styles from this repository must include a clear mention of the CSL project and a link to &lt;a href=&quot;https://citationstyles.org/&quot;&gt;https://citationstyles.org/&lt;/a&gt;. When redistributing styles, the listings of authors and contributors in the style metadata must be kept as is.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mastodon/mastodon</title>
      <link>https://github.com/mastodon/mastodon</link>
      <description>&lt;p&gt;Your self-hosted, globally interconnected microblogging community&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Want to learn more about Mastodon? Click below to find out more in a video.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://www.youtube.com/watch?v=IPSbNdBmWKE&quot;&gt; &lt;img alt=&quot;Mastodon hero image&quot; src=&quot;https://github.com/user-attachments/assets/ef53f5e9-c0d8-484d-9f53-00efdebb92c3&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://github.com/mastodon/mastodon/releases&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/release/mastodon/mastodon.svg?sanitize=true&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://github.com/mastodon/mastodon/actions/workflows/test-ruby.yml&quot;&gt; &lt;img src=&quot;https://github.com/mastodon/mastodon/actions/workflows/test-ruby.yml/badge.svg?sanitize=true&quot; alt=&quot;Ruby Testing&quot;&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://crowdin.com/project/mastodon&quot;&gt; &lt;img src=&quot;https://d322cqt584bo4o.cloudfront.net/mastodon/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Mastodon is a &lt;strong&gt;free, open-source social network server&lt;/strong&gt; based on ActivityPub where users can follow friends and discover new ones. On Mastodon, users can publish anything they want: links, pictures, text, and video. All Mastodon servers are interoperable as a federated network (users on one server can seamlessly communicate with users from another one, including non-Mastodon software that implements ActivityPub!)&lt;/p&gt; 
&lt;h2&gt;Navigation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org&quot;&gt;Project homepage üêò&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.patreon.com/mastodon&quot;&gt;Support the development via Patreon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org/sponsors&quot;&gt;View sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.joinmastodon.org&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.joinmastodon.org&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org/roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mastodon/mastodon/pkgs/container/mastodon&quot;&gt;Official Docker image&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org/communities&quot;&gt;Browse Mastodon servers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org/apps&quot;&gt;Browse Mastodon apps&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/app/javascript/images/elephant_ui_working.svg?raw=true&quot; align=&quot;right&quot; width=&quot;30%&quot;&gt; 
&lt;p&gt;&lt;strong&gt;No vendor lock-in: Fully interoperable with any conforming platform&lt;/strong&gt; - It doesn&#39;t have to be Mastodon; whatever implements ActivityPub is part of the social network! &lt;a href=&quot;https://blog.joinmastodon.org/2018/06/why-activitypub-is-the-future/&quot;&gt;Learn more&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Real-time, chronological timeline updates&lt;/strong&gt; - updates of people you&#39;re following appear in real-time in the UI via WebSockets. There&#39;s a firehose view as well!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Media attachments like images and short videos&lt;/strong&gt; - upload and view images and WebM/MP4 videos attached to the updates. Videos with no audio track are treated like GIFs; normal videos loop continuously!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Safety and moderation tools&lt;/strong&gt; - Mastodon includes private posts, locked accounts, phrase filtering, muting, blocking, and all sorts of other features, along with a reporting and moderation system. &lt;a href=&quot;https://blog.joinmastodon.org/2018/07/cage-the-mastodon/&quot;&gt;Learn more&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;OAuth2 and a straightforward REST API&lt;/strong&gt; - Mastodon acts as an OAuth2 provider, so 3rd party apps can use the REST and Streaming APIs. This results in a rich app ecosystem with a lot of choices!&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;h3&gt;Tech stack&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Ruby on Rails&lt;/strong&gt; powers the REST API and other web pages&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React.js&lt;/strong&gt; and &lt;strong&gt;Redux&lt;/strong&gt; are used for the dynamic parts of the interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt; powers the streaming API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt; 12+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Redis&lt;/strong&gt; 4+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruby&lt;/strong&gt; 3.2+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt; 18+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The repository includes deployment configurations for &lt;strong&gt;Docker and docker-compose&lt;/strong&gt; as well as specific platforms like &lt;strong&gt;Heroku&lt;/strong&gt;, and &lt;strong&gt;Scalingo&lt;/strong&gt;. For Helm charts, reference the &lt;a href=&quot;https://github.com/mastodon/chart&quot;&gt;mastodon/chart repository&lt;/a&gt;. The &lt;a href=&quot;https://docs.joinmastodon.org/admin/install/&quot;&gt;&lt;strong&gt;standalone&lt;/strong&gt; installation guide&lt;/a&gt; is available in the documentation.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Mastodon is &lt;strong&gt;free, open-source software&lt;/strong&gt; licensed under &lt;strong&gt;AGPLv3&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;You can open issues for bugs you&#39;ve found or features you think are missing. You can also submit pull requests to this repository or translations via Crowdin. To get started, look at the &lt;a href=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/docs/DEVELOPMENT.md&quot;&gt;DEVELOPMENT&lt;/a&gt; guides. For changes accepted into Mastodon, you can request to be paid through our &lt;a href=&quot;https://opencollective.com/mastodon&quot;&gt;OpenCollective&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IRC channel&lt;/strong&gt;: #mastodon on &lt;a href=&quot;https://libera.chat&quot;&gt;&lt;code&gt;irc.libera.chat&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2016-2024 Eugen Rochko (+ &lt;a href=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/AUTHORS.md&quot;&gt;&lt;code&gt;mastodon authors&lt;/code&gt;&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;Licensed under GNU Affero General Public License as stated in the &lt;a href=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (c) 2016-2024 Eugen Rochko &amp;amp; other Mastodon contributors

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU Affero General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option) any
later version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
details.

You should have received a copy of the GNU Affero General Public License along
with this program. If not, see https://www.gnu.org/licenses/
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>discourse/discourse</title>
      <link>https://github.com/discourse/discourse</link>
      <description>&lt;p&gt;A platform for community discussion. Free, open, simple.&lt;/p&gt;&lt;hr&gt;&lt;a href=&quot;https://www.discourse.org/&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/discourse/discourse/main/images/discourse-readme-logo.png&quot; width=&quot;300px&quot;&gt; &lt;/a&gt; 
&lt;p&gt;The online home for your community.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/db764ef2-5cc2-4873-b11d-4a2052e1993d&quot; alt=&quot;readme&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You can self-host Discourse on your own infrastructure. But if you&#39;d rather skip the setup, maintenance, and server management, we offer official Discourse hosting.&lt;/p&gt; 
 &lt;p&gt;üëâ Learn more about &lt;a href=&quot;https://discourse.org/pricing&quot;&gt;Discourse hosting&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Discourse is a 100% open-source community platform for those who want complete control over how and where their site is run.&lt;/p&gt; 
&lt;p&gt;Our platform has been battle-tested for over a decade and continues to evolve to meet users‚Äô needs for a powerful community platform.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;With Discourse, you can:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;üí¨ &lt;strong&gt;Create discussion topics&lt;/strong&gt; to foster meaningful conversations.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;‚ö°Ô∏è &lt;strong&gt;Connect in real-time&lt;/strong&gt; with built-in chat.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;üé® &lt;strong&gt;Customize your experience&lt;/strong&gt; with an ever-growing selection of official and community themes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ü§ñ &lt;strong&gt;Enhance your community&lt;/strong&gt; with plugins, from chatbots powered by &lt;a href=&quot;https://meta.discourse.org/t/discourse-ai/259214&quot;&gt;Discourse AI&lt;/a&gt; to advanced tools like SQL analysis with the &lt;a href=&quot;https://meta.discourse.org/t/discourse-data-explorer/32566&quot;&gt;Data Explorer&lt;/a&gt; plugin.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To learn more, visit &lt;a href=&quot;https://www.discourse.org/&quot;&gt;discourse.org&lt;/a&gt; and join our support community at &lt;a href=&quot;https://meta.discourse.org/&quot;&gt;meta.discourse.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Here are just a few of the incredible communities using Discourse:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/a79b5d56-7748-4f6d-8a2d-daa950366fcc&quot; alt=&quot;discourse-communities&quot;&gt;&lt;/p&gt; 
&lt;p&gt;üëâ &lt;a href=&quot;https://discover.discourse.org/&quot;&gt;Discover more communities using Discourse&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;To get your environment set up, follow one of the setup guides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meta.discourse.org/t/336366&quot;&gt;Docker / Dev Container&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meta.discourse.org/t/15772&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meta.discourse.org/t/14727&quot;&gt;Ubuntu/Debian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meta.discourse.org/t/75149&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Before you get started, ensure you have the following minimum versions: &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby 3.3+&lt;/a&gt;, &lt;a href=&quot;https://www.postgresql.org/download/&quot;&gt;PostgreSQL 13&lt;/a&gt;, &lt;a href=&quot;https://redis.io/download&quot;&gt;Redis 7&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more information, check out &lt;a href=&quot;https://meta.discourse.org/c/documentation/developer-guides/56&quot;&gt;the Developer Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Setting up Discourse&lt;/h2&gt; 
&lt;p&gt;If you want to set up a Discourse forum for production use, see our &lt;a href=&quot;https://raw.githubusercontent.com/discourse/discourse/main/docs/INSTALL.md&quot;&gt;&lt;strong&gt;Discourse Install Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you&#39;re looking for official hosting, see &lt;a href=&quot;https://www.discourse.org/pricing/&quot;&gt;discourse.org/pricing&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;Discourse supports the &lt;strong&gt;latest, stable releases&lt;/strong&gt; of all major browsers and platforms:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Browsers&lt;/th&gt; 
   &lt;th&gt;Tablets&lt;/th&gt; 
   &lt;th&gt;Phones&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Apple Safari&lt;/td&gt; 
   &lt;td&gt;iPadOS&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Google Chrome&lt;/td&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Microsoft Edge&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mozilla Firefox&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Additionally, we aim to support Safari on iOS 15.7+.&lt;/p&gt; 
&lt;h2&gt;Built With&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rails/rails&quot;&gt;Ruby on Rails&lt;/a&gt; ‚Äî Our back end API is a Rails app. It responds to requests RESTfully in JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/emberjs/ember.js&quot;&gt;Ember.js&lt;/a&gt; ‚Äî Our front end is an Ember.js app that communicates with the Rails API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt; ‚Äî Our main data store is in Postgres.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt; ‚Äî We use Redis as a cache and for transient data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; ‚Äî We use BrowserStack to test on real devices and browsers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Plus &lt;em&gt;lots&lt;/em&gt; of Ruby Gems, a complete list of which is at &lt;a href=&quot;https://github.com/discourse/discourse/raw/main/Gemfile&quot;&gt;/main/Gemfile&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/discourse/discourse/actions&quot;&gt;&lt;img src=&quot;https://github.com/discourse/discourse/actions/workflows/tests.yml/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Discourse is &lt;strong&gt;100% free&lt;/strong&gt; and &lt;strong&gt;open source&lt;/strong&gt;. We encourage and support an active, healthy community that accepts contributions from the public ‚Äì including you!&lt;/p&gt; 
&lt;p&gt;Before contributing to Discourse:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Please read the complete mission statements on &lt;a href=&quot;https://www.discourse.org&quot;&gt;&lt;strong&gt;discourse.org&lt;/strong&gt;&lt;/a&gt;. Yes we actually believe this stuff; you should too.&lt;/li&gt; 
 &lt;li&gt;Read and sign the &lt;a href=&quot;https://www.discourse.org/cla&quot;&gt;&lt;strong&gt;Electronic Discourse Forums Contribution License Agreement&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Dig into &lt;a href=&quot;https://raw.githubusercontent.com/discourse/discourse/main/CONTRIBUTING.md&quot;&gt;&lt;strong&gt;CONTRIBUTING.MD&lt;/strong&gt;&lt;/a&gt;, which covers submitting bugs, requesting new features, preparing your code for a pull request, etc.&lt;/li&gt; 
 &lt;li&gt;Always strive to collaborate &lt;a href=&quot;https://github.com/discourse/discourse/raw/main/docs/code-of-conduct.md&quot;&gt;with mutual respect&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Not sure what to work on? &lt;a href=&quot;https://meta.discourse.org/t/so-you-want-to-help-out-with-discourse/3823&quot;&gt;&lt;strong&gt;We&#39;ve got some ideas.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We look forward to seeing your pull requests!&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;We take security very seriously at Discourse; all our code is 100% open source and peer reviewed. Please read &lt;a href=&quot;https://github.com/discourse/discourse/raw/main/docs/SECURITY.md&quot;&gt;our security guide&lt;/a&gt; for an overview of security measures in Discourse, or if you wish to report a security issue.&lt;/p&gt; 
&lt;p&gt;Security fixes are listed in the &lt;a href=&quot;https://meta.discourse.org/tags/c/announcements/67/release-notes&quot;&gt;release notes&lt;/a&gt; for each version.&lt;/p&gt; 
&lt;h2&gt;The Discourse Team&lt;/h2&gt; 
&lt;p&gt;The original Discourse code contributors can be found in &lt;a href=&quot;https://raw.githubusercontent.com/discourse/discourse/main/docs/AUTHORS.md&quot;&gt;&lt;strong&gt;AUTHORS.MD&lt;/strong&gt;&lt;/a&gt;. For a complete list of the many individuals that contributed to the design and implementation of Discourse, please refer to &lt;a href=&quot;https://blog.discourse.org/2013/02/the-discourse-team/&quot;&gt;the official Discourse blog&lt;/a&gt; and &lt;a href=&quot;https://github.com/discourse/discourse/contributors&quot;&gt;GitHub&#39;s list of contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Copyright / License&lt;/h2&gt; 
&lt;p&gt;Copyright 2014 - 2025 Civilized Discourse Construction Kit, Inc.&lt;/p&gt; 
&lt;p&gt;Licensed under the GNU General Public License Version 2.0 (or later); you may not use this work except in compliance with the License. You may obtain a copy of the License in the LICENSE file, or at:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt&quot;&gt;https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; 
&lt;p&gt;Discourse logo and ‚ÄúDiscourse Forum‚Äù ¬Æ, Civilized Discourse Construction Kit, Inc.&lt;/p&gt; 
&lt;h2&gt;Accessibility&lt;/h2&gt; 
&lt;p&gt;To guide our ongoing effort to build accessible software we follow the &lt;a href=&quot;https://www.w3.org/TR/WCAG21/&quot;&gt;W3C‚Äôs Web Content Accessibility Guidelines (WCAG)&lt;/a&gt;. If you&#39;d like to report an accessibility issue that makes it difficult for you to use Discourse, email &lt;a href=&quot;mailto:accessibility@discourse.org&quot;&gt;accessibility@discourse.org&lt;/a&gt;. For more information visit &lt;a href=&quot;https://discourse.org/accessibility&quot;&gt;discourse.org/accessibility&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Dedication&lt;/h2&gt; 
&lt;p&gt;Discourse is built with &lt;a href=&quot;https://www.youtube.com/watch?v=Xe1TZaElTAs&quot;&gt;love, Internet style.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For over a decade, our &lt;a href=&quot;https://meta.discourse.org/&quot;&gt;amazing community&lt;/a&gt; has helped shape Discourse into what it is today. Your support, feedback, and contributions have been invaluable in making Discourse a powerful and versatile platform.&lt;/p&gt; 
&lt;p&gt;We‚Äôre deeply grateful for every feature request, bug report, and discussion that has driven Discourse forward. Thank you for being a part of this journey‚Äîwe couldn‚Äôt have done it without you!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Shopify/liquid</title>
      <link>https://github.com/Shopify/liquid</link>
      <description>&lt;p&gt;Liquid markup language. Safe, customer facing template language for flexible web apps.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Shopify/liquid/actions/workflows/liquid.yml&quot;&gt;&lt;img src=&quot;https://github.com/Shopify/liquid/actions/workflows/liquid.yml/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://inch-ci.org/github/Shopify/liquid&quot;&gt;&lt;img src=&quot;http://inch-ci.org/github/Shopify/liquid.svg?branch=master&quot; alt=&quot;Inline docs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Liquid template engine&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Shopify/liquid/main/CONTRIBUTING.md&quot;&gt;Contributing guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Shopify/liquid/main/History.md&quot;&gt;Version history&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shopify.dev/docs/api/liquid&quot;&gt;Liquid documentation from Shopify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid Wiki at GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://liquidmarkup.org/&quot;&gt;Website&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Liquid is a template engine which was written with very specific requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It has to have beautiful and simple markup. Template engines which don&#39;t produce good looking markup are no fun to use.&lt;/li&gt; 
 &lt;li&gt;It needs to be non evaling and secure. Liquid templates are made so that users can edit them. You don&#39;t want to run code on your server which your users wrote.&lt;/li&gt; 
 &lt;li&gt;It has to be stateless. Compile and render steps have to be separate so that the expensive parsing and compiling can be done once and later on you can just render it passing in a hash with local variables and objects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why you should use Liquid&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;You want to allow your users to edit the appearance of your application but don&#39;t want them to run &lt;strong&gt;insecure code on your server&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;You want to render templates directly from the database.&lt;/li&gt; 
 &lt;li&gt;You like smarty (PHP) style template engines.&lt;/li&gt; 
 &lt;li&gt;You need a template engine which does HTML just as well as emails.&lt;/li&gt; 
 &lt;li&gt;You don&#39;t like the markup of your current templating engine.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What does it look like?&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;ul id=&quot;products&quot;&amp;gt;
  {% for product in products %}
    &amp;lt;li&amp;gt;
      &amp;lt;h2&amp;gt;{{ product.name }}&amp;lt;/h2&amp;gt;
      Only {{ product.price | price }}

      {{ product.description | prettyprint | paragraph }}
    &amp;lt;/li&amp;gt;
  {% endfor %}
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use Liquid&lt;/h2&gt; 
&lt;p&gt;Install Liquid by adding &lt;code&gt;gem &#39;liquid&#39;&lt;/code&gt; to your gemfile.&lt;/p&gt; 
&lt;p&gt;Liquid supports a very simple API based around the Liquid::Template class. For standard use you can just pass it the content of a file and call render with a parameters hash.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;@template = Liquid::Template.parse(&quot;hi {{name}}&quot;) # Parses and compiles the template
@template.render(&#39;name&#39; =&amp;gt; &#39;tobi&#39;)                # =&amp;gt; &quot;hi tobi&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Concept of Environments&lt;/h3&gt; 
&lt;p&gt;In Liquid, a &quot;Environment&quot; is a scoped environment that encapsulates custom tags, filters, and other configurations. This allows you to define and isolate different sets of functionality for different contexts, avoiding global overrides that can lead to conflicts and unexpected behavior.&lt;/p&gt; 
&lt;p&gt;By using environments, you can:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Encapsulate Logic&lt;/strong&gt;: Keep the logic for different parts of your application separate.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avoid Conflicts&lt;/strong&gt;: Prevent custom tags and filters from clashing with each other.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Improve Maintainability&lt;/strong&gt;: Make it easier to manage and understand the scope of customizations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhance Security&lt;/strong&gt;: Limit the availability of certain tags and filters to specific contexts.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We encourage the use of Environments over globally overriding things because it promotes better software design principles such as modularity, encapsulation, and separation of concerns.&lt;/p&gt; 
&lt;p&gt;Here&#39;s an example of how you can define and use Environments in Liquid:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;user_environment = Liquid::Environment.build do |environment|
  environment.register_tag(&quot;renderobj&quot;, RenderObjTag)
end

Liquid::Template.parse(&amp;lt;&amp;lt;~LIQUID, environment: user_environment)
  {% renderobj src: &quot;path/to/model.obj&quot; %}
LIQUID
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this example, &lt;code&gt;RenderObjTag&lt;/code&gt; is a custom tag that is only available within the &lt;code&gt;user_environment&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Similarly, you can define another environment for a different context, such as email templates:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;email_environment = Liquid::Environment.build do |environment|
  environment.register_tag(&quot;unsubscribe_footer&quot;, UnsubscribeFooter)
end

Liquid::Template.parse(&amp;lt;&amp;lt;~LIQUID, environment: email_environment)
  {% unsubscribe_footer %}
LIQUID
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By using Environments, you ensure that custom tags and filters are only available in the contexts where they are needed, making your Liquid templates more robust and easier to manage. For smaller projects, a global environment is available via &lt;code&gt;Liquid::Environment.default&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Error Modes&lt;/h3&gt; 
&lt;p&gt;Setting the error mode of Liquid lets you specify how strictly you want your templates to be interpreted. Normally the parser is very lax and will accept almost anything without error. Unfortunately this can make it very hard to debug and can lead to unexpected behaviour.&lt;/p&gt; 
&lt;p&gt;Liquid also comes with a stricter parser that can be used when editing templates to give better error messages when templates are invalid. You can enable this new parser like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;Liquid::Environment.default.error_mode = :strict
Liquid::Environment.default.error_mode = :strict # Raises a SyntaxError when invalid syntax is used
Liquid::Environment.default.error_mode = :warn # Adds strict errors to template.errors but continues as normal
Liquid::Environment.default.error_mode = :lax # The default mode, accepts almost anything.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to set the error mode only on specific templates you can pass &lt;code&gt;:error_mode&lt;/code&gt; as an option to &lt;code&gt;parse&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;Liquid::Template.parse(source, error_mode: :strict)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is useful for doing things like enabling strict mode only in the theme editor.&lt;/p&gt; 
&lt;p&gt;It is recommended that you enable &lt;code&gt;:strict&lt;/code&gt; or &lt;code&gt;:warn&lt;/code&gt; mode on new apps to stop invalid templates from being created. It is also recommended that you use it in the template editors of existing apps to give editors better error messages.&lt;/p&gt; 
&lt;h3&gt;Undefined variables and filters&lt;/h3&gt; 
&lt;p&gt;By default, the renderer doesn&#39;t raise or in any other way notify you if some variables or filters are missing, i.e. not passed to the &lt;code&gt;render&lt;/code&gt; method. You can improve this situation by passing &lt;code&gt;strict_variables: true&lt;/code&gt; and/or &lt;code&gt;strict_filters: true&lt;/code&gt; options to the &lt;code&gt;render&lt;/code&gt; method. When one of these options is set to true, all errors about undefined variables and undefined filters will be stored in &lt;code&gt;errors&lt;/code&gt; array of a &lt;code&gt;Liquid::Template&lt;/code&gt; instance. Here are some examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;template = Liquid::Template.parse(&quot;{{x}} {{y}} {{z.a}} {{z.b}}&quot;)
template.render({ &#39;x&#39; =&amp;gt; 1, &#39;z&#39; =&amp;gt; { &#39;a&#39; =&amp;gt; 2 } }, { strict_variables: true })
#=&amp;gt; &#39;1  2 &#39; # when a variable is undefined, it&#39;s rendered as nil
template.errors
#=&amp;gt; [#&amp;lt;Liquid::UndefinedVariable: Liquid error: undefined variable y&amp;gt;, #&amp;lt;Liquid::UndefinedVariable: Liquid error: undefined variable b&amp;gt;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;template = Liquid::Template.parse(&quot;{{x | filter1 | upcase}}&quot;)
template.render({ &#39;x&#39; =&amp;gt; &#39;foo&#39; }, { strict_filters: true })
#=&amp;gt; &#39;&#39; # when at least one filter in the filter chain is undefined, a whole expression is rendered as nil
template.errors
#=&amp;gt; [#&amp;lt;Liquid::UndefinedFilter: Liquid error: undefined filter filter1&amp;gt;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to raise on a first exception instead of pushing all of them in &lt;code&gt;errors&lt;/code&gt;, you can use &lt;code&gt;render!&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;template = Liquid::Template.parse(&quot;{{x}} {{y}}&quot;)
template.render!({ &#39;x&#39; =&amp;gt; 1}, { strict_variables: true })
#=&amp;gt; Liquid::UndefinedVariable: Liquid error: undefined variable y
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage tracking&lt;/h3&gt; 
&lt;p&gt;To help track usages of a feature or code path in production, we have released opt-in usage tracking. To enable this, we provide an empty &lt;code&gt;Liquid:: Usage.increment&lt;/code&gt; method which you can customize to your needs. The feature is well suited to &lt;a href=&quot;https://github.com/Shopify/statsd-instrument&quot;&gt;https://github.com/Shopify/statsd-instrument&lt;/a&gt;. However, the choice of implementation is up to you.&lt;/p&gt; 
&lt;p&gt;Once you have enabled usage tracking, we recommend reporting any events through Github Issues that your system may be logging. It is highly likely this event has been added to consider deprecating or improving code specific to this event, so please raise any concerns.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rapid7/metasploit-framework</title>
      <link>https://github.com/rapid7/metasploit-framework</link>
      <description>&lt;p&gt;Metasploit Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Metasploit Framework&lt;/h1&gt; 
&lt;p&gt;The Metasploit Framework is an open-source tool released under a BSD-style license. For detailed licensing information, refer to the &lt;code&gt;COPYING&lt;/code&gt; file.&lt;/p&gt; 
&lt;h2&gt;Latest Version&lt;/h2&gt; 
&lt;p&gt;Access the latest version of Metasploit from the &lt;a href=&quot;https://docs.metasploit.com/docs/using-metasploit/getting-started/nightly-installers.html&quot;&gt;Nightly Installers&lt;/a&gt; page.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Comprehensive documentation, including usage guides, is available at &lt;a href=&quot;https://docs.metasploit.com/&quot;&gt;Metasploit Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development Environment&lt;/h2&gt; 
&lt;p&gt;To set up a development environment, visit the &lt;a href=&quot;https://docs.metasploit.com/docs/development/get-started/setting-up-a-metasploit-development-environment.html&quot;&gt;Development Setup Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Bug and Feature Requests&lt;/h2&gt; 
&lt;p&gt;Submit bugs and feature requests via the &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/issues&quot;&gt;GitHub Issues&lt;/a&gt; tracker. New submissions can be made through the &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/issues/new/choose&quot;&gt;MSF-BUGv1 form&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;API Documentation&lt;/h2&gt; 
&lt;p&gt;For information on writing modules, refer to the &lt;a href=&quot;https://docs.metasploit.com/api/&quot;&gt;API Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support and Communication&lt;/h2&gt; 
&lt;p&gt;For questions and suggestions, join the Freenode IRC channel or contact the metasploit-hackers mailing list.&lt;/p&gt; 
&lt;h2&gt;Installing Metasploit&lt;/h2&gt; 
&lt;h3&gt;Recommended Installation&lt;/h3&gt; 
&lt;p&gt;We recommend installation with the &lt;a href=&quot;https://docs.metasploit.com/docs/using-metasploit/getting-started/nightly-installers.html#installing-metasploit-on-linux--macos&quot;&gt;official Metasploit installers&lt;/a&gt; on Linux or macOS. Metasploit is also pre-installed with Kali.&lt;/p&gt; 
&lt;p&gt;For a manual setup, consult the &lt;a href=&quot;https://docs.metasploit.com/docs/development/get-started/setting-up-a-metasploit-development-environment.html&quot;&gt;Dev Environment Setup&lt;/a&gt; guide.&lt;/p&gt; 
&lt;h2&gt;Using Metasploit&lt;/h2&gt; 
&lt;p&gt;To get started with Metasploit:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Start &lt;code&gt;msfconsole&lt;/code&gt;:&lt;/strong&gt; This is the primary interface for interacting with Metasploit.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Explore Resources:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Visit the &lt;a href=&quot;https://docs.metasploit.com/docs/using-metasploit/getting-started/index.html&quot;&gt;Using Metasploit&lt;/a&gt; section of the documentation.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;To contribute to Metasploit:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Setup Development Environment:&lt;/strong&gt; Follow the instructions in the &lt;a href=&quot;https://docs.metasploit.com/docs/development/get-started/setting-up-a-metasploit-development-environment.html&quot;&gt;Development Setup Guide&lt;/a&gt; on GitHub.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Clone the Repository:&lt;/strong&gt; Obtain the source code from the official repository.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Submit a Pull Request:&lt;/strong&gt; After making changes, submit a pull request for review. Additional details can be found in the &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/raw/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>alexrudall/ruby-openai</title>
      <link>https://github.com/alexrudall/ruby-openai</link>
      <description>&lt;p&gt;OpenAI API + Ruby! ü§ñ‚ù§Ô∏è Now with Responses API + DeepSeek!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruby OpenAI&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/ruby-openai&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/ruby-openai.svg?sanitize=true&quot; alt=&quot;Gem Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/alexrudall/ruby-openai/raw/main/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/alexrudall/ruby-openai&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/alexrudall/ruby-openai.svg?style=shield&quot; alt=&quot;CircleCI Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Use the &lt;a href=&quot;https://openai.com/blog/openai-api/&quot;&gt;OpenAI API&lt;/a&gt; with Ruby! ü§ñ‚ù§Ô∏è&lt;/p&gt; 
&lt;p&gt;Stream chats with the Responses API, transcribe and translate audio with Whisper, create images with DALL¬∑E, and much more...&lt;/p&gt; 
&lt;p&gt;üí• Click &lt;a href=&quot;https://mailchi.mp/8c7b574726a9/ruby-openai&quot;&gt;subscribe now&lt;/a&gt; to hear first about new releases in the Rails AI newsletter!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://mailchi.mp/8c7b574726a9/ruby-openai&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/737cbb99-6029-42b8-9f22-a106725a4b1f&quot; alt=&quot;RailsAI Newsletter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/k4Uc224xVD&quot;&gt;üéÆ Ruby AI Builders Discord&lt;/a&gt; | &lt;a href=&quot;https://x.com/alexrudall&quot;&gt;üê¶ X&lt;/a&gt; | &lt;a href=&quot;https://github.com/alexrudall/anthropic&quot;&gt;üß† Anthropic Gem&lt;/a&gt; | &lt;a href=&quot;https://github.com/alexrudall/midjourney&quot;&gt;üöÇ Midjourney Gem&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#ruby-openai&quot;&gt;Ruby OpenAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#installation&quot;&gt;Installation&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#bundler&quot;&gt;Bundler&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#gem-install&quot;&gt;Gem install&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#how-to-use&quot;&gt;How to use&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#quickstart&quot;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#with-config&quot;&gt;With Config&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#custom-timeout-or-base-uri&quot;&gt;Custom timeout or base URI&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#extra-headers-per-client&quot;&gt;Extra Headers per Client&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#logging&quot;&gt;Logging&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#errors&quot;&gt;Errors&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#faraday-middleware&quot;&gt;Faraday middleware&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#azure&quot;&gt;Azure&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#deepseek&quot;&gt;Deepseek&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#ollama&quot;&gt;Ollama&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#groq&quot;&gt;Groq&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#counting-tokens&quot;&gt;Counting Tokens&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#models&quot;&gt;Models&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#chat&quot;&gt;Chat&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#streaming-chat&quot;&gt;Streaming Chat&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#vision&quot;&gt;Vision&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#json-mode&quot;&gt;JSON Mode&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#responses-api&quot;&gt;Responses API&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#completions&quot;&gt;Completions&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#embeddings&quot;&gt;Embeddings&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#batches&quot;&gt;Batches&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#files&quot;&gt;Files&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#for-fine-tuning-purposes&quot;&gt;For fine-tuning purposes&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#for-assistant-purposes&quot;&gt;For assistant purposes&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#finetunes&quot;&gt;Finetunes&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#vector-stores&quot;&gt;Vector Stores&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#vector-store-files&quot;&gt;Vector Store Files&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#vector-store-file-batches&quot;&gt;Vector Store File Batches&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#assistants&quot;&gt;Assistants&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#threads-and-messages&quot;&gt;Threads and Messages&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#runs&quot;&gt;Runs&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#create-and-run&quot;&gt;Create and Run&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#vision-in-a-thread&quot;&gt;Vision in a thread&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#runs-involving-function-tools&quot;&gt;Runs involving function tools&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#exploring-chunks-used-in-file-search&quot;&gt;Exploring chunks used in File Search&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#image-generation&quot;&gt;Image Generation&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#dalle-2&quot;&gt;DALL¬∑E 2&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#dalle-3&quot;&gt;DALL¬∑E 3&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#image-edit&quot;&gt;Image Edit&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#image-variations&quot;&gt;Image Variations&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#moderations&quot;&gt;Moderations&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#whisper&quot;&gt;Whisper&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#translate&quot;&gt;Translate&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#transcribe&quot;&gt;Transcribe&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#speech&quot;&gt;Speech&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#usage&quot;&gt;Usage&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#errors-1&quot;&gt;Errors&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#development&quot;&gt;Development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#release&quot;&gt;Release&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alexrudall/ruby-openai/main/#code-of-conduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Bundler&lt;/h3&gt; 
&lt;p&gt;Add this line to your application&#39;s Gemfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem &quot;ruby-openai&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then execute:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bundle install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Gem install&lt;/h3&gt; 
&lt;p&gt;Or install with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gem install ruby-openai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and require with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;require &quot;openai&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Get your API key from &lt;a href=&quot;https://platform.openai.com/account/api-keys&quot;&gt;https://platform.openai.com/account/api-keys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;If you belong to multiple organizations, you can get your Organization ID from &lt;a href=&quot;https://platform.openai.com/account/org-settings&quot;&gt;https://platform.openai.com/account/org-settings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quickstart&lt;/h3&gt; 
&lt;p&gt;For a quick test you can pass your token directly to a new client:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client = OpenAI::Client.new(
  access_token: &quot;access_token_goes_here&quot;,
  log_errors: true # Highly recommended in development, so you can see what errors OpenAI is returning. Not recommended in production because it could leak private data to your logs.
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;With Config&lt;/h3&gt; 
&lt;p&gt;For a more robust setup, you can configure the gem with your API keys, for example in an &lt;code&gt;openai.rb&lt;/code&gt; initializer file. Never hardcode secrets into your codebase - instead use something like &lt;a href=&quot;https://github.com/motdotla/dotenv&quot;&gt;dotenv&lt;/a&gt; to pass the keys safely into your environments.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;OpenAI.configure do |config|
  config.access_token = ENV.fetch(&quot;OPENAI_ACCESS_TOKEN&quot;)
  config.admin_token = ENV.fetch(&quot;OPENAI_ADMIN_TOKEN&quot;) # Optional, used for admin endpoints, created here: https://platform.openai.com/settings/organization/admin-keys
  config.organization_id = ENV.fetch(&quot;OPENAI_ORGANIZATION_ID&quot;) # Optional
  config.log_errors = true # Highly recommended in development, so you can see what errors OpenAI is returning. Not recommended in production because it could leak private data to your logs.
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can create a client like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client = OpenAI::Client.new
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can still override the config defaults when making new clients; any options not included will fall back to any global config set with OpenAI.configure. e.g. in this example the organization_id, request_timeout, etc. will fallback to any set globally using OpenAI.configure, with only the access_token and admin_token overridden:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client = OpenAI::Client.new(access_token: &quot;access_token_goes_here&quot;, admin_token: &quot;admin_token_goes_here&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Custom timeout or base URI&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;The default timeout for any request using this library is 120 seconds. You can change that by passing a number of seconds to the &lt;code&gt;request_timeout&lt;/code&gt; when initializing the client.&lt;/li&gt; 
 &lt;li&gt;You can also change the base URI used for all requests, eg. to use observability tools like &lt;a href=&quot;https://docs.helicone.ai/quickstart/integrate-in-one-line-of-code&quot;&gt;Helicone&lt;/a&gt; or &lt;a href=&quot;https://docs.usevelvet.com/docs/getting-started&quot;&gt;Velvet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;You can also add arbitrary other headers e.g. for &lt;a href=&quot;https://github.com/6/openai-caching-proxy-worker&quot;&gt;openai-caching-proxy-worker&lt;/a&gt;, eg.:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client = OpenAI::Client.new(
  access_token: &quot;access_token_goes_here&quot;,
  uri_base: &quot;https://oai.hconeai.com/&quot;,
  request_timeout: 240,
  extra_headers: {
    &quot;X-Proxy-TTL&quot; =&amp;gt; &quot;43200&quot;, # For https://github.com/6/openai-caching-proxy-worker#specifying-a-cache-ttl
    &quot;X-Proxy-Refresh&quot;: &quot;true&quot;, # For https://github.com/6/openai-caching-proxy-worker#refreshing-the-cache
    &quot;Helicone-Auth&quot;: &quot;Bearer HELICONE_API_KEY&quot;, # For https://docs.helicone.ai/getting-started/integration-method/openai-proxy
    &quot;helicone-stream-force-format&quot; =&amp;gt; &quot;true&quot;, # Use this with Helicone otherwise streaming drops chunks # https://github.com/alexrudall/ruby-openai/issues/251
  }
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or when configuring the gem:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;OpenAI.configure do |config|
  config.access_token = ENV.fetch(&quot;OPENAI_ACCESS_TOKEN&quot;)
  config.admin_token = ENV.fetch(&quot;OPENAI_ADMIN_TOKEN&quot;) # Optional, used for admin endpoints, created here: https://platform.openai.com/settings/organization/admin-keys
  config.organization_id = ENV.fetch(&quot;OPENAI_ORGANIZATION_ID&quot;) # Optional
  config.log_errors = true # Optional
  config.uri_base = &quot;https://oai.hconeai.com/&quot; # Optional
  config.request_timeout = 240 # Optional
  config.extra_headers = {
    &quot;X-Proxy-TTL&quot; =&amp;gt; &quot;43200&quot;, # For https://github.com/6/openai-caching-proxy-worker#specifying-a-cache-ttl
    &quot;X-Proxy-Refresh&quot;: &quot;true&quot;, # For https://github.com/6/openai-caching-proxy-worker#refreshing-the-cache
    &quot;Helicone-Auth&quot;: &quot;Bearer HELICONE_API_KEY&quot; # For https://docs.helicone.ai/getting-started/integration-method/openai-proxy
  } # Optional
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Extra Headers per Client&lt;/h4&gt; 
&lt;p&gt;You can dynamically pass headers per client object, which will be merged with any headers set globally with OpenAI.configure:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client = OpenAI::Client.new(access_token: &quot;access_token_goes_here&quot;)
client.add_headers(&quot;X-Proxy-TTL&quot; =&amp;gt; &quot;43200&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Logging&lt;/h4&gt; 
&lt;h5&gt;Errors&lt;/h5&gt; 
&lt;p&gt;By default, &lt;code&gt;ruby-openai&lt;/code&gt; does not log any &lt;code&gt;Faraday::Error&lt;/code&gt;s encountered while executing a network request to avoid leaking data (e.g. 400s, 500s, SSL errors and more - see &lt;a href=&quot;https://www.rubydoc.info/github/lostisland/faraday/Faraday/Error&quot;&gt;here&lt;/a&gt; for a complete list of subclasses of &lt;code&gt;Faraday::Error&lt;/code&gt; and what can cause them).&lt;/p&gt; 
&lt;p&gt;If you would like to enable this functionality, you can set &lt;code&gt;log_errors&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; when configuring the client:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client = OpenAI::Client.new(log_errors: true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Faraday middleware&lt;/h5&gt; 
&lt;p&gt;You can pass &lt;a href=&quot;https://lostisland.github.io/faraday/#/middleware/index&quot;&gt;Faraday middleware&lt;/a&gt; to the client in a block, eg. to enable verbose logging with Ruby&#39;s &lt;a href=&quot;https://ruby-doc.org/3.2.2/stdlibs/logger/Logger.html&quot;&gt;Logger&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client = OpenAI::Client.new do |f|
  f.response :logger, Logger.new($stdout), bodies: true
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Azure&lt;/h4&gt; 
&lt;p&gt;To use the &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/cognitive-services/openai/&quot;&gt;Azure OpenAI Service&lt;/a&gt; API, you can configure the gem like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;OpenAI.configure do |config|
  config.access_token = ENV.fetch(&quot;AZURE_OPENAI_API_KEY&quot;)
  config.uri_base = ENV.fetch(&quot;AZURE_OPENAI_URI&quot;)
  config.api_type = :azure
  config.api_version = &quot;2023-03-15-preview&quot;
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where &lt;code&gt;AZURE_OPENAI_URI&lt;/code&gt; is e.g. &lt;code&gt;https://custom-domain.openai.azure.com/openai/deployments/gpt-35-turbo&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;Deepseek&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://api-docs.deepseek.com/&quot;&gt;Deepseek&lt;/a&gt; is compatible with the OpenAI chat API. Get an access token from &lt;a href=&quot;https://platform.deepseek.com/api_keys&quot;&gt;here&lt;/a&gt;, then:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client = OpenAI::Client.new(
  access_token: &quot;deepseek_access_token_goes_here&quot;,
  uri_base: &quot;https://api.deepseek.com/&quot;
)

client.chat(
  parameters: {
    model: &quot;deepseek-chat&quot;, # Required.
    messages: [{ role: &quot;user&quot;, content: &quot;Hello!&quot;}], # Required.
    temperature: 0.7,
    stream: proc do |chunk, _bytesize|
     print chunk.dig(&quot;choices&quot;, 0, &quot;delta&quot;, &quot;content&quot;)
    end
  }
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Ollama&lt;/h4&gt; 
&lt;p&gt;Ollama allows you to run open-source LLMs, such as Llama 3, locally. It &lt;a href=&quot;https://github.com/ollama/ollama/raw/main/docs/openai.md&quot;&gt;offers chat compatibility&lt;/a&gt; with the OpenAI API.&lt;/p&gt; 
&lt;p&gt;You can download Ollama &lt;a href=&quot;https://ollama.com/&quot;&gt;here&lt;/a&gt;. On macOS you can install and run Ollama like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew install ollama
ollama serve
ollama pull llama3:latest # In new terminal tab.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a client using your Ollama server and the pulled model, and stream a conversation for free:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client = OpenAI::Client.new(
  uri_base: &quot;http://localhost:11434&quot;
)

client.chat(
  parameters: {
    model: &quot;llama3&quot;, # Required.
    messages: [{ role: &quot;user&quot;, content: &quot;Hello!&quot;}], # Required.
    temperature: 0.7,
    stream: proc do |chunk, _bytesize|
      print chunk.dig(&quot;choices&quot;, 0, &quot;delta&quot;, &quot;content&quot;)
    end
  }
)

# =&amp;gt; Hi! It&#39;s nice to meet you. Is there something I can help you with, or would you like to chat?
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Groq&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://console.groq.com/docs/quickstart&quot;&gt;Groq API Chat&lt;/a&gt; is broadly compatible with the OpenAI API, with a &lt;a href=&quot;https://console.groq.com/docs/openai&quot;&gt;few minor differences&lt;/a&gt;. Get an access token from &lt;a href=&quot;https://console.groq.com/keys&quot;&gt;here&lt;/a&gt;, then:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client = OpenAI::Client.new(
  access_token: &quot;groq_access_token_goes_here&quot;,
  uri_base: &quot;https://api.groq.com/openai&quot;
)

client.chat(
  parameters: {
    model: &quot;llama3-8b-8192&quot;, # Required.
    messages: [{ role: &quot;user&quot;, content: &quot;Hello!&quot;}], # Required.
    temperature: 0.7,
    stream: proc do |chunk, _bytesize|
     print chunk.dig(&quot;choices&quot;, 0, &quot;delta&quot;, &quot;content&quot;)
    end
  }
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Counting Tokens&lt;/h3&gt; 
&lt;p&gt;OpenAI parses prompt text into &lt;a href=&quot;https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them&quot;&gt;tokens&lt;/a&gt;, which are words or portions of words. (These tokens are unrelated to your API access_token.) Counting tokens can help you estimate your &lt;a href=&quot;https://openai.com/pricing&quot;&gt;costs&lt;/a&gt;. It can also help you ensure your prompt text size is within the max-token limits of your model&#39;s context window, and choose an appropriate &lt;a href=&quot;https://platform.openai.com/docs/api-reference/chat/create#chat/create-max_tokens&quot;&gt;&lt;code&gt;max_tokens&lt;/code&gt;&lt;/a&gt; completion parameter so your response will fit as well.&lt;/p&gt; 
&lt;p&gt;To estimate the token-count of your text:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;OpenAI.rough_token_count(&quot;Your text&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you need a more accurate count, try &lt;a href=&quot;https://github.com/IAPark/tiktoken_ruby&quot;&gt;tiktoken_ruby&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Models&lt;/h3&gt; 
&lt;p&gt;There are different models that can be used to generate text. For a full list and to retrieve information about a single model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.models.list
client.models.retrieve(id: &quot;gpt-4o&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also delete any finetuned model you generated, if you&#39;re an account Owner on your OpenAI organization:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.models.delete(id: &quot;ft:gpt-4o-mini:acemeco:suffix:abc123&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chat&lt;/h3&gt; 
&lt;p&gt;GPT is a model that can be used to generate text in a conversational style. You can use it to &lt;a href=&quot;https://platform.openai.com/docs/api-reference/chat/create&quot;&gt;generate a response&lt;/a&gt; to a sequence of &lt;a href=&quot;https://platform.openai.com/docs/guides/chat/introduction&quot;&gt;messages&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.chat(
  parameters: {
    model: &quot;gpt-4o&quot;, # Required.
    messages: [{ role: &quot;user&quot;, content: &quot;Hello!&quot;}], # Required.
    temperature: 0.7,
  }
)
puts response.dig(&quot;choices&quot;, 0, &quot;message&quot;, &quot;content&quot;)
# =&amp;gt; &quot;Hello! How may I assist you today?&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Streaming Chat&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/alexrudall/cb5ee1e109353ef358adb4e66631799d&quot;&gt;Quick guide to streaming Chat with Rails 7 and Hotwire&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can stream from the API in realtime, which can be much faster and used to create a more engaging user experience. Pass a &lt;a href=&quot;https://ruby-doc.org/core-2.6/Proc.html&quot;&gt;Proc&lt;/a&gt; (or any object with a &lt;code&gt;#call&lt;/code&gt; method) to the &lt;code&gt;stream&lt;/code&gt; parameter to receive the stream of completion chunks as they are generated. Each time one or more chunks is received, the proc will be called once with each chunk, parsed as a Hash. If OpenAI returns an error, &lt;code&gt;ruby-openai&lt;/code&gt; will raise a Faraday error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.chat(
  parameters: {
    model: &quot;gpt-4o&quot;, # Required.
    messages: [{ role: &quot;user&quot;, content: &quot;Describe a character called Anna!&quot;}], # Required.
    temperature: 0.7,
    stream: proc do |chunk, _bytesize|
      print chunk.dig(&quot;choices&quot;, 0, &quot;delta&quot;, &quot;content&quot;)
    end
  }
)
# =&amp;gt; &quot;Anna is a young woman in her mid-twenties, with wavy chestnut hair that falls to her shoulders...&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: In order to get usage information, you can provide the &lt;a href=&quot;https://platform.openai.com/docs/api-reference/chat/create#chat-create-stream_options&quot;&gt;&lt;code&gt;stream_options&lt;/code&gt; parameter&lt;/a&gt; and OpenAI will provide a final chunk with the usage. Here is an example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;stream_proc = proc { |chunk, _bytesize| puts &quot;--------------&quot;; puts chunk.inspect; }
client.chat(
  parameters: {
    model: &quot;gpt-4o&quot;,
    stream: stream_proc,
    stream_options: { include_usage: true },
    messages: [{ role: &quot;user&quot;, content: &quot;Hello!&quot;}],
  }
)
# =&amp;gt; --------------
# =&amp;gt; {&quot;id&quot;=&amp;gt;&quot;chatcmpl-7bbq05PiZqlHxjV1j7OHnKKDURKaf&quot;, &quot;object&quot;=&amp;gt;&quot;chat.completion.chunk&quot;, &quot;created&quot;=&amp;gt;1718750612, &quot;model&quot;=&amp;gt;&quot;gpt-4o-2024-05-13&quot;, &quot;system_fingerprint&quot;=&amp;gt;&quot;fp_9cb5d38cf7&quot;, &quot;choices&quot;=&amp;gt;[{&quot;index&quot;=&amp;gt;0, &quot;delta&quot;=&amp;gt;{&quot;role&quot;=&amp;gt;&quot;assistant&quot;, &quot;content&quot;=&amp;gt;&quot;&quot;}, &quot;logprobs&quot;=&amp;gt;nil, &quot;finish_reason&quot;=&amp;gt;nil}], &quot;usage&quot;=&amp;gt;nil}
# =&amp;gt; --------------
# =&amp;gt; {&quot;id&quot;=&amp;gt;&quot;chatcmpl-7bbq05PiZqlHxjV1j7OHnKKDURKaf&quot;, &quot;object&quot;=&amp;gt;&quot;chat.completion.chunk&quot;, &quot;created&quot;=&amp;gt;1718750612, &quot;model&quot;=&amp;gt;&quot;gpt-4o-2024-05-13&quot;, &quot;system_fingerprint&quot;=&amp;gt;&quot;fp_9cb5d38cf7&quot;, &quot;choices&quot;=&amp;gt;[{&quot;index&quot;=&amp;gt;0, &quot;delta&quot;=&amp;gt;{&quot;content&quot;=&amp;gt;&quot;Hello&quot;}, &quot;logprobs&quot;=&amp;gt;nil, &quot;finish_reason&quot;=&amp;gt;nil}], &quot;usage&quot;=&amp;gt;nil}
# =&amp;gt; --------------
# =&amp;gt; ... more content chunks
# =&amp;gt; --------------
# =&amp;gt; {&quot;id&quot;=&amp;gt;&quot;chatcmpl-7bbq05PiZqlHxjV1j7OHnKKDURKaf&quot;, &quot;object&quot;=&amp;gt;&quot;chat.completion.chunk&quot;, &quot;created&quot;=&amp;gt;1718750612, &quot;model&quot;=&amp;gt;&quot;gpt-4o-2024-05-13&quot;, &quot;system_fingerprint&quot;=&amp;gt;&quot;fp_9cb5d38cf7&quot;, &quot;choices&quot;=&amp;gt;[{&quot;index&quot;=&amp;gt;0, &quot;delta&quot;=&amp;gt;{}, &quot;logprobs&quot;=&amp;gt;nil, &quot;finish_reason&quot;=&amp;gt;&quot;stop&quot;}], &quot;usage&quot;=&amp;gt;nil}
# =&amp;gt; --------------
# =&amp;gt; {&quot;id&quot;=&amp;gt;&quot;chatcmpl-7bbq05PiZqlHxjV1j7OHnKKDURKaf&quot;, &quot;object&quot;=&amp;gt;&quot;chat.completion.chunk&quot;, &quot;created&quot;=&amp;gt;1718750612, &quot;model&quot;=&amp;gt;&quot;gpt-4o-2024-05-13&quot;, &quot;system_fingerprint&quot;=&amp;gt;&quot;fp_9cb5d38cf7&quot;, &quot;choices&quot;=&amp;gt;[], &quot;usage&quot;=&amp;gt;{&quot;prompt_tokens&quot;=&amp;gt;9, &quot;completion_tokens&quot;=&amp;gt;9, &quot;total_tokens&quot;=&amp;gt;18}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Vision&lt;/h4&gt; 
&lt;p&gt;You can use the GPT-4 Vision model to generate a description of an image:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;messages = [
  { &quot;type&quot;: &quot;text&quot;, &quot;text&quot;: &quot;What‚Äôs in this image?&quot;},
  { &quot;type&quot;: &quot;image_url&quot;,
    &quot;image_url&quot;: {
      &quot;url&quot;: &quot;https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg&quot;,
    },
  }
]
response = client.chat(
  parameters: {
    model: &quot;gpt-4-vision-preview&quot;, # Required.
    messages: [{ role: &quot;user&quot;, content: messages}], # Required.
  }
)
puts response.dig(&quot;choices&quot;, 0, &quot;message&quot;, &quot;content&quot;)
# =&amp;gt; &quot;The image depicts a serene natural landscape featuring a long wooden boardwalk extending straight ahead&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;JSON Mode&lt;/h4&gt; 
&lt;p&gt;You can set the response_format to ask for responses in JSON:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.chat(
  parameters: {
    model: &quot;gpt-4o&quot;,
    response_format: { type: &quot;json_object&quot; },
    messages: [{ role: &quot;user&quot;, content: &quot;Hello! Give me some JSON please.&quot;}],
    temperature: 0.7,
  })
  puts response.dig(&quot;choices&quot;, 0, &quot;message&quot;, &quot;content&quot;)
  # =&amp;gt;
  # {
  #   &quot;name&quot;: &quot;John&quot;,
  #   &quot;age&quot;: 30,
  #   &quot;city&quot;: &quot;New York&quot;,
  #   &quot;hobbies&quot;: [&quot;reading&quot;, &quot;traveling&quot;, &quot;hiking&quot;],
  #   &quot;isStudent&quot;: false
  # }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can stream it as well!&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;  response = client.chat(
    parameters: {
      model: &quot;gpt-4o&quot;,
      messages: [{ role: &quot;user&quot;, content: &quot;Can I have some JSON please?&quot;}],
      response_format: { type: &quot;json_object&quot; },
      stream: proc do |chunk, _bytesize|
        print chunk.dig(&quot;choices&quot;, 0, &quot;delta&quot;, &quot;content&quot;)
      end
    }
  )
  # =&amp;gt;
  # {
  #   &quot;message&quot;: &quot;Sure, please let me know what specific JSON data you are looking for.&quot;,
  #   &quot;JSON_data&quot;: {
  #     &quot;example_1&quot;: {
  #       &quot;key_1&quot;: &quot;value_1&quot;,
  #       &quot;key_2&quot;: &quot;value_2&quot;,
  #       &quot;key_3&quot;: &quot;value_3&quot;
  #     },
  #     &quot;example_2&quot;: {
  #       &quot;key_4&quot;: &quot;value_4&quot;,
  #       &quot;key_5&quot;: &quot;value_5&quot;,
  #       &quot;key_6&quot;: &quot;value_6&quot;
  #     }
  #   }
  # }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Responses API&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://platform.openai.com/docs/api-reference/responses&quot;&gt;OpenAI&#39;s most advanced interface for generating model responses&lt;/a&gt;. Supports text and image inputs, and text outputs. Create stateful interactions with the model, using the output of previous responses as input. Extend the model&#39;s capabilities with built-in tools for file search, web search, computer use, and more. Allow the model access to external systems and data using function calling.&lt;/p&gt; 
&lt;h4&gt;Create a Response&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.responses.create(parameters: {
  model: &quot;gpt-4o&quot;,
  input: &quot;Hello! I&#39;m Szymon!&quot;
})
puts response.dig(&quot;output&quot;, 0, &quot;content&quot;, 0, &quot;text&quot;)
# =&amp;gt; Hello Szymon! How can I assist you today?
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Follow-up Messages&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;followup = client.responses.create(parameters: {
  model: &quot;gpt-4o&quot;,
  input: &quot;Remind me, what is my name?&quot;,
  previous_response_id: response[&quot;id&quot;]
})
puts followup.dig(&quot;output&quot;, 0, &quot;content&quot;, 0, &quot;text&quot;)
# =&amp;gt; Your name is Szymon! How can I help you today?
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Tool Calls&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.responses.create(parameters: {
  model: &quot;gpt-4o&quot;,
  input: &quot;What&#39;s the weather in Paris?&quot;,
  tools: [
    {
      &quot;type&quot; =&amp;gt; &quot;function&quot;,
      &quot;name&quot; =&amp;gt; &quot;get_current_weather&quot;,
      &quot;description&quot; =&amp;gt; &quot;Get the current weather in a given location&quot;,
      &quot;parameters&quot; =&amp;gt; {
        &quot;type&quot; =&amp;gt; &quot;object&quot;,
        &quot;properties&quot; =&amp;gt; {
          &quot;location&quot; =&amp;gt; {
            &quot;type&quot; =&amp;gt; &quot;string&quot;,
            &quot;description&quot; =&amp;gt; &quot;The geographic location to get the weather for&quot;
          }
        },
        &quot;required&quot; =&amp;gt; [&quot;location&quot;]
      }
    }
  ]
})
puts response.dig(&quot;output&quot;, 0, &quot;name&quot;)
# =&amp;gt; &quot;get_current_weather&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Streaming&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.responses.create(
  parameters: {
    model: &quot;gpt-4o&quot;, # Required.
    input: &quot;Hello!&quot;, # Required.
    stream: proc do |chunk, _bytesize|
      if chunk[&quot;type&quot;] == &quot;response.output_text.delta&quot;
        print chunk[&quot;delta&quot;]
        $stdout.flush  # Ensure output is displayed immediately
      end
    end
  }
)
# =&amp;gt; &quot;Hi there! How can I assist you today?...&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Retrieve a Response&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;retrieved_response = client.responses.retrieve(response_id: response[&quot;id&quot;])
puts retrieved_response[&quot;object&quot;]
# =&amp;gt; &quot;response&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Delete a Response&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;deletion = client.responses.delete(response_id: response[&quot;id&quot;])
puts deletion[&quot;deleted&quot;]
# =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;List Input Items&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;input_items = client.responses.input_items(response_id: response[&quot;id&quot;])
puts input_items[&quot;object&quot;] # =&amp;gt; &quot;list&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Functions&lt;/h3&gt; 
&lt;p&gt;You can describe and pass in functions and the model will intelligently choose to output a JSON object containing arguments to call them - eg., to use your method &lt;code&gt;get_current_weather&lt;/code&gt; to get the weather in a given location. Note that tool_choice is optional, but if you exclude it, the model will choose whether to use the function or not (&lt;a href=&quot;https://platform.openai.com/docs/api-reference/chat/create#chat-create-tool_choice&quot;&gt;see here&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;def get_current_weather(location:, unit: &quot;fahrenheit&quot;)
  # Here you could use a weather api to fetch the weather.
  &quot;The weather in #{location} is nice üåû #{unit}&quot;
end

messages = [
  {
    &quot;role&quot;: &quot;user&quot;,
    &quot;content&quot;: &quot;What is the weather like in San Francisco?&quot;,
  },
]

response =
  client.chat(
    parameters: {
      model: &quot;gpt-4o&quot;,
      messages: messages,  # Defined above because we&#39;ll use it again
      tools: [
        {
          type: &quot;function&quot;,
          function: {
            name: &quot;get_current_weather&quot;,
            description: &quot;Get the current weather in a given location&quot;,
            parameters: {  # Format: https://json-schema.org/understanding-json-schema
              type: :object,
              properties: {
                location: {
                  type: :string,
                  description: &quot;The city and state, e.g. San Francisco, CA&quot;,
                },
                unit: {
                  type: &quot;string&quot;,
                  enum: %w[celsius fahrenheit],
                },
              },
              required: [&quot;location&quot;],
            },
          },
        }
      ],
      # Optional, defaults to &quot;auto&quot;
      # Can also put &quot;none&quot; or specific functions, see docs
      tool_choice: &quot;required&quot;
    },
  )

message = response.dig(&quot;choices&quot;, 0, &quot;message&quot;)

if message[&quot;role&quot;] == &quot;assistant&quot; &amp;amp;&amp;amp; message[&quot;tool_calls&quot;]
  message[&quot;tool_calls&quot;].each do |tool_call|
    tool_call_id = tool_call.dig(&quot;id&quot;)
    function_name = tool_call.dig(&quot;function&quot;, &quot;name&quot;)
    function_args = JSON.parse(
      tool_call.dig(&quot;function&quot;, &quot;arguments&quot;),
      { symbolize_names: true },
    )
    function_response =
      case function_name
      when &quot;get_current_weather&quot;
        get_current_weather(**function_args)  # =&amp;gt; &quot;The weather is nice üåû&quot;
      else
        # decide how to handle
      end

    # For a subsequent message with the role &quot;tool&quot;, OpenAI requires the preceding message to have a tool_calls argument.
    messages &amp;lt;&amp;lt; message

    messages &amp;lt;&amp;lt; {
      tool_call_id: tool_call_id,
      role: &quot;tool&quot;,
      name: function_name,
      content: function_response
    }  # Extend the conversation with the results of the functions
  end

  second_response = client.chat(
    parameters: {
      model: &quot;gpt-4o&quot;,
      messages: messages
    }
  )

  puts second_response.dig(&quot;choices&quot;, 0, &quot;message&quot;, &quot;content&quot;)

  # At this point, the model has decided to call functions, you&#39;ve called the functions
  # and provided the response back, and the model has considered this and responded.
end
# =&amp;gt; &quot;It looks like the weather is nice and sunny in San Francisco! If you&#39;re planning to go out, it should be a pleasant day.&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Completions&lt;/h3&gt; 
&lt;p&gt;Hit the OpenAI API for a completion using other GPT-3 models:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.completions(
  parameters: {
    model: &quot;gpt-4o&quot;,
    prompt: &quot;Once upon a time&quot;,
    max_tokens: 5
  }
)
puts response[&quot;choices&quot;].map { |c| c[&quot;text&quot;] }
# =&amp;gt; [&quot;, there lived a great&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Embeddings&lt;/h3&gt; 
&lt;p&gt;You can use the embeddings endpoint to get a vector of numbers representing an input. You can then compare these vectors for different inputs to efficiently check how similar the inputs are.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.embeddings(
  parameters: {
    model: &quot;text-embedding-ada-002&quot;,
    input: &quot;The food was delicious and the waiter...&quot;
  }
)

puts response.dig(&quot;data&quot;, 0, &quot;embedding&quot;)
# =&amp;gt; Vector representation of your embedding
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Batches&lt;/h3&gt; 
&lt;p&gt;The Batches endpoint allows you to create and manage large batches of API requests to run asynchronously. Currently, the supported endpoints for batches are &lt;code&gt;/v1/chat/completions&lt;/code&gt; (Chat Completions API) and &lt;code&gt;/v1/embeddings&lt;/code&gt; (Embeddings API).&lt;/p&gt; 
&lt;p&gt;To use the Batches endpoint, you need to first upload a JSONL file containing the batch requests using the Files endpoint. The file must be uploaded with the purpose set to &lt;code&gt;batch&lt;/code&gt;. Each line in the JSONL file represents a single request and should have the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;custom_id&quot;: &quot;request-1&quot;,
  &quot;method&quot;: &quot;POST&quot;,
  &quot;url&quot;: &quot;/v1/chat/completions&quot;,
  &quot;body&quot;: {
    &quot;model&quot;: &quot;gpt-4o&quot;,
    &quot;messages&quot;: [
      { &quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a helpful assistant.&quot; },
      { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;What is 2+2?&quot; }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once you have uploaded the JSONL file, you can create a new batch by providing the file ID, endpoint, and completion window:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.batches.create(
  parameters: {
    input_file_id: &quot;file-abc123&quot;,
    endpoint: &quot;/v1/chat/completions&quot;,
    completion_window: &quot;24h&quot;
  }
)
batch_id = response[&quot;id&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can retrieve information about a specific batch using its ID:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;batch = client.batches.retrieve(id: batch_id)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To cancel a batch that is in progress:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.batches.cancel(id: batch_id)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also list all the batches:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.batches.list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once the batch[&quot;completed_at&quot;] is present, you can fetch the output or error files:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;batch = client.batches.retrieve(id: batch_id)
output_file_id = batch[&quot;output_file_id&quot;]
output_response = client.files.content(id: output_file_id)
error_file_id = batch[&quot;error_file_id&quot;]
error_response = client.files.content(id: error_file_id)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These files are in JSONL format, with each line representing the output or error for a single request. The lines can be in any order:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;id&quot;: &quot;response-1&quot;,
  &quot;custom_id&quot;: &quot;request-1&quot;,
  &quot;response&quot;: {
    &quot;id&quot;: &quot;chatcmpl-abc123&quot;,
    &quot;object&quot;: &quot;chat.completion&quot;,
    &quot;created&quot;: 1677858242,
    &quot;model&quot;: &quot;gpt-4o&quot;,
    &quot;choices&quot;: [
      {
        &quot;index&quot;: 0,
        &quot;message&quot;: {
          &quot;role&quot;: &quot;assistant&quot;,
          &quot;content&quot;: &quot;2+2 equals 4.&quot;
        }
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If a request fails with a non-HTTP error, the error object will contain more information about the cause of the failure.&lt;/p&gt; 
&lt;h3&gt;Files&lt;/h3&gt; 
&lt;h4&gt;For fine-tuning purposes&lt;/h4&gt; 
&lt;p&gt;Put your data in a &lt;code&gt;.jsonl&lt;/code&gt; file like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{&quot;prompt&quot;:&quot;Overjoyed with my new phone! -&amp;gt;&quot;, &quot;completion&quot;:&quot; positive&quot;}
{&quot;prompt&quot;:&quot;@lakers disappoint for a third straight night -&amp;gt;&quot;, &quot;completion&quot;:&quot; negative&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and pass the path (or a StringIO object) to &lt;code&gt;client.files.upload&lt;/code&gt; to upload it to OpenAI, and then interact with it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.files.upload(parameters: { file: &quot;path/to/sentiment.jsonl&quot;, purpose: &quot;fine-tune&quot; })
client.files.list
client.files.retrieve(id: &quot;file-123&quot;)
client.files.content(id: &quot;file-123&quot;)
client.files.delete(id: &quot;file-123&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;For assistant purposes&lt;/h4&gt; 
&lt;p&gt;You can send a file path:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.files.upload(parameters: { file: &quot;path/to/file.pdf&quot;, purpose: &quot;assistants&quot; })
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or a File object&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;my_file = File.open(&quot;path/to/file.pdf&quot;, &quot;rb&quot;)
client.files.upload(parameters: { file: my_file, purpose: &quot;assistants&quot; })
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See supported file types on &lt;a href=&quot;https://platform.openai.com/docs/assistants/tools/file-search/supported-files&quot;&gt;API documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Finetunes&lt;/h3&gt; 
&lt;p&gt;Upload your fine-tuning data in a &lt;code&gt;.jsonl&lt;/code&gt; file as above and get its ID:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.files.upload(parameters: { file: &quot;path/to/sarcasm.jsonl&quot;, purpose: &quot;fine-tune&quot; })
file_id = JSON.parse(response.body)[&quot;id&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can then use this file ID to create a fine tuning job:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.finetunes.create(
  parameters: {
  training_file: file_id,
  model: &quot;gpt-4o&quot;
})
fine_tune_id = response[&quot;id&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That will give you the fine-tune ID. If you made a mistake you can cancel the fine-tune model before it is processed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.finetunes.cancel(id: fine_tune_id)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may need to wait a short time for processing to complete. Once processed, you can use list or retrieve to get the name of the fine-tuned model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.finetunes.list
response = client.finetunes.retrieve(id: fine_tune_id)
fine_tuned_model = response[&quot;fine_tuned_model&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This fine-tuned model name can then be used in chat completions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.chat(
  parameters: {
    model: fine_tuned_model,
    messages: [{ role: &quot;user&quot;, content: &quot;I love Mondays!&quot; }]
  }
)
response.dig(&quot;choices&quot;, 0, &quot;message&quot;, &quot;content&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also capture the events for a job:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.finetunes.list_events(id: fine_tune_id)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also delete any finetuned model you generated, if you&#39;re an account Owner on your OpenAI organization:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.models.delete(id: fine_tune_id)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Vector Stores&lt;/h3&gt; 
&lt;p&gt;Vector Store objects give the File Search tool the ability to search your files.&lt;/p&gt; 
&lt;p&gt;You can create a new vector store:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.vector_stores.create(
  parameters: {
    name: &quot;my vector store&quot;,
    file_ids: [&quot;file-abc123&quot;, &quot;file-def456&quot;]
  }
)

vector_store_id = response[&quot;id&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Given a &lt;code&gt;vector_store_id&lt;/code&gt; you can &lt;code&gt;retrieve&lt;/code&gt; the current field values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.vector_stores.retrieve(id: vector_store_id)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can get a &lt;code&gt;list&lt;/code&gt; of all vector stores currently available under the organization:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.vector_stores.list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can modify an existing vector store, except for the &lt;code&gt;file_ids&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.vector_stores.modify(
  id: vector_store_id,
  parameters: {
    name: &quot;Modified Test Vector Store&quot;,
  }
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can delete vector stores:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.vector_stores.delete(id: vector_store_id)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Vector Store Files&lt;/h3&gt; 
&lt;p&gt;Vector store files represent files inside a vector store.&lt;/p&gt; 
&lt;p&gt;You can create a new vector store file by attaching a File to a vector store.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.vector_store_files.create(
  vector_store_id: &quot;vector-store-abc123&quot;,
  parameters: {
    file_id: &quot;file-abc123&quot;
  }
)

vector_store_file_id = response[&quot;id&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Given a &lt;code&gt;vector_store_file_id&lt;/code&gt; you can &lt;code&gt;retrieve&lt;/code&gt; the current field values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.vector_store_files.retrieve(
  vector_store_id: &quot;vector-store-abc123&quot;,
  id: vector_store_file_id
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can get a &lt;code&gt;list&lt;/code&gt; of all vector store files currently available under the vector store:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.vector_store_files.list(vector_store_id: &quot;vector-store-abc123&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can delete a vector store file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.vector_store_files.delete(
  vector_store_id: &quot;vector-store-abc123&quot;,
  id: vector_store_file_id
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: This will remove the file from the vector store but the file itself will not be deleted. To delete the file, use the delete file endpoint.&lt;/p&gt; 
&lt;h3&gt;Vector Store File Batches&lt;/h3&gt; 
&lt;p&gt;Vector store file batches represent operations to add multiple files to a vector store.&lt;/p&gt; 
&lt;p&gt;You can create a new vector store file batch by attaching multiple Files to a vector store.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.vector_store_file_batches.create(
  vector_store_id: &quot;vector-store-abc123&quot;,
  parameters: {
    file_ids: [&quot;file-abc123&quot;, &quot;file-def456&quot;]
  }
)

file_batch_id = response[&quot;id&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Given a &lt;code&gt;file_batch_id&lt;/code&gt; you can &lt;code&gt;retrieve&lt;/code&gt; the current field values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.vector_store_file_batches.retrieve(
  vector_store_id: &quot;vector-store-abc123&quot;,
  id: file_batch_id
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can get a &lt;code&gt;list&lt;/code&gt; of all vector store files in a batch currently available under the vector store:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.vector_store_file_batches.list(
  vector_store_id: &quot;vector-store-abc123&quot;,
  id: file_batch_id
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can cancel a vector store file batch (This attempts to cancel the processing of files in this batch as soon as possible):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.vector_store_file_batches.cancel(
  vector_store_id: &quot;vector-store-abc123&quot;,
  id: file_batch_id
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Assistants&lt;/h3&gt; 
&lt;p&gt;Assistants are stateful actors that can have many conversations and use tools to perform tasks (see &lt;a href=&quot;https://platform.openai.com/docs/assistants/overview&quot;&gt;Assistant Overview&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;To create a new assistant:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.assistants.create(
  parameters: {
    model: &quot;gpt-4o&quot;,
    name: &quot;OpenAI-Ruby test assistant&quot;,
    description: nil,
    instructions: &quot;You are a Ruby dev bot. When asked a question, write and run Ruby code to answer the question&quot;,
    tools: [
      { type: &quot;code_interpreter&quot; },
      { type: &quot;file_search&quot; }
    ],
    tool_resources: {
      code_interpreter: {
        file_ids: [] # See Files section above for how to upload files
      },
      file_search: {
        vector_store_ids: [] # See Vector Stores section above for how to add vector stores
      }
    },
    &quot;metadata&quot;: { my_internal_version_id: &quot;1.0.0&quot; }
  }
)
assistant_id = response[&quot;id&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Given an &lt;code&gt;assistant_id&lt;/code&gt; you can &lt;code&gt;retrieve&lt;/code&gt; the current field values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.assistants.retrieve(id: assistant_id)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can get a &lt;code&gt;list&lt;/code&gt; of all assistants currently available under the organization:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.assistants.list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can modify an existing assistant using the assistant&#39;s id (see &lt;a href=&quot;https://platform.openai.com/docs/api-reference/assistants/modifyAssistant&quot;&gt;API documentation&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.assistants.modify(
  id: assistant_id,
  parameters: {
    name: &quot;Modified Test Assistant for OpenAI-Ruby&quot;,
    metadata: { my_internal_version_id: &#39;1.0.1&#39; }
  }
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can delete assistants:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.assistants.delete(id: assistant_id)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Threads and Messages&lt;/h3&gt; 
&lt;p&gt;Once you have created an assistant as described above, you need to prepare a &lt;code&gt;Thread&lt;/code&gt; of &lt;code&gt;Messages&lt;/code&gt; for the assistant to work on (see &lt;a href=&quot;https://platform.openai.com/docs/assistants/how-it-works&quot;&gt;introduction on Assistants&lt;/a&gt;). For example, as an initial setup you could do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Create thread
response = client.threads.create # Note: Once you create a thread, there is no way to list it
                                 # or recover it currently (as of 2023-12-10). So hold onto the `id`
thread_id = response[&quot;id&quot;]

# Add initial message from user (see https://platform.openai.com/docs/api-reference/messages/createMessage)
message_id = client.messages.create(
  thread_id: thread_id,
  parameters: {
    role: &quot;user&quot;, # Required for manually created messages
    content: &quot;Can you help me write an API library to interact with the OpenAI API please?&quot;
  }
)[&quot;id&quot;]

# Retrieve individual message
message = client.messages.retrieve(thread_id: thread_id, id: message_id)

# Review all messages on the thread
messages = client.messages.list(thread_id: thread_id)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To clean up after a thread is no longer needed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# To delete the thread (and all associated messages):
client.threads.delete(id: thread_id)

client.messages.retrieve(thread_id: thread_id, id: message_id) # -&amp;gt; Fails after thread is deleted
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Runs&lt;/h3&gt; 
&lt;p&gt;To submit a thread to be evaluated with the model of an assistant, create a &lt;code&gt;Run&lt;/code&gt; as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Create run (will use instruction/model/tools from Assistant&#39;s definition)
response = client.runs.create(
  thread_id: thread_id,
  parameters: {
    assistant_id: assistant_id,
    max_prompt_tokens: 256,
    max_completion_tokens: 16
  }
)
run_id = response[&#39;id&#39;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can stream the message chunks as they come through:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.runs.create(
  thread_id: thread_id,
  parameters: {
    assistant_id: assistant_id,
    max_prompt_tokens: 256,
    max_completion_tokens: 16,
    stream: proc do |chunk, _bytesize|
      if chunk[&quot;object&quot;] == &quot;thread.message.delta&quot;
        print chunk.dig(&quot;delta&quot;, &quot;content&quot;, 0, &quot;text&quot;, &quot;value&quot;)
      end
    end
  }
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get the status of a Run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.runs.retrieve(id: run_id, thread_id: thread_id)
status = response[&#39;status&#39;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;status&lt;/code&gt; response can include the following strings &lt;code&gt;queued&lt;/code&gt;, &lt;code&gt;in_progress&lt;/code&gt;, &lt;code&gt;requires_action&lt;/code&gt;, &lt;code&gt;cancelling&lt;/code&gt;, &lt;code&gt;cancelled&lt;/code&gt;, &lt;code&gt;failed&lt;/code&gt;, &lt;code&gt;completed&lt;/code&gt;, or &lt;code&gt;expired&lt;/code&gt; which you can handle as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;while true do
  response = client.runs.retrieve(id: run_id, thread_id: thread_id)
  status = response[&#39;status&#39;]

  case status
  when &#39;queued&#39;, &#39;in_progress&#39;, &#39;cancelling&#39;
    puts &#39;Sleeping&#39;
    sleep 1 # Wait one second and poll again
  when &#39;completed&#39;
    break # Exit loop and report result to user
  when &#39;requires_action&#39;
    # Handle tool calls (see below)
  when &#39;cancelled&#39;, &#39;failed&#39;, &#39;expired&#39;
    puts response[&#39;last_error&#39;].inspect
    break # or `exit`
  else
    puts &quot;Unknown status response: #{status}&quot;
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the &lt;code&gt;status&lt;/code&gt; response indicates that the &lt;code&gt;run&lt;/code&gt; is &lt;code&gt;completed&lt;/code&gt;, the associated &lt;code&gt;thread&lt;/code&gt; will have one or more new &lt;code&gt;messages&lt;/code&gt; attached:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Either retrieve all messages in bulk again, or...
messages = client.messages.list(thread_id: thread_id, parameters: { order: &#39;asc&#39; })

# Alternatively retrieve the `run steps` for the run which link to the messages:
run_steps = client.run_steps.list(thread_id: thread_id, run_id: run_id, parameters: { order: &#39;asc&#39; })
new_message_ids = run_steps[&#39;data&#39;].filter_map do |step|
  if step[&#39;type&#39;] == &#39;message_creation&#39;
    step.dig(&#39;step_details&#39;, &quot;message_creation&quot;, &quot;message_id&quot;)
  end # Ignore tool calls, because they don&#39;t create new messages.
end

# Retrieve the individual messages
new_messages = new_message_ids.map do |msg_id|
  client.messages.retrieve(id: msg_id, thread_id: thread_id)
end

# Find the actual response text in the content array of the messages
new_messages.each do |msg|
  msg[&#39;content&#39;].each do |content_item|
    case content_item[&#39;type&#39;]
    when &#39;text&#39;
      puts content_item.dig(&#39;text&#39;, &#39;value&#39;)
      # Also handle annotations
    when &#39;image_file&#39;
      # Use File endpoint to retrieve file contents via id
      id = content_item.dig(&#39;image_file&#39;, &#39;file_id&#39;)
    end
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also update the metadata on messages, including messages that come from the assistant.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;metadata = {
  user_id: &quot;abc123&quot;
}
message = client.messages.modify(
  id: message_id,
  thread_id: thread_id,
  parameters: { metadata: metadata },
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At any time you can list all runs which have been performed on a particular thread or are currently running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;client.runs.list(thread_id: thread_id, parameters: { order: &quot;asc&quot;, limit: 3 })
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Create and Run&lt;/h4&gt; 
&lt;p&gt;You can also create a thread and run in one call like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.runs.create_thread_and_run(parameters: { assistant_id: assistant_id })
run_id = response[&#39;id&#39;]
thread_id = response[&#39;thread_id&#39;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Vision in a thread&lt;/h4&gt; 
&lt;p&gt;You can include images in a thread and they will be described &amp;amp; read by the LLM. In this example I&#39;m using &lt;a href=&quot;https://upload.wikimedia.org/wikipedia/commons/7/70/Example.png&quot;&gt;this file&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;require &quot;openai&quot;

# Make a client
client = OpenAI::Client.new(
  access_token: &quot;access_token_goes_here&quot;,
  log_errors: true # Don&#39;t log errors in production.
)

# Upload image as a file
file_id = client.files.upload(
  parameters: {
    file: &quot;path/to/example.png&quot;,
    purpose: &quot;assistants&quot;,
  }
)[&quot;id&quot;]

# Create assistant (You could also use an existing one here)
assistant_id = client.assistants.create(
  parameters: {
    model: &quot;gpt-4o&quot;,
    name: &quot;Image reader&quot;,
    instructions: &quot;You are an image describer. You describe the contents of images.&quot;,
  }
)[&quot;id&quot;]

# Create thread
thread_id = client.threads.create[&quot;id&quot;]

# Add image in message
client.messages.create(
  thread_id: thread_id,
  parameters: {
    role: &quot;user&quot;, # Required for manually created messages
    content: [
      {
        &quot;type&quot;: &quot;text&quot;,
        &quot;text&quot;: &quot;What&#39;s in this image?&quot;
      },
      {
        &quot;type&quot;: &quot;image_file&quot;,
        &quot;image_file&quot;: { &quot;file_id&quot;: file_id }
      }
    ]
  }
)

# Run thread
run_id = client.runs.create(
  thread_id: thread_id,
  parameters: { assistant_id: assistant_id }
)[&quot;id&quot;]

# Wait until run in complete
status = nil
until status == &quot;completed&quot; do
  sleep(0.1)
  status = client.runs.retrieve(id: run_id, thread_id: thread_id)[&#39;status&#39;]
end

# Get the response
messages = client.messages.list(thread_id: thread_id, parameters: { order: &#39;asc&#39; })
messages.dig(&quot;data&quot;, -1, &quot;content&quot;, 0, &quot;text&quot;, &quot;value&quot;)
=&amp;gt; &quot;The image contains a placeholder graphic with a tilted, stylized representation of a postage stamp in the top part, which includes an abstract landscape with hills and a sun. Below the stamp, in the middle of the image, there is italicized text in a light golden color that reads, \&quot;This is just an example.\&quot; The background is a light pastel shade, and a yellow border frames the entire image.&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Runs involving function tools&lt;/h4&gt; 
&lt;p&gt;In case you are allowing the assistant to access &lt;code&gt;function&lt;/code&gt; tools (they are defined in the same way as functions during chat completion), you might get a status code of &lt;code&gt;requires_action&lt;/code&gt; when the assistant wants you to evaluate one or more function tools:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;def get_current_weather(location:, unit: &quot;celsius&quot;)
  # Your function code goes here
  if location =~ /San Francisco/i
    return unit == &quot;celsius&quot; ? &quot;The weather is nice üåû at 27¬∞C&quot; : &quot;The weather is nice üåû at 80¬∞F&quot;
  else
    return unit == &quot;celsius&quot; ? &quot;The weather is icy ü•∂ at -5¬∞C&quot; : &quot;The weather is icy ü•∂ at 23¬∞F&quot;
  end
end

if status == &#39;requires_action&#39;
  tools_to_call = response.dig(&#39;required_action&#39;, &#39;submit_tool_outputs&#39;, &#39;tool_calls&#39;)

  my_tool_outputs = tools_to_call.map { |tool|
    # Call the functions based on the tool&#39;s name
    function_name = tool.dig(&#39;function&#39;, &#39;name&#39;)
    arguments = JSON.parse(
      tool.dig(&quot;function&quot;, &quot;arguments&quot;),
      { symbolize_names: true },
    )

    tool_output = case function_name
    when &quot;get_current_weather&quot;
      get_current_weather(**arguments)
    end

    {
      tool_call_id: tool[&#39;id&#39;],
      output: tool_output,
    }
  }

  client.runs.submit_tool_outputs(
    thread_id: thread_id,
    run_id: run_id,
    parameters: { tool_outputs: my_tool_outputs }
  )
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you have 10 minutes to submit your tool output before the run expires.&lt;/p&gt; 
&lt;h4&gt;Exploring chunks used in File Search&lt;/h4&gt; 
&lt;p&gt;Take a deep breath. You might need a drink for this one.&lt;/p&gt; 
&lt;p&gt;It&#39;s possible for OpenAI to share what chunks it used in its internal RAG Pipeline to create its filesearch results.&lt;/p&gt; 
&lt;p&gt;An example spec can be found &lt;a href=&quot;https://github.com/alexrudall/ruby-openai/raw/main/spec/openai/client/assistant_file_search_spec.rb&quot;&gt;here&lt;/a&gt; that does this, just so you know it&#39;s possible.&lt;/p&gt; 
&lt;p&gt;Here&#39;s how to get the chunks used in a file search. In this example I&#39;m using &lt;a href=&quot;https://css4.pub/2015/textbook/somatosensory.pdf&quot;&gt;this file&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;require &quot;openai&quot;

# Make a client
client = OpenAI::Client.new(
  access_token: &quot;access_token_goes_here&quot;,
  log_errors: true # Don&#39;t log errors in production.
)

# Upload your file(s)
file_id = client.files.upload(
  parameters: {
    file: &quot;path/to/somatosensory.pdf&quot;,
    purpose: &quot;assistants&quot;
  }
)[&quot;id&quot;]

# Create a vector store to store the vectorised file(s)
vector_store_id = client.vector_stores.create(parameters: {})[&quot;id&quot;]

# Vectorise the file(s)
vector_store_file_id = client.vector_store_files.create(
  vector_store_id: vector_store_id,
  parameters: { file_id: file_id }
)[&quot;id&quot;]

# Check that the file is vectorised (wait for status to be &quot;completed&quot;)
client.vector_store_files.retrieve(vector_store_id: vector_store_id, id: vector_store_file_id)[&quot;status&quot;]

# Create an assistant, referencing the vector store
assistant_id = client.assistants.create(
  parameters: {
    model: &quot;gpt-4o&quot;,
    name: &quot;Answer finder&quot;,
    instructions: &quot;You are a file search tool. Find the answer in the given files, please.&quot;,
    tools: [
      { type: &quot;file_search&quot; }
    ],
    tool_resources: {
      file_search: {
        vector_store_ids: [vector_store_id]
      }
    }
  }
)[&quot;id&quot;]

# Create a thread with your question
thread_id = client.threads.create(parameters: {
  messages: [
    { role: &quot;user&quot;,
      content: &quot;Find the description of a nociceptor.&quot; }
  ]
})[&quot;id&quot;]

# Run the thread to generate the response. Include the &quot;GIVE ME THE CHUNKS&quot; incantation.
run_id = client.runs.create(
  thread_id: thread_id,
  parameters: {
    assistant_id: assistant_id
  },
  query_parameters: { include: [&quot;step_details.tool_calls[*].file_search.results[*].content&quot;] } # incantation
)[&quot;id&quot;]

# Get the steps that happened in the run
steps = client.run_steps.list(
  thread_id: thread_id,
  run_id: run_id,
  parameters: { order: &quot;asc&quot; }
)

# Retrieve all the steps. Include the &quot;GIVE ME THE CHUNKS&quot; incantation again.
steps = steps[&quot;data&quot;].map do |step|
  client.run_steps.retrieve(
    thread_id: thread_id,
    run_id: run_id,
    id: step[&quot;id&quot;],
    parameters: { include: [&quot;step_details.tool_calls[*].file_search.results[*].content&quot;] } # incantation
  )
end

# Now we&#39;ve got the chunk info, buried deep. Loop through the steps and find chunks if included:
chunks = steps.flat_map do |step|
  included_results = step.dig(&quot;step_details&quot;, &quot;tool_calls&quot;, 0, &quot;file_search&quot;, &quot;results&quot;)

  next if included_results.nil? || included_results.empty?

  included_results.flat_map do |result|
    result[&quot;content&quot;].map do |content|
      content[&quot;text&quot;]
    end
  end
end.compact

# The first chunk will be the closest match to the prompt. Finally, if you want to view the completed message(s):
client.messages.list(thread_id: thread_id)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Image Generation&lt;/h3&gt; 
&lt;p&gt;Generate images using DALL¬∑E 2 or DALL¬∑E 3!&lt;/p&gt; 
&lt;h4&gt;DALL¬∑E 2&lt;/h4&gt; 
&lt;p&gt;For DALL¬∑E 2 the size of any generated images must be one of &lt;code&gt;256x256&lt;/code&gt;, &lt;code&gt;512x512&lt;/code&gt; or &lt;code&gt;1024x1024&lt;/code&gt; - if not specified the image will default to &lt;code&gt;1024x1024&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.images.generate(
  parameters: {
    prompt: &quot;A baby sea otter cooking pasta wearing a hat of some sort&quot;,
    size: &quot;256x256&quot;,
  }
)
puts response.dig(&quot;data&quot;, 0, &quot;url&quot;)
# =&amp;gt; &quot;https://oaidalleapiprodscus.blob.core.windows.net/private/org-Rf437IxKhh...&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/6y4HJFx/img-d-Tx-Rf-RHj-SO5-Gho-Cbd8o-LJvw3.png&quot; alt=&quot;Ruby&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;DALL¬∑E 3&lt;/h4&gt; 
&lt;p&gt;For DALL¬∑E 3 the size of any generated images must be one of &lt;code&gt;1024x1024&lt;/code&gt;, &lt;code&gt;1024x1792&lt;/code&gt; or &lt;code&gt;1792x1024&lt;/code&gt;. Additionally the quality of the image can be specified to either &lt;code&gt;standard&lt;/code&gt; or &lt;code&gt;hd&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.images.generate(
  parameters: {
    prompt: &quot;A springer spaniel cooking pasta wearing a hat of some sort&quot;,
    model: &quot;dall-e-3&quot;,
    size: &quot;1024x1792&quot;,
    quality: &quot;standard&quot;,
  }
)
puts response.dig(&quot;data&quot;, 0, &quot;url&quot;)
# =&amp;gt; &quot;https://oaidalleapiprodscus.blob.core.windows.net/private/org-Rf437IxKhh...&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/z2tCKv9/img-Goio0l-S0i81-NUNa-BIx-Eh-CT6-L.png&quot; alt=&quot;Ruby&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Image Edit&lt;/h3&gt; 
&lt;p&gt;Fill in the transparent part of an image, or upload a mask with transparent sections to indicate the parts of an image that can be changed according to your prompt...&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.images.edit(
  parameters: {
    prompt: &quot;A solid red Ruby on a blue background&quot;,
    image: &quot;image.png&quot;,
    mask: &quot;mask.png&quot;,
  }
)
puts response.dig(&quot;data&quot;, 0, &quot;url&quot;)
# =&amp;gt; &quot;https://oaidalleapiprodscus.blob.core.windows.net/private/org-Rf437IxKhh...&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/sWVh3BX/dalle-ruby.png&quot; alt=&quot;Ruby&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Image Variations&lt;/h3&gt; 
&lt;p&gt;Create n variations of an image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.images.variations(parameters: { image: &quot;image.png&quot;, n: 2 })
puts response.dig(&quot;data&quot;, 0, &quot;url&quot;)
# =&amp;gt; &quot;https://oaidalleapiprodscus.blob.core.windows.net/private/org-Rf437IxKhh...&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/TWJLP2y/img-miu-Wk-Nl0-QNy-Xtj-Lerc3c0l-NW.png&quot; alt=&quot;Ruby&quot;&gt; &lt;img src=&quot;https://i.ibb.co/ScBhDGB/img-a9-Be-Rz-Au-Xwd-AV0-ERLUTSTGdi.png&quot; alt=&quot;Ruby&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Moderations&lt;/h3&gt; 
&lt;p&gt;Pass a string to check if it violates OpenAI&#39;s Content Policy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.moderations(parameters: { input: &quot;I&#39;m worried about that.&quot; })
puts response.dig(&quot;results&quot;, 0, &quot;category_scores&quot;, &quot;hate&quot;)
# =&amp;gt; 5.505014632944949e-05
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Whisper&lt;/h3&gt; 
&lt;p&gt;Whisper is a speech to text model that can be used to generate text based on audio files:&lt;/p&gt; 
&lt;h4&gt;Translate&lt;/h4&gt; 
&lt;p&gt;The translations API takes as input the audio file in any of the supported languages and transcribes the audio into English.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.audio.translate(
  parameters: {
    model: &quot;whisper-1&quot;,
    file: File.open(&quot;path_to_file&quot;, &quot;rb&quot;),
  }
)
puts response[&quot;text&quot;]
# =&amp;gt; &quot;Translation of the text&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Transcribe&lt;/h4&gt; 
&lt;p&gt;The transcriptions API takes as input the audio file you want to transcribe and returns the text in the desired output file format.&lt;/p&gt; 
&lt;p&gt;You can pass the language of the audio file to improve transcription quality. Supported languages are listed &lt;a href=&quot;https://github.com/openai/whisper#available-models-and-languages&quot;&gt;here&lt;/a&gt;. You need to provide the language as an ISO-639-1 code, eg. &quot;en&quot; for English or &quot;ne&quot; for Nepali. You can look up the codes &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.audio.transcribe(
  parameters: {
    model: &quot;whisper-1&quot;,
    file: File.open(&quot;path_to_file&quot;, &quot;rb&quot;),
    language: &quot;en&quot;, # Optional
  }
)
puts response[&quot;text&quot;]
# =&amp;gt; &quot;Transcription of the text&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Speech&lt;/h4&gt; 
&lt;p&gt;The speech API takes as input the text and a voice and returns the content of an audio file you can listen to.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;response = client.audio.speech(
  parameters: {
    model: &quot;tts-1&quot;,
    input: &quot;This is a speech test!&quot;,
    voice: &quot;alloy&quot;,
    response_format: &quot;mp3&quot;, # Optional
    speed: 1.0, # Optional
  }
)
File.binwrite(&#39;demo.mp3&#39;, response)
# =&amp;gt; mp3 file that plays: &quot;This is a speech test!&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;The Usage API provides information about the cost of various OpenAI services within your organization. To use Admin APIs like Usage, you need to set an OPENAI_ADMIN_TOKEN, which can be generated &lt;a href=&quot;https://platform.openai.com/settings/organization/admin-keys&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;OpenAI.configure do |config|
  config.admin_token = ENV.fetch(&quot;OPENAI_ADMIN_TOKEN&quot;)
end

# or

client = OpenAI::Client.new(admin_token: &quot;123abc&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can retrieve usage data for different endpoints and time periods:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;one_day_ago = Time.now.to_i - 86_400

# Retrieve costs data
response = client.usage.costs(parameters: { start_time: one_day_ago })
response[&quot;data&quot;].each do |bucket|
  bucket[&quot;results&quot;].each do |result|
    puts &quot;#{Time.at(bucket[&quot;start_time&quot;]).to_date}: $#{result.dig(&quot;amount&quot;, &quot;value&quot;).round(2)}&quot;
  end
end
=&amp;gt; 2025-02-09: $0.0
=&amp;gt; 2025-02-10: $0.42

# Retrieve completions usage data
response = client.usage.completions(parameters: { start_time: one_day_ago })
puts response[&quot;data&quot;]

# Retrieve embeddings usage data
response = client.usage.embeddings(parameters: { start_time: one_day_ago })
puts response[&quot;data&quot;]

# Retrieve moderations usage data
response = client.usage.moderations(parameters: { start_time: one_day_ago })
puts response[&quot;data&quot;]

# Retrieve image generation usage data
response = client.usage.images(parameters: { start_time: one_day_ago })
puts response[&quot;data&quot;]

# Retrieve audio speech usage data
response = client.usage.audio_speeches(parameters: { start_time: one_day_ago })
puts response[&quot;data&quot;]

# Retrieve audio transcription usage data
response = client.usage.audio_transcriptions(parameters: { start_time: one_day_ago })
puts response[&quot;data&quot;]

# Retrieve vector stores usage data
response = client.usage.vector_stores(parameters: { start_time: one_day_ago })
puts response[&quot;data&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Errors&lt;/h3&gt; 
&lt;p&gt;HTTP errors can be caught like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;begin
  OpenAI::Client.new.models.retrieve(id: &quot;gpt-4o&quot;)
rescue Faraday::Error =&amp;gt; e
  raise &quot;Got a Faraday error: #{e}&quot;
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;After checking out the repo, run &lt;code&gt;bin/setup&lt;/code&gt; to install dependencies. You can run &lt;code&gt;bin/console&lt;/code&gt; for an interactive prompt that will allow you to experiment.&lt;/p&gt; 
&lt;p&gt;To install this gem onto your local machine, run &lt;code&gt;bundle exec rake install&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To run all tests, execute the command &lt;code&gt;bundle exec rake&lt;/code&gt;, which will also run the linter (Rubocop). This repository uses &lt;a href=&quot;https://github.com/vcr/vcr&quot;&gt;VCR&lt;/a&gt; to log API requests.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] If you have an &lt;code&gt;OPENAI_ACCESS_TOKEN&lt;/code&gt; and &lt;code&gt;OPENAI_ADMIN_TOKEN&lt;/code&gt; in your &lt;code&gt;ENV&lt;/code&gt;, running the specs will hit the actual API, which will be slow and cost you money - 2 cents or more! Remove them from your environment with &lt;code&gt;unset&lt;/code&gt; or similar if you just want to run the specs against the stored VCR responses.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;To check for deprecations&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;bundle exec ruby -e &quot;Warning[:deprecated] = true; require &#39;rspec&#39;; exit RSpec::Core::Runner.run([&#39;spec/openai/client/http_spec.rb:25&#39;])&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Release&lt;/h2&gt; 
&lt;p&gt;First run the specs without VCR so they actually hit the API. This will cost 2 cents or more. Set OPENAI_ACCESS_TOKEN and OPENAI_ADMIN_TOKEN in your environment.&lt;/p&gt; 
&lt;p&gt;Then update the version number in &lt;code&gt;version.rb&lt;/code&gt;, update &lt;code&gt;CHANGELOG.md&lt;/code&gt;, run &lt;code&gt;bundle install&lt;/code&gt; to update Gemfile.lock, and then run &lt;code&gt;bundle exec rake release&lt;/code&gt;, which will create a git tag for the version, push git commits and tags, and push the &lt;code&gt;.gem&lt;/code&gt; file to &lt;a href=&quot;https://rubygems.org&quot;&gt;rubygems.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Bug reports and pull requests are welcome on GitHub at &lt;a href=&quot;https://github.com/alexrudall/ruby-openai&quot;&gt;https://github.com/alexrudall/ruby-openai&lt;/a&gt;. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the &lt;a href=&quot;https://github.com/alexrudall/ruby-openai/raw/main/CODE_OF_CONDUCT.md&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The gem is available as open source under the terms of the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Everyone interacting in the Ruby OpenAI project&#39;s codebases, issue trackers, chat rooms and mailing lists is expected to follow the &lt;a href=&quot;https://github.com/alexrudall/ruby-openai/raw/main/CODE_OF_CONDUCT.md&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sidekiq/sidekiq</title>
      <link>https://github.com/sidekiq/sidekiq</link>
      <description>&lt;p&gt;Simple, efficient background processing for Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sidekiq&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/sidekiq&quot;&gt;&lt;img src=&quot;https://badge.fury.io/rb/sidekiq.svg?sanitize=true&quot; alt=&quot;Gem Version&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/sidekiq/sidekiq/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;Build&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Simple, efficient background jobs for Ruby.&lt;/p&gt; 
&lt;p&gt;Sidekiq uses threads to handle many jobs at the same time in the same process. Sidekiq can be used by any Ruby application.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Redis: Redis 7.0+, Valkey 7.2+ or Dragonfly 1.27+&lt;/li&gt; 
 &lt;li&gt;Ruby: MRI 3.2+ or JRuby 9.4+.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Sidekiq 8.0 supports Rails and Active Job 7.0+.&lt;/p&gt; 
&lt;p&gt;Sidekiq supports &lt;a href=&quot;https://valkey.io&quot;&gt;Valkey&lt;/a&gt; and &lt;a href=&quot;https://www.dragonflydb.io&quot;&gt;Dragonfly&lt;/a&gt; as Redis alternatives. Redis 7.2.4 is considered to be the canonical implementation. Incompatibilities with that version are considered bugs.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;bundle add sidekiq
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/sidekiq/sidekiq/wiki/Getting-Started&quot;&gt;Getting Started wiki page&lt;/a&gt; and follow the simple setup process. You can watch &lt;a href=&quot;https://www.youtube.com/playlist?list=PLjeHh2LSCFrWGT5uVjUuFKAcrcj5kSai1&quot;&gt;this YouTube playlist&lt;/a&gt; to learn all about Sidekiq and see its features in action. Here&#39;s the Web UI:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/sidekiq/sidekiq/raw/main/examples/web-ui.png&quot; alt=&quot;Web UI&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;p&gt;The benchmark in &lt;code&gt;bin/sidekiqload&lt;/code&gt; creates 500,000 no-op jobs and drains them as fast as possible, assuming a fixed Redis network latency of 1ms. This requires a lot of Redis network I/O and JSON parsing. This benchmark is IO-bound so we increase the concurrency to 25. If your application is sending lots of emails or performing other network-intensive work, you could see a similar benefit but be careful not to saturate the CPU. Real world applications will rarely if ever need to use concurrency greater than 10.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;Time to process 500k jobs&lt;/th&gt; 
   &lt;th&gt;Throughput (jobs/sec)&lt;/th&gt; 
   &lt;th&gt;Ruby&lt;/th&gt; 
   &lt;th&gt;Concurrency&lt;/th&gt; 
   &lt;th&gt;Job Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sidekiq 7.0.3&lt;/td&gt; 
   &lt;td&gt;21.3 sec&lt;/td&gt; 
   &lt;td&gt;23,500&lt;/td&gt; 
   &lt;td&gt;3.2.0+yjit&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;Sidekiq::Job&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sidekiq 7.0.3&lt;/td&gt; 
   &lt;td&gt;33.8 sec&lt;/td&gt; 
   &lt;td&gt;14,700&lt;/td&gt; 
   &lt;td&gt;3.2.0+yjit&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;ActiveJob 7.0.4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sidekiq 7.0.3&lt;/td&gt; 
   &lt;td&gt;23.5 sec&lt;/td&gt; 
   &lt;td&gt;21,300&lt;/td&gt; 
   &lt;td&gt;3.2.0&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;Sidekiq::Job&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sidekiq 7.0.3&lt;/td&gt; 
   &lt;td&gt;46.5 sec&lt;/td&gt; 
   &lt;td&gt;10,700&lt;/td&gt; 
   &lt;td&gt;3.2.0&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;ActiveJob 7.0.4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sidekiq 7.0.3&lt;/td&gt; 
   &lt;td&gt;23.0 sec&lt;/td&gt; 
   &lt;td&gt;21,700&lt;/td&gt; 
   &lt;td&gt;2.7.5&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;Sidekiq::Job&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sidekiq 7.0.3&lt;/td&gt; 
   &lt;td&gt;46.5 sec&lt;/td&gt; 
   &lt;td&gt;10,850&lt;/td&gt; 
   &lt;td&gt;2.7.5&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;ActiveJob 7.0.4&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Most of Sidekiq&#39;s overhead is Redis network I/O. ActiveJob adds a notable amount of CPU overhead due to argument deserialization and callbacks. Concurrency of 30 was determined experimentally to maximize one CPU without saturating it.&lt;/p&gt; 
&lt;h2&gt;Want to Upgrade?&lt;/h2&gt; 
&lt;p&gt;Use &lt;code&gt;bundle up sidekiq&lt;/code&gt; to upgrade Sidekiq and all its dependencies. Upgrade notes between each major version can be found in the &lt;code&gt;docs/&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;I also sell &lt;a href=&quot;https://billing.contribsys.com/spro/&quot;&gt;Sidekiq Pro&lt;/a&gt; and &lt;a href=&quot;https://billing.contribsys.com/sent/new.cgi&quot;&gt;Sidekiq Enterprise&lt;/a&gt;, extensions to Sidekiq which provide more features, a commercial-friendly license and allow you to support high quality open source development all at the same time. Please see the &lt;a href=&quot;https://sidekiq.org/&quot;&gt;Sidekiq&lt;/a&gt; homepage for more detail.&lt;/p&gt; 
&lt;h2&gt;Problems?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Do not directly email any Sidekiq committers with questions or problems.&lt;/strong&gt; A community is best served when discussions are held in public.&lt;/p&gt; 
&lt;p&gt;If you have a problem, please review the &lt;a href=&quot;https://github.com/sidekiq/sidekiq/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt; and &lt;a href=&quot;https://github.com/sidekiq/sidekiq/wiki/Problems-and-Troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt; wiki pages. Searching the &lt;a href=&quot;https://github.com/sidekiq/sidekiq/issues&quot;&gt;issues&lt;/a&gt; for your problem is also a good idea.&lt;/p&gt; 
&lt;p&gt;Sidekiq Pro and Sidekiq Enterprise customers get private email support. You can purchase at &lt;a href=&quot;https://sidekiq.org&quot;&gt;https://sidekiq.org&lt;/a&gt;; email &lt;a href=&quot;mailto:support@contribsys.com&quot;&gt;support@contribsys.com&lt;/a&gt; for help.&lt;/p&gt; 
&lt;p&gt;Useful resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Product documentation is in the &lt;a href=&quot;https://github.com/sidekiq/sidekiq/wiki&quot;&gt;wiki&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Occasional announcements are made to the &lt;a href=&quot;https://ruby.social/@sidekiq&quot;&gt;@sidekiq&lt;/a&gt; Mastodon account.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://stackoverflow.com/questions/tagged/sidekiq&quot;&gt;Sidekiq tag&lt;/a&gt; on Stack Overflow has lots of useful Q &amp;amp; A.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Every Thursday morning is Sidekiq Office Hour: I video chat and answer questions. See the &lt;a href=&quot;https://sidekiq.org/support.html&quot;&gt;Sidekiq support page&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/sidekiq/sidekiq/raw/main/.github/contributing.md&quot;&gt;the contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/sidekiq/sidekiq/raw/main/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt; for licensing details. The license for Sidekiq Pro and Sidekiq Enterprise can be found in &lt;a href=&quot;https://github.com/sidekiq/sidekiq/raw/main/COMM-LICENSE.txt&quot;&gt;COMM-LICENSE.txt&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;Mike Perham, &lt;a href=&quot;https://ruby.social/@getajobmike&quot;&gt;mastodon&lt;/a&gt;, &lt;a href=&quot;https://www.mikeperham.com&quot;&gt;https://www.mikeperham.com&lt;/a&gt; / &lt;a href=&quot;https://www.contribsys.com&quot;&gt;https://www.contribsys.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jekyll/jekyll</title>
      <link>https://github.com/jekyll/jekyll</link>
      <description>&lt;p&gt;üåê Jekyll is a blog-aware static site generator in Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/jekyll&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/jekyll.svg?sanitize=true&quot; alt=&quot;Gem Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/jekyll/jekyll/actions?query=workflow%3A%22Continuous+Integration%22+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/jekyll/jekyll/workflows/Continuous%20Integration/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/jekyll/jekyll/master/#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/backers/badge.svg?sanitize=true&quot; alt=&quot;Backers on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/jekyll/jekyll/master/#sponsors&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsors/badge.svg?sanitize=true&quot; alt=&quot;Sponsors on Open Collective&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;, which you can use to host sites right from your GitHub repositories.&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;Jekyll does what you tell it to do&amp;nbsp;‚Äî no more, no less. It doesn&#39;t try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content.&lt;/p&gt; 
&lt;p&gt;See: &lt;a href=&quot;https://jekyllrb.com/philosophy&quot;&gt;https://jekyllrb.com/philosophy&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/&quot;&gt;Install&lt;/a&gt; the gem&lt;/li&gt; 
 &lt;li&gt;Read up about its &lt;a href=&quot;https://jekyllrb.com/docs/usage/&quot;&gt;Usage&lt;/a&gt; and &lt;a href=&quot;https://jekyllrb.com/docs/configuration/&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Take a gander at some existing &lt;a href=&quot;https://github.com/jekyll/jekyll/wiki/sites&quot;&gt;Sites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll/fork&quot;&gt;Fork&lt;/a&gt; and &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;Contribute&lt;/a&gt; your own modifications&lt;/li&gt; 
 &lt;li&gt;Have questions? Check out our official forum community &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt; and &lt;a href=&quot;https://libera.chat&quot;&gt;&lt;code&gt;#jekyll&lt;/code&gt; Channel on Libera IRC&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Diving In&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt;Migrate&lt;/a&gt; from your previous system&lt;/li&gt; 
 &lt;li&gt;Learn how &lt;a href=&quot;https://jekyllrb.com/docs/front-matter/&quot;&gt;Front Matter&lt;/a&gt; works&lt;/li&gt; 
 &lt;li&gt;Put information on your site with &lt;a href=&quot;https://jekyllrb.com/docs/variables/&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Customize the &lt;a href=&quot;https://jekyllrb.com/docs/permalinks/&quot;&gt;Permalinks&lt;/a&gt; your posts are generated with&lt;/li&gt; 
 &lt;li&gt;Use the built-in &lt;a href=&quot;https://jekyllrb.com/docs/templates/&quot;&gt;Liquid Extensions&lt;/a&gt; to make your life easier&lt;/li&gt; 
 &lt;li&gt;Use custom &lt;a href=&quot;https://jekyllrb.com/docs/plugins/&quot;&gt;Plugins&lt;/a&gt; to generate content specific to your site&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href=&quot;https://jekyllrb.com/tutorials/video-walkthroughs/&quot;&gt;video tutorials from Giraffe Academy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Need help?&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t find the answer to your problem in our &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;docs&lt;/a&gt;, or in the &lt;a href=&quot;https://jekyllrb.com/docs/troubleshooting/&quot;&gt;troubleshooting section&lt;/a&gt;, ask the &lt;a href=&quot;https://jekyllrb.com/docs/community/&quot;&gt;community&lt;/a&gt; for help.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;In order to have a more open and welcoming community, Jekyll adheres to a &lt;a href=&quot;https://jekyllrb.com/docs/conduct/&quot;&gt;code of conduct&lt;/a&gt; adapted from the Ruby on Rails code of conduct.&lt;/p&gt; 
&lt;p&gt;Please adhere to this code of conduct in any interactions you have in the Jekyll community. It is strictly enforced on all official Jekyll repositories, websites, and resources. If you encounter someone violating these terms, please let one of our &lt;a href=&quot;https://jekyllrb.com/team/#core-team&quot;&gt;core team members&lt;/a&gt; know and we will address it as soon as possible.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up in this README with a link to your website. &lt;a href=&quot;https://opencollective.com/jekyll#sponsor&quot;&gt;Become a sponsor!&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/0/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 0&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/1/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 1&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/2/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 2&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/3/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 3&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/4/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 4&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/5/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 5&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/6/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 6&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/7/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 7&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/8/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 8&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/9/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&quot;https://raw.githubusercontent.com/jekyll/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/contributors.svg?width=890&amp;amp;button=false&quot; alt=&quot;Jekyll Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! üôè &lt;a href=&quot;https://opencollective.com/jekyll#backer&quot;&gt;Become a backer&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/jekyll#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/backers.svg?width=890&quot; alt=&quot;Jekyll Backers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/jekyll/jekyll/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>d12frosted/homebrew-emacs-plus</title>
      <link>https://github.com/d12frosted/homebrew-emacs-plus</link>
      <description>&lt;p&gt;Emacs Plus formulae for the Homebrew package manager&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+begin_html&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;256px&quot; src=&quot;https://raw.githubusercontent.com/d12frosted/homebrew-emacs-plus/master/images/emacs.png&quot; alt=&quot;Banner&quot;&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Emacs Plus&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/d12frosted/homebrew-emacs-plus/actions/workflows/emacs-31.yml&quot;&gt; &lt;img src=&quot;https://github.com/d12frosted/homebrew-emacs-plus/actions/workflows/emacs-31.yml/badge.svg?sanitize=true&quot; alt=&quot;Emacs 31 CI Status Badge&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/d12frosted/homebrew-emacs-plus/actions/workflows/emacs-30.yml&quot;&gt; &lt;img src=&quot;https://github.com/d12frosted/homebrew-emacs-plus/actions/workflows/emacs-30.yml/badge.svg?sanitize=true&quot; alt=&quot;Emacs 30 CI Status Badge&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/d12frosted/homebrew-emacs-plus/actions/workflows/emacs-29.yml&quot;&gt; &lt;img src=&quot;https://github.com/d12frosted/homebrew-emacs-plus/actions/workflows/emacs-29.yml/badge.svg?sanitize=true&quot; alt=&quot;Emacs 29 CI Status Badge&quot;&gt; &lt;/a&gt; &lt;/p&gt; #+end_html 
&lt;p&gt;** About&lt;/p&gt; 
&lt;p&gt;#+begin_html &lt;img align=&quot;right&quot; width=&quot;40%&quot; src=&quot;https://raw.githubusercontent.com/d12frosted/homebrew-emacs-plus/master/images/screenshot-01.png&quot; alt=&quot;Screenshot&quot;&gt; #+end_html&lt;/p&gt; 
&lt;p&gt;Emacs+ is [[https://www.gnu.org/software/emacs/emacs.html][‚Üí GNU Emacs]] formulae for macOS [[https://brew.sh][‚Üí Homebrew]] package manager. It offers a wide range of extra functionality over regular [[https://formulae.brew.sh/formula/emacs#default][‚Üí Emacs]] package. Emacs+ intent is to give the most of &#39;plus&#39; stuff by default, leaving only controversial options as opt-in. Please refer to [[#options][‚Üí Options]] section for more information.&lt;/p&gt; 
&lt;p&gt;#+begin_src bash $ brew tap d12frosted/emacs-plus $ brew install emacs-plus [options] # install the latest release (Emacs 30) $ brew install emacs-plus@31 [options] # install Emacs 31 (master) $ brew install emacs-plus@30 [options] # install Emacs 30 (emacs-30) $ brew install emacs-plus@29 [options] # install Emacs 29 #+end_src&lt;/p&gt; 
&lt;p&gt;Feel free to open an issue or contact me via email if you face any issues, questions or feature requests. I love pull requests, so do send them. You might want to check [[docs/development-guidelines.org][‚Üí Development guidelines]] to have better understanding on how to contribute.&lt;/p&gt; 
&lt;p&gt;** Table of Contents :TOC_3:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;[[#about][About]]&lt;/li&gt; 
 &lt;li&gt;[[#install][Install]] 
  &lt;ul&gt; 
   &lt;li&gt;[[#installing-from-feature-branch][Installing from feature branch]]&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[[#reinstall][Reinstall]]&lt;/li&gt; 
 &lt;li&gt;[[#emacs-31][Emacs 31]] 
  &lt;ul&gt; 
   &lt;li&gt;[[#included][Included]]&lt;/li&gt; 
   &lt;li&gt;[[#options][Options]]&lt;/li&gt; 
   &lt;li&gt;[[#no-title-bar][No title bar]]&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[[#emacs-30][Emacs 30]] 
  &lt;ul&gt; 
   &lt;li&gt;[[#included-1][Included]]&lt;/li&gt; 
   &lt;li&gt;[[#options-1][Options]]&lt;/li&gt; 
   &lt;li&gt;[[#no-title-bar-1][No title bar]]&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[[#emacs-29][Emacs 29]] 
  &lt;ul&gt; 
   &lt;li&gt;[[#included-2][Included]]&lt;/li&gt; 
   &lt;li&gt;[[#options-2][Options]]&lt;/li&gt; 
   &lt;li&gt;[[#no-title-bar-2][No title bar]]&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[[#features-explained][Features explained]] 
  &lt;ul&gt; 
   &lt;li&gt;[[#injected-path][Injected PATH]]&lt;/li&gt; 
   &lt;li&gt;[[#no-titlebar][No Titlebar]]&lt;/li&gt; 
   &lt;li&gt;[[#xwidgets-webkit][Xwidgets (webkit)]]&lt;/li&gt; 
   &lt;li&gt;[[#system-appearance-change][System appearance change]]&lt;/li&gt; 
   &lt;li&gt;[[#gccemacs][gccemacs]]&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[[#icons][Icons]]&lt;/li&gt; 
 &lt;li&gt;[[#emacs-configuration][Emacs configuration]]&lt;/li&gt; 
 &lt;li&gt;[[#known-issues][Known Issues]] 
  &lt;ul&gt; 
   &lt;li&gt;[[#emacs-dependency-in-other-formulas][=emacs= dependency in other formulas]]&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[[#old-versions][Old versions]] 
  &lt;ul&gt; 
   &lt;li&gt;[[#emacs-28][Emacs 28]]&lt;/li&gt; 
   &lt;li&gt;[[#emacs-27][Emacs 27]]&lt;/li&gt; 
   &lt;li&gt;[[#emacs-26][Emacs 26]]&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[[#faq][FAQ]] 
  &lt;ul&gt; 
   &lt;li&gt;[[#how-to-changepin-commit-emacs-plus30-is-built-from][How to change/pin commit =emacs-plus@30= is built from]]&lt;/li&gt; 
   &lt;li&gt;[[#how-to-changepin-commit-emacs-plus31-is-built-from][How to change/pin commit =emacs-plus@31= is built from]]&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[[#screenshots][Screenshots]]&lt;/li&gt; 
 &lt;li&gt;[[#acknowledgements][Acknowledgements]]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;** Install&lt;/p&gt; 
&lt;p&gt;Emacs Plus contains separate formulas for different Emacs versions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;=emacs-plus= install current release version (Emacs 30);&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;=emacs-plus@31= install Emacs 31, development version.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;=emacs-plus@30= install Emacs 30, current version.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;=emacs-plus@29= install Emacs 29, previous version.&lt;/p&gt; &lt;p&gt;#+begin_src bash $ brew tap d12frosted/emacs-plus $ brew install emacs-plus [options] # install the latest release (Emacs 30) $ brew install emacs-plus@31 [options] # install Emacs 31 $ brew install emacs-plus@30 [options] # install Emacs 30 $ brew install emacs-plus@29 [options] # install Emacs 29 #+end_src&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;By default (without any addition options) this formula install Cocoa version of Emacs with support of =gnutls=, =imagemagick= (not included by default with =emacs-plus@29=, =emacs-plus@30=, and =emacs-plus@31=), =librsvg=, =libxml2=, dynamic modules and multicolor fonts. Please see the list of available options to disable any bit of default behaviour or add even more stuff.&lt;/p&gt; 
&lt;p&gt;*** Installing from feature branch&lt;/p&gt; 
&lt;p&gt;Sometimes you might want to install from a feature branch. In that case you can switch the branch in the tap and install Emacs+ again.&lt;/p&gt; 
&lt;p&gt;Prerequisites are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Emacs+ is tapped (e.g. =brew tap d12frosted/emacs-plus=).&lt;/li&gt; 
 &lt;li&gt;=jq= is available (e.g. =brew install jq=).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Open terminal and type the following commands (don&#39;t forget to use correct Emacs+ version, branch and options):&lt;/p&gt; 
&lt;p&gt;#+begin_src bash $ brew uninstall emacs-plus@29 $ cd $(brew tap-info --json d12frosted/emacs-plus@29 | jq -r &#39;.[0].path&#39;) &amp;amp;&amp;amp; git switch BRANCH $ brew install emacs-plus@29 [OPTIONS] #+end_src&lt;/p&gt; 
&lt;p&gt;** Reinstall&lt;/p&gt; 
&lt;p&gt;If you wish to reinstall =emacs-plus= with you should not use =reinstall= command of =brew= (not related to this formula, it&#39;s a general advice). Instead, you should =uninstall= a package and then =install= it with desired options.&lt;/p&gt; 
&lt;p&gt;Avoid =reinstall= even if you want to =reinstall= with the same set of options, otherwise you will likely to get compilation errors! For example, [[https://github.com/d12frosted/homebrew-emacs-plus/issues/218][#218]] and [[https://github.com/d12frosted/homebrew-emacs-plus/issues/321][#321]].&lt;/p&gt; 
&lt;p&gt;In short, =brew= doesn&#39;t really support options. They break time to time ([[https://github.com/Homebrew/brew/issues/4793][brew#4793]], [[https://github.com/Homebrew/brew/issues/7397][brew#7397]], [[https://github.com/Homebrew/brew/issues/7498][brew#7498]] to show a few).&lt;/p&gt; 
&lt;p&gt;#+BEGIN_SRC bash $ brew uninstall emacs-plus $ brew install emacs-plus [options] #+END_SRC&lt;/p&gt; 
&lt;p&gt;** Emacs 31&lt;/p&gt; 
&lt;p&gt;*** Included&lt;/p&gt; 
&lt;p&gt;By default =emacs-plus@31= uses the following features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Injected =PATH= value from user shell (see separate section explaining this feature).&lt;/li&gt; 
 &lt;li&gt;Cocoa version, e.g. builds =Emacs.app=.&lt;/li&gt; 
 &lt;li&gt;Unconditional support for =gnutls=, =librsvg=, =webp=, =libxml2=, =little-cms2= and dynamic modules.&lt;/li&gt; 
 &lt;li&gt;Build with native compilation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;*** Options&lt;/p&gt; 
&lt;p&gt;| Option | Description | |-------------------------+------------------------------------------------------------------------------| | =--with-ctags= | don&#39;t remove the ctags executable that Emacs provides | | =--with-dbus= | build with dbus support | | =--with-debug= | build with debug symbols and debugger friendly optimizations | | =--with-mailutils= | build with mailutils support | | =--with-x11= | build with x11 support | | =--with-xwidgets= | build [[#xwidgets-webkit][‚Üí with xwidgets]] support | | =--without-cocoa= | build a non-Cocoa version of Emacs (terminal only) | | =--with-imagemagick= | build with =imagemagick= support |&lt;/p&gt; 
&lt;p&gt;*** No title bar Please note, that &lt;del&gt;--with-no-titlebar&lt;/del&gt; is no longer needed in Emacs 30+, since the same can be achieved natively using [[https://github.com/d12frosted/homebrew-emacs-plus#emacs-29-1][this method]].&lt;/p&gt; 
&lt;p&gt;** Emacs 30&lt;/p&gt; 
&lt;p&gt;*** Included&lt;/p&gt; 
&lt;p&gt;By default =emacs-plus@30= uses the following features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Injected =PATH= value from user shell (see separate section explaining this feature).&lt;/li&gt; 
 &lt;li&gt;Cocoa version, e.g. builds =Emacs.app=.&lt;/li&gt; 
 &lt;li&gt;Unconditional support for =gnutls=, =librsvg=, =webp=, =libxml2=, =little-cms2= and dynamic modules.&lt;/li&gt; 
 &lt;li&gt;Build with native compilation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;*** Options&lt;/p&gt; 
&lt;p&gt;| Option | Description | |-------------------------+------------------------------------------------------------------------------| | =--with-ctags= | don&#39;t remove the ctags executable that Emacs provides | | =--with-dbus= | build with dbus support | | =--with-debug= | build with debug symbols and debugger friendly optimizations | | =--with-mailutils= | build with mailutils support | | =--with-x11= | build with x11 support | | =--with-xwidgets= | build [[#xwidgets-webkit][‚Üí with xwidgets]] support | | =--without-cocoa= | build a non-Cocoa version of Emacs (terminal only) | | =--with-imagemagick= | build with =imagemagick= support |&lt;/p&gt; 
&lt;p&gt;*** No title bar Please note, that &lt;del&gt;--with-no-titlebar&lt;/del&gt; is no longer needed in Emacs 30, since the same can be achieved natively using [[https://github.com/d12frosted/homebrew-emacs-plus#emacs-29-1][this method]].&lt;/p&gt; 
&lt;p&gt;** Emacs 29&lt;/p&gt; 
&lt;p&gt;*** Included&lt;/p&gt; 
&lt;p&gt;By default =emacs-plus@29= uses the following features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Injected =PATH= value from user shell (see separate section explaining this feature).&lt;/li&gt; 
 &lt;li&gt;Cocoa version, e.g. builds =Emacs.app=.&lt;/li&gt; 
 &lt;li&gt;Unconditional support for =gnutls=, =librsvg=, =libxml2=, =little-cms2= and dynamic modules.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;*** Options&lt;/p&gt; 
&lt;p&gt;| Option | Description | |-------------------------+------------------------------------------------------------------------------| | =--with-ctags= | don&#39;t remove the ctags executable that Emacs provides | | =--with-dbus= | build with dbus support | | =--with-debug= | build with debug symbols and debugger friendly optimizations | | =--with-mailutils= | build with mailutils support | | =--with-no-frame-refocus= | disables frame re-focus (ie. closing one frame does not refocus another one) | | =--with-x11= | build with x11 support | | =--with-xwidgets= | build [[#xwidgets-webkit][‚Üí with xwidgets]] support | | =--without-cocoa= | build a non-Cocoa version of Emacs (terminal only) | | =--with-imagemagick= | build with =imagemagick= support | | =--with-native-comp= | build with native compilation aka [[#gccemacs][‚Üí gccemacs]] |&lt;/p&gt; 
&lt;p&gt;*** No title bar Please note, that &lt;del&gt;--with-no-titlebar&lt;/del&gt; is no longer needed in Emacs 29, since the same can be achieved natively using [[https://github.com/d12frosted/homebrew-emacs-plus#emacs-29-1][this method]].&lt;/p&gt; 
&lt;p&gt;** Features explained&lt;/p&gt; 
&lt;p&gt;*** Injected PATH&lt;/p&gt; 
&lt;p&gt;#+begin_quote Ever find that a command works in your shell, but not in Emacs?&lt;/p&gt; 
&lt;p&gt;(c) @purcell #+end_quote&lt;/p&gt; 
&lt;p&gt;In macOS applications are started in the login environment, meaning that all user defined environment variables are not available in application process. In the most cases it&#39;s not a big deal, but in Emacs it becomes a source of troubles as we want to use binaries from the non-standard locations (for example, those installed via package managers).&lt;/p&gt; 
&lt;p&gt;There is a wonderful solution to overcome this problem, [[https://github.com/purcell/exec-path-from-shell][purcell/exec-path-from-shell]]. As with any package that is not preinstalled with Emacs, you need to discover it first, and then install it. And while being a well known package and popular package (top 100 on MELPA), not everyone install it. In addition, with =native-comp= feature you might need it&#39;s functionality before any package is bootstrapped.&lt;/p&gt; 
&lt;p&gt;All that being said, during installation Emacs+ injects value of =PATH= into =Emacs.app/Contents/Info.plist= file, making this value available whenever you start =Emacs.app= from Finder, Docker, Spotlight, =open= command in Terminal or via =launchd=. This solves a wide range of problems for GUI users without the need to use [[https://github.com/purcell/exec-path-from-shell][purcell/exec-path-from-shell]], but if needed you can still fall back to this wonderful package, especially if you need other variables.&lt;/p&gt; 
&lt;p&gt;In case you have a non-trivial setup relying on specific value of =PATH= inherited from current terminal session, it is advised to start Emacs using =/opt/homebrew/bin/emacs= instead of =open -n -a /path/to/Emacs.app=, because =open= messes around with =PATH= value even without Emacs+ injection. You can find more information in [[https://github.com/d12frosted/homebrew-emacs-plus/issues/469][#469]].&lt;/p&gt; 
&lt;p&gt;And if for some reason PATH injection doesn&#39;t work for you, report it either in [[https://github.com/d12frosted/homebrew-emacs-plus/issues/469][#469]] or open a new issue.&lt;/p&gt; 
&lt;p&gt;*** No Titlebar&lt;/p&gt; 
&lt;p&gt;| square corners | round corners | |---------------------------------------------------+--------------------------------------------------| | [[/images/screenshot-no-titlebar-square-corners.png]] | [[/images/screenshot-no-titlebar-round-corners.png]] |&lt;/p&gt; 
&lt;p&gt;**** Emacs 28 and Emacs 27&lt;/p&gt; 
&lt;p&gt;This patch is enabled with the =--with-no-titlebar= option for =emacs-plus@27= and =emacs-plus@28=. It is meant for use with window tiling applications like [[https://github.com/koekeishiya/yabai][‚Üí yabai]] or [[https://github.com/ianyh/Amethyst][‚Üí amethyst]] so that the titlebar won&#39;t take up screen real estate.&lt;/p&gt; 
&lt;p&gt;Use =--with-no-titlebar-and-round-corners= option (instead of =--with-no-titlebar=), if you want to keep round corners (for example, to be consistent with other macOS applications).&lt;/p&gt; 
&lt;p&gt;If you see gaps between your emacs frames and other windows, try this:&lt;/p&gt; 
&lt;p&gt;#+BEGIN_SRC emacs-lisp (setq frame-resize-pixelwise t) #+END_SRC&lt;/p&gt; 
&lt;p&gt;**** Emacs 29+&lt;/p&gt; 
&lt;p&gt;In =emacs-plus@29=, =emacs-plus@30=, and =emacs-plus@31= this option is not available anymore as you can achieve the same result using Emacs Lisp by adding the following line in your =early-init.el= file:&lt;/p&gt; 
&lt;p&gt;#+begin_src emacs-lisp (add-to-list &#39;default-frame-alist &#39;(undecorated . t)) #+end_src&lt;/p&gt; 
&lt;p&gt;Add the following line instead for round corners:&lt;/p&gt; 
&lt;p&gt;#+begin_src emacs-lisp (add-to-list &#39;default-frame-alist &#39;(undecorated-round . t)) #+end_src&lt;/p&gt; 
&lt;p&gt;*** Xwidgets (webkit)&lt;/p&gt; 
&lt;p&gt;Browse the web in Emacs as in modern browser.&lt;/p&gt; 
&lt;p&gt;The original [[https://www.emacswiki.org/emacs/EmacsXWidgets][‚Üí Emacs xwidgets]] builds and works on macOS however must be used with X11 and hence not practical option on macOS. This version enables =xwidgets= on native macOS Cocoa via embedding a native webkit window.&lt;/p&gt; 
&lt;p&gt;More details can be seen here [[https://github.com/veshboo/emacs][‚Üí Veshboo&#39;s emacs branch]].&lt;/p&gt; 
&lt;p&gt;*** System appearance change&lt;/p&gt; 
&lt;p&gt;This patch is enabled by default and can&#39;t be disabled. It adds a hook, =ns-system-appearance-change-functions=, that is called once the system appearance is changed. Functions added to this hook will be called with one argument, a symbol that is either =light= or =dark=. This mainly allows loading a different theme to better match the system appearance.&lt;/p&gt; 
&lt;p&gt;#+begin_src emacs-lisp (defun my/apply-theme (appearance) &quot;Load theme, taking current system APPEARANCE into consideration.&quot; (mapc #&#39;disable-theme custom-enabled-themes) (pcase appearance (&#39;light (load-theme &#39;tango t)) (&#39;dark (load-theme &#39;tango-dark t))))&lt;/p&gt; 
&lt;p&gt;(add-hook &#39;ns-system-appearance-change-functions #&#39;my/apply-theme) #+end_src&lt;/p&gt; 
&lt;p&gt;Note that this hook is also run once when Emacs is initialized, so simply adding the above to your =init.el= will allow matching the system appearance upon startup. You can also determine what the current system appearance is by inspecting the value of the =ns-system-appearance= variable.&lt;/p&gt; 
&lt;p&gt;The hook is NOT run in TTY Emacs sessions.&lt;/p&gt; 
&lt;p&gt;*** gccemacs&lt;/p&gt; 
&lt;p&gt;#+begin_quote gccemacs is a modified Emacs capable of compiling and running Emacs Lisp as native code in form of re-loadable elf files. As the name suggests this is achieved blending together Emacs and the gcc infrastructure.&lt;/p&gt; 
&lt;p&gt;[[https://akrl.sdf.org/gccemacs.html][‚Üí Andrea Corallo]] #+end_quote&lt;/p&gt; 
&lt;p&gt;While =gccemacs= gives performance boost in many scenarios, this feature is still experimental and might require time and effort from your side for it to work! Use at our own risk :)&lt;/p&gt; 
&lt;p&gt;Please see official [[https://akrl.sdf.org/gccemacs.html][‚Üí gccemacs documentation]] for more information.&lt;/p&gt; 
&lt;p&gt;Knows issues:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;=ld: library not found for -lSystem=. This only happens on older versions of =gcc= installed by Homebrew. Please execute =$ brew reinstall gcc libgccjit= to resolve this issue.&lt;/li&gt; 
 &lt;li&gt;Errors during compilation of your =init.el=. Try running Emacs with =-Q= option and give it some time to compile everything (maybe run =M-x= to force compilation) - you shall see buffer =&lt;em&gt;Async-native-compile-log&lt;/em&gt;= in the list of buffers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;** Icons&lt;/p&gt; 
&lt;p&gt;| Option | Author | Image | URL | |-----------------------------------------------+----------------------------+----------------------------------------------------------+---------| | =--with-EmacsIcon1-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/EmacsIcon1_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-EmacsIcon2-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/EmacsIcon2_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-EmacsIcon3-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/EmacsIcon3_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-EmacsIcon4-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/EmacsIcon4_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-EmacsIcon5-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/EmacsIcon5_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-EmacsIcon6-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/EmacsIcon6_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-EmacsIcon7-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/EmacsIcon7_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-EmacsIcon8-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/EmacsIcon8_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-EmacsIcon9-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/EmacsIcon9_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-c9rgreen-sonoma-icon= | [[https://github.com/c9rgreen][‚Üí Christopher Green]] | [[/icons/preview/c9rgreen-sonoma_128.png]] | [[https://github.com/c9rgreen/emacs-macos-icon][‚Üí Link]] | | =--with-cacodemon-icon= | [[https://gitlab.com/wildwestrom][‚Üí Christian Westrom]] | [[/icons/preview/cacodemon_128.png]] | [[https://gitlab.com/wildwestrom/emacs-doom-icon][‚Üí Link]] | | =--with-dragon-icon= | [[https://github.com/willbchang][‚Üí Will B Chang]] | [[/icons/preview/dragon_128.png]] | [[https://github.com/willbchang/emacs-dragon-icon][‚Üí Link]] | | =--with-elrumo1-icon= | [[https://github.com/elrumo][‚Üí Elias]] | [[/icons/preview/elrumo1_128.png]] | [[https://github.com/d12frosted/homebrew-emacs-plus/issues/303#issuecomment-763928162][‚Üí Link]] | | =--with-elrumo2-icon= | [[https://github.com/elrumo][‚Üí Elias]] | [[/icons/preview/elrumo2_128.png]] | [[https://github.com/d12frosted/homebrew-emacs-plus/issues/303#issuecomment-763928162][‚Üí Link]] | | =--with-emacs-card-blue-deep-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/emacs-card-blue-deep_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-emacs-card-british-racing-green-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/emacs-card-british-racing-green_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-emacs-card-carmine-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/emacs-card-carmine_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-emacs-card-green-icon= | [[https://github.com/jasonm23][‚Üí Jason Milkins]] | [[/icons/preview/emacs-card-green_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][‚Üí Link]] | | =--with-gnu-head-icon= | [[https://github.com/aurium][‚Üí Aur√©lio A. Heckert]] | [[/icons/preview/gnu-head_128.png]] | [[https://www.gnu.org/graphics/heckert_gnu.html][‚Üí Link]] | | =--with-memeplex-slim-icon= | [[https://github.com/memeplex][‚Üí memeplex]] | [[/icons/preview/memeplex-slim_128.png]] | [[https://github.com/d12frosted/homebrew-emacs-plus/issues/419#issuecomment-966735773][‚Üí Link]] | | =--with-memeplex-wide-icon= | [[https://github.com/memeplex][‚Üí memeplex]] | [[/icons/preview/memeplex-wide_128.png]] | [[https://github.com/d12frosted/homebrew-emacs-plus/issues/419#issuecomment-966735773][‚Üí Link]] | | =--with-modern-alecive-flatwoken-icon= | [[https://www.iconarchive.com/artist/alecive.html][‚Üí Alessandro Roncone]] | [[/icons/preview/modern-alecive-flatwoken_128.png]] | [[https://www.iconarchive.com/show/flatwoken-icons-by-alecive.html][‚Üí Link]] | | =--with-modern-asingh4242-icon= | [[https://imgur.com/user/asingh4242][‚Üí Asingh4242]] | [[/icons/preview/modern-asingh4242_128.png]] | [[https://imgur.com/YGxjLZw][‚Üí Link]] | | =--with-modern-azhilin-icon= | Andrew Zhilin | [[/icons/preview/modern-azhilin_128.png]] | [[https://commons.wikimedia.org/wiki/File:Emacs-icon-48x48.png][‚Üí Link]] | | =--with-modern-bananxan-icon= | [[https://www.deviantart.com/bananxan][‚Üí BananXan]] | [[/icons/preview/modern-bananxan_128.png]] | [[https://www.deviantart.com/bananxan/art/Emacs-icon-207744728][‚Üí Link]] | | =--with-modern-black-dragon-icon= | [[https://www.cleanpng.com/users/@osike.html][‚Üí Osike]] | [[/icons/preview/modern-black-dragon_128.png]] | [[https://www.cleanpng.com/png-spacemacs-computer-software-command-line-interface-3947037][‚Üí Link]] | | =--with-modern-black-gnu-head-icon= | [[http://www.aha-soft.com][‚Üí Aha-Soft]] | [[/icons/preview/modern-black-gnu-head_128.png]] | [[https://www.iconfinder.com/iconsets/flat-round-system][‚Üí Link]] | | =--with-modern-black-variant-icon= | [[https://www.deviantart.com/blackvariant/about][‚Üí BlackVariant]] | [[/icons/preview/modern-black-variant_128.png]] | [[https://www.deviantart.com/blackvariant][‚Üí Link]] | | =--with-modern-bokehlicia-captiva-icon= | [[https://www.deviantart.com/bokehlicia][‚Üí Bokehlicia]] | [[/icons/preview/modern-bokehlicia-captiva_128.png]] | [[https://www.iconarchive.com/show/captiva-icons-by-bokehlicia/emacs-icon.html][‚Üí Link]] | | =--with-modern-cg433n-icon= | [[https://github.com/cg433n][‚Üí cg433n]] | [[/icons/preview/modern-cg433n_128.png]] | [[https://github.com/cg433n/emacs-mac-icon][‚Üí Link]] | | =--with-modern-doom-icon= | [[http://eccentric-j.com/][‚Üí Eccentric J]] | [[/icons/preview/modern-doom_128.png]] | [[https://github.com/eccentric-j/doom-icon][‚Üí Link]] | | =--with-modern-doom3-icon= | [[http://eccentric-j.com/][‚Üí Eccentric J]] | [[/icons/preview/modern-doom3_128.png]] | [[https://github.com/eccentric-j/doom-icon][‚Üí Link]] | | =--with-modern-icon= | Unknown | [[/icons/preview/modern_128.png]] | Unknown | | =--with-modern-mzaplotnik-icon= | [[https://commons.wikimedia.org/wiki/User:MZaplotnik][‚Üí Matjaz Zaplotnik]] | [[/icons/preview/modern-mzaplotnik_128.png]] | [[https://commons.wikimedia.org/wiki/File:Emacs-icon-48x48.svg][‚Üí Link]] | | =--with-modern-nuvola-icon= | [[https://en.wikipedia.org/wiki/David_Vignoni][‚Üí David Vignoni]] | [[/icons/preview/modern-nuvola_128.png]] | [[https://commons.wikimedia.org/wiki/File:Nuvola_apps_emacs_vector.svg][‚Üí Link]] | | =--with-modern-orange-icon= | [[https://github.com/VentGrey][‚Üí Omar Jair Purata Funes]] | [[/icons/preview/modern-orange_128.png]] | [[https://github.com/PapirusDevelopmentTeam/papirus-icon-theme/issues/1742][‚Üí Link]] | | =--with-modern-paper-icon= | [[https://github.com/snwh][‚Üí Sam Hewitt]] | [[/icons/preview/modern-paper_128.png]] | [[https://github.com/snwh/paper-icon-theme/blob/master/Paper/512x512/apps/emacs.png][‚Üí Link]] | | =--with-modern-papirus-icon= | [[https://github.com/PapirusDevelopmentTeam][‚Üí Papirus Development Team]] | [[/icons/preview/modern-papirus_128.png]] | [[https://github.com/PapirusDevelopmentTeam/papirus-icon-theme][‚Üí Link]] | | =--with-modern-pen-3d-icon= | Unknown | [[/icons/preview/modern-pen-3d_128.png]] | [[https://download-mirror.savannah.gnu.org/releases/emacs/icons][‚Üí Link]] | | =--with-modern-pen-black-icon= | [[https://gitlab.com/csantosb][‚Üí Cayetano Santos]] | [[/icons/preview/modern-pen-black_128.png]] | [[https://gitlab.com/uploads/-/system/project/avatar/11430322/emacs_icon_132408.png][‚Üí Link]] | | =--with-modern-pen-icon= | [[https://github.com/nanasess][‚Üí Kentaro Ohkouchi]] | [[/icons/preview/modern-pen_128.png]] | [[https://github.com/nanasess/EmacsIconCollections][‚Üí Link]] | | =--with-modern-pen-lds56-icon= | [[http://lds56.github.io/about][‚Üí lds56]] | [[/icons/preview/modern-pen-lds56_128.png]] | [[http://lds56.github.io/notes/emacs-icon-redesigned][‚Üí Link]] | | =--with-modern-purple-flat-icon= | [[https://jeremiahfoster.com][‚Üí Jeremiah Foster]] | [[/icons/preview/modern-purple-flat_128.png]] | [[https://icon-icons.com/icon/emacs/103962][‚Üí Link]] | | =--with-modern-sexy-v1-icon= | [[https://emacs.sexy][‚Üí Emacs is Sexy]] | [[/icons/preview/modern-sexy-v1_128.png]] | [[https://emacs.sexy][‚Üí Link]] | | =--with-modern-sexy-v2-icon= | [[https://emacs.sexy][‚Üí Emacs is Sexy]] | [[/icons/preview/modern-sexy-v2_128.png]] | [[https://emacs.sexy][‚Üí Link]] | | =--with-modern-sjrmanning-icon= | [[https://github.com/sjrmanning][‚Üí sjrmannings]] | [[/icons/preview/modern-sjrmanning_128.png]] | [[https://github.com/sjrmanning/emacs-icon][‚Üí Link]] | | =--with-modern-vscode-icon= | [[https://github.com/vdegenne][‚Üí Valentin Degenne]] | [[/icons/preview/modern-vscode_128.png]] | [[https://github.com/VSCodeEmacs/Emacs][‚Üí Link]] | | =--with-modern-yellow-icon= | Unknown | [[/icons/preview/modern-yellow_128.png]] | [[http://getdrawings.com/emacs-icon#emacs-icon-75.png][‚Üí Link]] | | =--with-nobu417-big-sur-icon= | [[https://github.com/nobu417][‚Üí Nobuyuki Sato]] | [[/icons/preview/nobu417-big-sur_128.png]] | [[https://github.com/nobu417/emacs-icon-replacement-for-macos-big-sur][‚Üí Link]] | | =--with-retro-emacs-logo-icon= | [[https://www.ee.ryerson.ca/~elf/][‚Üí Luis Fernandes]] | [[/icons/preview/retro-emacs-logo_128.png]] | [[https://en.m.wikipedia.org/wiki/File:Emacs-logo.svg][‚Üí Link]] | | =--with-retro-gnu-meditate-levitate-icon= | Nevrax Design Team | [[/icons/preview/retro-gnu-meditate-levitate_128.png]] | [[https://www.gnu.org/graphics/meditate.en.html][‚Üí Link]] | | =--with-retro-sink-bw-icon= | Unknown | [[/icons/preview/retro-sink-bw_128.png]] | [[https://www.teuton.org/~ejm/emacsicon/][‚Üí Link]] | | =--with-retro-sink-icon= | [[https://www.teuton.org/~ejm/][‚Üí Erik Mugele]] | [[/icons/preview/retro-sink_128.png]] | [[https://www.teuton.org/~ejm/emacsicon/][‚Üí Link]] | | =--with-savchenkovaleriy-big-sur-icon= | [[https://github.com/SavchenkoValeriy][‚Üí Valeriy Savchenko]] | [[/icons/preview/savchenkovaleriy-big-sur_128.png]] | [[https://github.com/SavchenkoValeriy/emacs-icons][‚Üí Link]] | | =--with-skamacs-icon= | [[https://github.com/compufox][‚Üí compufox]] | [[/icons/preview/skamacs_128.png]] | [[https://github.com/compufox/skamacs-icon][‚Üí Link]] | | =--with-spacemacs-icon= | [[https://github.com/nashamri][‚Üí Nasser Alshammari]] | [[/icons/preview/spacemacs_128.png]] | [[https://github.com/nashamri/spacemacs-logo][‚Üí Link]] | | =--with-savchenkovaleriy-big-sur-3d-icon= | [[https://github.com/SavchenkoValeriy][‚Üí Valeriy Savchenko]] | [[/icons/preview/savchenkovaleriy-big-sur-3d_128.png]] | [[https://github.com/SavchenkoValeriy/emacs-icons][‚Üí Link]] | | =--with-savchenkovaleriy-big-sur-curvy-3d-icon= | [[https://github.com/SavchenkoValeriy][‚Üí Valeriy Savchenko]] | [[/icons/preview/savchenkovaleriy-big-sur-curvy-3d_128.png]] | [[https://github.com/SavchenkoValeriy/emacs-icons][‚Üí Link]] |&lt;/p&gt; 
&lt;p&gt;** Emacs configuration&lt;/p&gt; 
&lt;p&gt;Emacs is a journey. And for some of you these projects might be inspiring.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;[[https://github.com/purcell/emacs.d][‚Üí Steve Purcell&#39;s .emacs.d]]&lt;/li&gt; 
 &lt;li&gt;[[https://github.com/syl20bnr/spacemacs/][‚Üí Spacemacs]]&lt;/li&gt; 
 &lt;li&gt;[[https://github.com/hlissner/doom-emacs][‚Üí doom-emacs]]&lt;/li&gt; 
 &lt;li&gt;[[https://github.com/bbatsov/prelude][‚Üí Prelude]]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;** Known Issues&lt;/p&gt; 
&lt;p&gt;Please checkout [[https://github.com/d12frosted/homebrew-emacs-plus/issues][‚Üí Issues]] page for a list of all known issues. But here are several you should be aware of.&lt;/p&gt; 
&lt;p&gt;*** =emacs= dependency in other formulas&lt;/p&gt; 
&lt;p&gt;In some cases (like when installing =cask=) regular =emacs= package will be required. In such cases you might want to install all dependencies manually (except for =emacs=) and then install desired package with =--ignore-dependencies= option.&lt;/p&gt; 
&lt;p&gt;#+BEGIN_SRC bash $ brew install cask --ignore-dependencies #+END_SRC&lt;/p&gt; 
&lt;p&gt;** Old versions&lt;/p&gt; 
&lt;p&gt;This repository provides formulas for some older version. Feel free to use them, but they are not really supported anymore.&lt;/p&gt; 
&lt;p&gt;#+begin_src bash $ brew tap d12frosted/emacs-plus $ brew install emacs-plus@28 [options] # install Emacs 28 $ brew install emacs-plus@27 [options] # install Emacs 27 $ brew install emacs-plus@26 [options] # install Emacs 26 #+end_src&lt;/p&gt; 
&lt;p&gt;*** Emacs 28&lt;/p&gt; 
&lt;p&gt;**** Included&lt;/p&gt; 
&lt;p&gt;By default =emacs-plus@28= uses the following features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Injected =PATH= value from user shell (see separate section explaining this feature).&lt;/li&gt; 
 &lt;li&gt;Cocoa version, e.g. builds =Emacs.app=.&lt;/li&gt; 
 &lt;li&gt;Unconditional support for =gnutls=, =librsvg=, =libxml2=, =little-cms2= and dynamic modules.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;**** Options&lt;/p&gt; 
&lt;p&gt;| Option | Description | |--------------------------------------+------------------------------------------------------------------------------| | =--with-ctags= | don&#39;t remove the ctags executable that Emacs provides | | =--with-dbus= | build with dbus support | | =--with-debug= | build with debug symbols and debugger friendly optimizations | | =--with-mailutils= | build with mailutils support | | =--with-no-frame-refocus= | disables frame re-focus (ie. closing one frame does not refocus another one) | | =--with-no-titlebar= | build [[#no-titlebar][‚Üí without titlebar]] | | =--with-no-titlebar-and-round-corners= | build [[#no-titlebar][‚Üí without titlebar]], but round corners instead of square | | =--with-x11= | build with x11 support | | =--with-xwidgets= | build [[#xwidgets-webkit][‚Üí with xwidgets]] support | | =--without-cocoa= | build a non-Cocoa version of Emacs (terminal only) | | =--with-imagemagick= | build with =imagemagick= support | | =--HEAD= | build from =emacs-28= branch | | =--with-native-comp= | build with native compilation aka [[#gccemacs][‚Üí gccemacs]] | | | |&lt;/p&gt; 
&lt;p&gt;*** Emacs 27&lt;/p&gt; 
&lt;p&gt;**** Included&lt;/p&gt; 
&lt;p&gt;By default =emacs-plus@27= uses the following features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Cocoa version, e.g. builds =Emacs.app=.&lt;/li&gt; 
 &lt;li&gt;Unconditional support for =gnutls=, =librsvg=, =libxml2=, =little-cms2= and dynamic modules.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;**** Options&lt;/p&gt; 
&lt;p&gt;| Option | Description | |-------------------------+------------------------------------------------------------------------------| | =--with-ctags= | don&#39;t remove the ctags executable that Emacs provides | | =--with-dbus= | build with dbus support | | =--with-debug= | build with debug symbols and debugger friendly optimizations | | =--with-mailutils= | build with mailutils support | | =--with-no-frame-refocus= | disables frame re-focus (ie. closing one frame does not refocus another one) | | =--with-no-titlebar= | build [[#no-titlebar][‚Üí without titlebar]] | | =--with-x11= | build with x11 support | | =--with-xwidgets= | build [[#xwidgets-webkit][‚Üí with xwidgets]] support | | =--without-cocoa= | build a non-Cocoa version of Emacs (terminal only) | | =--without-imagemagick= | build without =imagemagick= support | | =--HEAD= | build from =emacs-27= branch |&lt;/p&gt; 
&lt;p&gt;*** Emacs 26&lt;/p&gt; 
&lt;p&gt;Emacs 26 comes without any available options due to [[https://github.com/d12frosted/homebrew-emacs-plus/issues/195][‚Üí #195]].&lt;/p&gt; 
&lt;p&gt;** FAQ&lt;/p&gt; 
&lt;p&gt;*** How to change/pin commit =emacs-plus@30= is built from&lt;/p&gt; 
&lt;p&gt;The most current development version is consistently compiled from a specific branch. At the time of this writing, for instance, =emacs-plus@30= is being built from the =emacs-30= branch.&lt;/p&gt; 
&lt;p&gt;Ordinarily, =brew= will update to the latest commit in the specified branch during installation, meaning the exact commit you&#39;re building from varies depending on the installation timing. As development versions are less stable than official releases, some users may prefer to pin a specific commit.&lt;/p&gt; 
&lt;p&gt;Usually this is done by modifying formula (i.e. by executing =brew edit emacs-plus@30= and altering the =url= directive), but you can also set =HOMEBREW_EMACS_PLUS_30_REVISION= environment variable before installing =emacs-plus@30=:&lt;/p&gt; 
&lt;p&gt;#+begin_src bash $ HOMEBREW_EMACS_PLUS_30_REVISION=6abea4d98d1d964c68a78cb9b5321071da851654 brew install emacs-plus@30 [OPTIONS] #+end_src&lt;/p&gt; 
&lt;p&gt;*** How to change/pin commit =emacs-plus@31= is built from&lt;/p&gt; 
&lt;p&gt;The most current development version is consistently compiled from a specific branch. At the time of this writing, for instance, =emacs-plus@31= is being built from the =master= branch.&lt;/p&gt; 
&lt;p&gt;Ordinarily, =brew= will update to the latest commit in the specified branch during installation, meaning the exact commit you&#39;re building from varies depending on the installation timing. As development versions are less stable than official releases, some users may prefer to pin a specific commit.&lt;/p&gt; 
&lt;p&gt;Usually this is done by modifying formula (i.e. by executing =brew edit emacs-plus@31= and altering the =url= directive), but you can also set =HOMEBREW_EMACS_PLUS_31_REVISION= environment variable before installing =emacs-plus@31=:&lt;/p&gt; 
&lt;p&gt;#+begin_src bash $ HOMEBREW_EMACS_PLUS_31_REVISION=6abea4d98d1d964c68a78cb9b5321071da851654 brew install emacs-plus@31 [OPTIONS] #+end_src&lt;/p&gt; 
&lt;p&gt;** Screenshots&lt;/p&gt; 
&lt;p&gt;#+BEGIN_HTML&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/d12frosted/homebrew-emacs-plus/master/images/screenshot-01.png&quot;&gt; &lt;/p&gt; #+END_HTML 
&lt;p&gt;#+BEGIN_HTML&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/d12frosted/homebrew-emacs-plus/master/images/screenshot-02.png&quot;&gt; &lt;/p&gt; #+END_HTML 
&lt;p&gt;** Acknowledgements&lt;/p&gt; 
&lt;p&gt;Many thanks to all [[https://github.com/d12frosted/homebrew-emacs-plus/graphs/contributors][‚Üí contributors]], issue reporters and bottle providers ([[https://github.com/wadkar][‚Üí Sudarshan Wadkar]], [[https://github.com/jonhermansen][‚Üí Jon Hermansen]]).&lt;/p&gt; 
&lt;p&gt;Special thanks to patrons [[https://www.patreon.com/d12frosted][supporting]] existence of this project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;[[https://github.com/jidicula][‚Üí Johanan Idicula]]&lt;/li&gt; 
 &lt;li&gt;[[http://github.com/lyndondrake][‚Üí Lyndon Drake]]&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Homebrew/homebrew-core</title>
      <link>https://github.com/Homebrew/homebrew-core</link>
      <description>&lt;p&gt;üçª Default formulae for the missing package manager for macOS (or Linux)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Homebrew Core&lt;/h1&gt; 
&lt;p&gt;Core formulae for the Homebrew package manager.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/orgs/Homebrew/discussions&quot;&gt;Homebrew/discussions (forum)&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How do I install these formulae?&lt;/h2&gt; 
&lt;p&gt;Just &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt;. This is the default tap for Homebrew and is installed by default.&lt;/p&gt; 
&lt;h2&gt;More Documentation, Troubleshooting, Contributing, Security, Community, Donations, License and Sponsors&lt;/h2&gt; 
&lt;p&gt;See these sections in &lt;a href=&quot;https://github.com/Homebrew/brew#homebrew&quot;&gt;Homebrew/brew&#39;s README&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
