<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Swift Monthly Trending</title>
    <description>Monthly Trending of Swift in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 02:11:24 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>buresdv/Cork</title>
      <link>https://github.com/buresdv/Cork</link>
      <description>&lt;p&gt;A fast GUI for Homebrew written in SwiftUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cork&lt;/h1&gt; 
&lt;p&gt;A fast GUI for Homebrew written in SwiftUI&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://mstdn.social/@davidbures&quot;&gt;&lt;img src=&quot;https://img.shields.io/mastodon/follow/108939255808776594?domain=https%3A%2F%2Fmstdn.social&amp;amp;label=Follow%20me%20for%20updates&amp;amp;style=flat&quot; alt=&quot;Mastodon Link&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/kUHg8uGHpG&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1083475351260377119?label=Talk%20to%20me%20on%20Discord&amp;amp;style=flat&quot; alt=&quot;Discord Link&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://forum.corkmac.app/t/cork&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Join%20the%20Forums-orange?style=flat&amp;amp;link=https://forum.corkmac.app/t/cork&quot; alt=&quot;Join the Forums&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;My whole life is falling apart right now, so the development of Cork will be impacted&lt;/h1&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;p&gt;I&#39;d like to personally thank &lt;a href=&quot;https://github.com/sebj&quot;&gt;Seb Jachec&lt;/a&gt; for implementing a system for getting real-time outputs of Brew commands.&lt;/p&gt; 
&lt;p&gt;Without his contribution, many of the processes that depend on real-time outputs, such as installation, uninstallation and updating of packages, would be impossible.&lt;/p&gt; 
&lt;p&gt;I&#39;d like to personally thank &lt;a href=&quot;https://github.com/dimitribouniol&quot;&gt;Dmitri Bouniol&lt;/a&gt; and &lt;a href=&quot;https://twos.dev&quot;&gt;Ben Carlsson&lt;/a&gt; for coming up with a way for self-compiled builds to bypass the license check.&lt;/p&gt; 
&lt;p&gt;Without them, it would be impossible to have a free self-compiled version of the app.&lt;/p&gt; 
&lt;h2&gt;Advantages of Cork&lt;/h2&gt; 
&lt;p&gt;Cork is not just an interface for Homebrew. It has many features that are either very hard to accomplish using Homebrew alone, or straight-up not possible.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Things that are not possible without Cork&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Automatically respecting system proxy.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Clearing of cached downloads.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Updating packages from the Menu Bar without having Cork open.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Seeing this much info about a package in one convenient location.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Tagging packages. This is a Cork-only feature that lets you mark any number of packages you&#39;d like to keep track of.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Things that Cork makes easier&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Listing of installed packages. Cork has its own way of loading packages, which is around 10 times faster than the Homebrew implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Knowing which packages you installed intentionally, and which packages were installed only as dependencies. While somewhat possible with the &lt;code&gt;brew leaves&lt;/code&gt; command, it is often unreliable, often not listing packages that should be included.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Updating of only selected packages. Again, while possible with Homebrew alone, Cork makes it so easy you wouldn&#39;t believe it is not this simple in Homebrew itself.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Showing you exactly which packages a package is a dependency of. Super annoying in Homebrew, effortless with Cork.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Effortlessly managing Homebrew services with a simple click of a button in a beautiful sub-window.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; And many other features! Just try Cork out and try finding them all 😉&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Cork&lt;/h2&gt; 
&lt;p&gt;Pre-compiled, always up-to-date versions are available from my Homebrew tap. You can get access to it in a few ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Buy Cork for 25€ through the &lt;a href=&quot;https://corkmac.app&quot;&gt;website&lt;/a&gt;. You will get access to all future versions at no additional cost.&lt;/li&gt; 
 &lt;li&gt;Become a contributor. For example, you can: 
  &lt;ul&gt; 
   &lt;li&gt;Translate Cork into your language, and keep your translation updated. I&#39;d recommend joining the &lt;a href=&quot;https://discord.gg/kUHg8uGHpG&quot;&gt;Cork Discord&lt;/a&gt;, as I always ping the translators there when new text is ready for translating. If you aren&#39;t sure how to go about translating Cork, I&#39;d recommend asking the translation team on Discord. They have the &lt;code&gt;Linguist&lt;/code&gt; role. If you&#39;d prefer to learn on your own, this Apple documentation article is a nice introduction to the process: &lt;a href=&quot;https://developer.apple.com/documentation/xcode/adding-support-for-languages-and-regions&quot;&gt;Internalization&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Implement a feature tagged with &lt;code&gt;Help Wanted&lt;/code&gt; in the &lt;a href=&quot;https://github.com/buresdv/Cork/issues?q=is%3Aissue+is%3Aopen+label%3A%22Help+Wanted%22&quot;&gt;Issue Tracker&lt;/a&gt;. Please respect the coding style. The main deviation from the Swift convention is that &lt;a href=&quot;https://github.com/buresdv/Cork/raw/83e6ac9977d780328d7bfeddaf4df66dc3260521/Cork/Logic/JSON/Parse%20JSON.swift#L16&quot;&gt;brackets are on their own lines&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;However, if you don&#39;t want to do any of the above, you can always compile Cork yourself. See below for instructions.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Main Window&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/DNCsucp.png&quot; alt=&quot;Start Page&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Package Info&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Package Info&quot; src=&quot;https://i.imgur.com/U8nCdlc.png&quot; width=&quot;28%&quot;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;img alt=&quot;Package Info - Full-size Caveats&quot; src=&quot;https://i.imgur.com/lm2AhnX.png&quot; width=&quot;28%&quot;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;img alt=&quot;Package Info - Minimized Caveats&quot; src=&quot;https://i.imgur.com/KFonAHx.png&quot; width=&quot;28%&quot;&gt; &lt;/p&gt; 
&lt;h3&gt;Tap Info&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Tap Info - Formulae Only&quot; src=&quot;https://i.imgur.com/VZi6jKK.png&quot; width=&quot;47%&quot;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;img alt=&quot;Tap Info - Formulae and Casks&quot; src=&quot;https://i.imgur.com/ZCDlel6.png&quot; width=&quot;47%&quot;&gt; &lt;/p&gt; 
&lt;h3&gt;Install Package&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Install Package&quot; src=&quot;https://i.imgur.com/c5BNkl3.png&quot; width=&quot;28%&quot;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;img alt=&quot;Install Package - Fetching Dependencies&quot; src=&quot;https://i.imgur.com/x8qWBMO.png&quot; width=&quot;28%&quot;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;img alt=&quot;Install Package - Installing Dependencies&quot; src=&quot;https://i.imgur.com/dIgYKoj.png&quot; width=&quot;28%&quot;&gt; &lt;/p&gt; 
&lt;h3&gt;Add Taps&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/RKMUgM8.png&quot; alt=&quot;Tap Taps&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Brew Maintenance&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Brew Maintenance&quot; src=&quot;https://i.imgur.com/Ky9kjPo.png&quot; width=&quot;47%&quot;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;img alt=&quot;Brew Maintenance Results&quot; src=&quot;https://i.imgur.com/sxjbRg2.png&quot; width=&quot;47%&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;Media&lt;/h2&gt; 
&lt;p&gt;Do you run a blog, a magazine, make videos, or just make content about apps for fun? Get in touch at &lt;a href=&quot;mailto:dev@corkmac.app&quot;&gt;dev@corkmac.app&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;I will provide you with the newest release and development version, answer any questions you have, and introduce you to Cork personally (and for free, or course), so you can focus on creating.&lt;/p&gt; 
&lt;h2&gt;Compiling Cork&lt;/h2&gt; 
&lt;p&gt;Compiling Cork is simple, as it does not have many dependencies. It uses Tuist to generate Xcode projects to speed up compilation.&lt;/p&gt; 
&lt;p&gt;Prerequisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;macOS Ventura or newer&lt;/li&gt; 
 &lt;li&gt;Xcode 16 or newer&lt;/li&gt; 
 &lt;li&gt;Git&lt;/li&gt; 
 &lt;li&gt;Homebrew&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Instructions:&lt;/h3&gt; 
&lt;h4&gt;Before you begin&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Skip if you already have an Apple Developer account&lt;/em&gt;&lt;/p&gt; 
&lt;ol start=&quot;0&quot;&gt; 
 &lt;li&gt;Enroll your account in the developer program at &lt;a href=&quot;https://developer.apple.com/&quot;&gt;https://developer.apple.com/&lt;/a&gt;. You don&#39;t need a paid account, a free one works fine&lt;/li&gt; 
 &lt;li&gt;Install Xcode&lt;/li&gt; 
 &lt;li&gt;Add your Developer account to Xcode. To do so, in the Menu bar, click &lt;code&gt;Xcode → Settings&lt;/code&gt;, and in the window that opens, click &lt;code&gt;Accounts&lt;/code&gt;. You can add your account there&lt;/li&gt; 
 &lt;li&gt;After you add your account, it will appear in the list of Apple IDs on the left of the screen. Select your account there&lt;/li&gt; 
 &lt;li&gt;At the bottom of the screen, click &lt;code&gt;Manage Certificates...&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;On the bottom left, click the &lt;strong&gt;+&lt;/strong&gt; icon and select &lt;code&gt;Apple Development&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;When a new item appears in the list called &lt;code&gt;Apple Development Certificates&lt;/code&gt;, you can press &lt;code&gt;Done&lt;/code&gt; to close the account manager&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Installing Tuist and Its Prerequisites&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Skip if you already have Tuist and Mise installed&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Installing Mise&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Cork uses Mise to prevent conflicts arising from mismatched Tuist versions across Macs. Mise is a tool similar to Homebrew, but offers some advantages for Tuist specifically, like the aforementioned version synchronization.&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Mise using &lt;code&gt;curl https://mise.run | sh&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Initialize Mise using the command you see after the installation finishes. It&#39;s located under &lt;code&gt;mise: run the following to activate mise in your shell:&lt;/code&gt;.&lt;br&gt; In my case, it was &lt;code&gt;echo &quot;eval \&quot;\$(/Users/david/.local/bin/mise activate zsh)\&quot;&quot; &amp;gt;&amp;gt; &quot;/Users/david/.zshrc&quot;&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] Make sure to copy the command Mise itself gives you, and not the one I used above. This command is only valid for my Mac, and will not work on your machine.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Add &lt;code&gt;mise&lt;/code&gt; to your path using one of the following commands, depending on your shell.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;zsh&lt;/strong&gt;: &lt;code&gt;echo &#39;eval &quot;$(~/.local/bin/mise activate zsh)&quot;&#39; &amp;gt;&amp;gt; ~/.zshrc&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;bash&lt;/strong&gt;: &lt;code&gt;echo &#39;eval &quot;$(~/.local/bin/mise activate bash)&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;fish&lt;/strong&gt;: &lt;code&gt;echo &#39;~/.local/bin/mise activate fish | source&#39; &amp;gt;&amp;gt; ~/.config/fish/config.fish&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] &lt;strong&gt;zsh&lt;/strong&gt; is the default macOS shell.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you don&#39;t know which shell you&#39;re running, use the command &lt;code&gt;echo $SHELL&lt;/code&gt;. The last part of the output after the last slash is the name of your shell In my case, the output of the command is &lt;code&gt;/bin/zsh&lt;/code&gt;. This means my shell is &lt;code&gt;zsh&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Installing Tuist&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Tuist using &lt;code&gt;mise install tuist&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Compiling Cork&lt;/h4&gt; 
&lt;ol start=&quot;0&quot;&gt; 
 &lt;li&gt;I recommend you pick a version marked by one of the version tags. Those are released versions. If you decide to compile the current state of any of the branches, you might encounter experience-breaking bugs and unfinished features&lt;/li&gt; 
 &lt;li&gt;Use the command &lt;code&gt;git clone https://github.com/buresdv/Cork.git &amp;amp;&amp;amp; cd Cork &amp;amp;&amp;amp; mise use tuist@4.25.0 &amp;amp;&amp;amp; tuist install &amp;amp;&amp;amp; tuist generate --no-binary-cache&lt;/code&gt;. Xcode will open the project.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div style=&quot;margin-left: 1rem&quot;&gt; 
 &lt;details&gt; 
  &lt;summary&gt;What does this command do?&lt;/summary&gt; 
  &lt;br&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;git clone https://github.com/buresdv/Cork.git&lt;/code&gt; downloads the source code&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;cd Cork&lt;/code&gt; opens the folder you downloaded Cork into&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;mise use&lt;/code&gt; tells your system to use version &lt;i&gt;4.25.0&lt;/i&gt; of Tuist to build Cork&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;tuist install&lt;/code&gt; downloads all Cork pre-requisites&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;tuist generate&lt;/code&gt; creates the Xcode project and opens it&lt;/li&gt; 
  &lt;/ol&gt; 
 &lt;/details&gt; 
&lt;/div&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Wait until all the dependencies are resolved. It should take a couple minutes at most&lt;/li&gt; 
 &lt;li&gt;In the file browser on the left, click &lt;code&gt;Cork&lt;/code&gt; at the very top. It&#39;s the icon with the App Store logo&lt;/li&gt; 
 &lt;li&gt;In the pane that opens on the right, click &lt;code&gt;Signing &amp;amp; Capabilities&lt;/code&gt; at the top&lt;/li&gt; 
 &lt;li&gt;Under &lt;code&gt;Signing&lt;/code&gt;, switch the &lt;code&gt;Team&lt;/code&gt; dropdown to &lt;code&gt;None&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Under &lt;code&gt;Signing → macOS&lt;/code&gt;, switch the &lt;code&gt;Signing Certificate&lt;/code&gt; to &lt;code&gt;Sign to Run Locally&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;If it isn&#39;t already selected, change the Build Scheme to &lt;code&gt;Self-Compiled&lt;/code&gt; in Xcode&#39;s &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/toolbars#macOS&quot;&gt;toolbar&lt;/a&gt;. &lt;img src=&quot;https://files.catbox.moe/ofufd1.jpg&quot; alt=&quot;Build Scheme Selector&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] If you don&#39;t select the correct Build Scheme, Cork will require you to put in a license.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start=&quot;8&quot;&gt; 
 &lt;li&gt;In the Menu Bar, click &lt;code&gt;Product → Archive&lt;/code&gt; and wait for the building to finish&lt;/li&gt; 
 &lt;li&gt;A new window will open. From the list of Cork rows, select the topmost one, and click &lt;code&gt;Distribute App&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;In the popup that appears, click &lt;code&gt;Custom&lt;/code&gt;, then click &lt;code&gt;Next&lt;/code&gt; in the bottom right of the popup&lt;/li&gt; 
 &lt;li&gt;Click &lt;code&gt;Copy App&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the resulting folder. You&#39;ll see an app called Cork. Drag Cork to your &lt;code&gt;/Applications/&lt;/code&gt; folder, and you&#39;re done!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Cork is licensed under &lt;a href=&quot;https://commonsclause.com&quot;&gt;Commons Clause&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This means that Cork&#39;s source source is available and you can modify it, contribute to it etc., but you can&#39;t sell or distribute Cork or modified versions of it.&lt;/p&gt; 
&lt;p&gt;Moreover, you can’t distribute compiled versions of Cork without consulting me first. Compiling versions for your personal use is fine.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://wiki.mutable.ai/buresdv/Cork&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Auto_Wiki-Mutable.ai-blue&quot; alt=&quot;Mutable.ai Auto Wiki&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>stephencelis/SQLite.swift</title>
      <link>https://github.com/stephencelis/SQLite.swift</link>
      <description>&lt;p&gt;A type-safe, Swift-language layer over SQLite3.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SQLite.swift&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/stephencelis/SQLite.swift/build.yml?branch=master&quot; alt=&quot;Build Status&quot;&gt; &lt;a href=&quot;https://cocoapods.org/pods/SQLite.swift&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/v/SQLite.swift.svg?style=flat&quot; alt=&quot;CocoaPods Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://developer.apple.com/swift/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/swift-5-orange.svg?style=flat&quot; alt=&quot;Swift5 compatible&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cocoapods.org/pods/SQLite.swift&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/p/SQLite.swift.svg?style=flat&quot; alt=&quot;Platform&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&quot; alt=&quot;Carthage compatible&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/stephencelis/SQLite.swift&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/stephencelis/SQLite.swift.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/stephencelis/SQLite.swift&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A type-safe, &lt;a href=&quot;https://swift.org/&quot;&gt;Swift&lt;/a&gt;-language layer over &lt;a href=&quot;https://www.sqlite.org&quot;&gt;SQLite3&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/stephencelis/SQLite.swift&quot;&gt;SQLite.swift&lt;/a&gt; provides compile-time confidence in SQL statement syntax &lt;em&gt;and&lt;/em&gt; intent.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A pure-Swift interface&lt;/li&gt; 
 &lt;li&gt;A type-safe, optional-aware SQL expression builder&lt;/li&gt; 
 &lt;li&gt;A flexible, chainable, lazy-executing query layer&lt;/li&gt; 
 &lt;li&gt;Automatically-typed data access&lt;/li&gt; 
 &lt;li&gt;A lightweight, uncomplicated query and parameter binding interface&lt;/li&gt; 
 &lt;li&gt;Developer-friendly error handling and debugging&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/stephencelis/SQLite.swift/master/Documentation/Index.md#full-text-search&quot;&gt;Full-text search&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/stephencelis/SQLite.swift/master/Documentation/Index.md#sqliteswift-documentation&quot;&gt;Well-documented&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Extensively tested&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zetetic.net/sqlcipher/&quot;&gt;SQLCipher&lt;/a&gt; support via CocoaPods&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/stephencelis/SQLite.swift/master/Documentation/Index.md#querying-the-schema&quot;&gt;Schema query/migration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Works on &lt;a href=&quot;https://raw.githubusercontent.com/stephencelis/SQLite.swift/master/Documentation/Linux.md&quot;&gt;Linux&lt;/a&gt; (with some limitations)&lt;/li&gt; 
 &lt;li&gt;Active support at &lt;a href=&quot;https://stackoverflow.com/questions/tagged/sqlite.swift&quot;&gt;StackOverflow&lt;/a&gt;, and &lt;a href=&quot;https://gitter.im/stephencelis/SQLite.swift&quot;&gt;Gitter Chat Room&lt;/a&gt; (&lt;em&gt;experimental&lt;/em&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;import SQLite

// Wrap everything in a do...catch to handle errors
do {
    let db = try Connection(&quot;path/to/db.sqlite3&quot;)

    let users = Table(&quot;users&quot;)
    let id = Expression&amp;lt;Int64&amp;gt;(&quot;id&quot;)
    let name = Expression&amp;lt;String?&amp;gt;(&quot;name&quot;)
    let email = Expression&amp;lt;String&amp;gt;(&quot;email&quot;)

    try db.run(users.create { t in
        t.column(id, primaryKey: true)
        t.column(name)
        t.column(email, unique: true)
    })
    // CREATE TABLE &quot;users&quot; (
    //     &quot;id&quot; INTEGER PRIMARY KEY NOT NULL,
    //     &quot;name&quot; TEXT,
    //     &quot;email&quot; TEXT NOT NULL UNIQUE
    // )

    let insert = users.insert(name &amp;lt;- &quot;Alice&quot;, email &amp;lt;- &quot;alice@mac.com&quot;)
    let rowid = try db.run(insert)
    // INSERT INTO &quot;users&quot; (&quot;name&quot;, &quot;email&quot;) VALUES (&#39;Alice&#39;, &#39;alice@mac.com&#39;)

    for user in try db.prepare(users) {
        print(&quot;id: \(user[id]), name: \(user[name]), email: \(user[email])&quot;)
        // id: 1, name: Optional(&quot;Alice&quot;), email: alice@mac.com
    }
    // SELECT * FROM &quot;users&quot;

    let alice = users.filter(id == rowid)

    try db.run(alice.update(email &amp;lt;- email.replace(&quot;mac.com&quot;, with: &quot;me.com&quot;)))
    // UPDATE &quot;users&quot; SET &quot;email&quot; = replace(&quot;email&quot;, &#39;mac.com&#39;, &#39;me.com&#39;)
    // WHERE (&quot;id&quot; = 1)

    try db.run(alice.delete())
    // DELETE FROM &quot;users&quot; WHERE (&quot;id&quot; = 1)

    try db.scalar(users.count) // 0
    // SELECT count(*) FROM &quot;users&quot;
} catch {
    print (error)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;SQLite.swift also works as a lightweight, Swift-friendly wrapper over the C API.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// Wrap everything in a do...catch to handle errors
do {
    // ...

    let stmt = try db.prepare(&quot;INSERT INTO users (email) VALUES (?)&quot;)
    for email in [&quot;betty@icloud.com&quot;, &quot;cathy@icloud.com&quot;] {
        try stmt.run(email)
    }

    db.totalChanges    // 3
    db.changes         // 1
    db.lastInsertRowid // 3

    for row in try db.prepare(&quot;SELECT id, email FROM users&quot;) {
        print(&quot;id: \(row[0]), email: \(row[1])&quot;)
        // id: Optional(2), email: Optional(&quot;betty@icloud.com&quot;)
        // id: Optional(3), email: Optional(&quot;cathy@icloud.com&quot;)
    }

    try db.scalar(&quot;SELECT count(*) FROM users&quot;) // 2
} catch {
    print (error)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/stephencelis/SQLite.swift/master/Documentation/Index.md#sqliteswift-documentation&quot;&gt;Read the documentation&lt;/a&gt; or explore more, interactively, from the Xcode project’s playground.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/stephencelis/SQLite.swift/master/Documentation/Resources/playground@2x.png&quot; alt=&quot;SQLite.playground Screen Shot&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Swift Package Manager&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://swift.org/package-manager&quot;&gt;Swift Package Manager&lt;/a&gt; is a tool for managing the distribution of Swift code.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add the following to your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;dependencies: [
    .package(url: &quot;https://github.com/stephencelis/SQLite.swift.git&quot;, from: &quot;0.15.3&quot;)
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Build your project:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ swift build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/stephencelis/SQLite.swift/tree/master/Tests/SPM&quot;&gt;Tests/SPM&lt;/a&gt; folder for a small demo project which uses SPM.&lt;/p&gt; 
&lt;h3&gt;Carthage&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;Carthage&lt;/a&gt; is a simple, decentralized dependency manager for Cocoa. To install SQLite.swift with Carthage:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Make sure Carthage is &lt;a href=&quot;https://github.com/Carthage/Carthage#installing-carthage&quot;&gt;installed&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Update your Cartfile to include the following:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;github &quot;stephencelis/SQLite.swift&quot; ~&amp;gt; 0.15.3
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;carthage update&lt;/code&gt; and &lt;a href=&quot;https://github.com/Carthage/Carthage#adding-frameworks-to-an-application&quot;&gt;add the appropriate framework&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;CocoaPods&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://cocoapods.org&quot;&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. To install SQLite.swift with CocoaPods:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Make sure CocoaPods is &lt;a href=&quot;https://guides.cocoapods.org/using/getting-started.html#getting-started&quot;&gt;installed&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Using the default Ruby install will require you to use sudo when
# installing and updating gems.
[sudo] gem install cocoapods
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Update your Podfile to include the following:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;use_frameworks!

target &#39;YourAppTargetName&#39; do
    pod &#39;SQLite.swift&#39;, &#39;~&amp;gt; 0.14.0&#39;
end
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;pod install --repo-update&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Manual&lt;/h3&gt; 
&lt;p&gt;To install SQLite.swift as an Xcode sub-project:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Drag the &lt;strong&gt;SQLite.xcodeproj&lt;/strong&gt; file into your own project. (&lt;a href=&quot;https://git-scm.com/book/en/Git-Tools-Submodules&quot;&gt;Submodule&lt;/a&gt;, clone, or &lt;a href=&quot;https://github.com/stephencelis/SQLite.swift/archive/master.zip&quot;&gt;download&lt;/a&gt; the project first.)&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/stephencelis/SQLite.swift/master/Documentation/Resources/installation@2x.png&quot; alt=&quot;Installation Screen Shot&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In your target’s &lt;strong&gt;General&lt;/strong&gt; tab, click the &lt;strong&gt;+&lt;/strong&gt; button under &lt;strong&gt;Linked Frameworks and Libraries&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select the appropriate &lt;strong&gt;SQLite.framework&lt;/strong&gt; for your platform.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Some additional steps are required to install the application on an actual device:&lt;/p&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt; &lt;p&gt;In the &lt;strong&gt;General&lt;/strong&gt; tab, click the &lt;strong&gt;+&lt;/strong&gt; button under &lt;strong&gt;Embedded Binaries&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select the appropriate &lt;strong&gt;SQLite.framework&lt;/strong&gt; for your platform.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/stephencelis/SQLite.swift/master/Documentation/Planning.md&quot;&gt;See the planning document&lt;/a&gt; for a roadmap and existing feature requests.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/stephencelis/SQLite.swift/master/CONTRIBUTING.md#contributing&quot;&gt;Read the contributing guidelines&lt;/a&gt;. The &lt;em&gt;TL;DR&lt;/em&gt; (but please; &lt;em&gt;R&lt;/em&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Need &lt;strong&gt;help&lt;/strong&gt; or have a &lt;strong&gt;general question&lt;/strong&gt;? &lt;a href=&quot;https://stackoverflow.com/questions/tagged/sqlite.swift&quot;&gt;Ask on Stack Overflow&lt;/a&gt; (tag &lt;code&gt;sqlite.swift&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Found a &lt;strong&gt;bug&lt;/strong&gt; or have a &lt;strong&gt;feature request&lt;/strong&gt;? &lt;a href=&quot;https://github.com/stephencelis/SQLite.swift/issues/new&quot;&gt;Open an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Want to &lt;strong&gt;contribute&lt;/strong&gt;? &lt;a href=&quot;https://github.com/stephencelis/SQLite.swift/fork&quot;&gt;Submit a pull request&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Original author&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;mailto:stephen@stephencelis.com&quot;&gt;Stephen Celis&lt;/a&gt; (&lt;a href=&quot;https://twitter.com/stephencelis&quot;&gt;@stephencelis&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;SQLite.swift is available under the MIT license. See &lt;a href=&quot;https://raw.githubusercontent.com/stephencelis/SQLite.swift/master/LICENSE.txt&quot;&gt;the LICENSE file&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;These projects enhance or use SQLite.swift:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/garriguv/SQLiteMigrationManager.swift&quot;&gt;SQLiteMigrationManager.swift&lt;/a&gt; (inspired by &lt;a href=&quot;https://github.com/layerhq/FMDBMigrationManager&quot;&gt;FMDBMigrationManager&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Alternatives&lt;/h2&gt; 
&lt;p&gt;Looking for something else? Try another Swift wrapper (or &lt;a href=&quot;https://github.com/ccgus/fmdb&quot;&gt;FMDB&lt;/a&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/groue/GRDB.swift&quot;&gt;GRDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FahimF/SQLiteDB&quot;&gt;SQLiteDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nerdyc/Squeal&quot;&gt;Squeal&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>whoeevee/EeveeSpotify</title>
      <link>https://github.com/whoeevee/EeveeSpotify</link>
      <description>&lt;p&gt;A tweak to get Spotify Premium for free, just like Spotilife&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/whoeevee/EeveeSpotify/swift/Images/banner.png&quot; alt=&quot;Banner&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;EeveeSpotify&lt;/h1&gt; 
&lt;p&gt;This tweak makes Spotify think you have a Premium subscription, granting free listening, just like Spotilife, and provides some additional features like custom lyrics.&lt;/p&gt; 
&lt;h2&gt;The History&lt;/h2&gt; 
&lt;p&gt;In January 2024, Spotilife, the only tweak to get Spotify Premium, stopped working on new Spotify versions. I decompiled Spotilife, reverse-engineered Spotify, intercepted requests, etc., and created this tweak.&lt;/p&gt; 
&lt;h2&gt;Repositories&lt;/h2&gt; 
&lt;p&gt;You can add an official EeveeSpotify repository to your signing app to always stay up to date. See &lt;a href=&quot;https://raw.githubusercontent.com/whoeevee/EeveeSpotify/swift/Repositories&quot;&gt;Repositories&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Restrictions&lt;/h2&gt; 
&lt;p&gt;Please refrain from opening issues about the following features, as they are server-sided and will &lt;strong&gt;NEVER&lt;/strong&gt; work:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Very High audio quality&lt;/li&gt; 
 &lt;li&gt;Native playlist downloading (you can download podcast episodes though)&lt;/li&gt; 
 &lt;li&gt;Jam (hosting a Spotify Jam and joining it remotely requires Premium; only joining in-person works)&lt;/li&gt; 
 &lt;li&gt;AI DJ/Playlist&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It&#39;s possible to implement downloading locally, but it will never be included in EeveeSpotify (unless someone opens a pull request).&lt;/p&gt; 
&lt;h2&gt;Lyrics Support&lt;/h2&gt; 
&lt;p&gt;EeveeSpotify replaces Spotify monthly limited lyrics with one of the following four lyrics providers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Genius: Offers the best quality lyrics, provides the most songs, and updates lyrics the fastest. Does not and will never be time-synced.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;LRCLIB: The most open service, offering time-synced lyrics. However, it lacks lyrics for many songs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Musixmatch: The service Spotify uses. Provides time-synced lyrics for many songs, but you&#39;ll need a user token to use this source. To obtain the token, download Musixmatch from the App Store, sign up, then go to Settings &amp;gt; Get help &amp;gt; Copy debug info, and paste it into EeveeSpotify alert. You can also extract the token using MITM.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;PetitLyrics: Offers plenty of time-synced Japanese and some international lyrics.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the tweak is unable to find a song or process the lyrics, you&#39;ll see a &quot;Couldn&#39;t load the lyrics for this song&quot; message. The lyrics might be wrong for some songs when using Genius due to how the tweak searches songs. While I&#39;ve made it work in most cases, kindly refrain from opening issues about it.&lt;/p&gt; 
&lt;h2&gt;How It Works&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Starting with version 4.0, EeveeSpotify intercepts Spotify requests to load user data, deserializes it, and modifies the parameters in real-time. This method is the best so far and works incredibly stable.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Upon login, Spotify fetches user data and caches it in the &lt;code&gt;offline.bnk&lt;/code&gt; file in the &lt;code&gt;/Library/Application Support/PersistentCache&lt;/code&gt; directory. It uses its proprietary binary format to store data, incorporating a length byte before each value, among other conventions. Certain keys, such as &lt;code&gt;player-license&lt;/code&gt;, &lt;code&gt;financial-product&lt;/code&gt;, &lt;code&gt;streaming-rules&lt;/code&gt;, and others, determine the user abilities.&lt;/p&gt; 
&lt;p&gt;The tweak patches this file while initializing; Spotify loads it and assumes you have Premium. To be honest, it doesn&#39;t really patch due to challenges with dynamic length and varied bytes. The tweak extracts the username from the current &lt;code&gt;offline.bnk&lt;/code&gt; file and inserts it into &lt;code&gt;premiumblank.bnk&lt;/code&gt; (a file containing all premium values preset), replacing &lt;code&gt;offline.bnk&lt;/code&gt;. Spotify may reload user data, and you&#39;ll be switched to the Free plan. When this happens, you&#39;ll see a popup with quick restart app and reset data actions.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/whoeevee/EeveeSpotify/swift/Images/hex.png&quot; alt=&quot;Hex&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Tweak also sets &lt;code&gt;trackRowsEnabled&lt;/code&gt; in &lt;code&gt;SPTFreeTierArtistHubRemoteURLResolver&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, so Spotify loads not just track names on the artist page, and adds a liked tracks row to the artist view models, allowing you to see the liked tracks row just like with Premium.&lt;/p&gt; 
&lt;p&gt;To open Spotify links in sideloaded app, use &lt;a href=&quot;https://github.com/BillyCurtis/OpenSpotifySafariExtension&quot;&gt;OpenSpotifySafariExtension&lt;/a&gt;. Remember to activate it and allow access in Settings &amp;gt; Safari &amp;gt; Extensions.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;EeveeSpotify has always been free and open-source project. However, I started accepting crypto donations if you&#39;d like to support me. I really appreciate it:&lt;/p&gt; 
&lt;p&gt;USDT (TRC-20): &lt;code&gt;TK4AZZLEWrahYUkKDG8r8Pr5BmkoFjs5zU&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;ETH/USDC/USDT: &lt;code&gt;0x4eFf79BdfCa9d3BC01a1d145eF343871bb0a3CdF&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;BTC: &lt;code&gt;bc1qspsnjenfq6wgj9a7pmm2xe3up4622wqxlem0g5&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;TON: &lt;code&gt;UQCgt8EfLdT3QOmnC11vsndUBHryi2suTcTOVCQqBgMdmg4l&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;LTC: &lt;code&gt;ltc1qup3v46fm05sxd278r63957wh4qf2esehevpy76&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>signalapp/Signal-iOS</title>
      <link>https://github.com/signalapp/Signal-iOS</link>
      <description>&lt;p&gt;A private messenger for iOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Signal iOS&lt;/h1&gt; 
&lt;p&gt;Signal is a free, open source, messaging app for simple private communication with friends.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://apps.apple.com/app/id874139669&quot;&gt;&lt;img src=&quot;http://cl.ly/WouG/Download_on_the_App_Store_Badge_US-UK_135x40.svg?sanitize=true&quot; alt=&quot;Available on the App Store&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Also available on &lt;a href=&quot;https://github.com/signalapp/signal-android&quot;&gt;Android&lt;/a&gt; and &lt;a href=&quot;https://github.com/signalapp/signal-desktop&quot;&gt;Desktop&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Questions?&lt;/h2&gt; 
&lt;p&gt;For troubleshooting and questions, please visit our &lt;a href=&quot;https://support.signal.org/&quot;&gt;support center&lt;/a&gt; or &lt;a href=&quot;https://community.signalusers.org/&quot;&gt;unofficial community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing Bug Reports&lt;/h2&gt; 
&lt;p&gt;We use GitHub for bug tracking. Please search &lt;a href=&quot;https://github.com/signalapp/signal-ios/issues&quot;&gt;existing issues&lt;/a&gt; and create a new one if the issue is not yet tracked. For Android users, please use the &lt;a href=&quot;https://github.com/signalapp/signal-android/issues&quot;&gt;Signal for Android issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing Code&lt;/h2&gt; 
&lt;p&gt;Instructions on how to setup your development environment and build Signal-iOS can be found in &lt;a href=&quot;https://github.com/signalapp/Signal-iOS/raw/main/BUILDING.md&quot;&gt;BUILDING.md&lt;/a&gt;. We also recommend reading the &lt;a href=&quot;https://github.com/signalapp/Signal-iOS/raw/main/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing Ideas&lt;/h2&gt; 
&lt;p&gt;Have something you want to say about Signal Foundation projects or want to be part of the conversation? Get involved in the &lt;a href=&quot;https://community.signalusers.org&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Cryptography Notice&lt;/h2&gt; 
&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country&#39;s laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href=&quot;http://www.wassenaar.org/&quot;&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2013-2024 Signal Messenger, LLC&lt;/p&gt; 
&lt;p&gt;Licensed under the GNU AGPLv3: &lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0.html&quot;&gt;https://www.gnu.org/licenses/agpl-3.0.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Apple and the Apple logo are trademarks of Apple Inc., registered in the U.S. and other countries. App Store is a service mark of Apple Inc., registered in the U.S. and other countries.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SwifterSwift/SwifterSwift</title>
      <link>https://github.com/SwifterSwift/SwifterSwift</link>
      <description>&lt;p&gt;A handy collection of more than 500 native Swift extensions to boost your productivity.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;left&quot;&gt; &lt;img src=&quot;https://cdn.rawgit.com/SwifterSwift/SwifterSwift/master/Assets/logo.svg?sanitize=true&quot; title=&quot;swifterSwift&quot;&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/actions&quot;&gt;&lt;img src=&quot;https://github.com/SwifterSwift/SwifterSwift/workflows/SwifterSwift/badge.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/SwifterSwift/swifterSwift&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/platforms-iOS%20%7C%20tvOS%20%7C%20macOS%20%7C%20watchOS%20%7C%20Linux-lightgrey.svg?sanitize=true&quot; alt=&quot;Platforms&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cocoapods.org/pods/SwifterSwift&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/v/SwifterSwift.svg?sanitize=true&quot; alt=&quot;Cocoapods&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Carthage-Compatible-brightgreen.svg?style=flat&quot; alt=&quot;Carthage compatible&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://swift.org/package-manager/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/SPM-Compatible-brightgreen.svg?style=flat&quot; alt=&quot;SPM compatible&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/JamitLabs/Accio&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat&quot; alt=&quot;Accio supported&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/SwifterSwift/SwifterSwift&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/SwifterSwift/SwifterSwift/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://swifterswift.com/docs&quot;&gt;&lt;img src=&quot;http://swifterswift.com/docs/badge.svg?sanitize=true&quot; alt=&quot;docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://swift.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Swift-5.6-orange.svg?sanitize=true&quot; alt=&quot;Swift&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://developer.apple.com/xcode&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Xcode-12.4-blue.svg?sanitize=true&quot; alt=&quot;Xcode&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-red.svg?sanitize=true&quot; alt=&quot;MIT&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://join.slack.com/t/swifterswift/shared_invite/zt-s6dl4g2e-R5V5baIawGpdUz2heShjiQ&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Slack-SwifterSwift-green.svg?sanitize=true&quot; alt=&quot;Slack Channel&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;SwifterSwift is a collection of &lt;strong&gt;over 500 native Swift extensions&lt;/strong&gt;, with handy methods, syntactic sugar, and performance improvements for wide range of primitive data types, UIKit and Cocoa classes –over 500 in 1– for iOS, macOS, tvOS, watchOS, Linux, and Android.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SwifterSwift/SwifterSwift/master/README_CN.md&quot;&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/CHANGELOG.md#v600&quot;&gt;Whats New in v6.0?&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;iOS&lt;/strong&gt; 12.0+ / &lt;strong&gt;tvOS&lt;/strong&gt; 12.0+ / &lt;strong&gt;watchOS&lt;/strong&gt; 4.0+ / &lt;strong&gt;macOS&lt;/strong&gt; 10.13+ / &lt;strong&gt;Ubuntu&lt;/strong&gt; 14.04+&lt;/li&gt; 
 &lt;li&gt;Swift 5.6+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Looking to use SwifterSwift for older versions of Swift&lt;/h2&gt; 
&lt;p&gt;SwifterSwift is Swift v5.0+ compatible starting from v5&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To use with &lt;strong&gt;Swift 3 / Xcode 8.x&lt;/strong&gt; please ensure you are using &lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/releases/tag/3.1.1&quot;&gt;&lt;strong&gt;&lt;code&gt;v3.1.1&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;To use with &lt;strong&gt;Swift 3.2 / Xcode 9.x&lt;/strong&gt; please ensure you are using &lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/releases/tag/3.2.0&quot;&gt;&lt;strong&gt;&lt;code&gt;v3.2.0&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;CocoaPods&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;To integrate SwifterSwift into your Xcode project using &lt;a href=&quot;http://cocoapods.org&quot;&gt;CocoaPods&lt;/a&gt;, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; 
 &lt;h4&gt;- Integrate All extensions (recommended):&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate SwiftStdlib extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/SwiftStdlib&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate Foundation extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/Foundation&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate UIKit extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/UIKit&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate AppKit extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/AppKit&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate MapKit extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/MapKit&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate CoreGraphics extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/CoreGraphics&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate CoreLocation extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/CoreLocation&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate CryptoKit extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/CryptoKit&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate SpriteKit extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/SpriteKit&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate SceneKit extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/SceneKit&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate StoreKit extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/StoreKit&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate Dispatch extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/Dispatch&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate WebKit extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/WebKit&#39;&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;- Integrate HealthKit extensions only:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;ruby language-ruby&quot;&gt;pod &#39;SwifterSwift/HealthKit&#39;&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Carthage&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;To integrate SwifterSwift into your Xcode project using &lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;Carthage&lt;/a&gt;, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;ogdl language-ogdl&quot;&gt;github &quot;SwifterSwift/SwifterSwift&quot; ~&amp;gt; 6.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Swift Package Manager&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;You can use &lt;a href=&quot;https://swift.org/package-manager&quot;&gt;The Swift Package Manager&lt;/a&gt; to install &lt;code&gt;SwifterSwift&lt;/code&gt; by adding the proper description to your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;swift language-swift&quot;&gt;import PackageDescription

let package = Package(
    name: &quot;YOUR_PROJECT_NAME&quot;,
    targets: [],
    dependencies: [
        .package(url: &quot;https://github.com/SwifterSwift/SwifterSwift.git&quot;, from: &quot;6.0.0&quot;)
    ]
)
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Next, add &lt;code&gt;SwifterSwift&lt;/code&gt; to your targets dependencies like so:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;swift language-swift&quot;&gt;.target(
    name: &quot;YOUR_TARGET_NAME&quot;,
    dependencies: [
        &quot;SwifterSwift&quot;,
    ]
),&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Then run &lt;code&gt;swift package update&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;Note that the &lt;a href=&quot;https://swift.org/package-manager&quot;&gt;Swift Package Manager&lt;/a&gt; doesn&#39;t support building for iOS/tvOS/macOS/watchOS apps – see Accio in the next section for that. &lt;/p&gt;
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Accio&lt;/summary&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/JamitLabs/Accio&quot;&gt;Accio&lt;/a&gt; is a dependency manager based on SwiftPM which can build frameworks for iOS/macOS/tvOS/watchOS. Therefore the integration steps are exactly the same as described above. Once your &lt;code&gt;Package.swift&lt;/code&gt; file is configured, you need to run &lt;code&gt;accio update&lt;/code&gt; instead of &lt;code&gt;swift package update&lt;/code&gt; though.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Manually&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Add the &lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift&quot;&gt;SwifterSwift&lt;/a&gt; folder to your Xcode project to use all extensions, or a specific extension.&lt;/p&gt; 
 &lt;p&gt;For your test targets you can also add the &lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Tests/XCTest&quot;&gt;XCTest&lt;/a&gt; folder.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;List of All Extensions&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;SwiftStdlib Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/ArrayExtensions.swift&quot;&gt;&lt;code&gt;Array extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/BidirectionalCollectionExtensions.swift&quot;&gt;&lt;code&gt;BidirectionalCollection extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/BinaryFloatingPointExtensions.swift&quot;&gt;&lt;code&gt;BinaryFloatingPoint extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/BoolExtensions.swift&quot;&gt;&lt;code&gt;Bool extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/CharacterExtensions.swift&quot;&gt;&lt;code&gt;Character extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/CollectionExtensions.swift&quot;&gt;&lt;code&gt;Collection extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/ComparableExtensions.swift&quot;&gt;&lt;code&gt;Comparable extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/DecodableExtensions.swift&quot;&gt;&lt;code&gt;DecodableExtensions extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/DefaultStringInterpolationExtensions.swift&quot;&gt;&lt;code&gt;DefaultStringInterpolationExtensions extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/DictionaryExtensions.swift&quot;&gt;&lt;code&gt;Dictionary extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/DoubleExtensions.swift&quot;&gt;&lt;code&gt;Double extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/FloatExtensions.swift&quot;&gt;&lt;code&gt;Float extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/FloatingPointExtensions.swift&quot;&gt;&lt;code&gt;FloatingPoint extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/IntExtensions.swift&quot;&gt;&lt;code&gt;Int extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/OptionalExtensions.swift&quot;&gt;&lt;code&gt;Optional extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SwiftStdlib/RangeReplaceableCollectionExtensions.swift&quot;&gt;&lt;code&gt;RangeReplaceableCollection extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/SequenceExtensions.swift&quot;&gt;&lt;code&gt;Sequence extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/SignedIntegerExtensions.swift&quot;&gt;&lt;code&gt;SignedInteger extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/SignedNumericExtensions.swift&quot;&gt;&lt;code&gt;SignedNumeric extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/SwiftStdlib/StringExtensions.swift&quot;&gt;&lt;code&gt;String extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SwiftStdlib/StringProtocolExtensions.swift&quot;&gt;&lt;code&gt;StringProtocol extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Foundation Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Foundation/CalendarExtensions.swift&quot;&gt;&lt;code&gt;Calendar extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Foundation/DataExtensions.swift&quot;&gt;&lt;code&gt;Data extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Foundation/DateExtensions.swift&quot;&gt;&lt;code&gt;Date extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/Foundation/FileManagerExtensions.swift&quot;&gt;&lt;code&gt;FileManager extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Foundation/LocaleExtensions.swift&quot;&gt;&lt;code&gt;Locale extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Foundation/MeasurementExtensions.swift&quot;&gt;&lt;code&gt;Measurement extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Foundation/NSAttributedStringExtensions.swift&quot;&gt;&lt;code&gt;NSAttributedString extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Foundation/NSPredicateExtensions.swift&quot;&gt;&lt;code&gt;NSPredicate extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Foundation/URLExtensions.swift&quot;&gt;&lt;code&gt;URL extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Foundation/URLRequestExtensions.swift&quot;&gt;&lt;code&gt;URLRequest extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Foundation/UserDefaultsExtensions.swift&quot;&gt;&lt;code&gt;UserDefaults extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;UIKit Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIActivityExtensions.swift&quot;&gt;&lt;code&gt;UIActivity extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIAlertControllerExtensions.swift&quot;&gt;&lt;code&gt;UIAlertController extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIApplicationExtensions.swift&quot;&gt;&lt;code&gt;UIApplication extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIBarButtonItemExtensions.swift&quot;&gt;&lt;code&gt;UIBarButtonItem extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIButtonExtensions.swift&quot;&gt;&lt;code&gt;UIButton extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UICollectionViewExtensions.swift&quot;&gt;&lt;code&gt;UICollectionView extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Shared/ColorExtensions.swift&quot;&gt;&lt;code&gt;UIColor extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIDatePickerExtensions.swift&quot;&gt;&lt;code&gt;UIDatePicker extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Shared/EdgeInsetsExtensions.swift&quot;&gt;&lt;code&gt;UIEdgeInsets extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIFontExtensions.swift&quot;&gt;&lt;code&gt;UIFont extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIGestureRecognizer.swift&quot;&gt;&lt;code&gt;UIGestureRecognizer extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIImageExtensions.swift&quot;&gt;&lt;code&gt;UIImage extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIImageViewExtensions.swift&quot;&gt;&lt;code&gt;UIImageView extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UILabelExtensions.swift&quot;&gt;&lt;code&gt;UILabel extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UILayoutPriorityExtensions.swift&quot;&gt;&lt;code&gt;UILayoutPriority extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UINavigationBarExtensions.swift&quot;&gt;&lt;code&gt;UINavigationBar extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UINavigationControllerExtensions.swift&quot;&gt;&lt;code&gt;UINavigationController extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UINavigationItemExtensions.swift&quot;&gt;&lt;code&gt;UINavigationItem extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIRefreshControlExtensions.swift&quot;&gt;&lt;code&gt;UIRefreshControl extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIScrollViewExtensions.swift&quot;&gt;&lt;code&gt;UIScrollView extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UISearchBarExtensions.swift&quot;&gt;&lt;code&gt;UISearchBar extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UISegmentedControlExtensions.swift&quot;&gt;&lt;code&gt;UISegmentedControl extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UISliderExtensions.swift&quot;&gt;&lt;code&gt;UISlider extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/UIKit/UIStackViewExtensions.swift&quot;&gt;&lt;code&gt;UIStackView extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIStoryboardExtensions.swift&quot;&gt;&lt;code&gt;UIStoryboard extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UISwitchExtensions.swift&quot;&gt;&lt;code&gt;UISwitch extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UITabBarExtensions.swift&quot;&gt;&lt;code&gt;UITabBar extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UITableViewExtensions.swift&quot;&gt;&lt;code&gt;UITableView extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UITextFieldExtensions.swift&quot;&gt;&lt;code&gt;UITextField extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UITextViewExtensions.swift&quot;&gt;&lt;code&gt;UITextView extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIViewControllerExtensions.swift&quot;&gt;&lt;code&gt;UIViewController extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIViewExtensions.swift&quot;&gt;&lt;code&gt;UIView extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/UIKit/UIWindowExtensions.swift&quot;&gt;&lt;code&gt;UIWindow extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;AppKit Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/Shared/NSColorExtensions.swift&quot;&gt;&lt;code&gt;NSColor extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/AppKit/NSImageExtensions.swift&quot;&gt;&lt;code&gt;NSImage extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/AppKit/NSStackViewExtensions.swift&quot;&gt;&lt;code&gt;NSStackView extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/AppKit/NSViewExtensions.swift&quot;&gt;&lt;code&gt;NSView extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;CoreGraphics Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/CoreGraphics/CGColorExtensions.swift&quot;&gt;&lt;code&gt;CGColor extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/CoreGraphics/CGFloatExtensions.swift&quot;&gt;&lt;code&gt;CGFloat extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/CoreGraphics/CGPointExtensions.swift&quot;&gt;&lt;code&gt;CGPoint extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/CoreGraphics/CGSizeExtensions.swift&quot;&gt;&lt;code&gt;CGSize extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/CoreGraphics/CGRectExtensions.swift&quot;&gt;&lt;code&gt;CGRect extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/CoreGraphics/CGVectorExtensions.swift&quot;&gt;&lt;code&gt;CGVector extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;CoreLocation Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/CoreLocation/CLLocationExtensions.swift&quot;&gt;&lt;code&gt;CLLocation extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/CoreLocation/CLVisitExtensions.swift&quot;&gt;&lt;code&gt;CLVisit extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;CoreAnimation Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/CoreAnimation/CAGradientLayerExtensions.swift&quot;&gt;&lt;code&gt;CAGradientLayer extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;CryptoKit Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/Sources/SwifterSwift/CryptoKit/DigestExtensions.swift&quot;&gt;&lt;code&gt;Digest extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;MapKit Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/MapKit/MKMapViewExtensions.swift&quot;&gt;&lt;code&gt;MKMapView extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/MapKit/MKPolylineExtensions.swift&quot;&gt;&lt;code&gt;MKPolyline extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;SpriteKit Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SpriteKit/SKNodeExtensions.swift&quot;&gt;&lt;code&gt;SKNode extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;SceneKit Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SceneKit/SCNBoxExtensions.swift&quot;&gt;&lt;code&gt;SCNBox extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SceneKit/SCNCone.swift&quot;&gt;&lt;code&gt;SCNCone extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SceneKit/SCNCapsule.swift&quot;&gt;&lt;code&gt;SCNCapsule extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SceneKit/SCNCylinderExtensions.swift&quot;&gt;&lt;code&gt;SCNCylinder extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SceneKit/SCNGeometryExtensions.swift&quot;&gt;&lt;code&gt;SCNGeometry extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SceneKit/SCNMaterialExtensions.swift&quot;&gt;&lt;code&gt;SCNMaterial extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SceneKit/SCNPlaneExtensions.swift&quot;&gt;&lt;code&gt;SCNPlane extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SceneKit/SCNShape.swift&quot;&gt;&lt;code&gt;SCNShape extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SceneKit/SCNSphereExtensions.swift&quot;&gt;&lt;code&gt;SCNSphere extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/SceneKit/SCNVector3Extensions.swift&quot;&gt;&lt;code&gt;SCNVector3 extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;StoreKit Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/StoreKit/SKProductExtensions.swift&quot;&gt;&lt;code&gt;SKProduct extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Dispatch Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/Dispatch/DispatchQueueExtensions.swift&quot;&gt;&lt;code&gt;DispatchQueue extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;WebKit Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/WebKit/WKWebViewExtensions.swift&quot;&gt;&lt;code&gt;WKWebView extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;HealthKit Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Sources/SwifterSwift/HealthKit/HKActivitySummaryExtensions.swift&quot;&gt;&lt;code&gt;HKActivitySummary extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;XCTest Extensions&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/Tests/XCTest/XCTestExtensions.swift&quot;&gt;&lt;code&gt;XCTest extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;How cool is this?&lt;/h2&gt; 
&lt;p&gt;SwifterSwift is a library of &lt;strong&gt;over 500 properties and methods&lt;/strong&gt;, designed to extend Swift&#39;s functionality and productivity, staying faithful to the original Swift API design guidelines.&lt;/p&gt; 
&lt;p&gt;Check Examples.playground from the project for some cool examples!&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation for all extensions, with examples, is available at &lt;a href=&quot;http://swifterswift.com/docs&quot;&gt;swifterswift.com/docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Get involved&lt;/h2&gt; 
&lt;p&gt;We want your feedback. Please refer to &lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/tree/master/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; before participating.&lt;/p&gt; 
&lt;h2&gt;Slack Channel: &lt;a href=&quot;https://swifterswift.slack.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Slack-SwifterSwift-green.svg?sanitize=true&quot; alt=&quot;Slack&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;It is always nice to talk with other people using SwifterSwift and exchange experiences, so come &lt;a href=&quot;https://swifterswift.slack.com&quot;&gt;join our Slack channel&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;Special thanks to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SD10&quot;&gt;Steven Deutsch&lt;/a&gt;, &lt;a href=&quot;https://github.com/LucianoPAlmeida&quot;&gt;Luciano Almeida&lt;/a&gt; and &lt;a href=&quot;https://github.com/guykogus&quot;&gt;Guy Kogus&lt;/a&gt; for their latest contributions to extensions, docs and tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pawurb&quot;&gt;Paweł Urbanek&lt;/a&gt; for adding tvOS, watchOS, and macOS initial support and helping with extensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pvtmert&quot;&gt;Mert Akengin&lt;/a&gt; and &lt;a href=&quot;https://www.behance.net/lionbytes&quot;&gt;Bashar Ghadanfar&lt;/a&gt; for designing &lt;a href=&quot;http://swifterswift.com&quot;&gt;project website&lt;/a&gt; and logo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ardabbour&quot;&gt;Abdul Rahman Dabbour&lt;/a&gt; for helping document the project.&lt;/li&gt; 
 &lt;li&gt;Many thanks to all other &lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/graphs/contributors&quot;&gt;contributors&lt;/a&gt; of this project.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;SwifterSwift is released under the MIT license. See &lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Caldis/Mos</title>
      <link>https://github.com/Caldis/Mos</link>
      <description>&lt;p&gt;一个用于在 macOS 上平滑你的鼠标滚动效果或单独设置滚动方向的小工具, 让你的滚轮爽如触控板 | A lightweight tool used to smooth scrolling and set scroll direction independently for your mouse on macOS&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;http://mos.caldis.me/&quot;&gt; &lt;img width=&quot;320&quot; src=&quot;https://github.com/Caldis/Mos/raw/master/dmg/dmg-icon.png?raw=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;Mos&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/Xcode-9.0%2B-blue.svg?sanitize=true&quot; alt=&quot;Xcode 9.0+&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Swift-4.0%2B-orange.svg?sanitize=true&quot; alt=&quot;Swift 4.0+&quot;&gt;&lt;/p&gt; 
&lt;p&gt;一个用于在MacOS上平滑你的鼠标滚动效果的小工具, 让你的滚轮爽如触控板。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Caldis/Mos/raw/master/README.md&quot;&gt;中文&lt;/a&gt; | &lt;a href=&quot;https://github.com/Caldis/Mos/raw/master/README.enUS.md&quot;&gt;English&lt;/a&gt; | &lt;a href=&quot;https://github.com/Caldis/Mos/raw/master/README.ru.md&quot;&gt;Русский&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;主页&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://mos.caldis.me/&quot;&gt;http://mos.caldis.me/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;疯狂平滑你的鼠标滚动效果&lt;/li&gt; 
 &lt;li&gt;支持分离触控板/鼠标事件, 单独翻转鼠标滚动方向。&lt;/li&gt; 
 &lt;li&gt;滚动曲线的自定义调整。&lt;/li&gt; 
 &lt;li&gt;支持区分应用处理, 黑/白名单系统。&lt;/li&gt; 
 &lt;li&gt;用于监控滚动事件的图形化呈现窗口。&lt;/li&gt; 
 &lt;li&gt;基于 Swift4 构建。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;下载及安装&lt;/h2&gt; 
&lt;h3&gt;Homebrew安装&lt;/h3&gt; 
&lt;p&gt;Mos可通过&lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt;来安装:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ brew install --cask mos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;应用将被安装至 &lt;code&gt;/Applications/Mos.app&lt;/code&gt;。&lt;/p&gt; 
&lt;p&gt;若有新版本,可用以下命令升级:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ brew update
$ brew reinstall mos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;重新启动应用即可。&lt;/p&gt; 
&lt;h3&gt;手动安装&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Caldis/Mos/releases/&quot;&gt;GithubRelease&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;帮助&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Caldis/Mos/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;鸣谢&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielgindi/Charts&quot;&gt;Charts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.iconfont.cn&quot;&gt;iconfont.cn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Clipy/LoginServiceKit&quot;&gt;LoginServiceKit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/galambalazs/smoothscroll-for-websites&quot;&gt;Smoothscroll-for-websites&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;贡献&lt;/h2&gt; 
&lt;p&gt;如果您觉得 Mos 的本地化做的有任何不妥之处, 欢迎您提交任何关于文本修改的意见, 您可以通过提交 Github Issue 的方式告诉我们, 如果您善于编码, 我们非常欢迎您提交一个 PR !&lt;/p&gt; 
&lt;p&gt;我们欢迎任何形式的贡献，有任何建议或意见您可以给我们 &lt;a href=&quot;https://github.com/Caldis/Mos/issues&quot;&gt;提问&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2017 Caldis rights reserved.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/cn/&quot;&gt;署名-非商业性使用协议&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;And you can not upload it to the App Store.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yonaskolb/XcodeGen</title>
      <link>https://github.com/yonaskolb/XcodeGen</link>
      <description>&lt;p&gt;A Swift command line tool for generating your Xcode project&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/yonaskolb/XcodeGen&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yonaskolb/XcodeGen/master/Assets/Logo_animated.gif&quot; alt=&quot;XcodeGen&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/yonaskolb/XcodeGen/releases&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/release/yonaskolb/xcodegen.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/yonaskolb/XcodeGen&quot;&gt; &lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fyonaskolb%2FXcodeGen%2Fbadge%3Ftype%3Dplatforms&quot; alt=&quot;Swift Package Manager Platforms&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/yonaskolb/XcodeGen&quot;&gt; &lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fyonaskolb%2FXcodeGen%2Fbadge%3Ftype%3Dswift-versions&quot; alt=&quot;Swift Versions&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/yonaskolb/XcodeGen/raw/master/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/yonaskolb/XcodeGen.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;XcodeGen&lt;/h1&gt; 
&lt;p&gt;XcodeGen is a command line tool written in Swift that generates your Xcode project using your folder structure and a project spec.&lt;/p&gt; 
&lt;p&gt;The project spec is a YAML or JSON file that defines your targets, configurations, schemes, custom build settings and many other options. All your source directories are automatically parsed and referenced appropriately while preserving your folder structure. Sensible defaults are used in many places, so you only need to customize what is needed. Very complex projects can also be defined using more advanced features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ Generate projects on demand and remove your &lt;code&gt;.xcodeproj&lt;/code&gt; from git, which means &lt;strong&gt;no more merge conflicts&lt;/strong&gt;!&lt;/li&gt; 
 &lt;li&gt;✅ Groups and files in Xcode are always &lt;strong&gt;synced&lt;/strong&gt; to your directories on disk&lt;/li&gt; 
 &lt;li&gt;✅ Easy &lt;strong&gt;configuration&lt;/strong&gt; of projects which is human readable and git friendly&lt;/li&gt; 
 &lt;li&gt;✅ Easily copy and paste &lt;strong&gt;files and directories&lt;/strong&gt; without having to edit anything in Xcode&lt;/li&gt; 
 &lt;li&gt;✅ Share build settings across multiple targets with &lt;strong&gt;build setting groups&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;✅ Automatically generate Schemes for &lt;strong&gt;different environments&lt;/strong&gt; like test and production&lt;/li&gt; 
 &lt;li&gt;✅ Easily &lt;strong&gt;create new projects&lt;/strong&gt; with complicated setups on demand without messing around with Xcode&lt;/li&gt; 
 &lt;li&gt;✅ Generate from anywhere including on &lt;strong&gt;CI&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;✅ Distribute your spec amongst multiple files for easy &lt;strong&gt;sharing&lt;/strong&gt; and overriding&lt;/li&gt; 
 &lt;li&gt;✅ Easily create &lt;strong&gt;multi-platform&lt;/strong&gt; frameworks&lt;/li&gt; 
 &lt;li&gt;✅ Integrate &lt;strong&gt;Carthage&lt;/strong&gt; frameworks without any work&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Given an example project spec:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;name: MyProject
include:
  - base_spec.yml
options:
  bundleIdPrefix: com.myapp
packages:
  Yams:
    url: https://github.com/jpsim/Yams
    from: 2.0.0
targets:
  MyApp:
    type: application
    platform: iOS
    deploymentTarget: &quot;10.0&quot;
    sources: [MyApp]
    settings:
      configs:
        debug:
          CUSTOM_BUILD_SETTING: my_debug_value
        release:
          CUSTOM_BUILD_SETTING: my_release_value
    dependencies:
      - target: MyFramework
      - carthage: Alamofire
      - framework: Vendor/MyFramework.framework
      - sdk: Contacts.framework
      - sdk: libc++.tbd
      - package: Yams
  MyFramework:
    type: framework
    platform: iOS
    sources: [MyFramework]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A project would be created with 2 connected targets, with all the required configurations and build settings. See the &lt;a href=&quot;https://raw.githubusercontent.com/yonaskolb/XcodeGen/master/Docs/ProjectSpec.md&quot;&gt;Project Spec&lt;/a&gt; documentation for all the options you can specify, and &lt;a href=&quot;https://raw.githubusercontent.com/yonaskolb/XcodeGen/master/Docs/Usage.md&quot;&gt;Usage&lt;/a&gt; for more general documentation.&lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;Make sure the latest stable (non-beta) version of Xcode is installed first.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/yonaskolb/mint&quot;&gt;Mint&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;mint install yonaskolb/xcodegen
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Make&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone https://github.com/yonaskolb/XcodeGen.git
cd XcodeGen
make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Homebrew&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;brew install xcodegen
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Swift Package Manager&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Use as CLI&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone https://github.com/yonaskolb/XcodeGen.git
cd XcodeGen
swift run xcodegen
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Use as dependency&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Add the following to your Package.swift file&#39;s dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.package(url: &quot;https://github.com/yonaskolb/XcodeGen.git&quot;, from: &quot;2.42.0&quot;),
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then import wherever needed: &lt;code&gt;import XcodeGenKit&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;xcodegen generate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will look for a project spec in the current directory called &lt;code&gt;project.yml&lt;/code&gt; and generate an Xcode project with the name defined in the spec.&lt;/p&gt; 
&lt;p&gt;Options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;--spec&lt;/strong&gt;: An optional path to a &lt;code&gt;.yml&lt;/code&gt; or &lt;code&gt;.json&lt;/code&gt; project spec. Defaults to &lt;code&gt;project.yml&lt;/code&gt;. (It is also possible to link to multiple spec files by comma separating them. Note that all other flags will be the same.)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;--project&lt;/strong&gt;: An optional path to a directory where the project will be generated. By default this is the directory the spec lives in.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;--quiet&lt;/strong&gt;: Suppress informational and success messages.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;--use-cache&lt;/strong&gt;: Used to prevent unnecessarily generating the project. If this is set, then a cache file will be written to when a project is generated. If &lt;code&gt;xcodegen&lt;/code&gt; is later run but the spec and all the files it contains are the same, the project won&#39;t be generated.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;--cache-path&lt;/strong&gt;: A custom path to use for your cache file. This defaults to &lt;code&gt;~/.xcodegen/cache/{PROJECT_SPEC_PATH_HASH}&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are other commands as well such as &lt;code&gt;xcodegen dump&lt;/code&gt; which lets one output the resolved spec in many different formats, or write it to a file. Use &lt;code&gt;xcodegen help&lt;/code&gt; to see more detailed usage information.&lt;/p&gt; 
&lt;h2&gt;Editing&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone https://github.com/yonaskolb/XcodeGen.git
cd XcodeGen
swift package generate-xcodeproj
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This uses Swift Package Manager to create an &lt;code&gt;xcodeproj&lt;/code&gt; file that you can open, edit and run in Xcode, which makes editing any code easier.&lt;/p&gt; 
&lt;p&gt;If you want to pass any required arguments when running in Xcode, you can edit the scheme to include launch arguments.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/yonaskolb/XcodeGen/master/Docs/ProjectSpec.md&quot;&gt;Project Spec&lt;/a&gt; documentation for all the various properties and options that can be set&lt;/li&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/yonaskolb/XcodeGen/master/Docs/Usage.md&quot;&gt;Usage&lt;/a&gt; for more specific usage and use case documentation&lt;/li&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/yonaskolb/XcodeGen/master/Docs/FAQ.md&quot;&gt;FAQ&lt;/a&gt; for a list of some frequently asked questions&lt;/li&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/yonaskolb/XcodeGen/master/Docs/Examples.md&quot;&gt;Examples&lt;/a&gt; for some real world XcodeGen project specs out in the wild&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Alternatives&lt;/h2&gt; 
&lt;p&gt;If XcodeGen doesn&#39;t meet your needs try these great alternatives:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tuist/tuist&quot;&gt;Tuist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/igor-makarov/xcake&quot;&gt;Xcake&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/workshop/struct&quot;&gt;struct&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Attributions&lt;/h2&gt; 
&lt;p&gt;This tool is powered by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tuist/XcodeProj&quot;&gt;XcodeProj&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yonaskolb/JSONUtilities&quot;&gt;JSONUtilities&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kylef/Spectre&quot;&gt;Spectre&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kylef/PathKit&quot;&gt;PathKit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jpsim/Yams&quot;&gt;Yams&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jakeheis/SwiftCLI&quot;&gt;SwiftCLI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Inspiration for this tool came from:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/workshop/struct&quot;&gt;struct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/igor-makarov/xcake&quot;&gt;Xcake&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CocoaPods/Xcodeproj&quot;&gt;CocoaPods Xcodeproj&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;p&gt;Pull requests and issues are always welcome. Please open any issues and PRs for bugs, features, or documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/0&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/0&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/1&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/1&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/2&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/2&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/3&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/3&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/4&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/4&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/5&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/5&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/6&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/6&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/7&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/7&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;XcodeGen is licensed under the MIT license. See &lt;a href=&quot;https://raw.githubusercontent.com/yonaskolb/XcodeGen/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for more info.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gonzalezreal/swift-markdown-ui</title>
      <link>https://github.com/gonzalezreal/swift-markdown-ui</link>
      <description>&lt;p&gt;Display and customize Markdown text in SwiftUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MarkdownUI&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/gonzalezreal/MarkdownUI/actions?query=workflow%3ACI&quot;&gt;&lt;img src=&quot;https://github.com/gonzalezreal/MarkdownUI/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fgonzalezreal%2Fswift-markdown-ui%2Fbadge%3Ftype%3Dswift-versions&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fgonzalezreal%2Fswift-markdown-ui%2Fbadge%3Ftype%3Dplatforms&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Display and customize Markdown text in SwiftUI.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#overview&quot;&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#minimum-requirements&quot;&gt;Minimum requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#getting-started&quot;&gt;Getting started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#creating-a-markdown-view&quot;&gt;Creating a Markdown view&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#styling-markdown&quot;&gt;Styling Markdown&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#documentation&quot;&gt;Documentation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#related-content&quot;&gt;Related content&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#demo&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;MarkdownUI is a powerful library for displaying and customizing Markdown text in SwiftUI. It is compatible with the &lt;a href=&quot;https://github.github.com/gfm/&quot;&gt;GitHub Flavored Markdown Spec&lt;/a&gt; and can display images, headings, lists (including task lists), blockquotes, code blocks, tables, and thematic breaks, besides styled text and links.&lt;/p&gt; 
&lt;p&gt;MarkdownUI offers comprehensible theming features to customize how it displays Markdown text. You can use the built-in themes, create your own or override specific text and block styles.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownUI@2x.png#gh-light-mode-only&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownUI~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Minimum requirements&lt;/h2&gt; 
&lt;p&gt;You can use MarkdownUI on the following platforms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;macOS 12.0+&lt;/li&gt; 
 &lt;li&gt;iOS 15.0+&lt;/li&gt; 
 &lt;li&gt;tvOS 15.0+&lt;/li&gt; 
 &lt;li&gt;watchOS 8.0+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some features, like displaying tables or multi-image paragraphs, require macOS 13.0+, iOS 16.0+, tvOS 16.0+, and watchOS 9.0+.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Creating a Markdown view&lt;/h3&gt; 
&lt;p&gt;A &lt;code&gt;Markdown&lt;/code&gt; view displays rich structured text using the Markdown syntax. It can display images, headings, lists (including task lists), blockquotes, code blocks, tables, and thematic breaks, besides styled text and links.&lt;/p&gt; 
&lt;p&gt;The simplest way of creating a &lt;code&gt;Markdown&lt;/code&gt; view is to pass a Markdown string to the &lt;code&gt;init(_:baseURL:imageBaseURL:)&lt;/code&gt; initializer.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;let markdownString = &quot;&quot;&quot;
  ## Try MarkdownUI

  **MarkdownUI** is a native Markdown renderer for SwiftUI
  compatible with the
  [GitHub Flavored Markdown Spec](https://github.github.com/gfm/).
  &quot;&quot;&quot;

var body: some View {
  Markdown(markdownString)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownString@2x.png#gh-light-mode-only&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownString~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;A more convenient way to create a &lt;code&gt;Markdown&lt;/code&gt; view is by using the &lt;code&gt;init(baseURL:imageBaseURL:content:)&lt;/code&gt; initializer, which takes a Markdown content builder in which you can compose the view content, either by providing Markdown strings or by using an expressive domain-specific language.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;var body: some View {
  Markdown {
    &quot;&quot;&quot;
    ## Using a Markdown Content Builder
    Use Markdown strings or an expressive domain-specific language
    to build the content.
    &quot;&quot;&quot;
    Heading(.level2) {
      &quot;Try MarkdownUI&quot;
    }
    Paragraph {
      Strong(&quot;MarkdownUI&quot;)
      &quot; is a native Markdown renderer for SwiftUI&quot;
      &quot; compatible with the &quot;
      InlineLink(
        &quot;GitHub Flavored Markdown Spec&quot;,
        destination: URL(string: &quot;https://github.github.com/gfm/&quot;)!
      )
      &quot;.&quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownContentBuilder@2x.png#gh-light-mode-only&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownContentBuilder~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;You can also create a &lt;code&gt;MarkdownContent&lt;/code&gt; value in your model layer and later create a &lt;code&gt;Markdown&lt;/code&gt; view by passing the content value to the &lt;code&gt;init(_:baseURL:imageBaseURL:)&lt;/code&gt; initializer. The &lt;code&gt;MarkdownContent&lt;/code&gt; value pre-parses the Markdown string preventing the view from doing this step.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// Somewhere in the model layer
let content = MarkdownContent(&quot;You can try **CommonMark** [here](https://spec.commonmark.org/dingus/).&quot;)

// Later in the view layer
var body: some View {
  Markdown(self.model.content)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Styling Markdown&lt;/h3&gt; 
&lt;p&gt;Markdown views use a basic default theme to display the contents. For more information, read about the &lt;code&gt;basic&lt;/code&gt; theme.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;Markdown {
  &quot;&quot;&quot;
  You can quote text with a `&amp;gt;`.

  &amp;gt; Outside of a dog, a book is man&#39;s best friend. Inside of a
  &amp;gt; dog it&#39;s too dark to read.

  – Groucho Marx
  &quot;&quot;&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/BlockquoteContent@2x.png#gh-light-mode-only&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/BlockquoteContent~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;You can customize the appearance of Markdown content by applying different themes using the &lt;code&gt;markdownTheme(_:)&lt;/code&gt; modifier. For example, you can apply one of the built-in themes, like &lt;code&gt;gitHub&lt;/code&gt;, to either a Markdown view or a view hierarchy that contains Markdown views.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;Markdown {
  &quot;&quot;&quot;
  You can quote text with a `&amp;gt;`.

  &amp;gt; Outside of a dog, a book is man&#39;s best friend. Inside of a
  &amp;gt; dog it&#39;s too dark to read.

  – Groucho Marx
  &quot;&quot;&quot;
}
.markdownTheme(.gitHub)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/GitHubBlockquote@2x.png#gh-light-mode-only&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/GitHubBlockquote~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To override a specific text style from the current theme, use the &lt;code&gt;markdownTextStyle(_:textStyle:)&lt;/code&gt; modifier. The following example shows how to override the &lt;code&gt;code&lt;/code&gt; text style.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;Markdown {
  &quot;&quot;&quot;
  Use `git status` to list all new or modified files
  that haven&#39;t yet been committed.
  &quot;&quot;&quot;
}
.markdownTextStyle(\.code) {
  FontFamilyVariant(.monospaced)
  FontSize(.em(0.85))
  ForegroundColor(.purple)
  BackgroundColor(.purple.opacity(0.25))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/CustomInlineCode@2x.png#gh-light-mode-only&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/CustomInlineCode~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;You can also use the &lt;code&gt;markdownBlockStyle(_:body:)&lt;/code&gt; modifier to override a specific block style. For example, you can override only the &lt;code&gt;blockquote&lt;/code&gt; block style, leaving other block styles untouched.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;Markdown {
  &quot;&quot;&quot;
  You can quote text with a `&amp;gt;`.

  &amp;gt; Outside of a dog, a book is man&#39;s best friend. Inside of a
  &amp;gt; dog it&#39;s too dark to read.

  – Groucho Marx
  &quot;&quot;&quot;
}
.markdownBlockStyle(\.blockquote) { configuration in
  configuration.label
    .padding()
    .markdownTextStyle {
      FontCapsVariant(.lowercaseSmallCaps)
      FontWeight(.semibold)
      BackgroundColor(nil)
    }
    .overlay(alignment: .leading) {
      Rectangle()
        .fill(Color.teal)
        .frame(width: 4)
    }
    .background(Color.teal.opacity(0.5))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/CustomBlockquote@2x.png#gh-light-mode-only&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/CustomBlockquote~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Another way to customize the appearance of Markdown content is to create your own theme. To create a theme, start by instantiating an empty &lt;code&gt;Theme&lt;/code&gt; and chain together the different text and block styles in a single expression.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;extension Theme {
  static let fancy = Theme()
    .code {
      FontFamilyVariant(.monospaced)
      FontSize(.em(0.85))
    }
    .link {
      ForegroundColor(.purple)
    }
    // More text styles...
    .paragraph { configuration in
      configuration.label
        .relativeLineSpacing(.em(0.25))
        .markdownMargin(top: 0, bottom: 16)
    }
    .listItem { configuration in
      configuration.label
        .markdownMargin(top: .em(0.25))
    }
    // More block styles...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://swiftpackageindex.com&quot;&gt;Swift Package Index&lt;/a&gt; kindly hosts the online documentation for all versions, available here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui/main/documentation/markdownui&quot;&gt;main&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui/2.1.0/documentation/markdownui&quot;&gt;2.1.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui/2.0.2/documentation/markdownui&quot;&gt;2.0.2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Related content&lt;/h3&gt; 
&lt;p&gt;You can learn more about MarkdownUI by referring to the following articles and third-party resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gonzalezreal.github.io/2023/02/18/better-markdown-rendering-in-swiftui.html&quot;&gt;Better Markdown Rendering in SwiftUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/gVy06iJQFWQ&quot;&gt;Unlock the Power of Markdown in SwiftUI with THIS Hack!&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/Rebeloper&quot;&gt;@Rebeloper&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;MarkdownUI comes with a few more tricks on the sleeve. You can explore the &lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Examples/Demo/&quot;&gt;companion demo project&lt;/a&gt; and discover its complete set of capabilities.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Examples/Demo/Screenshot.png#gh-light-mode-only&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Examples/Demo/Screenshot~dark.png#gh-dark-mode-only&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Adding MarkdownUI to a Swift package&lt;/h3&gt; 
&lt;p&gt;To use MarkdownUI in a Swift Package Manager project, add the following line to the dependencies in your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.package(url: &quot;https://github.com/gonzalezreal/swift-markdown-ui&quot;, from: &quot;2.0.2&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Include &lt;code&gt;&quot;MarkdownUI&quot;&lt;/code&gt; as a dependency for your executable target:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.target(name: &quot;&amp;lt;target&amp;gt;&quot;, dependencies: [
  .product(name: &quot;MarkdownUI&quot;, package: &quot;swift-markdown-ui&quot;)
]),
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, add &lt;code&gt;import MarkdownUI&lt;/code&gt; to your source code.&lt;/p&gt; 
&lt;h3&gt;Adding MarkdownUI to an Xcode project&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;From the &lt;strong&gt;File&lt;/strong&gt; menu, select &lt;strong&gt;Add Packages…&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Enter &lt;code&gt;https://github.com/gonzalezreal/swift-markdown-ui&lt;/code&gt; into the &lt;em&gt;Search or Enter Package URL&lt;/em&gt; search field&lt;/li&gt; 
 &lt;li&gt;Link &lt;strong&gt;MarkdownUI&lt;/strong&gt; to your application target&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>github/CopilotForXcode</title>
      <link>https://github.com/github/CopilotForXcode</link>
      <description>&lt;p&gt;Xcode extension for GitHub Copilot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img align=&quot;center&quot; height=&quot;70&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/AppIcon.png&quot;&gt; GitHub Copilot for Xcode&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/features/copilot&quot;&gt;GitHub Copilot&lt;/a&gt; is an AI pair programmer tool that helps you write code faster and smarter. Copilot for Xcode is an Xcode extension that provides inline coding suggestions as you type and a chat assistant to answer your coding questions.&lt;/p&gt; 
&lt;h2&gt;Chat&lt;/h2&gt; 
&lt;p&gt;GitHub Copilot Chat provides suggestions to your specific coding tasks via chat. &lt;img alt=&quot;Chat of GitHub Copilot for Xcode&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/chat_dark.gif&quot; width=&quot;800&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Code Completion&lt;/h2&gt; 
&lt;p&gt;You can receive auto-complete type suggestions from GitHub Copilot either by starting to write the code you want to use, or by writing a natural language comment describing what you want the code to do. &lt;img alt=&quot;Code Completion of GitHub Copilot for Xcode&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/demo.gif&quot; width=&quot;800&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;macOS 12+&lt;/li&gt; 
 &lt;li&gt;Xcode 8+&lt;/li&gt; 
 &lt;li&gt;A GitHub Copilot subscription. To learn more, visit &lt;a href=&quot;https://github.com/features/copilot&quot;&gt;https://github.com/features/copilot&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install via &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;brew install --cask github-copilot-for-xcode
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or download the &lt;code&gt;dmg&lt;/code&gt; from &lt;a href=&quot;https://github.com/github/CopilotForXcode/releases/latest/download/GitHubCopilotForXcode.dmg&quot;&gt;the latest release&lt;/a&gt;. Drag &lt;code&gt;GitHub Copilot for Xcode&lt;/code&gt; into the &lt;code&gt;Applications&lt;/code&gt; folder:&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of opened dmg&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/dmg-open.png&quot; width=&quot;512&quot;&gt; &lt;/p&gt; &lt;p&gt;Updates can be downloaded and installed by the app.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open the &lt;code&gt;GitHub Copilot for Xcode&lt;/code&gt; application (from the &lt;code&gt;Applications&lt;/code&gt; folder). Accept the security warning.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of MacOS download permission request&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/macos-download-open-confirm.png&quot; width=&quot;350&quot;&gt; &lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;A background item will be added to enable Copilot to start when &lt;code&gt;GitHub Copilot for Xcode&lt;/code&gt; is opened.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of background item&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/background-item.png&quot; width=&quot;370&quot;&gt; &lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Two permissions are required: &lt;code&gt;Accessibility&lt;/code&gt; and &lt;code&gt;Xcode Source Editor Extension&lt;/code&gt;. For more on why these permissions are required see &lt;a href=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/TROUBLESHOOTING.md&quot;&gt;TROUBLESHOOTING.md&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The first time the application is run the &lt;code&gt;Accessibility&lt;/code&gt; permission should be requested:&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of accessibility permission request&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/accessibility-permission-request.png&quot; width=&quot;529&quot;&gt; &lt;/p&gt; &lt;p&gt;The &lt;code&gt;Xcode Source Editor Extension&lt;/code&gt; permission needs to be enabled manually. Click &lt;code&gt;Extension Permission&lt;/code&gt; from the &lt;code&gt;GitHub Copilot for Xcode&lt;/code&gt; application settings to open the System Preferences to the &lt;code&gt;Extensions&lt;/code&gt; panel. Select &lt;code&gt;Xcode Source Editor&lt;/code&gt; and enable &lt;code&gt;GitHub Copilot&lt;/code&gt;:&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of extension permission&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/extension-permission.png&quot; width=&quot;582&quot;&gt; &lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After granting the extension permission, open Xcode. Verify that the &lt;code&gt;Github Copilot&lt;/code&gt; menu is available and enabled under the Xcode &lt;code&gt;Editor&lt;/code&gt; menu. &lt;br&gt;&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of Xcode Editor GitHub Copilot menu item&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/xcode-menu.png&quot; width=&quot;648&quot;&gt; &lt;/p&gt; &lt;p&gt;Keyboard shortcuts can be set for all menu items in the &lt;code&gt;Key Bindings&lt;/code&gt; section of Xcode preferences.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To sign into GitHub Copilot, click the &lt;code&gt;Sign in&lt;/code&gt; button in the settings application. This will open a browser window and copy a code to the clipboard. Paste the code into the GitHub login page and authorize the application.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of sign-in popup&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/device-code.png&quot; width=&quot;372&quot;&gt; &lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To install updates, click &lt;code&gt;Check for Updates&lt;/code&gt; from the menu item or in the settings application.&lt;/p&gt; &lt;p&gt;After installing a new version, Xcode must be restarted to use the new version correctly.&lt;/p&gt; &lt;p&gt;New versions can also be installed from &lt;code&gt;dmg&lt;/code&gt; files downloaded from the releases page. When installing a new version via &lt;code&gt;dmg&lt;/code&gt;, the application must be run manually the first time to accept the downloaded from the internet warning.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To avoid confusion, we recommend disabling &lt;code&gt;Predictive code completion&lt;/code&gt; under &lt;code&gt;Xcode&lt;/code&gt; &amp;gt; &lt;code&gt;Preferences&lt;/code&gt; &amp;gt; &lt;code&gt;Text Editing&lt;/code&gt; &amp;gt; &lt;code&gt;Editing&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Press &lt;code&gt;tab&lt;/code&gt; to accept the first line of a suggestion, hold &lt;code&gt;option&lt;/code&gt; to view the full suggestion, and press &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;tab&lt;/code&gt; to accept the full suggestion.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of welcome screen&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/welcome.png&quot; width=&quot;450&quot;&gt; &lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;How to use Chat&lt;/h2&gt; 
&lt;p&gt;Open Copilot Chat in GitHub Copilot.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open via the Xcode menu &lt;code&gt;Xcode -&amp;gt; Editor -&amp;gt; GitHub Copilot -&amp;gt; Open Chat&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of Xcode Editor GitHub Copilot menu item&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/xcode-menu_dark.png&quot; width=&quot;648&quot;&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open via GitHub Copilot app menu &lt;code&gt;Open Chat&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of GitHub Copilot menu item&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/copilot-menu_dark.png&quot; width=&quot;244&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;How to use Code Completion&lt;/h2&gt; 
&lt;p&gt;Press &lt;code&gt;tab&lt;/code&gt; to accept the first line of a suggestion, hold &lt;code&gt;option&lt;/code&gt; to view the full suggestion, and press &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;tab&lt;/code&gt; to accept the full suggestion.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the MIT open source license. Please refer to &lt;a href=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt; for the full terms.&lt;/p&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;We follow responsible practices in accordance with our &lt;a href=&quot;https://docs.github.com/en/site-policy/privacy-policies/github-privacy-statement&quot;&gt;Privacy Statement&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To get the latest security fixes, please use the latest version of the GitHub Copilot for Xcode.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;We’d love to get your help in making GitHub Copilot better! If you have feedback or encounter any problems, please reach out on our &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/copilot&quot;&gt;Feedback forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Thank you to @intitni for creating the original project that this is based on.&lt;/p&gt; 
&lt;p&gt;Attributions can be found under About when running the app or in &lt;a href=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Copilot%20for%20Xcode/Credits.rtf&quot;&gt;Credits.rtf&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Alamofire/Alamofire</title>
      <link>https://github.com/Alamofire/Alamofire</link>
      <description>&lt;p&gt;Elegant HTTP Networking in Swift&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/Resources/AlamofireLogo.png&quot; alt=&quot;Alamofire: Elegant Networking in Swift&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://img.shields.io/badge/Swift-5.9_5.10_6.0-Orange?style=flat-square&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Swift-5.9_5.10_6.0-orange?style=flat-square&quot; alt=&quot;Swift&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://img.shields.io/badge/Platforms-macOS_iOS_tvOS_watchOS_vision_OS_Linux_Windows_Android-Green?style=flat-square&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Platforms-macOS_iOS_tvOS_watchOS_visionOS_Linux_Windows_Android-yellowgreen?style=flat-square&quot; alt=&quot;Platforms&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://img.shields.io/cocoapods/v/Alamofire.svg&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/v/Alamofire.svg?style=flat-square&quot; alt=&quot;CocoaPods Compatible&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat-square&quot; alt=&quot;Carthage Compatible&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://img.shields.io/badge/Swift_Package_Manager-compatible-orange?style=flat-square&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Swift_Package_Manager-compatible-orange?style=flat-square&quot; alt=&quot;Swift Package Manager&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://forums.swift.org/c/related-projects/alamofire/37&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Swift_Forums-Alamofire-orange?style=flat-square&quot; alt=&quot;Swift Forums&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Alamofire is an HTTP networking library written in Swift.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#component-libraries&quot;&gt;Component Libraries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#migration-guides&quot;&gt;Migration Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#communication&quot;&gt;Communication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#using-alamofire&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#introduction&quot;&gt;&lt;strong&gt;Introduction -&lt;/strong&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#making-requests&quot;&gt;Making Requests&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#response-handling&quot;&gt;Response Handling&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#response-validation&quot;&gt;Response Validation&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#response-caching&quot;&gt;Response Caching&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;HTTP -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#http-methods&quot;&gt;HTTP Methods&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#%23request-parameters-and-parameter-encoders&quot;&gt;Parameters and Parameter Encoder&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#http-headers&quot;&gt;HTTP Headers&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#authentication&quot;&gt;Authentication&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Large Data -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#downloading-data-to-a-file&quot;&gt;Downloading Data to a File&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#uploading-data-to-a-server&quot;&gt;Uploading Data to a Server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Tools -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#statistical-metrics&quot;&gt;Statistical Metrics&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#curl-command-output&quot;&gt;cURL Command Output&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md&quot;&gt;Advanced Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;URL Session -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#session&quot;&gt;Session Manager&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#sessiondelegate&quot;&gt;Session Delegate&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#request&quot;&gt;Request&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Routing -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#routing-requests&quot;&gt;Routing Requests&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#adapting-and-retrying-requests-with-requestinterceptor&quot;&gt;Adapting and Retrying Requests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Model Objects -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#customizing-response-handlers&quot;&gt;Custom Response Handlers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Advanced Concurrency -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#using-alamofire-with-swift-concurrency&quot;&gt;Swift Concurrency&lt;/a&gt; and &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#using-alamofire-with-combine&quot;&gt;Combine&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Connection -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#security&quot;&gt;Security&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#network-reachability&quot;&gt;Network Reachability&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#open-radars&quot;&gt;Open Radars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#donations&quot;&gt;Donations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Chainable Request / Response Methods&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Swift Concurrency Support Back to iOS 13, macOS 10.15, tvOS 13, and watchOS 6.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Combine Support&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; URL / JSON Parameter Encoding&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Upload File / Data / Stream / MultipartFormData&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Download File using Request or Resume Data&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Authentication with &lt;code&gt;URLCredential&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; HTTP Response Validation&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Upload and Download Progress Closures with Progress&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; cURL Command Output&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Dynamically Adapt and Retry Requests&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; TLS Certificate and Public Key Pinning&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Network Reachability&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Comprehensive Unit and Integration Test Coverage&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://alamofire.github.io/Alamofire&quot;&gt;Complete Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Write Requests Fast!&lt;/h2&gt; 
&lt;p&gt;Alamofire&#39;s compact syntax and extensive feature set allow requests with powerful features like automatic retry to be written in just a few lines of code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// Automatic String to URL conversion, Swift concurrency support, and automatic retry.
let response = await AF.request(&quot;https://httpbin.org/get&quot;, interceptor: .retryPolicy)
                       // Automatic HTTP Basic Auth.
                       .authenticate(username: &quot;user&quot;, password: &quot;pass&quot;)
                       // Caching customization.
                       .cacheResponse(using: .cache)
                       // Redirect customization.
                       .redirect(using: .follow)
                       // Validate response code and Content-Type.
                       .validate()
                       // Produce a cURL command for the request.
                       .cURLDescription { description in
                         print(description)
                       }
                       // Automatic Decodable support with background parsing.
                       .serializingDecodable(DecodableType.self)
                       // Await the full response with metrics and a parsed body.
                       .response
// Detailed response description for easy debugging.
debugPrint(response)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Component Libraries&lt;/h2&gt; 
&lt;p&gt;In order to keep Alamofire focused specifically on core networking implementations, additional component libraries have been created by the &lt;a href=&quot;https://github.com/Alamofire/Foundation&quot;&gt;Alamofire Software Foundation&lt;/a&gt; to bring additional functionality to the Alamofire ecosystem.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/AlamofireImage&quot;&gt;AlamofireImage&lt;/a&gt; - An image library including image response serializers, &lt;code&gt;UIImage&lt;/code&gt; and &lt;code&gt;UIImageView&lt;/code&gt; extensions, custom image filters, an auto-purging in-memory cache, and a priority-based image downloading system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/AlamofireNetworkActivityIndicator&quot;&gt;AlamofireNetworkActivityIndicator&lt;/a&gt; - Controls the visibility of the network activity indicator on iOS using Alamofire. It contains configurable delay timers to help mitigate flicker and can support &lt;code&gt;URLSession&lt;/code&gt; instances not managed by Alamofire.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Minimum Swift Version&lt;/th&gt; 
   &lt;th&gt;Installation&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iOS 10.0+ / macOS 10.12+ / tvOS 10.0+ / watchOS 3.0+&lt;/td&gt; 
   &lt;td&gt;5.9 / Xcode 15.0&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#cocoapods&quot;&gt;CocoaPods&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#carthage&quot;&gt;Carthage&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#manually&quot;&gt;Manual&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Fully Tested&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;Latest Only&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Building But Unsupported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Latest Only&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Building But Unsupported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Latest Only&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Building But Unsupported&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Known Issues on Linux and Windows&lt;/h4&gt; 
&lt;p&gt;Alamofire builds on Linux, Windows, and Android but there are missing features and many issues in the underlying &lt;code&gt;swift-corelibs-foundation&lt;/code&gt; that prevent full functionality and may cause crashes. These include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ServerTrustManager&lt;/code&gt; and associated certificate functionality is unavailable, so there is no certificate pinning and no client certificate support.&lt;/li&gt; 
 &lt;li&gt;Various methods of HTTP authentication may crash, including HTTP Basic and HTTP Digest. Crashes may occur if responses contain server challenges.&lt;/li&gt; 
 &lt;li&gt;Cache control through &lt;code&gt;CachedResponseHandler&lt;/code&gt; and associated APIs is unavailable, as the underlying delegate methods aren&#39;t called.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;URLSessionTaskMetrics&lt;/code&gt; are never gathered.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;WebSocketRequest&lt;/code&gt; is not available.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Due to these issues, Alamofire is unsupported on Linux, Windows, and Android. Please report any crashes to the &lt;a href=&quot;https://bugs.swift.org&quot;&gt;Swift bug reporter&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Migration Guides&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Alamofire%205.0%20Migration%20Guide.md&quot;&gt;Alamofire 5.0 Migration Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Alamofire%204.0%20Migration%20Guide.md&quot;&gt;Alamofire 4.0 Migration Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Alamofire%203.0%20Migration%20Guide.md&quot;&gt;Alamofire 3.0 Migration Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Alamofire%202.0%20Migration%20Guide.md&quot;&gt;Alamofire 2.0 Migration Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you &lt;strong&gt;need help with making network requests&lt;/strong&gt; using Alamofire, use &lt;a href=&quot;https://stackoverflow.com/questions/tagged/alamofire&quot;&gt;Stack Overflow&lt;/a&gt; and tag &lt;code&gt;alamofire&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If you need to &lt;strong&gt;find or understand an API&lt;/strong&gt;, check &lt;a href=&quot;http://alamofire.github.io/Alamofire/&quot;&gt;our documentation&lt;/a&gt; or &lt;a href=&quot;https://developer.apple.com/documentation/foundation/url_loading_system&quot;&gt;Apple&#39;s documentation for &lt;code&gt;URLSession&lt;/code&gt;&lt;/a&gt;, on top of which Alamofire is built.&lt;/li&gt; 
 &lt;li&gt;If you need &lt;strong&gt;help with an Alamofire feature&lt;/strong&gt;, use &lt;a href=&quot;https://forums.swift.org/c/related-projects/alamofire&quot;&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you&#39;d like to &lt;strong&gt;discuss Alamofire best practices&lt;/strong&gt;, use &lt;a href=&quot;https://forums.swift.org/c/related-projects/alamofire&quot;&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you&#39;d like to &lt;strong&gt;discuss a feature request&lt;/strong&gt;, use &lt;a href=&quot;https://forums.swift.org/c/related-projects/alamofire&quot;&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, open an issue here on GitHub and follow the guide. The more detail the better!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Swift Package Manager&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://swift.org/package-manager/&quot;&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler.&lt;/p&gt; 
&lt;p&gt;Once you have your Swift package set up, adding Alamofire as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt; or the Package list in Xcode.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;dependencies: [
    .package(url: &quot;https://github.com/Alamofire/Alamofire.git&quot;, .upToNextMajor(from: &quot;5.10.0&quot;))
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Normally you&#39;ll want to depend on the &lt;code&gt;Alamofire&lt;/code&gt; target:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.product(name: &quot;Alamofire&quot;, package: &quot;Alamofire&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But if you want to force Alamofire to be dynamically linked (do not do this unless you&#39;re sure you need it), you can depend on the &lt;code&gt;AlamofireDynamic&lt;/code&gt; target:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.product(name: &quot;AlamofireDynamic&quot;, package: &quot;Alamofire&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CocoaPods&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://cocoapods.org&quot;&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate Alamofire into your Xcode project using CocoaPods, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;pod &#39;Alamofire&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Carthage&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate Alamofire into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ogdl&quot;&gt;github &quot;Alamofire/Alamofire&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manually&lt;/h3&gt; 
&lt;p&gt;If you prefer not to use any of the aforementioned dependency managers, you can integrate Alamofire into your project manually.&lt;/p&gt; 
&lt;h4&gt;Embedded Framework&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Open up Terminal, &lt;code&gt;cd&lt;/code&gt; into your top-level project directory, and run the following command &quot;if&quot; your project is not initialized as a git repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git init
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add Alamofire as a git &lt;a href=&quot;https://git-scm.com/docs/git-submodule&quot;&gt;submodule&lt;/a&gt; by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git submodule add https://github.com/Alamofire/Alamofire.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open the new &lt;code&gt;Alamofire&lt;/code&gt; folder, and drag the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; into the Project Navigator of your application&#39;s Xcode project.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It should appear nested underneath your application&#39;s blue project icon. Whether it is above or below all the other Xcode groups does not matter.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; in the Project Navigator and verify the deployment target matches that of your application target.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the &quot;Targets&quot; heading in the sidebar.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In the tab bar at the top of that window, open the &quot;General&quot; panel.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click on the &lt;code&gt;+&lt;/code&gt; button under the &quot;Embedded Binaries&quot; section.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You will see two different &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; folders each with two different versions of the &lt;code&gt;Alamofire.framework&lt;/code&gt; nested inside a &lt;code&gt;Products&lt;/code&gt; folder.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It does not matter which &lt;code&gt;Products&lt;/code&gt; folder you choose from, but it does matter whether you choose the top or bottom &lt;code&gt;Alamofire.framework&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select the top &lt;code&gt;Alamofire.framework&lt;/code&gt; for iOS and the bottom one for macOS.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;You can verify which one you selected by inspecting the build log for your project. The build target for &lt;code&gt;Alamofire&lt;/code&gt; will be listed as &lt;code&gt;Alamofire iOS&lt;/code&gt;, &lt;code&gt;Alamofire macOS&lt;/code&gt;, &lt;code&gt;Alamofire tvOS&lt;/code&gt;, or &lt;code&gt;Alamofire watchOS&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;And that&#39;s it!&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;The &lt;code&gt;Alamofire.framework&lt;/code&gt; is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Before contributing to Alamofire, please read the instructions detailed in our &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Open Radars&lt;/h2&gt; 
&lt;p&gt;The following radars have some effect on the current implementation of Alamofire.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.openradar.me/radar?id=5517037090635776&quot;&gt;&lt;code&gt;rdar://21349340&lt;/code&gt;&lt;/a&gt; - Compiler throwing warning due to toll-free bridging issue in the test case&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdar://26870455&lt;/code&gt; - Background URL Session Configurations do not work in the simulator&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdar://26849668&lt;/code&gt; - Some URLProtocol APIs do not properly handle &lt;code&gt;URLRequest&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resolved Radars&lt;/h2&gt; 
&lt;p&gt;The following radars have been resolved over time after being filed against the Alamofire project.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.openradar.me/radar?id=5010235949318144&quot;&gt;&lt;code&gt;rdar://26761490&lt;/code&gt;&lt;/a&gt; - Swift string interpolation causing memory leak with common usage. 
  &lt;ul&gt; 
   &lt;li&gt;(Resolved): 9/1/17 in Xcode 9 beta 6.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://openradar.appspot.com/radar?id=4942308441063424&quot;&gt;&lt;code&gt;rdar://36082113&lt;/code&gt;&lt;/a&gt; - &lt;code&gt;URLSessionTaskMetrics&lt;/code&gt; failing to link on watchOS 3.0+ 
  &lt;ul&gt; 
   &lt;li&gt;(Resolved): Just add &lt;code&gt;CFNetwork&lt;/code&gt; to your linked frameworks.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FB7624529&lt;/code&gt; - &lt;code&gt;urlSession(_:task:didFinishCollecting:)&lt;/code&gt; never called on watchOS 
  &lt;ul&gt; 
   &lt;li&gt;(Resolved): Metrics now collected on watchOS 7+.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;What&#39;s the origin of the name Alamofire?&lt;/h3&gt; 
&lt;p&gt;Alamofire is named after the &lt;a href=&quot;https://aggie-horticulture.tamu.edu/wildseed/alamofire.html&quot;&gt;Alamo Fire flower&lt;/a&gt;, a hybrid variant of the Bluebonnet, the official state flower of Texas.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Alamofire is owned and maintained by the &lt;a href=&quot;http://alamofire.org&quot;&gt;Alamofire Software Foundation&lt;/a&gt;. You can follow them on Twitter at &lt;a href=&quot;https://twitter.com/AlamofireSF&quot;&gt;@AlamofireSF&lt;/a&gt; for project updates and releases.&lt;/p&gt; 
&lt;h3&gt;Security Disclosure&lt;/h3&gt; 
&lt;p&gt;If you believe you have identified a security vulnerability with Alamofire, you should report it as soon as possible via email to &lt;a href=&quot;mailto:security@alamofire.org&quot;&gt;security@alamofire.org&lt;/a&gt;. Please do not post it to a public issue tracker.&lt;/p&gt; 
&lt;h2&gt;Sponsorship&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/Alamofire/Foundation#members&quot;&gt;ASF&lt;/a&gt; is looking to raise money to officially stay registered as a federal non-profit organization. Registering will allow Foundation members to gain some legal protections and also allow us to put donations to use, tax-free. Sponsoring the ASF will enable us to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pay our yearly legal fees to keep the non-profit in good status&lt;/li&gt; 
 &lt;li&gt;Pay for our mail servers to help us stay on top of all questions and security issues&lt;/li&gt; 
 &lt;li&gt;Potentially fund test servers to make it easier for us to test the edge cases&lt;/li&gt; 
 &lt;li&gt;Potentially fund developers to work on one of our projects full-time&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The community adoption of the ASF libraries has been amazing. We are greatly humbled by your enthusiasm around the projects and want to continue to do everything we can to move the needle forward. With your continued support, the ASF will be able to improve its reach and also provide better legal safety for the core members. If you use any of our libraries for work, see if your employers would be interested in donating. Any amount you can donate, whether once or monthly, to help us reach our goal would be greatly appreciated.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/Alamofire&quot;&gt;Sponsor Alamofire&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Supporters&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://macstadium.com&quot;&gt;MacStadium&lt;/a&gt; provides Alamofire with a free, hosted Mac mini.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/Resources/MacStadiumLogo.png&quot; alt=&quot;Powered by MacStadium&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Alamofire is released under the MIT license. &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/LICENSE&quot;&gt;See LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pointfreeco/swift-composable-architecture</title>
      <link>https://github.com/pointfreeco/swift-composable-architecture</link>
      <description>&lt;p&gt;A library for building applications in a consistent and understandable way, with composition, testing, and ergonomics in mind.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Composable Architecture&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/pointfreeco/swift-composable-architecture/actions?query=workflow%3ACI&quot;&gt;&lt;img src=&quot;https://github.com/pointfreeco/swift-composable-architecture/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.pointfree.co/slack-invite&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-chat-informational.svg?label=Slack&amp;amp;logo=slack&quot; alt=&quot;Slack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/pointfreeco/swift-composable-architecture&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fpointfreeco%2Fswift-composable-architecture%2Fbadge%3Ftype%3Dswift-versions&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/pointfreeco/swift-composable-architecture&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fpointfreeco%2Fswift-composable-architecture%2Fbadge%3Ftype%3Dplatforms&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The Composable Architecture (TCA, for short) is a library for building applications in a consistent and understandable way, with composition, testing, and ergonomics in mind. It can be used in SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, iPadOS, visionOS, tvOS, and watchOS).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/#what-is-the-composable-architecture&quot;&gt;What is the Composable Architecture?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/#learn-more&quot;&gt;Learn more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/#examples&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/#basic-usage&quot;&gt;Basic usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/#translations&quot;&gt;Translations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is the Composable Architecture?&lt;/h2&gt; 
&lt;p&gt;This library provides a few core tools that can be used to build applications of varying purpose and complexity. It provides compelling stories that you can follow to solve many problems you encounter day-to-day when building applications, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;State management&lt;/strong&gt; &lt;br&gt; How to manage the state of your application using simple value types, and share state across many screens so that mutations in one screen can be immediately observed in another screen.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Composition&lt;/strong&gt; &lt;br&gt; How to break down large features into smaller components that can be extracted to their own, isolated modules and be easily glued back together to form the feature.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Side effects&lt;/strong&gt; &lt;br&gt; How to let certain parts of the application talk to the outside world in the most testable and understandable way possible.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Testing&lt;/strong&gt; &lt;br&gt; How to not only test a feature built in the architecture, but also write integration tests for features that have been composed of many parts, and write end-to-end tests to understand how side effects influence your application. This allows you to make strong guarantees that your business logic is running in the way you expect.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ergonomics&lt;/strong&gt; &lt;br&gt; How to accomplish all of the above in a simple API with as few concepts and moving parts as possible.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;The Composable Architecture was designed over the course of many episodes on &lt;a href=&quot;https://www.pointfree.co&quot;&gt;Point-Free&lt;/a&gt;, a video series exploring functional programming and the Swift language, hosted by &lt;a href=&quot;https://twitter.com/mbrandonw&quot;&gt;Brandon Williams&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/stephencelis&quot;&gt;Stephen Celis&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can watch all of the episodes &lt;a href=&quot;https://www.pointfree.co/collections/composable-architecture&quot;&gt;here&lt;/a&gt;, as well as a dedicated, &lt;a href=&quot;https://www.pointfree.co/collections/tours/composable-architecture-1-0&quot;&gt;multipart tour&lt;/a&gt; of the architecture from scratch.&lt;/p&gt; 
&lt;a href=&quot;https://www.pointfree.co/collections/tours/composable-architecture-1-0&quot;&gt; &lt;img alt=&quot;video poster image&quot; src=&quot;https://d3rccdn33rt8ze.cloudfront.net/episodes/0243.jpeg&quot; width=&quot;600&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/Examples&quot;&gt;&lt;img src=&quot;https://d3rccdn33rt8ze.cloudfront.net/composable-architecture/demos.png&quot; alt=&quot;Screen shots of example applications&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repo comes with &lt;em&gt;lots&lt;/em&gt; of examples to demonstrate how to solve common and complex problems with the Composable Architecture. Check out &lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/Examples&quot;&gt;this&lt;/a&gt; directory to see them all, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/Examples/CaseStudies&quot;&gt;Case Studies&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Getting started&lt;/li&gt; 
   &lt;li&gt;Effects&lt;/li&gt; 
   &lt;li&gt;Navigation&lt;/li&gt; 
   &lt;li&gt;Higher-order reducers&lt;/li&gt; 
   &lt;li&gt;Reusable components&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pointfreeco/composable-core-location/tree/main/Examples/LocationManager&quot;&gt;Location manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pointfreeco/composable-core-motion/tree/main/Examples/MotionManager&quot;&gt;Motion manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/Examples/Search&quot;&gt;Search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/Examples/SpeechRecognition&quot;&gt;Speech Recognition&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/Examples/SyncUps&quot;&gt;SyncUps app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/Examples/TicTacToe&quot;&gt;Tic-Tac-Toe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/Examples/Todos&quot;&gt;Todos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/Examples/VoiceMemos&quot;&gt;Voice memos&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Looking for something more substantial? Check out the source code for &lt;a href=&quot;https://github.com/pointfreeco/isowords&quot;&gt;isowords&lt;/a&gt;, an iOS word search game built in SwiftUI and the Composable Architecture.&lt;/p&gt; 
&lt;h2&gt;Basic Usage&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note] For a step-by-step interactive tutorial, be sure to check out &lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/tutorials/meetcomposablearchitecture&quot;&gt;Meet the Composable Architecture&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To build a feature using the Composable Architecture you define some types and values that model your domain:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;State&lt;/strong&gt;: A type that describes the data your feature needs to perform its logic and render its UI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Action&lt;/strong&gt;: A type that represents all of the actions that can happen in your feature, such as user actions, notifications, event sources and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reducer&lt;/strong&gt;: A function that describes how to evolve the current state of the app to the next state given an action. The reducer is also responsible for returning any effects that should be run, such as API requests, which can be done by returning an &lt;code&gt;Effect&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Store&lt;/strong&gt;: The runtime that actually drives your feature. You send all user actions to the store so that the store can run the reducer and effects, and you can observe state changes in the store so that you can update UI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The benefits of doing this are that you will instantly unlock testability of your feature, and you will be able to break large, complex features into smaller domains that can be glued together.&lt;/p&gt; 
&lt;p&gt;As a basic example, consider a UI that shows a number along with &quot;+&quot; and &quot;−&quot; buttons that increment and decrement the number. To make things interesting, suppose there is also a button that when tapped makes an API request to fetch a random fact about that number and displays it in the view.&lt;/p&gt; 
&lt;p&gt;To implement this feature we create a new type that will house the domain and behavior of the feature, and it will be annotated with the &lt;code&gt;@Reducer&lt;/code&gt; macro:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;import ComposableArchitecture

@Reducer
struct Feature {
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In here we need to define a type for the feature&#39;s state, which consists of an integer for the current count, as well as an optional string that represents the fact being presented:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;@Reducer
struct Feature {
  @ObservableState
  struct State: Equatable {
    var count = 0
    var numberFact: String?
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note] We&#39;ve applied the &lt;code&gt;@ObservableState&lt;/code&gt; macro to &lt;code&gt;State&lt;/code&gt; in order to take advantage of the observation tools in the library.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;We also need to define a type for the feature&#39;s actions. There are the obvious actions, such as tapping the decrement button, increment button, or fact button. But there are also some slightly non-obvious ones, such as the action that occurs when we receive a response from the fact API request:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;@Reducer
struct Feature {
  @ObservableState
  struct State: Equatable { /* ... */ }
  enum Action {
    case decrementButtonTapped
    case incrementButtonTapped
    case numberFactButtonTapped
    case numberFactResponse(String)
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then we implement the &lt;code&gt;body&lt;/code&gt; property, which is responsible for composing the actual logic and behavior for the feature. In it we can use the &lt;code&gt;Reduce&lt;/code&gt; reducer to describe how to change the current state to the next state, and what effects need to be executed. Some actions don&#39;t need to execute effects, and they can return &lt;code&gt;.none&lt;/code&gt; to represent that:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;@Reducer
struct Feature {
  @ObservableState
  struct State: Equatable { /* ... */ }
  enum Action { /* ... */ }

  var body: some Reducer&amp;lt;State, Action&amp;gt; {
    Reduce { state, action in
      switch action {
      case .decrementButtonTapped:
        state.count -= 1
        return .none

      case .incrementButtonTapped:
        state.count += 1
        return .none

      case .numberFactButtonTapped:
        return .run { [count = state.count] send in
          let (data, _) = try await URLSession.shared.data(
            from: URL(string: &quot;http://numbersapi.com/\(count)/trivia&quot;)!
          )
          await send(
            .numberFactResponse(String(decoding: data, as: UTF8.self))
          )
        }

      case let .numberFactResponse(fact):
        state.numberFact = fact
        return .none
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then finally we define the view that displays the feature. It holds onto a &lt;code&gt;StoreOf&amp;lt;Feature&amp;gt;&lt;/code&gt; so that it can observe all changes to the state and re-render, and we can send all user actions to the store so that state changes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;struct FeatureView: View {
  let store: StoreOf&amp;lt;Feature&amp;gt;

  var body: some View {
    Form {
      Section {
        Text(&quot;\(store.count)&quot;)
        Button(&quot;Decrement&quot;) { store.send(.decrementButtonTapped) }
        Button(&quot;Increment&quot;) { store.send(.incrementButtonTapped) }
      }

      Section {
        Button(&quot;Number fact&quot;) { store.send(.numberFactButtonTapped) }
      }
      
      if let fact = store.numberFact {
        Text(fact)
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is also straightforward to have a UIKit controller driven off of this store. You can observe state changes in the store in &lt;code&gt;viewDidLoad&lt;/code&gt;, and then populate the UI components with data from the store. The code is a bit longer than the SwiftUI version, so we have collapsed it here:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to expand!&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;class FeatureViewController: UIViewController {
  let store: StoreOf&amp;lt;Feature&amp;gt;

  init(store: StoreOf&amp;lt;Feature&amp;gt;) {
    self.store = store
    super.init(nibName: nil, bundle: nil)
  }

  required init?(coder: NSCoder) {
    fatalError(&quot;init(coder:) has not been implemented&quot;)
  }

  override func viewDidLoad() {
    super.viewDidLoad()

    let countLabel = UILabel()
    let decrementButton = UIButton()
    let incrementButton = UIButton()
    let factLabel = UILabel()
    
    // Omitted: Add subviews and set up constraints...
    
    observe { [weak self] in
      guard let self 
      else { return }
      
      countLabel.text = &quot;\(self.store.text)&quot;
      factLabel.text = self.store.numberFact
    }
  }

  @objc private func incrementButtonTapped() {
    self.store.send(.incrementButtonTapped)
  }
  @objc private func decrementButtonTapped() {
    self.store.send(.decrementButtonTapped)
  }
  @objc private func factButtonTapped() {
    self.store.send(.numberFactButtonTapped)
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Once we are ready to display this view, for example in the app&#39;s entry point, we can construct a store. This can be done by specifying the initial state to start the application in, as well as the reducer that will power the application:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;import ComposableArchitecture

@main
struct MyApp: App {
  var body: some Scene {
    WindowGroup {
      FeatureView(
        store: Store(initialState: Feature.State()) {
          Feature()
        }
      )
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And that is enough to get something on the screen to play around with. It&#39;s definitely a few more steps than if you were to do this in a vanilla SwiftUI way, but there are a few benefits. It gives us a consistent manner to apply state mutations, instead of scattering logic in some observable objects and in various action closures of UI components. It also gives us a concise way of expressing side effects. And we can immediately test this logic, including the effects, without doing much additional work.&lt;/p&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note] For more in-depth information on testing, see the dedicated &lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/testing&quot;&gt;testing&lt;/a&gt; article.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To test use a &lt;code&gt;TestStore&lt;/code&gt;, which can be created with the same information as the &lt;code&gt;Store&lt;/code&gt;, but it does extra work to allow you to assert how your feature evolves as actions are sent:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;@Test
func basics() async {
  let store = TestStore(initialState: Feature.State()) {
    Feature()
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once the test store is created we can use it to make an assertion of an entire user flow of steps. Each step of the way we need to prove that state changed how we expect. For example, we can simulate the user flow of tapping on the increment and decrement buttons:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// Test that tapping on the increment/decrement buttons changes the count
await store.send(.incrementButtonTapped) {
  $0.count = 1
}
await store.send(.decrementButtonTapped) {
  $0.count = 0
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Further, if a step causes an effect to be executed, which feeds data back into the store, we must assert on that. For example, if we simulate the user tapping on the fact button we expect to receive a fact response back with the fact, which then causes the &lt;code&gt;numberFact&lt;/code&gt; state to be populated:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;await store.send(.numberFactButtonTapped)

await store.receive(\.numberFactResponse) {
  $0.numberFact = ???
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, how do we know what fact is going to be sent back to us?&lt;/p&gt; 
&lt;p&gt;Currently our reducer is using an effect that reaches out into the real world to hit an API server, and that means we have no way to control its behavior. We are at the whims of our internet connectivity and the availability of the API server in order to write this test.&lt;/p&gt; 
&lt;p&gt;It would be better for this dependency to be passed to the reducer so that we can use a live dependency when running the application on a device, but use a mocked dependency for tests. We can do this by adding a property to the &lt;code&gt;Feature&lt;/code&gt; reducer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;@Reducer
struct Feature {
  let numberFact: (Int) async throws -&amp;gt; String
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then we can use it in the &lt;code&gt;reduce&lt;/code&gt; implementation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;case .numberFactButtonTapped:
  return .run { [count = state.count] send in 
    let fact = try await self.numberFact(count)
    await send(.numberFactResponse(fact))
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And in the entry point of the application we can provide a version of the dependency that actually interacts with the real world API server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;@main
struct MyApp: App {
  var body: some Scene {
    WindowGroup {
      FeatureView(
        store: Store(initialState: Feature.State()) {
          Feature(
            numberFact: { number in
              let (data, _) = try await URLSession.shared.data(
                from: URL(string: &quot;http://numbersapi.com/\(number)&quot;)!
              )
              return String(decoding: data, as: UTF8.self)
            }
          )
        }
      )
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But in tests we can use a mock dependency that immediately returns a deterministic, predictable fact:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;@Test
func basics() async {
  let store = TestStore(initialState: Feature.State()) {
    Feature(numberFact: { &quot;\($0) is a good number Brent&quot; })
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With that little bit of upfront work we can finish the test by simulating the user tapping on the fact button, and then receiving the response from the dependency to present the fact:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;await store.send(.numberFactButtonTapped)

await store.receive(\.numberFactResponse) {
  $0.numberFact = &quot;0 is a good number Brent&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can also improve the ergonomics of using the &lt;code&gt;numberFact&lt;/code&gt; dependency in our application. Over time the application may evolve into many features, and some of those features may also want access to &lt;code&gt;numberFact&lt;/code&gt;, and explicitly passing it through all layers can get annoying. There is a process you can follow to “register” dependencies with the library, making them instantly available to any layer in the application.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note] For more in-depth information on dependency management, see the dedicated &lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/dependencymanagement&quot;&gt;dependencies&lt;/a&gt; article.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;We can start by wrapping the number fact functionality in a new type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;struct NumberFactClient {
  var fetch: (Int) async throws -&amp;gt; String
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then registering that type with the dependency management system by conforming the client to the &lt;code&gt;DependencyKey&lt;/code&gt; protocol, which requires you to specify the live value to use when running the application in simulators or devices:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;extension NumberFactClient: DependencyKey {
  static let liveValue = Self(
    fetch: { number in
      let (data, _) = try await URLSession.shared
        .data(from: URL(string: &quot;http://numbersapi.com/\(number)&quot;)!
      )
      return String(decoding: data, as: UTF8.self)
    }
  )
}

extension DependencyValues {
  var numberFact: NumberFactClient {
    get { self[NumberFactClient.self] }
    set { self[NumberFactClient.self] = newValue }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With that little bit of upfront work done you can instantly start making use of the dependency in any feature by using the &lt;code&gt;@Dependency&lt;/code&gt; property wrapper:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt; @Reducer
 struct Feature {
-  let numberFact: (Int) async throws -&amp;gt; String
+  @Dependency(\.numberFact) var numberFact
   
   …

-  try await self.numberFact(count)
+  try await self.numberFact.fetch(count)
 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This code works exactly as it did before, but you no longer have to explicitly pass the dependency when constructing the feature&#39;s reducer. When running the app in previews, the simulator or on a device, the live dependency will be provided to the reducer, and in tests the test dependency will be provided.&lt;/p&gt; 
&lt;p&gt;This means the entry point to the application no longer needs to construct dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;@main
struct MyApp: App {
  var body: some Scene {
    WindowGroup {
      FeatureView(
        store: Store(initialState: Feature.State()) {
          Feature()
        }
      )
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And the test store can be constructed without specifying any dependencies, but you can still override any dependency you need to for the purpose of the test:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;let store = TestStore(initialState: Feature.State()) {
  Feature()
} withDependencies: {
  $0.numberFact.fetch = { &quot;\($0) is a good number Brent&quot; }
}

// ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That is the basics of building and testing a feature in the Composable Architecture. There are &lt;em&gt;a lot&lt;/em&gt; more things to be explored, such as composition, modularity, adaptability, and complex effects. The &lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/Examples&quot;&gt;Examples&lt;/a&gt; directory has a bunch of projects to explore to see more advanced usages.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The documentation for releases and &lt;code&gt;main&lt;/code&gt; are available here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/&quot;&gt;&lt;code&gt;main&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.17.0/documentation/composablearchitecture/&quot;&gt;1.17.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.17&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt; Other versions &lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.16.0/documentation/composablearchitecture/&quot;&gt;1.16.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.16&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.15.0/documentation/composablearchitecture/&quot;&gt;1.15.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.15&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.14.0/documentation/composablearchitecture/&quot;&gt;1.14.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.14&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.13.0/documentation/composablearchitecture/&quot;&gt;1.13.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.13&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.12.0/documentation/composablearchitecture/&quot;&gt;1.12.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.12&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.11.0/documentation/composablearchitecture/&quot;&gt;1.11.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.11&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.10.0/documentation/composablearchitecture/&quot;&gt;1.10.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.10&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.9.0/documentation/composablearchitecture/&quot;&gt;1.9.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.9&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.8.0/documentation/composablearchitecture/&quot;&gt;1.8.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.8&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.7.0/documentation/composablearchitecture/&quot;&gt;1.7.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.7&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.6.0/documentation/composablearchitecture/&quot;&gt;1.6.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.6&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.5.0/documentation/composablearchitecture/&quot;&gt;1.5.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.5&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.4.0/documentation/composablearchitecture/&quot;&gt;1.4.0&lt;/a&gt; (&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/migratingto1.4&quot;&gt;migration guide&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.3.0/documentation/composablearchitecture/&quot;&gt;1.3.0&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.2.0/documentation/composablearchitecture/&quot;&gt;1.2.0&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.1.0/documentation/composablearchitecture/&quot;&gt;1.1.0&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/1.0.0/documentation/composablearchitecture/&quot;&gt;1.0.0&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/0.59.0/documentation/composablearchitecture/&quot;&gt;0.59.0&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/0.58.0/documentation/composablearchitecture/&quot;&gt;0.58.0&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/0.57.0/documentation/composablearchitecture/&quot;&gt;0.57.0&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;p&gt;There are a number of articles in the documentation that you may find helpful as you become more comfortable with the library:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/gettingstarted&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/dependencymanagement&quot;&gt;Dependencies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/navigation&quot;&gt;Navigation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/sharingstate&quot;&gt;Sharing state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/performance&quot;&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/swiftconcurrency&quot;&gt;Concurrency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/bindings&quot;&gt;Bindings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;We have a &lt;a href=&quot;https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/faq&quot;&gt;dedicated article&lt;/a&gt; for all of the most frequently asked questions and comments people have concerning the library.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;If you want to discuss the Composable Architecture or have a question about how to use it to solve a particular problem, there are a number of places you can discuss with fellow &lt;a href=&quot;http://www.pointfree.co&quot;&gt;Point-Free&lt;/a&gt; enthusiasts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For long-form discussions, we recommend the &lt;a href=&quot;https://github.com/pointfreeco/swift-composable-architecture/discussions&quot;&gt;discussions&lt;/a&gt; tab of this repo.&lt;/li&gt; 
 &lt;li&gt;For casual chat, we recommend the &lt;a href=&quot;http://pointfree.co/slack-invite&quot;&gt;Point-Free Community slack&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;You can add ComposableArchitecture to an Xcode project by adding it as a package dependency.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;From the &lt;strong&gt;File&lt;/strong&gt; menu, select &lt;strong&gt;Add Package Dependencies...&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Enter &quot;&lt;a href=&quot;https://github.com/pointfreeco/swift-composable-architecture&quot;&gt;https://github.com/pointfreeco/swift-composable-architecture&lt;/a&gt;&quot; into the package repository URL text field&lt;/li&gt; 
 &lt;li&gt;Depending on how your project is structured: 
  &lt;ul&gt; 
   &lt;li&gt;If you have a single application target that needs access to the library, then add &lt;strong&gt;ComposableArchitecture&lt;/strong&gt; directly to your application.&lt;/li&gt; 
   &lt;li&gt;If you want to use this library from multiple Xcode targets, or mix Xcode targets and SPM targets, you must create a shared framework that depends on &lt;strong&gt;ComposableArchitecture&lt;/strong&gt; and then depend on that framework in all of your targets. For an example of this, check out the &lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/Examples/TicTacToe&quot;&gt;Tic-Tac-Toe&lt;/a&gt; demo application, which splits lots of features into modules and consumes the static library in this fashion using the &lt;strong&gt;tic-tac-toe&lt;/strong&gt; Swift package.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Companion libraries&lt;/h2&gt; 
&lt;p&gt;The Composable Architecture is built with extensibility in mind, and there are a number of community-supported libraries available to enhance your applications:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ryu0118/swift-composable-architecture-extras&quot;&gt;Composable Architecture Extras&lt;/a&gt;: A companion library to the Composable Architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mentalflux/tca-composer&quot;&gt;TCAComposer&lt;/a&gt;: A macro framework for generating boiler-plate code in the Composable Architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnpatrickmorgan/TCACoordinators&quot;&gt;TCACoordinators&lt;/a&gt;: The coordinator pattern in the Composable Architecture.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you&#39;d like to contribute a library, please &lt;a href=&quot;https://github.com/pointfreeco/swift-composable-architecture/edit/main/README.md&quot;&gt;open a PR&lt;/a&gt; with a link to it!&lt;/p&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;The following translations of this README have been contributed by members of the community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/NorhanBoghdadi/1b98d55c02b683ddef7e05c2ebcccd47&quot;&gt;Arabic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/nikitamounier/0e93eb832cf389db12f9a69da030a2dc&quot;&gt;French&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/akashsoni01/b358ee0b3b747167964ef6946123c88d&quot;&gt;Hindi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/wendyliga/792ea9ac5cc887f59de70a9e39cc7343&quot;&gt;Indonesian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/Bellaposa/5114e6d4d55fdb1388e8186886d48958&quot;&gt;Italian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/Achoo-kr/2d0712deb77f78b3379551ac7baea3e4&quot;&gt;Japanese&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/Achoo-kr/5d8936d12e71028fcc4a7c5e078ca038&quot;&gt;Korean&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/MarcelStarczyk/6b6153051f46912a665c32199f0d1d54&quot;&gt;Polish&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/SevioCorrea/2bbf337cd084a58c89f2f7f370626dc8&quot;&gt;Portuguese&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/SubvertDev/3317d0c3b35ed601be330d6fc0df5aba&quot;&gt;Russian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/sh3l6orrr/10c8f7c634a892a9c37214f3211242ad&quot;&gt;Simplified Chinese&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/pitt500/f5e32fccb575ce112ffea2827c7bf942&quot;&gt;Spanish&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/gokhanamal/93001244ef0c1cec58abeb1afc0de37c&quot;&gt;Turkish&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/barabashd/33b64676195ce41f4bb73c327ea512a8&quot;&gt;Ukrainian&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you&#39;d like to contribute a translation, please &lt;a href=&quot;https://github.com/pointfreeco/swift-composable-architecture/edit/main/README.md&quot;&gt;open a PR&lt;/a&gt; with a link to a &lt;a href=&quot;https://gist.github.com&quot;&gt;Gist&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Credits and thanks&lt;/h2&gt; 
&lt;p&gt;The following people gave feedback on the library at its early stages and helped make the library what it is today:&lt;/p&gt; 
&lt;p&gt;Paul Colton, Kaan Dedeoglu, Matt Diephouse, Josef Doležal, Eimantas, Matthew Johnson, George Kaimakas, Nikita Leonov, Christopher Liscio, Jeffrey Macko, Alejandro Martinez, Shai Mishali, Willis Plummer, Simon-Pierre Roy, Justin Price, Sven A. Schmidt, Kyle Sherman, Petr Šíma, Jasdev Singh, Maxim Smirnov, Ryan Stone, Daniel Hollis Tavares, and all of the &lt;a href=&quot;https://www.pointfree.co&quot;&gt;Point-Free&lt;/a&gt; subscribers 😁.&lt;/p&gt; 
&lt;p&gt;Special thanks to &lt;a href=&quot;https://twitter.com/liscio&quot;&gt;Chris Liscio&lt;/a&gt; who helped us work through many strange SwiftUI quirks and helped refine the final API.&lt;/p&gt; 
&lt;p&gt;And thanks to &lt;a href=&quot;https://github.com/freak4pc&quot;&gt;Shai Mishali&lt;/a&gt; and the &lt;a href=&quot;https://github.com/CombineCommunity/CombineExt/&quot;&gt;CombineCommunity&lt;/a&gt; project, from which we took their implementation of &lt;code&gt;Publishers.Create&lt;/code&gt;, which we use in &lt;code&gt;Effect&lt;/code&gt; to help bridge delegate and callback-based APIs, making it much easier to interface with 3rd party frameworks.&lt;/p&gt; 
&lt;h2&gt;Other libraries&lt;/h2&gt; 
&lt;p&gt;The Composable Architecture was built on a foundation of ideas started by other libraries, in particular &lt;a href=&quot;https://elm-lang.org&quot;&gt;Elm&lt;/a&gt; and &lt;a href=&quot;https://redux.js.org/&quot;&gt;Redux&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are also many architecture libraries in the Swift and iOS community. Each one of these has their own set of priorities and trade-offs that differ from the Composable Architecture.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/uber/RIBs&quot;&gt;RIBs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/ReactiveCocoa/Loop&quot;&gt;Loop&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/ReSwift/ReSwift&quot;&gt;ReSwift&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/square/workflow&quot;&gt;Workflow&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/ReactorKit/ReactorKit&quot;&gt;ReactorKit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/NoTests/RxFeedback.swift&quot;&gt;RxFeedback&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/spotify/mobius.swift&quot;&gt;Mobius.swift&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;details&gt; 
   &lt;summary&gt;And more&lt;/summary&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/FluxorOrg/Fluxor&quot;&gt;Fluxor&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/RPallas92/PromisedArchitectureKit&quot;&gt;PromisedArchitectureKit&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/details&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is released under the MIT license. See &lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-composable-architecture/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mozilla-mobile/firefox-ios</title>
      <link>https://github.com/mozilla-mobile/firefox-ios</link>
      <description>&lt;p&gt;Firefox for iOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Firefox for iOS and Focus iOS&lt;/h1&gt; 
&lt;p&gt;Download &lt;a href=&quot;https://apps.apple.com/app/firefox-web-browser/id989804926&quot;&gt;Firefox iOS&lt;/a&gt; and &lt;a href=&quot;https://itunes.apple.com/app/id1055677337&quot;&gt;Focus iOS&lt;/a&gt; on the App Store.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th style=&quot;border: none;&quot;&gt;&lt;strong&gt;Firefox iOS&lt;/strong&gt;&lt;/th&gt; 
   &lt;td style=&quot;border: none;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Xcode-16.2-blue?logo=Xcode&amp;amp;logoColor=white&quot; alt=&quot;Firefox-iOS&quot;&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: none;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Swift-5.6-red?logo=Swift&amp;amp;logoColor=white&quot; alt=&quot;Firefox-iOS&quot;&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: none;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/iOS-15.0+-green?logo=apple&amp;amp;logoColor=white&quot; alt=&quot;Firefox-iOS&quot;&gt;&lt;/td&gt; 
   &lt;th rowspan=&quot;2&quot; style=&quot;border: none;&quot;&gt; &lt;a href=&quot;https://codebeat.co/projects/github-com-mozilla-firefox-ios&quot;&gt; &lt;img src=&quot;https://codebeat.co/badges/67e58b6d-bc89-4f22-ba8f-7668a9c15c5a&quot; alt=&quot;&quot;&gt; &lt;/a&gt; &lt;/th&gt; 
   &lt;th rowspan=&quot;2&quot; style=&quot;border: none;&quot;&gt; &lt;a href=&quot;https://codecov.io/gh/mozilla-mobile/firefox-ios/branch/main&quot;&gt; &lt;img src=&quot;https://codecov.io/gh/mozilla-mobile/firefox-ios/branch/main/graph/badge.svg?sanitize=true&quot; alt=&quot;&quot;&gt; &lt;/a&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th style=&quot;border: none;&quot;&gt;&lt;strong&gt;Focus iOS&lt;/strong&gt;&lt;/th&gt; 
   &lt;td style=&quot;border: none;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Xcode-16.2-blue?logo=Xcode&amp;amp;logoColor=white&quot; alt=&quot;Focus-iOS&quot;&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: none;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Swift-5.6-red?logo=Swift&amp;amp;logoColor=white&quot; alt=&quot;Focus-iOS&quot;&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: none;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/iOS-15.0+-green?logo=apple&amp;amp;logoColor=white&quot; alt=&quot;Focus-iOS&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Building the code&lt;/h2&gt; 
&lt;p&gt;This is a mono repository containing both Firefox and Focus iOS projects. For their related build instructions, please follow the project readme.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mozilla-mobile/firefox-ios/raw/main/firefox-ios/README.md&quot;&gt;Firefox for iOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mozilla-mobile/firefox-ios/raw/main/focus-ios/README.md&quot;&gt;Focus iOS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting involved&lt;/h2&gt; 
&lt;p&gt;We encourage you to participate in those open source projects. We love Pull Requests, Issue Reports, Feature Requests or any kind of positive contribution. Please read the &lt;a href=&quot;https://www.mozilla.org/en-US/about/governance/policies/participation/&quot;&gt;Mozilla Community Participation Guidelines&lt;/a&gt; and our &lt;a href=&quot;https://github.com/mozilla-mobile/firefox-ios/raw/main/CONTRIBUTING.md&quot;&gt;Contributing guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can &lt;a href=&quot;https://github.com/mozilla-mobile/firefox-ios/issues/new/choose&quot;&gt;file a new issue&lt;/a&gt; or research &lt;a href=&quot;https://github.com/mozilla-mobile/firefox-ios/issues&quot;&gt;existing bugs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If more information is required or you have any questions then we suggest reaching out to us via:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat on Element channel &lt;a href=&quot;https://chat.mozilla.org/#/room/%23fx-ios:mozilla.org&quot;&gt;#fx-ios&lt;/a&gt; and &lt;a href=&quot;https://chat.mozilla.org/#/room/%23focus-ios:mozilla.org&quot;&gt;#focus-ios&lt;/a&gt; for general discussion, or write DMs to specific teammates for questions.&lt;/li&gt; 
 &lt;li&gt;Open a &lt;a href=&quot;https://github.com/mozilla-mobile/firefox-ios/discussions&quot;&gt;Github discussion&lt;/a&gt; which can be used for general questions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want to contribute on the codebase but don&#39;t know where to start? Here is a list of &lt;a href=&quot;https://github.com/mozilla-mobile/firefox-ios/labels/Contributor%20OK&quot;&gt;issues that are contributor friendly&lt;/a&gt;, but make sure to read the &lt;a href=&quot;https://github.com/mozilla-mobile/firefox-ios/raw/main/CONTRIBUTING.md&quot;&gt;Contributing guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at https://mozilla.org/MPL/2.0/
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>airbnb/lottie-ios</title>
      <link>https://github.com/airbnb/lottie-ios</link>
      <description>&lt;p&gt;An iOS library to natively render After Effects vector animations&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lottie for iOS&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://cocoapods.org/pods/lottie-ios&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/v/lottie-ios.svg?style=flat&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&quot; alt=&quot;Carthage Compatible&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://swift.org/package-manager/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/SPM-supported-DE5C43.svg?style=flat&quot; alt=&quot;SwiftPM&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cocoapods.org/pods/lottie-ios&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/l/lottie-ios.svg?style=flat&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/airbnb/lottie-ios&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fairbnb%2Flottie-ios%2Fbadge%3Ftype%3Dplatforms&quot; alt=&quot;Platform&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/airbnb/lottie-ios&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fairbnb%2Flottie-ios%2Fbadge%3Ftype%3Dswift-versions&quot; alt=&quot;Swift Versions&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;View documentation, FAQ, help, examples, and more at &lt;a href=&quot;https://airbnb.io/lottie/&quot;&gt;airbnb.io/lottie&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Lottie is a cross-platform library for iOS, macOS, tvOS, visionOS, &lt;a href=&quot;https://github.com/airbnb/lottie-android&quot;&gt;Android&lt;/a&gt;, and &lt;a href=&quot;https://github.com/airbnb/lottie-web&quot;&gt;Web&lt;/a&gt; that natively renders vector-based animations and art in realtime with minimal code.&lt;/p&gt; 
&lt;p&gt;Lottie loads and renders animations and vectors exported in the bodymovin JSON format. Bodymovin JSON can be created and exported from After Effects with &lt;a href=&quot;https://github.com/bodymovin/bodymovin&quot;&gt;bodymovin&lt;/a&gt;, Sketch with &lt;a href=&quot;https://github.com/buba447/Lottie-Sketch-Export&quot;&gt;Lottie Sketch Export&lt;/a&gt;, and from &lt;a href=&quot;https://www.haikuanimator.com&quot;&gt;Haiku&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Designers can create &lt;strong&gt;and ship&lt;/strong&gt; beautiful animations without an engineer painstakingly recreating them by hand. Since the animations are backed by JSON, they are extremely small in size but can be large in complexity! Animations can be played, resized, looped, sped up, slowed down, reversed, and even interactively scrubbed. Lottie can play or loop just a portion of the animation as well, the possibilities are endless! Animations can even be &lt;em&gt;&lt;strong&gt;changed at runtime&lt;/strong&gt;&lt;/em&gt; in various ways! Change the color, position, or any keyframable value!&lt;/p&gt; 
&lt;p&gt;Here is just a small sampling of the power of Lottie&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/airbnb/lottie-ios/master/_Gifs/Examples1.gif&quot; alt=&quot;Example1&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/airbnb/lottie-ios/master/_Gifs/Examples2.gif&quot; alt=&quot;Example2&quot;&gt;&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/airbnb/lottie-ios/master/_Gifs/Community%202_3.gif&quot;&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/airbnb/lottie-ios/master/_Gifs/Examples3.gif&quot; alt=&quot;Example3&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/airbnb/lottie-ios/master/_Gifs/Examples4.gif&quot; alt=&quot;Abcs&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Installing Lottie&lt;/h2&gt; 
&lt;p&gt;Lottie supports &lt;a href=&quot;https://www.swift.org/package-manager/&quot;&gt;Swift Package Manager&lt;/a&gt;, &lt;a href=&quot;https://cocoapods.org/&quot;&gt;CocoaPods&lt;/a&gt;, and &lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;Carthage&lt;/a&gt; (Both dynamic and static).&lt;/p&gt; 
&lt;h3&gt;Github Repo&lt;/h3&gt; 
&lt;p&gt;You can pull the &lt;a href=&quot;https://github.com/airbnb/lottie-ios/&quot;&gt;Lottie Github Repo&lt;/a&gt; and include the &lt;code&gt;Lottie.xcodeproj&lt;/code&gt; to build a dynamic or static library.&lt;/p&gt; 
&lt;h3&gt;Swift Package Manager&lt;/h3&gt; 
&lt;p&gt;To install Lottie using &lt;a href=&quot;https://github.com/swiftlang/swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt; you can follow the &lt;a href=&quot;https://developer.apple.com/documentation/xcode/adding_package_dependencies_to_your_app&quot;&gt;tutorial published by Apple&lt;/a&gt; using the URL for the Lottie repo with the current version:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;In Xcode, select “File” → “Add Packages...”&lt;/li&gt; 
 &lt;li&gt;Enter &lt;a href=&quot;https://github.com/airbnb/lottie-spm.git&quot;&gt;https://github.com/airbnb/lottie-spm.git&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;or you can add the following dependency to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.package(url: &quot;https://github.com/airbnb/lottie-spm.git&quot;, from: &quot;4.5.0&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using Swift Package Manager we recommend using the &lt;a href=&quot;https://github.com/airbnb/lottie-spm&quot;&gt;lottie-spm&lt;/a&gt; repo instead of the main lottie-ios repo. The main git repository for &lt;a href=&quot;https://github.com/airbnb/lottie-ios&quot;&gt;lottie-ios&lt;/a&gt; is somewhat large (300+ MB), and Swift Package Manager always downloads the full repository with all git history. The &lt;a href=&quot;https://github.com/airbnb/lottie-spm&quot;&gt;lottie-spm&lt;/a&gt; repo is much smaller (less than 500kb), so can be downloaded much more quickly.&lt;/p&gt; 
&lt;p&gt;Instead of downloading the full git history of Lottie and building it from source, the lottie-spm repo just contains a pointer to the precompiled XCFramework included in the &lt;a href=&quot;https://github.com/airbnb/lottie-ios/releases/latest&quot;&gt;latest lottie-ios release&lt;/a&gt; (typically ~8MB). If you prefer to include Lottie source directly your project, you can directly depend on the main lottie-ios repo by referencing &lt;code&gt;https://github.com/airbnb/lottie-ios.git&lt;/code&gt; instead.&lt;/p&gt; 
&lt;h3&gt;CocoaPods&lt;/h3&gt; 
&lt;p&gt;Add the pod to your Podfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;pod &#39;lottie-ios&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;pod install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After installing the cocoapod into your project import Lottie with&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;import Lottie
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Carthage&lt;/h3&gt; 
&lt;p&gt;Add Lottie to your Cartfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;github &quot;airbnb/lottie-ios&quot; &quot;master&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;carthage update
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In your application targets “General” tab under the “Linked Frameworks and Libraries” section, drag and drop lottie-ios.framework from the Carthage/Build/iOS directory that &lt;code&gt;carthage update&lt;/code&gt; produced.&lt;/p&gt; 
&lt;h2&gt;Swift Version Support&lt;/h2&gt; 
&lt;p&gt;Lottie supports Swift / Xcode versions back to the minimum version that is permitted by Apple for submissions to the App Store. You can see the most up-to-date information for which Swift versions Lottie supports on &lt;a href=&quot;https://swiftpackageindex.com/airbnb/lottie-ios&quot;&gt;Swift Package Index&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://swiftpackageindex.com/airbnb/lottie-ios&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fairbnb%2Flottie-ios%2Fbadge%3Ftype%3Dswift-versions&quot; alt=&quot;Swift Versions&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;Lottie does not collect any data. We provide this notice to help you fill out &lt;a href=&quot;https://developer.apple.com/app-store/app-privacy-details/&quot;&gt;App Privacy Details&lt;/a&gt;. We additionally provide a &lt;a href=&quot;https://github.com/airbnb/lottie-ios/raw/master/Sources/PrivacyInfo.xcprivacy&quot;&gt;privacy manifest&lt;/a&gt; which can be included in your app.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;We distribute XCFramework bundles for each release on &lt;a href=&quot;https://github.com/airbnb/lottie-ios/releases/latest&quot;&gt;GitHub&lt;/a&gt;. In Lottie 4.4.0 and later, these XCFramework bundles include a &lt;a href=&quot;https://developer.apple.com/documentation/xcode/verifying-the-origin-of-your-xcframeworks&quot;&gt;code signature&lt;/a&gt;. These bundles are self-signed under the name &quot;Lottie iOS&quot; and have the following fingerprint:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;89 2F 1B 43 04 7B 50 53 8F 2F 46 EA D9 29 00 DD 3D 48 11 F358 21 78 C0 61 A5 FB 20 F1 11 CB 26
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In Xcode you can verify this by selecting &lt;code&gt;Lottie.xcframework&lt;/code&gt; and confirming that it shows the following information:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/airbnb/lottie-ios/master/_Gifs/code_signature.png&quot; alt=&quot;Code Signature in Xcode&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We always appreciate contributions from the community. To make changes to the project, you can clone the repo and open &lt;code&gt;Lottie.xcworkspace&lt;/code&gt;. This workspace includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;the Lottie framework (for iOS, macOS, and tvOS)&lt;/li&gt; 
 &lt;li&gt;unit tests and snapshot tests (for iOS, must be run on an iPhone 8 simulator)&lt;/li&gt; 
 &lt;li&gt;an Example iOS app that lets you browse and test over 100 sample animations included in the repo&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All pull requests with new features or bug fixes that affect how animations render should include snapshot test cases that validate the included changes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To add a new sample animation to the snapshot testing suite, you can add the &lt;code&gt;.json&lt;/code&gt; file to &lt;code&gt;Tests/Samples&lt;/code&gt;. Re-run the snapshot tests to generate the new snapshot image files.&lt;/li&gt; 
 &lt;li&gt;To update existing snapshots after making changes, you can set &lt;code&gt;isRecording = true&lt;/code&gt; in &lt;code&gt;SnapshotTests.swift&lt;/code&gt; &lt;code&gt;setUp()&lt;/code&gt; method and then re-run the snapshot tests.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The project also includes several helpful commands defined in our &lt;a href=&quot;https://github.com/airbnb/lottie-ios/raw/master/Rakefile&quot;&gt;Rakefile&lt;/a&gt;. To use these, you need to install &lt;a href=&quot;https://bundler.io/&quot;&gt;Bundler&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ sudo gem install bundle
$ bundle install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, all Swift code should be formatted according to the &lt;a href=&quot;https://github.com/airbnb/swift&quot;&gt;Airbnb Swift Style Guide&lt;/a&gt;. After making changes, you can reformat the code automatically using &lt;a href=&quot;https://github.com/nicklockwood/SwiftFormat&quot;&gt;SwiftFormat&lt;/a&gt; and &lt;a href=&quot;https://github.com/realm/SwiftLint&quot;&gt;SwiftLint&lt;/a&gt; by running &lt;code&gt;bundle exec rake format:swift&lt;/code&gt;. Other helpful commands include:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bundle exec rake build:all # builds all targets for all platforms
$ bundle exec rake build&lt;span&gt;📦&lt;/span&gt;iOS # builds the Lottie package for iOS
$ bundle exec rake test:package # tests the Lottie package
$ bundle exec rake format:swift # reformat Swift code based on the Airbnb Swift Style Guide
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>nikitabobko/AeroSpace</title>
      <link>https://github.com/nikitabobko/AeroSpace</link>
      <description>&lt;p&gt;AeroSpace is an i3-like tiling window manager for macOS&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nikitabobko/AeroSpace/main/resources/Assets.xcassets/AppIcon.appiconset/icon.png&quot; width=&quot;40%&quot; height=&quot;40%&quot; align=&quot;right&quot;&gt; 
&lt;h1&gt;AeroSpace Beta &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/nikitabobko/AeroSpace/actions/workflows/build.yml/badge.svg?branch=main&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;AeroSpace is an i3-like tiling window manager for macOS&lt;/p&gt; 
&lt;p&gt;Videos:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=UOl7ErqWbrk&quot;&gt;YouTube 91 sec Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-FoWClVHG5g&quot;&gt;YouTube Guide by Josean Martinez&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Docs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide&quot;&gt;AeroSpace Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/commands&quot;&gt;AeroSpace Commands&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/goodies&quot;&gt;AeroSpace Goodies&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project status&lt;/h2&gt; 
&lt;p&gt;Public Beta. AeroSpace can be used as a daily driver, but expect breaking changes until 1.0 is reached.&lt;/p&gt; 
&lt;h2&gt;Key features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tiling window manager based on a &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#tree&quot;&gt;tree paradigm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://i3wm.org/&quot;&gt;i3&lt;/a&gt; inspired&lt;/li&gt; 
 &lt;li&gt;Fast workspaces switching without animations and without the necessity to disable SIP&lt;/li&gt; 
 &lt;li&gt;AeroSpace employs its &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#emulation-of-virtual-workspaces&quot;&gt;own emulation of virtual workspaces&lt;/a&gt; instead of relying on native macOS Spaces due to &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#emulation-of-virtual-workspaces&quot;&gt;their considerable limitations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Plain text configuration (dotfiles friendly). See: &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#default-config&quot;&gt;default-config.toml&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;CLI first (manpages and shell completion included)&lt;/li&gt; 
 &lt;li&gt;Doesn&#39;t require disabling SIP (System Integrity Protection)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#multiple-monitors&quot;&gt;Proper multi-monitor support&lt;/a&gt; (i3-like paradigm)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install via &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; to get autoupdates (Preferred)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;brew install --cask nikitabobko/tap/aerospace
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In multi-monitor setup please make sure that monitors &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#proper-monitor-arrangement&quot;&gt;are properly arranged&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Other installation options: &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#installation&quot;&gt;https://nikitabobko.github.io/AeroSpace/guide#installation&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] By using AeroSpace, you acknowledge that it&#39;s not &lt;a href=&quot;https://developer.apple.com/documentation/security/notarizing_macos_software_before_distribution&quot;&gt;notarized&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;Notarization is a &quot;security&quot; feature by Apple. You send binaries to Apple, and they either approve them or not. In reality, notarization is about building binaries the way Apple likes it.&lt;/p&gt; 
 &lt;p&gt;I don&#39;t have anything against notarization as a concept. I specifically don&#39;t like the way Apple does notarization. I don&#39;t have time to deal with Apple.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/nikitabobko/homebrew-tap/raw/main/Casks/aerospace.rb&quot;&gt;Homebrew installation script&lt;/a&gt; is configured to automatically delete &lt;code&gt;com.apple.quarantine&lt;/code&gt; attribute, that&#39;s why the app should work out of the box, without any warnings that &quot;Apple cannot check AeroSpace for malicious software&quot;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Community, discussions, issues&lt;/h2&gt; 
&lt;p&gt;Unfortunately, AeroSpace project doesn&#39;t accept bug reports and feature requests from everyone. Please read &lt;a href=&quot;https://raw.githubusercontent.com/nikitabobko/AeroSpace/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Community discussions happen at GitHub Discussions. There you can discuss bugs, propose new features, ask your questions, show off your setup, or just chat.&lt;/p&gt; 
&lt;p&gt;There are 7 channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions&quot;&gt;#all&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions.atom?discussions_q=sort%3Adate_created&quot;&gt;RSS&lt;/a&gt;. Feed with all discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/announcements&quot;&gt;#announcements&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/announcements.atom?discussions_q=category%3Aannouncements+sort%3Adate_created&quot;&gt;RSS&lt;/a&gt;. Only maintainers can post here. Highly moderated traffic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/announcements-releases&quot;&gt;#announcements-releases&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/announcements-releases.atom?discussions_q=category%3Aannouncements-releases+sort%3Adate_created&quot;&gt;RSS&lt;/a&gt;. Announcements about non-patch releases. Only maintainers can post here.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/feature-ideas&quot;&gt;#feature-ideas&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/feature-ideas.atom?discussions_q=category%3Afeature-ideas+sort%3Adate_created&quot;&gt;RSS&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/general&quot;&gt;#general&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/general.atom?discussions_q=sort%3Adate_created+category%3Ageneral&quot;&gt;RSS&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/potential-bugs&quot;&gt;#potential-bugs&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/potential-bugs.atom?discussions_q=category%3Apotential-bugs+sort%3Adate_created&quot;&gt;RSS&lt;/a&gt;. If you think that you have encountered a bug, you can discuss your bugs here.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/questions-and-answers&quot;&gt;#questions-and-answers&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/questions-and-answers.atom?discussions_q=category%3Aquestions-and-answers+sort%3Adate_created&quot;&gt;RSS&lt;/a&gt;. Everyone is welcome to ask questions. Everyone is encouraged to answer other people&#39;s questions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;A notes on how to setup the project, build it, how to run the tests, etc. can be found here: &lt;a href=&quot;https://raw.githubusercontent.com/nikitabobko/AeroSpace/main/dev-docs/development.md&quot;&gt;dev-docs/development.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Project values&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Values&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AeroSpace is targeted at advanced users and developers&lt;/li&gt; 
 &lt;li&gt;Keyboard centric&lt;/li&gt; 
 &lt;li&gt;Breaking changes (configuration files, CLI, behavior) are avoided as much as possible, but it must not let the software stagnate. Thus breaking changes can happen, but with careful considerations and helpful message. &lt;a href=&quot;https://semver.org/&quot;&gt;Semver&lt;/a&gt; major version is bumped in case of a breaking change (It&#39;s all guaranteed once AeroSpace reaches 1.0 version, until then breaking changes just happen)&lt;/li&gt; 
 &lt;li&gt;AeroSpace doesn&#39;t use GUI, unless necessarily 
  &lt;ul&gt; 
   &lt;li&gt;AeroSpace will never provide a GUI for configuration. For advanced users, it&#39;s easier to edit a configuration file in text editor rather than navigating through checkboxes in GUI.&lt;/li&gt; 
   &lt;li&gt;Status menu icon is ok, because visual feedback is needed&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Provide &lt;em&gt;practical&lt;/em&gt; features. Fancy appearance features are not &lt;em&gt;practical&lt;/em&gt; (e.g. window borders, transparency, animations, etc.)&lt;/li&gt; 
 &lt;li&gt;&quot;dark magic&quot; (aka &quot;private APIs&quot;, &quot;code injections&quot;, etc.) must be avoided as much as possible 
  &lt;ul&gt; 
   &lt;li&gt;Right now, AeroSpace uses only a single private API to get window ID of accessibility object &lt;code&gt;_AXUIElementGetWindow&lt;/code&gt;. Everything else is &lt;a href=&quot;https://developer.apple.com/documentation/applicationservices/axuielement_h&quot;&gt;macOS public accessibility API&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;AeroSpace will never require you to disable SIP (System Integrity Protection).&lt;/li&gt; 
   &lt;li&gt;The goal is to make AeroSpace easily maintainable, and resistant to macOS updates.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Non Values&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Play nicely with existing macOS features. If limitations are imposed then AeroSpace won&#39;t play nicely with existing macOS features (For example, AeroSpace doesn&#39;t acknowledge the existence of macOS Spaces, and it uses &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#emulation-of-virtual-workspaces&quot;&gt;emulation of its own workspaces&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Ricing. AeroSpace provides only a very minimal support for ricing - gaps and a few callbacks for integrations with bars. The current maintainer doesn&#39;t care about ricing. Ricing issues are not a priority, and they are mostly ignored. The ricing stance can change only with the appearance of more maintainers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tip of the day&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;defaults write -g NSWindowShouldDragOnGesture -bool true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, you can move windows by holding &lt;code&gt;ctrl&lt;/code&gt;+&lt;code&gt;cmd&lt;/code&gt; and dragging any part of the window (not necessarily the window title)&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href=&quot;https://www.reddit.com/r/MacOS/comments/k6hiwk/keyboard_modifier_to_simplify_click_drag_of/&quot;&gt;reddit&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Related projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ianyh/Amethyst&quot;&gt;Amethyst&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/koekeishiya/yabai&quot;&gt;yabai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>swiftlang/swift-package-manager</title>
      <link>https://github.com/swiftlang/swift-package-manager</link>
      <description>&lt;p&gt;The Package Manager for the Swift Programming Language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swift Package Manager Project&lt;/h1&gt; 
&lt;p&gt;The Swift Package Manager is a tool for managing distribution of source code, aimed at making it easy to share your code and reuse others’ code. The tool directly addresses the challenges of compiling and linking Swift packages, managing dependencies, versioning, and supporting flexible distribution and collaboration models.&lt;/p&gt; 
&lt;p&gt;We’ve designed the system to make it easy to share packages on services like GitHub, but packages are also great for private personal development, sharing code within a team, or at any other granularity.&lt;/p&gt; 
&lt;p&gt;Swift Package Manager includes a build system that can build for macOS and Linux. Starting with Xcode 11, Xcode integrates with SwiftPM to provide support for including packages in iOS, macOS, watchOS, and tvOS applications.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/swiftlang/sourcekit-lsp&quot;&gt;SourceKit-LSP&lt;/a&gt; project leverages libSwiftPM and provides &lt;a href=&quot;https://langserver.org/&quot;&gt;Language Server Protocol&lt;/a&gt; implementation for editors that support LSP.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#getting-started&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#system-requirements&quot;&gt;System Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#reporting-issues&quot;&gt;Reporting issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Please use &lt;a href=&quot;https://www.swift.org/documentation/package-manager/&quot;&gt;this guide&lt;/a&gt; for learning package manager basics.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For Quick Help use the &lt;code&gt;swift package --help&lt;/code&gt; command.&lt;/p&gt; 
&lt;p&gt;For documentation on using Swift Package Manager, creating packages, and more, see the &lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/Documentation/README.md&quot;&gt;documentation directory&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For documentation on developing the Swift Package Manager itself, see the &lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For detailed documentation on the package manifest API, see &lt;a href=&quot;https://docs.swift.org/package-manager/PackageDescription/index.html&quot;&gt;PackageDescription API&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For release notes with information about changes between versions, see the &lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/Documentation/ReleaseNotes&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;p&gt;The package manager’s system requirements are the same as &lt;a href=&quot;https://github.com/swiftlang/swift/raw/main/docs/HowToGuides/GettingStarted.md#system-requirements&quot;&gt;those for Swift&lt;/a&gt; with the caveat that the package manager requires Git at runtime as well as build-time.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The package manager is available as part the Swift toolchains available on &lt;a href=&quot;https://swift.org/download/&quot;&gt;Swift.org&lt;/a&gt;) including snapshots for the latest versions built from &lt;code&gt;main&lt;/code&gt; branch. For installation instructions for downloaded snapshots, please see the &lt;a href=&quot;https://swift.org/getting-started/#installing-swift&quot;&gt;Getting Started&lt;/a&gt; section of &lt;a href=&quot;https://swift.org&quot;&gt;Swift.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Swift Package Manager is also included in Xcode 8.0 and all subsequent releases.&lt;/p&gt; 
&lt;p&gt;You can verify your installation by typing &lt;code&gt;swift package --version&lt;/code&gt; in a terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ swift package --version
Apple Swift Package Manager - ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are several ways to contribute to Swift Package Manager. To learn about the policies, best practices that govern contributions to the Swift project and instructions for setting up the development environment please read the &lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/CONTRIBUTING.md&quot;&gt;Contributor Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Swift package manager uses &lt;a href=&quot;https://github.com/apple/swift-llbuild&quot;&gt;llbuild&lt;/a&gt; as the underlying build system for compiling source files. It is also open source and part of the Swift project.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Reporting issues&lt;/h2&gt; 
&lt;p&gt;If you have any trouble with the package manager, help is available. We recommend:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://forums.swift.org/c/development/swiftpm/&quot;&gt;Swift Forums&lt;/a&gt;,&lt;/li&gt; 
 &lt;li&gt;SwiftPM&#39;s &lt;a href=&quot;https://github.com/swiftlang/swift-package-manager/issues&quot;&gt;bug tracker&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When reporting an issue please follow the bug reporting guidelines, they can be found in &lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/CONTRIBUTING.md#reporting-issues&quot;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you’re not comfortable sharing your question with the list, contact details for the code owners can be found in &lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-package-manager/main/CODEOWNERS&quot;&gt;CODEOWNERS&lt;/a&gt;; however, Swift Forums is usually the best place to go for help.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2015 - 2024 Apple Inc. and the Swift project authors. Licensed under Apache License v2.0 with Runtime Library Exception.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://swift.org/LICENSE.txt&quot;&gt;https://swift.org/LICENSE.txt&lt;/a&gt; for license information.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://swift.org/CONTRIBUTORS.txt&quot;&gt;https://swift.org/CONTRIBUTORS.txt&lt;/a&gt; for Swift project authors.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alienator88/Pearcleaner</title>
      <link>https://github.com/alienator88/Pearcleaner</link>
      <description>&lt;p&gt;A free, source-available and fair-code licensed mac app cleaner&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pearcleaner&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/alienator88/Pearcleaner/assets/91337119/165f6961-f4fc-4199-bc68-580bacff6eaf&quot; align=&quot;center&quot; width=&quot;128&quot; height=&quot;128&quot;&gt; &lt;br&gt; &lt;strong&gt;Status: &lt;/strong&gt;Maintained &lt;br&gt; &lt;strong&gt;Version: &lt;/strong&gt;4.3.0 &lt;br&gt; &lt;a href=&quot;https://github.com/alienator88/Pearcleaner/releases&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&quot;https://github.com/alienator88/Pearcleaner/commits&quot;&gt;Commits&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://www.producthunt.com/posts/pearcleaner?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-pearcleaner&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=439875&amp;amp;theme=neutral&quot; alt=&quot;Pearcleaner - An open-source mac app cleaner | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://hellogithub.com/repository/7d671653eec144ea99bd2317db267e06&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=7d671653eec144ea99bd2317db267e06&amp;amp;claim_uid=stBZ5iURuDKgFbV&quot; alt=&quot;Featured｜HelloGitHub&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;A free, source-available and fair-code licensed Mac app cleaner inspired by &lt;a href=&quot;https://freemacsoft.net/appcleaner/&quot;&gt;Freemacsoft&#39;s AppCleaner&lt;/a&gt; and &lt;a href=&quot;https://sunknudsen.com/privacy-guides/how-to-clean-uninstall-macos-apps-using-appcleaner-open-source-alternative&quot;&gt;Sun Knudsen&#39;s Privacy Guides&lt;/a&gt; post on his app-cleaner script. This project was born out of wanting to learn more on how macOS deals with app installation/uninstallation and getting more Swift experience. If you have suggestions I&#39;m open to hearing them, submit a feature request!&lt;/p&gt; 
&lt;h3&gt;Table of Contents:&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alienator88/Pearcleaner/main/#translations&quot;&gt;Translations&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/alienator88/Pearcleaner/main/#license&quot;&gt;License&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/alienator88/Pearcleaner/main/#features&quot;&gt;Features&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/alienator88/Pearcleaner/main/#screenshots&quot;&gt;Screenshots&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/alienator88/Pearcleaner/main/#issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/alienator88/Pearcleaner/main/#requirements&quot;&gt;Requirements&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/alienator88/Pearcleaner/main/#getting-pearcleaner&quot;&gt;Download&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/alienator88/Pearcleaner/main/#thanks&quot;&gt;Thanks&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/alienator88/Pearcleaner/main/#other-apps&quot;&gt;Other Apps&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;If you are able to contribute to translations for the app, please see this discussion: &lt;a href=&quot;https://github.com/alienator88/Pearcleaner/discussions/137&quot;&gt;https://github.com/alienator88/Pearcleaner/discussions/137&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Pearcleaner is licensed under Apache 2.0 with &lt;a href=&quot;https://commonsclause.com/&quot;&gt;Commons Clause&lt;/a&gt;. This means that you can do anything you&#39;d like with the source, modify it, contribute to it, etc., but the license explicitly prohibits any form of monetization for Pearcleaner or any modified versions of it. See full license &lt;a href=&quot;https://github.com/alienator88/Pearcleaner/raw/main/LICENSE.md&quot;&gt;HERE&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Orphaned file search for finding remaining files from previously uninstalled applications&lt;/li&gt; 
 &lt;li&gt;Development environments file/cache cleaning&lt;/li&gt; 
 &lt;li&gt;Sentinel monitor helper that can be enabled to watch Trash folder for deleted apps to cleanup after the fact(Extremely small (210KB) and uses ~2mb of ram to run in the background and file watch)&lt;/li&gt; 
 &lt;li&gt;Mini mode which can be enabled from Settings&lt;/li&gt; 
 &lt;li&gt;Menubar icon option&lt;/li&gt; 
 &lt;li&gt;CLI support&lt;/li&gt; 
 &lt;li&gt;Drag/drop applications support&lt;/li&gt; 
 &lt;li&gt;Deep link support for automation, see &lt;a href=&quot;https://github.com/alienator88/Pearcleaner/wiki/Deep-Link-Guide&quot;&gt;wiki guide&lt;/a&gt; for instructions&lt;/li&gt; 
 &lt;li&gt;Optional Finder Extension which allows you to uninstall an app directly from Finder by &lt;code&gt;right click &amp;gt; Pearcleaner Uninstall&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Theme System available with custom color selector&lt;/li&gt; 
 &lt;li&gt;Differentiate between regular, Safari web-apps and mobile apps with badges like &lt;strong&gt;web&lt;/strong&gt; and &lt;strong&gt;iOS&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Has clean uninstall menu option for the Pearcleaner app itself if you want to stop using it and get rid of all files and launch items&lt;/li&gt; 
 &lt;li&gt;Export app bundles for migrating apps and their cache to a new system&lt;/li&gt; 
 &lt;li&gt;Export app file list search results&lt;/li&gt; 
 &lt;li&gt;Optional Homebrew cleanup&lt;/li&gt; 
 &lt;li&gt;Include extra directories to search for apps in&lt;/li&gt; 
 &lt;li&gt;Exclude files/folders from the orphaned file search&lt;/li&gt; 
 &lt;li&gt;Custom auto-updater that pulls latest release notes and binaries from GitHub Releases (Pearcleaner should run from &lt;code&gt;/Applications&lt;/code&gt; folder to avoid permission issues)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;img src=&quot;https://github.com/user-attachments/assets/e2e16378-dbed-4cd4-a20b-23dd0d806fdf&quot; align=&quot;left&quot; width=&quot;400&quot;&gt; 
&lt;img src=&quot;https://github.com/user-attachments/assets/4221d3ce-6190-45da-9a35-f9554196b2bf&quot; align=&quot;center&quot; width=&quot;400&quot;&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;img src=&quot;https://github.com/user-attachments/assets/fc2f6d24-d6c9-4aec-91da-3d0adc05df48&quot; align=&quot;left&quot; width=&quot;400&quot;&gt; 
&lt;img src=&quot;https://github.com/user-attachments/assets/d8e43558-071f-4ff8-8557-b0508c063c1c&quot; align=&quot;center&quot; width=&quot;400&quot;&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;When submitting issues, please use the appropriate issue template corresponding with your problem &lt;a href=&quot;https://github.com/alienator88/Pearcleaner/issues/new/choose&quot;&gt;HERE&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Beta versions of macOS will not be supported until general release&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;MacOS 13.0+ [Non-beta releases]&lt;/li&gt; 
  &lt;li&gt;Full Disk permission to search for files&lt;/li&gt; 
  &lt;li&gt;Accessibility permission to delete/restore files&lt;/li&gt; 
  &lt;li&gt;Automation permission to control Finder and Terminal&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Getting Pearcleaner&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Releases&lt;/summary&gt; 
 &lt;p&gt;Pre-compiled, always up-to-date versions are available from my &lt;a href=&quot;https://github.com/alienator88/Pearcleaner/releases&quot;&gt;releases&lt;/a&gt; page.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Homebrew&lt;/summary&gt; 
 &lt;p&gt;You can add the app via Homebrew:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;brew install pearcleaner
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Much appreciation to &lt;a href=&quot;https://freemacsoft.net/appcleaner/&quot;&gt;Freemacsoft&#39;s AppCleaner&lt;/a&gt; and &lt;a href=&quot;https://sunknudsen.com/privacy-guides/how-to-clean-uninstall-macos-apps-using-appcleaner-open-source-alternative&quot;&gt;Sun Knudsen&#39;s app-cleaner script&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dharsanb&quot;&gt;DharsanB&lt;/a&gt; for sponsoring my Apple Developer account&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other Apps&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/alienator88/Pearcleaner&quot;&gt;Pearcleaner&lt;/a&gt; - An opensource app cleaner with privacy in mind&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/alienator88/Sentinel&quot;&gt;Sentinel&lt;/a&gt; - A GUI for controlling gatekeeper status on your Mac&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/alienator88/Viz&quot;&gt;Viz&lt;/a&gt; - Utility for extracting text from images, videos, qr/barcodes&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>p0deje/Maccy</title>
      <link>https://github.com/p0deje/Maccy</link>
      <description>&lt;p&gt;Lightweight clipboard manager for macOS&lt;/p&gt;&lt;hr&gt;&lt;img width=&quot;128px&quot; src=&quot;https://maccy.app/img/maccy/Logo.png&quot; alt=&quot;Logo&quot; align=&quot;left&quot;&gt; 
&lt;h1&gt;&lt;a href=&quot;https://maccy.app&quot;&gt;Maccy&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/p0deje/Maccy/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/p0deje/Maccy/total.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.bitrise.io/app/716921b669780314&quot;&gt;&lt;img src=&quot;https://img.shields.io/bitrise/716921b669780314/master?token=3pMiCb5dpFzlO-7jTYtO3Q&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Maccy is a lightweight clipboard manager for macOS. It keeps the history of what you copy and lets you quickly navigate, search, and use previous clipboard contents.&lt;/p&gt; 
&lt;p&gt;Maccy works on macOS Sonoma 14 or higher.&lt;/p&gt; 
&lt;!-- vim-markdown-toc GFM --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#install&quot;&gt;Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#usage&quot;&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#advanced&quot;&gt;Advanced&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#ignore-copied-items&quot;&gt;Ignore Copied Items&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#ignore-custom-copy-types&quot;&gt;Ignore Custom Copy Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#speed-up-clipboard-check-interval&quot;&gt;Speed up Clipboard Check Interval&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#faq&quot;&gt;FAQ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#why-doesnt-it-paste-when-i-select-an-item-in-history&quot;&gt;Why doesn&#39;t it paste when I select an item in history?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#when-assigning-a-hotkey-to-open-maccy-it-says-that-this-hotkey-is-already-used-in-some-system-setting&quot;&gt;When assigning a hotkey to open Maccy, it says that this hotkey is already used in some system setting.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#how-to-restore-hidden-footer&quot;&gt;How to restore hidden footer?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#how-to-ignore-copies-from-universal-clipboard&quot;&gt;How to ignore copies from Universal Clipboard?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#translations&quot;&gt;Translations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#motivation&quot;&gt;Motivation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- vim-markdown-toc --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lightweight and fast&lt;/li&gt; 
 &lt;li&gt;Keyboard-first&lt;/li&gt; 
 &lt;li&gt;Secure and private&lt;/li&gt; 
 &lt;li&gt;Native UI&lt;/li&gt; 
 &lt;li&gt;Open source and free&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Download the latest version from the &lt;a href=&quot;https://github.com/p0deje/Maccy/releases/latest&quot;&gt;releases&lt;/a&gt; page, or use &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;brew install maccy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;kbd&gt;SHIFT (⇧)&lt;/kbd&gt; + &lt;kbd&gt;COMMAND (⌘)&lt;/kbd&gt; + &lt;kbd&gt;C&lt;/kbd&gt; to popup Maccy or click on its icon in the menu bar.&lt;/li&gt; 
 &lt;li&gt;Type what you want to find.&lt;/li&gt; 
 &lt;li&gt;To select the history item you wish to copy, press &lt;kbd&gt;ENTER&lt;/kbd&gt;, or click the item, or use &lt;kbd&gt;COMMAND (⌘)&lt;/kbd&gt; + &lt;code&gt;n&lt;/code&gt; shortcut.&lt;/li&gt; 
 &lt;li&gt;To choose the history item and paste, press &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;ENTER&lt;/kbd&gt;, or &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;CLICK&lt;/kbd&gt; the item, or use &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;code&gt;n&lt;/code&gt; shortcut.&lt;/li&gt; 
 &lt;li&gt;To choose the history item and paste without formatting, press &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;SHIFT (⇧)&lt;/kbd&gt; + &lt;kbd&gt;ENTER&lt;/kbd&gt;, or &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;SHIFT (⇧)&lt;/kbd&gt; + &lt;kbd&gt;CLICK&lt;/kbd&gt; the item, or use &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;SHIFT (⇧)&lt;/kbd&gt; + &lt;code&gt;n&lt;/code&gt; shortcut.&lt;/li&gt; 
 &lt;li&gt;To delete the history item, press &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;DELETE (⌫)&lt;/kbd&gt;.&lt;/li&gt; 
 &lt;li&gt;To see the full text of the history item, wait a couple of seconds for tooltip.&lt;/li&gt; 
 &lt;li&gt;To pin the history item so that it remains on top of the list, press &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;P&lt;/kbd&gt;. The item will be moved to the top with a random but permanent keyboard shortcut. To unpin it, press &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;P&lt;/kbd&gt; again.&lt;/li&gt; 
 &lt;li&gt;To clear all unpinned items, select &lt;em&gt;Clear&lt;/em&gt; in the menu, or press &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;COMMAND (⌘)&lt;/kbd&gt; + &lt;kbd&gt;DELETE (⌫)&lt;/kbd&gt;. To clear all items including pinned, select &lt;em&gt;Clear&lt;/em&gt; in the menu with &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; pressed, or press &lt;kbd&gt;SHIFT (⇧)&lt;/kbd&gt; + &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;COMMAND (⌘)&lt;/kbd&gt; + &lt;kbd&gt;DELETE (⌫)&lt;/kbd&gt;.&lt;/li&gt; 
 &lt;li&gt;To disable Maccy and ignore new copies, click on the menu icon with &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; pressed.&lt;/li&gt; 
 &lt;li&gt;To ignore only the next copy, click on the menu icon with &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;SHIFT (⇧)&lt;/kbd&gt; pressed.&lt;/li&gt; 
 &lt;li&gt;To customize the behavior, check &quot;Preferences…&quot; window, or press &lt;kbd&gt;COMMAND (⌘)&lt;/kbd&gt; + &lt;kbd&gt;,&lt;/kbd&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Advanced&lt;/h2&gt; 
&lt;h3&gt;Ignore Copied Items&lt;/h3&gt; 
&lt;p&gt;You can tell Maccy to ignore all copied items:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;defaults write org.p0deje.Maccy ignoreEvents true # default is false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is useful if you have some workflow for copying sensitive data. You can set &lt;code&gt;ignoreEvents&lt;/code&gt; to true, copy the data and set &lt;code&gt;ignoreEvents&lt;/code&gt; back to false.&lt;/p&gt; 
&lt;p&gt;You can also click the menu icon with &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; pressed. To ignore only the next copy, click with &lt;kbd&gt;OPTION (⌥)&lt;/kbd&gt; + &lt;kbd&gt;SHIFT (⇧)&lt;/kbd&gt; pressed.&lt;/p&gt; 
&lt;h3&gt;Ignore Custom Copy Types&lt;/h3&gt; 
&lt;p&gt;By default Maccy will ignore certain copy types that are considered to be confidential or temporary. The default list always include the following types:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;org.nspasteboard.TransientType&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;org.nspasteboard.ConcealedType&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;org.nspasteboard.AutoGeneratedType&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Also, default configuration includes the following types but they can be removed or overwritten:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;com.agilebits.onepassword&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;com.typeit4me.clipping&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;de.petermaurer.TransientPasteboardType&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Pasteboard generator type&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;net.antelle.keeweb&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can add additional custom types using settings. To find what custom types are used by an application, you can use free application &lt;a href=&quot;https://github.com/sindresorhus/Pasteboard-Viewer&quot;&gt;Pasteboard-Viewer&lt;/a&gt;. Simply download the application, open it, copy something from the application you want to ignore and look for any custom types in the left sidebar. &lt;a href=&quot;https://github.com/p0deje/Maccy/issues/125&quot;&gt;Here is an example of using this approach to ignore Adobe InDesign&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Speed up Clipboard Check Interval&lt;/h3&gt; 
&lt;p&gt;By default, Maccy checks clipboard every 500 ms, which should be enough for most users. If you want to speed it up, you can change it with &lt;code&gt;defaults&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;defaults write org.p0deje.Maccy clipboardCheckInterval 0.1 # 100 ms
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Why doesn&#39;t it paste when I select an item in history?&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Make sure you have &quot;Paste automatically&quot; enabled in Preferences.&lt;/li&gt; 
 &lt;li&gt;Make sure &quot;Maccy&quot; is added to System Settings -&amp;gt; Privacy &amp;amp; Security -&amp;gt; Accessibility.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;When assigning a hotkey to open Maccy, it says that this hotkey is already used in some system setting.&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open System settings -&amp;gt; Keyboard -&amp;gt; Keyboard Shortcuts.&lt;/li&gt; 
 &lt;li&gt;Find where that hotkey is used. For example, &quot;Convert text to simplified Chinese&quot; is under Services -&amp;gt; Text.&lt;/li&gt; 
 &lt;li&gt;Disable that hotkey or remove assigned combination (&lt;a href=&quot;https://github.com/p0deje/Maccy/assets/576152/446719e6-c3e5-4eb0-95fb-5a811066487f&quot;&gt;screenshot&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Restart Maccy.&lt;/li&gt; 
 &lt;li&gt;Assign hotkey in Maccy settings.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;How to restore hidden footer?&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Maccy window.&lt;/li&gt; 
 &lt;li&gt;Press &lt;kbd&gt;COMMAND (⌘)&lt;/kbd&gt; + &lt;kbd&gt;,&lt;/kbd&gt; to open preferences.&lt;/li&gt; 
 &lt;li&gt;Enable footer in Appearance section.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If for some reason it doesn&#39;t work, run the following command in Terminal.app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;defaults write org.p0deje.Maccy showFooter 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How to ignore copies from &lt;a href=&quot;https://support.apple.com/en-us/102430&quot;&gt;Universal Clipboard&lt;/a&gt;?&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Preferences -&amp;gt; Ignore -&amp;gt; Pasteboard Types.&lt;/li&gt; 
 &lt;li&gt;Add &lt;code&gt;com.apple.is-remote-clipboard&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;The translations are hosted in &lt;a href=&quot;https://hosted.weblate.org/engage/maccy/&quot;&gt;Weblate&lt;/a&gt;. You can use it to suggest changes in translations and localize the application to a new language.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hosted.weblate.org/engage/maccy/&quot;&gt;&lt;img src=&quot;https://hosted.weblate.org/widget/maccy/multi-auto.svg?sanitize=true&quot; alt=&quot;Translation status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;p&gt;There are dozens of similar applications out there, so why build another? Over the past years since I moved from Linux to macOS, I struggled to find a clipboard manager that is as free and simple as &lt;a href=&quot;http://parcellite.sourceforge.net&quot;&gt;Parcellite&lt;/a&gt;, but I couldn&#39;t. So I&#39;ve decided to build one.&lt;/p&gt; 
&lt;p&gt;Also, I wanted to learn Swift and get acquainted with macOS application development.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/p0deje/Maccy/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>onevcat/Kingfisher</title>
      <link>https://github.com/onevcat/Kingfisher</link>
      <description>&lt;p&gt;A lightweight, pure-Swift library for downloading and caching images from the web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/onevcat/Kingfisher/master/images/logo.png&quot; alt=&quot;Kingfisher&quot; title=&quot;Kingfisher&quot; width=&quot;557&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/onevcat/Kingfisher/actions?query=workflow%3Abuild&quot;&gt;&lt;img src=&quot;https://github.com/onevcat/kingfisher/workflows/build/badge.svg?branch=master&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/onevcat/Kingfisher/master/documentation/kingfisher&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Swift-Doc-DE5C43.svg?style=flat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cocoapods.org/pods/Kingfisher&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/tag/onevcat/Kingfisher.svg?color=blue&amp;amp;include_prereleases=&amp;amp;sort=semver&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://swift.org/package-manager/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/SPM-supported-DE5C43.svg?style=flat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/onevcat/Kingfisher/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-black&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Kingfisher is a powerful, pure-Swift library for downloading and caching images from the web. It provides you a chance to use a pure-Swift way to work with remote images in your next app.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Asynchronous image downloading and caching.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Loading image from either &lt;code&gt;URLSession&lt;/code&gt;-based networking or local provided data.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Useful image processors and filters provided.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Multiple-layer hybrid cache for both memory and disk.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Fine control on cache behavior. Customizable expiration date and size limit.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Cancelable downloading and auto-reusing previous downloaded content to improve performance.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Independent components. Use the downloader, caching system, and image processors separately as you need.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Prefetching images and showing them from the cache to boost your app.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Extensions for &lt;code&gt;UIImageView&lt;/code&gt;, &lt;code&gt;NSImageView&lt;/code&gt;, &lt;code&gt;NSButton&lt;/code&gt;, &lt;code&gt;UIButton&lt;/code&gt;, &lt;code&gt;NSTextAttachment&lt;/code&gt;, &lt;code&gt;WKInterfaceImage&lt;/code&gt;, &lt;code&gt;TVMonogramView&lt;/code&gt; and &lt;code&gt;CPListItem&lt;/code&gt; to directly set an image from a URL.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Built-in transition animation when setting images.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Customizable placeholder and indicator while loading images.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Extensible image processing and image format easily.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Low Data Mode support.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; SwiftUI support.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Swift 6 &amp;amp; Swift Concurrency (strict mode) prepared.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Load &amp;amp; cache for Live Photo.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Kingfisher 101&lt;/h3&gt; 
&lt;p&gt;The simplest use-case is setting an image to an image view with the &lt;code&gt;UIImageView&lt;/code&gt; extension:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;import Kingfisher

let url = URL(string: &quot;https://example.com/image.png&quot;)
imageView.kf.setImage(with: url)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Kingfisher will download the image from &lt;code&gt;url&lt;/code&gt;, send it to both memory cache and disk cache, and display it in &lt;code&gt;imageView&lt;/code&gt;. When you set it with the same URL later, the image will be retrieved from the cache and shown immediately.&lt;/p&gt; 
&lt;p&gt;It also works if you use SwiftUI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;var body: some View {
    KFImage(URL(string: &quot;https://example.com/image.png&quot;)!)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;A More Advanced Example&lt;/h3&gt; 
&lt;p&gt;With the powerful options, you can do hard tasks with Kingfisher in a simple way. For example, the code below:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Downloads a high-resolution image.&lt;/li&gt; 
 &lt;li&gt;Downsamples it to match the image view size.&lt;/li&gt; 
 &lt;li&gt;Makes it round cornered with a given radius.&lt;/li&gt; 
 &lt;li&gt;Shows a system indicator and a placeholder image while downloading.&lt;/li&gt; 
 &lt;li&gt;When prepared, it animates the small thumbnail image with a &quot;fade in&quot; effect.&lt;/li&gt; 
 &lt;li&gt;The original large image is also cached to disk for later use, to get rid of downloading it again in a detail view.&lt;/li&gt; 
 &lt;li&gt;A console log is printed when the task finishes, either for success or failure.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;let url = URL(string: &quot;https://example.com/high_resolution_image.png&quot;)
let processor = DownsamplingImageProcessor(size: imageView.bounds.size)
             |&amp;gt; RoundCornerImageProcessor(cornerRadius: 20)
imageView.kf.indicatorType = .activity
imageView.kf.setImage(
    with: url,
    placeholder: UIImage(named: &quot;placeholderImage&quot;),
    options: [
        .processor(processor),
        .scaleFactor(UIScreen.main.scale),
        .transition(.fade(1)),
        .cacheOriginalImage
    ])
{
    result in
    switch result {
    case .success(let value):
        print(&quot;Task done for: \(value.source.url?.absoluteString ?? &quot;&quot;)&quot;)
    case .failure(let error):
        print(&quot;Job failed: \(error.localizedDescription)&quot;)
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is a common situation I can meet in my daily work. Think about how many lines you need to write without Kingfisher!&lt;/p&gt; 
&lt;h3&gt;Method Chaining&lt;/h3&gt; 
&lt;p&gt;If you are not a fan of the &lt;code&gt;kf&lt;/code&gt; extension, you can also prefer to use the &lt;code&gt;KF&lt;/code&gt; builder and chained the method invocations. The code below is doing the same thing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// Use `kf` extension
imageView.kf.setImage(
    with: url,
    placeholder: placeholderImage,
    options: [
        .processor(processor),
        .loadDiskFileSynchronously,
        .cacheOriginalImage,
        .transition(.fade(0.25)),
        .lowDataMode(.network(lowResolutionURL))
    ],
    progressBlock: { receivedSize, totalSize in
        // Progress updated
    },
    completionHandler: { result in
        // Done
    }
)

// Use `KF` builder
KF.url(url)
  .placeholder(placeholderImage)
  .setProcessor(processor)
  .loadDiskFileSynchronously()
  .cacheMemoryOnly()
  .fade(duration: 0.25)
  .lowDataModeSource(.network(lowResolutionURL))
  .onProgress { receivedSize, totalSize in  }
  .onSuccess { result in  }
  .onFailure { error in }
  .set(to: imageView)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And even better, if later you want to switch to SwiftUI, just change the &lt;code&gt;KF&lt;/code&gt; above to &lt;code&gt;KFImage&lt;/code&gt;, and you&#39;ve done:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;struct ContentView: View {
    var body: some View {
        KFImage.url(url)
          .placeholder(placeholderImage)
          .setProcessor(processor)
          .loadDiskFileSynchronously()
          .cacheMemoryOnly()
          .fade(duration: 0.25)
          .lowDataModeSource(.network(lowResolutionURL))
          .onProgress { receivedSize, totalSize in  }
          .onSuccess { result in  }
          .onFailure { error in }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;h3&gt;Kingfisher 8.0&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;(UIKit/AppKit) iOS 13.0+ / macOS 10.15+ / tvOS 13.0+ / watchOS 6.0+ / visionOS 1.0+&lt;/li&gt; 
 &lt;li&gt;(SwiftUI) iOS 14.0+ / macOS 11.0+ / tvOS 14.0+ / watchOS 7.0+ / visionOS 1.0+&lt;/li&gt; 
 &lt;li&gt;Swift 5.9+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Kingfisher 7.0&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;(UIKit/AppKit) iOS 12.0+ / macOS 10.14+ / tvOS 12.0+ / watchOS 5.0+ / visionOS 1.0+&lt;/li&gt; 
 &lt;li&gt;(SwiftUI) iOS 14.0+ / macOS 11.0+ / tvOS 14.0+ / watchOS 7.0+ / visionOS 1.0+&lt;/li&gt; 
 &lt;li&gt;Swift 5.0+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;Refer to one of the following tutorials to install and use the framework:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/onevcat/kingfisher/master/tutorials/kingfisher/gettingstarteduikit&quot;&gt;UIKit Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/onevcat/kingfisher/master/tutorials/kingfisher/gettingstartedswiftui&quot;&gt;SwiftUI Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Alternatively, you can follow either of the methods below.&lt;/p&gt; 
&lt;h4&gt;Swift Package Manager&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;File &amp;gt; Swift Packages &amp;gt; Add Package Dependency&lt;/li&gt; 
 &lt;li&gt;Add &lt;code&gt;https://github.com/onevcat/Kingfisher.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Select &quot;Up to Next Major&quot; with &quot;8.0.0&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;CocoaPods&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;source &#39;https://github.com/CocoaPods/Specs.git&#39;
platform :ios, &#39;13.0&#39;
use_frameworks!

target &#39;MyApp&#39; do
  pod &#39;Kingfisher&#39;, &#39;~&amp;gt; 8.0&#39;
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Pre-built Framework&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open the release page, download the latest version of Kingfisher from the assets section.&lt;/li&gt; 
 &lt;li&gt;Drag the &lt;code&gt;Kingfisher.xcframework&lt;/code&gt; into your project and add it to the target (usually the app target).&lt;/li&gt; 
 &lt;li&gt;Select your target, in the &quot;General&quot; Tab, find the &quot;Frameworks, Libraries, and Embedded Content&quot; section, set the &lt;code&gt;Embed Without Signing&lt;/code&gt; to Kingfisher.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Check the documentation and tutorials:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher&quot;&gt;Documentation Home&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/gettingstarted&quot;&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/onevcat/kingfisher/master/tutorials/kingfisher/gettingstarteduikit&quot;&gt;UIKit Tutorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/onevcat/kingfisher/master/tutorials/kingfisher/gettingstartedswiftui&quot;&gt;SwiftUI Tutorial&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/commontasks&quot;&gt;Common Tasks - General&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/commontasks_cache&quot;&gt;Common Tasks - Cache&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/commontasks_downloader&quot;&gt;Common Tasks - Downloader&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/commontasks_processor&quot;&gt;Common tasks - Processor&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Migrating&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/migration-to-8&quot;&gt;Kingfisher 8.0 Migration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onevcat/Kingfisher/wiki/Kingfisher-7.0-Migration-Guide&quot;&gt;Kingfisher 7.0 Migration&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are using an even earlier version, see the guides below to know the steps for migrating.&lt;/p&gt; 
&lt;h2&gt;Other&lt;/h2&gt; 
&lt;h3&gt;Future of Kingfisher&lt;/h3&gt; 
&lt;p&gt;I want to keep Kingfisher lightweight. This framework focuses on providing a simple solution for downloading and caching images. This doesn’t mean the framework can’t be improved. Kingfisher is far from perfect, so necessary and useful updates will be made to make it better.&lt;/p&gt; 
&lt;h3&gt;Developments and Tests&lt;/h3&gt; 
&lt;p&gt;Any contributing and pull requests are warmly welcome. However, before you plan to implement some features or try to fix an uncertain issue, it is recommended to open a discussion first. It would be appreciated if your pull requests could build with all tests green. :)&lt;/p&gt; 
&lt;h3&gt;About the logo&lt;/h3&gt; 
&lt;p&gt;The logo of Kingfisher is inspired by &lt;a href=&quot;http://en.wikipedia.org/wiki/Tangram&quot;&gt;Tangram (七巧板)&lt;/a&gt;, a dissection puzzle consisting of seven flat shapes from China. I believe she&#39;s a kingfisher bird instead of a swift, but someone insists that she is a pigeon. I guess I should give her a name. Hi, guys, do you have any suggestions?&lt;/p&gt; 
&lt;h3&gt;Contact&lt;/h3&gt; 
&lt;p&gt;Follow and contact me on &lt;a href=&quot;http://twitter.com/onevcat&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;http://weibo.com/onevcat&quot;&gt;Sina Weibo&lt;/a&gt;. If you find an issue, &lt;a href=&quot;https://github.com/onevcat/Kingfisher/issues/new&quot;&gt;open a ticket&lt;/a&gt;. Pull requests are warmly welcome as well.&lt;/p&gt; 
&lt;h2&gt;Backers &amp;amp; Sponsors&lt;/h2&gt; 
&lt;p&gt;Open-source projects cannot live long without your help. If you find Kingfisher to be useful, please consider supporting this project by becoming a sponsor. Your user icon or company logo shows up &lt;a href=&quot;https://onevcat.com/tabs/about/&quot;&gt;on my blog&lt;/a&gt; with a link to your home page.&lt;/p&gt; 
&lt;p&gt;Become a sponsor through &lt;a href=&quot;https://github.com/sponsors/onevcat&quot;&gt;GitHub Sponsors&lt;/a&gt;. &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;Special thanks to:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://img.ly/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1812216/106253726-271ed000-6218-11eb-98e0-c9c681925770.png&quot; alt=&quot;imgly&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.emergetools.com&quot;&gt;&lt;img src=&quot;https://github-production-user-asset-6210df.s3.amazonaws.com/1019875/254794187-d44f6f50-993f-42e3-b79c-960f69c4adc1.png&quot; alt=&quot;emergetools&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Kingfisher is released under the MIT license. See LICENSE for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tuist/tuist</title>
      <link>https://github.com/tuist/tuist</link>
      <description>&lt;p&gt;Tuist&#39;s CLI&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;div&gt; 
  &lt;a href=&quot;https://tuist.io&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/header.jpg&quot; alt=&quot;header&quot;&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;img src=&quot;https://api.codemagic.io/apps/65ca555c190cfbe9f5dd792f/unit_tests/status_badge.svg?sanitize=true&quot; alt=&quot;CI status&quot;&gt; 
 &lt;img src=&quot;https://img.shields.io/github/commit-activity/w/tuist/tuist?style=flat-square&amp;amp;label=commits&quot; alt=&quot;Commit Activity&quot;&gt; 
 &lt;a href=&quot;https://fosstodon.org/@tuist&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tuist-gray.svg?logo=mastodon&amp;amp;logoColor=f5f5f5&quot; alt=&quot;Mastodon badge&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://bsky.app/profile/tuist.dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tuist-gray.svg?logo=bluesky&quot; alt=&quot;Bluesky badge&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://join.slack.com/t/tuistapp/shared_invite/zt-1lqw355mp-zElRwLeoZ2EQsgGEkyaFgg&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tuist-gray.svg?logo=slack&quot; alt=&quot;Slack Workspace&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://t.me/tuist&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tuist-gray.svg?logo=telegram&quot; alt=&quot;Slack Workspace&quot;&gt;&lt;/a&gt; 
 &lt;div&gt; 
  &lt;a href=&quot;https://cal.com/team/tuist/cloud?utm_source=banner&amp;amp;utm_campaign=oss&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Book us with Cal.com&quot; src=&quot;https://cal.com/book-with-cal-dark.svg?sanitize=true&quot; width=&quot;150&quot;&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;a title=&quot;Crowdin&quot; target=&quot;_blank&quot; href=&quot;https://crowdin.com/project/tuist-documentation&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/tuist-documentation/localized.svg?sanitize=true&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;🕺 What&#39;s Tuist&lt;/h2&gt; 
&lt;p&gt;Tuist is a command line tool that leverages &lt;strong&gt;&lt;em&gt;project generation&lt;/em&gt;&lt;/strong&gt; to abstract intricacies of Xcode projects, and uses it as a foundation to help teams &lt;strong&gt;&lt;em&gt;maintain&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;optimize&lt;/em&gt;&lt;/strong&gt; their large modular projects.&lt;/p&gt; 
&lt;p&gt;It&#39;s open source and written in Swift.&lt;/p&gt; 
&lt;h2&gt;⬇️ Install&lt;/h2&gt; 
&lt;p&gt;The recommended installation method is to &lt;a href=&quot;https://mise.jdx.dev/getting-started.html#quickstart&quot;&gt;install mise&lt;/a&gt; and then run &lt;code&gt;mise install tuist&lt;/code&gt; to install Tuist.&lt;/p&gt; 
&lt;p&gt;You can check out &lt;a href=&quot;https://docs.tuist.io/guides/quick-start/install-tuist&quot;&gt;the documentation&lt;/a&gt; to learn more about the rationale behind our installation approach and alternative approaches.&lt;/p&gt; 
&lt;h2&gt;🌀 Bootstrap your first project&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;tuist init --platform ios
tuist edit # Customize your project manifest
tuist generate # Generates Xcode project &amp;amp; workspace
tuist build # Builds your project
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://docs.tuist.io/guides/start/new-project&quot;&gt;the project &quot;Create a new project&quot; guide&lt;/a&gt; to learn more about Tuist and all its features.&lt;/p&gt; 
&lt;h2&gt;📝 Documentation&lt;/h2&gt; 
&lt;p&gt;Do you want to know more about what Tuist can offer you? Or perhaps want to contribute to the project and you need a starting point?&lt;/p&gt; 
&lt;p&gt;You can check out &lt;a href=&quot;https://docs.tuist.io&quot;&gt;the project documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;🔬 Sample projects&lt;/h3&gt; 
&lt;p&gt;You can find some sample projects in the &lt;a href=&quot;https://raw.githubusercontent.com/tuist/tuist/main/fixtures&quot;&gt;fixtures folder&lt;/a&gt; or the &lt;a href=&quot;https://github.com/tuist/awesome-tuist&quot;&gt;awesome Tuist repo&lt;/a&gt;! 🎉&lt;/p&gt; 
&lt;h2&gt;✅ CI Sponsor&lt;/h2&gt; 
&lt;a href=&quot;https://www.codemagic.io?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_term=tuist&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;140&quot; src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/codemagic.svg?sanitize=true&quot; alt=&quot;codemagic_logo&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href=&quot;https://codemagic.io&quot;&gt;Codemagic&lt;/a&gt;, a CI/CD tool for building world-class mobile apps, supports the development of Tuist by providing fast and reliable CI environments.&lt;/p&gt; 
&lt;h2&gt;💰 Sponsors&lt;/h2&gt; 
&lt;p&gt;The financial sustainability of the project is possible thanks to the ongoing contributions from our &lt;a href=&quot;https://github.com/sponsors/tuist&quot;&gt;GitHub Sponsors&lt;/a&gt; and &lt;a href=&quot;https://opencollective.com/tuistapp&quot;&gt;Open Collective Backers&lt;/a&gt;. From them, we&#39;d like to give a special mention to the following sponsors:&lt;/p&gt; 
&lt;h3&gt;🥇 Gold Sponsors&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;30%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://monday.com?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;&amp;amp;utm_term=tuist&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;300&quot; src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/monday.com.svg?sanitize=true&quot; alt=&quot;mondaycom_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://monday.com?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;&amp;amp;utm_term=tuist&quot;&gt;Monday.com&lt;/a&gt; is a cloud-based work operating system (Work OS) that empowers teams to run projects and workflows with confidence. It&#39;s a versatile platform that combines features of project management, workflow automation, and team collaboration to streamline the way teams work together.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;30%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://lapse.com?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;&amp;amp;utm_term=tuist&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;200&quot; src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/lapse.svg?sanitize=true&quot; alt=&quot;lapse_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://lapse.com?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;&amp;amp;utm_term=tuist&quot;&gt;Lapse&lt;/a&gt; is an app designed to reclaim how we take and share memories. A camera for living in the moment and a private photo journal for friends, not followers.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;🥈 Silver sponsors&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;30%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://getstream.io/chat/sdk/ios/?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Jan2022_SwiftSDK&amp;amp;utm_term=tuist&quot; target=&quot;_blank&quot;&gt; 
     &lt;picture&gt; 
      &lt;source srcset=&quot;assets/companies/stream-darkmode.png&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt; 
      &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/stream.png&quot; alt=&quot;stream_logo&quot;&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://getstream.io/chat/sdk/ios/?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Jan2022_SwiftSDK&amp;amp;utm_term=tuist&quot;&gt;Stream&lt;/a&gt; helps build scalable in-app chat or activity feeds in days. Product teams trust Stream to launch faster, iterate more often, and ship a better user experience.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;30%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://runway.team?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_term=tuist&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;140&quot; src=&quot;https://global-uploads.webflow.com/5edfa38a1bd219267bdf69b7/60959952ed332b8e9613a0c4_wordmark-runway-black.svg?sanitize=true&quot; alt=&quot;runway_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.runway.team&quot;&gt;Runway&lt;/a&gt; streamlines collaboration and automation for mobile app releases, from kickoff to rollout.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;30%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.emergetools.com?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_term=tuist&quot; target=&quot;_blank&quot;&gt; 
     &lt;picture&gt; 
      &lt;source srcset=&quot;assets/companies/emergetools-darkmode.svg&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt; 
      &lt;img width=&quot;140&quot; src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/emergetools.svg?sanitize=true&quot; alt=&quot;emerge_logo&quot;&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.emergetools.com&quot;&gt;Emerge Tools&lt;/a&gt; is a suite of revolutionary products designed to supercharge mobile apps and the teams that build them.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;🥉 Bronze sponsors&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://macpaw.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/macpaw.png&quot; alt=&quot;macpaw_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://asana.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/asana.png&quot; alt=&quot;asana_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;💪 Companies using Tuist&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://play.tv2.no&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/tv2.svg?sanitize=true&quot; alt=&quot;tv2_logo&quot; height=&quot;75&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.depop.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/depop.svg?sanitize=true&quot; alt=&quot;depop_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://bendingspoons.com&quot; target=&quot;_blank&quot;&gt; 
     &lt;picture&gt; 
      &lt;source srcset=&quot;assets/companies/bendingspoons-darkmode.png&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt; 
      &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/bendingspoons.png&quot; alt=&quot;bendingspoons_logo&quot;&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://globekeeper.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/globekeeper.png&quot; alt=&quot;globekeeper_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://getyourguide.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/getyourguide.png&quot; alt=&quot;getyourguide_logo&quot; height=&quot;75&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://emplate.it&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/emplate.svg?sanitize=true&quot; alt=&quot;emplate_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.trendyol.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/Trendyol.png&quot; alt=&quot;trendyol_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://angrynerds.co&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/angrynerds.svg?sanitize=true&quot; alt=&quot;angrynerds_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.compass.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/compass.png&quot; alt=&quot;compass_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.wefox.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/wefox.png&quot; alt=&quot;wefox_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.hedvig.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/hedvig.svg?sanitize=true&quot; alt=&quot;hedvig_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.takeoutcentral.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/takeoutcentral.svg?sanitize=true&quot; alt=&quot;takeoutcentral_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.olx.com.br&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/olx.png&quot; alt=&quot;olx_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.justeattakeaway.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/justeattakeaway.svg?sanitize=true&quot; alt=&quot;justeattakeaway_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://qnips.io&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/qnips.svg?sanitize=true&quot; alt=&quot;qnips_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.telepass.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/telepass.svg?sanitize=true&quot; alt=&quot;telepass_logo&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.crunchyroll.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/crunchyroll.svg?sanitize=true&quot; alt=&quot;crunchyroll_logo&quot; height=&quot;75&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://altel.kz&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/altel.svg?sanitize=true&quot; alt=&quot;altel_logo&quot; height=&quot;75&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://tele2.kz&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/tele2.svg?sanitize=true&quot; alt=&quot;altel_logo&quot; height=&quot;75&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://izi.me/kz&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/izi.svg?sanitize=true&quot; alt=&quot;izi_logo&quot; height=&quot;75&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://wise.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/wise.png&quot; alt=&quot;wise_logo&quot; height=&quot;75&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://zapis.kz/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/zapis.svg?sanitize=true&quot; alt=&quot;wise_logo&quot; height=&quot;75&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🙇‍ ️Supported by great companies&lt;/h2&gt; 
&lt;p&gt;Great companies support the project by giving us access to their service through an open-source program.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/1Password.png&quot; alt=&quot;1password_logo&quot; height=&quot;75&quot;&gt; &lt;/td&gt; 
   &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt; &lt;img src=&quot;https://images.typeform.com/images/QKuaAssrFCq7/image/default&quot; alt=&quot;bugsnag_logo&quot;&gt; &lt;/td&gt; 
   &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/cal-com.svg?sanitize=true&quot; alt=&quot;calcom_logo&quot;&gt; &lt;/td&gt; 
   &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/codemagic.svg?sanitize=true&quot; alt=&quot;codemagic_logo&quot;&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🧑‍💻 Want to contribute?&lt;/h2&gt; 
&lt;p&gt;You can use our &lt;a href=&quot;https://docs.tuist.io/documentation/tuist/get-started-as-contributor&quot;&gt;contribution docs&lt;/a&gt; to get started. If you don&#39;t have a specific issue in mind, we are more than happy to help you, just ask for help in a given issue or on our &lt;a href=&quot;https://join.slack.com/t/tuistapp/shared_invite/zt-1lqw355mp-zElRwLeoZ2EQsgGEkyaFgg&quot;&gt;Slack&lt;/a&gt;. You can find good issues for first-time contributors &lt;a href=&quot;https://github.com/tuist/tuist/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;here&lt;/a&gt;. We also offer &lt;a href=&quot;https://console.algora.io/org/tuist&quot;&gt;issue bounties&lt;/a&gt; for some highly-valued issues.&lt;/p&gt; 
&lt;h2&gt;✨ Core Team&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pepicrft&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/663605?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pedro Piñera&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/fortmarek&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/9371695?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marek Fořt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.matrixprojects.net&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/11914919?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/danyf90&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2794031?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniele Formichelli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/waltflanagan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/398293?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mike Simons&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;🚀 Core Alumni&lt;/h2&gt; 
&lt;p&gt;The following people were once core contributors helping steer the project in the right direction and ensuring we have a reliable foundation we can build new features upon:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://natanrolnik.me&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1164565?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Natan Rolnik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/andreacipriani&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/536929?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrea Cipriani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ollieatkinson&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1382565?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Oliver Atkinson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/RomainBoulay&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/169323?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Romain Boulay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/laxmorek&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/4774319?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kamil Harasimowicz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.luispadron.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13840545?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luis Padron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/adellibovi&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/67916?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alfredo Delli Bovi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;✨ Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people:&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kalkwarf&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1033839?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kalkwarf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/fortmarek&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/9371695?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marek Fořt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.matrixprojects.net&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/11914919?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://natanrolnik.me&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1164565?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Natan Rolnik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/svastven&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/42235915?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;svastven&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://bhuemer.github.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1212480?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bernhard Huemer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://djankowski.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/10795657?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Jankowski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/facumenzella&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1125252?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Facundo Menzella&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/eito&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/775643?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eric Ito&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/laxmorek&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/4774319?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kamil Harasimowicz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/olejnjak&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3148214?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jakub Olejník&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/lakpa&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/389328?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ldindu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/gtsifrikas&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/8904378?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;George Tsifrikas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/yurapriv&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7814127?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Privezentsev Yura&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://ferologics.github.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5576161?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://heberti.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/103670?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Heberti Almeida&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://benscheirman.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/59140?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ben Scheirman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://jsorge.net&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/2585841?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jared Sorge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://joeblau.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1218847?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joe Blau&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://twitter.com/dchavezlive&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2475932?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Chavez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/%D1%80%D0%BE%D0%BC%D0%B0%D0%BD-%D0%BF%D0%BE%D0%B4%D1%8B%D0%BC%D0%BE%D0%B2-72338ab0/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10789692?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Roman Podymov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/marcinreliga-fn&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/76949651?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marcin Religa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/adellibovi&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/67916?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alfredo Delli Bovi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Jake-Prickett&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/26095410?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jake Prickett&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/danyf90&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2794031?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniele Formichelli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.facebook.com/PetrachkovSergey&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7995896?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergey Petrachkov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://jinuman.github.io/resume&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26243835?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jinwoo, Kim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/thedavidharris&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5666250?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Harris&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/DimaMishchenko&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25247301?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmytro Mishchenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.sampettersson.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5459507?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sam Pettersson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.joshholtz.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/401294?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Josh Holtz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://jierong.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7414906?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jierong Li&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://twitter.com/freak4pc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/605076?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shai Mishali&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://twitter.com/FranzJBusch&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3491887?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Franz Busch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/tiarnann&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10522081?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tíarnán McGrath&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/softmaxsg&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3723817?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vitaly Chupryk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/rmnblm&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5942764?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Roman Blum&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://nanotek.me&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7265334?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Giovanni Filaferro&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://twitter.com/tovkal&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5960675?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrés Pizá Bückmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://coutinho.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17842860?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gabriel Coutinho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://medium.com/@riccardocipolleschi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11162307?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Riccardo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/bolismauro&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/771999?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mauro Bolis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://twitter.com/iteractive_man&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/461805?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Weishapl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/users/1878594/swiftycruz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2609775?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cruz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/svenmuennich&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1932115?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sven Münnich&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/santi-d&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/993826?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Santiago A. Delgado&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://wojciechkulik.pl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3128467?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wojciech Kulik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/iainsmith&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/993745?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Iain Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/havebeenfitz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/31866271?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Max Kraev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mstfy&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5105861?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mustafa Yusuf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://twitter.com/danielbarden&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/104456?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Barden&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/zzzkk&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12541603?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zofia Kulus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://randombits.org/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3589315?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Peterson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://bandism.net/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/22633385?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ikko Ashimine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/setoelkahfi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1797197?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Seto Elkahfi / 塞托·埃尔卡菲&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://apps4everyone.at&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1915802?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;apps4everyone&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/LorDisturbia&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12445776?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lorenzo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/DarkoDamjanovic&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11902775?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Darko Damjanovic&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://twitter.com/MarvinNazari&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/926772?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marvin Nazari&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://twitter.com/codeOfRobin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5009041?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Robin Malhotra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/astromonkee&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44421303?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Astromonkee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ezraberch&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/49635435?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ezraberch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/cconstable&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/564781?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Christopher Constable&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/neakor&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1827517?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yi Wang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.mustafadur.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/971530?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mustafa Dur&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/lucabartoletti&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/838925?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luca Bartoletti&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sujata23&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1849089?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sujata Chakraborty&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.viber.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5096762?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pavel Trafimuk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://alexsilva.dev/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/633535?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alejandro Silva Fernández&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.jakeadams.co&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3605966?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jake Adams&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/wattson12&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1217873?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sam Watts&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://erkekin.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/701481?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Erk Ekin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/morozkin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16591888?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Denis Morozov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/orbitekk&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4222449?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;orbitekk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://blog.naver.com/wogus3602&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46857148?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Park Jae Hyun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/regularberry&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/565192?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sean Berry&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://hisaac.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/923876?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Isaac Halvorson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mohitsaxenaknoldus&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/76725454?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mohit Saxena&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mikchmie&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15248837?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mikołaj Chmielewski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/takinwande&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4744429?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tope Akinwande&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.theinkedengineer.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13349066?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;TheInkedEngineer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://alexanderweiss.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12934015?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexander Weiß&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kyungpyoda&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44656036?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kyungpyoda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.villewitt.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/522544?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ville Witt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/paulsamuels&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/527091?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;paul.s&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/aniltaskiran&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16738729?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;aniltaskiran&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/unxavi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3817679?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Javier Vieira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/a-sarris&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/78614622?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aris Sarris&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://xxw9999.notion.site/xxw9999/iOS-8585a34b2886419586960c5c02b9d845&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/67373938?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kimxwan0319&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://florian.codes&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7734806?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Florian Fittschen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/jesus-mg-ios&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/85997060?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jesus (iOS)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/nicholaskim94&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7912759?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nicholas Kim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Smponias&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/14213855?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexandros Smponias&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mangofever&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/724343?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Go&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/AlbGarciam&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45308839?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alberto Garcia&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/andreascuderi/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8319309?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrea Scuderi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://dogoautilio.wordpress.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1487375?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Diogo Autilio&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/shahzadmajeed&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1209459?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shahzad Majeed&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/danrevah&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7808742?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/nivanchikov&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1830010?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nikita Ivanchikov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/xoxo-anastasi-xoxo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28875920?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anastasia Kazantseva&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://twitter.com/MonocularVision&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/429790?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael McGuire&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.michaelfcollins3.me&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/104274?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Collins&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/devyhan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45344633?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;YoHan Cho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/euriasb&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3721257?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;euriasb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/MontakOleg&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1800899?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;MontakOleg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/oozoofrog&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3011832?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;oozoofrog&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/MartinStrambach&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11178869?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Martin Strambach&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sh-a-n&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2219548?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sh-a-n&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://linkedin.com/in/batuhansaka&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9626765?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Batuhan Saka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://jcsoohwancho.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51935215?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SooHwanCho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.bouncingball.mobi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/798117?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gary Riches&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://mustiikhalil.github.io/mustiikhalil/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26250654?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mustiikhalil&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/serejahh&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2575555?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Serhii Butenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/petrukha-ivan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/93926277?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Petrukha Ivan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/lo1tuma&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/169170?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mathias Schreck&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Buju77&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/266349?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yen-Chia Lin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://coolmathgames.tech&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6877780?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mary &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/woohyunjin06&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/30452977?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hyunjin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kevin58332&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/47673410?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin Aguilar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://andrewroan.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9873566?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Roan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/ibrahim-oktay-518b4939/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36792481?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ibrahim oktay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/navartis&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7813723?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmitriy Kulakov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/woin2ee&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/81426024?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jaewon-Yun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/tatagrigory&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5187973?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;tatagrigory&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://linkedin.com/in/denilchungath&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/95201442?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Denil Chungath&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/victor-sarda/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6460866?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Victor Sarda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/tzxdtc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19767846?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;tzxdtc10&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ThiemeFM&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/143395823?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thieme&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Lilfaen&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/39119695?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Clemens Beck&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://macpaw.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/119268?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Paul Taykalo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/in4lio&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/976061?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vitaly Kravtsov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://dc.wtf&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/643865?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/baekteun&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/74440939?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;baegteun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://vcoutasso.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44986513?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vinícius Couto Tasso&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://blog.jihoon.me&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/68891494?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;안지훈&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/dxmvsh&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44325936?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dimash&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/danibachar&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6380777?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;danibachar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/dp221125&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10572119?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;한석호(MilKyo)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://medium.com/@haifengkaohaifengkao&amp;amp;usg=AOvVaw2_xG-ZLdBawBIyS7m-99RQ&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4080524?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hai Feng Kao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/anlaital-oura&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/133648611?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Antti Laitala&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/PushedCrayon&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37077444?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;PushedCrayon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://stefanomondino.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1691903?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stefano Mondino&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/leszko11&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23533452?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Łukasz Lech&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/costapombo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/31352351?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;costapombo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/isavynskyi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18377497?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ihor Savynskyi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kapitoshka438&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3232401?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eduard Miniakhmetov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/alexfilimon&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19904867?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexander Filimonov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/rofle100lvl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45801227?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gorbenko Roman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/lucas-paim/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7849484?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas Mrowskovsky Paim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://actuallytaylor.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/32944568?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Taylor Lineman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/nandodelauni&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1938501?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Miguel Ferrando&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/barredewe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19188911?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;BarredEwe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/chris-livefront&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/126101032?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chris Sessions&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ajkolean&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5394701?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andy Kolean&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Binlogo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7845507?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Binlogo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/DevilDimon&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10220441?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmitry Serov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://darrarski.pl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1384684?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dariusz Rybicki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/dansinclair25&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2573447?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dan Sinclair&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.kaioelfke.de&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1190948?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kai Oelfke&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/users/468724/inder-kumar-rathore&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/352443?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Inder&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kyounh12&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25301615?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kyounh12&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/alvar-bolt&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/72379847?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alvar Hansen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/barakwei&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5232161?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Barak Weiss&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/hiltonc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/470753?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hilton Campbell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/rgnns&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/811827?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gabriel Liévano&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/vijaytholpadi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1171868?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vijay Tholpadi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://withiosdeveloper.blogspot.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/27220138?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Minhoi Goo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sphanley&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1323769?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sam Hanley&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ahmdyasser&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/42544598?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ahmdyasser&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/minhaaan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/87178301?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;minhaaan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/TamarMilchtaich&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/49520876?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tamar Milchtaich Lavi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/rock88&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/323908?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrey K&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://2stable.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/69604865?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Vera&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.annalisemariottini.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/14299642?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Annalise Mariottini&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/gustn3965&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/48749182?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;HyunSu Park&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/vldalx&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13873200?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vladimir&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://rhysmorgan.co&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11096937?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rhys Morgan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/pierrerodgers&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/48193278?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;pierrerodgers&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/honghoker&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50417461?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;eunpyo hong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://medium.com/@dbstj169&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/65678579?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yunseo Kang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ilia3546&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4445510?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ilya Kharlamov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/brianvar&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/115399684?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;brianvar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/HossamYoussof&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6381926?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hossam Youssof&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/devMinseok&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51021614?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Minseok Kang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/alpanyukov&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36258478?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexander&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sanghyeok-kim&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/57667738?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Loyle&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/vvisionnn&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/24761186?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ydna&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://brucemcrooster.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/53529192?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Evan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.snipnotes.de&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5102728?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Felix Lisczyk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/lukaswuerzburger&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10812458?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lukas Würzburger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/GetToSet&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8158163?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ethan Wong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://tdkn.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1296540?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shun Tedokon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://connorricks.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13373737?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Connor Ricks&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://franciscodiaz.cl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/530662?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Francisco Diaz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Ethan-IS&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/140235921?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ethan Parker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</description>
    </item>
    
    <item>
      <title>tw93/MiaoYan</title>
      <link>https://github.com/tw93/MiaoYan</link>
      <description>&lt;p&gt;⛷ Lightweight Markdown app to help you write great sentences. ⛷ 轻灵的 Markdown 笔记本伴你写出妙言&lt;/p&gt;&lt;hr&gt;&lt;h4 align=&quot;right&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/tw93/MiaoYan/raw/master/README_EN.md&quot;&gt;English&lt;/a&gt;&lt;/strong&gt; | 中文 | &lt;strong&gt;&lt;a href=&quot;https://github.com/tw93/MiaoYan/raw/master/README_JP.md&quot;&gt;日本語&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://miaoyan.app/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://gw.alipayobjects.com/zos/k/t0/43.png&quot; width=&quot;138&quot;&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;妙言&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://twitter.com/HiTw93&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;twitter&quot; src=&quot;https://img.shields.io/badge/follow-Tw93-red?style=flat-square&amp;amp;logo=Twitter&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://t.me/+GclQS9ZnxyI2ODQ1&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;telegram&quot; src=&quot;https://img.shields.io/badge/chat-telegram-blueviolet?style=flat-square&amp;amp;logo=Telegram&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/tw93/MiaoYan/releases&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;GitHub downloads&quot; src=&quot;https://img.shields.io/github/downloads/tw93/MiaoYan/total.svg?style=flat-square&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/tw93/MiaoYan/commits&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;GitHub commit&quot; src=&quot;https://img.shields.io/github/commit-activity/m/tw93/MiaoYan?style=flat-square&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/tw93/MiaoYan/issues?q=is%3Aissue+is%3Aclosed&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;GitHub closed issues&quot; src=&quot;https://img.shields.io/github/issues-closed/tw93/MiaoYan.svg?style=flat-square&quot;&gt;&lt;/a&gt; 
 &lt;img alt=&quot;Minimum supported version&quot; src=&quot;https://img.shields.io/badge/macOS-10.15%2B-orange?style=flat-square&quot;&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt;
 轻灵的 Markdown 笔记本伴你写出妙言~
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/tw93/static/master/pic/miaoyan.gif&quot; width=&quot;900px&quot;&gt; 
&lt;h2&gt;特点&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🏂 &lt;strong&gt;妙&lt;/strong&gt;：纯本地使用、安全、语法高亮、黑暗模式、源文件保存、国际化、演示模式、&lt;a href=&quot;https://raw.githubusercontent.com/tw93/MiaoYan/master/#%E5%A6%99%E8%A8%80-ppt&quot;&gt;PPT 模式&lt;/a&gt;、单独编辑模式、文档自动排版、文档导出、内部跳转、图床、LaTeX、Mermaid、PlantUML、Markmap 脑图&lt;/li&gt; 
 &lt;li&gt;🎊 &lt;strong&gt;美&lt;/strong&gt;：极简的设计风格，文件夹 + 文件列表 + 编辑器方式 3 列模式&lt;/li&gt; 
 &lt;li&gt;🚄 &lt;strong&gt;快&lt;/strong&gt;：使用 Swift5 原生开发，相比 Web 套壳方式性能体验好&lt;/li&gt; 
 &lt;li&gt;🥛 &lt;strong&gt;简&lt;/strong&gt;：很轻巧，纯编辑器输入体验，众多快捷键助你快人一步&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;首次使用&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;从 &lt;a href=&quot;https://github.com/tw93/MiaoYan/releases&quot; target=&quot;_blank&quot;&gt;GitHub Releases&lt;/a&gt; 中 &lt;strong&gt;下载&lt;/strong&gt; 最新的 dmg 安装包，macOS Big Sur 及以上版本体验更好，如安装出现问题请参考 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/135948430&quot;&gt;文档&lt;/a&gt;，此外也支持从 &lt;code&gt;brew install miaoyan --cask&lt;/code&gt; 安装。&lt;/li&gt; 
 &lt;li&gt;可以在 iCloud 或根目录下创建一个 &lt;code&gt;MiaoYan&lt;/code&gt; 的文件夹，打开妙言的设置，将默认存储地址修改成这个。&lt;/li&gt; 
 &lt;li&gt;点击妙言左上角新增文件夹的图标，创建好自己的文档分类文件夹，就可以开始使用了。&lt;/li&gt; 
 &lt;li&gt;同样假如你不习惯默认的字体，可以在设置中修改成其他的正常字体。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;快捷键&lt;/h2&gt; 
&lt;h4&gt;窗口操作&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;command + 1&lt;/code&gt;：收起展开目录&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + 2&lt;/code&gt;：收起展开文档列表&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + 3&lt;/code&gt;：切换编辑和预览&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + 4&lt;/code&gt;：切换到演示模式&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + option + m&lt;/code&gt;：全局唤起/隐藏妙言&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;文档操作&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;command + n&lt;/code&gt;：新建文档&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + r&lt;/code&gt;：重命名文档&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + d&lt;/code&gt;：复制文档&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + o&lt;/code&gt;：单独打开文档&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + delete&lt;/code&gt;：删除文档&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + shift + n&lt;/code&gt;：新建文件夹&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + shift + l&lt;/code&gt;：自动排版&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + option + r&lt;/code&gt;：在 Finder 中显示&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + option + i&lt;/code&gt;：显示字数等文档属性&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + option + p&lt;/code&gt;：启动妙言 PPT 预览&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🏂 此外还有很多快捷键 👆🏻 👇🏻 👈🏻 👉🏻 等着爱折腾的你去寻找~&lt;/p&gt; 
&lt;h2&gt;妙言 PPT&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://gw.alipayobjects.com/zos/k/app2/123.gif&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/8736212/180579306-4f2504ee-8377-4d5c-b560-2d0d83ac12f6.gif&quot; width=&quot;100%&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;新朋友默认初始化会生成模版，如果是老朋友需升级到 1.0，可以 Copy &lt;a href=&quot;https://raw.githubusercontent.com/tw93/MiaoYan/master/Resources/Initial/%E5%A6%99%E8%A8%80%20PPT.md&quot;&gt;此文件&lt;/a&gt; 到妙言玩一玩。&lt;/li&gt; 
 &lt;li&gt;执行 &lt;code&gt;command + option + p&lt;/code&gt; 可以启动妙言 PPT 预览，也可以选中文档点击右键，选择 &lt;code&gt;妙言 PPT&lt;/code&gt; 打开。&lt;/li&gt; 
 &lt;li&gt;只有在有 &lt;code&gt;---&lt;/code&gt; 分隔符标志的文档中，才可启用 PPT 模式，演示过程中你可以 &lt;code&gt;回车键&lt;/code&gt; 预览演讲大纲，&lt;code&gt;ESC&lt;/code&gt; 键可退出 PPT 模式。&lt;/li&gt; 
 &lt;li&gt;你可以使用 HTML 来自定义效果，更多复杂的用法可以参考 &lt;a href=&quot;https://revealjs.com/markdown/&quot;&gt;Reveal&lt;/a&gt; 文档。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;为什么要做妙言&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;之前有尝试过众多的笔记应用，大学时期为知笔记、印象笔记，工作时候用过 Ulysses、Quiver、MWeb、Bear、Typora，种种原因，没有找到一个习惯的 Markdown 应用，才有了做妙言的想法。&lt;/li&gt; 
 &lt;li&gt;本职为前端开发，会一点 iOS 开发，爱折腾，借妙言来玩一下 Swift 以及独立产品，当做一个很愉快的事情。&lt;/li&gt; 
 &lt;li&gt;更多介绍可见 &lt;a href=&quot;https://tw93.fun/2022-09-09/miaoyan.html&quot;&gt;妙言 - 更适合工程师用的笔记应用&lt;/a&gt;，很欢迎交流和建议&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;支持&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;我有两只猫，假如觉得妙言让你生活更美好，可以给猫 &lt;a href=&quot;https://miaoyan.app/cats.html&quot; target=&quot;_blank&quot;&gt;喂罐头 🥩🍤&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;如果你喜欢妙言，可以在 Github Star，更欢迎 &lt;a href=&quot;https://twitter.com/intent/tweet?text=%23%E5%A6%99%E8%A8%80%20-%20%E4%B8%80%E4%B8%AA%E7%AE%80%E6%B4%81%E5%A5%BD%E7%9C%8B%E7%9A%84%E5%BC%80%E6%BA%90%E7%9A%84%20Mac%20%20Markdown%20%E7%BC%96%E8%BE%91%E5%99%A8%EF%BC%8C%E6%B2%A1%E6%9C%89%E4%BB%BB%E4%BD%95%E5%A4%9A%E4%BD%99%E7%9A%84%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%BD%BF%E7%94%A8%E5%8E%9F%E7%94%9F%20Swift%20%E5%BC%80%E5%8F%91%EF%BC%8C%E8%BD%BB%E9%87%8F%E6%80%A7%E8%83%BD%E9%AB%98%EF%BC%8C%E5%AE%89%E5%85%A8%E7%BA%AF%E6%9C%AC%E5%9C%B0%E4%BD%BF%E7%94%A8%EF%BC%8C%E5%85%B7%E5%A4%87%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE%E3%80%81%E9%BB%91%E6%9A%97%E6%A8%A1%E5%BC%8F%E3%80%81%E8%87%AA%E5%8A%A8%E6%A0%BC%E5%BC%8F%E5%8C%96%E3%80%81%E5%8D%95%E7%8B%AC%E7%BC%96%E8%BE%91%E3%80%81%E6%BC%94%E7%A4%BA%E6%A8%A1%E5%BC%8F%E3%80%81%E5%9B%BE%E5%BA%8A%E7%AD%89%E5%8A%9F%E8%83%BD%E3%80%82&amp;amp;url=https://github.com/tw93/MiaoYan&quot;&gt;推荐&lt;/a&gt; 给你志同道合的朋友使用。&lt;/li&gt; 
 &lt;li&gt;可以关注我的 &lt;a href=&quot;https://twitter.com/HiTw93&quot;&gt;Twitter&lt;/a&gt; 获取到最新的妙言更新消息，也欢迎加入 &lt;a href=&quot;https://t.me/+GclQS9ZnxyI2ODQ1&quot;&gt;Telegram&lt;/a&gt; 聊天群。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;感谢&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KristopherGBaker/libcmark_gfm&quot; target=&quot;_blank&quot;&gt;KristopherGBaker/libcmark_gfm&lt;/a&gt;：适用于 cmark-gfm 的 Swift 兼容框架&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raspu/Highlightr&quot; target=&quot;_blank&quot;&gt;raspu/Highlightr&lt;/a&gt;：语法高亮能力&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glushchenko/fsnotes&quot; target=&quot;_blank&quot;&gt;glushchenko/fsnotes&lt;/a&gt;：妙言部分初始化代码来源于此项目，很感谢作者&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lxgw/LxgwWenKai&quot; target=&quot;_blank&quot;&gt;lxgw/LxgwWenKai&lt;/a&gt;：一款漂亮的开源中文字体，妙言将其作为默认字体&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/michaelhenry/Prettier.swift&quot; target=&quot;_blank&quot;&gt;michaelhenry/Prettier.swift&lt;/a&gt;：妙言格式化能力升级成 Prettier 的思路来源&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hakimel/reveal.js&quot; target=&quot;_blank&quot;&gt;hakimel/reveal.js&lt;/a&gt;：妙言 PPT 底层渲染依赖此框架&lt;/li&gt; 
 &lt;li&gt;感谢 Vercel 给妙言 &lt;a href=&quot;https://miaoyan.app/&quot;&gt;官网&lt;/a&gt; 提供静态渲染能力&lt;br&gt; &lt;a href=&quot;https://vercel.com?utm_source=tw93&amp;amp;utm_campaign=oss&quot;&gt;&lt;img src=&quot;https://gw.alipayobjects.com/zos/k/wr/powered-by-vercel.svg?sanitize=true&quot; width=&quot;118px&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;协议&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;遵循 MIT 协议&lt;/li&gt; 
 &lt;li&gt;请自由地享受和参与开源&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>peripheryapp/periphery</title>
      <link>https://github.com/peripheryapp/periphery</link>
      <description>&lt;p&gt;A tool to identify unused code in Swift projects.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/assets/logo.png&quot; alt=&quot;Periphery&quot; height=&quot;60&quot;&gt; &lt;br&gt; Periphery &lt;/h1&gt; 
&lt;h4 align=&quot;center&quot;&gt;A tool to identify unused code in Swift projects.&lt;/h4&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;q&gt;&lt;i&gt;Now I am become Delete, the destroyer of codes.&lt;/i&gt;&lt;/q&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/peripheryapp/periphery/releases/latest&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/release/peripheryapp/periphery.svg?color=008DFF&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/platform-macOS%2520%7C%2520Linux-008DFF&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#sponsors-&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/sponsors/peripheryapp?logo=githubsponsors&amp;amp;color=db61a2&quot;&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#how-to-use&quot;&gt;How To Use&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#analysis&quot;&gt;Analysis&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#function-parameters&quot;&gt;Function Parameters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#protocols-1&quot;&gt;Protocols&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#enumerations&quot;&gt;Enumerations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#assign-only-properties&quot;&gt;Assign-only Properties&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#redundant-public-accessibility&quot;&gt;Redundant Public Accessibility&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#unused-imports&quot;&gt;Unused Imports&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#objective-c&quot;&gt;Objective-C&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#codable&quot;&gt;Codable&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#xctestcase&quot;&gt;XCTestCase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#interface-builder&quot;&gt;Interface Builder&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#comment-commands&quot;&gt;Comment Commands&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#xcode-integration&quot;&gt;Xcode Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#excluding-files&quot;&gt;Excluding Files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#build-systems&quot;&gt;Build Systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#platforms&quot;&gt;Platforms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#known-bugs&quot;&gt;Known Bugs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#sponsors-&quot;&gt;Sponsors&lt;/a&gt; &lt;img src=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/assets/sponsor.svg?sanitize=true&quot; alt=&quot;Sponsors&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;brew install periphery
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/yonaskolb/mint&quot;&gt;Mint&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;mint install peripheryapp/periphery
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://bazel.build/&quot;&gt;Bazel&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;bazel_dep(name = &quot;periphery&quot;, version = &quot;&amp;lt;version&amp;gt;&quot;, dev_dependency = True)
use_repo(use_extension(&quot;@periphery//bazel:generated.bzl&quot;, &quot;generated&quot;), &quot;periphery_generated&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#build-systems&quot;&gt;Bazel&lt;/a&gt; below for usage instructions.&lt;/p&gt; 
&lt;h2&gt;How To Use&lt;/h2&gt; 
&lt;h3&gt;The &lt;code&gt;scan&lt;/code&gt; Command&lt;/h3&gt; 
&lt;p&gt;The scan command is Periphery&#39;s primary function. To begin a guided setup, change to your project directory and run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;periphery scan --setup
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The guided setup will detect your project type and configure a few options. After answering a few questions, Periphery will print out the full scan command and execute it.&lt;/p&gt; 
&lt;p&gt;The guided setup is only intended for introductory purposes, once you are familiar with Periphery you can try some more advanced options, all of which can be seen with &lt;code&gt;periphery help scan&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To get the most from Periphery, it’s important to understand how it works. Periphery first builds your project; it does this to generate the “index store”. The index store contains detailed information about the declarations (class, struct, func, etc.) in your project and their references to other declarations. Using this store, Periphery builds an in-memory graph of the relational structure of your project, supplementing it with additional information obtained by parsing each source file. Next, the graph is mutated to make it more suitable for detecting unused code, e.g. marking your project’s entry points. Finally, the graph is traversed from its roots to identify unreferenced declarations.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;The index store only contains information about source files in the build targets compiled during the build phase. If a given class is only referenced in a source file that was not compiled, then Periphery will identify the class as unused. It’s important to ensure you build all the targets you expect to contain references. For an Xcode project, this is controlled using the &lt;code&gt;-—schemes&lt;/code&gt; option. For a Swift package, all targets are built automatically.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If your project consists of one or more standalone frameworks that do not also contain some kind of application that consumes their interfaces, you need to tell Periphery to assume that all public declarations are used with the &lt;code&gt;--retain-public&lt;/code&gt; option.&lt;/p&gt; 
&lt;p&gt;For projects that are mixed Objective-C &amp;amp; Swift, it&#39;s highly recommended you &lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#objective-c&quot;&gt;read about the implications&lt;/a&gt; this can have on your results.&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;Once you&#39;ve settled upon the appropriate options for your project, you may wish to persist them in a YAML configuration file. The simplest way to achieve this is to run Periphery with the &lt;code&gt;--verbose&lt;/code&gt; option. Near the beginning of the output you will see the &lt;code&gt;[configuration:begin]&lt;/code&gt; section with your configuration formatted as YAML below. Copy &amp;amp; paste the configuration into &lt;code&gt;.periphery.yml&lt;/code&gt; in the root of your project folder. You can now simply run &lt;code&gt;periphery scan&lt;/code&gt; and the YAML configuration will be used.&lt;/p&gt; 
&lt;h2&gt;Analysis&lt;/h2&gt; 
&lt;p&gt;The goal of Periphery is to report instances of unused &lt;em&gt;declarations&lt;/em&gt;. A declaration is a &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;struct&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;property&lt;/code&gt;, &lt;code&gt;constructor&lt;/code&gt;, &lt;code&gt;enum&lt;/code&gt;, &lt;code&gt;typealias&lt;/code&gt;, &lt;code&gt;associatedtype&lt;/code&gt;, etc. As you&#39;d expect, Periphery can identify simple unreferenced declarations, e.g. a &lt;code&gt;class&lt;/code&gt; that is no longer used anywhere in your codebase.&lt;/p&gt; 
&lt;p&gt;Periphery can also identify more advanced instances of unused code. The following section explains these in detail.&lt;/p&gt; 
&lt;h3&gt;Function Parameters&lt;/h3&gt; 
&lt;p&gt;Periphery can identify unused function parameters. Instances of unused parameters can also be identified in protocols and their conforming declarations, as well as parameters in overridden methods. Both of these scenarios are explained further below.&lt;/p&gt; 
&lt;h4&gt;Protocols&lt;/h4&gt; 
&lt;p&gt;An unused parameter of a protocol function will only be reported as unused if the parameter is also unused in all implementations.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;protocol Greeter {
    func greet(name: String)
    func farewell(name: String) // &#39;name&#39; is unused
}

class InformalGreeter: Greeter {
    func greet(name: String) {
        print(&quot;Sup &quot; + name + &quot;.&quot;)
    }

    func farewell(name: String) { // &#39;name&#39; is unused
      print(&quot;Cya.&quot;)
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;You can ignore all unused parameters from protocols and conforming functions with the &lt;code&gt;--retain-unused-protocol-func-params&lt;/code&gt; option.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Overrides&lt;/h4&gt; 
&lt;p&gt;Similar to protocols, parameters of overridden functions are only reported as unused if they&#39;re also unused in the base function and all overriding functions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;class BaseGreeter {
    func greet(name: String) {
        print(&quot;Hello.&quot;)
    }

    func farewell(name: String) { // &#39;name&#39; is unused
        print(&quot;Goodbye.&quot;)
    }
}

class InformalGreeter: BaseGreeter {
    override func greet(name: String) {
        print(&quot;Sup &quot; + name + &quot;.&quot;)
    }

    override func farewell(name: String) { // &#39;name&#39; is unused
        print(&quot;Cya.&quot;)
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Foreign Protocols &amp;amp; Classes&lt;/h4&gt; 
&lt;p&gt;Unused parameters of protocols or classes defined in foreign modules (e.g. Foundation) are always ignored since you do not have access to modify the base function declaration.&lt;/p&gt; 
&lt;h4&gt;fatalError Functions&lt;/h4&gt; 
&lt;p&gt;Unused parameters of functions that simply call &lt;code&gt;fatalError&lt;/code&gt; are also ignored. Such functions are often unimplemented required initializers in subclasses.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;class Base {
    let param: String

    required init(param: String) {
        self.param = param
    }
}

class Subclass: Base {
    init(custom: String) {
        super.init(param: custom)
    }

    required init(param: String) {
        fatalError(&quot;init(param:) has not been implemented&quot;)
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Protocols&lt;/h3&gt; 
&lt;p&gt;A protocol which is conformed to by an object is not truly used unless it&#39;s also used as an existential type, or to specialize a generic method/class. Periphery is able to identify such redundant protocols whether they are conformed to by one, or even multiple objects.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;protocol MyProtocol { // &#39;MyProtocol&#39; is redundant
    func someMethod()
}

class MyClass1: MyProtocol { // &#39;MyProtocol&#39; conformance is redundant
    func someMethod() {
        print(&quot;Hello from MyClass1!&quot;)
    }
}

class MyClass2: MyProtocol { // &#39;MyProtocol&#39; conformance is redundant
    func someMethod() {
        print(&quot;Hello from MyClass2!&quot;)
    }
}

let myClass1 = MyClass1()
myClass1.someMethod()

let myClass2 = MyClass2()
myClass2.someMethod()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here we can see that despite both implementations of &lt;code&gt;someMethod&lt;/code&gt; are called, at no point does an object take on the type of &lt;code&gt;MyProtocol&lt;/code&gt;. Therefore the protocol itself is redundant, and there&#39;s no benefit from &lt;code&gt;MyClass1&lt;/code&gt; or &lt;code&gt;MyClass2&lt;/code&gt; conforming to it. We can remove &lt;code&gt;MyProtocol&lt;/code&gt; along with each redundant conformance, and just keep &lt;code&gt;someMethod&lt;/code&gt; in each class.&lt;/p&gt; 
&lt;p&gt;Just like a normal method or property of a object, individual properties and methods declared by your protocol can also be identified as unused.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;protocol MyProtocol {
    var usedProperty: String { get }
    var unusedProperty: String { get } // &#39;unusedProperty&#39; is unused
}

class MyConformingClass: MyProtocol {
    var usedProperty: String = &quot;used&quot;
    var unusedProperty: String = &quot;unused&quot; // &#39;unusedProperty&#39; is unused
}

class MyClass {
    let conformingClass: MyProtocol

    init() {
        conformingClass = MyConformingClass()
    }

    func perform() {
        print(conformingClass.usedProperty)
    }
}

let myClass = MyClass()
myClass.perform()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here we can see that &lt;code&gt;MyProtocol&lt;/code&gt; is itself used, and cannot be removed. However, since &lt;code&gt;unusedProperty&lt;/code&gt; is never called on &lt;code&gt;MyConformingClass&lt;/code&gt;, Periphery can identify that the declaration of &lt;code&gt;unusedProperty&lt;/code&gt; in &lt;code&gt;MyProtocol&lt;/code&gt; is also unused and can be removed along with the unused implementation of &lt;code&gt;unusedProperty&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Enumerations&lt;/h3&gt; 
&lt;p&gt;Along with being able to identify unused enumerations, Periphery can also identify individual unused enum cases. Plain enums that are not raw representable, i.e. that &lt;em&gt;don&#39;t&lt;/em&gt; have a &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Character&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt;, or floating-point value type can be reliably identified. However, enumerations that &lt;em&gt;do&lt;/em&gt; have a raw value type can be dynamic, and therefore must be assumed to be used.&lt;/p&gt; 
&lt;p&gt;Let&#39;s clear this up with a quick example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;enum MyEnum: String {
    case myCase
}

func someFunction(value: String) {
    if let myEnum = MyEnum(rawValue: value) {
        somethingImportant(myEnum)
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There&#39;s no direct reference to the &lt;code&gt;myCase&lt;/code&gt; case, so it&#39;s reasonable to expect it &lt;em&gt;might&lt;/em&gt; no longer be needed, however, if it were removed we can see that &lt;code&gt;somethingImportant&lt;/code&gt; would never be called if &lt;code&gt;someFunction&lt;/code&gt; were passed the value of &lt;code&gt;&quot;myCase&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Assign-only Properties&lt;/h3&gt; 
&lt;p&gt;Properties that are assigned but never used are identified as such, e.g:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;class MyClass {
    var assignOnlyProperty: String // &#39;assignOnlyProperty&#39; is assigned, but never used

    init(value: String) {
        self.assignOnlyProperty = value
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In some cases this may be the intended behavior, therefore you have a few options available to silence such results:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Retain individual properties using &lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#comment-commands&quot;&gt;Comment Commands&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Retain all assign-only properties by their type with &lt;code&gt;--retain-assign-only-property-types&lt;/code&gt;. Given types must match their exact usage in the property declaration (sans optional question mark), e.g. &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;[String]&lt;/code&gt;, &lt;code&gt;Set&amp;lt;String&amp;gt;&lt;/code&gt;. Periphery is unable to resolve inferred property types, therefore in some instances, you may need to add explicit type annotations to your properties.&lt;/li&gt; 
 &lt;li&gt;Disable assign-only property analysis entirely with &lt;code&gt;--retain-assign-only-properties&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Redundant Public Accessibility&lt;/h3&gt; 
&lt;p&gt;Declarations that are marked &lt;code&gt;public&lt;/code&gt; yet are not referenced from outside their home module, are identified as having redundant public accessibility. In this scenario, the &lt;code&gt;public&lt;/code&gt; annotation can be removed from the declaration. Removing redundant public accessibility has a couple of benefits:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It helps reduce the public surface area of your modules.&lt;/li&gt; 
 &lt;li&gt;In &lt;a href=&quot;https://github.com/apple/swift/raw/main/docs/OptimizationTips.rst#whole-module-optimizations-wmo&quot;&gt;Whole Module Compilation&lt;/a&gt; mode, Swift can infer &lt;code&gt;final&lt;/code&gt; by &lt;a href=&quot;https://github.com/apple/swift/raw/main/docs/OptimizationTips.rst#advice-if-wmo-is-enabled-use-internal-when-a-declaration-does-not-need-to-be-accessed-outside-of-module&quot;&gt;automatically discovering&lt;/a&gt; all potentially overriding declarations. &lt;code&gt;final&lt;/code&gt; classes are &lt;a href=&quot;https://github.com/apple/swift/raw/main/docs/OptimizationTips.rst#advice-use-final-when-you-know-the-declaration-does-not-need-to-be-overridden&quot;&gt;better optimized&lt;/a&gt; by the compiler.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This analysis can be disabled with &lt;code&gt;--disable-redundant-public-analysis&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Unused Imports&lt;/h3&gt; 
&lt;p&gt;Periphery can detect unused imports of targets it has scanned, i.e. those specified with the &lt;code&gt;--targets&lt;/code&gt; argument. It cannot detect unused imports of other targets because the Swift source files are unavailable and uses of &lt;code&gt;@_exported&lt;/code&gt; cannot be observed. &lt;code&gt;@_exported&lt;/code&gt; is problematic because it changes the public interface of a target such that the declarations exported by the target are no longer necessarily declared by the imported target. For example, the &lt;code&gt;Foundation&lt;/code&gt; target exports &lt;code&gt;Dispatch&lt;/code&gt;, among other targets. If any given source file imports &lt;code&gt;Foundation&lt;/code&gt; and references &lt;code&gt;DispatchQueue&lt;/code&gt; but no other declarations from &lt;code&gt;Foundation&lt;/code&gt;, then the &lt;code&gt;Foundation&lt;/code&gt; import cannot be removed as it would also make the &lt;code&gt;DispatchQueue&lt;/code&gt; type unavailable. To avoid false positives, therefore, Periphery only detects unused imports of targets it has scanned.&lt;/p&gt; 
&lt;p&gt;Periphery will likely produce false positives for targets with mixed Swift and Objective-C, as Periphery cannot scan the Objective-C files. It is recommended therefore to disable unused import detection for projects with a significant amount of Objective-C, or manually exclude the mixed language targets from the results.&lt;/p&gt; 
&lt;h3&gt;Objective-C&lt;/h3&gt; 
&lt;p&gt;Periphery cannot analyze Objective-C code since types may be dynamically typed.&lt;/p&gt; 
&lt;p&gt;By default, Periphery does not assume that declarations accessible by the Objective-C runtime are in use. If your project is a mix of Swift &amp;amp; Objective-C, you can enable this behavior with the &lt;code&gt;--retain-objc-accessible&lt;/code&gt; option. Swift declarations that are accessible by the Objective-C runtime are those that are explicitly annotated with &lt;code&gt;@objc&lt;/code&gt; or &lt;code&gt;@objcMembers&lt;/code&gt;, and classes that inherit &lt;code&gt;NSObject&lt;/code&gt; either directly or indirectly via another class.&lt;/p&gt; 
&lt;p&gt;Alternatively, the &lt;code&gt;--retain-objc-annotated&lt;/code&gt; can be used to only retain declarations that are explicitly annotated with &lt;code&gt;@objc&lt;/code&gt; or &lt;code&gt;@objcMembers&lt;/code&gt;. Types that inherit &lt;code&gt;NSObject&lt;/code&gt; are not retained unless they have explicit annotations. This option may uncover more unused code, but with the caveat that some of the results may be incorrect if the declaration is used in Objective-C code. To resolve these incorrect results you must add an &lt;code&gt;@objc&lt;/code&gt; annotation to the declaration.&lt;/p&gt; 
&lt;h3&gt;Codable&lt;/h3&gt; 
&lt;p&gt;Swift synthesizes additional code for &lt;code&gt;Codable&lt;/code&gt; types that is not visible to Periphery and can result in false positives for properties not directly referenced from non-synthesized code. If your project contains many such types, you can retain all properties on &lt;code&gt;Codable&lt;/code&gt; types with &lt;code&gt;--retain-codable-properties&lt;/code&gt;. Alternatively, you can retain properties only on &lt;code&gt;Encodable&lt;/code&gt; types with &lt;code&gt;--retain-encodable-properties&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;Codable&lt;/code&gt; conformance is declared by a protocol in an external module not scanned by Periphery, you can instruct Periphery to identify the protocols as &lt;code&gt;Codable&lt;/code&gt; with &lt;code&gt;--external-codable-protocols &quot;ExternalProtocol&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;XCTestCase&lt;/h3&gt; 
&lt;p&gt;Any class that inherits &lt;code&gt;XCTestCase&lt;/code&gt; is automatically retained along with its test methods. However, when a class inherits &lt;code&gt;XCTestCase&lt;/code&gt; indirectly via another class, e.g &lt;code&gt;UnitTestCase&lt;/code&gt;, and that class resides in a target that isn&#39;t scanned by Periphery, you need to use the &lt;code&gt;--external-test-case-classes UnitTestCase&lt;/code&gt; option to instruct Periphery to treat &lt;code&gt;UnitTestCase&lt;/code&gt; as an &lt;code&gt;XCTestCase&lt;/code&gt; subclass.&lt;/p&gt; 
&lt;h3&gt;Interface Builder&lt;/h3&gt; 
&lt;p&gt;If your project contains Interface Builder files (such as storyboards and XIBs), Periphery will take these into account when identifying unused declarations. However, Periphery currently only identifies unused classes. This limitation exists because Periphery does not yet fully parse Interface Builder files (see &lt;a href=&quot;https://github.com/peripheryapp/periphery/issues/212&quot;&gt;issue #212&lt;/a&gt;). Due to Periphery&#39;s design principle of avoiding false positives, it is assumed that if a class is referenced in an Interface Builder file, all of its &lt;code&gt;IBOutlets&lt;/code&gt; and &lt;code&gt;IBActions&lt;/code&gt; are used, even if they might not be in reality. This approach will be revised to accurately identify unused &lt;code&gt;IBActions&lt;/code&gt; and &lt;code&gt;IBOutlets&lt;/code&gt; once Periphery gains the capability to parse Interface Builder files.&lt;/p&gt; 
&lt;h2&gt;Comment Commands&lt;/h2&gt; 
&lt;p&gt;For whatever reason, you may want to keep some unused code. Source code comment commands can be used to ignore specific declarations and exclude them from the results.&lt;/p&gt; 
&lt;p&gt;An ignore comment command can be placed directly on the line above any declaration to ignore it, and all descendent declarations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// periphery:ignore
class MyClass {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also ignore specific unused function parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// periphery:ignore:parameters unusedOne,unusedTwo
func someFunc(used: String, unusedOne: String, unusedTwo: String) {
    print(used)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;// periphery:ignore:all&lt;/code&gt; command can be placed at the top of the source file to ignore the entire contents of the file. Note that the comment must be placed above any code, including import statements.&lt;/p&gt; 
&lt;p&gt;Comment commands also support trailing comments following a hyphen so that you can include an explanation on the same line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// periphery:ignore - explanation of why this is necessary
class MyClass {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Xcode Integration&lt;/h2&gt; 
&lt;p&gt;Before setting up Xcode integration, we highly recommend you first get Periphery working in a terminal, as you will be using the same command via Xcode.&lt;/p&gt; 
&lt;h3&gt;Step 1: Create an Aggregate Target&lt;/h3&gt; 
&lt;p&gt;Select your project in the Project Navigator and click the + button at the bottom left of the Targets section. Select &lt;strong&gt;Cross-platform&lt;/strong&gt; and choose &lt;strong&gt;Aggregate&lt;/strong&gt;. Hit Next.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/assets/xcode-integration/1.png&quot; alt=&quot;Step 1&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Choose a name for the new target, e.g. &quot;Periphery&quot; or &quot;Unused Code&quot;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/assets/xcode-integration/2.png&quot; alt=&quot;Step 2&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Step 2: Add a Run Script Build Phase&lt;/h3&gt; 
&lt;p&gt;In the &lt;strong&gt;Build Phases&lt;/strong&gt; section click the + button to add a new Run Script phase.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/assets/xcode-integration/3.png&quot; alt=&quot;Step 3&quot;&gt;&lt;/p&gt; 
&lt;p&gt;In the shell script window enter the Periphery command. Be sure to include the &lt;code&gt;--format xcode&lt;/code&gt; option.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/assets/xcode-integration/4.png&quot; alt=&quot;Step 4&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Step 3: Select &amp;amp; Run&lt;/h3&gt; 
&lt;p&gt;You&#39;re ready to roll. You should now see the new scheme in the dropdown. Select it and hit run.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;If you&#39;d like others on your team to be able to use the scheme, you&#39;ll need to mark it as &lt;em&gt;Shared&lt;/em&gt;. This can be done by selecting &lt;em&gt;Manage Schemes...&lt;/em&gt; and selecting the &lt;em&gt;Shared&lt;/em&gt; checkbox next to the new scheme. The scheme definition can now be checked into source control.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/assets/xcode-integration/5.png&quot; alt=&quot;Step 5&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Excluding Files&lt;/h2&gt; 
&lt;p&gt;Both exclusion options described below accept a Bash v4 style path glob, either absolute or relative to your project directory. You can delimit multiple globs with a space, e.g. &lt;code&gt;--option &quot;Sources/Single.swift&quot; &quot;**/Generated/*.swift&quot; &quot;**/*.{xib,storyboard}&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Excluding Results&lt;/h3&gt; 
&lt;p&gt;To exclude the results from certain files, pass the &lt;code&gt;--report-exclude &amp;lt;globs&amp;gt;&lt;/code&gt; option to the &lt;code&gt;scan&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;Excluding Indexed Files&lt;/h3&gt; 
&lt;p&gt;Excluding files from the indexing phase means that any declarations and references contained within the files will not be seen by Periphery. Periphery will behave as if the files do not exist.&lt;/p&gt; 
&lt;p&gt;To exclude files from being indexed, there are a few options:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Use &lt;code&gt;--exclude-targets &quot;TargetA&quot; &quot;TargetB&quot;&lt;/code&gt; to exclude all source files in the chosen targets.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;--exclude-tests&lt;/code&gt; to exclude all test targets.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;--index-exclude &quot;file.swift&quot; &quot;path/*.swift&quot;&lt;/code&gt; to exclude individual source files.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Retaining File Declarations&lt;/h3&gt; 
&lt;p&gt;To retain all declarations in files, pass the &lt;code&gt;--retain-files &amp;lt;globs&amp;gt;&lt;/code&gt; option to the &lt;code&gt;scan&lt;/code&gt; command. This option is equivalent to adding a &lt;code&gt;// periphery:ignore:all&lt;/code&gt; comment command at the top of each file.&lt;/p&gt; 
&lt;h2&gt;Continuous Integration&lt;/h2&gt; 
&lt;p&gt;When integrating Periphery into a CI pipeline, you can potentially skip the build phase if your pipeline has already done so, e.g. to run tests. This can be achieved using the &lt;code&gt;--skip-build&lt;/code&gt; option. However, you also need to tell Periphery the location of the index store using &lt;code&gt;--index-store-path&lt;/code&gt;. This location is dependent on your project type.&lt;/p&gt; 
&lt;p&gt;Note that when using &lt;code&gt;--skip-build&lt;/code&gt; and &lt;code&gt;--index-store-path&lt;/code&gt; it&#39;s vital that the index store contains data for all of the targets you specify via &lt;code&gt;--targets&lt;/code&gt;. For example, if your pipeline previously built the targets &#39;App&#39; and &#39;Lib&#39;, the index store will only contain data for the files in those targets. You cannot then instruct Periphery to scan additional targets, e.g &#39;Extension&#39;, or &#39;UnitTests&#39;.&lt;/p&gt; 
&lt;h3&gt;Xcode&lt;/h3&gt; 
&lt;p&gt;The index store generated by &lt;code&gt;xcodebuild&lt;/code&gt; exists in DerivedData at a location dependent on your project, e.g &lt;code&gt;~/Library/Developer/Xcode/DerivedData/YourProject-abc123/Index/DataStore&lt;/code&gt;. For Xcode 14 and later, the &lt;code&gt;Index&lt;/code&gt; directory can be found as &lt;code&gt;Index.noindex&lt;/code&gt;, which suppresses Spotlight indexing.&lt;/p&gt; 
&lt;h3&gt;SwiftPM&lt;/h3&gt; 
&lt;p&gt;By default, Periphery looks for the index store at &lt;code&gt;.build/debug/index/store&lt;/code&gt;. Therefore, if you intend to run Periphery directly after calling &lt;code&gt;swift test&lt;/code&gt;, you can omit the &lt;code&gt;--index-store-path&lt;/code&gt; option and Periphery will use the index store created when the project was built for testing. However, if this isn&#39;t the case, then you must provide Periphery the location of the index store with &lt;code&gt;--index-store-path&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Build Systems&lt;/h2&gt; 
&lt;h3&gt;Bazel&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;bazel run @periphery -- scan --bazel
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;--bazel&lt;/code&gt; option enables Bazel mode which provides seamless integration with your project. It works by querying your project to identify all top-level targets, generates a hidden implementation of the &lt;a href=&quot;https://github.com/peripheryapp/periphery/raw/master/bazel/rules.bzl&quot;&gt;scan&lt;/a&gt; rule, and then invokes &lt;code&gt;bazel run&lt;/code&gt;. You can filter the top-level targets with the &lt;code&gt;-—bazel-filter &amp;lt;value&amp;gt;&lt;/code&gt; option, where &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; will be passed as the first argument to Bazel’s &lt;a href=&quot;https://bazel.build/query/language#filter&quot;&gt;filter&lt;/a&gt; operator. The generated query can be seen in the console with the &lt;code&gt;-—verbose&lt;/code&gt; option.&lt;/p&gt; 
&lt;h3&gt;Other&lt;/h3&gt; 
&lt;p&gt;Periphery can analyze projects using other build systems, though it cannot drive them automatically like SPM, Xcode and Bazel. Instead, you need to create a configuration file that specifies the location of indexstore and other resource files. The format is as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;indexstores&quot;: [
        &quot;path/to/file.indexstore&quot;
    ],
    &quot;test_targets&quot;: [
        &quot;MyTests&quot;
    ],
    &quot;plists&quot;: [
        &quot;path/to/file.plist&quot;
    ],
    &quot;xibs&quot;: [
        &quot;path/to/file.xib&quot;,
        &quot;path/to/file.storyboard&quot;
    ],
    &quot;xcdatamodels&quot;: [
        &quot;path/to/file.xcdatamodel&quot;
    ],
    &quot;xcmappingmodels&quot;: [
        &quot;path/to/file.xcmappingmodel&quot;
    ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Relative paths are assumed to be relative to the current directory.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can then invoke Periphery as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;periphery scan --generic-project-config config.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Both options support multiple paths.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Platforms&lt;/h2&gt; 
&lt;p&gt;Periphery supports both macOS and Linux. macOS supports both Xcode and Swift Package Manager (SPM) projects, whereas only SPM projects are supported on Linux.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h3&gt;Erroneous results in one or more files, such as false positives and incorrect source file locations&lt;/h3&gt; 
&lt;p&gt;It&#39;s possible for the index store to become corrupt, or out of sync with the source file. This can happen, for example, if you forcefully terminate (^C) a scan. To rectify this, you can pass the &lt;code&gt;--clean-build&lt;/code&gt; flag to the scan command to force removal of existing build artifacts.&lt;/p&gt; 
&lt;h3&gt;Code referenced within a preprocessor macro conditional branch is unused&lt;/h3&gt; 
&lt;p&gt;When Periphery builds your project it uses the default build configuration, which is typically &#39;debug&#39;. If you use preprocessor macros to conditionally compile code, Periphery will only have visibility into the branches that are compiled. In the example below, &lt;code&gt;releaseName&lt;/code&gt; will be reported as unused as it is only referenced within the non-debug branch of the macro.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;struct BuildInfo {
    let debugName = &quot;debug&quot;
    let releaseName = &quot;release&quot; // &#39;releaseName&#39; is unused

    var name: String {
        #if DEBUG
        debugName
        #else
        releaseName
        #endif
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You have a few options to workaround this:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/#comment-commands&quot;&gt;Comment Commands&lt;/a&gt; to explicitly ignore &lt;code&gt;releaseName&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Filter the results to remove known instances.&lt;/li&gt; 
 &lt;li&gt;Run Periphery once for each build configuration and merge the results. You can pass arguments to the underlying build by specifying them after &lt;code&gt;--&lt;/code&gt;, e.g. &lt;code&gt;periphery scan ... -- -configuration release&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Swift package is platform-specific&lt;/h3&gt; 
&lt;p&gt;Periphery uses &lt;code&gt;swift build&lt;/code&gt; to compile a Swift package which will fail if the Swift package is platform-specific (e.g. to iOS).&lt;/p&gt; 
&lt;p&gt;As a workaround, you can manually build the Swift package with &lt;code&gt;xcodebuild&lt;/code&gt; and then use the &lt;code&gt;--skip-build&lt;/code&gt; and &lt;code&gt;--index-store-path&lt;/code&gt; options to target the index store previously produced by &lt;code&gt;xcodebuild&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# 1. Use xcodebuild
xcodebuild -scheme MyScheme -destination &#39;platform=iOS Simulator,OS=16.2,name=iPhone 14&#39; -derivedDataPath &#39;../dd&#39; clean build

# 2. Use produced index store for scanning
periphery scan --skip-build --index-store-path &#39;../dd/Index.noindex/DataStore/&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Known Bugs&lt;/h2&gt; 
&lt;p&gt;Due to some underlying bugs in Swift, Periphery may in some instances report incorrect results.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;ID&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Title&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/apple/swift/issues/56541&quot;&gt;56541&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Index store does not relate static property getter used as subscript key&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/apple/swift/issues/56327&quot;&gt;56327&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Index store does not relate objc optional protocol method implemented in subclass&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/apple/swift/issues/56189&quot;&gt;56189&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Index store should relate appendInterpolation from string literals&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/apple/swift/issues/56165&quot;&gt;56165&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Index store does not relate constructor via literal notation&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Sponsors &lt;img src=&quot;https://raw.githubusercontent.com/peripheryapp/periphery/master/assets/sponsor-20.svg?sanitize=true&quot; alt=&quot;Sponsors&quot;&gt;&lt;/h2&gt; 
&lt;p&gt;Periphery is passion project that takes a huge amount of effort to maintain and develop. If you find Periphery useful, please consider sponsoring through &lt;a href=&quot;https://github.com/sponsors/peripheryapp&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Special thanks goes to the following generous sponsors:&lt;/p&gt; 
&lt;h3&gt;SaGa Corp&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.sagacorp.fr&quot;&gt;SaGa Corp&lt;/a&gt; develops unique technology for financial players and their customers.&lt;/p&gt; 
&lt;a href=&quot;https://www.sagacorp.fr&quot; alt=&quot;SaGa Corp&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/peripheryapp/periphery/raw/master/assets/sponsors/saga-corp-white.svg&quot;&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/peripheryapp/periphery/raw/master/assets/sponsors/saga-corp-black.svg&quot;&gt; 
  &lt;img src=&quot;https://github.com/peripheryapp/periphery/raw/master/assets/sponsors/saga-corp-black.svg?sanitize=true&quot; width=&quot;150&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h3&gt;Emerge Tools&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.emergetools.com&quot;&gt;Emerge Tools&lt;/a&gt; is a suite of revolutionary products designed to supercharge mobile apps and the teams that build them.&lt;/p&gt; 
&lt;a href=&quot;https://www.emergetools.com&quot; alt=&quot;Emerge Tools&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/peripheryapp/periphery/raw/master/assets/sponsors/emerge-tools-vertical-white.svg&quot;&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/peripheryapp/periphery/raw/master/assets/sponsors/emerge-tools-vertical-black.svg&quot;&gt; 
  &lt;img src=&quot;https://github.com/peripheryapp/periphery/raw/master/assets/sponsors/emerge-tools-vertical-black.svg?sanitize=true&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>ReactiveX/RxSwift</title>
      <link>https://github.com/ReactiveX/RxSwift</link>
      <description>&lt;p&gt;Reactive Programming in Swift&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/ReactiveX/RxSwift/raw/main/assets/RxSwift_Logo.png?raw=true&quot; width=&quot;35%&quot; alt=&quot;RxSwift Logo&quot;&gt; &lt;br&gt; &lt;a href=&quot;https://actions-badge.atrox.dev/ReactiveX/RxSwift/goto&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://github.com/ReactiveX/RxSwift/workflows/RxSwift/badge.svg?branch=main&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/platforms-iOS%20%7C%20macOS%20%7C%20tvOS%20%7C%20watchOS%20%7C%20Linux-333333.svg?sanitize=true&quot; alt=&quot;Supported Platforms: iOS, macOS, tvOS, watchOS &amp;amp; Linux&quot;&gt; &lt;br&gt; &lt;a href=&quot;https://cocoapods.org/pods/RxSwift&quot; alt=&quot;RxSwift on CocoaPods&quot; title=&quot;RxSwift on CocoaPods&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/v/RxSwift.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Carthage/Carthage&quot; alt=&quot;RxSwift on Carthage&quot; title=&quot;RxSwift on Carthage&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/swiftlang/swift-package-manager&quot; alt=&quot;RxSwift on Swift Package Manager&quot; title=&quot;RxSwift on Swift Package Manager&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Swift%20Package%20Manager-compatible-brightgreen.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Rx is a &lt;a href=&quot;https://youtu.be/looJcaeboBY&quot;&gt;generic abstraction of computation&lt;/a&gt; expressed through &lt;code&gt;Observable&amp;lt;Element&amp;gt;&lt;/code&gt; interface, which lets you broadcast and subscribe to values and other events from an &lt;code&gt;Observable&lt;/code&gt; stream.&lt;/p&gt; 
&lt;p&gt;RxSwift is the Swift-specific implementation of the &lt;a href=&quot;http://reactivex.io&quot;&gt;Reactive Extensions&lt;/a&gt; standard.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://github.com/ReactiveX/RxSwift/raw/main/assets/example.png?raw=true&quot; width=&quot;55%&quot; alt=&quot;RxSwift Observable Example of a price constantly changing and updating the app&#39;s UI&quot;&gt;&lt;/p&gt; 
&lt;p&gt;While this version aims to stay true to the original spirit and naming conventions of Rx, this project also aims to provide a true Swift-first API for Rx APIs.&lt;/p&gt; 
&lt;p&gt;Cross platform documentation can be found on &lt;a href=&quot;http://reactivex.io/&quot;&gt;ReactiveX.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Like other Rx implementations, RxSwift&#39;s intention is to enable easy composition of asynchronous operations and streams of data in the form of &lt;code&gt;Observable&lt;/code&gt; objects and a suite of methods to transform and compose these pieces of asynchronous work.&lt;/p&gt; 
&lt;p&gt;KVO observation, async operations, UI Events and other streams of data are all unified under &lt;a href=&quot;https://raw.githubusercontent.com/ReactiveX/RxSwift/main/Documentation/GettingStarted.md#observables-aka-sequences&quot;&gt;abstraction of sequence&lt;/a&gt;. This is the reason why Rx is so simple, elegant and powerful.&lt;/p&gt; 
&lt;h2&gt;I came here because I want to ...&lt;/h2&gt; 
&lt;h6&gt;... understand&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/Documentation/Why.md&quot;&gt;why use rx?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/Documentation/GettingStarted.md&quot;&gt;the basics, getting started with RxSwift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/Documentation/Traits.md&quot;&gt;traits&lt;/a&gt; - what are &lt;code&gt;Single&lt;/code&gt;, &lt;code&gt;Completable&lt;/code&gt;, &lt;code&gt;Maybe&lt;/code&gt;, &lt;code&gt;Driver&lt;/code&gt;, and &lt;code&gt;ControlProperty&lt;/code&gt; ... and why do they exist?&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/Documentation/UnitTests.md&quot;&gt;testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/Documentation/Tips.md&quot;&gt;tips and common errors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/Documentation/GettingStarted.md#debugging&quot;&gt;debugging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/Documentation/MathBehindRx.md&quot;&gt;the math behind Rx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/Documentation/HotAndColdObservables.md&quot;&gt;what are hot and cold observable sequences?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h6&gt;... install&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integrate RxSwift/RxCocoa with my app. &lt;a href=&quot;https://raw.githubusercontent.com/ReactiveX/RxSwift/main/#installation&quot;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h6&gt;... hack around&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;with the example app. &lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/Documentation/ExampleApp.md&quot;&gt;Running Example App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;with operators in playgrounds. &lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/Documentation/Playgrounds.md&quot;&gt;Playgrounds&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h6&gt;... interact&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;All of this is great, but it would be nice to talk with other people using RxSwift and exchange experiences. &lt;br&gt;&lt;a href=&quot;http://slack.rxswift.org&quot;&gt;Join Slack Channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Report a problem using the library. &lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/.github/ISSUE_TEMPLATE.md&quot;&gt;Open an Issue With Bug Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Request a new feature. &lt;a href=&quot;https://raw.githubusercontent.com/ReactiveX/RxSwift/main/Documentation/NewFeatureRequestTemplate.md&quot;&gt;Open an Issue With Feature Request Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Help out &lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/CONTRIBUTING.md&quot;&gt;Check out contribution guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h6&gt;... compare&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/Documentation/ComparisonWithOtherLibraries.md&quot;&gt;with Combine and ReactiveSwift&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h6&gt;... understand the structure&lt;/h6&gt; 
&lt;p&gt;RxSwift is as compositional as the asynchronous work it drives. The core unit is RxSwift itself, while other dependencies can be added for UI Work, testing, and more.&lt;/p&gt; 
&lt;p&gt;It comprises five separate components depending on each other in the following way:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;┌──────────────┐    ┌──────────────┐
│   RxCocoa    ├────▶   RxRelay    │
└───────┬──────┘    └──────┬───────┘
        │                  │
┌───────▼──────────────────▼───────┐
│             RxSwift              │
└───────▲──────────────────▲───────┘
        │                  │
┌───────┴──────┐    ┌──────┴───────┐
│    RxTest    │    │  RxBlocking  │
└──────────────┘    └──────────────┘
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;RxSwift&lt;/strong&gt;: The core of RxSwift, providing the Rx standard as (mostly) defined by &lt;a href=&quot;https://reactivex.io&quot;&gt;ReactiveX&lt;/a&gt;. It has no other dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RxCocoa&lt;/strong&gt;: Provides Cocoa-specific capabilities for general iOS/macOS/watchOS &amp;amp; tvOS app development, such as Shared Sequences, Traits, and much more. It depends on both &lt;code&gt;RxSwift&lt;/code&gt; and &lt;code&gt;RxRelay&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RxRelay&lt;/strong&gt;: Provides &lt;code&gt;PublishRelay&lt;/code&gt;, &lt;code&gt;BehaviorRelay&lt;/code&gt; and &lt;code&gt;ReplayRelay&lt;/code&gt;, three &lt;a href=&quot;https://github.com/ReactiveX/RxSwift/raw/main/Documentation/Subjects.md#relays&quot;&gt;simple wrappers around Subjects&lt;/a&gt;. It depends on &lt;code&gt;RxSwift&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RxTest&lt;/strong&gt; and &lt;strong&gt;RxBlocking&lt;/strong&gt;: Provides testing capabilities for Rx-based systems. It depends on &lt;code&gt;RxSwift&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th width=&quot;30%&quot;&gt;Here&#39;s an example&lt;/th&gt; 
   &lt;th width=&quot;30%&quot;&gt;In Action&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Define search for GitHub repositories ...&lt;/td&gt; 
   &lt;th rowspan=&quot;9&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kzaher/rxswiftcontent/master/GithubSearch.gif&quot;&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;div class=&quot;highlight highlight-source-swift&quot;&gt;
     &lt;pre&gt;
let searchResults = searchBar.rx.text.orEmpty
    .throttle(.milliseconds(300), scheduler: MainScheduler.instance)
    .distinctUntilChanged()
    .flatMapLatest { query -&amp;gt; Observable&amp;lt;[Repository]&amp;gt; in
        if query.isEmpty {
            return .just([])
        }
        return searchGitHub(query)
            .catchAndReturn([])
    }
    .observe(on: MainScheduler.instance)&lt;/pre&gt;
    &lt;/div&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;... then bind the results to your tableview&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;30%&quot;&gt;
    &lt;div class=&quot;highlight highlight-source-swift&quot;&gt;
     &lt;pre&gt;
searchResults
    .bind(to: tableView.rx.items(cellIdentifier: &quot;Cell&quot;)) {
        (index, repository: Repository, cell) in
        cell.textLabel?.text = repository.name
        cell.detailTextLabel?.text = repository.url
    }
    .disposed(by: disposeBag)&lt;/pre&gt;
    &lt;/div&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;RxSwift doesn&#39;t contain any external dependencies.&lt;/p&gt; 
&lt;p&gt;These are currently the supported installation options:&lt;/p&gt; 
&lt;h3&gt;Manual&lt;/h3&gt; 
&lt;p&gt;Open Rx.xcworkspace, choose &lt;code&gt;RxExample&lt;/code&gt; and hit run. This method will build everything and run the sample app&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://guides.cocoapods.org/using/using-cocoapods.html&quot;&gt;CocoaPods&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Podfile
use_frameworks!

target &#39;YOUR_TARGET_NAME&#39; do
    pod &#39;RxSwift&#39;, &#39;6.9.0&#39;
    pod &#39;RxCocoa&#39;, &#39;6.9.0&#39;
end

# RxTest and RxBlocking make the most sense in the context of unit/integration tests
target &#39;YOUR_TESTING_TARGET&#39; do
    pod &#39;RxBlocking&#39;, &#39;6.9.0&#39;
    pod &#39;RxTest&#39;, &#39;6.9.0&#39;
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;YOUR_TARGET_NAME&lt;/code&gt; and then, in the &lt;code&gt;Podfile&lt;/code&gt; directory, type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pod install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;XCFrameworks&lt;/h3&gt; 
&lt;p&gt;Each release starting with RxSwift 6 includes &lt;code&gt;*.xcframework&lt;/code&gt; framework binaries.&lt;/p&gt; 
&lt;p&gt;Simply drag the needed framework binaries to your &lt;strong&gt;Frameworks, Libraries, and Embedded Content&lt;/strong&gt; section under your target&#39;s &lt;strong&gt;General&lt;/strong&gt; tab.&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/ReactiveX/RxSwift/main/assets/xcframeworks.png&quot; alt=&quot;XCFrameworks instructions&quot; width=&quot;65%&quot;&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] You may verify the identity of the binaries by comparing against the following fingerprint in Xcode 15+:&lt;/p&gt; 
 &lt;p&gt;&lt;code&gt;BD 80 2E 79 4C 8A BD DA 4C 3F 5D 92 B3 E4 C4 FB FA E4 73 44 10 B9 AD 73 44 2E F1 CE B0 27 61 40&lt;/code&gt;&lt;/p&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/ReactiveX/RxSwift/main/assets/xcframeworks_signing.png&quot; alt=&quot;XCFrameworks Signature Fingerprint in Xcode 15+&quot; width=&quot;65%&quot;&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;Carthage&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Add this to &lt;code&gt;Cartfile&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;github &quot;ReactiveX/RxSwift&quot; &quot;6.9.0&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ carthage update
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Carthage as a Static Library&lt;/h4&gt; 
&lt;p&gt;Carthage defaults to building RxSwift as a Dynamic Library.&lt;/p&gt; 
&lt;p&gt;If you wish to build RxSwift as a Static Library using Carthage you may use the script below to manually modify the framework type before building with Carthage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;carthage update RxSwift --platform iOS --no-build
sed -i -e &#39;s/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g&#39; Carthage/Checkouts/RxSwift/Rx.xcodeproj/project.pbxproj
carthage build RxSwift --platform iOS
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/swiftlang/swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: There is a critical cross-dependency bug affecting many projects including RxSwift in Swift Package Manager. We&#39;ve &lt;a href=&quot;https://bugs.swift.org/browse/SR-12303&quot;&gt;filed a bug (SR-12303)&lt;/a&gt; in early 2020 but have no answer yet. Your mileage may vary. A partial workaround can be found &lt;a href=&quot;https://github.com/ReactiveX/RxSwift/issues/2127#issuecomment-717830502&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Create a &lt;code&gt;Package.swift&lt;/code&gt; file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// swift-tools-version:5.0

import PackageDescription

let package = Package(
  name: &quot;RxProject&quot;,
  dependencies: [
    .package(url: &quot;https://github.com/ReactiveX/RxSwift.git&quot;, .upToNextMajor(from: &quot;6.0.0&quot;))
  ],
  targets: [
    .target(name: &quot;RxProject&quot;, dependencies: [&quot;RxSwift&quot;, .product(name: &quot;RxCocoa&quot;, package: &quot;RxSwift&quot;)]),
  ]
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ swift build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build or test a module with RxTest dependency, set &lt;code&gt;TEST=1&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ TEST=1 swift test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manually using git submodules&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add RxSwift as a submodule&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git submodule add git@github.com:ReactiveX/RxSwift.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Drag &lt;code&gt;Rx.xcodeproj&lt;/code&gt; into Project Navigator&lt;/li&gt; 
 &lt;li&gt;Go to &lt;code&gt;Project &amp;gt; Targets &amp;gt; Build Phases &amp;gt; Link Binary With Libraries&lt;/code&gt;, click &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;RxSwift&lt;/code&gt;, &lt;code&gt;RxCocoa&lt;/code&gt; and &lt;code&gt;RxRelay&lt;/code&gt; targets&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://reactivex.io/&quot;&gt;http://reactivex.io/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Reactive-Extensions&quot;&gt;Reactive Extensions GitHub (GitHub)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://store.raywenderlich.com/products/rxswift-reactive-programming-with-swift&quot;&gt;RxSwift RayWenderlich.com Book&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=GdvLP0ZAhhc&quot;&gt;RxSwift: Debunking the myth of hard (YouTube)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boxueio.com/series/rxswift-101&quot;&gt;Boxue.io RxSwift Online Course&lt;/a&gt; (Chinese 🇨🇳)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/looJcaeboBY&quot;&gt;Expert to Expert: Brian Beckman and Erik Meijer - Inside the .NET Reactive Framework (Rx) (video)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/-8Y1-lE6NSA&quot;&gt;Reactive Programming Overview (Jafar Husain from Netflix)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://csl.stanford.edu/~christos/pldi2010.fit/meijer.duality.pdf&quot;&gt;Subject/Observer is Dual to Iterator (paper)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rxmarbles.com/&quot;&gt;Rx standard sequence operators visualized (visualization tool)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.haskell.org/&quot;&gt;Haskell&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
