<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub C# Weekly Trending</title>
    <description>Weekly Trending of C# in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 01:42:23 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>quasar/Quasar</title>
      <link>https://github.com/quasar/Quasar</link>
      <description>&lt;p&gt;Remote Administration Tool for Windows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Quasar&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://ci.appveyor.com/project/MaxXor/quasar&quot;&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/5857hfy6r1ltb5f2?svg=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/quasar/Quasar/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/quasar/Quasar/total.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/quasar/Quasar/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/quasar/Quasar.svg?sanitize=true&quot; alt=&quot;License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Free, Open-Source Remote Administration Tool for Windows&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Quasar is a fast and light-weight remote administration tool coded in C#. The usage ranges from user support through day-to-day administrative work to employee monitoring. Providing high stability and an easy-to-use user interface, Quasar is the perfect remote administration solution for you.&lt;/p&gt; 
&lt;p&gt;Please check out the &lt;a href=&quot;https://github.com/quasar/Quasar/wiki/Getting-Started&quot;&gt;Getting Started&lt;/a&gt; guide.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/quasar/Quasar/master/Images/remote-shell.png&quot; alt=&quot;remote-shell&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/quasar/Quasar/master/Images/remote-desktop.png&quot; alt=&quot;remote-desktop&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/quasar/Quasar/master/Images/remote-files.png&quot; alt=&quot;remote-files&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;TCP network stream (IPv4 &amp;amp; IPv6 support)&lt;/li&gt; 
 &lt;li&gt;Fast network serialization (Protocol Buffers)&lt;/li&gt; 
 &lt;li&gt;Encrypted communication (TLS)&lt;/li&gt; 
 &lt;li&gt;UPnP Support (automatic port forwarding)&lt;/li&gt; 
 &lt;li&gt;Task Manager&lt;/li&gt; 
 &lt;li&gt;File Manager&lt;/li&gt; 
 &lt;li&gt;Startup Manager&lt;/li&gt; 
 &lt;li&gt;Remote Desktop&lt;/li&gt; 
 &lt;li&gt;Remote Shell&lt;/li&gt; 
 &lt;li&gt;Remote Execution&lt;/li&gt; 
 &lt;li&gt;System Information&lt;/li&gt; 
 &lt;li&gt;Registry Editor&lt;/li&gt; 
 &lt;li&gt;System Power Commands (Restart, Shutdown, Standby)&lt;/li&gt; 
 &lt;li&gt;Keylogger (Unicode Support)&lt;/li&gt; 
 &lt;li&gt;Reverse Proxy (SOCKS5)&lt;/li&gt; 
 &lt;li&gt;Password Recovery (Common Browsers and FTP Clients)&lt;/li&gt; 
 &lt;li&gt;... and many more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/quasar/Quasar/releases&quot;&gt;Latest stable release&lt;/a&gt; (recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ci.appveyor.com/project/MaxXor/quasar&quot;&gt;Latest development snapshot&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported runtimes and operating systems&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;.NET Framework 4.5.2 or higher&lt;/li&gt; 
 &lt;li&gt;Supported operating systems (32- and 64-bit) 
  &lt;ul&gt; 
   &lt;li&gt;Windows 11&lt;/li&gt; 
   &lt;li&gt;Windows Server 2022&lt;/li&gt; 
   &lt;li&gt;Windows 10&lt;/li&gt; 
   &lt;li&gt;Windows Server 2019&lt;/li&gt; 
   &lt;li&gt;Windows Server 2016&lt;/li&gt; 
   &lt;li&gt;Windows 8/8.1&lt;/li&gt; 
   &lt;li&gt;Windows Server 2012&lt;/li&gt; 
   &lt;li&gt;Windows 7&lt;/li&gt; 
   &lt;li&gt;Windows Server 2008 R2&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;For older systems please use &lt;a href=&quot;https://github.com/quasar/Quasar/releases/tag/v1.3.0.0&quot;&gt;Quasar version 1.3.0&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Compiling&lt;/h2&gt; 
&lt;p&gt;Open the project &lt;code&gt;Quasar.sln&lt;/code&gt; in Visual Studio 2019+ with installed .NET desktop development features and &lt;a href=&quot;https://docs.microsoft.com/en-us/nuget/consume-packages/package-restore&quot;&gt;restore the NuGET packages&lt;/a&gt;. Once all packages are installed the project can be compiled as usual by clicking &lt;code&gt;Build&lt;/code&gt; at the top or by pressing &lt;code&gt;F6&lt;/code&gt;. The resulting executables can be found in the &lt;code&gt;Bin&lt;/code&gt; directory. See below which build configuration to choose from.&lt;/p&gt; 
&lt;h2&gt;Building a client&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Build configuration&lt;/th&gt; 
   &lt;th&gt;Usage scenario&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Debug configuration&lt;/td&gt; 
   &lt;td&gt;Testing&lt;/td&gt; 
   &lt;td&gt;The pre-defined &lt;a href=&quot;https://raw.githubusercontent.com/quasar/Quasar/master/Quasar.Client/Config/Settings.cs&quot;&gt;Settings.cs&lt;/a&gt; will be used, so edit this file before compiling the client. You can execute the client directly with the specified settings.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Release configuration&lt;/td&gt; 
   &lt;td&gt;Production&lt;/td&gt; 
   &lt;td&gt;Start &lt;code&gt;Quasar.exe&lt;/code&gt; and use the client builder.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/quasar/Quasar/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/quasar/Quasar/master/ROADMAP.md&quot;&gt;ROADMAP.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/quasar/Quasar/wiki&quot;&gt;wiki&lt;/a&gt; for usage instructions and other documentation.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Quasar is distributed under the &lt;a href=&quot;https://raw.githubusercontent.com/quasar/Quasar/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;br&gt; Third-party licenses are located &lt;a href=&quot;https://raw.githubusercontent.com/quasar/Quasar/master/Licenses&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Thank you!&lt;/h2&gt; 
&lt;p&gt;I really appreciate all kinds of feedback and contributions. Thanks for using and supporting Quasar!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2dust/v2rayN</title>
      <link>https://github.com/2dust/v2rayN</link>
      <description>&lt;p&gt;A GUI client for Windows, Linux and macOS, support Xray and sing-box and others&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;v2rayN&lt;/h1&gt; 
&lt;p&gt;A GUI client for Windows, Linux and macOS, support &lt;a href=&quot;https://github.com/XTLS/Xray-core&quot;&gt;Xray&lt;/a&gt; and &lt;a href=&quot;https://github.com/SagerNet/sing-box/releases&quot;&gt;sing-box&lt;/a&gt; and &lt;a href=&quot;https://github.com/2dust/v2rayN/wiki/List-of-supported-cores&quot;&gt;others&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/2dust/v2rayN/commits/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/2dust/v2rayN&quot; alt=&quot;GitHub commit activity&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codefactor.io/repository/github/2dust/v2rayn&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/2dust/v2rayn/badge&quot; alt=&quot;CodeFactor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/2dust/v2rayN/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/2dust/v2rayN/latest/total?logo=github&quot; alt=&quot;GitHub Releases&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/v2rayn&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Chat%20on-Telegram-brightgreen.svg?sanitize=true&quot; alt=&quot;Chat on Telegram&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://github.com/2dust/v2rayN/wiki&quot;&gt;Wiki&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Telegram Channel&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/github_2dust&quot;&gt;github_2dust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/semantic-kernel</title>
      <link>https://github.com/microsoft/semantic-kernel</link>
      <description>&lt;p&gt;Integrate cutting-edge LLM technology quickly and easily into your apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Semantic Kernel&lt;/h1&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Python &lt;br&gt; &lt;a href=&quot;https://pypi.org/project/semantic-kernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/semantic-kernel&quot; alt=&quot;Python package&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;.NET &lt;br&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.SemanticKernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.SemanticKernel&quot; alt=&quot;Nuget package&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci-docker.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci-docker.yml/badge.svg?branch=main&quot; alt=&quot;dotnet Docker&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci-windows.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/semantic-kernel/actions/workflows/dotnet-ci-windows.yml/badge.svg?branch=main&quot; alt=&quot;dotnet Windows&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/semantic-kernel&quot; alt=&quot;License: MIT&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1063152441819942922?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=d82679&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/overview/&quot;&gt;Semantic Kernel&lt;/a&gt; is an SDK that integrates Large Language Models (LLMs) like &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, and &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt; with conventional programming languages like C#, Python, and Java. Semantic Kernel achieves this by allowing you to define &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/plugins&quot;&gt;plugins&lt;/a&gt; that can be chained together in just a &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/chaining-functions?tabs=Csharp#using-the-runasync-method-to-simplify-your-code&quot;&gt;few lines of code&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;What makes Semantic Kernel &lt;em&gt;special&lt;/em&gt;, however, is its ability to &lt;em&gt;automatically&lt;/em&gt; orchestrate plugins with AI. With Semantic Kernel &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/planner&quot;&gt;planners&lt;/a&gt;, you can ask an LLM to generate a plan that achieves a user&#39;s unique goal. Afterwards, Semantic Kernel will execute the plan for the user.&lt;/p&gt; 
&lt;p&gt;It provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;abstractions for AI services (such as chat, text to images, audio to text, etc.) and memory stores&lt;/li&gt; 
 &lt;li&gt;implementations of those abstractions for services from &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt;, local models, and more, and for a multitude of vector databases, such as those from &lt;a href=&quot;https://docs.trychroma.com/getting-started&quot;&gt;Chroma&lt;/a&gt;, &lt;a href=&quot;https://qdrant.tech/&quot;&gt;Qdrant&lt;/a&gt;, &lt;a href=&quot;https://milvus.io/&quot;&gt;Milvus&lt;/a&gt;, and &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search&quot;&gt;Azure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;a common representation for &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/plugins&quot;&gt;plugins&lt;/a&gt;, which can then be orchestrated automatically by AI&lt;/li&gt; 
 &lt;li&gt;the ability to create such plugins from a multitude of sources, including from OpenAPI specifications, prompts, and arbitrary code written in the target language&lt;/li&gt; 
 &lt;li&gt;extensible support for prompt management and rendering, including built-in handling of common formats like Handlebars and Liquid&lt;/li&gt; 
 &lt;li&gt;and a wealth of functionality layered on top of these abstractions, such as filters for responsible AI, dependency injection integration, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Semantic Kernel is utilized by enterprises due to its flexibility, modularity and observability. Backed with security enhancing capabilities like telemetry support, and hooks and filters so you’ll feel confident you’re delivering responsible AI solutions at scale. Semantic Kernel was designed to be future proof, easily connecting your code to the latest AI models evolving with the technology as it advances. When new models are released, you’ll simply swap them out without needing to rewrite your entire codebase.&lt;/p&gt; 
&lt;h4&gt;Please star the repo to show your support for this project!&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/enterprise-ready.png&quot; alt=&quot;Enterprise-ready&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Getting started with Semantic Kernel&lt;/h2&gt; 
&lt;p&gt;The Semantic Kernel SDK is available in C#, Python, and Java. To get started, choose your preferred language below. See the &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/supported-languages&quot;&gt;Feature Matrix&lt;/a&gt; for a breakdown of feature parity between our currently supported languages.&lt;/p&gt; 
&lt;table width=&quot;100%&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; src=&quot;https://user-images.githubusercontent.com/371009/230673036-fad1e8e6-5d48-49b1-a9c1-6f9834e0d165.png&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/dotnet/README.md&quot;&gt;Using Semantic Kernel in C#&lt;/a&gt; &amp;nbsp;
     &lt;br&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; src=&quot;https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg?sanitize=true&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/python/README.md&quot;&gt;Using Semantic Kernel in Python&lt;/a&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align=&quot;left&quot; width=&quot;52px&quot; height=&quot;52px&quot; src=&quot;https://upload.wikimedia.org/wikipedia/en/3/30/Java_programming_language_logo.svg?sanitize=true&quot; alt=&quot;Java logo&quot;&gt; 
    &lt;div&gt; 
     &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java/raw/main/README.md&quot;&gt;Using Semantic Kernel in Java&lt;/a&gt; 
    &lt;/div&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The quickest way to get started with the basics is to get an API key from either OpenAI or Azure OpenAI and to run one of the C#, Python, and Java console applications/scripts below.&lt;/p&gt; 
&lt;h3&gt;For C#:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the Quick start page &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide?pivots=programming-language-csharp&quot;&gt;here&lt;/a&gt; and follow the steps to dive in.&lt;/li&gt; 
 &lt;li&gt;After Installing the SDK, we advise you follow the steps and code detailed to write your first console app. &lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/dotnetmap.png&quot; alt=&quot;dotnetmap&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;For Python:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the Quick start page &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide?pivots=programming-language-python&quot;&gt;here&lt;/a&gt; and follow the steps to dive in.&lt;/li&gt; 
 &lt;li&gt;You&#39;ll need to ensure that you toggle to Python in the Choose a programming language table at the top of the page. &lt;img src=&quot;https://learn.microsoft.com/en-us/semantic-kernel/media/pythonmap.png&quot; alt=&quot;pythonmap&quot;&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;For Java:&lt;/h3&gt; 
&lt;p&gt;The Java code is in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java&quot;&gt;semantic-kernel-java&lt;/a&gt; repository. See &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java/raw/main/BUILD.md&quot;&gt;semantic-kernel-java build&lt;/a&gt; for instructions on how to build and run the Java code.&lt;/p&gt; 
&lt;p&gt;Please file Java Semantic Kernel specific issues in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java&quot;&gt;semantic-kernel-java&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Learning how to use Semantic Kernel&lt;/h2&gt; 
&lt;p&gt;The fastest way to learn how to use Semantic Kernel is with our C# and Python Jupyter notebooks. These notebooks demonstrate how to use Semantic Kernel with code snippets that you can run with a push of a button.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/dotnet/notebooks/00-getting-started.ipynb&quot;&gt;Getting Started with C# notebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/python/samples/getting_started/00-getting-started.ipynb&quot;&gt;Getting Started with Python notebook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Once you&#39;ve finished the getting started notebooks, you can then check out the main walkthroughs on our Learn site. Each sample comes with a completed C# and Python project that you can run locally.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;📖 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔌 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/detailed-samples&quot;&gt;Detailed Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/kernel&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Finally, refer to our API references for more details on the C# and Python APIs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/microsoft.semantickernel?view=semantic-kernel-dotnet&quot;&gt;C# API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/python/api/semantic-kernel/semantic_kernel?view=semantic-kernel-python&quot;&gt;Python API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Java API reference (coming soon)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Visual Studio Code extension: design semantic functions with ease&lt;/h2&gt; 
&lt;p&gt;The Semantic Kernel extension for Visual Studio Code makes it easy to design and test semantic functions. The extension provides an interface for designing semantic functions and allows you to test them with the push of a button with your existing models and data.&lt;/p&gt; 
&lt;h2&gt;Join the community&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions and suggestions to SK community! One of the easiest ways to participate is to engage in discussions in the GitHub repository. Bug reports and fixes are welcome!&lt;/p&gt; 
&lt;p&gt;For new features, components, or extensions, please open an issue and discuss with us before sending a PR. This is to avoid rejection as we might be taking the core in a different direction, but also to consider the impact on the larger ecosystem.&lt;/p&gt; 
&lt;p&gt;To learn more and get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Read the &lt;a href=&quot;https://aka.ms/sk/learn&quot;&gt;documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Learn how to &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/support/contributing&quot;&gt;contribute&lt;/a&gt; to the project&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel/discussions&quot;&gt;GitHub discussions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;Discord community&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Attend &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/COMMUNITY.md&quot;&gt;regular office hours and SK community events&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the team on our &lt;a href=&quot;https://aka.ms/sk/blog&quot;&gt;blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributor Wall of Fame&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=microsoft/semantic-kernel&quot; alt=&quot;semantic-kernel contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/LICENSE&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>marticliment/UniGetUI</title>
      <link>https://github.com/marticliment/UniGetUI</link>
      <description>&lt;p&gt;UniGetUI: The Graphical Interface for your package managers. Could be terribly described as a package manager manager to manage your package managers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/icon.png&quot; height=&quot;40&quot;&gt;UniGetUI (formerly WingetUI)&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/releases/latest/download/UniGetUI.Installer.exe&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/marticliment/UniGetUI/3.1.6/total?style=for-the-badge&quot; alt=&quot;Downloads@latest&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/marticliment/UniGetUI/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/marticliment/UniGetUI?style=for-the-badge&quot; alt=&quot;Release Version Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/marticliment/UniGetUI/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/marticliment/UniGetUI?style=for-the-badge&quot; alt=&quot;Issues Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/marticliment/UniGetUI/issues?q=is%3Aissue+is%3Aclosed&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-closed/marticliment/UniGetUI?color=%238256d0&amp;amp;style=for-the-badge&quot; alt=&quot;Closed Issues Badge&quot;&gt;&lt;/a&gt;&lt;br&gt; The main goal of this project is to create an intuitive GUI for the most common CLI package managers for Windows 10 and 11, such as &lt;a href=&quot;https://learn.microsoft.com/en-us/windows/package-manager/&quot;&gt;WinGet&lt;/a&gt;, &lt;a href=&quot;https://scoop.sh/&quot;&gt;Scoop&lt;/a&gt;, &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/&quot;&gt;Pip&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;Npm&lt;/a&gt;, &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-tool-install&quot;&gt;.NET Tool&lt;/a&gt;, &lt;a href=&quot;https://www.powershellgallery.com/&quot;&gt;PowerShell Gallery&lt;/a&gt; and more (Check out the package manager compatibility table)!. With this app, you can easily download, install, update, and uninstall any software published on the supported package managers — and much more!&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#supported-package-managers&quot;&gt;Supported Package Managers Table&lt;/a&gt; for more details!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This project has no connection with any supported package managers — it&#39;s completely unofficial. Be aware that I, the developer of UniGetUI, am NOT responsible for the downloaded software. Proceed with caution&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fmarticliment.com%2Fresources%2Fbadges%2Fdev-status.json&quot; alt=&quot;Endpoint Badge&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/marticliment/WingetUI/dotnet-test.yml?branch=main&amp;amp;style=for-the-badge&amp;amp;label=Tests&quot; alt=&quot;GitHub Actions Workflow Status&quot;&gt;&lt;br&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] &lt;strong&gt;The OFFICIAL website for UniGetUI is &lt;a href=&quot;https://www.marticliment.com/unigetui/&quot;&gt;https://www.marticliment.com/unigetui/&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;Any other website should be considered unofficial, despite what they may say.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Support the developer&lt;/h2&gt; 
&lt;p&gt;It really does make a big difference, and is very much appreciated. Thanks :)&lt;br&gt; &lt;a href=&quot;https://ko-fi.com/P5P86KKPB&quot;&gt;&lt;img src=&quot;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&quot; alt=&quot;ko-fi&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.marticliment.com/unigetui/&quot;&gt;UniGetUI Homepage&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#table-of-contents&quot;&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#update-UniGetUI&quot;&gt;Update UniGetUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#support-the-developer&quot;&gt;Support the developer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#features&quot;&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#supported-package-managers&quot;&gt;Supported Package Managers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#translating-UniGetUI-to-other-languages&quot;&gt;Translating UniGetUI&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#currently-supported-languages&quot;&gt;Currently supported languages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#screenshots&quot;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#frequently-asked-questions&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/raw/main/cli-arguments.md&quot;&gt;Command-line Arguments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://hellogithub.com/repository/46bec642537f449a857215e39a1d64ae&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=46bec642537f449a857215e39a1d64ae&amp;amp;claim_uid=u6sFoX4hC2HztbD&amp;amp;theme=small&quot; alt=&quot;Featured｜HelloGitHub&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;There are multiple ways to install UniGetUI — choose whichever one you prefer!&lt;/p&gt; 
&lt;h3&gt;Microsoft Store installation (recommended)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://apps.microsoft.com/detail/xpfftq032ptphf&quot;&gt;&lt;img alt=&quot;alt_text&quot; width=&quot;240px&quot; src=&quot;https://get.microsoft.com/images/en-us%20dark.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Download UniGetUI installer:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/marticliment/UniGetUI?style=for-the-badge&quot; alt=&quot;GitHub Release&quot;&gt;&lt;/p&gt; 
&lt;p align=&quot;left&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/releases/latest/download/WingetUI.Installer.exe&quot;&gt;Click here to download UniGetUI&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; 
&lt;h3&gt;Install UniGetUI via WinGet:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/winget/v/MartiCliment.UniGetUI?style=for-the-badge&quot; alt=&quot;WinGet Package Version&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;winget install --exact --id MartiCliment.UniGetUI --source winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install UniGetUI via Scoop:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/scoop/v/unigetui?bucket=extras&amp;amp;style=for-the-badge&quot; alt=&quot;Scoop version&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;scoop bucket add extras
scoop install extras/unigetui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install UniGetUI via Chocolatey:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/chocolatey/v/wingetui?style=for-the-badge&quot; alt=&quot;Chocolatey Version&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;choco install wingetui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Update UniGetUI&lt;/h2&gt; 
&lt;p&gt;UniGetUI has a built-in autoupdater. However, it can also be updated like any other package within UniGetUI (since UniGetUI is available from WinGet, Scoop and Chocolatey).&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install, update, and remove software from your system easily at one click: UniGetUI combines the packages from the most used package managers for windows: Winget, Chocolatey, Scoop, Pip, Npm and .NET Tool.&lt;/li&gt; 
 &lt;li&gt;Discover new packages and filter them to easily find the package you want.&lt;/li&gt; 
 &lt;li&gt;View detailed metadata about any package before installing it. Get the direct download URL or the name of the publisher, as well as the size of the download.&lt;/li&gt; 
 &lt;li&gt;Easily bulk-install, update, or uninstall multiple packages at once selecting multiple packages before performing an operation&lt;/li&gt; 
 &lt;li&gt;Automatically update packages, or be notified when updates become available. Skip versions or completely ignore updates on a per-package basis.&lt;/li&gt; 
 &lt;li&gt;Manage your available updates at the touch of a button from the &lt;strong&gt;Widgets pane&lt;/strong&gt; or from &lt;strong&gt;Dev Home&lt;/strong&gt; pane with &lt;a href=&quot;https://apps.microsoft.com/detail/9NB9M5KZ8SLX&quot;&gt;Widgets for UniGetUI&lt;/a&gt;*.&lt;/li&gt; 
 &lt;li&gt;The system tray icon will also show the available updates and installed packages, to efficiently update a program or remove a package from your system.&lt;/li&gt; 
 &lt;li&gt;Easily customize how and where packages are installed. Select different installation options and switches for each package. Install an older version or force to install a 32 bit architecture. [But don&#39;t worry, those options will be saved for future updates for this package*]&lt;/li&gt; 
 &lt;li&gt;Share packages with your friends to show them off that program you found. Here is an example: &lt;a href=&quot;https://marticliment.com/unigetui/share/?pname=Google%20Chrome&amp;amp;pid=Google.Chrome&amp;amp;psource=Winget:%20winget&quot;&gt;Hey @friend, Check out this program!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Export custom lists of packages to then import them to another machine and install those packages with previously specified, custom installation parameters. Setting up machines or configuring a specific software setup has never been easier.&lt;/li&gt; 
 &lt;li&gt;Backup your packages to a local file to easily recover your setup in a matter of seconds when migrating to a new machine*&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Package Managers&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; All package managers do support basic install, update, and uninstall processes, as well as checking for updates, finding new packages, and retrieving details from a package.&lt;/p&gt; 
&lt;img src=&quot;https://marticliment.com/unigetui/extra/supported-managers.svg?sanitize=true&quot;&gt; 
&lt;p&gt;✅: Supported on UniGetUI&lt;br&gt; ☑️: Not directly supported but can be easily achieved&lt;br&gt; ⚠️: May not work in some cases&lt;br&gt; ❌: Not supported by the Package Manager&lt;br&gt; &lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Translating UniGetUI to other languages&lt;/h1&gt; 
&lt;p&gt;To translate UniGetUI to other languages or to update an old translation, please see &lt;a href=&quot;https://github.com/marticliment/UniGetUI/wiki#translating-wingetui&quot;&gt;Translating UniGetUI - UniGetUI Wiki&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;Currently Supported languages&lt;/h2&gt; 
&lt;!-- Autogenerated translations --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Language&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Translated&lt;/th&gt; 
   &lt;th&gt;Translator(s)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/sa.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Arabic - عربي‎&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;90%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Abdu11ahAS&quot;&gt;Abdu11ahAS&lt;/a&gt;, &lt;a href=&quot;https://github.com/Abdullah-Dev115&quot;&gt;Abdullah-Dev115&lt;/a&gt;, &lt;a href=&quot;https://github.com/bassuny3003&quot;&gt;bassuny3003&lt;/a&gt;, &lt;a href=&quot;https://github.com/DaRandomCube&quot;&gt;DaRandomCube&lt;/a&gt;, &lt;a href=&quot;https://github.com/FancyCookin&quot;&gt;FancyCookin&lt;/a&gt;, &lt;a href=&quot;https://github.com/mo9a7i&quot;&gt;mo9a7i&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/bg.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Bulgarian - български&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;47%&lt;/td&gt; 
   &lt;td&gt;Vasil Kolev&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/bd.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Bangla - বাংলা&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;72%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/fluentmoheshwar&quot;&gt;fluentmoheshwar&lt;/a&gt;, &lt;a href=&quot;https://github.com/itz-rj-here&quot;&gt;itz-rj-here&lt;/a&gt;, Mushfiq Iqbal Rayon, Nilavra Bhattacharya, &lt;a href=&quot;https://github.com/samiulislamsharan&quot;&gt;samiulislamsharan&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ad.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Catalan - Català&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/cz.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Czech - Čeština&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/mlisko&quot;&gt;mlisko&lt;/a&gt;, &lt;a href=&quot;https://github.com/panther7&quot;&gt;panther7&lt;/a&gt;, &lt;a href=&quot;https://github.com/xtorlukas&quot;&gt;xtorlukas&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/dk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Danish - Dansk&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;60%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/AAUCrisp&quot;&gt;AAUCrisp&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikkolukas&quot;&gt;mikkolukas&lt;/a&gt;, &lt;a href=&quot;https://github.com/siewers&quot;&gt;siewers&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/de.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; German - Deutsch&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/1270o1&quot;&gt;1270o1&lt;/a&gt;, &lt;a href=&quot;https://github.com/alxhu-dev&quot;&gt;alxhu-dev&lt;/a&gt;, &lt;a href=&quot;https://github.com/Araxxas&quot;&gt;Araxxas&lt;/a&gt;, &lt;a href=&quot;https://github.com/CanePlayz&quot;&gt;CanePlayz&lt;/a&gt;, &lt;a href=&quot;https://github.com/Datacra5H&quot;&gt;Datacra5H&lt;/a&gt;, &lt;a href=&quot;https://github.com/ebnater&quot;&gt;ebnater&lt;/a&gt;, &lt;a href=&quot;https://github.com/martinwilco&quot;&gt;martinwilco&lt;/a&gt;, &lt;a href=&quot;https://github.com/michaelmairegger&quot;&gt;michaelmairegger&lt;/a&gt;, &lt;a href=&quot;https://github.com/Seeloewen&quot;&gt;Seeloewen&lt;/a&gt;, &lt;a href=&quot;https://github.com/tkohlmeier&quot;&gt;tkohlmeier&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/gr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Greek - Ελληνικά&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;84%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/antwnhsx&quot;&gt;antwnhsx&lt;/a&gt;, &lt;a href=&quot;https://github.com/panos78&quot;&gt;panos78&lt;/a&gt;, &lt;a href=&quot;https://github.com/seijind&quot;&gt;seijind&lt;/a&gt;, &lt;a href=&quot;https://github.com/thunderstrike116&quot;&gt;thunderstrike116&lt;/a&gt;, &lt;a href=&quot;https://github.com/wobblerrrgg&quot;&gt;wobblerrrgg&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ee.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Estonian - Eesti&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;49%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/artjom3729&quot;&gt;artjom3729&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/gb.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; English - English&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;, &lt;a href=&quot;https://github.com/ppvnf&quot;&gt;ppvnf&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/es.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Spanish - Castellano&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apazga&quot;&gt;apazga&lt;/a&gt;, &lt;a href=&quot;https://github.com/dalbitresb12&quot;&gt;dalbitresb12&lt;/a&gt;, &lt;a href=&quot;https://github.com/evaneliasyoung&quot;&gt;evaneliasyoung&lt;/a&gt;, &lt;a href=&quot;https://github.com/guplem&quot;&gt;guplem&lt;/a&gt;, &lt;a href=&quot;https://github.com/JMoreno97&quot;&gt;JMoreno97&lt;/a&gt;, &lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;, &lt;a href=&quot;https://github.com/P10Designs&quot;&gt;P10Designs&lt;/a&gt;, &lt;a href=&quot;https://github.com/rubnium&quot;&gt;rubnium&lt;/a&gt;, &lt;a href=&quot;https://github.com/uKER&quot;&gt;uKER&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ir.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Persian - فارسی‎&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;68%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Imorate&quot;&gt;Imorate&lt;/a&gt;, &lt;a href=&quot;https://github.com/itsarian&quot;&gt;itsarian&lt;/a&gt;, &lt;a href=&quot;https://github.com/Mahdi-Hazrati&quot;&gt;Mahdi-Hazrati&lt;/a&gt;, &lt;a href=&quot;https://github.com/moon24-s&quot;&gt;moon24-s&lt;/a&gt;, &lt;a href=&quot;https://github.com/saeed205&quot;&gt;saeed205&lt;/a&gt;, &lt;a href=&quot;https://github.com/smsi2001&quot;&gt;smsi2001&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/fi.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Finnish - Suomi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;98%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/simakuutio&quot;&gt;simakuutio&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/fr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; French - Français&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;BreatFR, &lt;a href=&quot;https://github.com/Entropiness&quot;&gt;Entropiness&lt;/a&gt;, Evans Costa, &lt;a href=&quot;https://github.com/PikPakPik&quot;&gt;PikPakPik&lt;/a&gt;, Rémi Guerrero, &lt;a href=&quot;https://github.com/W1L7dev&quot;&gt;W1L7dev&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Gujarati - ગુજરાતી&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;8%&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Hindi - हिंदी&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;43%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Ashu-r&quot;&gt;Ashu-r&lt;/a&gt;, &lt;a href=&quot;https://github.com/atharva_xoxo&quot;&gt;atharva_xoxo&lt;/a&gt;, &lt;a href=&quot;https://github.com/satanarious&quot;&gt;satanarious&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/hr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Croatian - Hrvatski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;48%&lt;/td&gt; 
   &lt;td&gt;Stjepan Treger&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/il.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Hebrew - עִבְרִית‎&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;80%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/maximunited&quot;&gt;maximunited&lt;/a&gt;, Oryan Hassidim&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/hu.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Hungarian - Magyar&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/gidano&quot;&gt;gidano&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/it.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Italian - Italiano&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;David Senoner, &lt;a href=&quot;https://github.com/giacobot&quot;&gt;giacobot&lt;/a&gt;, &lt;a href=&quot;https://github.com/maicol07&quot;&gt;maicol07&lt;/a&gt;, &lt;a href=&quot;https://github.com/mapi68&quot;&gt;mapi68&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrfranza&quot;&gt;mrfranza&lt;/a&gt;, Rosario Di Mauro&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/id.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Indonesian - Bahasa Indonesia&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;65%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/arthackrc&quot;&gt;arthackrc&lt;/a&gt;, &lt;a href=&quot;https://github.com/joenior&quot;&gt;joenior&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/jp.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Japanese - 日本語&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;80%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/anmoti&quot;&gt;anmoti&lt;/a&gt;, &lt;a href=&quot;https://github.com/nob-swik&quot;&gt;nob-swik&lt;/a&gt;, Nobuhiro Shintaku, sho9029, &lt;a href=&quot;https://github.com/tacostea&quot;&gt;tacostea&lt;/a&gt;, Yuki Takase&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Kannada - ಕನ್ನಡ&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;11%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/skanda890&quot;&gt;skanda890&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/kr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Korean - 한국어&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;66%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/minbert&quot;&gt;minbert&lt;/a&gt;, &lt;a href=&quot;https://github.com/shblue21&quot;&gt;shblue21&lt;/a&gt;, &lt;a href=&quot;https://github.com/VenusGirl&quot;&gt;VenusGirl&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/lt.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Lithuanian - Lietuvių&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;92%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/dziugas1959&quot;&gt;dziugas1959&lt;/a&gt;, Džiugas Januševičius, &lt;a href=&quot;https://github.com/martyn3z&quot;&gt;martyn3z&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/mk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Macedonian - Македонски&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;49%&lt;/td&gt; 
   &lt;td&gt;LordDeatHunter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/no.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Norwegian (bokmål)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;85%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/mikaelkw&quot;&gt;mikaelkw&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/no.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Norwegian (nynorsk)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;79%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/nl.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Dutch - Nederlands&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/abbydiode&quot;&gt;abbydiode&lt;/a&gt;, &lt;a href=&quot;https://github.com/CateyeNL&quot;&gt;CateyeNL&lt;/a&gt;, &lt;a href=&quot;https://github.com/Stephan-P&quot;&gt;Stephan-P&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/pl.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Polish - Polski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;86%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/GrzegorzKi&quot;&gt;GrzegorzKi&lt;/a&gt;, &lt;a href=&quot;https://github.com/KamilZielinski&quot;&gt;KamilZielinski&lt;/a&gt;, &lt;a href=&quot;https://github.com/kwiateusz&quot;&gt;kwiateusz&lt;/a&gt;, &lt;a href=&quot;https://github.com/RegularGvy13&quot;&gt;RegularGvy13&lt;/a&gt;, &lt;a href=&quot;https://github.com/ThePhaseless&quot;&gt;ThePhaseless&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/br.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Portuguese (Brazil)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/maisondasilva&quot;&gt;maisondasilva&lt;/a&gt;, &lt;a href=&quot;https://github.com/ppvnf&quot;&gt;ppvnf&lt;/a&gt;, &lt;a href=&quot;https://github.com/Rodrigo-Matsuura&quot;&gt;Rodrigo-Matsuura&lt;/a&gt;, &lt;a href=&quot;https://github.com/thiagojramos&quot;&gt;thiagojramos&lt;/a&gt;, &lt;a href=&quot;https://github.com/wanderleihuttel&quot;&gt;wanderleihuttel&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/pt.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Portuguese (Portugal)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;90%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/PoetaGA&quot;&gt;PoetaGA&lt;/a&gt;, &lt;a href=&quot;https://github.com/Tiago_Ferreira&quot;&gt;Tiago_Ferreira&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ro.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Romanian - Română&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/David735453&quot;&gt;David735453&lt;/a&gt;, &lt;a href=&quot;https://github.com/SilverGreen93&quot;&gt;SilverGreen93&lt;/a&gt;, TZACANEL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ru.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Russian - Русский&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/bropines&quot;&gt;bropines&lt;/a&gt;, &lt;a href=&quot;https://github.com/Denisskas&quot;&gt;Denisskas&lt;/a&gt;, &lt;a href=&quot;https://github.com/DvladikD&quot;&gt;DvladikD&lt;/a&gt;, &lt;a href=&quot;https://github.com/flatron4eg&quot;&gt;flatron4eg&lt;/a&gt;, Gleb Saygin, Ilia Petrov, &lt;a href=&quot;https://github.com/katrovsky&quot;&gt;katrovsky&lt;/a&gt;, Sergey, sklart, &lt;a href=&quot;https://github.com/solarscream&quot;&gt;solarscream&lt;/a&gt;, &lt;a href=&quot;https://github.com/tapnisu&quot;&gt;tapnisu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Sanskrit - संस्कृत भाषा&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;10%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/skanda890&quot;&gt;skanda890&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/sk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Slovak - Slovenčina&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;10%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Luk164&quot;&gt;Luk164&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/rs.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Serbian - Srpski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;79%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/daVinci13&quot;&gt;daVinci13&lt;/a&gt;, &lt;a href=&quot;https://github.com/momcilovicluka&quot;&gt;momcilovicluka&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/al.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Albanian - Shqip&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/RDN000&quot;&gt;RDN000&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/lk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Sinhala - සිංහල&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;12%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/SashikaSandeepa&quot;&gt;SashikaSandeepa&lt;/a&gt;, &lt;a href=&quot;https://github.com/Savithu-s3&quot;&gt;Savithu-s3&lt;/a&gt;, &lt;a href=&quot;https://github.com/ttheek&quot;&gt;ttheek&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/si.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Slovene - Slovenščina&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;87%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/rumplin&quot;&gt;rumplin&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/se.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Swedish - Svenska&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;55%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/curudel&quot;&gt;curudel&lt;/a&gt;, &lt;a href=&quot;https://github.com/kakmonster&quot;&gt;kakmonster&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ph.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Tagalog - Tagalog&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;11%&lt;/td&gt; 
   &lt;td&gt;lasersPew&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/th.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Thai - ภาษาไทย&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;78%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apaeisara&quot;&gt;apaeisara&lt;/a&gt;, &lt;a href=&quot;https://github.com/dulapahv&quot;&gt;dulapahv&lt;/a&gt;, &lt;a href=&quot;https://github.com/rikoprushka&quot;&gt;rikoprushka&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/tr.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Turkish - Türkçe&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ahmetozmtn&quot;&gt;ahmetozmtn&lt;/a&gt;, &lt;a href=&quot;https://github.com/dogancanyr&quot;&gt;dogancanyr&lt;/a&gt;, &lt;a href=&quot;https://github.com/gokberkgs&quot;&gt;gokberkgs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ua.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Ukrainian - Українська&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;Artem Moldovanenko, Operator404, &lt;a href=&quot;https://github.com/Taron-art&quot;&gt;Taron-art&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/pk.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Urdu - اردو&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;55%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/digitio&quot;&gt;digitio&lt;/a&gt;, &lt;a href=&quot;https://github.com/digitpk&quot;&gt;digitpk&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/vn.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Vietnamese - Tiếng Việt&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;96%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/aethervn2309&quot;&gt;aethervn2309&lt;/a&gt;, &lt;a href=&quot;https://github.com/legendsjoon&quot;&gt;legendsjoon&lt;/a&gt;, &lt;a href=&quot;https://github.com/long5436&quot;&gt;long5436&lt;/a&gt;, &lt;a href=&quot;https://github.com/txavlog&quot;&gt;txavlog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/cn.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Simplified Chinese (China)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;Aaron Liu, adfnekc, &lt;a href=&quot;https://github.com/Ardenet&quot;&gt;Ardenet&lt;/a&gt;, &lt;a href=&quot;https://github.com/arthurfsy2&quot;&gt;arthurfsy2&lt;/a&gt;, &lt;a href=&quot;https://github.com/bai0012&quot;&gt;bai0012&lt;/a&gt;, BUGP Association, ciaran, CnYeSheng, Cololi, &lt;a href=&quot;https://github.com/dongfengweixiao&quot;&gt;dongfengweixiao&lt;/a&gt;, &lt;a href=&quot;https://github.com/enKl03B&quot;&gt;enKl03B&lt;/a&gt;, &lt;a href=&quot;https://github.com/seanyu0&quot;&gt;seanyu0&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sigechaishijie&quot;&gt;Sigechaishijie&lt;/a&gt;, &lt;a href=&quot;https://github.com/SpaceTimee&quot;&gt;SpaceTimee&lt;/a&gt;, Yisme&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/tw.svg?sanitize=true&quot; width=&quot;20&quot;&gt; &amp;nbsp; Traditional Chinese (Taiwan)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;97%&lt;/td&gt; 
   &lt;td&gt;Aaron Liu, CnYeSheng, Cololi, &lt;a href=&quot;https://github.com/enKl03B&quot;&gt;enKl03B&lt;/a&gt;, &lt;a href=&quot;https://github.com/Henryliu880922&quot;&gt;Henryliu880922&lt;/a&gt;, &lt;a href=&quot;https://github.com/StarsShine11904&quot;&gt;StarsShine11904&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrctw&quot;&gt;yrctw&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Last updated: Sun Mar 16 00:15:11 2025&lt;/p&gt; 
&lt;!-- END Autogenerated translations --&gt; 
&lt;h1&gt;Contributions&lt;/h1&gt; 
&lt;p&gt;UniGetUI wouldn&#39;t have been possible without the help of our dear contributors. From the person who fixed a typo to the person who improved half of the code, UniGetUI wouldn&#39;t be possible without them! &lt;span&gt;😄&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors:&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=marticliment/UniGetUI&quot; alt=&quot;My dear contributors&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Screenshots&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_1.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_2.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_3.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_4.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_5.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_6.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_7.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_8.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_9.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_10.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Frequently asked questions&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: I am unable to install or upgrade a specific Winget package! What should I do?&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;A: This is likely an issue with Winget rather than UniGetUI.&lt;/p&gt; 
&lt;p&gt;Please check if it&#39;s possible to install/upgrade the package through PowerShell or the Command Prompt by using the commands &lt;code&gt;winget upgrade&lt;/code&gt; or &lt;code&gt;winget install&lt;/code&gt;, depending on the situation (for example: &lt;code&gt;winget upgrade --id Microsoft.PowerToys&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;If this doesn&#39;t work, consider asking for help at &lt;a href=&quot;https://github.com/microsoft/winget-cli&quot;&gt;Winget&#39;s project page&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: The name of a package is trimmed with ellipsis — how do I see its full name/id?&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;A: This is a known limitation of Winget.&lt;/p&gt; 
&lt;p&gt;For more details, see this issue: &lt;a href=&quot;https://github.com/microsoft/winget-cli/issues/2603&quot;&gt;https://github.com/microsoft/winget-cli/issues/2603&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: My antivirus is telling me that UniGetUI is a virus! / My browser is blocking the download of UniGetUI!&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;A: A common reason apps (i.e., executables) get blocked and/or detected as a virus — even when there&#39;s nothing malicious about them, like in the case of UniGetUI — is because a relatively large amount of people are not using them.&lt;/p&gt; 
&lt;p&gt;Combine that with the fact that you might be downloading something recently released, and blocking unknown apps is in many cases a good precaution to take to prevent actual malware.&lt;/p&gt; 
&lt;p&gt;Since UniGetUI is open source and safe to use, whitelist the app in the settings of your antivirus/browser.&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: Are Winget/Scoop packages safe?&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;A: UniGetUI, Microsoft, and Scoop aren&#39;t responsible for the packages available for download, which are provided by third parties and can theoretically be compromised.&lt;/p&gt; 
&lt;p&gt;Microsoft has implemented a few checks for the software available on Winget to mitigate the risks of downloading malware. Even so, it&#39;s recommended that you only download software from trusted publishers.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;i&gt;Check out the &lt;a href=&quot;https://github.com/marticliment/UniGetUI/wiki&quot;&gt;Wiki&lt;/a&gt; for more information!&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;h2&gt;Command-line parameters:&lt;/h2&gt; 
&lt;p&gt;Check out the full list of parameters &lt;a href=&quot;https://github.com/marticliment/UniGetUI/raw/main/cli-arguments.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tyrrrz/DiscordChatExporter</title>
      <link>https://github.com/Tyrrrz/DiscordChatExporter</link>
      <description>&lt;p&gt;Exports Discord chat logs to a file&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DiscordChatExporter&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Tyrrrz/.github/raw/master/docs/project-status.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/status-maintenance-ffd700.svg?sanitize=true&quot; alt=&quot;Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://tyrrrz.me/ukraine&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/made_in-ukraine-ffd700.svg?labelColor=0057b7&quot; alt=&quot;Made in Ukraine&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Tyrrrz/DiscordChatExporter/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/Tyrrrz/DiscordChatExporter/main.yml?branch=master&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/Tyrrrz/DiscordChatExporter&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/Tyrrrz/DiscordChatExporter/master&quot; alt=&quot;Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Tyrrrz/DiscordChatExporter/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/Tyrrrz/DiscordChatExporter.svg?sanitize=true&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Tyrrrz/DiscordChatExporter/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/Tyrrrz/DiscordChatExporter/total.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/tyrrrz/discordchatexporter&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/tyrrrz/discordchatexporter&quot; alt=&quot;Pulls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/2SUWKFnHSm&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/869237470565392384?label=discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/tyrrrz/status/1495972128977571848&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/fuck-russia-e4181c.svg?labelColor=000000&quot; alt=&quot;Fuck Russia&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width=&quot;99999&quot; align=&quot;center&quot;&gt;Development of this project is entirely funded by the community. &lt;b&gt;&lt;a href=&quot;https://tyrrrz.me/donate&quot;&gt;Consider donating to support!&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Tyrrrz/DiscordChatExporter/master/favicon.png&quot; alt=&quot;Icon&quot;&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;DiscordChatExporter&lt;/strong&gt; is an application that can be used to export message history from any &lt;a href=&quot;https://discord.com&quot;&gt;Discord&lt;/a&gt; channel to a file. It works with direct messages, group messages, and server channels, and supports Discord&#39;s dialect of markdown as well as most other rich media features.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;❔ If you have questions or issues, &lt;strong&gt;please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/Tyrrrz/DiscordChatExporter/master/.docs&quot;&gt;docs&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💬 If you want to chat, &lt;strong&gt;join my &lt;a href=&quot;https://discord.gg/2SUWKFnHSm&quot;&gt;Discord server&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Terms of use&lt;sup&gt;&lt;a href=&quot;https://github.com/Tyrrrz/.github/raw/master/docs/why-so-political.md&quot;&gt;[?]&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt; 
&lt;p&gt;By using this project or its source code, for any purpose and in any shape or form, you grant your &lt;strong&gt;implicit agreement&lt;/strong&gt; to all the following statements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You &lt;strong&gt;condemn Russia and its military aggression against Ukraine&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;recognize that Russia is an occupant that unlawfully invaded a sovereign state&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;support Ukraine&#39;s territorial integrity, including its claims over temporarily occupied territories of Crimea and Donbas&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;reject false narratives perpetuated by Russian state propaganda&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To learn more about the war and how you can help, &lt;a href=&quot;https://tyrrrz.me/ukraine&quot;&gt;click here&lt;/a&gt;. Glory to Ukraine! 🇺🇦&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Graphical user interface&lt;/strong&gt; (desktop app): 
  &lt;ul&gt; 
   &lt;li&gt;🟢 &lt;strong&gt;&lt;a href=&quot;https://github.com/Tyrrrz/DiscordChatExporter/releases/latest&quot;&gt;Stable release&lt;/a&gt;&lt;/strong&gt;: look for &lt;code&gt;DiscordChatExporter.*.zip&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;🟠 &lt;a href=&quot;https://github.com/Tyrrrz/DiscordChatExporter/actions/workflows/main.yml&quot;&gt;CI build&lt;/a&gt;: look for &lt;code&gt;DiscordChatExporter.*.zip&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Command-line interface&lt;/strong&gt; (terminal app): 
  &lt;ul&gt; 
   &lt;li&gt;🟢 &lt;strong&gt;&lt;a href=&quot;https://github.com/Tyrrrz/DiscordChatExporter/releases/latest&quot;&gt;Stable release&lt;/a&gt;&lt;/strong&gt;: look for &lt;code&gt;DiscordChatExporter.Cli.*.zip&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;🟠 &lt;a href=&quot;https://github.com/Tyrrrz/DiscordChatExporter/actions/workflows/main.yml&quot;&gt;CI build&lt;/a&gt;: look for &lt;code&gt;DiscordChatExporter.Cli.*.zip&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;🐋 &lt;a href=&quot;https://hub.docker.com/r/tyrrrz/discordchatexporter&quot;&gt;Docker&lt;/a&gt;: &lt;code&gt;docker pull tyrrrz/discordchatexporter&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;📦 &lt;a href=&quot;https://aur.archlinux.org/packages/discord-chat-exporter-cli&quot;&gt;AUR&lt;/a&gt;: &lt;code&gt;discord-chat-exporter-cli&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;📦 &lt;a href=&quot;https://search.nixos.org/packages?query=discordchatexporter-cli&quot;&gt;Nix&lt;/a&gt;: &lt;code&gt;discordchatexporter-cli&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you&#39;re unsure which build is right for your system, consult with &lt;a href=&quot;https://useragent.cc&quot;&gt;this page&lt;/a&gt; to determine your OS and CPU architecture.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: AUR and Nix packages linked above are maintained by the community. If you have any issues with them, please contact the corresponding maintainers.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Cross-platform graphical and command-line interfaces&lt;/li&gt; 
 &lt;li&gt;Authentication via either a user or a bot token&lt;/li&gt; 
 &lt;li&gt;Multiple output formats: HTML (dark/light), TXT, CSV, JSON&lt;/li&gt; 
 &lt;li&gt;Support for markdown, attachments, embeds, emoji, and other rich media features&lt;/li&gt; 
 &lt;li&gt;File partitioning, date ranges, message filtering, and other export options&lt;/li&gt; 
 &lt;li&gt;Self-contained exports that can be viewed offline&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Tyrrrz/DiscordChatExporter/master/.assets/list.png&quot; alt=&quot;channel list&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Tyrrrz/DiscordChatExporter/master/.assets/output.png&quot; alt=&quot;rendered output&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;See also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mlomb/chat-analytics&quot;&gt;&lt;strong&gt;Chat Analytics&lt;/strong&gt;&lt;/a&gt; — solution for analyzing chat patterns of Discord users, using exports produced by &lt;strong&gt;DiscordChatExporter&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/slatinsky/DiscordChatExporter-frontend&quot;&gt;&lt;strong&gt;DiscordChatExporter-frontend&lt;/strong&gt;&lt;/a&gt; — convenient viewer for exports produced by &lt;strong&gt;DiscordChatExporter&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Azure-Samples/cognitive-services-speech-sdk</title>
      <link>https://github.com/Azure-Samples/cognitive-services-speech-sdk</link>
      <description>&lt;p&gt;Sample code for the Microsoft Cognitive Services Speech SDK&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; 
&lt;p&gt;page_type: sample languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;cpp&lt;/li&gt; 
 &lt;li&gt;csharp&lt;/li&gt; 
 &lt;li&gt;java&lt;/li&gt; 
 &lt;li&gt;javascript&lt;/li&gt; 
 &lt;li&gt;nodejs&lt;/li&gt; 
 &lt;li&gt;objc&lt;/li&gt; 
 &lt;li&gt;python&lt;/li&gt; 
 &lt;li&gt;swift name: &quot;Microsoft Cognitive Services Speech SDK Samples&quot; description: &quot;Learn how to use the Microsoft Cognitive Services Speech SDK to add speech-enabled features to your apps.&quot; products:&lt;/li&gt; 
 &lt;li&gt;azure&lt;/li&gt; 
 &lt;li&gt;azure-cognitive-services&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;Sample Repository for the Microsoft Cognitive Services Speech SDK&lt;/h1&gt; 
&lt;p&gt;This project hosts the &lt;strong&gt;samples&lt;/strong&gt; for the Microsoft Cognitive Services Speech SDK. To find out more about the Microsoft Cognitive Services Speech SDK itself, please visit the &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;SDK documentation site&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;News&lt;/h2&gt; 
&lt;p&gt;Please check &lt;a href=&quot;https://aka.ms/csspeech/whatsnew&quot;&gt;here&lt;/a&gt; for release notes and older releases.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;This repository hosts samples that help you to get started with several features of the SDK. In addition more complex scenarios are included to give you a head-start on using speech technology in your application.&lt;/p&gt; 
&lt;p&gt;We tested the samples with the latest released version of the SDK on Windows 10, Linux (on &lt;a href=&quot;https://docs.microsoft.com/azure/cognitive-services/speech-service/speech-sdk?tabs=linux&quot;&gt;supported Linux distributions and target architectures&lt;/a&gt;), Android devices (API 23: Android 6.0 Marshmallow or higher), Mac x64 (OS version 10.14 or higher) and Mac M1 arm64 (OS version 11.0 or higher) and iOS 11.4 devices.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;SDK documentation&lt;/a&gt; has extensive sections about getting started, setting up the SDK, as well as the process to acquire the required subscription keys. You will need subscription keys to run the samples on your machines, you therefore should follow the instructions on these pages before continuing.&lt;/p&gt; 
&lt;h2&gt;Get the samples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The easiest way to use these samples without using Git is to download the current version as a &lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/archive/master.zip&quot;&gt;ZIP file&lt;/a&gt;.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;On Windows, before you unzip the archive, right-click it, select &lt;strong&gt;Properties&lt;/strong&gt;, and then select &lt;strong&gt;Unblock&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Be sure to unzip the entire archive, and not just individual samples.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone this sample repository using a Git client.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build and run the samples&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note: the samples make use of the Microsoft Cognitive Services Speech SDK. By downloading the Microsoft Cognitive Services Speech SDK, you acknowledge its license, see &lt;a href=&quot;https://aka.ms/csspeech/license&quot;&gt;Speech SDK license agreement&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Please see the description of each individual sample for instructions on how to build and run it.&lt;/p&gt; 
&lt;h2&gt;Related GitHub repositories&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&quot;&gt;Azure-Samples/Cognitive-Services-Voice-Assistant&lt;/a&gt; - Additional samples and tools to help you build an application that uses Speech SDK&#39;s DialogServiceConnector for voice communication with your &lt;a href=&quot;https://dev.botframework.com/&quot;&gt;Bot-Framework bot&lt;/a&gt; or &lt;a href=&quot;https://docs.microsoft.com/azure/cognitive-services/speech-service/custom-commands&quot;&gt;Custom Command&lt;/a&gt; web application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/cognitive-services-speech-sdk-js&quot;&gt;microsoft/cognitive-services-speech-sdk-js&lt;/a&gt; - JavaScript implementation of Speech SDK&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/cognitive-services-speech-sdk-go&quot;&gt;Microsoft/cognitive-services-speech-sdk-go&lt;/a&gt; - Go implementation of Speech SDK&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Azure-Samples/Speech-Service-Actions-Template&quot;&gt;Azure-Samples/Speech-Service-Actions-Template&lt;/a&gt; - Template to create a repository to develop Azure Custom Speech models with built-in support for DevOps and common software engineering practices&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Speech recognition quickstarts&lt;/h3&gt; 
&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech recognition using a microphone. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Quickstart&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/linux/from-microphone&quot;&gt;Quickstart C++ for Linux&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/from-microphone&quot;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/macos/from-microphone&quot;&gt;Quickstart C++ for macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/from-microphone&quot;&gt;Quickstart C# .NET for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/from-microphone&quot;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/from-microphone&quot;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/unity/from-microphone&quot;&gt;Quickstart C# Unity (Windows or Android)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/android/from-microphone&quot;&gt;Quickstart for Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/from-microphone&quot;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/javascript/browser&quot;&gt;Quickstart JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Web&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/javascript/node&quot;&gt;Quickstart Node.js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a file.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/python/from-microphone&quot;&gt;Quickstart Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/ios/from-microphone&quot;&gt;Quickstart Objective-C iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a file with recorded speech.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/ios/from-microphone&quot;&gt;Quickstart Swift iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/macos/from-microphone&quot;&gt;Quickstart Objective-C macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/macos/from-microphone&quot;&gt;Quickstart Swift macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech recognition from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Speech translation quickstarts&lt;/h3&gt; 
&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech translation using a microphone. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Quickstart&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/translate-speech-to-text&quot;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/translate-speech-to-text&quot;&gt;Quickstart C# .NET Framework for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/translate-speech-to-text&quot;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/translate-speech-to-text&quot;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/translate-speech-to-text&quot;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech translation/transcription from a microphone.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Speech synthesis quickstarts&lt;/h3&gt; 
&lt;p&gt;The following quickstarts demonstrate how to perform one-shot speech synthesis to a speaker. If you want to build them from scratch, please follow the quickstart or basics articles on our &lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Quickstart&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/linux/text-to-speech&quot;&gt;Quickstart C++ for Linux&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/windows/text-to-speech&quot;&gt;Quickstart C++ for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/cpp/macos/text-to-speech&quot;&gt;Quickstart C++ for macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnet/text-to-speech&quot;&gt;Quickstart C# .NET for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/text-to-speech&quot;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/dotnetcore/text-to-speech&quot;&gt;Quickstart C# .NET Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/unity/text-to-speech&quot;&gt;Quickstart for C# Unity (Windows or Android)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to a synthesis result and then rendering to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/android/text-to-speech&quot;&gt;Quickstart for Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/text-to-speech&quot;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/python/text-to-speech&quot;&gt;Quickstart Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/ios/text-to-speech&quot;&gt;Quickstart Objective-C iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to a synthesis result and then rendering to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/ios/text-to-speech&quot;&gt;Quickstart Swift iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/objectivec/macos/text-to-speech&quot;&gt;Quickstart Objective-C macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/swift/macos/text-to-speech&quot;&gt;Quickstart Swift macOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates one-shot speech synthesis to the default speaker.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Voice Assistant quickstarts&lt;/h3&gt; 
&lt;p&gt;The following quickstarts demonstrate how to create a custom Voice Assistant. The applications will connect to a previously authored bot configured to use the Direct Line Speech channel, send a voice request, and return a voice response activity (if configured). If you want to build these quickstarts from scratch, please follow the quickstart or basics articles on our &lt;a href=&quot;https://docs.microsoft.com/azure/cognitive-services/speech-service/index-voice-assistants&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See also &lt;a href=&quot;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&quot;&gt;Azure-Samples/Cognitive-Services-Voice-Assistant&lt;/a&gt; for full Voice Assistant samples and tools.&lt;/p&gt; 
&lt;br&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Quickstart&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/java/jre/virtual-assistant&quot;&gt;Quickstart Java JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/quickstart/csharp/uwp/virtual-assistant&quot;&gt;Quickstart C# UWP for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Samples&lt;/h3&gt; 
&lt;p&gt;The following samples demonstrate additional capabilities of the Speech SDK, such as additional modes of speech recognition as well as intent recognition and translation. Voice Assistant samples can be found in a &lt;a href=&quot;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&quot;&gt;separate GitHub repo&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Sample&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/cpp/windows/console&quot;&gt;C++ Console app for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, conversation transcription and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/cpp/linux/compressed-audio-input&quot;&gt;C++ Speech Recognition from MP3/Opus file (Linux only)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition from an MP3/Opus file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/dotnet-windows/console&quot;&gt;C# Console app for .NET Framework on Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/dotnetcore/console&quot;&gt;C# Console app for .NET Core (Windows or Linux)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/java/jre/console&quot;&gt;Java Console app for JRE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/python/console&quot;&gt;Python Console app&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, macOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, speech synthesis, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/speechtotext-uwp&quot;&gt;Speech-to-text UWP sample&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/texttospeech-uwp&quot;&gt;Text-to-speech UWP sample&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech synthesis&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/java/android/sdkdemo/&quot;&gt;Speech recognition sample for Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech and intent recognition&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/js/browser/&quot;&gt;Speech recognition, synthesis, and translation sample for the browser, using JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Web&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/js/node&quot;&gt;Speech recognition and translation sample using JavaScript and Node.js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&quot;&gt;Speech recognition sample for iOS using a connection object&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&quot;&gt;Extended speech recognition sample for iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition using streams etc.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/objective-c/ios&quot;&gt;Speech synthesis sample for iOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech synthesis using streams etc.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/uwp/virtualassistant-uwp/&quot;&gt;C# UWP DialogServiceConnector sample for Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition through the DialogServiceConnector and receiving activity responses.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/unity/speechrecognizer/&quot;&gt;C# Unity sample for Windows or Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition, intent recognition, and translation for Unity&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/csharp/unity/VirtualAssistantPreview/&quot;&gt;C# Unity SpeechBotConnector sample for Windows or Android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Android&lt;/td&gt; 
   &lt;td&gt;Demonstrates speech recognition through the SpeechBotConnector and receiving activity responses.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/Cognitive-Services-Voice-Assistant&quot;&gt;C#, C++ and Java DialogServiceConnector samples&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows, Linux, Android&lt;/td&gt; 
   &lt;td&gt;Additional samples and tools to help you build an application that uses Speech SDK&#39;s DialogServiceConnector for voice communication with your &lt;a href=&quot;https://dev.botframework.com/&quot;&gt;Bot-Framework Bot&lt;/a&gt; or &lt;a href=&quot;https://docs.microsoft.com/azure/cognitive-services/speech-service/custom-commands&quot;&gt;Custom Command&lt;/a&gt; web application.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Samples for using the Speech Service REST API (no Speech SDK installation required):&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Sample&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/batch/&quot;&gt;Batch transcription&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Demonstrates usage of batch transcription from different programming languages&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/batch-synthesis/&quot;&gt;Batch synthesis&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Demonstrates usage of batch synthesis from different programming languages&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Enumerate audio devices&lt;/td&gt; 
   &lt;td&gt;C++, Windows&lt;/td&gt; 
   &lt;td&gt;Shows how to get the Device ID of all connected microphones and loudspeakers. Device ID is required if you want to listen via non-default microphone (Speech Recognition), or play to a non-default loudspeaker (Text-To-Speech) using Speech SDK&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Enumerate audio devices&lt;/td&gt; 
   &lt;td&gt;C# .NET Framework, Windows&lt;/td&gt; 
   &lt;td&gt;-&quot;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Sample data for Custom Speech&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/sampledata/customspeech&quot;&gt;Sample data for Custom Speech&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/csspeech&quot;&gt;Microsoft Cognitive Services Speech Service and SDK Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ShareX/ShareX</title>
      <link>https://github.com/ShareX/ShareX</link>
      <description>&lt;p&gt;ShareX is a free and open source program that lets you capture or record any area of your screen and share it with a single press of a key. It also allows uploading images, text or other types of files to many supported destinations you can choose from.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://getsharex.com&quot;&gt;&lt;img src=&quot;https://getsharex.com/img/ShareX_Banner.png&quot; alt=&quot;ShareX Banner&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;Screen capture, file sharing and productivity tool&lt;/h3&gt; 
&lt;br&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://github.com/ShareX/ShareX/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/ShareX/ShareX/build.yml?branch=develop&amp;amp;label=Build&amp;amp;cacheSeconds=3600&quot; alt=&quot;GitHub Workflow Status&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/ShareX/ShareX/develop/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/ShareX/ShareX?label=License&amp;amp;color=brightgreen&amp;amp;cacheSeconds=3600&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/ShareX/ShareX/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/ShareX/ShareX?label=Release&amp;amp;color=brightgreen&amp;amp;cacheSeconds=3600&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://getsharex.com/downloads&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/ShareX/ShareX/total?label=Downloads&amp;amp;cacheSeconds=3600&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://discord.gg/ShareX&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/194170124859736065?label=Discord&amp;amp;cacheSeconds=3600&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=ShareX&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/ShareX?cacheSeconds=3600&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://getsharex.com&quot;&gt;&lt;img src=&quot;https://getsharex.com/img/ShareX_Screenshot.png&quot; alt=&quot;ShareX Screenshot&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;For further information please check our &lt;a href=&quot;https://getsharex.com&quot;&gt;website&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Official website: &lt;a href=&quot;https://getsharex.com&quot;&gt;https://getsharex.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/ShareX/ShareX&quot;&gt;https://github.com/ShareX/ShareX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Changelog: &lt;a href=&quot;https://getsharex.com/changelog&quot;&gt;https://getsharex.com/changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Privacy policy: &lt;a href=&quot;https://getsharex.com/privacy-policy&quot;&gt;https://getsharex.com/privacy-policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Donate: &lt;a href=&quot;https://getsharex.com/donate&quot;&gt;https://getsharex.com/donate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/ShareX&quot;&gt;https://twitter.com/ShareX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discord: &lt;a href=&quot;https://discord.gg/ShareX&quot;&gt;https://discord.gg/ShareX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Reddit: &lt;a href=&quot;https://www.reddit.com/r/sharex&quot;&gt;https://www.reddit.com/r/sharex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Steam page: &lt;a href=&quot;https://store.steampowered.com/app/400040/ShareX/&quot;&gt;https://store.steampowered.com/app/400040/ShareX/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Microsoft Store page: &lt;a href=&quot;https://apps.microsoft.com/detail/9nblggh4z1sp&quot;&gt;https://apps.microsoft.com/detail/9nblggh4z1sp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Image effects: &lt;a href=&quot;https://getsharex.com/image-effects&quot;&gt;https://getsharex.com/image-effects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Actions: &lt;a href=&quot;https://getsharex.com/actions&quot;&gt;https://getsharex.com/actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dev builds: &lt;a href=&quot;https://getsharex.com/docs/dev-builds&quot;&gt;https://getsharex.com/docs/dev-builds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Keybinds: &lt;a href=&quot;https://getsharex.com/docs/keybinds&quot;&gt;https://getsharex.com/docs/keybinds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Scrolling screenshot: &lt;a href=&quot;https://getsharex.com/docs/scrolling-screenshot&quot;&gt;https://getsharex.com/docs/scrolling-screenshot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Command line arguments: &lt;a href=&quot;https://getsharex.com/docs/command-line-arguments&quot;&gt;https://getsharex.com/docs/command-line-arguments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Translation: &lt;a href=&quot;https://getsharex.com/docs/translation&quot;&gt;https://getsharex.com/docs/translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OCR: &lt;a href=&quot;https://getsharex.com/docs/ocr&quot;&gt;https://getsharex.com/docs/ocr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Custom uploader: &lt;a href=&quot;https://getsharex.com/docs/custom-uploader&quot;&gt;https://getsharex.com/docs/custom-uploader&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Amazon S3 guide: &lt;a href=&quot;https://getsharex.com/docs/amazon-s3&quot;&gt;https://getsharex.com/docs/amazon-s3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google Cloud Storage guide: &lt;a href=&quot;https://getsharex.com/docs/google-cloud-storage&quot;&gt;https://getsharex.com/docs/google-cloud-storage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Cloudflare R2 guide: &lt;a href=&quot;https://getsharex.com/docs/cloudflare-r2&quot;&gt;https://getsharex.com/docs/cloudflare-r2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Brand assets: &lt;a href=&quot;https://getsharex.com/brand-assets&quot;&gt;https://getsharex.com/brand-assets&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>bloxstraplabs/bloxstrap</title>
      <link>https://github.com/bloxstraplabs/bloxstrap</link>
      <description>&lt;p&gt;An alternative bootstrapper for Roblox with a bunch of extra features.&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] The only official places to download Bloxstrap are this GitHub repository and &lt;a href=&quot;https://bloxstraplabs.com&quot;&gt;bloxstraplabs.com&lt;/a&gt;. Any other websites offering downloads or claiming to be us are not controlled by us.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/bloxstraplabs/bloxstrap/raw/main/Images/Bloxstrap-full-dark.png#gh-dark-mode-only&quot; width=&quot;420&quot;&gt; &lt;img src=&quot;https://github.com/bloxstraplabs/bloxstrap/raw/main/Images/Bloxstrap-full-light.png#gh-light-mode-only&quot; width=&quot;420&quot;&gt; &lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/bloxstraplabs/bloxstrap/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/bloxstraplabs/bloxstrap&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/bloxstraplabs/bloxstrap/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/bloxstraplabs/bloxstrap/ci-release.yml?branch=main&amp;amp;label=builds&quot; alt=&quot;GitHub Workflow Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://crowdin.com/project/bloxstrap&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/bloxstrap/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/bloxstraplabs/bloxstrap/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/bloxstraplabs/bloxstrap/latest/total?color=981bfe&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/bloxstraplabs/bloxstrap/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/bloxstraplabs/bloxstrap?color=7a39fb&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/nKjV3mGq6R&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1099468797410283540?logo=discord&amp;amp;logoColor=white&amp;amp;label=discord&amp;amp;color=4d3dff&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://media.tenor.com/FIkSGbGycmAAAAAd/manly-roblox.gif&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/mom_made-pizza_rolls-orange&quot; alt=&quot;lol&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;p&gt;Bloxstrap is a third-party replacement for the standard Roblox bootstrapper, providing additional useful features and improvements.&lt;/p&gt; 
&lt;p&gt;Running into a problem or need help with something? &lt;a href=&quot;https://github.com/bloxstraplabs/bloxstrap/wiki&quot;&gt;Check out the Wiki&lt;/a&gt;. If you can&#39;t find anything, or would like to suggest something, please &lt;a href=&quot;https://github.com/bloxstraplabs/bloxstrap/issues&quot;&gt;submit an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Bloxstrap is only supported for PCs running Windows.&lt;/p&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Q: Is this malware?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No. The source code here is viewable to all, and it&#39;d be impossible for us to slip anything malicious into the downloads without anyone noticing. Just be sure you&#39;re downloading it from an official source. The only two official sources are this GitHub repository and &lt;a href=&quot;https://bloxstraplabs.com&quot;&gt;bloxstraplabs.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Can using this get me banned?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No, it shouldn&#39;t. Bloxstrap doesn&#39;t interact with the Roblox client in the same way that exploits do. &lt;a href=&quot;https://github.com/bloxstraplabs/bloxstrap/wiki/Why-it&#39;s-not-reasonably-possible-for-you-to-be-banned-by-Bloxstrap&quot;&gt;Read more about that here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Why was multi-instance launching removed?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; It was removed starting with v2.6.0 for the &lt;a href=&quot;https://github.com/bloxstraplabs/bloxstrap/wiki/Plans-to-remove-multi%E2%80%90instance-launching-from-Bloxstrap&quot;&gt;reasons stated here&lt;/a&gt;. It may be added back in the future when there are less issues with doing so.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hassle-free Discord Rich Presence to let your friends know what you&#39;re playing at a glance&lt;/li&gt; 
 &lt;li&gt;Simple support for modding of content files for customizability (death sound, mouse cursor, etc)&lt;/li&gt; 
 &lt;li&gt;See where your server is geographically located (courtesy of &lt;a href=&quot;https://ipinfo.io&quot;&gt;ipinfo.io&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Ability to configure graphics fidelity and UI experience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;Download the &lt;a href=&quot;https://github.com/bloxstraplabs/bloxstrap/releases/latest&quot;&gt;latest release of Bloxstrap&lt;/a&gt;, and run it. Configure your preferences if needed, and install. That&#39;s about it!&lt;/p&gt; 
&lt;p&gt;Alternatively, you can install Bloxstrap via &lt;a href=&quot;https://winstall.app/apps/pizzaboxer.Bloxstrap&quot;&gt;Winget&lt;/a&gt; by running this in a Command Prompt window:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; winget install bloxstrap
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will also need the &lt;a href=&quot;https://aka.ms/dotnet-core-applaunch?missing_runtime=true&amp;amp;arch=x64&amp;amp;rid=win11-x64&amp;amp;apphost_version=6.0.16&amp;amp;gui=true&quot;&gt;.NET 6 Desktop Runtime&lt;/a&gt;. If you don&#39;t already have it installed, you&#39;ll be prompted to install it anyway. Be sure to install Bloxstrap after you&#39;ve installed this.&lt;/p&gt; 
&lt;p&gt;It&#39;s not unlikely that Windows Smartscreen will show a popup when you run Bloxstrap for the first time. This happens because it&#39;s an unknown program, not because it&#39;s actually detected as being malicious. To dismiss it, just click on &quot;More info&quot; and then &quot;Run anyway&quot;.&lt;/p&gt; 
&lt;p&gt;Once installed, Bloxstrap is added to your Start Menu, where you can access the menu and reconfigure your preferences if needed.&lt;/p&gt; 
&lt;h2&gt;Code&lt;/h2&gt; 
&lt;p&gt;Bloxstrap uses the &lt;a href=&quot;https://github.com/lepoco/wpfui&quot;&gt;WPF UI&lt;/a&gt; library for the user interface design. We currently use and maintain our own fork of WPF UI at &lt;a href=&quot;https://github.com/bloxstraplabs/wpfui&quot;&gt;bloxstraplabs/wpfui&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>seerge/g-helper</title>
      <link>https://github.com/seerge/g-helper</link>
      <description>&lt;p&gt;Lightweight Armoury Crate alternative for Asus laptops and ROG Ally. Control tool for ROG Zephyrus G14, G15, G16, M16, Flow X13, Flow X16, TUF, Strix, Scar and other models&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;G-Helper - Lightweight control tool for Asus laptops&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://u24.gov.ua/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/seerge/g-helper/main/docs/ua.png&quot; alt=&quot;United24&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/seerge/g-helper/releases/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/seerge/g-helper&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/seerge/g-helper/releases/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/seerge/g-helper/total&quot; alt=&quot;Github all releases&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/seerge/g-helper/stargazers/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/seerge/g-helper.svg?style=social&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt; &lt;sup&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/raw/main/docs/README.zh-CN.md&quot;&gt;中文版点这里&lt;/a&gt;&lt;/sup&gt; &lt;sup&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/raw/main/docs/README.ja-JP.md&quot;&gt;日本語はこちら&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; 
&lt;p&gt;Small and lightweight Armoury Crate alternative for Asus laptops offering almost same functionality with a much smaller footprint. Works with all popular models, such as ROG Zephyrus G14, G15, G16, M16, Flow X13, Flow X16, Flow Z13, DUO, TUF Series, Strix or Scar Series, ProArt, Vivobook, Zenbook, ROG Ally or Ally X and many more!&lt;/p&gt; 
&lt;h1&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/releases/latest/download/GHelper.zip&quot;&gt;&lt;span&gt;💾&lt;/span&gt; Download&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;⭐ If you like the app - please spread the word about it online&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Support Project&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://www.paypal.com/donate/?hosted_button_id=Y7UNMPRNLB5X2&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/seerge/g-helper/main/docs/paypal-eur.png&quot; height=&quot;36&quot; alt=&quot;PayPal EUR&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://www.paypal.com/donate/?hosted_button_id=JSMU7DFHFSJMW&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/seerge/g-helper/main/docs/paypal-usd.png&quot; height=&quot;36&quot; alt=&quot;PayPal USD&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://buy.stripe.com/8wM6pt8HbgK50tWbIK&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/seerge/g-helper/main/docs/stripe.png&quot; height=&quot;36&quot; alt=&quot;Stripe&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://buy.stripe.com/6oE29dg9D3Xj7Wo28b&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/seerge/g-helper/main/docs/alipay.png&quot; height=&quot;36&quot; alt=&quot;Alipay&quot;&gt;&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/wiki/Requirements&quot;&gt;Setup and Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/wiki/Troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/wiki/Power-user-settings&quot;&gt;Power User Settings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/releases/latest/download/GHelper.zip&quot;&gt;&lt;img src=&quot;https://github.com/seerge/g-helper/assets/5920850/4d98465a-63a5-4498-ae14-afb3e67e7e82&quot; alt=&quot;G-Helper Download&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;📢&lt;/span&gt; YouTube Reviews and Guides&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=hqe-PjuE-K8&quot;&gt;&lt;img src=&quot;https://i.ytimg.com/vi/hqe-PjuE-K8/hqdefault.jpg&quot; alt=&quot;Youtube review Josh Cravey&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6aVdwJKZSSc&quot;&gt;&lt;img src=&quot;https://i.ytimg.com/vi/6aVdwJKZSSc/hqdefault.jpg&quot; alt=&quot;Youtube review cbutters Tech&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=hqe-PjuE-K8&quot;&gt;Josh Cravey&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6aVdwJKZSSc&quot;&gt;cbutters Tech&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;📰 Articles&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.digitaltrends.com/computing/g-helper-armoury-crate-alternative/&quot;&gt;https://www.digitaltrends.com/computing/g-helper-armoury-crate-alternative/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://binaryfork.com/ghelper-armoury-crate-alternative-10216/&quot;&gt;https://binaryfork.com/ghelper-armoury-crate-alternative-10216/&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;&lt;span&gt;🎁&lt;/span&gt; Advantages&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Seamless and automatic GPU switching&lt;/li&gt; 
 &lt;li&gt;All performance modes can be fully customized with power limits and fan curves&lt;/li&gt; 
 &lt;li&gt;Lightweight. Doesn&#39;t install anything in your system. Just a single exe to run&lt;/li&gt; 
 &lt;li&gt;Simple and clean native UI with easy access to all settings&lt;/li&gt; 
 &lt;li&gt;FN-Lock and custom hotkeys&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/seerge/g-helper/assets/5920850/626a5a6e-fdae-431c-843e-92886c8420ee&quot; alt=&quot;Screenshot 2024-03-11 104354&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;⚡&lt;/span&gt; Features&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Performance modes: Silent - Balanced - Turbo (built-in, with default fan curves)&lt;/li&gt; 
 &lt;li&gt;GPU modes: Eco - Standard - Ultimate - Optimized&lt;/li&gt; 
 &lt;li&gt;Screen refresh rate control with display overdrive (OD)&lt;/li&gt; 
 &lt;li&gt;Custom fan curve editor, power limits and turbo boost selection for every performance mode&lt;/li&gt; 
 &lt;li&gt;Anime Matrix or Slash Lighting control including animated GIFs, clock and Audio visualizer&lt;/li&gt; 
 &lt;li&gt;Backlight animation modes and colors&lt;/li&gt; 
 &lt;li&gt;Hotkey handling&lt;/li&gt; 
 &lt;li&gt;Monitor CPU and GPU temperature, fan speeds and battery status&lt;/li&gt; 
 &lt;li&gt;Battery charge limit to preserve battery health&lt;/li&gt; 
 &lt;li&gt;NVidia GPU overclocking and undervolting&lt;/li&gt; 
 &lt;li&gt;XG Mobile Control&lt;/li&gt; 
 &lt;li&gt;AMD CPU Undervolting&lt;/li&gt; 
 &lt;li&gt;BIOS and Driver Updates&lt;/li&gt; 
 &lt;li&gt;Asus Mice settings&lt;/li&gt; 
 &lt;li&gt;Mini-led multi-zone switch&lt;/li&gt; 
 &lt;li&gt;Flicker-free dimming and Visual Modes&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;span&gt;⚙&lt;/span&gt; Automation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Performance Mode switching when on battery or plugged in&lt;/li&gt; 
 &lt;li&gt;Optimized GPU mode - disables dGPU on battery and enables when plugged in&lt;/li&gt; 
 &lt;li&gt;Auto Screen refresh rate (60Hz on battery and max Hz when plugged)&lt;/li&gt; 
 &lt;li&gt;Keyboard backlight timeout on battery or when plugged in&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;🚀&lt;/span&gt; Performance Modes&lt;/h3&gt; 
&lt;img align=&quot;right&quot; width=&quot;300&quot; src=&quot;https://github.com/seerge/g-helper/assets/5920850/3e119674-db8d-486b-aa65-2bf9b61f9aa6&quot;&gt; 
&lt;p&gt;All Modes are &lt;strong&gt;baked in BIOS&lt;/strong&gt; along with default fan curves and power limits and they are the &lt;strong&gt;same&lt;/strong&gt; as in the Armoury Crate.&lt;/p&gt; 
&lt;p&gt;Each BIOS mode is paired with matching Windows Power Mode. You can adjust this setting under &lt;code&gt;Fans + Power&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Silent&lt;/strong&gt; in BIOS + &lt;strong&gt;Best power efficiency&lt;/strong&gt; power mode&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Balanced&lt;/strong&gt; (Performance in AC) in BIOS + &lt;strong&gt;Balanced&lt;/strong&gt; power mode&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Turbo&lt;/strong&gt; in BIOS + &lt;strong&gt;Best performance&lt;/strong&gt; power mode&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;span&gt;🎮&lt;/span&gt; GPU Modes&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Eco&lt;/strong&gt; : only low power integrated GPU enabled, iGPU drives built in display&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; (MS Hybrid) : iGPU and dGPU enabled, iGPU drives built in display&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ultimate&lt;/strong&gt;: iGPU and dGPU enabled, but dGPU drives built in display (supported on 2022+ models)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Optimized&lt;/strong&gt;: disables dGPU on battery (Eco) and enables when plugged in (Standard)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/seerge/g-helper/assets/5920850/fd69a81e-978d-4d5c-a0a8-26da51f90a5b&quot; alt=&quot;Screenshot 2024-03-11 111818&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/seerge/g-helper/assets/5920850/65c6bdd5-728c-4965-b544-fcf5a85ed6a2&quot; alt=&quot;GPU Modes&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;🐭&lt;/span&gt; Asus Mouse and other peripherals support&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/discussions/900&quot;&gt;Currently supported models&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ROG Chakram X (P708)&lt;/li&gt; 
 &lt;li&gt;ROG Chakram Core (P511)&lt;/li&gt; 
 &lt;li&gt;ROG Gladius II and Gladius II Origin (P502 and P504)&lt;/li&gt; 
 &lt;li&gt;ROG Gladius II Wireless&lt;/li&gt; 
 &lt;li&gt;ROG Gladius III&lt;/li&gt; 
 &lt;li&gt;ROG Gladius III Wireless&lt;/li&gt; 
 &lt;li&gt;ROG Harpe Ace Aim Lab Edition&lt;/li&gt; 
 &lt;li&gt;ROG Keris Wireless&lt;/li&gt; 
 &lt;li&gt;ROG Keris II Ace&lt;/li&gt; 
 &lt;li&gt;ROG Strix Carry (P508)&lt;/li&gt; 
 &lt;li&gt;ROG Strix III Gladius III Aimpoint Wireless (P711)&lt;/li&gt; 
 &lt;li&gt;ROG Strix Impact III (P518)&lt;/li&gt; 
 &lt;li&gt;ROG Spatha X&lt;/li&gt; 
 &lt;li&gt;ROG Strix Impact II Wireless&lt;/li&gt; 
 &lt;li&gt;ROG Pugio&lt;/li&gt; 
 &lt;li&gt;ROG Pugio II&lt;/li&gt; 
 &lt;li&gt;TUF Gaming M4 Wireless (P306)&lt;/li&gt; 
 &lt;li&gt;TUF Gaming M3&lt;/li&gt; 
 &lt;li&gt;TUF Gaming M3 Gen II&lt;/li&gt; 
 &lt;li&gt;TUF Gaming M4 AIR&lt;/li&gt; 
 &lt;li&gt;TUF Gaming M5&lt;/li&gt; 
 &lt;li&gt;TX Gaming Mini&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Huge thanks to &lt;a href=&quot;https://github.com/IceStormNG&quot;&gt;@IceStormNG&lt;/a&gt; 👑 for contribution and research (!).&lt;/p&gt; 
&lt;h3&gt;⌨️ Keybindings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Fn + F5 / Fn + Shift + F5&lt;/code&gt; - Toggle Performance Modes forwards / backwards&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + F5 / Ctrl + Shift + Alt + F5&lt;/code&gt; - Toggle Performance Modes forwards / backwards&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + F12&lt;/code&gt; - Open G-Helper window&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + M1 / M2&lt;/code&gt; - Screen brightness Down / Up&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Shift + M1 / M2&lt;/code&gt; - Backlight brightness Down / Up&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Fn + C&lt;/code&gt; - Fn-Lock&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Fn + Ctrl + F7 / F8&lt;/code&gt; - Flicker-free dimming Down / Up&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Fn + Shift + F7 / F8&lt;/code&gt; - Matrix / Slash Lighting brightness Down / Up&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Fn + Shift + F7 / F8&lt;/code&gt; - Screenpad brightness Down / Up&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + F20&lt;/code&gt; - Mute Microphone&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F13&lt;/code&gt; - Toggle Display Refresh Rate&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F14&lt;/code&gt; - Eco GPU Mode&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F15&lt;/code&gt; - Standard GPU Mode&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F16&lt;/code&gt; - Silent&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F17&lt;/code&gt; - Balanced&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F18&lt;/code&gt; - Turbo&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F19&lt;/code&gt; - Custom 1 (if exists)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Shift + Alt + F20&lt;/code&gt; - Custom 2 (if exists)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seerge/g-helper/wiki/Power-user-settings#custom-hotkey-actions&quot;&gt;Custom keybindings / hotkeys&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎮ROG Ally Bindings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;M + DPad Left / Right&lt;/code&gt; - Display Brightness&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;M + DPad Up&lt;/code&gt; - Touch keyboard&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;M + DPad Down&lt;/code&gt; - Show desktop&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;M + Y&lt;/code&gt; - Toggle AMD overay&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;M + X&lt;/code&gt; - Screenshot&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;M + Right Stick Click&lt;/code&gt; - Controller Mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;🔖 Important Notice&lt;/h3&gt; 
&lt;p&gt;G-Helper is &lt;strong&gt;NOT&lt;/strong&gt; an operating system, firmware, or driver. It &lt;strong&gt;DOES NOT&lt;/strong&gt; &quot;run&quot; your hardware in real-time anyhow.&lt;/p&gt; 
&lt;p&gt;It&#39;s an app that lets you select one of the predefined operating modes created by manufacturer (and stored in BIOS) and optionally(!) set some settings that already exist on your device same as Armoury Crate can. It does it by using the Asus System Control Interface &quot;driver&quot; that Armoury uses for it.&lt;/p&gt; 
&lt;p&gt;If you use equivalent mode/settings as in Armoury Crate - the performance or the behavior of your device won&#39;t be different.&lt;/p&gt; 
&lt;p&gt;The role of G-Helper for your laptop is similar to the role of a remote control for your TV.&lt;/p&gt; 
&lt;h3&gt;Libraries and projects used&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/torvalds/linux/raw/master/include/linux/platform_data/x86/asus-wmi.h&quot;&gt;Linux Kernel&lt;/a&gt; for some basic endpoints in ASUS ACPI/WMI interface&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/falahati/NvAPIWrapper&quot;&gt;NvAPIWrapper&lt;/a&gt; for accessing Nvidia API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vddCore/Starlight&quot;&gt;Starlight&lt;/a&gt; for anime matrix communication protocol&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JamesCJ60/Universal-x86-Tuning-Utility&quot;&gt;UXTU&lt;/a&gt; for undervolting using Ryzen System Management Unit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/asus-linux/asusctl&quot;&gt;AsusCtl&lt;/a&gt; for inspiration and some reverse engineering&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Disclaimers&lt;/h3&gt; 
&lt;p&gt;&quot;Asus&quot;, &quot;ROG&quot;, &quot;TUF&quot;, and &quot;Armoury Crate&quot; are trademarked by and belong to AsusTek Computer, Inc. I make no claims to these or any assets belonging to AsusTek Computer and use them purely for informational purposes only.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED “AS IS” AND WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. MISUSE OF THIS SOFTWARE COULD CAUSE SYSTEM INSTABILITY OR MALFUNCTION.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git-ecosystem/git-credential-manager</title>
      <link>https://github.com/git-ecosystem/git-credential-manager</link>
      <description>&lt;p&gt;Secure, cross-platform Git credential storage with authentication to GitHub, Azure Repos, and other popular Git hosting services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Git Credential Manager&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/actions/workflows/continuous-integration.yml&quot;&gt;&lt;img src=&quot;https://github.com/git-ecosystem/git-credential-manager/actions/workflows/continuous-integration.yml/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager&quot;&gt;Git Credential Manager&lt;/a&gt; (GCM) is a secure &lt;a href=&quot;https://git-scm.com/docs/gitcredentials&quot;&gt;Git credential helper&lt;/a&gt; built on &lt;a href=&quot;https://dotnet.microsoft.com&quot;&gt;.NET&lt;/a&gt; that runs on Windows, macOS, and Linux. It aims to provide a consistent and secure authentication experience, including multi-factor auth, to every major source control hosting service and platform.&lt;/p&gt; 
&lt;p&gt;GCM supports (in alphabetical order) &lt;a href=&quot;https://azure.microsoft.com/en-us/products/devops&quot;&gt;Azure DevOps&lt;/a&gt;, Azure DevOps Server (formerly Team Foundation Server), Bitbucket, GitHub, and GitLab. Compare to Git&#39;s &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Credential-Storage&quot;&gt;built-in credential helpers&lt;/a&gt; (Windows: wincred, macOS: osxkeychain, Linux: gnome-keyring/libsecret), which provide single-factor authentication support for username/password only.&lt;/p&gt; 
&lt;p&gt;GCM replaces both the .NET Framework-based &lt;a href=&quot;https://github.com/microsoft/Git-Credential-Manager-for-Windows&quot;&gt;Git Credential Manager for Windows&lt;/a&gt; and the Java-based &lt;a href=&quot;https://github.com/microsoft/Git-Credential-Manager-for-Mac-and-Linux&quot;&gt;Git Credential Manager for Mac and Linux&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/raw/release/docs/install.md&quot;&gt;installation instructions&lt;/a&gt; for the current version of GCM for install options for your operating system.&lt;/p&gt; 
&lt;h2&gt;Current status&lt;/h2&gt; 
&lt;p&gt;Git Credential Manager is currently available for Windows, macOS, and Linux*. GCM only works with HTTP(S) remotes; you can still use Git with SSH:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops&quot;&gt;Azure DevOps SSH&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/articles/connecting-to-github-with-ssh&quot;&gt;GitHub SSH&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://confluence.atlassian.com/bitbucket/ssh-keys-935365775.html&quot;&gt;Bitbucket SSH&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Windows&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;macOS&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Linux*&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Installer/uninstaller&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Secure platform credential storage &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/raw/release/docs/credstores.md&quot;&gt;(see more)&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi-factor authentication support for Azure DevOps&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Two-factor authentication support for GitHub&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Two-factor authentication support for Bitbucket&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Two-factor authentication support for GitLab&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Integrated Authentication (NTLM/Kerberos) support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Basic HTTP authentication support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Proxy support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;amd64&lt;/code&gt; support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;x86&lt;/code&gt; support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✗&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;arm64&lt;/code&gt; support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;best effort&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;armhf&lt;/code&gt; support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;(*) GCM guarantees support only for &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/core/install/linux&quot;&gt;the Linux distributions that are officially supported by dotnet&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Git versions&lt;/h2&gt; 
&lt;p&gt;Git Credential Manager tries to be compatible with the broadest set of Git versions (within reason). However there are some know problematic releases of Git that are not compatible.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Git 1.x&lt;/p&gt; &lt;p&gt;The initial major version of Git is not supported or tested with GCM.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Git 2.26.2&lt;/p&gt; &lt;p&gt;This version of Git introduced a breaking change with parsing credential configuration that GCM relies on. This issue was fixed in commit &lt;a href=&quot;https://github.com/git/git/commit/12294990c90e043862be9eb7eb22c3784b526340&quot;&gt;&lt;code&gt;12294990&lt;/code&gt;&lt;/a&gt; of the Git project, and released in Git 2.27.0.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;p&gt;Once it&#39;s installed and configured, Git Credential Manager is called implicitly by Git. You don&#39;t have to do anything special, and GCM isn&#39;t intended to be called directly by the user. For example, when pushing (&lt;code&gt;git push&lt;/code&gt;) to &lt;a href=&quot;https://azure.microsoft.com/en-us/products/devops&quot;&gt;Azure DevOps&lt;/a&gt;, &lt;a href=&quot;https://bitbucket.org&quot;&gt;Bitbucket&lt;/a&gt;, or &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;, a window will automatically open and walk you through the sign-in process. (This process will look slightly different for each Git host, and even in some cases, whether you&#39;ve connected to an on-premises or cloud-hosted Git host.) Later Git commands in the same repository will re-use existing credentials or tokens that GCM has stored for as long as they&#39;re valid.&lt;/p&gt; 
&lt;p&gt;Read full command line usage &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/raw/release/docs/usage.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Configuring a proxy&lt;/h3&gt; 
&lt;p&gt;See detailed information &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/raw/release/docs/netconfig.md#http-proxy&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Additional Resources&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/raw/release/docs/README.md&quot;&gt;documentation index&lt;/a&gt; for links to additional resources.&lt;/p&gt; 
&lt;h2&gt;Experimental Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/raw/release/docs/windows-broker.md&quot;&gt;Windows broker (experimental)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Future features&lt;/h2&gt; 
&lt;p&gt;Curious about what&#39;s coming next in the GCM project? Take a look at the &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/milestones?direction=desc&amp;amp;sort=due_date&amp;amp;state=open&quot;&gt;project roadmap&lt;/a&gt;! You can find more details about the construction of the roadmap and how to interpret it &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/discussions/1203&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. See the &lt;a href=&quot;https://raw.githubusercontent.com/git-ecosystem/git-credential-manager/main/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;This project follows &lt;a href=&quot;https://raw.githubusercontent.com/git-ecosystem/git-credential-manager/main/CODE_OF_CONDUCT.md&quot;&gt;GitHub&#39;s Open Source Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;We&#39;re &lt;a href=&quot;https://raw.githubusercontent.com/git-ecosystem/git-credential-manager/main/LICENSE&quot;&gt;MIT&lt;/a&gt; licensed. When using GitHub logos, please be sure to follow the &lt;a href=&quot;https://github.com/logos&quot;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BeyondDimension/SteamTools</title>
      <link>https://github.com/BeyondDimension/SteamTools</link>
      <description>&lt;p&gt;🛠「Watt Toolkit」是一个开源跨平台的多功能 Steam 工具箱。&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Watt Toolkit 🧰 (原名 Steam++)&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/README.en.md&quot;&gt;English&lt;/a&gt; | 简体中文&lt;/p&gt; 
 &lt;p&gt;「Watt Toolkit」是一个开源跨平台的多功能游戏工具箱，此工具的大部分功能都是需要您下载安装 Steam 才能使用。&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/BeyondDimension/SteamTools/total?style=flat-square&quot; alt=&quot;Release Download&quot;&gt; &lt;a href=&quot;https://github.com/BeyondDimension/SteamTools/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/BeyondDimension/SteamTools?style=flat-square&quot; alt=&quot;Release Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/BeyondDimension/SteamTools?style=flat-square&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/BeyondDimension/SteamTools/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/BeyondDimension/SteamTools?style=flat-square&quot; alt=&quot;GitHub Star&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/BeyondDimension/SteamTools/network/members&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/BeyondDimension/SteamTools?style=flat-square&quot; alt=&quot;GitHub Fork&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/repo-size/BeyondDimension/SteamTools?style=flat-square&amp;amp;color=3cb371&quot; alt=&quot;GitHub Repo size&quot;&gt; &lt;a href=&quot;https://github.com/BeyondDimension/SteamTools/search?l=c%23&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/languages/top/BeyondDimension/SteamTools?style=flat-square&quot; alt=&quot;GitHub Repo Languages&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://learn.microsoft.com/zh-cn/dotnet/core/whats-new/dotnet-7&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dotnet-7.0-purple.svg?style=flat-square&amp;amp;color=512bd4&quot; alt=&quot;NET 7.0&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://learn.microsoft.com/zh-cn/dotnet/csharp/whats-new/csharp-11&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/c%23-11-brightgreen.svg?style=flat-square&amp;amp;color=6da86a&quot; alt=&quot;C# 11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://afdian.com/@rmbgame&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E7%88%B1%E5%8F%91%E7%94%B5-%E8%BD%AF%E5%A6%B9%E5%B8%81%E7%8E%A9%E5%AE%B6-blue.svg?style=flat-square&amp;amp;color=ea4aaa&amp;amp;logo=github-sponsors&quot; alt=&quot;爱发电&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://ko-fi.com/rmbgame&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Kofi-RMBGAME-orange.svg?style=flat-square&amp;amp;logo=kofi&quot; alt=&quot;Kofi&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.patreon.com/rmbgame&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Patreon-RMBGAME-red.svg?style=flat-square&amp;amp;logo=patreon&quot; alt=&quot;Patreon&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://crowdin.com/project/steampp&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/steampp/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://actions-badge.atrox.dev/BeyondDimension/SteamTools/goto?ref=develop&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2FSteamTools-Team%2FSteamTools%2Fbadge%3Fref%3Ddevelop&amp;amp;style=flat-square&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/BeyondDimension/SteamTools&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/BeyondDimension/SteamTools.svg?logo=github&quot; alt=&quot;GitHub Star&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitee.com/rmbgame/SteamTools&quot;&gt;&lt;img src=&quot;https://gitee.com/rmbgame/SteamTools/badge/star.svg?sanitize=true&quot; alt=&quot;Gitee Star&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://space.bilibili.com/797215&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/bilibili-%E8%BD%AF%E5%A6%B9%E5%B8%81%E7%8E%A9%E5%AE%B6-blue.svg?style=flat-square&amp;amp;logo=bilibili&quot; alt=&quot;Bilibili&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://jq.qq.com/?_wv=1027&amp;amp;k=3JKPt4xC&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/QQ%E7%BE%A4-960746023-blue.svg?style=flat-square&amp;amp;color=12b7f5&amp;amp;logo=qq&quot; alt=&quot;QQ群&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🚀 下载渠道&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://store.steampowered.com/app/2425030&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/steam.jpg&quot; alt=&quot;Steam 商店&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apps.microsoft.com/store/detail/watt-toolkit/9MTCFHS560NG?hl=zh-cn&amp;amp;gl=cn&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/msstore.en.png&quot; alt=&quot;Microsoft 应用商店&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://steampp.net&quot;&gt;软件官网&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BeyondDimension/SteamTools/releases&quot;&gt;GitHub 发行版&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/rmbgame/SteamTools/releases&quot;&gt;码云 发行版&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aur.archlinux.org/packages/watt-toolkit-bin&quot;&gt;Arch 用户仓库&lt;/a&gt;（当前 Release 构建）&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aur.archlinux.org/packages/watt-toolkit-git&quot;&gt;Arch 用户仓库 dev&lt;/a&gt;（拉取最新源码构建，也许会构建失败）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⬇️ &lt;a href=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/doc/download-guide.md&quot;&gt;下载指南&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;详见 &lt;a href=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/doc/download-guide.md&quot;&gt;./doc/download-guide.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;✨ 功能&lt;/h2&gt; 
&lt;p&gt;全新的 3.0 版本，支持自定义插件功能，以下功能为下载时自带的默认插件，可以自行删除或禁用。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;网络加速 &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/windows.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/linux.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/apple.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/android.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; 
  &lt;ul&gt; 
   &lt;li&gt;使用 &lt;a href=&quot;https://github.com/microsoft/reverse-proxy&quot;&gt;YARP.ReverseProxy&lt;/a&gt; 开源项目进行本地反代来支持更快的访问游戏网站。&lt;/li&gt; 
   &lt;li&gt;通过加速服务拦截网络请求将一些 JS 脚本注入在网页中，提供类似网页插件的功能。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;账号切换 &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/windows.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/linux.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/apple.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; 
  &lt;ul&gt; 
   &lt;li&gt;快速切换已在当前 PC 上登录过的 Steam、Epic、Uplay 等等多平台账号，与管理 Steam 家庭共享库排序及禁用等功能。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;库存游戏 &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/windows.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/linux.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/apple.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; 
  &lt;ul&gt; 
   &lt;li&gt;直接管理你的 Steam 游戏库存，可以编辑游戏名称和&lt;a href=&quot;https://www.steamgriddb.com&quot;&gt;自定义封面&lt;/a&gt;。&lt;/li&gt; 
   &lt;li&gt;监控 Steam 游戏下载进度实现 Steam 游戏下载完成定时关机功能。&lt;/li&gt; 
   &lt;li&gt;模拟运行 Steam 游戏，让您不用安装和下载对应的游戏也能挂游玩时间和掉落 Steam 卡片&lt;/li&gt; 
   &lt;li&gt;自助管理 Steam 游戏云存档，随时删除和上传自定义的存档文件至 Steam 云。&lt;/li&gt; 
   &lt;li&gt;解锁以及反解锁 Steam 游戏成就。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;本地令牌 &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/windows.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/linux.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/apple.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/android.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; 
  &lt;ul&gt; 
   &lt;li&gt;让您的手机令牌统一保存在电脑中、支持通用HOTP、TOTP、Steam、Google 等令牌导入。&lt;/li&gt; 
   &lt;li&gt;支持 Steam 登录账号自定绑定生成令牌、支持 Steam 批量确认交易功能。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;del&gt;自动挂卡(新版本开发中)&lt;/del&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/windows.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/linux.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/apple.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/android.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;del&gt;集成 &lt;a href=&quot;https://github.com/JustArchiNET/ArchiSteamFarm&quot;&gt;ArchiSteamFarm&lt;/a&gt; 在应用内提供 挂机掉落 Steam 集换式卡牌 等功能。&lt;/del&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;游戏工具 &lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/brands/windows.svg?sanitize=true&quot; width=&quot;16&quot; height=&quot;16&quot;&gt; 
  &lt;ul&gt; 
   &lt;li&gt;强制游戏窗口使用无边框窗口化、更多功能待开发。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🖥 支持的操作系统&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 11&lt;/li&gt; 
 &lt;li&gt;Windows 10 版本 1809（OS 内部版本 17763）或更高版本&lt;/li&gt; 
 &lt;li&gt;macOS 10.15 或更高版本&lt;/li&gt; 
 &lt;li&gt;Ubuntu 20.04 或更高版本&lt;/li&gt; 
 &lt;li&gt;Debian 11 或更高版本&lt;/li&gt; 
 &lt;li&gt;Fedora 37 或更高版本&lt;/li&gt; 
 &lt;li&gt;Deepin(UOS) 20 或更高版本&lt;/li&gt; 
 &lt;li&gt;&lt;del&gt;iOS 11 或更高版本&lt;/del&gt;（开发中…）&lt;/li&gt; 
 &lt;li&gt;Android 5.0(API 21) 或更高版本&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🧩 截图&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/screenshots/screenshot-windows-accelerator.webp&quot; width=&quot;800&quot;&gt; 
&lt;br&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/screenshots/screenshot-windows-gameaccount.webp&quot; width=&quot;800&quot;&gt; 
&lt;br&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/res/screenshots/screenshot-windows-gamelist.webp&quot; width=&quot;800&quot;&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;!--&lt;img src=&quot;./res/screenshots/screenshot-android-authenticator.png&quot; width=&quot;800&quot; /&gt;--&gt; 
&lt;h2&gt;从移动端 Steam App 导入令牌指南&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BeyondDimension/SteamTools/issues/2276&quot;&gt;Android 添加本地令牌（Xposed）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BeyondDimension/SteamTools/issues/2129&quot;&gt;iOS 添加本地令牌（无需越狱/网络抓包）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BeyondDimension/SteamTools/issues/299&quot;&gt;iOS 添加本地令牌（无需越狱/iTunes 备份）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BeyondDimension/SteamTools/issues/95&quot;&gt;iOS 添加本地令牌（需越狱）&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌏 路线图&lt;/h2&gt; 
&lt;p&gt;查看这个 &lt;a href=&quot;https://github.com/BeyondDimension/SteamTools/milestones&quot;&gt;milestones&lt;/a&gt; 来了解我们下一步的开发计划，并随时提出问题。&lt;/p&gt; 
&lt;h2&gt;⌨️ 开发环境&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://visualstudio.microsoft.com/zh-hans/vs&quot;&gt;Visual Studio 2022&lt;/a&gt; 或 &lt;a href=&quot;https://visualstudio.microsoft.com/zh-hans/vs/mac&quot;&gt;Visual Studio 2022 for Mac&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;系统要求 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/visualstudio/releases/2022/system-requirements&quot;&gt;Windows 11 版本 21H2 或更高版本：家庭版、专业版、专业教育版、专业工作站版、企业版和教育版&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/zh-cn/visualstudio/releases/2022/mac-system-requirements&quot;&gt;macOS Big Sur 11.0 或更高版本&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;工作负荷 
  &lt;ul&gt; 
   &lt;li&gt;Web 和云 
    &lt;ul&gt; 
     &lt;li&gt;ASP.NET 和 Web 开发&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;桌面应用和移动应用 
    &lt;ul&gt; 
     &lt;li&gt;使用 .NET 的移动开发 / .NET Multi-platform App UI 开发&lt;/li&gt; 
     &lt;li&gt;.NET 桌面开发&lt;/li&gt; 
     &lt;li&gt;通用 Windows 平台开发&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;单个组件 
  &lt;ul&gt; 
   &lt;li&gt;GitHub Extension for Visual Studio(可选)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com&quot;&gt;Visual Studio Marketplace&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=AvaloniaTeam.AvaloniaVS&quot;&gt;Avalonia for Visual Studio(可选)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=NUnitDevelopers.NUnitTemplatesforVisualStudio&quot;&gt;NUnit VS Templates(可选)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/rider&quot;&gt;JetBrains Rider&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://code.visualstudio.com&quot;&gt;Visual Studio Code&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://learn.microsoft.com/zh-cn/java/openjdk/download#openjdk-17&quot;&gt;OpenJDK 17&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://developer.android.google.cn/studio&quot;&gt;Android Studio Electric Eel 或更高版本&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://developer.apple.com/xcode&quot;&gt;Xcode 14 或更高版本&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🏗️ &lt;a href=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/src/README.md&quot;&gt;项目结构&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;详见&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/src/README.md&quot;&gt;./src/README.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🧑‍💼 加入我们&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zhipin.com/job_detail/b271a34a3efeb84c1XJ_2dW6ElVT.html&quot;&gt;.NET/C# 高级软件工程师（客户端方向）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zhipin.com/job_detail/0164142566ff52d71XJ_2dW7GVVW.html&quot;&gt;.NET/C# 高级软件工程师&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--
- [.NET/C# 软件工程师](https://www.zhipin.com/job_detail/80c0ad0f424e2ea61XJ_2t6-GVVZ.html)
- [高级 Web 前端工程师](https://www.zhipin.com/job_detail/e59317c527f3f49e1XJ92d24FVRV.html)
--&gt; 
&lt;h2&gt;📄 &lt;a href=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/doc/open-source-library.md&quot;&gt;开源代码库&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;详见&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/BeyondDimension/SteamTools/develop/doc/open-source-library.md&quot;&gt;./doc/open-source-library.md&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Azure/azure-sdk-for-net</title>
      <link>https://github.com/Azure/azure-sdk-for-net</link>
      <description>&lt;p&gt;This repository is for active development of the Azure SDK for .NET. For consumers of the SDK we recommend visiting our public developer docs at https://learn.microsoft.com/dotnet/azure/ or our versioned developer docs at https://azure.github.io/azure-sdk-for-net.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure SDK for .NET&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://azure.github.io/azure-sdk/releases/latest/dotnet.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/packages-latest-blue.svg?sanitize=true&quot; alt=&quot;Packages&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-net/dependencies/dependencies.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dependency-report-blue.svg?sanitize=true&quot; alt=&quot;Dependencies&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-net/dependencies/dependencyGraph/dagre.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dependency-graph-blue.svg?sanitize=true&quot; alt=&quot;Dependencies Graph&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository is for active development of the Azure SDK for .NET. For consumers of the SDK we recommend visiting our &lt;a href=&quot;https://docs.microsoft.com/dotnet/azure/&quot;&gt;public developer docs&lt;/a&gt; or our versioned &lt;a href=&quot;https://azure.github.io/azure-sdk-for-net&quot;&gt;developer docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;To get started with a library, see the README.md file located in the library&#39;s project folder. You can find these library folders grouped by service in the /sdk directory.&lt;/p&gt; 
&lt;p&gt;For tutorials, samples, quick starts, and other documentation, go to &lt;a href=&quot;https://docs.microsoft.com/dotnet/azure/&quot;&gt;Azure for .NET Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Packages available&lt;/h2&gt; 
&lt;p&gt;Each service might have a number of libraries available from each of the following categories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#client-new-releases&quot;&gt;Client - New Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#client-previous-versions&quot;&gt;Client - Previous Versions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#management-new-releases&quot;&gt;Management - New Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Azure/azure-sdk-for-net/main/#management-previous-versions&quot;&gt;Management - Previous Versions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Client: New Releases&lt;/h3&gt; 
&lt;p&gt;New wave of packages that we are announcing as &lt;strong&gt;GA&lt;/strong&gt; and several that are currently releasing in &lt;strong&gt;preview&lt;/strong&gt;. These libraries follow the &lt;a href=&quot;https://azure.github.io/azure-sdk/dotnet/guidelines/&quot;&gt;Azure SDK Design Guidelines for .NET&lt;/a&gt; and share a number of core features such as HTTP retries, logging, transport protocols, authentication protocols, etc., so that once you learn how to use these features in one client library, you will know how to use them in other client libraries. You can learn about these shared features at &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/raw/main/sdk/core/Azure.Core/README.md&quot;&gt;Azure.Core&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;These new client libraries can be identified by the naming used for their folder, package, and namespace. Each will start with &lt;code&gt;Azure&lt;/code&gt;, followed by the service category, and then the name of the service. For example &lt;code&gt;Azure.Storage.Blobs&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For a complete list of available packages, please see the &lt;a href=&quot;https://azure.github.io/azure-sdk/releases/latest/dotnet.html&quot;&gt;latest available packages&lt;/a&gt; page.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: If you need to ensure your code is ready for production we strongly recommend using one of the stable, non-preview libraries.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Client: Previous Versions&lt;/h3&gt; 
&lt;p&gt;Last stable versions of packages that are production-ready. These libraries provide similar functionalities to the preview packages, as they allow you to use and consume existing resources and interact with them, for example: upload a storage blob. Stable library directories typically contain &#39;Microsoft.Azure&#39; in their names, e.g. &#39;Microsoft.Azure.KeyVault&#39;. They might not implement the &lt;a href=&quot;https://azure.github.io/azure-sdk/dotnet_introduction.html&quot;&gt;guidelines&lt;/a&gt; or have the same feature set as the November releases. They do however offer wider coverage of services.&lt;/p&gt; 
&lt;h3&gt;Management: New Releases&lt;/h3&gt; 
&lt;p&gt;A new set of management libraries that follow the &lt;a href=&quot;https://azure.github.io/azure-sdk/dotnet_introduction.html&quot;&gt;Azure SDK Design Guidelines for .NET&lt;/a&gt; and based on &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/core/Azure.Core&quot;&gt;Azure.Core libraries&lt;/a&gt; are now in Public Preview. These new libraries provide a number of core capabilities that are shared amongst all Azure SDKs, including the intuitive Azure Identity library, an HTTP Pipeline with custom policies, error-handling, distributed tracing, and much more. You can find the list of new packages &lt;a href=&quot;https://azure.github.io/azure-sdk/releases/latest/dotnet.html&quot;&gt;on this page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To get started with these new libraries, please see the &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/raw/main/doc/mgmt_preview_quickstart.md&quot;&gt;quickstart guide here&lt;/a&gt;. These new libraries can be identified by namespaces that start with &lt;code&gt;Azure.ResourceManager&lt;/code&gt;, e.g. &lt;code&gt;Azure.ResourceManager.Network&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: If you need to ensure your code is ready for production use one of the stable, non-preview libraries.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Management: Previous Versions&lt;/h3&gt; 
&lt;p&gt;For a complete list of management libraries which enable you to provision and manage Azure resources, please check &lt;a href=&quot;https://azure.github.io/azure-sdk/releases/latest/all/dotnet.html&quot;&gt;here&lt;/a&gt;. They might not have the same feature set as the new releases but they do offer wider coverage of services. Previous versions of management libraries can be identified by namespaces that start with &lt;code&gt;Microsoft.Azure.Management&lt;/code&gt;, e.g. &lt;code&gt;Microsoft.Azure.Management.Network&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Documentation and code samples for these libraries can be found &lt;a href=&quot;https://azure.github.io/azure-sdk-for-net&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Need help?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;For reference documentation visit the &lt;a href=&quot;https://aka.ms/net-docs&quot;&gt;Azure SDK for .NET API Reference&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For tutorials, samples, quick starts, and other documentation, go to &lt;a href=&quot;https://docs.microsoft.com/dotnet/azure/&quot;&gt;Azure for .NET Developers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;File an issue via &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/issues/new/choose&quot;&gt;Github Issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Check &lt;a href=&quot;https://stackoverflow.com/questions/tagged/azure+.net&quot;&gt;previous questions&lt;/a&gt; or ask new ones on StackOverflow using &lt;code&gt;azure&lt;/code&gt; and &lt;code&gt;.net&lt;/code&gt; tags.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat with other community members &lt;a href=&quot;https://gitter.im/azure/azure-sdk-for-net?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/azure/azure-sdk-for-net&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Reporting security issues and security bugs&lt;/h3&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&quot;https://www.microsoft.com/msrc/faqs-report-an-issue&quot;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;We want your thoughts!&lt;/h2&gt; 
&lt;h3&gt;Feature Requests&lt;/h3&gt; 
&lt;p&gt;What features are important to you? You can let us know by looking at our open &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/issues?q=is%3Aopen+label%3Afeature-request+sort%3Areactions-%2B1-desc&quot;&gt;feature requests&lt;/a&gt; and sharing your thoughts by giving the issue a thumbs up or thumbs down. (Note the list is sorted by number of thumbs up in descending order.)&lt;/p&gt; 
&lt;h3&gt;Design Discussions&lt;/h3&gt; 
&lt;p&gt;We would love to incorporate the community&#39;s input into our library design process. Here&#39;s a list of &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/labels/design-discussion&quot;&gt;design discussions&lt;/a&gt; that we&#39;re currently having. Participate in the discussions by leaving your comments in the issue!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;For details on contributing to this repository, see the &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/raw/main/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.microsoft.com&quot;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LibreHardwareMonitor/LibreHardwareMonitor</title>
      <link>https://github.com/LibreHardwareMonitor/LibreHardwareMonitor</link>
      <description>&lt;p&gt;Libre Hardware Monitor is free software that can monitor the temperature sensors, fan speeds, voltages, load and clock speeds of your computer.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LibreHardwareMonitor&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/LibreHardwareMonitor/LibreHardwareMonitor&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/LibreHardwareMonitorLib/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/LibreHardwareMonitorLib&quot; alt=&quot;Nuget&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/LibreHardwareMonitorLib/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/LibreHardwareMonitorLib?label=nuget-pre&quot; alt=&quot;Nuget (with prereleases)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/LibreHardwareMonitorLib/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/LibreHardwareMonitorLib?label=nuget-downloads&quot; alt=&quot;Nuget&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Libre Hardware Monitor, a fork of Open Hardware Monitor, is free software that can monitor the temperature sensors, fan speeds, voltages, load and clock speeds of your computer.&lt;/p&gt; 
&lt;h2&gt;What&#39;s included?&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;.NET&lt;/th&gt; 
   &lt;th&gt;Build Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LibreHardwareMonitor&lt;/strong&gt; &lt;br&gt; Windows Forms based application that presents all data in a graphical interface&lt;/td&gt; 
   &lt;td&gt;.NET Framework 4.7.2&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/actions&quot;&gt;&lt;img src=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LibreHardwareMonitorLib&lt;/strong&gt; &lt;br&gt; Library that allows you to use all features in your own application&lt;/td&gt; 
   &lt;td&gt;.NET Framework 4.7.2, .NET 6.0, and .NET 8.0&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/actions&quot;&gt;&lt;img src=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;What can it do?&lt;/h2&gt; 
&lt;p&gt;You can read information from devices such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Motherboards&lt;/li&gt; 
 &lt;li&gt;Intel and AMD processors&lt;/li&gt; 
 &lt;li&gt;NVIDIA and AMD graphics cards&lt;/li&gt; 
 &lt;li&gt;HDD, SSD and NVMe hard drives&lt;/li&gt; 
 &lt;li&gt;Network cards&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Where can I download it?&lt;/h2&gt; 
&lt;p&gt;You can download the latest release &lt;a href=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/releases&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Nightly builds&lt;/h3&gt; 
&lt;p&gt;If you have a &lt;strong&gt;GitHub&lt;/strong&gt; account, you can download nightly builds &lt;a href=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/actions&quot;&gt;here&lt;/a&gt;. Otherwise, you can download the &lt;em&gt;latest&lt;/em&gt; nightly build &lt;a href=&quot;https://nightly.link/LibreHardwareMonitor/LibreHardwareMonitor/workflows/master/master/LibreHardwareMonitor-net472.zip&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How can I help improve it?&lt;/h2&gt; 
&lt;p&gt;The LibreHardwareMonitor team welcomes feedback and contributions!&lt;br&gt; You can check if it works properly on your motherboard. For many manufacturers, the way of reading data differs a bit, so if you notice any inaccuracies, please send us a pull request. If you have any suggestions or improvements, don&#39;t hesitate to create an issue.&lt;/p&gt; 
&lt;h2&gt;Developer information&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Integrate the library in own application&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add the &lt;a href=&quot;https://www.nuget.org/packages/LibreHardwareMonitorLib/&quot;&gt;LibreHardwareMonitorLib&lt;/a&gt; NuGet package to your application.&lt;/li&gt; 
 &lt;li&gt;Use the sample code below.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Sample code&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;public class UpdateVisitor : IVisitor
{
    public void VisitComputer(IComputer computer)
    {
        computer.Traverse(this);
    }
    public void VisitHardware(IHardware hardware)
    {
        hardware.Update();
        foreach (IHardware subHardware in hardware.SubHardware) subHardware.Accept(this);
    }
    public void VisitSensor(ISensor sensor) { }
    public void VisitParameter(IParameter parameter) { }
}

public void Monitor()
{
    Computer computer = new Computer
    {
        IsCpuEnabled = true,
        IsGpuEnabled = true,
        IsMemoryEnabled = true,
        IsMotherboardEnabled = true,
        IsControllerEnabled = true,
        IsNetworkEnabled = true,
        IsStorageEnabled = true
    };

    computer.Open();
    computer.Accept(new UpdateVisitor());

    foreach (IHardware hardware in computer.Hardware)
    {
        Console.WriteLine(&quot;Hardware: {0}&quot;, hardware.Name);
        
        foreach (IHardware subhardware in hardware.SubHardware)
        {
            Console.WriteLine(&quot;\tSubhardware: {0}&quot;, subhardware.Name);
            
            foreach (ISensor sensor in subhardware.Sensors)
            {
                Console.WriteLine(&quot;\t\tSensor: {0}, value: {1}&quot;, sensor.Name, sensor.Value);
            }
        }

        foreach (ISensor sensor in hardware.Sensors)
        {
            Console.WriteLine(&quot;\tSensor: {0}, value: {1}&quot;, sensor.Name, sensor.Value);
        }
    }
    
    computer.Close();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Administrator rights&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Some sensors require administrator privileges to access the data. Restart your IDE with admin privileges, or add an &lt;a href=&quot;https://learn.microsoft.com/en-us/windows/win32/sbscs/application-manifests&quot;&gt;app.manifest&lt;/a&gt; file to your project with requestedExecutionLevel on requireAdministrator.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;LibreHardwareMonitor is free and open source software licensed under MPL 2.0. You can use it in private and commercial projects. Keep in mind that you must include a copy of the license in your project.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/yarp</title>
      <link>https://github.com/dotnet/yarp</link>
      <description>&lt;p&gt;A toolkit for developing high-performance HTTP reverse proxy applications.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotnet/yarp/main/assets/icon.png&quot; alt=&quot;YARP Icon&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Welcome to the YARP project&lt;/h1&gt; 
&lt;p&gt;YARP (which stands for &quot;Yet Another Reverse Proxy&quot;) is a project to create a reverse proxy server. We found a bunch of internal teams at Microsoft who were either building a reverse proxy for their service or had been asking about APIs and tech for building one, so we decided to get them all together to work on a common solution, this project.&lt;/p&gt; 
&lt;p&gt;YARP is a reverse proxy toolkit for building fast proxy servers in .NET using the infrastructure from ASP.NET and .NET. The key differentiator for YARP is that it&#39;s been designed to be easily customized and tweaked to match the specific needs of each deployment scenario.&lt;/p&gt; 
&lt;p&gt;We expect YARP to ship as a library and project template that together provide a robust, performant proxy server. Its pipeline and modules are designed so that you can then customize the functionality for your needs. For example, while YARP supports configuration files, we expect that many users will want to manage the configuration programmatically based on their own backend configuration management system, YARP will provide a configuration API to enable that customization in-proc. YARP is designed with customizability as a primary scenario, rather than requiring you to break out to script or having to rebuild from source.&lt;/p&gt; 
&lt;h1&gt;Getting started&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;See our &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/fundamentals/servers/yarp/getting-started&quot;&gt;Getting Started&lt;/a&gt; docs.&lt;/li&gt; 
 &lt;li&gt;Try our &lt;a href=&quot;https://github.com/dotnet/yarp/releases&quot;&gt;previews&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Try our latest &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/yarp/main/docs/DailyBuilds.md&quot;&gt;daily build&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Updates&lt;/h1&gt; 
&lt;p&gt;For regular updates, see our &lt;a href=&quot;https://github.com/dotnet/yarp/releases&quot;&gt;releases page&lt;/a&gt;. Subscribe to release notifications on this repository to be notified of future updates (Watch -&amp;gt; Custom -&amp;gt; Releases).&lt;/p&gt; 
&lt;p&gt;If you want to live on the bleeding edge, you can pickup the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/yarp/main/docs/DailyBuilds.md&quot;&gt;daily builds&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Build&lt;/h1&gt; 
&lt;p&gt;To build the repo, you should only need to run &lt;code&gt;build.cmd&lt;/code&gt; (on Windows) or &lt;code&gt;build.sh&lt;/code&gt; (on Linux or macOS). The script will download the .NET SDK and build the solution.&lt;/p&gt; 
&lt;p&gt;For VS on Windows, install the latest &lt;a href=&quot;https://visualstudio.microsoft.com/downloads/&quot;&gt;VS 2022&lt;/a&gt; release and then run the &lt;code&gt;startvs.cmd&lt;/code&gt; script to launch Visual Studio using the appropriate local copy of the .NET SDK.&lt;/p&gt; 
&lt;p&gt;To set up local development with Visual Studio, Visual Studio for Mac or Visual Studio Code, you need to put the local copy of the .NET SDK in your &lt;code&gt;PATH&lt;/code&gt; environment variable. Our &lt;code&gt;Restore&lt;/code&gt; script fetches the latest build of .NET and installs it to a &lt;code&gt;.dotnet&lt;/code&gt; directory &lt;em&gt;within&lt;/em&gt; this repository.&lt;/p&gt; 
&lt;p&gt;We provide some scripts to set all this up for you. Just follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run the &lt;code&gt;restore.cmd&lt;/code&gt;/&lt;code&gt;restore.sh&lt;/code&gt; script to fetch the required .NET SDK locally (to the &lt;code&gt;.dotnet&lt;/code&gt; directory within this repo)&lt;/li&gt; 
 &lt;li&gt;&quot;Dot-source&quot; the &lt;code&gt;activate&lt;/code&gt; script to put the local .NET SDK on the PATH 
  &lt;ol&gt; 
   &lt;li&gt;For PowerShell, run: &lt;code&gt;. .\activate.ps1&lt;/code&gt; (note the leading &lt;code&gt;. &lt;/code&gt;, it is required!)&lt;/li&gt; 
   &lt;li&gt;For Linux/macOS/WSL, run: &lt;code&gt;. ./activate.sh&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;For CMD, there is no supported script. You can manually add the &lt;code&gt;.dotnet&lt;/code&gt; directory &lt;strong&gt;within this repo&lt;/strong&gt; to your &lt;code&gt;PATH&lt;/code&gt;. Ensure &lt;code&gt;where dotnet&lt;/code&gt; shows a path within this repository!&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Launch VS, VS for Mac, or VS Code!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;When you&#39;re done, you can run the &lt;code&gt;deactivate&lt;/code&gt; function to undo the changes to your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you&#39;re having trouble building the project, or developing in Visual Studio, please file an issue to let us know and we&#39;ll help out (and fix our scripts/tools as needed)!&lt;/p&gt; 
&lt;h1&gt;Testing&lt;/h1&gt; 
&lt;p&gt;The command to build and run all tests: &lt;code&gt;build.cmd/sh -test&lt;/code&gt;. To run specific test you may use XunitMethodName property: &lt;code&gt;dotnet build /t:Test /p:XunitMethodName={FullyQualifiedNamespace}.{ClassName}.{MethodName}&lt;/code&gt;. The tests can also be run from Visual Studio if launched using &lt;code&gt;startvs.cmd&lt;/code&gt;.&lt;/p&gt; 
&lt;h1&gt;Roadmap&lt;/h1&gt; 
&lt;p&gt;see &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/yarp/main/docs/roadmap.md&quot;&gt;docs/roadmap.md&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Reporting security issues and bugs&lt;/h1&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) at &lt;code&gt;secure@microsoft.com&lt;/code&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including &lt;a href=&quot;https://www.microsoft.com/msrc/pgp-key-msrc&quot;&gt;the MSRC PGP key&lt;/a&gt;, can be found at the &lt;a href=&quot;https://www.microsoft.com/msrc&quot;&gt;Microsoft Security Response Center&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/yarp/main/CONTRIBUTING.md&quot;&gt;contributing&lt;/a&gt; page for more info.&lt;/p&gt; 
&lt;p&gt;This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community. For more information, see the &lt;a href=&quot;https://dotnetfoundation.org/code-of-conduct&quot;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/PowerToys</title>
      <link>https://github.com/microsoft/PowerToys</link>
      <description>&lt;p&gt;Windows system utilities to maximize productivity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft PowerToys&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/images/overview/PT_hero_image.png&quot; alt=&quot;Hero image for Microsoft PowerToys&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://aka.ms/powertoys-docs&quot;&gt;How to use PowerToys&lt;/a&gt; | &lt;a href=&quot;https://aka.ms/installPowerToys&quot;&gt;Downloads &amp;amp; Release notes&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/#contributing&quot;&gt;Contributing to PowerToys&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/#whats-happening&quot;&gt;What&#39;s Happening&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/#powertoys-roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Microsoft PowerToys is a set of utilities for power users to tune and streamline their Windows experience for greater productivity. For more info on &lt;a href=&quot;https://aka.ms/powertoys-docs&quot;&gt;PowerToys overviews and how to use the utilities&lt;/a&gt;, or any other tools and resources for &lt;a href=&quot;https://learn.microsoft.com/windows/dev-environment/overview&quot;&gt;Windows development environments&lt;/a&gt;, head over to &lt;a href=&quot;https://aka.ms/powertoys-docs&quot;&gt;learn.microsoft.com&lt;/a&gt;!&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Current utilities:&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_AdvancedPaste&quot;&gt;Advanced Paste&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_AoT&quot;&gt;Always on Top&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_Awake&quot;&gt;PowerToys Awake&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_CmdNotFound&quot;&gt;Command Not Found&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ColorPicker&quot;&gt;Color Picker&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_CropAndLock&quot;&gt;Crop And Lock&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_EnvironmentVariables&quot;&gt;Environment Variables&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_FancyZones&quot;&gt;FancyZones&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_FileExplorerAddOns&quot;&gt;File Explorer Add-ons&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_FileLocksmith&quot;&gt;File Locksmith&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_HostsFileEditor&quot;&gt;Hosts File Editor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ImageResizer&quot;&gt;Image Resizer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_KeyboardManager&quot;&gt;Keyboard Manager&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_MouseUtilities&quot;&gt;Mouse utilities&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_MouseWithoutBorders&quot;&gt;Mouse Without Borders&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_NewPlus&quot;&gt;New+&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_Peek&quot;&gt;Peek&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_PastePlain&quot;&gt;Paste as Plain Text&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_PowerRename&quot;&gt;PowerRename&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_PowerToysRun&quot;&gt;PowerToys Run&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_QuickAccent&quot;&gt;Quick Accent&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_RegistryPreview&quot;&gt;Registry Preview&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ScreenRuler&quot;&gt;Screen Ruler&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ShortcutGuide&quot;&gt;Shortcut Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_TextExtractor&quot;&gt;Text Extractor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_Workspaces&quot;&gt;Workspaces&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ZoomIt&quot;&gt;ZoomIt&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Installing and running Microsoft PowerToys&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 11 or Windows 10 version 2004 (code name 20H1 / build number 19041) or newer.&lt;/li&gt; 
 &lt;li&gt;x64 or ARM64 processor&lt;/li&gt; 
 &lt;li&gt;Our installer will install the following items: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://go.microsoft.com/fwlink/p/?LinkId=2124703&quot;&gt;Microsoft Edge WebView2 Runtime&lt;/a&gt; bootstrapper. This will install the latest version.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Via GitHub with EXE [Recommended]&lt;/h3&gt; 
&lt;p&gt;Go to the &lt;a href=&quot;https://aka.ms/installPowerToys&quot;&gt;Microsoft PowerToys GitHub releases page&lt;/a&gt; and click on &lt;code&gt;Assets&lt;/code&gt; at the bottom to show the files available in the release. Please use the appropriate PowerToys installer that matches your machine&#39;s architecture and install scope. For most, it is &lt;code&gt;x64&lt;/code&gt; and per-user.&lt;/p&gt; 
&lt;!-- items that need to be updated release to release --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Filename&lt;/th&gt; 
   &lt;th&gt;sha256 hash&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per user - x64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.89.0/PowerToysUserSetup-0.89.0-x64.exe&quot;&gt;PowerToysUserSetup-0.89.0-x64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;B4F130CC96F321024A257499247F6FF6DA56612215ED3882E868AAE26C689E33&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per user - ARM64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.89.0/PowerToysUserSetup-0.89.0-arm64.exe&quot;&gt;PowerToysUserSetup-0.89.0-arm64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;F69B00F4E520EB09FA0D1D1669E21910C5225FE7A2EEDC0FA7C283B201A5F9C6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Machine wide - x64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.89.0/PowerToysSetup-0.89.0-x64.exe&quot;&gt;PowerToysSetup-0.89.0-x64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;E18AC8F9023E341CF7DAD35367FB9DDDB6565D83D8155DBCDDB40AE8A24AE731&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Machine wide - ARM64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.89.0/PowerToysSetup-0.89.0-arm64.exe&quot;&gt;PowerToysSetup-0.89.0-arm64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;17DEADEC601D6061D7AF4F487595CC36D9191813003CC2ECE381017F0EC71FBB&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;This is our preferred method.&lt;/p&gt; 
&lt;h3&gt;Via Microsoft Store&lt;/h3&gt; 
&lt;p&gt;Install from the &lt;a href=&quot;https://aka.ms/getPowertoys&quot;&gt;Microsoft Store&#39;s PowerToys page&lt;/a&gt;. You must be using the &lt;a href=&quot;https://blogs.windows.com/windowsExperience/2021/06/24/building-a-new-open-microsoft-store-on-windows-11/&quot;&gt;new Microsoft Store&lt;/a&gt; which is available for both Windows 11 and Windows 10.&lt;/p&gt; 
&lt;h3&gt;Via WinGet&lt;/h3&gt; 
&lt;p&gt;Download PowerToys from &lt;a href=&quot;https://github.com/microsoft/winget-cli#installing-the-client&quot;&gt;WinGet&lt;/a&gt;. Updating PowerToys via winget will respect current PowerToys installation scope. To install PowerToys, run the following command from the command line / PowerShell:&lt;/p&gt; 
&lt;h4&gt;User scope installer [default]&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;winget install Microsoft.PowerToys -s winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Machine-wide scope installer&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;winget install --scope machine Microsoft.PowerToys -s winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other install methods&lt;/h3&gt; 
&lt;p&gt;There are &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/unofficialInstallMethods.md&quot;&gt;community driven install methods&lt;/a&gt; such as Chocolatey and Scoop. If these are your preferred install solutions, you can find the install instructions there.&lt;/p&gt; 
&lt;h2&gt;Third-Party Run Plugins&lt;/h2&gt; 
&lt;p&gt;There is a collection of &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/thirdPartyRunPlugins.md&quot;&gt;third-party plugins&lt;/a&gt; created by the community that aren&#39;t distributed with PowerToys.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions of all types. Besides coding features / bug fixes, other ways to assist include spec writing, design, documentation, and finding bugs. We are excited to work with the power user community to build a set of tools for helping you get the most out of Windows.&lt;/p&gt; 
&lt;p&gt;We ask that &lt;strong&gt;before you start work on a feature that you would like to contribute&lt;/strong&gt;, please read our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/CONTRIBUTING.md&quot;&gt;Contributor&#39;s Guide&lt;/a&gt;. We would be happy to work with you to figure out the best approach, provide guidance and mentorship throughout feature development, and help avoid any wasted or duplicate effort.&lt;/p&gt; 
&lt;p&gt;Most contributions require you to agree to a &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;Contributor License Agreement (CLA)&lt;/a&gt; declaring that you grant us the rights to use your contribution and that you have permission to do so.&lt;/p&gt; 
&lt;p&gt;For guidance on developing for PowerToys, please read the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/devdocs&quot;&gt;developer docs&lt;/a&gt; for a detailed breakdown. This includes how to setup your computer to compile.&lt;/p&gt; 
&lt;h2&gt;What&#39;s Happening&lt;/h2&gt; 
&lt;h3&gt;PowerToys Roadmap&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/microsoft/PowerToys/wiki/Roadmap&quot;&gt;prioritized roadmap&lt;/a&gt; of features and utilities that the core team is focusing on.&lt;/p&gt; 
&lt;h3&gt;0.89 - February 2025 Update&lt;/h3&gt; 
&lt;p&gt;In this release, we focused on new features, stability, accessibility and automation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;✨Highlights&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enhanced Advanced Paste by adding media transcoding support to convert different video and audio file formats! Thanks &lt;a href=&quot;https://github.com/snickler&quot;&gt;@snickler&lt;/a&gt; for your help!&lt;/li&gt; 
 &lt;li&gt;Fixed crashes when loading thumbnails after the .NET 9 update and resolved PowerLauncher.exe blocking other MSI installers from creating shortcuts!&lt;/li&gt; 
 &lt;li&gt;Fixed accessibility issues across FancyZones, Image Resizer, and Settings to improve screen reader support and clarity!&lt;/li&gt; 
 &lt;li&gt;Enhanced UI automation framework across modules and added new tests to cover manual checks, with more improvements coming!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;General&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed an issue where updating PowerToys on Windows 11 did not properly update context menu entries, impacting New+, PowerRename, Image Resizer, and File Locksmith.&lt;/li&gt; 
 &lt;li&gt;Updated .NET Packages from 9.0.1 to 9.0.2. Thanks &lt;a href=&quot;https://github.com/snickler&quot;&gt;@snickler&lt;/a&gt; for this.&lt;/li&gt; 
 &lt;li&gt;Enabled compatibility with VS17.3 and later, for C++23. Thanks &lt;a href=&quot;https://github.com/LNKLEO&quot;&gt;@LNKLEO&lt;/a&gt; for this.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Paste&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added media transcoding support to convert different video and audio file formats, improved UI layouts, refined clipboard handling, and integrated Semantic Kernel for smarter pasting. Thanks &lt;a href=&quot;https://github.com/snickler&quot;&gt;@snickler&lt;/a&gt; for your help!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FancyZones&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed accessibility by improving the text for monitors, ensuring clearer naming and help text for screen readers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Image Resizer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed issues with Width and Height fields in Image Resizer&#39;s Custom preset, ensuring empty values no longer cause errors, settings save correctly, and auto-scaling behaves as expected. Thanks &lt;a href=&quot;https://github.com/daverayment&quot;&gt;@daverayment&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed accessibility by ensuring screen readers announce selected image dimensions in the combo-box for better navigation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Monaco Preview&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed open link in default browser rather than Microsoft Edge. Thanks &lt;a href=&quot;https://github.com/OldUser101&quot;&gt;@OldUser101&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mouse Highlighter&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed a highlight released on an Administrator window will start fading, instead of staying on the screen indefinitely until the mouse button is pressed again on an unelevated window.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mouse Without Borders&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed an issue in service mode where copy-paste and drag-drop file transfers didn’t work, ensuring seamless file operations.&lt;/li&gt; 
 &lt;li&gt;Enabled GPO for enable/disable for Mouse Without Borders in Service Mode. Thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review and comments!&lt;/li&gt; 
 &lt;li&gt;Fixed code maintainability by refactoring the oversized &#39;Common&#39; class in Mouse Without Borders into smaller, focused classes for better structure and clarity. Thanks &lt;a href=&quot;https://github.com/mikeclayton&quot;&gt;@mikeclayton&lt;/a&gt; and thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PowerRename&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supported negative value as Start value in regular expression, e.g. ${start=-1314}&lt;/li&gt; 
 &lt;li&gt;Enhanced RegEx help by adding $, ^, quantifiers, and common patterns for better usability. Thanks &lt;a href=&quot;https://github.com/PesBandi&quot;&gt;@PesBandi&lt;/a&gt; and thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PowerToys Run&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed crashes when loading thumbnails after the .NET 9 update by disabling CETCompat.&lt;/li&gt; 
 &lt;li&gt;Fixed PowerLauncher.exe blocking other MSI installers creating shortcuts. Thanks &lt;a href=&quot;https://github.com/OneBlue&quot;&gt;@OneBlue&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed Run’s dark mode detection to work reliably, preventing issues with incorrect theme detection and ensuring a smoother user experience. Thanks &lt;a href=&quot;https://github.com/daverayment&quot;&gt;@daverayment&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed list separator handling in Calculator, allowing functions with multiple arguments to work correctly across different locales. For example pow(2;3) would be replaced with pow(2,3). Thanks &lt;a href=&quot;https://github.com/PesBandi&quot;&gt;@PesBandi&lt;/a&gt; and thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review!&lt;/li&gt; 
 &lt;li&gt;Fixed angle unit conversions in the PowerToys Run calculator, allowing quick conversions between radians, degrees, and gradians. Thanks &lt;a href=&quot;https://github.com/OldUser101&quot;&gt;@OldUser101&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Accent&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added ǎ, ǒ and ǔ to the IPA character set. Thanks &lt;a href=&quot;https://github.com/PesBandi&quot;&gt;@PesBandi&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added ` (backtick) and ~ (tilde) to the VK_OEM_5 character set. Thanks &lt;a href=&quot;https://github.com/xanatos&quot;&gt;@xanatos&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added ς (final sigma) to the Greek character set. Thanks &lt;a href=&quot;https://github.com/IamSmeagol&quot;&gt;@IamSmeagol&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Settings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enabled GPO for the &quot;run at startup&quot; setting. Thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt; for review and comments!&lt;/li&gt; 
 &lt;li&gt;Fixed accessibility issue by allowing screen readers to announce the group name for secondary links in Settings pages, instead of reading link descriptions without context.&lt;/li&gt; 
 &lt;li&gt;Fixed an issue where the Color Picker shortcut was not displaying correctly in the Dashboard.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Workspaces&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed if a window was last placed on a disconnected monitor, it launches minimized and repositions within the main monitor&#39;s visible area when restored, instead of remaining off-screen and invisible.&lt;/li&gt; 
 &lt;li&gt;Fixed on ARM64 to correctly display icons for packaged apps by resolving path mismatches.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ZoomIt&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed warning C4706 and related error C2220 during build. Thanks &lt;a href=&quot;https://github.com/xanatos&quot;&gt;@xanatos&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed runner-ipc.md doc on the broken link. Thanks &lt;a href=&quot;https://github.com/daverayment&quot;&gt;@daverayment&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed the new plugin checklist by updating the target framework, removing duplicates, and improving statement organization. Thanks &lt;a href=&quot;https://github.com/hlaueriksson&quot;&gt;@hlaueriksson&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Updated runner documentation to align with the latest code structure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stabilized pipeline on ARM64 and forked build.&lt;/li&gt; 
 &lt;li&gt;Added fuzz testing for HostUILib, added as part of pipeline for OneFuzz.&lt;/li&gt; 
 &lt;li&gt;Fixed and improved UI-Test automation framework, and added new test cases for the FancyZones and Hosts module.&lt;/li&gt; 
 &lt;li&gt;Optimized Logger function as AOT compatible, improving performance by 18%.&lt;/li&gt; 
 &lt;li&gt;Made Common.UI and Setting.UI to be AOT compatible.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;What is being planned for version 0.90&lt;/h3&gt; 
&lt;p&gt;For &lt;a href=&quot;https://github.com/microsoft/PowerToys/issues?q=is%3Aissue+milestone%3A%22PowerToys+0.90%22&quot;&gt;v0.90&lt;/a&gt;, we&#39;ll work on the items below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;New module: PowerToys Run v2&lt;/li&gt; 
 &lt;li&gt;New module: File Actions Menu&lt;/li&gt; 
 &lt;li&gt;Working on installer upgrades&lt;/li&gt; 
 &lt;li&gt;Upgrading keyboard manager&#39;s editor UI&lt;/li&gt; 
 &lt;li&gt;Stability / bug fixes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;PowerToys Community&lt;/h2&gt; 
&lt;p&gt;The PowerToys team is extremely grateful to have the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/COMMUNITY.md&quot;&gt;support of an amazing active community&lt;/a&gt;. The work you do is incredibly important. PowerToys wouldn’t be nearly what it is today without your help filing bugs, updating documentation, guiding the design, or writing features. We want to say thank you and take time to recognize your work. Month by month, you directly help make PowerToys a better piece of software.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/CODE_OF_CONDUCT.md&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Privacy Statement&lt;/h2&gt; 
&lt;p&gt;The application logs basic diagnostic data (telemetry). For more information on privacy and what we collect, see our &lt;a href=&quot;https://aka.ms/powertoys-data-and-privacy-documentation&quot;&gt;PowerToys Data and Privacy documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>1Remote/1Remote</title>
      <link>https://github.com/1Remote/1Remote</link>
      <description>&lt;p&gt;One Remote Access Manager to Rule Them All&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;1Remote&lt;/h1&gt; 
&lt;p&gt;English | &lt;a href=&quot;https://github.com/1Remote/1Remote/wiki/Intro%E2%80%90ZhCn&quot;&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/1Remote/1Remote/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/1Remote/1Remote?color=Green&amp;amp;include_prereleases&quot; alt=&quot;version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codebeat.co/projects/github-com-1remote-1remote-main&quot;&gt;&lt;img src=&quot;https://codebeat.co/badges/32de66ab-1ba5-4eb3-b131-23982f20a376&quot; alt=&quot;codebeat badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/1Remote/1Remote/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/1Remote/1Remote&quot; alt=&quot;issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/1Remote/1Remote/raw/dev/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/1Remote/1Remote?color=blue&quot; alt=&quot;license&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fvshawn%2Fpremotem&amp;amp;count_bg=%23E83D61&amp;amp;title_bg=%23102B3E&amp;amp;icon=github.svg&amp;amp;icon_color=%23CED8E1&amp;amp;title=&amp;amp;edge_flat=false&quot; alt=&quot;Hits&quot;&gt;&lt;br&gt; &lt;img src=&quot;https://github.com/1Remote/1Remote/actions/workflows/build-on-dev-push.yml/badge.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;1Remote is a modern personal remote session manager and launcher. It is a single place to manage all your remote sessions supporting number of different protocols.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports RDP, SSH, VNC, Telnet, (S)FTP, &lt;a href=&quot;https://1remote.org/usage/protocol/especial/remoteapp/&quot;&gt;RemoteApp&lt;/a&gt;, &lt;a href=&quot;https://1remote.org/usage/protocol/especial/app/&quot;&gt;NoMachine and other app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Quick and convenient remote session launcher (Alt + M)&lt;/li&gt; 
 &lt;li&gt;Multi-screen and HiDPI RDP connection (Test on *&lt;em&gt;Win10 + 4k monitor &lt;em&gt;2&lt;/em&gt;&lt;/em&gt; RDP TO &lt;strong&gt;Win2016&lt;/strong&gt;)&lt;/li&gt; 
 &lt;li&gt;Detailed connection configuration: tags, icons, colors, connection scripts etc.&lt;/li&gt; 
 &lt;li&gt;Multiple languages, themes and tabbed interface&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://1remote.org/usage/overview/#importing-from-mremoteng&quot;&gt;Import connections from mRemoteNG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Customizable runners, in SFTP \ FTP \ VNC \ etc. protocols, you can replace the internal runner with your favourite tools.&lt;a href=&quot;https://1remote.org/usage/protocol/runner/&quot;&gt;wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Portable - just unpack and run&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚩Installation&lt;/h2&gt; 
&lt;p&gt;Latest Version: 1.1.1&lt;/p&gt; 
&lt;h3&gt;🗺&lt;a href=&quot;https://1remote.org/usage/quick-start/&quot;&gt;Quick start&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;🔻&lt;a href=&quot;https://1remote.org/download/&quot;&gt;Download&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;👓Overview&lt;/h2&gt; 
&lt;img src=&quot;https://1remote.org/img/home_override/hero1.png&quot; width=&quot;800&quot;&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://1remote.org/img/home_override/protocols.png&quot; width=&quot;400&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://1remote.org/img/home_override/hero2.gif&quot; width=&quot;400&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; ↑ Launcher(Alt + M) open RDP connection &amp;amp; resizing &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/1Remote/PRemoteM/Doc/DocPic/multi-screen.jpg&quot; width=&quot;500&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; ↑ RDP with Multi-monitors &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/1Remote/PRemoteM/Doc/DocPic/RemoteApp/demo.jpg&quot; width=&quot;800&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; ↑ RemoteApp via RDP &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/1Remote/PRemoteM/Doc/DocPic/Runner/vnc_runners.jpg&quot; width=&quot;800&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; ↑ Customizable runners &lt;/p&gt; 
&lt;h2&gt;Make 1Remote Stronger&lt;/h2&gt; 
&lt;p&gt;If you like &lt;strong&gt;1Remote&lt;/strong&gt;, help us make it stronger by doing any of the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Simply star this repository&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://1remote.org/usage/misc/help-translation/&quot;&gt;Help translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ko-fi.com/VShawn&quot;&gt;Buy a coffee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/1Remote/1Remote/main/DEVELOP.md&quot;&gt;Join DEV&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Special thanks&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.jetbrains.com/resharper/&quot;&gt;&lt;img src=&quot;http://www.tom-englert.de/Images/icon_ReSharper.png&quot; alt=&quot;ReSharper&quot; width=&quot;64&quot; height=&quot;64&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/efcore</title>
      <link>https://github.com/dotnet/efcore</link>
      <description>&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Repository&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build?definitionId=17&quot;&gt;&lt;img src=&quot;https://img.shields.io/azure-devops/build/dnceng-public/public/17/main&quot; alt=&quot;build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build?definitionId=17&quot;&gt;&lt;img src=&quot;https://img.shields.io/azure-devops/tests/dnceng-public/public/17/main&quot; alt=&quot;test results&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository is home to the following &lt;a href=&quot;https://dotnetfoundation.org/&quot;&gt;.NET Foundation&lt;/a&gt; projects. These projects are maintained by &lt;a href=&quot;https://github.com/microsoft&quot;&gt;Microsoft&lt;/a&gt; and licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/LICENSE.txt&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/#entity-framework-core&quot;&gt;Entity Framework Core&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/#microsoftdatasqlite&quot;&gt;Microsoft.Data.Sqlite&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img alt=&quot;EF&quot; src=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/logo/ef-logo.png&quot; width=&quot;32&quot;&gt; Entity Framework Core&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Microsoft.EntityFrameworkCore&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.EntityFrameworkCore&quot; alt=&quot;preview version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/Microsoft.EntityFrameworkCore&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;EF Core is a modern object-database mapper for .NET. It supports LINQ queries, change tracking, updates, and schema migrations. EF Core works with SQL Server, Azure SQL Database, SQLite, Azure Cosmos DB, MariaDB, MySQL, PostgreSQL, and other databases through a provider plugin API.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;EF Core is available on &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore&quot;&gt;NuGet&lt;/a&gt;. Install the provider package corresponding to your target database. See the &lt;a href=&quot;https://docs.microsoft.com/ef/core/providers/&quot;&gt;list of providers&lt;/a&gt; in the docs for additional databases.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet add package Microsoft.EntityFrameworkCore.Sqlite
dotnet add package Microsoft.EntityFrameworkCore.Cosmos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/absoluteLatest&quot;&gt;preview version&lt;/a&gt; to install.&lt;/p&gt; 
&lt;h3&gt;Daily builds&lt;/h3&gt; 
&lt;p&gt;We recommend using the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/DailyBuilds.md&quot;&gt;daily builds&lt;/a&gt; to get the latest code and provide feedback on EF Core. These builds contain latest features and bug fixes; previews and official releases lag significantly behind.&lt;/p&gt; 
&lt;h3&gt;Basic usage&lt;/h3&gt; 
&lt;p&gt;The following code demonstrates basic usage of EF Core. For a full tutorial configuring the &lt;code&gt;DbContext&lt;/code&gt;, defining the model, and creating the database, see &lt;a href=&quot;https://docs.microsoft.com/ef/core/get-started/&quot;&gt;getting started&lt;/a&gt; in the docs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cs&quot;&gt;using var db = new BloggingContext();

// Inserting data into the database
db.Add(new Blog { Url = &quot;http://blogs.msdn.com/adonet&quot; });
db.SaveChanges();

// Querying
var blog = db.Blogs
    .OrderBy(b =&amp;gt; b.BlogId)
    .First();

// Updating
blog.Url = &quot;https://devblogs.microsoft.com/dotnet&quot;;
blog.Posts.Add(
    new Post
    {
        Title = &quot;Hello World&quot;,
        Content = &quot;I wrote an app using EF Core!&quot;
    });
db.SaveChanges();

// Deleting
db.Remove(blog);
db.SaveChanges();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;p&gt;Most people use EF Core by installing pre-build NuGet packages, as shown above. Alternately, &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/getting-and-building-the-code.md&quot;&gt;the code can be built and packages can be created directly on your development machine&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;We welcome community pull requests for bug fixes, enhancements, and documentation. See &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CONTRIBUTING.md&quot;&gt;How to contribute&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Getting support&lt;/h3&gt; 
&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href=&quot;https://stackoverflow.com/questions/tagged/entity-framework-core*?tab=Votes&quot;&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href=&quot;https://github.com/dotnet/efcore/issues/new/choose&quot;&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/SUPPORT.md&quot;&gt;getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Microsoft.Data.Sqlite&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Microsoft.Data.Sqlite&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.Data.Sqlite&quot; alt=&quot;preview version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/Microsoft.Data.Sqlite.Core&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Microsoft.Data.Sqlite is a lightweight ADO.NET provider for SQLite. The EF Core provider for SQLite is built on top of this library. However, it can also be used independently or with other data access libraries.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;The latest stable version is available on &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite&quot;&gt;NuGet&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;dotnet add package Microsoft.Data.Sqlite
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the &lt;code&gt;--version&lt;/code&gt; option to specify a &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Data.Sqlite/absoluteLatest&quot;&gt;preview version&lt;/a&gt; to install.&lt;/p&gt; 
&lt;h3&gt;Daily builds&lt;/h3&gt; 
&lt;p&gt;We recommend using the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/DailyBuilds.md&quot;&gt;daily builds&lt;/a&gt; to get the latest code and provide feedback on Microsoft.Data.Sqlite. These builds contain latest features and bug fixes; previews and official releases lag significantly behind.&lt;/p&gt; 
&lt;h3&gt;Basic usage&lt;/h3&gt; 
&lt;p&gt;This library implements the common &lt;a href=&quot;https://docs.microsoft.com/dotnet/framework/data/adonet/&quot;&gt;ADO.NET&lt;/a&gt; abstractions for connections, commands, data readers, and so on. For more information, see &lt;a href=&quot;https://docs.microsoft.com/dotnet/standard/data/sqlite/&quot;&gt;Microsoft.Data.Sqlite&lt;/a&gt; on Microsoft Docs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cs&quot;&gt;using var connection = new SqliteConnection(&quot;Data Source=Blogs.db&quot;);
connection.Open();

using var command = connection.CreateCommand();
command.CommandText = &quot;SELECT Url FROM Blogs&quot;;

using var reader = command.ExecuteReader();
while (reader.Read())
{
    var url = reader.GetString(0);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;p&gt;Most people use Microsoft.Data.Sqlite by installing pre-build NuGet packages, as shown above. Alternately, &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/getting-and-building-the-code.md&quot;&gt;the code can be built and packages can be created directly on your development machine&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;We welcome community pull requests for bug fixes, enhancements, and documentation. See &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CONTRIBUTING.md&quot;&gt;How to contribute&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Getting support&lt;/h3&gt; 
&lt;p&gt;If you have a specific question about using these projects, we encourage you to &lt;a href=&quot;https://stackoverflow.com/questions/tagged/microsoft.data.sqlite&quot;&gt;ask it on Stack Overflow&lt;/a&gt;. If you encounter a bug or would like to request a feature, &lt;a href=&quot;https://github.com/dotnet/efcore/issues/new/choose&quot;&gt;submit an issue&lt;/a&gt;. For more details, see &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/SUPPORT.md&quot;&gt;getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;See also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ef/core/&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ef/core/what-is-new/roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/efcore/issues/23884&quot;&gt;Weekly status updates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ef/core/what-is-new/release-planning&quot;&gt;Release planning process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ef/core/providers/writing-a-provider&quot;&gt;How to write an EF Core provider&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/docs/security.md&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/efcore/main/.github/CODE_OF_CONDUCT.md&quot;&gt;Code of conduct&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>dotnet/aspire</title>
      <link>https://github.com/dotnet/aspire</link>
      <description>&lt;p&gt;Tools, templates, and packages to accelerate building observable, production-ready apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Aspire&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=274&amp;amp;branchName=main&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status%2Fdotnet%2Faspire%2Fdotnet.aspire?branchName=main&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspire/labels/help%20wanted&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/aspire/help%20wanted?style=flat&amp;amp;color=%24EC820&amp;amp;label=help%20wanted&quot; alt=&quot;Help Wanted&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspire/labels/good%20first%20issue&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/aspire/good%20first%20issue?style=flat&amp;amp;color=%24EC820&amp;amp;label=good%20first%20issue&quot; alt=&quot;Good First Issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.com/invite/h87kDAHQgJ&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/732297728826277939?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;label=Join%20our%20Discord&amp;amp;labelColor=512bd4&amp;amp;color=cyan&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is .NET Aspire?&lt;/h2&gt; 
&lt;p&gt;.NET Aspire is an opinionated, cloud ready stack for building observable, production ready, distributed applications. .NET Aspire is delivered through a collection of NuGet packages that handle specific cloud-native concerns. Cloud-native apps often consist of small, interconnected pieces or microservices rather than a single, monolithic code base. Cloud-native apps generally consume a large number of services, such as databases, messaging, and caching.&lt;/p&gt; 
&lt;p&gt;.NET Aspire helps with:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/aspire/get-started/aspire-overview?#orchestration&quot;&gt;Orchestration&lt;/a&gt;: .NET Aspire provides features for running and connecting multi-project applications and their dependencies.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/aspire/get-started/aspire-overview?#net-aspire-integrations&quot;&gt;Integrations&lt;/a&gt;: .NET Aspire integrations are NuGet packages for commonly used services, such as Redis or Postgres, with standardized interfaces ensuring they connect consistently and seamlessly with your app.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/aspire/get-started/aspire-overview?#project-templates-and-tooling&quot;&gt;Tooling&lt;/a&gt;: .NET Aspire comes with project templates and tooling experiences for Visual Studio and the dotnet CLI which help you create and interact with .NET Aspire apps.&lt;/p&gt; 
&lt;p&gt;To learn more, read the full &lt;a href=&quot;https://learn.microsoft.com/dotnet/aspire/&quot;&gt;.NET Aspire overview and documentation&lt;/a&gt;. Samples are available in the &lt;a href=&quot;https://github.com/dotnet/aspire-samples&quot;&gt;.NET Aspire samples repository&lt;/a&gt;. You can find the eShop sample &lt;a href=&quot;https://github.com/dotnet/eshop&quot;&gt;here&lt;/a&gt; and the Azure version &lt;a href=&quot;https://github.com/Azure-Samples/eShopOnAzure&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;What is in this repo?&lt;/h2&gt; 
&lt;p&gt;The .NET Aspire application host, dashboard, service discovery infrastructure, and all .NET Aspire integrations. It also contains the project templates.&lt;/p&gt; 
&lt;h2&gt;Using latest daily builds&lt;/h2&gt; 
&lt;p&gt;Follow instructions in &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspire/main/docs/using-latest-daily.md&quot;&gt;docs/using-latest-daily.md&lt;/a&gt; to get started using .NET Aspire with the latest daily build.&lt;/p&gt; 
&lt;h2&gt;How can I contribute?&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Many people all over the world have helped make .NET better.&lt;/p&gt; 
&lt;p&gt;Follow instructions in &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspire/main/docs/contributing.md&quot;&gt;docs/contributing.md&lt;/a&gt; for working in the code in the repository.&lt;/p&gt; 
&lt;h2&gt;Reporting security issues and security bugs&lt;/h2&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&quot;https://www.microsoft.com/msrc/faqs-report-an-issue&quot;&gt;Security TechCenter&lt;/a&gt;. You can also find these instructions in this repo&#39;s &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspire/main/SECURITY.md&quot;&gt;Security doc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also see info about related &lt;a href=&quot;https://www.microsoft.com/msrc/bounty-dot-net-core&quot;&gt;Microsoft .NET Core and ASP.NET Core Bug Bounty Program&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Note on containers used by .NET Aspire resource and client integrations&lt;/h3&gt; 
&lt;p&gt;The .NET team cannot evaluate the underlying third-party containers for which we have API support for suitability for specific customer requirements.&lt;/p&gt; 
&lt;p&gt;You should evaluate whichever containers you chose to compose and automate with Aspire to ensure they meet your, your employers or your government’s requirements on security and safety as well as cryptographic regulations and any other regulatory or corporate standards that may apply to your use of the container.&lt;/p&gt; 
&lt;h2&gt;.NET Foundation&lt;/h2&gt; 
&lt;p&gt;.NET Aspire is a &lt;a href=&quot;https://www.dotnetfoundation.org/projects&quot;&gt;.NET Foundation&lt;/a&gt; project.&lt;/p&gt; 
&lt;p&gt;There are many .NET related projects on GitHub.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/dotnet&quot;&gt;.NET home repo&lt;/a&gt;&amp;nbsp;- links to 100s of .NET projects, from Microsoft and the community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/aspnet/core&quot;&gt;ASP.NET Core home&lt;/a&gt; - the best place to start learning about ASP.NET Core.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This project has adopted the code of conduct defined by the &lt;a href=&quot;https://contributor-covenant.org&quot;&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community. For more information, see the &lt;a href=&quot;https://www.dotnetfoundation.org/code-of-conduct&quot;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The code in this repo is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspire/main/LICENSE.TXT&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cysharp/UniTask</title>
      <link>https://github.com/Cysharp/UniTask</link>
      <description>&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UniTask&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Cysharp/UniTask/actions&quot;&gt;&lt;img src=&quot;https://github.com/Cysharp/UniTask/workflows/Build-Debug/badge.svg?sanitize=true&quot; alt=&quot;GitHub Actions&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Cysharp/UniTask/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/Cysharp/UniTask.svg?sanitize=true&quot; alt=&quot;Releases&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Cysharp/UniTask/raw/master/README_CN.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/UniTask-%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-red&quot; alt=&quot;Readme_CN&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Struct based &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; and custom AsyncMethodBuilder to achieve zero allocation&lt;/li&gt; 
 &lt;li&gt;Makes all Unity AsyncOperations and Coroutines awaitable&lt;/li&gt; 
 &lt;li&gt;PlayerLoop based task(&lt;code&gt;UniTask.Yield&lt;/code&gt;, &lt;code&gt;UniTask.Delay&lt;/code&gt;, &lt;code&gt;UniTask.DelayFrame&lt;/code&gt;, etc..) that enable replacing all coroutine operations&lt;/li&gt; 
 &lt;li&gt;MonoBehaviour Message Events and uGUI Events as awaitable/async-enumerable&lt;/li&gt; 
 &lt;li&gt;Runs completely on Unity&#39;s PlayerLoop so doesn&#39;t use threads and runs on WebGL, wasm, etc.&lt;/li&gt; 
 &lt;li&gt;Asynchronous LINQ, with Channel and AsyncReactiveProperty&lt;/li&gt; 
 &lt;li&gt;TaskTracker window to prevent memory leaks&lt;/li&gt; 
 &lt;li&gt;Highly compatible behaviour with Task/ValueTask/IValueTaskSource&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For technical details, see blog post: &lt;a href=&quot;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&quot;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ &lt;/a&gt;&lt;br&gt; For advanced tips, see blog post: &lt;a href=&quot;https://medium.com/@neuecc/extends-unitywebrequest-via-async-decorator-pattern-advanced-techniques-of-unitask-ceff9c5ee846&quot;&gt;Extends UnityWebRequest via async decorator pattern — Advanced Techniques of UniTask&lt;/a&gt;&lt;/p&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#basics-of-unitask-and-asyncoperation&quot;&gt;Basics of UniTask and AsyncOperation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&quot;&gt;Cancellation and Exception handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#timeout-handling&quot;&gt;Timeout handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#progress&quot;&gt;Progress&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&quot;&gt;PlayerLoop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#async-void-vs-async-unitaskvoid&quot;&gt;async void vs async UniTaskVoid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasktracker&quot;&gt;UniTaskTracker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#external-assets&quot;&gt;External Assets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#asyncenumerable-and-async-linq&quot;&gt;AsyncEnumerable and Async LINQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#awaitable-events&quot;&gt;Awaitable Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#channel&quot;&gt;Channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#vs-awaitable&quot;&gt;vs Awaitable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unit-testing&quot;&gt;For Unit Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#threadpool-limitation&quot;&gt;ThreadPool limitation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#ienumeratortounitask-limitation&quot;&gt;IEnumerator.ToUniTask limitation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unityeditor&quot;&gt;For UnityEditor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#compare-with-standard-task-api&quot;&gt;Compare with Standard Task API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#pooling-configuration&quot;&gt;Pooling Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#allocation-on-profiler&quot;&gt;Allocation on Profiler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasksynchronizationcontext&quot;&gt;UniTaskSynchronizationContext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#api-references&quot;&gt;API References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&quot;&gt;UPM Package&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#install-via-git-url&quot;&gt;Install via git URL&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#net-core&quot;&gt;.NET Core&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Install via &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&quot;&gt;UPM package&lt;/a&gt; with git reference or asset package(&lt;code&gt;UniTask.*.*.*.unitypackage&lt;/code&gt;) available in &lt;a href=&quot;https://github.com/Cysharp/UniTask/releases&quot;&gt;UniTask/releases&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// extension awaiter/methods can be used by this namespace
using Cysharp.Threading.Tasks;

// You can return type as struct UniTask&amp;lt;T&amp;gt;(or UniTask), it is unity specialized lightweight alternative of Task&amp;lt;T&amp;gt;
// zero allocation and fast excution for zero overhead async/await integrate with Unity
async UniTask&amp;lt;string&amp;gt; DemoAsync()
{
    // You can await Unity&#39;s AsyncObject
    var asset = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;foo&quot;);
    var txt = (await UnityWebRequest.Get(&quot;https://...&quot;).SendWebRequest()).downloadHandler.text;
    await SceneManager.LoadSceneAsync(&quot;scene2&quot;);

    // .WithCancellation enables Cancel, GetCancellationTokenOnDestroy synchornizes with lifetime of GameObject
    // after Unity 2022.2, you can use `destroyCancellationToken` in MonoBehaviour
    var asset2 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;bar&quot;).WithCancellation(this.GetCancellationTokenOnDestroy());

    // .ToUniTask accepts progress callback(and all options), Progress.Create is a lightweight alternative of IProgress&amp;lt;T&amp;gt;
    var asset3 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;baz&quot;).ToUniTask(Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x)));

    // await frame-based operation like a coroutine
    await UniTask.DelayFrame(100); 

    // replacement of yield return new WaitForSeconds/WaitForSecondsRealtime
    await UniTask.Delay(TimeSpan.FromSeconds(10), ignoreTimeScale: false);
    
    // yield any playerloop timing(PreUpdate, Update, LateUpdate, etc...)
    await UniTask.Yield(PlayerLoopTiming.PreLateUpdate);

    // replacement of yield return null
    await UniTask.Yield();
    await UniTask.NextFrame();

    // replacement of WaitForEndOfFrame
#if UNITY_2023_1_OR_NEWER
    await UniTask.WaitForEndOfFrame();
#else
    // requires MonoBehaviour(CoroutineRunner))
    await UniTask.WaitForEndOfFrame(this); // this is MonoBehaviour
#endif

    // replacement of yield return new WaitForFixedUpdate(same as UniTask.Yield(PlayerLoopTiming.FixedUpdate))
    await UniTask.WaitForFixedUpdate();
    
    // replacement of yield return WaitUntil
    await UniTask.WaitUntil(() =&amp;gt; isActive == false);

    // special helper of WaitUntil
    await UniTask.WaitUntilValueChanged(this, x =&amp;gt; x.isActive);

    // You can await IEnumerator coroutines
    await FooCoroutineEnumerator();

    // You can await a standard task
    await Task.Run(() =&amp;gt; 100);

    // Multithreading, run on ThreadPool under this code
    await UniTask.SwitchToThreadPool();

    /* work on ThreadPool */

    // return to MainThread(same as `ObserveOnMainThread` in UniRx)
    await UniTask.SwitchToMainThread();

    // get async webrequest
    async UniTask&amp;lt;string&amp;gt; GetTextAsync(UnityWebRequest req)
    {
        var op = await req.SendWebRequest();
        return op.downloadHandler.text;
    }

    var task1 = GetTextAsync(UnityWebRequest.Get(&quot;http://google.com&quot;));
    var task2 = GetTextAsync(UnityWebRequest.Get(&quot;http://bing.com&quot;));
    var task3 = GetTextAsync(UnityWebRequest.Get(&quot;http://yahoo.com&quot;));

    // concurrent async-wait and get results easily by tuple syntax
    var (google, bing, yahoo) = await UniTask.WhenAll(task1, task2, task3);

    // shorthand of WhenAll, tuple can await directly
    var (google2, bing2, yahoo2) = await (task1, task2, task3);

    // return async-value.(or you can use `UniTask`(no result), `UniTaskVoid`(fire and forget)).
    return (asset as TextAsset)?.text ?? throw new InvalidOperationException(&quot;Asset not found&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Basics of UniTask and AsyncOperation&lt;/h2&gt; 
&lt;p&gt;UniTask features rely on C# 7.0(&lt;a href=&quot;https://github.com/dotnet/roslyn/raw/master/docs/features/task-types.md&quot;&gt;task-like custom async method builder feature&lt;/a&gt;) so the required Unity version is after &lt;code&gt;Unity 2018.3&lt;/code&gt;, the official lowest version supported is &lt;code&gt;Unity 2018.4.13f1&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Why is UniTask(custom task-like object) required? Because Task is too heavy and not matched to Unity threading (single-thread). UniTask does not use threads and SynchronizationContext/ExecutionContext because Unity&#39;s asynchronous object is automaticaly dispatched by Unity&#39;s engine layer. It achieves faster and lower allocation, and is completely integrated with Unity.&lt;/p&gt; 
&lt;p&gt;You can await &lt;code&gt;AsyncOperation&lt;/code&gt;, &lt;code&gt;ResourceRequest&lt;/code&gt;, &lt;code&gt;AssetBundleRequest&lt;/code&gt;, &lt;code&gt;AssetBundleCreateRequest&lt;/code&gt;, &lt;code&gt;UnityWebRequestAsyncOperation&lt;/code&gt;, &lt;code&gt;AsyncGPUReadbackRequest&lt;/code&gt;, &lt;code&gt;IEnumerator&lt;/code&gt; and others when &lt;code&gt;using Cysharp.Threading.Tasks;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;UniTask provides three pattern of extension methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;* await asyncOperation;
* .WithCancellation(CancellationToken);
* .ToUniTask(IProgress, PlayerLoopTiming, CancellationToken);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;WithCancellation&lt;/code&gt; is a simple version of &lt;code&gt;ToUniTask&lt;/code&gt;, both return &lt;code&gt;UniTask&lt;/code&gt;. For details of cancellation, see: &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&quot;&gt;Cancellation and Exception handling&lt;/a&gt; section.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: await directly is returned from native timing of PlayerLoop but WithCancellation and ToUniTask are returned from specified PlayerLoopTiming. For details of timing, see: &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&quot;&gt;PlayerLoop&lt;/a&gt; section.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: AssetBundleRequest has &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;allAssets&lt;/code&gt;, default await returns &lt;code&gt;asset&lt;/code&gt;. If you want to get &lt;code&gt;allAssets&lt;/code&gt;, you can use &lt;code&gt;AwaitForAllAssets()&lt;/code&gt; method.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The type of &lt;code&gt;UniTask&lt;/code&gt; can use utilities like &lt;code&gt;UniTask.WhenAll&lt;/code&gt;, &lt;code&gt;UniTask.WhenAny&lt;/code&gt;, &lt;code&gt;UniTask.WhenEach&lt;/code&gt;. They are like &lt;code&gt;Task.WhenAll&lt;/code&gt;/&lt;code&gt;Task.WhenAny&lt;/code&gt; but the return type is more useful. They return value tuples so you can deconstruct each result and pass multiple types.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTaskVoid LoadManyAsync()
{
    // parallel load.
    var (a, b, c) = await UniTask.WhenAll(
        LoadAsSprite(&quot;foo&quot;),
        LoadAsSprite(&quot;bar&quot;),
        LoadAsSprite(&quot;baz&quot;));
}

async UniTask&amp;lt;Sprite&amp;gt; LoadAsSprite(string path)
{
    var resource = await Resources.LoadAsync&amp;lt;Sprite&amp;gt;(path);
    return (resource as Sprite);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to convert a callback to UniTask, you can use &lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt; which is a lightweight edition of &lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public UniTask&amp;lt;int&amp;gt; WrapByUniTaskCompletionSource()
{
    var utcs = new UniTaskCompletionSource&amp;lt;int&amp;gt;();

    // when complete, call utcs.TrySetResult();
    // when failed, call utcs.TrySetException();
    // when cancel, call utcs.TrySetCanceled();

    return utcs.Task; //return UniTask&amp;lt;int&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can convert Task -&amp;gt; UniTask: &lt;code&gt;AsUniTask&lt;/code&gt;, &lt;code&gt;UniTask&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&amp;lt;AsyncUnit&amp;gt;&lt;/code&gt;: &lt;code&gt;AsAsyncUnitUniTask&lt;/code&gt;, &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;: &lt;code&gt;AsUniTask&lt;/code&gt;. &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;&#39;s conversion cost is free.&lt;/p&gt; 
&lt;p&gt;If you want to convert async to coroutine, you can use &lt;code&gt;.ToCoroutine()&lt;/code&gt;, this is useful if you want to only allow using the coroutine system.&lt;/p&gt; 
&lt;p&gt;UniTask can not await twice. This is a similar constraint to the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask-1?view=netcore-3.1&quot;&gt;ValueTask/IValueTaskSource&lt;/a&gt; introduced in .NET Standard 2.1.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The following operations should never be performed on a ValueTask
  &lt;tresult&gt;
    instance:
  &lt;/tresult&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Awaiting the instance multiple times.&lt;/li&gt; 
  &lt;li&gt;Calling AsTask multiple times.&lt;/li&gt; 
  &lt;li&gt;Using .Result or .GetAwaiter().GetResult() when the operation hasn&#39;t yet completed, or using them multiple times.&lt;/li&gt; 
  &lt;li&gt;Using more than one of these techniques to consume the instance.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;If you do any of the above, the results are undefined.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var task = UniTask.DelayFrame(10);
await task;
await task; // NG, throws Exception
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Store to the class field, you can use &lt;code&gt;UniTask.Lazy&lt;/code&gt; that supports calling multiple times. &lt;code&gt;.Preserve()&lt;/code&gt; allows for multiple calls (internally cached results). This is useful when there are multiple calls in a function scope.&lt;/p&gt; 
&lt;p&gt;Also &lt;code&gt;UniTaskCompletionSource&lt;/code&gt; can await multiple times and await from many callers.&lt;/p&gt; 
&lt;h2&gt;Cancellation and Exception handling&lt;/h2&gt; 
&lt;p&gt;Some UniTask factory methods have a &lt;code&gt;CancellationToken cancellationToken = default&lt;/code&gt; parameter. Also some async operations for Unity have &lt;code&gt;WithCancellation(CancellationToken)&lt;/code&gt; and &lt;code&gt;ToUniTask(..., CancellationToken cancellation = default)&lt;/code&gt; extension methods.&lt;/p&gt; 
&lt;p&gt;You can pass &lt;code&gt;CancellationToken&lt;/code&gt; to parameter by standard &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.cancellationtokensource&quot;&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cts = new CancellationTokenSource();

cancelButton.onClick.AddListener(() =&amp;gt;
{
    cts.Cancel();
});

await UnityWebRequest.Get(&quot;http://google.co.jp&quot;).SendWebRequest().WithCancellation(cts.Token);

await UniTask.DelayFrame(1000, cancellationToken: cts.Token);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;CancellationToken can be created by &lt;code&gt;CancellationTokenSource&lt;/code&gt; or MonoBehaviour&#39;s extension method &lt;code&gt;GetCancellationTokenOnDestroy&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// this CancellationToken lifecycle is same as GameObject.
await UniTask.DelayFrame(1000, cancellationToken: this.GetCancellationTokenOnDestroy());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For propagate Cancellation, all async method recommend to accept &lt;code&gt;CancellationToken cancellationToken&lt;/code&gt; at last argument, and pass &lt;code&gt;CancellationToken&lt;/code&gt; from root to end.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await FooAsync(this.GetCancellationTokenOnDestroy());

// ---

async UniTask FooAsync(CancellationToken cancellationToken)
{
    await BarAsync(cancellationToken);
}

async UniTask BarAsync(CancellationToken cancellationToken)
{
    await UniTask.Delay(TimeSpan.FromSeconds(3), cancellationToken);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;CancellationToken&lt;/code&gt; means lifecycle of async. You can hold your own lifecycle insteadof default CancellationTokenOnDestroy.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class MyBehaviour : MonoBehaviour
{
    CancellationTokenSource disableCancellation = new CancellationTokenSource();
    CancellationTokenSource destroyCancellation = new CancellationTokenSource();

    private void OnEnable()
    {
        if (disableCancellation != null)
        {
            disableCancellation.Dispose();
        }
        disableCancellation = new CancellationTokenSource();
    }

    private void OnDisable()
    {
        disableCancellation.Cancel();
    }

    private void OnDestroy()
    {
        destroyCancellation.Cancel();
        destroyCancellation.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After Unity 2022.2, Unity adds CancellationToken in &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/MonoBehaviour-destroyCancellationToken.html&quot;&gt;MonoBehaviour.destroyCancellationToken&lt;/a&gt; and &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Application-exitCancellationToken.html&quot;&gt;Application.exitCancellationToken&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When cancellation is detected, all methods throw &lt;code&gt;OperationCanceledException&lt;/code&gt; and propagate upstream. When exception(not limited to &lt;code&gt;OperationCanceledException&lt;/code&gt;) is not handled in async method, it is propagated finally to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. The default behaviour of received unhandled exception is to write log as exception. Log level can be changed using &lt;code&gt;UniTaskScheduler.UnobservedExceptionWriteLogType&lt;/code&gt;. If you want to use custom behaviour, set an action to &lt;code&gt;UniTaskScheduler.UnobservedTaskException.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;And also &lt;code&gt;OperationCanceledException&lt;/code&gt; is a special exception, this is silently ignored at &lt;code&gt;UnobservedTaskException&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to cancel behaviour in an async UniTask method, throw &lt;code&gt;OperationCanceledException&lt;/code&gt; manually.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask&amp;lt;int&amp;gt; FooAsync()
{
    await UniTask.Yield();
    throw new OperationCanceledException();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you handle an exception but want to ignore(propagate to global cancellation handling), use an exception filter.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask&amp;lt;int&amp;gt; BarAsync()
{
    try
    {
        var x = await FooAsync();
        return x * 2;
    }
    catch (Exception ex) when (!(ex is OperationCanceledException)) // when (ex is not OperationCanceledException) at C# 9.0
    {
        return -1;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;throws/catch &lt;code&gt;OperationCanceledException&lt;/code&gt; is slightly heavy, so if performance is a concern, use &lt;code&gt;UniTask.SuppressCancellationThrow&lt;/code&gt; to avoid OperationCanceledException throw. It returns &lt;code&gt;(bool IsCanceled, T Result)&lt;/code&gt; instead of throwing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var (isCanceled, _) = await UniTask.DelayFrame(10, cancellationToken: cts.Token).SuppressCancellationThrow();
if (isCanceled)
{
    // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Only suppress throws if you call directly into the most source method. Otherwise, the return value will be converted, but the entire pipeline will not suppress throws.&lt;/p&gt; 
&lt;p&gt;Some features that use Unity&#39;s player loop, such as &lt;code&gt;UniTask.Yield&lt;/code&gt; and &lt;code&gt;UniTask.Delay&lt;/code&gt; etc, determines CancellationToken state on the player loop. This means it does not cancel immediately upon &lt;code&gt;CancellationToken&lt;/code&gt; fired.&lt;/p&gt; 
&lt;p&gt;If you want to change this behaviour, the cancellation to be immediate, set the &lt;code&gt;cancelImmediately&lt;/code&gt; flag as an argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await UniTask.Yield(cancellationToken, cancelImmediately: true);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Setting &lt;code&gt;cancelImmediately&lt;/code&gt; to true and detecting an immediate cancellation is more costly than the default behavior. This is because it uses &lt;code&gt;CancellationToken.Register&lt;/code&gt;; it is heavier than checking CancellationToken on the player loop.&lt;/p&gt; 
&lt;h2&gt;Timeout handling&lt;/h2&gt; 
&lt;p&gt;Timeout is a variation of cancellation. You can set timeout by &lt;code&gt;CancellationTokenSouce.CancelAfterSlim(TimeSpan)&lt;/code&gt; and pass CancellationToken to async methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cts = new CancellationTokenSource();
cts.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.

try
{
    await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest().WithCancellation(cts.Token);
}
catch (OperationCanceledException ex)
{
    if (ex.CancellationToken == cts.Token)
    {
        UnityEngine.Debug.Log(&quot;Timeout&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;CancellationTokenSouce.CancelAfter&lt;/code&gt; is a standard api. However in Unity you should not use it because it depends threading timer. &lt;code&gt;CancelAfterSlim&lt;/code&gt; is UniTask&#39;s extension methods, it uses PlayerLoop instead.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;CancellationTokenSource.CreateLinkedTokenSource&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cancelToken = new CancellationTokenSource();
cancelButton.onClick.AddListener(() =&amp;gt;
{
    cancelToken.Cancel(); // cancel from button click.
});

var timeoutToken = new CancellationTokenSource();
timeoutToken.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.

try
{
    // combine token
    var linkedTokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancelToken.Token, timeoutToken.Token);

    await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest().WithCancellation(linkedTokenSource.Token);
}
catch (OperationCanceledException ex)
{
    if (timeoutToken.IsCancellationRequested)
    {
        UnityEngine.Debug.Log(&quot;Timeout.&quot;);
    }
    else if (cancelToken.IsCancellationRequested)
    {
        UnityEngine.Debug.Log(&quot;Cancel clicked.&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optimize for reduce allocation of CancellationTokenSource for timeout per call async method, you can use UniTask&#39;s &lt;code&gt;TimeoutController&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;TimeoutController timeoutController = new TimeoutController(); // setup to field for reuse.

async UniTask FooAsync()
{
    try
    {
        // you can pass timeoutController.Timeout(TimeSpan) to cancellationToken.
        await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest()
            .WithCancellation(timeoutController.Timeout(TimeSpan.FromSeconds(5)));
        timeoutController.Reset(); // call Reset(Stop timeout timer and ready for reuse) when succeed.
    }
    catch (OperationCanceledException ex)
    {
        if (timeoutController.IsTimeout())
        {
            UnityEngine.Debug.Log(&quot;timeout&quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;new TimeoutController(CancellationToken)&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;TimeoutController timeoutController;
CancellationTokenSource clickCancelSource;

void Start()
{
    this.clickCancelSource = new CancellationTokenSource();
    this.timeoutController = new TimeoutController(clickCancelSource);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: UniTask has &lt;code&gt;.Timeout&lt;/code&gt;, &lt;code&gt;.TimeoutWithoutException&lt;/code&gt; methods however, if possible, do not use these, please pass &lt;code&gt;CancellationToken&lt;/code&gt;. Because &lt;code&gt;.Timeout&lt;/code&gt; work from external of task, can not stop timeoutted task. &lt;code&gt;.Timeout&lt;/code&gt; means ignore result when timeout. If you pass a &lt;code&gt;CancellationToken&lt;/code&gt; to the method, it will act from inside of the task, so it is possible to stop a running task.&lt;/p&gt; 
&lt;h2&gt;Progress&lt;/h2&gt; 
&lt;p&gt;Some async operations for unity have &lt;code&gt;ToUniTask(IProgress&amp;lt;float&amp;gt; progress = null, ...)&lt;/code&gt; extension methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var progress = Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x));

var request = await UnityWebRequest.Get(&quot;http://google.co.jp&quot;)
    .SendWebRequest()
    .ToUniTask(progress: progress);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should not use standard &lt;code&gt;new System.Progress&amp;lt;T&amp;gt;&lt;/code&gt;, because it causes allocation every time. Use &lt;code&gt;Cysharp.Threading.Tasks.Progress&lt;/code&gt; instead. This progress factory has two methods, &lt;code&gt;Create&lt;/code&gt; and &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt;. &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt; calls only when the progress value has changed.&lt;/p&gt; 
&lt;p&gt;Implementing IProgress interface to caller is better as there is no lambda allocation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class Foo : MonoBehaviour, IProgress&amp;lt;float&amp;gt;
{
    public void Report(float value)
    {
        UnityEngine.Debug.Log(value);
    }

    public async UniTaskVoid WebRequest()
    {
        var request = await UnityWebRequest.Get(&quot;http://google.co.jp&quot;)
            .SendWebRequest()
            .ToUniTask(progress: this); // pass this
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;PlayerLoop&lt;/h2&gt; 
&lt;p&gt;UniTask is run on a custom &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/LowLevel.PlayerLoop.html&quot;&gt;PlayerLoop&lt;/a&gt;. UniTask&#39;s playerloop based methods (such as &lt;code&gt;Delay&lt;/code&gt;, &lt;code&gt;DelayFrame&lt;/code&gt;, &lt;code&gt;asyncOperation.ToUniTask&lt;/code&gt;, etc...) accept this &lt;code&gt;PlayerLoopTiming&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public enum PlayerLoopTiming
{
    Initialization = 0,
    LastInitialization = 1,

    EarlyUpdate = 2,
    LastEarlyUpdate = 3,

    FixedUpdate = 4,
    LastFixedUpdate = 5,

    PreUpdate = 6,
    LastPreUpdate = 7,

    Update = 8,
    LastUpdate = 9,

    PreLateUpdate = 10,
    LastPreLateUpdate = 11,

    PostLateUpdate = 12,
    LastPostLateUpdate = 13
    
#if UNITY_2020_2_OR_NEWER
    TimeUpdate = 14,
    LastTimeUpdate = 15,
#endif
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It indicates when to run, you can check &lt;a href=&quot;https://gist.github.com/neuecc/bc3a1cfd4d74501ad057e49efcd7bdae&quot;&gt;PlayerLoopList.md&lt;/a&gt; to Unity&#39;s default playerloop and injected UniTask&#39;s custom loop.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is similar to &lt;code&gt;yield return null&lt;/code&gt; in a coroutine, but it is called before Update(Update and uGUI events(button.onClick, etc...) are called on &lt;code&gt;ScriptRunBehaviourUpdate&lt;/code&gt;, yield return null is called on &lt;code&gt;ScriptRunDelayedDynamicFrameRate&lt;/code&gt;). &lt;code&gt;PlayerLoopTiming.FixedUpdate&lt;/code&gt; is similar to &lt;code&gt;WaitForFixedUpdate&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;PlayerLoopTiming.LastPostLateUpdate&lt;/code&gt; is not equivalent to coroutine&#39;s &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;. Coroutine&#39;s WaitForEndOfFrame seems to run after the PlayerLoop is done. Some methods that require coroutine&#39;s end of frame(&lt;code&gt;Texture2D.ReadPixels&lt;/code&gt;, &lt;code&gt;ScreenCapture.CaptureScreenshotAsTexture&lt;/code&gt;, &lt;code&gt;CommandBuffer&lt;/code&gt;, etc) do not work correctly when replaced with async/await. In these cases, pass MonoBehaviour(coroutine runnner) to &lt;code&gt;UniTask.WaitForEndOfFrame&lt;/code&gt;. For example, &lt;code&gt;await UniTask.WaitForEndOfFrame(this);&lt;/code&gt; is lightweight allocation free alternative of &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;Note: In Unity 2023.1 or newer, &lt;code&gt;await UniTask.WaitForEndOfFrame();&lt;/code&gt; no longer requires MonoBehaviour. It uses &lt;code&gt;UnityEngine.Awaitable.EndOfFrameAsync&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;yield return null&lt;/code&gt; and &lt;code&gt;UniTask.Yield&lt;/code&gt; are similar but different. &lt;code&gt;yield return null&lt;/code&gt; always returns next frame but &lt;code&gt;UniTask.Yield&lt;/code&gt; returns next called. That is, call &lt;code&gt;UniTask.Yield(PlayerLoopTiming.Update)&lt;/code&gt; on &lt;code&gt;PreUpdate&lt;/code&gt;, it returns same frame. &lt;code&gt;UniTask.NextFrame()&lt;/code&gt; guarantees return next frame, you can expect this to behave exactly the same as &lt;code&gt;yield return null&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;UniTask.Yield(without CancellationToken) is a special type, returns &lt;code&gt;YieldAwaitable&lt;/code&gt; and runs on YieldRunner. It is the most lightweight and fastest.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;AsyncOperation&lt;/code&gt; is returned from native timing. For example, await &lt;code&gt;SceneManager.LoadSceneAsync&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.UpdatePreloading&lt;/code&gt; and after being called, the loaded scene&#39;s &lt;code&gt;Start&lt;/code&gt; is called from &lt;code&gt;EarlyUpdate.ScriptRunDelayedStartupFrame&lt;/code&gt;. Also &lt;code&gt;await UnityWebRequest&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.ExecuteMainThreadJobs&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In UniTask, await directly uses native timing, while &lt;code&gt;WithCancellation&lt;/code&gt; and &lt;code&gt;ToUniTask&lt;/code&gt; use specified timing. This is usually not a particular problem, but with &lt;code&gt;LoadSceneAsync&lt;/code&gt;, it causes a different order of Start and continuation after await. So it is recommended not to use &lt;code&gt;LoadSceneAsync.ToUniTask&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When using Unity 2023.1 or newer, ensure you have &lt;code&gt;using UnityEngine;&lt;/code&gt; in the using statements of your file when working with new &lt;code&gt;UnityEngine.Awaitable&lt;/code&gt; methods like &lt;code&gt;SceneManager.LoadSceneAsync&lt;/code&gt;. This prevents compilation errors by avoiding the use of the &lt;code&gt;UnityEngine.AsyncOperation&lt;/code&gt; version.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;In the stacktrace, you can check where it is running in playerloop.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83735571-83caea80-a68b-11ea-8d22-5e22864f0d24.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;By default, UniTask&#39;s PlayerLoop is initialized at &lt;code&gt;[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The order in which methods are called in BeforeSceneLoad is nondeterministic, so if you want to use UniTask in other BeforeSceneLoad methods, you should try to initialize it before this.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// AfterAssembliesLoaded is called before BeforeSceneLoad
[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterAssembliesLoaded)]
public static void InitUniTaskLoop()
{
    var loop = PlayerLoop.GetCurrentPlayerLoop();
    Cysharp.Threading.Tasks.PlayerLoopHelper.Initialize(ref loop);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you import Unity&#39;s &lt;code&gt;Entities&lt;/code&gt; package, that resets the custom player loop to default at &lt;code&gt;BeforeSceneLoad&lt;/code&gt; and injects ECS&#39;s loop. When Unity calls ECS&#39;s inject method after UniTask&#39;s initialize method, UniTask will no longer work.&lt;/p&gt; 
&lt;p&gt;To solve this issue, you can re-initialize the UniTask PlayerLoop after ECS is initialized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Get ECS Loop.
var playerLoop = ScriptBehaviourUpdateOrder.CurrentPlayerLoop;

// Setup UniTask&#39;s PlayerLoop.
PlayerLoopHelper.Initialize(ref playerLoop);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can diagnose whether UniTask&#39;s player loop is ready by calling &lt;code&gt;PlayerLoopHelper.IsInjectedUniTaskPlayerLoop()&lt;/code&gt;. And also &lt;code&gt;PlayerLoopHelper.DumpCurrentPlayerLoop&lt;/code&gt; logs all current playerloops to console.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;void Start()
{
    UnityEngine.Debug.Log(&quot;UniTaskPlayerLoop ready? &quot; + PlayerLoopHelper.IsInjectedUniTaskPlayerLoop());
    PlayerLoopHelper.DumpCurrentPlayerLoop();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can optimize loop cost slightly by remove unuse PlayerLoopTiming injection. You can call &lt;code&gt;PlayerLoopHelper.Initialize(InjectPlayerLoopTimings)&lt;/code&gt; on initialize.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var loop = PlayerLoop.GetCurrentPlayerLoop();
PlayerLoopHelper.Initialize(ref loop, InjectPlayerLoopTimings.Minimum); // minimum is Update | FixedUpdate | LastPostLateUpdate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;InjectPlayerLoopTimings&lt;/code&gt; has three preset, &lt;code&gt;All&lt;/code&gt; and &lt;code&gt;Standard&lt;/code&gt;(All without last except LastPostLateUpdate), &lt;code&gt;Minimum&lt;/code&gt;(&lt;code&gt;Update | FixedUpdate | LastPostLateUpdate&lt;/code&gt;). Default is All and you can combine custom inject timings like &lt;code&gt;InjectPlayerLoopTimings.Update | InjectPlayerLoopTimings.FixedUpdate | InjectPlayerLoopTimings.PreLateUpdate&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can make error to use uninjected &lt;code&gt;PlayerLoopTiming&lt;/code&gt; by &lt;a href=&quot;https://github.com/dotnet/roslyn-analyzers/raw/master/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/BannedApiAnalyzers.Help.md&quot;&gt;Microsoft.CodeAnalysis.BannedApiAnalyzers&lt;/a&gt;. For example, you can setup &lt;code&gt;BannedSymbols.txt&lt;/code&gt; like this for &lt;code&gt;InjectPlayerLoopTimings.Minimum&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;F:Cysharp.Threading.Tasks.PlayerLoopTiming.Initialization; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastInitialization; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.EarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastEarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.d
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastFixedUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PostLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.TimeUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastTimeUpdate; Isn&#39;t injected this PlayerLoop in this project.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can configure &lt;code&gt;RS0030&lt;/code&gt; severity to error.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/109150837-bb933880-77ac-11eb-85ba-4fd15819dbd0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;async void vs async UniTaskVoid&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;async void&lt;/code&gt; is a standard C# task system so it does not run on UniTask systems. It is better not to use it. &lt;code&gt;async UniTaskVoid&lt;/code&gt; is a lightweight version of &lt;code&gt;async UniTask&lt;/code&gt; because it does not have awaitable completion and reports errors immediately to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. If you don&#39;t require awaiting (fire and forget), using &lt;code&gt;UniTaskVoid&lt;/code&gt; is better. Unfortunately to dismiss warning, you&#39;re required to call &lt;code&gt;Forget()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTaskVoid FireAndForgetMethod()
{
    // do anything...
    await UniTask.Yield();
}

public void Caller()
{
    FireAndForgetMethod().Forget();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also UniTask has the &lt;code&gt;Forget&lt;/code&gt; method, it is similar to &lt;code&gt;UniTaskVoid&lt;/code&gt; and has the same effects. However &lt;code&gt;UniTaskVoid&lt;/code&gt; is more efficient if you completely don&#39;t use &lt;code&gt;await&lt;/code&gt;。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask DoAsync()
{
    // do anything...
    await UniTask.Yield();
}

public void Caller()
{
    DoAsync().Forget();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use an async lambda registered to an event, don&#39;t use &lt;code&gt;async void&lt;/code&gt;. Instead you can use &lt;code&gt;UniTask.Action&lt;/code&gt; or &lt;code&gt;UniTask.UnityAction&lt;/code&gt;, both of which create a delegate via &lt;code&gt;async UniTaskVoid&lt;/code&gt; lambda.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Action actEvent;
UnityAction unityEvent; // especially used in uGUI

// Bad: async void
actEvent += async () =&amp;gt; { };
unityEvent += async () =&amp;gt; { };

// Ok: create Action delegate by lambda
actEvent += UniTask.Action(async () =&amp;gt; { await UniTask.Yield(); });
unityEvent += UniTask.UnityAction(async () =&amp;gt; { await UniTask.Yield(); });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;UniTaskVoid&lt;/code&gt; can also be used in MonoBehaviour&#39;s &lt;code&gt;Start&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;class Sample : MonoBehaviour
{
    async UniTaskVoid Start()
    {
        // async init code.
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;UniTaskTracker&lt;/h2&gt; 
&lt;p&gt;useful for checking (leaked) UniTasks. You can open tracker window in &lt;code&gt;Window -&amp;gt; UniTask Tracker&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83527073-4434bf00-a522-11ea-86e9-3b3975b26266.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable AutoReload(Toggle) - Reload automatically.&lt;/li&gt; 
 &lt;li&gt;Reload - Reload view.&lt;/li&gt; 
 &lt;li&gt;GC.Collect - Invoke GC.Collect.&lt;/li&gt; 
 &lt;li&gt;Enable Tracking(Toggle) - Start to track async/await UniTask. Performance impact: low.&lt;/li&gt; 
 &lt;li&gt;Enable StackTrace(Toggle) - Capture StackTrace when task is started. Performance impact: high.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;UniTaskTracker is intended for debugging use only as enabling tracking and capturing stacktraces is useful but has a heavy performance impact. Recommended usage is to enable both tracking and stacktraces to find task leaks and to disable them both when done.&lt;/p&gt; 
&lt;h2&gt;External Assets&lt;/h2&gt; 
&lt;p&gt;By default, UniTask supports TextMeshPro(&lt;code&gt;BindTo(TMP_Text)&lt;/code&gt; and &lt;code&gt;TMP_InputField&lt;/code&gt; event extensions like standard uGUI &lt;code&gt;InputField&lt;/code&gt;), DOTween(&lt;code&gt;Tween&lt;/code&gt; as awaitable) and Addressables(&lt;code&gt;AsyncOperationHandle&lt;/code&gt; and &lt;code&gt;AsyncOperationHandle&amp;lt;T&amp;gt;&lt;/code&gt; as awaitable).&lt;/p&gt; 
&lt;p&gt;There are defined in separated asmdefs like &lt;code&gt;UniTask.TextMeshPro&lt;/code&gt;, &lt;code&gt;UniTask.DOTween&lt;/code&gt;, &lt;code&gt;UniTask.Addressables&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;TextMeshPro and Addressables support are automatically enabled when importing their packages from package manager. However for DOTween support, after importing from the &lt;a href=&quot;https://assetstore.unity.com/packages/tools/animation/dotween-hotween-v2-27676r&quot;&gt;DOTWeen assets&lt;/a&gt; and define the scripting define symbol &lt;code&gt;UNITASK_DOTWEEN_SUPPORT&lt;/code&gt; to enable it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// sequential
await transform.DOMoveX(2, 10);
await transform.DOMoveZ(5, 20);

// parallel with cancellation
var ct = this.GetCancellationTokenOnDestroy();

await UniTask.WhenAll(
    transform.DOMoveX(10, 3).WithCancellation(ct),
    transform.DOScale(10, 3).WithCancellation(ct));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;DOTween support&#39;s default behaviour(&lt;code&gt;await&lt;/code&gt;, &lt;code&gt;WithCancellation&lt;/code&gt;, &lt;code&gt;ToUniTask&lt;/code&gt;) awaits tween is killed. It works on both Complete(true/false) and Kill(true/false). But if you want to reuse tweens (&lt;code&gt;SetAutoKill(false)&lt;/code&gt;), it does not work as expected. If you want to await for another timing, the following extension methods exist in Tween, &lt;code&gt;AwaitForComplete&lt;/code&gt;, &lt;code&gt;AwaitForPause&lt;/code&gt;, &lt;code&gt;AwaitForPlay&lt;/code&gt;, &lt;code&gt;AwaitForRewind&lt;/code&gt;, &lt;code&gt;AwaitForStepComplete&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;AsyncEnumerable and Async LINQ&lt;/h2&gt; 
&lt;p&gt;Unity 2020.2 supports C# 8.0 so you can use &lt;code&gt;await foreach&lt;/code&gt;. This is the new Update notation in the async era.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Unity 2020.2, C# 8.0
await foreach (var _ in UniTaskAsyncEnumerable.EveryUpdate().WithCancellation(token))
{
    Debug.Log(&quot;Update() &quot; + Time.frameCount);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In a C# 7.3 environment, you can use the &lt;code&gt;ForEachAsync&lt;/code&gt; method to work in almost the same way.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// C# 7.3(Unity 2018.3~)
await UniTaskAsyncEnumerable.EveryUpdate().ForEachAsync(_ =&amp;gt;
{
    Debug.Log(&quot;Update() &quot; + Time.frameCount);
}, token);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;UniTask.WhenEach&lt;/code&gt; that is similar to .NET 9&#39;s &lt;code&gt;Task.WhenEach&lt;/code&gt; can consume new way for await multiple tasks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await foreach (var result in UniTask.WhenEach(task1, task2, task3))
{
    // The result is of type WhenEachResult&amp;lt;T&amp;gt;.
    // It contains either `T Result` or `Exception Exception`.
    // You can check `IsCompletedSuccessfully` or `IsFaulted` to determine whether to access `.Result` or `.Exception`.
    // If you want to throw an exception when `IsFaulted` and retrieve the result when successful, use `GetResult()`.
    Debug.Log(result.GetResult());
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UniTaskAsyncEnumerable implements asynchronous LINQ, similar to LINQ in &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; or Rx in &lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt;. All standard LINQ query operators can be applied to asynchronous streams. For example, the following code shows how to apply a Where filter to a button-click asynchronous stream that runs once every two clicks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).ForEachAsync(_ =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Fire and Forget style(for example, event handling), you can also use &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).Subscribe(_ =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Async LINQ is enabled when &lt;code&gt;using Cysharp.Threading.Tasks.Linq;&lt;/code&gt;, and &lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is defined in &lt;code&gt;UniTask.Linq&lt;/code&gt; asmdef.&lt;/p&gt; 
&lt;p&gt;It&#39;s closer to UniRx (Reactive Extensions), but UniTaskAsyncEnumerable is a pull-based asynchronous stream, whereas Rx was a push-based asynchronous stream. Note that although similar, the characteristics are different and the details behave differently along with them.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is the entry point like &lt;code&gt;Enumerable&lt;/code&gt;. In addition to the standard query operators, there are other generators for Unity such as &lt;code&gt;EveryUpdate&lt;/code&gt;, &lt;code&gt;Timer&lt;/code&gt;, &lt;code&gt;TimerFrame&lt;/code&gt;, &lt;code&gt;Interval&lt;/code&gt;, &lt;code&gt;IntervalFrame&lt;/code&gt;, and &lt;code&gt;EveryValueChanged&lt;/code&gt;. And also added additional UniTask original query operators like &lt;code&gt;Append&lt;/code&gt;, &lt;code&gt;Prepend&lt;/code&gt;, &lt;code&gt;DistinctUntilChanged&lt;/code&gt;, &lt;code&gt;ToHashSet&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;CombineLatest&lt;/code&gt;,&lt;code&gt;Merge&lt;/code&gt; &lt;code&gt;Do&lt;/code&gt;, &lt;code&gt;Never&lt;/code&gt;, &lt;code&gt;ForEachAsync&lt;/code&gt;, &lt;code&gt;Pairwise&lt;/code&gt;, &lt;code&gt;Publish&lt;/code&gt;, &lt;code&gt;Queue&lt;/code&gt;, &lt;code&gt;Return&lt;/code&gt;, &lt;code&gt;SkipUntil&lt;/code&gt;, &lt;code&gt;TakeUntil&lt;/code&gt;, &lt;code&gt;SkipUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeLast&lt;/code&gt;, &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The method with Func as an argument has three additional overloads, &lt;code&gt;***Await&lt;/code&gt;, &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Select(Func&amp;lt;T, TR&amp;gt; selector)
SelectAwait(Func&amp;lt;T, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)
SelectAwaitWithCancellation(Func&amp;lt;T, CancellationToken, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use the &lt;code&gt;async&lt;/code&gt; method inside the func, use the &lt;code&gt;***Await&lt;/code&gt; or &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;How to create an async iterator: C# 8.0 supports async iterator(&lt;code&gt;async yield return&lt;/code&gt;) but it only allows &lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; and of course requires C# 8.0. UniTask supports &lt;code&gt;UniTaskAsyncEnumerable.Create&lt;/code&gt; method to create custom async iterator.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// IAsyncEnumerable, C# 8.0 version of async iterator. ( do not use this style, IAsyncEnumerable is not controled in UniTask).
public async IAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate([EnumeratorCancellation]CancellationToken cancelationToken = default)
{
    var frameCount = 0;
    await UniTask.Yield();
    while (!token.IsCancellationRequested)
    {
        yield return frameCount++;
        await UniTask.Yield();
    }
}

// UniTaskAsyncEnumerable.Create and use `await writer.YieldAsync` instead of `yield return`.
public IUniTaskAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate()
{
    // writer(IAsyncWriter&amp;lt;T&amp;gt;) has `YieldAsync(value)` method.
    return UniTaskAsyncEnumerable.Create&amp;lt;int&amp;gt;(async (writer, token) =&amp;gt;
    {
        var frameCount = 0;
        await UniTask.Yield();
        while (!token.IsCancellationRequested)
        {
            await writer.YieldAsync(frameCount++); // instead of `yield return`
            await UniTask.Yield();
        }
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Awaitable Events&lt;/h2&gt; 
&lt;p&gt;All uGUI component implements &lt;code&gt;***AsAsyncEnumerable&lt;/code&gt; to convert asynchronous streams of events.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;async UniTask TripleClick()
{
    // In default, used button.GetCancellationTokenOnDestroy to manage lieftime of async
    await button.OnClickAsync();
    await button.OnClickAsync();
    await button.OnClickAsync();
    Debug.Log(&quot;Three times clicked&quot;);
}

// more efficient way
async UniTask TripleClick()
{
    using (var handler = button.GetAsyncClickEventHandler())
    {
        await handler.OnClickAsync();
        await handler.OnClickAsync();
        await handler.OnClickAsync();
        Debug.Log(&quot;Three times clicked&quot;);
    }
}

// use async LINQ
async UniTask TripleClick(CancellationToken token)
{
    await button.OnClickAsAsyncEnumerable().Take(3).Last();
    Debug.Log(&quot;Three times clicked&quot;);
}

// use async LINQ2
async UniTask TripleClick(CancellationToken token)
{
    await button.OnClickAsAsyncEnumerable().Take(3).ForEachAsync(_ =&amp;gt;
    {
        Debug.Log(&quot;Every clicked&quot;);
    });
    Debug.Log(&quot;Three times clicked, complete.&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All MonoBehaviour message events can convert async-streams by &lt;code&gt;AsyncTriggers&lt;/code&gt; that can be enabled by &lt;code&gt;using Cysharp.Threading.Tasks.Triggers;&lt;/code&gt;. AsyncTrigger can be created using &lt;code&gt;GetAsync***Trigger&lt;/code&gt; and triggers itself as UniTaskAsyncEnumerable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var trigger = this.GetOnCollisionEnterAsyncHandler();
await trigger.OnCollisionEnterAsync();
await trigger.OnCollisionEnterAsync();
await trigger.OnCollisionEnterAsync();

// every moves.
await this.GetAsyncMoveTrigger().ForEachAsync(axisEventData =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;AsyncReactiveProperty&lt;/code&gt;, &lt;code&gt;AsyncReadOnlyReactiveProperty&lt;/code&gt; is UniTask&#39;s version of ReactiveProperty. &lt;code&gt;BindTo&lt;/code&gt; extension method of &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; for binding asynchronous stream values to Unity components(Text/Selectable/TMP/Text).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var rp = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);

// AsyncReactiveProperty itself is IUniTaskAsyncEnumerable, you can query by LINQ
rp.ForEachAsync(x =&amp;gt;
{
    Debug.Log(x);
}, this.GetCancellationTokenOnDestroy()).Forget();

rp.Value = 10; // push 10 to all subscriber
rp.Value = 11; // push 11 to all subscriber

// WithoutCurrent ignore initial value
// BindTo bind stream value to unity components.
rp.WithoutCurrent().BindTo(this.textComponent);

await rp.WaitAsync(); // wait until next value set

// also exists ToReadOnlyAsyncReactiveProperty
var rp2 = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);
var rorp = rp.CombineLatest(rp2, (x, y) =&amp;gt; (x, y)).ToReadOnlyAsyncReactiveProperty(CancellationToken.None);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A pull-type asynchronous stream does not get the next values until the asynchronous processing in the sequence is complete. This could spill data from push-type events such as buttons.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// can not get click event during 3 seconds complete.
await button.OnClickAsAsyncEnumerable().ForEachAwaitAsync(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is useful (prevent double-click) but not useful sometimes.&lt;/p&gt; 
&lt;p&gt;Using the &lt;code&gt;Queue()&lt;/code&gt; method will also queue events during asynchronous processing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// queued message in asynchronous processing
await button.OnClickAsAsyncEnumerable().Queue().ForEachAwaitAsync(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use &lt;code&gt;Subscribe&lt;/code&gt;, fire and forget style.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;button.OnClickAsAsyncEnumerable().Subscribe(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Channel&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Channel&lt;/code&gt; is the same as &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.channels?view=netcore-3.1&quot;&gt;System.Threading.Tasks.Channels&lt;/a&gt; which is similar to a GoLang Channel.&lt;/p&gt; 
&lt;p&gt;Currently it only supports multiple-producer, single-consumer unbounded channels. It can create by &lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For producer(&lt;code&gt;.Writer&lt;/code&gt;), use &lt;code&gt;TryWrite&lt;/code&gt; to push value and &lt;code&gt;TryComplete&lt;/code&gt; to complete channel. For consumer(&lt;code&gt;.Reader&lt;/code&gt;), use &lt;code&gt;TryRead&lt;/code&gt;, &lt;code&gt;WaitToReadAsync&lt;/code&gt;, &lt;code&gt;ReadAsync&lt;/code&gt;, &lt;code&gt;Completion&lt;/code&gt; and &lt;code&gt;ReadAllAsync&lt;/code&gt; to read queued messages.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ReadAllAsync&lt;/code&gt; returns &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; so query LINQ operators. Reader only allows single-consumer but uses &lt;code&gt;.Publish()&lt;/code&gt; query operator to enable multicast message. For example, make pub/sub utility.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class AsyncMessageBroker&amp;lt;T&amp;gt; : IDisposable
{
    Channel&amp;lt;T&amp;gt; channel;

    IConnectableUniTaskAsyncEnumerable&amp;lt;T&amp;gt; multicastSource;
    IDisposable connection;

    public AsyncMessageBroker()
    {
        channel = Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;();
        multicastSource = channel.Reader.ReadAllAsync().Publish();
        connection = multicastSource.Connect(); // Publish returns IConnectableUniTaskAsyncEnumerable.
    }

    public void Publish(T value)
    {
        channel.Writer.TryWrite(value);
    }

    public IUniTaskAsyncEnumerable&amp;lt;T&amp;gt; Subscribe()
    {
        return multicastSource;
    }

    public void Dispose()
    {
        channel.Writer.TryComplete();
        connection.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;vs Awaitable&lt;/h2&gt; 
&lt;p&gt;Unity 6 introduces the awaitable type, &lt;a href=&quot;https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Awaitable.html&quot;&gt;Awaitable&lt;/a&gt;. To put it simply, Awaitable can be considered a subset of UniTask, and in fact, Awaitable&#39;s design was influenced by UniTask. It should be able to handle PlayerLoop-based awaits, pooled Tasks, and support for cancellation with &lt;code&gt;CancellationToken&lt;/code&gt; in a similar way. With its inclusion in the standard library, you may wonder whether to continue using UniTask or migrate to Awaitable. Here&#39;s a brief guide.&lt;/p&gt; 
&lt;p&gt;First, the functionality provided by Awaitable is equivalent to what coroutines offer. Instead of &lt;code&gt;yield return&lt;/code&gt;, you use await; &lt;code&gt;await NextFrameAsync()&lt;/code&gt; replaces &lt;code&gt;yield return null&lt;/code&gt;; and there are equivalents for &lt;code&gt;WaitForSeconds&lt;/code&gt; and &lt;code&gt;EndOfFrame&lt;/code&gt;. However, that&#39;s the extent of it. Being coroutine-based in terms of functionality, it lacks Task-based features. In practical application development using async/await, operations like &lt;code&gt;WhenAll&lt;/code&gt; are essential. Additionally, UniTask enables many frame-based operations (such as &lt;code&gt;DelayFrame&lt;/code&gt;) and more flexible PlayerLoopTiming control, which are not available in Awaitable. Of course, there&#39;s no Tracker Window either.&lt;/p&gt; 
&lt;p&gt;Therefore, I recommend using UniTask for application development. UniTask is a superset of Awaitable and includes many essential features. For library development, where you want to avoid external dependencies, using Awaitable as a return type for methods would be appropriate. Awaitable can be converted to UniTask using &lt;code&gt;AsUniTask&lt;/code&gt;, so there&#39;s no issue in handling Awaitable-based functionality within the UniTask library. Of course, if you don&#39;t need to worry about dependencies, using UniTask would be the best choice even for library development.&lt;/p&gt; 
&lt;h2&gt;For Unit Testing&lt;/h2&gt; 
&lt;p&gt;Unity&#39;s &lt;code&gt;[UnityTest]&lt;/code&gt; attribute can test coroutine(IEnumerator) but can not test async. &lt;code&gt;UniTask.ToCoroutine&lt;/code&gt; bridges async/await to coroutine so you can test async methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[UnityTest]
public IEnumerator DelayIgnore() =&amp;gt; UniTask.ToCoroutine(async () =&amp;gt;
{
    var time = Time.realtimeSinceStartup;

    Time.timeScale = 0.5f;
    try
    {
        await UniTask.Delay(TimeSpan.FromSeconds(3), ignoreTimeScale: true);

        var elapsed = Time.realtimeSinceStartup - time;
        Assert.AreEqual(3, (int)Math.Round(TimeSpan.FromSeconds(elapsed).TotalSeconds, MidpointRounding.ToEven));
    }
    finally
    {
        Time.timeScale = 1.0f;
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UniTask&#39;s own unit tests are written using Unity Test Runner and &lt;a href=&quot;https://github.com/Cysharp/RuntimeUnitTestToolkit&quot;&gt;Cysharp/RuntimeUnitTestToolkit&lt;/a&gt; to integrate with CI and check if IL2CPP is working.&lt;/p&gt; 
&lt;h2&gt;ThreadPool limitation&lt;/h2&gt; 
&lt;p&gt;Most UniTask methods run on a single thread (PlayerLoop), with only &lt;code&gt;UniTask.Run&lt;/code&gt;(&lt;code&gt;Task.Run&lt;/code&gt; equivalent) and &lt;code&gt;UniTask.SwitchToThreadPool&lt;/code&gt; running on a thread pool. If you use a thread pool, it won&#39;t work with WebGL and so on.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;UniTask.Run&lt;/code&gt; is now deprecated. You can use &lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt; instead. And also consider whether you can use &lt;code&gt;UniTask.Create&lt;/code&gt; or &lt;code&gt;UniTask.Void&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;IEnumerator.ToUniTask limitation&lt;/h2&gt; 
&lt;p&gt;You can convert coroutine(IEnumerator) to UniTask(or await directly) but it has some limitations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;WaitForEndOfFrame&lt;/code&gt;/&lt;code&gt;WaitForFixedUpdate&lt;/code&gt;/&lt;code&gt;Coroutine&lt;/code&gt; is not supported.&lt;/li&gt; 
 &lt;li&gt;Consuming loop timing is not the same as &lt;code&gt;StartCoroutine&lt;/code&gt;, it uses the specified &lt;code&gt;PlayerLoopTiming&lt;/code&gt; and the default &lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is run before MonoBehaviour&#39;s &lt;code&gt;Update&lt;/code&gt; and &lt;code&gt;StartCoroutine&lt;/code&gt;&#39;s loop.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you want fully compatible conversion from coroutine to async, use the &lt;code&gt;IEnumerator.ToUniTask(MonoBehaviour coroutineRunner)&lt;/code&gt; overload. It executes StartCoroutine on an instance of the argument MonoBehaviour and waits for it to complete in UniTask.&lt;/p&gt; 
&lt;h2&gt;For UnityEditor&lt;/h2&gt; 
&lt;p&gt;UniTask can run on Unity Editor like an Editor Coroutine. However, there are some limitations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UniTask.Delay&#39;s DelayType.DeltaTime, UnscaledDeltaTime do not work correctly because they can not get deltaTime in editor. Therefore run on EditMode, automatically change DelayType to &lt;code&gt;DelayType.Realtime&lt;/code&gt; that wait for the right time.&lt;/li&gt; 
 &lt;li&gt;All PlayerLoopTiming run on the timing &lt;code&gt;EditorApplication.update&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-batchmode&lt;/code&gt; with &lt;code&gt;-quit&lt;/code&gt; does not work because Unity does not run &lt;code&gt;EditorApplication.update&lt;/code&gt; and quit after a single frame. Instead, don&#39;t use &lt;code&gt;-quit&lt;/code&gt; and quit manually with &lt;code&gt;EditorApplication.Exit(0)&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Compare with Standard Task API&lt;/h2&gt; 
&lt;p&gt;UniTask has many standard Task-like APIs. This table shows what the alternative apis are.&lt;/p&gt; 
&lt;p&gt;Use standard type.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;.NET Type&lt;/th&gt; 
   &lt;th&gt;UniTask Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IProgress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Use UniTask type.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;.NET Type&lt;/th&gt; 
   &lt;th&gt;UniTask Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task&lt;/code&gt;/&lt;code&gt;ValueTask&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;ValueTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;async void&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;async UniTaskVoid&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;+= async () =&amp;gt; { }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Void&lt;/code&gt;, &lt;code&gt;UniTask.Action&lt;/code&gt;, &lt;code&gt;UniTask.UnityAction&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;---&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;AutoResetUniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ManualResetValueTaskSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IValueTaskSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskSource&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IValueTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ValueTask.IsCompleted&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ValueTask&amp;lt;T&amp;gt;.IsCompleted&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;new Progress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Progress.Create&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken.Register(UnsafeRegister)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken.RegisterWithoutCaptureExecutionContext&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfter&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfterSlim&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Channel.CreateUnbounded&amp;lt;T&amp;gt;(false){ SingleReader = true }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncDisposable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Delay&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Delay&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Yield&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Yield&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Run&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenAll&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenAll&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenAny&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenAny&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenEach&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenEach&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.CompletedTask&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.CompletedTask&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromException&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromException&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromResult&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromResult&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromCanceled&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromCanceled&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.ContinueWith&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.ContinueWith&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Pooling Configuration&lt;/h2&gt; 
&lt;p&gt;UniTask aggressively caches async promise objects to achieve zero allocation (for technical details, see blog post &lt;a href=&quot;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&quot;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ&lt;/a&gt;). By default, it caches all promises but you can configure &lt;code&gt;TaskPool.SetMaxPoolSize&lt;/code&gt; to your value, the value indicates cache size per type. &lt;code&gt;TaskPool.GetCacheSizeInfo&lt;/code&gt; returns currently cached objects in pool.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;foreach (var (type, size) in TaskPool.GetCacheSizeInfo())
{
    Debug.Log(type + &quot;:&quot; + size);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Allocation on Profiler&lt;/h2&gt; 
&lt;p&gt;In UnityEditor the profiler shows allocation of compiler generated AsyncStateMachine but it only occurs in debug(development) build. C# Compiler generates AsyncStateMachine as class on Debug build and as struct on Release build.&lt;/p&gt; 
&lt;p&gt;Unity supports Code Optimization option starting in 2020.1 (right, footer).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/89967342-2f944600-dc8c-11ea-99fc-0b74527a16f6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;You can change C# compiler optimization to release to remove AsyncStateMachine allocation in development builds. This optimization option can also be set via &lt;code&gt;Compilation.CompilationPipeline-codeOptimization&lt;/code&gt;, and &lt;code&gt;Compilation.CodeOptimization&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;UniTaskSynchronizationContext&lt;/h2&gt; 
&lt;p&gt;Unity&#39;s default SynchronizationContext(&lt;code&gt;UnitySynchronizationContext&lt;/code&gt;) is a poor implementation for performance. UniTask bypasses &lt;code&gt;SynchronizationContext&lt;/code&gt;(and &lt;code&gt;ExecutionContext&lt;/code&gt;) so it does not use it but if exists in &lt;code&gt;async Task&lt;/code&gt;, still used it. &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is a replacement of &lt;code&gt;UnitySynchronizationContext&lt;/code&gt; which is better for performance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SyncContextInjecter
{
    [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
    public static void Inject()
    {
        SynchronizationContext.SetSynchronizationContext(new UniTaskSynchronizationContext());
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is an optional choice and is not always recommended; &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is less performant than &lt;code&gt;async UniTask&lt;/code&gt; and is not a complete UniTask replacement. It also does not guarantee full behavioral compatibility with the &lt;code&gt;UnitySynchronizationContext&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;API References&lt;/h2&gt; 
&lt;p&gt;UniTask&#39;s API References are hosted at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.html&quot;&gt;cysharp.github.io/UniTask&lt;/a&gt; by &lt;a href=&quot;https://dotnet.github.io/docfx/&quot;&gt;DocFX&lt;/a&gt; and &lt;a href=&quot;https://github.com/Cysharp/DocfxTemplate&quot;&gt;Cysharp/DocfXTemplate&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For example, UniTask&#39;s factory methods can be seen at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.UniTask.html#methods-1&quot;&gt;UniTask#methods&lt;/a&gt;. UniTaskAsyncEnumerable&#39;s factory/extension methods can be seen at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.Linq.UniTaskAsyncEnumerable.html#methods-1&quot;&gt;UniTaskAsyncEnumerable#methods&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;UPM Package&lt;/h2&gt; 
&lt;h3&gt;Install via git URL&lt;/h3&gt; 
&lt;p&gt;Requires a version of unity that supports path query parameter for git packages (Unity &amp;gt;= 2019.3.4f1, Unity &amp;gt;= 2020.1a21). You can add &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&lt;/code&gt; to Package Manager&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/79450714-3aadd100-8020-11ea-8aae-b8d87fc4d7be.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83702872-e0f17c80-a648-11ea-8183-7469dcd4f810.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;or add &lt;code&gt;&quot;com.cysharp.unitask&quot;: &quot;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&quot;&lt;/code&gt; to &lt;code&gt;Packages/manifest.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to set a target version, UniTask uses the &lt;code&gt;*.*.*&lt;/code&gt; release tag so you can specify a version like &lt;code&gt;#2.1.0&lt;/code&gt;. For example &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask#2.1.0&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;.NET Core&lt;/h2&gt; 
&lt;p&gt;For .NET Core, use NuGet.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/UniTask&quot;&gt;UniTask&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;UniTask of .NET Core version is a subset of Unity UniTask with PlayerLoop dependent methods removed.&lt;/p&gt; 
&lt;p&gt;It runs at higher performance than the standard Task/ValueTask, but you should be careful to ignore the ExecutionContext/SynchronizationContext when using it. &lt;code&gt;AsyncLocal&lt;/code&gt; also does not work because it ignores ExecutionContext.&lt;/p&gt; 
&lt;p&gt;If you use UniTask internally, but provide ValueTask as an external API, you can write it like the following(Inspired by &lt;a href=&quot;https://github.com/mgravell/PooledAwait&quot;&gt;PooledAwait&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class ZeroAllocAsyncAwaitInDotNetCore
{
    public ValueTask&amp;lt;int&amp;gt; DoAsync(int x, int y)
    {
        return Core(this, x, y);

        static async UniTask&amp;lt;int&amp;gt; Core(ZeroAllocAsyncAwaitInDotNetCore self, int x, int y)
        {
            // do anything...
            await Task.Delay(TimeSpan.FromSeconds(x + y));
            await UniTask.Yield();

            return 10;
        }
    }
}

// UniTask does not return to original SynchronizationContext but you can use helper `ReturnToCurrentSynchronizationContext`.
public ValueTask TestAsync()
{
    await using (UniTask.ReturnToCurrentSynchronizationContext())
    {
        await UniTask.SwitchToThreadPool();
        // do anything..
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;.NET Core version is intended to allow users to use UniTask as an interface when sharing code with Unity (such as &lt;a href=&quot;https://github.com/Cysharp/MagicOnion/&quot;&gt;Cysharp/MagicOnion&lt;/a&gt;). .NET Core version of UniTask enables smooth code sharing.&lt;/p&gt; 
&lt;p&gt;Utility methods such as WhenAll which are equivalent to UniTask are provided as &lt;a href=&quot;https://github.com/Cysharp/ValueTaskSupplement&quot;&gt;Cysharp/ValueTaskSupplement&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is under the MIT License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/roslyn</title>
      <link>https://github.com/dotnet/roslyn</link>
      <description>&lt;p&gt;The Roslyn .NET compiler provides C# and Visual Basic languages with rich code analysis APIs.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;450&quot; src=&quot;https://user-images.githubusercontent.com/46729679/109719841-17b7dd00-7b5e-11eb-8f5e-87eb2d4d1be9.png&quot; alt=&quot;Roslyn logo&quot;&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;The .NET Compiler Platform&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;http://aka.ms/discord-csharp-roslyn&quot; rel=&quot;nofollow&quot;&gt;&lt;img title=&quot;Chat on Discord&quot; src=&quot;https://raw.githubusercontent.com/dotnet/roslyn/main/docs/img/discord-mark-white.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Roslyn is the open-source implementation of both the C# and Visual Basic compilers with an API surface for building code analysis tools.&lt;/p&gt; 
&lt;h3&gt;C# and Visual Basic Language Feature Suggestions&lt;/h3&gt; 
&lt;p&gt;If you want to suggest a new feature for the C# or Visual Basic languages go here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/csharplang&quot;&gt;dotnet/csharplang&lt;/a&gt; for C# specific issues&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/vblang&quot;&gt;dotnet/vblang&lt;/a&gt; for VB-specific features&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/csharplang&quot;&gt;dotnet/csharplang&lt;/a&gt; for features that affect both languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;All work on the C# and Visual Basic compiler happens directly on &lt;a href=&quot;https://github.com/dotnet/roslyn&quot;&gt;GitHub&lt;/a&gt;. Both core team members and external contributors send pull requests which go through the same review process.&lt;/p&gt; 
&lt;p&gt;If you are interested in fixing issues and contributing directly to the code base, a great way to get started is to ask some questions on &lt;a href=&quot;https://github.com/dotnet/roslyn/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;! Then check out our &lt;a href=&quot;https://github.com/dotnet/roslyn/raw/main/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; which covers the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/roslyn/raw/main/docs/wiki/Contributing-Code.md&quot;&gt;Coding guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/roslyn/raw/main/docs/contributing/Building%2C%20Debugging%2C%20and%20Testing%20on%20Windows.md&quot;&gt;The development workflow, including debugging and running tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/roslyn/raw/main/CONTRIBUTING.md#How-to-submit-a-PR&quot;&gt;Submitting pull requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Finding a bug to fix in the &lt;a href=&quot;https://aka.ms/roslyn-ide-bugs-help-wanted&quot;&gt;IDE&lt;/a&gt; or &lt;a href=&quot;https://aka.ms/roslyn-compiler-bugs-help-wanted&quot;&gt;Compiler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Finding a feature to implement in the &lt;a href=&quot;https://aka.ms/roslyn-ide-feature-help-wanted&quot;&gt;IDE&lt;/a&gt; or &lt;a href=&quot;https://aka.ms/roslyn-compiler-feature-help-wanted&quot;&gt;Compiler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Roslyn API suggestions should go through the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/roslyn/main/docs/contributing/API%20Review%20Process.md&quot;&gt;API review process&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;p&gt;The Roslyn community can be found on &lt;a href=&quot;https://github.com/dotnet/roslyn/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members, you can join the Roslyn channel on the &lt;a href=&quot;https://discord.com/invite/tGJvv88&quot;&gt;CSharp Community Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/roslyn/main/CODE-OF-CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Roslyn community channels and has&amp;nbsp;adopted&amp;nbsp;the&amp;nbsp;&lt;a href=&quot;https://dotnetfoundation.org/code-of-conduct&quot;&gt;.NET&amp;nbsp;Foundation&amp;nbsp;Code&amp;nbsp;of&amp;nbsp;Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/compiler-api-model&quot;&gt;Roslyn Architecture Overview&lt;/a&gt; to get started with Roslyn’s API’s.&lt;/p&gt; 
&lt;h3&gt;NuGet Feeds&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;The latest pre-release builds&lt;/strong&gt; are available from the following public NuGet feeds:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dev.azure.com/dnceng/public/_packaging?_a=feed&amp;amp;feed=dotnet-tools&quot;&gt;Compiler&lt;/a&gt;: &lt;code&gt;https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dev.azure.com/azure-public/vside/_packaging?_a=feed&amp;amp;feed=vssdk&quot;&gt;IDE Services&lt;/a&gt;: &lt;code&gt;https://pkgs.dev.azure.com/azure-public/vside/_packaging/vssdk/nuget/v3/index.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dev.azure.com/dnceng/public/_packaging?_a=feed&amp;amp;feed=dotnet5&quot;&gt;.NET SDK&lt;/a&gt;: &lt;code&gt;https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet5/nuget/v3/index.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Continuous Integration status&lt;/h3&gt; 
&lt;h4&gt;Builds&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Branch&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Windows Debug&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Windows Release&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Unix Debug&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;main&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Build_Windows_Debug&amp;amp;configuration=Build_Windows_Debug&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Build_Windows_Release&amp;amp;configuration=Build_Windows_Release&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Build_Unix_Debug&amp;amp;configuration=Build_Unix_Debug&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Desktop Unit Tests&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Branch&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Debug x86&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Debug x64&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Release x86&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Release x64&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;main&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_Desktop_Debug_32&amp;amp;configuration=Test_Windows_Desktop_Debug_32&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_Desktop_Debug_64&amp;amp;configuration=Test_Windows_Desktop_Debug_64&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_Desktop_Release_32&amp;amp;configuration=Test_Windows_Desktop_Release_32&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_Desktop_Release_64&amp;amp;configuration=Test_Windows_Desktop_Release_64&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;CoreClr Unit Tests&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Branch&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Windows Debug&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Windows Release&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Linux&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;main&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_CoreClr_Debug&amp;amp;configuration=Test_Windows_CoreClr_Debug&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_CoreClr_Release&amp;amp;configuration=Test_Windows_CoreClr_Release&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Linux_Debug&amp;amp;configuration=Test_Linux_Debug&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Integration Tests&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Branch&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Debug x86&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Debug x64&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Release x86&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Release x64&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;main&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=96&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=main&amp;amp;jobname=VS_Integration_Debug_32&amp;amp;configuration=VS_Integration_Debug_32&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=96&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=main&amp;amp;jobname=VS_Integration_Debug_64&amp;amp;configuration=VS_Integration_Debug_64&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=96&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=main&amp;amp;jobname=VS_Integration_Release_32&amp;amp;configuration=VS_Integration_Release_32&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=96&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=main&amp;amp;jobname=VS_Integration_Release_64&amp;amp;configuration=VS_Integration_Release_64&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Misc Tests&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Branch&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Determinism&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Analyzers&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Build Correctness&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Source build&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;TODO/Prototype&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Spanish&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;MacOS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;main&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Correctness_Determinism&amp;amp;configuration=Correctness_Determinism&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Correctness_Analyzers&amp;amp;configuration=Correctness_Analyzers&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Correctness_Build_Artifacts&amp;amp;configuration=Correctness_Build_Artifacts&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Source-Build+(Managed)&amp;amp;configuration=Source-Build+(Managed)&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Correctness_TodoCheck&amp;amp;configuration=Correctness_TodoCheck&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_Windows_Desktop_Spanish_Release_64&amp;amp;configuration=Test_Windows_Desktop_Spanish_Release_64&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=95&amp;amp;branchname=main&amp;amp;view=logs&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=main&amp;amp;jobname=Test_macOS_Debug&amp;amp;configuration=Test_macOS_Debug&amp;amp;label=build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;.NET Foundation&lt;/h3&gt; 
&lt;p&gt;This project is part of the &lt;a href=&quot;http://www.dotnetfoundation.org/projects&quot;&gt;.NET Foundation&lt;/a&gt; along with other projects like &lt;a href=&quot;https://github.com/dotnet/runtime/&quot;&gt;the .NET Runtime&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/openai-dotnet</title>
      <link>https://github.com/openai/openai-dotnet</link>
      <description>&lt;p&gt;The official .NET library for the OpenAI API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI .NET API library&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/OpenAI&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/openai.svg?sanitize=true&quot; alt=&quot;NuGet stable version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/OpenAI/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/openai.svg?sanitize=true&quot; alt=&quot;NuGet preview version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The OpenAI .NET library provides convenient access to the OpenAI REST API from .NET applications.&lt;/p&gt; 
&lt;p&gt;It is generated from our &lt;a href=&quot;https://github.com/openai/openai-openapi&quot;&gt;OpenAPI specification&lt;/a&gt; in collaboration with Microsoft.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#getting-started&quot;&gt;Getting started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#install-the-nuget-package&quot;&gt;Install the NuGet package&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#using-the-client-library&quot;&gt;Using the client library&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#namespace-organization&quot;&gt;Namespace organization&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#using-the-async-api&quot;&gt;Using the async API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#using-the-openaiclient-class&quot;&gt;Using the &lt;code&gt;OpenAIClient&lt;/code&gt; class&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-chat-completions-with-streaming&quot;&gt;How to use chat completions with streaming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-chat-completions-with-tools-and-function-calling&quot;&gt;How to use chat completions with tools and function calling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-chat-completions-with-structured-outputs&quot;&gt;How to use chat completions with structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-chat-completions-with-audio&quot;&gt;How to use chat completions with audio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-responses-with-streaming-and-reasoning&quot;&gt;How to use responses with streaming and reasoning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-responses-with-file-search&quot;&gt;How to use responses with file search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-responses-with-web-search&quot;&gt;How to use responses with web search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-generate-text-embeddings&quot;&gt;How to generate text embeddings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-generate-images&quot;&gt;How to generate images&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-transcribe-audio&quot;&gt;How to transcribe audio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-assistants-with-retrieval-augmented-generation-rag&quot;&gt;How to use assistants with retrieval augmented generation (RAG)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-assistants-with-streaming-and-vision&quot;&gt;How to use assistants with streaming and vision&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-work-with-azure-openai&quot;&gt;How to work with Azure OpenAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#advanced-scenarios&quot;&gt;Advanced scenarios&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#using-protocol-methods&quot;&gt;Using protocol methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#mock-a-client-for-testing&quot;&gt;Mock a client for testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#automatically-retrying-errors&quot;&gt;Automatically retrying errors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#observability&quot;&gt;Observability&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;To call the OpenAI REST API, you will need an API key. To obtain one, first &lt;a href=&quot;https://platform.openai.com/signup&quot;&gt;create a new OpenAI account&lt;/a&gt; or &lt;a href=&quot;https://platform.openai.com/login&quot;&gt;log in&lt;/a&gt;. Next, navigate to the &lt;a href=&quot;https://platform.openai.com/account/api-keys&quot;&gt;API key page&lt;/a&gt; and select &quot;Create new secret key&quot;, optionally naming the key. Make sure to save your API key somewhere safe and do not share it with anyone.&lt;/p&gt; 
&lt;h3&gt;Install the NuGet package&lt;/h3&gt; 
&lt;p&gt;Add the client library to your .NET project by installing the &lt;a href=&quot;https://www.nuget.org/&quot;&gt;NuGet&lt;/a&gt; package via your IDE or by running the following command in the .NET CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cli&quot;&gt;dotnet add package OpenAI
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you would like to try the latest preview version, remember to append the &lt;code&gt;--prerelease&lt;/code&gt; command option.&lt;/p&gt; 
&lt;p&gt;Note that the code examples included below were written using &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/8.0&quot;&gt;.NET 8&lt;/a&gt;. The OpenAI .NET library is compatible with all .NET Standard 2.0 applications, but the syntax used in some of the code examples in this document may depend on newer language features.&lt;/p&gt; 
&lt;h2&gt;Using the client library&lt;/h2&gt; 
&lt;p&gt;The full API of this library can be found in the &lt;a href=&quot;https://github.com/openai/openai-dotnet/raw/main/api/OpenAI.netstandard2.0.cs&quot;&gt;OpenAI.netstandard2.0.cs&lt;/a&gt; file, and there are many &lt;a href=&quot;https://github.com/openai/openai-dotnet/tree/main/examples&quot;&gt;code examples&lt;/a&gt; to help. For instance, the following snippet illustrates the basic use of the chat completions API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Chat;

ChatClient client = new(model: &quot;gpt-4o&quot;, apiKey: Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

ChatCompletion completion = client.CompleteChat(&quot;Say &#39;this is a test.&#39;&quot;);

Console.WriteLine($&quot;[ASSISTANT]: {completion.Content[0].Text}&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;While you can pass your API key directly as a string, it is highly recommended that you keep it in a secure location and instead access it via an environment variable or configuration file as shown above to avoid storing it in source control.&lt;/p&gt; 
&lt;h3&gt;Namespace organization&lt;/h3&gt; 
&lt;p&gt;The library is organized into namespaces by feature areas in the OpenAI REST API. Each namespace contains a corresponding client class.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Namespace&lt;/th&gt; 
   &lt;th&gt;Client class&lt;/th&gt; 
   &lt;th&gt;Notes&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Assistants&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AssistantClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/badge/experimental-purple&quot; alt=&quot;Experimental&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Audio&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AudioClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Batch&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;BatchClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/badge/experimental-purple&quot; alt=&quot;Experimental&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Chat&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ChatClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Embeddings&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;EmbeddingClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.FineTuning&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;FineTuningClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/badge/experimental-purple&quot; alt=&quot;Experimental&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Files&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OpenAIFileClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Images&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ImageClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Models&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OpenAIModelClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Moderations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ModerationClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Responses&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OpenAIResponseClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.VectorStores&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;VectorStoreClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/badge/experimental-purple&quot; alt=&quot;Experimental&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Using the async API&lt;/h3&gt; 
&lt;p&gt;Every client method that performs a synchronous API call has an asynchronous variant in the same client class. For instance, the asynchronous variant of the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method is &lt;code&gt;CompleteChatAsync&lt;/code&gt;. To rewrite the call above using the asynchronous counterpart, simply &lt;code&gt;await&lt;/code&gt; the call to the corresponding async variant:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;ChatCompletion completion = await client.CompleteChatAsync(&quot;Say &#39;this is a test.&#39;&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using the &lt;code&gt;OpenAIClient&lt;/code&gt; class&lt;/h3&gt; 
&lt;p&gt;In addition to the namespaces mentioned above, there is also the parent &lt;code&gt;OpenAI&lt;/code&gt; namespace itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This namespace contains the &lt;code&gt;OpenAIClient&lt;/code&gt; class, which offers certain conveniences when you need to work with multiple feature area clients. Specifically, you can use an instance of this class to create instances of the other clients and have them share the same implementation details, which might be more efficient.&lt;/p&gt; 
&lt;p&gt;You can create an &lt;code&gt;OpenAIClient&lt;/code&gt; by specifying the API key that all clients will use for authentication:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIClient client = new(Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, to create an instance of an &lt;code&gt;AudioClient&lt;/code&gt;, for example, you can call the &lt;code&gt;OpenAIClient&lt;/code&gt;&#39;s &lt;code&gt;GetAudioClient&lt;/code&gt; method by passing the OpenAI model that the &lt;code&gt;AudioClient&lt;/code&gt; will use, just as if you were using the &lt;code&gt;AudioClient&lt;/code&gt; constructor directly. If necessary, you can create additional clients of the same type to target different models.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;AudioClient ttsClient = client.GetAudioClient(&quot;tts-1&quot;);
AudioClient whisperClient = client.GetAudioClient(&quot;whisper-1&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use chat completions with streaming&lt;/h2&gt; 
&lt;p&gt;When you request a chat completion, the default behavior is for the server to generate it in its entirety before sending it back in a single response. Consequently, long chat completions can require waiting for several seconds before hearing back from the server. To mitigate this, the OpenAI REST API supports the ability to stream partial results back as they are being generated, allowing you to start processing the beginning of the completion before it is finished.&lt;/p&gt; 
&lt;p&gt;The client library offers a convenient approach to working with streaming chat completions. If you wanted to re-write the example from the previous section using streaming, rather than calling the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method, you would call its &lt;code&gt;CompleteChatStreaming&lt;/code&gt; method instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;CollectionResult&amp;lt;StreamingChatCompletionUpdate&amp;gt; completionUpdates = client.CompleteChatStreaming(&quot;Say &#39;this is a test.&#39;&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice that the returned value is a &lt;code&gt;CollectionResult&amp;lt;StreamingChatCompletionUpdate&amp;gt;&lt;/code&gt; instance, which can be enumerated to process the streaming response chunks as they arrive:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Console.Write($&quot;[ASSISTANT]: &quot;);
foreach (StreamingChatCompletionUpdate completionUpdate in completionUpdates)
{
    if (completionUpdate.ContentUpdate.Count &amp;gt; 0)
    {
        Console.Write(completionUpdate.ContentUpdate[0].Text);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can do this asynchronously by calling the &lt;code&gt;CompleteChatStreamingAsync&lt;/code&gt; method to get an &lt;code&gt;AsyncCollectionResult&amp;lt;StreamingChatCompletionUpdate&amp;gt;&lt;/code&gt; and enumerate it using &lt;code&gt;await foreach&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;AsyncCollectionResult&amp;lt;StreamingChatCompletionUpdate&amp;gt; completionUpdates = client.CompleteChatStreamingAsync(&quot;Say &#39;this is a test.&#39;&quot;);

Console.Write($&quot;[ASSISTANT]: &quot;);
await foreach (StreamingChatCompletionUpdate completionUpdate in completionUpdates)
{
    if (completionUpdate.ContentUpdate.Count &amp;gt; 0)
    {
        Console.Write(completionUpdate.ContentUpdate[0].Text);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use chat completions with tools and function calling&lt;/h2&gt; 
&lt;p&gt;In this example, you have two functions. The first function can retrieve a user&#39;s current geographic location (e.g., by polling the location service APIs of the user&#39;s device), while the second function can query the weather in a given location (e.g., by making an API call to some third-party weather service). You want the model to be able to call these functions if it deems it necessary to have this information in order to respond to a user request as part of generating a chat completion. For illustrative purposes, consider the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;private static string GetCurrentLocation()
{
    // Call the location API here.
    return &quot;San Francisco&quot;;
}

private static string GetCurrentWeather(string location, string unit = &quot;celsius&quot;)
{
    // Call the weather API here.
    return $&quot;31 {unit}&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start by creating two &lt;code&gt;ChatTool&lt;/code&gt; instances using the static &lt;code&gt;CreateFunctionTool&lt;/code&gt; method to describe each function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;private static readonly ChatTool getCurrentLocationTool = ChatTool.CreateFunctionTool(
    functionName: nameof(GetCurrentLocation),
    functionDescription: &quot;Get the user&#39;s current location&quot;
);

private static readonly ChatTool getCurrentWeatherTool = ChatTool.CreateFunctionTool(
    functionName: nameof(GetCurrentWeather),
    functionDescription: &quot;Get the current weather in a given location&quot;,
    functionParameters: BinaryData.FromBytes(&quot;&quot;&quot;
        {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
                &quot;location&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;The city and state, e.g. Boston, MA&quot;
                },
                &quot;unit&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;enum&quot;: [ &quot;celsius&quot;, &quot;fahrenheit&quot; ],
                    &quot;description&quot;: &quot;The temperature unit to use. Infer this from the specified location.&quot;
                }
            },
            &quot;required&quot;: [ &quot;location&quot; ]
        }
        &quot;&quot;&quot;u8.ToArray())
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create a &lt;code&gt;ChatCompletionOptions&lt;/code&gt; instance and add both to its &lt;code&gt;Tools&lt;/code&gt; property. You will pass the &lt;code&gt;ChatCompletionOptions&lt;/code&gt; as an argument in your calls to the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;List&amp;lt;ChatMessage&amp;gt; messages = 
[
    new UserChatMessage(&quot;What&#39;s the weather like today?&quot;),
];

ChatCompletionOptions options = new()
{
    Tools = { getCurrentLocationTool, getCurrentWeatherTool },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When the resulting &lt;code&gt;ChatCompletion&lt;/code&gt; has a &lt;code&gt;FinishReason&lt;/code&gt; property equal to &lt;code&gt;ChatFinishReason.ToolCalls&lt;/code&gt;, it means that the model has determined that one or more tools must be called before the assistant can respond appropriately. In those cases, you must first call the function specified in the &lt;code&gt;ChatCompletion&lt;/code&gt;&#39;s &lt;code&gt;ToolCalls&lt;/code&gt; and then call the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method again while passing the function&#39;s result as an additional &lt;code&gt;ChatRequestToolMessage&lt;/code&gt;. Repeat this process as needed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;bool requiresAction;

do
{
    requiresAction = false;
    ChatCompletion completion = client.CompleteChat(messages, options);

    switch (completion.FinishReason)
    {
        case ChatFinishReason.Stop:
            {
                // Add the assistant message to the conversation history.
                messages.Add(new AssistantChatMessage(completion));
                break;
            }

        case ChatFinishReason.ToolCalls:
            {
                // First, add the assistant message with tool calls to the conversation history.
                messages.Add(new AssistantChatMessage(completion));

                // Then, add a new tool message for each tool call that is resolved.
                foreach (ChatToolCall toolCall in completion.ToolCalls)
                {
                    switch (toolCall.FunctionName)
                    {
                        case nameof(GetCurrentLocation):
                            {
                                string toolResult = GetCurrentLocation();
                                messages.Add(new ToolChatMessage(toolCall.Id, toolResult));
                                break;
                            }

                        case nameof(GetCurrentWeather):
                            {
                                // The arguments that the model wants to use to call the function are specified as a
                                // stringified JSON object based on the schema defined in the tool definition. Note that
                                // the model may hallucinate arguments too. Consequently, it is important to do the
                                // appropriate parsing and validation before calling the function.
                                using JsonDocument argumentsJson = JsonDocument.Parse(toolCall.FunctionArguments);
                                bool hasLocation = argumentsJson.RootElement.TryGetProperty(&quot;location&quot;, out JsonElement location);
                                bool hasUnit = argumentsJson.RootElement.TryGetProperty(&quot;unit&quot;, out JsonElement unit);

                                if (!hasLocation)
                                {
                                    throw new ArgumentNullException(nameof(location), &quot;The location argument is required.&quot;);
                                }

                                string toolResult = hasUnit
                                    ? GetCurrentWeather(location.GetString(), unit.GetString())
                                    : GetCurrentWeather(location.GetString());
                                messages.Add(new ToolChatMessage(toolCall.Id, toolResult));
                                break;
                            }

                        default:
                            {
                                // Handle other unexpected calls.
                                throw new NotImplementedException();
                            }
                    }
                }

                requiresAction = true;
                break;
            }

        case ChatFinishReason.Length:
            throw new NotImplementedException(&quot;Incomplete model output due to MaxTokens parameter or token limit exceeded.&quot;);

        case ChatFinishReason.ContentFilter:
            throw new NotImplementedException(&quot;Omitted content due to a content filter flag.&quot;);

        case ChatFinishReason.FunctionCall:
            throw new NotImplementedException(&quot;Deprecated in favor of tool calls.&quot;);

        default:
            throw new NotImplementedException(completion.FinishReason.ToString());
    }
} while (requiresAction);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use chat completions with structured outputs&lt;/h2&gt; 
&lt;p&gt;Beginning with the &lt;code&gt;gpt-4o-mini&lt;/code&gt;, &lt;code&gt;gpt-4o-mini-2024-07-18&lt;/code&gt;, and &lt;code&gt;gpt-4o-2024-08-06&lt;/code&gt; model snapshots, structured outputs are available for both top-level response content and tool calls in the chat completion and assistants APIs. For information about the feature, see &lt;a href=&quot;https://platform.openai.com/docs/guides/structured-outputs/introduction&quot;&gt;the Structured Outputs guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use structured outputs to constrain chat completion content, set an appropriate &lt;code&gt;ChatResponseFormat&lt;/code&gt; as in the following example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;List&amp;lt;ChatMessage&amp;gt; messages =
[
    new UserChatMessage(&quot;How can I solve 8x + 7 = -23?&quot;),
];

ChatCompletionOptions options = new()
{
    ResponseFormat = ChatResponseFormat.CreateJsonSchemaFormat(
        jsonSchemaFormatName: &quot;math_reasoning&quot;,
        jsonSchema: BinaryData.FromBytes(&quot;&quot;&quot;
            {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                &quot;steps&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                        &quot;explanation&quot;: { &quot;type&quot;: &quot;string&quot; },
                        &quot;output&quot;: { &quot;type&quot;: &quot;string&quot; }
                    },
                    &quot;required&quot;: [&quot;explanation&quot;, &quot;output&quot;],
                    &quot;additionalProperties&quot;: false
                    }
                },
                &quot;final_answer&quot;: { &quot;type&quot;: &quot;string&quot; }
                },
                &quot;required&quot;: [&quot;steps&quot;, &quot;final_answer&quot;],
                &quot;additionalProperties&quot;: false
            }
            &quot;&quot;&quot;u8.ToArray()),
        jsonSchemaIsStrict: true)
};

ChatCompletion completion = client.CompleteChat(messages, options);

using JsonDocument structuredJson = JsonDocument.Parse(completion.Content[0].Text);

Console.WriteLine($&quot;Final answer: {structuredJson.RootElement.GetProperty(&quot;final_answer&quot;)}&quot;);
Console.WriteLine(&quot;Reasoning steps:&quot;);

foreach (JsonElement stepElement in structuredJson.RootElement.GetProperty(&quot;steps&quot;).EnumerateArray())
{
    Console.WriteLine($&quot;  - Explanation: {stepElement.GetProperty(&quot;explanation&quot;)}&quot;);
    Console.WriteLine($&quot;    Output: {stepElement.GetProperty(&quot;output&quot;)}&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use chat completions with audio&lt;/h2&gt; 
&lt;p&gt;Starting with the &lt;code&gt;gpt-4o-audio-preview&lt;/code&gt; model, chat completions can process audio input and output.&lt;/p&gt; 
&lt;p&gt;This example demonstrates:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Configuring the client with the supported &lt;code&gt;gpt-4o-audio-preview&lt;/code&gt; model&lt;/li&gt; 
 &lt;li&gt;Supplying user audio input on a chat completion request&lt;/li&gt; 
 &lt;li&gt;Requesting model audio output from the chat completion operation&lt;/li&gt; 
 &lt;li&gt;Retrieving audio output from a &lt;code&gt;ChatCompletion&lt;/code&gt; instance&lt;/li&gt; 
 &lt;li&gt;Using past audio output as &lt;code&gt;ChatMessage&lt;/code&gt; conversation history&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Chat audio input and output is only supported on specific models, beginning with gpt-4o-audio-preview
ChatClient client = new(&quot;gpt-4o-audio-preview&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

// Input audio is provided to a request by adding an audio content part to a user message
string audioFilePath = Path.Combine(&quot;Assets&quot;, &quot;realtime_whats_the_weather_pcm16_24khz_mono.wav&quot;);
byte[] audioFileRawBytes = File.ReadAllBytes(audioFilePath);
BinaryData audioData = BinaryData.FromBytes(audioFileRawBytes);
List&amp;lt;ChatMessage&amp;gt; messages =
    [
        new UserChatMessage(ChatMessageContentPart.CreateInputAudioPart(audioData, ChatInputAudioFormat.Wav)),
    ];

// Output audio is requested by configuring ChatCompletionOptions to include the appropriate
// ResponseModalities values and corresponding AudioOptions.
ChatCompletionOptions options = new()
{
    ResponseModalities = ChatResponseModalities.Text | ChatResponseModalities.Audio,
    AudioOptions = new(ChatOutputAudioVoice.Alloy, ChatOutputAudioFormat.Mp3),
};

ChatCompletion completion = client.CompleteChat(messages, options);

void PrintAudioContent()
{
    if (completion.OutputAudio is ChatOutputAudio outputAudio)
    {
        Console.WriteLine($&quot;Response audio transcript: {outputAudio.Transcript}&quot;);
        string outputFilePath = $&quot;{outputAudio.Id}.mp3&quot;;
        using (FileStream outputFileStream = File.OpenWrite(outputFilePath))
        {
            outputFileStream.Write(outputAudio.AudioBytes);
        }
        Console.WriteLine($&quot;Response audio written to file: {outputFilePath}&quot;);
        Console.WriteLine($&quot;Valid on followup requests until: {outputAudio.ExpiresAt}&quot;);
    }
}

PrintAudioContent();

// To refer to past audio output, create an assistant message from the earlier ChatCompletion, use the earlier
// response content part, or use ChatMessageContentPart.CreateAudioPart(string) to manually instantiate a part.

messages.Add(new AssistantChatMessage(completion));
messages.Add(&quot;Can you say that like a pirate?&quot;);

completion = client.CompleteChat(messages, options);

PrintAudioContent();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Streaming is highly parallel: &lt;code&gt;StreamingChatCompletionUpdate&lt;/code&gt; instances can include a &lt;code&gt;OutputAudioUpdate&lt;/code&gt; that may contain any of:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;Id&lt;/code&gt; of the streamed audio content, which can be referenced by subsequent &lt;code&gt;AssistantChatMessage&lt;/code&gt; instances via &lt;code&gt;ChatAudioReference&lt;/code&gt; once the streaming response is complete; this may appear across multiple &lt;code&gt;StreamingChatCompletionUpdate&lt;/code&gt; instances but will always be the same value when present&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;ExpiresAt&lt;/code&gt; value that describes when the &lt;code&gt;Id&lt;/code&gt; will no longer be valid for use with &lt;code&gt;ChatAudioReference&lt;/code&gt; in subsequent requests; this typically appears once and only once, in the final &lt;code&gt;StreamingOutputAudioUpdate&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Incremental &lt;code&gt;TranscriptUpdate&lt;/code&gt; and/or &lt;code&gt;AudioBytesUpdate&lt;/code&gt; values, which can incrementally consumed and, when concatenated, form the complete audio transcript and audio output for the overall response; many of these typically appear&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use responses with streaming and reasoning&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIResponseClient client = new(
    model: &quot;o3-mini&quot;,
    apiKey: Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

OpenAIResponse response = await client.CreateResponseAsync(
    userInputText: &quot;What&#39;s the optimal strategy to win at poker?&quot;,
    new ResponseCreationOptions()
    {
        ReasoningOptions = new ResponseReasoningOptions()
        {
            ReasoningEffortLevel = ResponseReasoningEffortLevel.High,
        },
    });

await foreach (StreamingResponseUpdate update
    in client.CreateResponseStreamingAsync(
        userInputText: &quot;What&#39;s the optimal strategy to win at poker?&quot;,
        new ResponseCreationOptions()
        {
            ReasoningOptions = new ResponseReasoningOptions()
            {
                ReasoningEffortLevel = ResponseReasoningEffortLevel.High,
            },
        }))
{
    if (update is StreamingResponseItemUpdate itemUpdate
        &amp;amp;&amp;amp; itemUpdate.Item is ReasoningResponseItem reasoningItem)
    {
        Console.WriteLine($&quot;[Reasoning] ({reasoningItem.Status})&quot;);
    }
    else if (update is StreamingResponseContentPartDeltaUpdate deltaUpdate)
    {
        Console.Write(deltaUpdate.Text);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use responses with file search&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIResponseClient client = new(
    model: &quot;gpt-4o-mini&quot;,
    apiKey: Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

ResponseTool fileSearchTool
    = ResponseTool.CreateFileSearchTool(
        vectorStoreIds: [ExistingVectorStoreForTest.Id]);
OpenAIResponse response = await client.CreateResponseAsync(
    userInputText: &quot;According to available files, what&#39;s the secret number?&quot;,
    new ResponseCreationOptions()
    {
        Tools = { fileSearchTool }
    });

foreach (ResponseItem outputItem in response.OutputItems)
{
    if (outputItem is FileSearchCallResponseItem fileSearchCall)
    {
        Console.WriteLine($&quot;[file_search] ({fileSearchCall.Status}): {fileSearchCall.Id}&quot;);
        foreach (string query in fileSearchCall.Queries)
        {
            Console.WriteLine($&quot;  - {query}&quot;);
        }
    }
    else if (outputItem is MessageResponseItem message)
    {
        Console.WriteLine($&quot;[{message.Role}] {message.Content.FirstOrDefault()?.Text}&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use responses with web search&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIResponseClient client = new(
    model: &quot;gpt-4o-mini&quot;,
    apiKey: Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

OpenAIResponse response = await client.CreateResponseAsync(
    userInputText: &quot;What&#39;s a happy news headline from today?&quot;,
    new ResponseCreationOptions()
    {
        Tools = { ResponseTool.CreateWebSearchTool() },
    });

foreach (ResponseItem item in response.OutputItems)
{
    if (item is WebSearchCallResponseItem webSearchCall)
    {
        Console.WriteLine($&quot;[Web search invoked]({webSearchCall.Status}) {webSearchCall.Id}&quot;);
    }
    else if (item is MessageResponseItem message)
    {
        Console.WriteLine($&quot;[{message.Role}] {message.Content?.FirstOrDefault()?.Text}&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to generate text embeddings&lt;/h2&gt; 
&lt;p&gt;In this example, you want to create a trip-planning website that allows customers to write a prompt describing the kind of hotel that they are looking for and then offers hotel recommendations that closely match this description. To achieve this, it is possible to use text embeddings to measure the relatedness of text strings. In summary, you can get embeddings of the hotel descriptions, store them in a vector database, and use them to build a search index that you can query using the embedding of a given customer&#39;s prompt.&lt;/p&gt; 
&lt;p&gt;To generate a text embedding, use &lt;code&gt;EmbeddingClient&lt;/code&gt; from the &lt;code&gt;OpenAI.Embeddings&lt;/code&gt; namespace:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Embeddings;

EmbeddingClient client = new(&quot;text-embedding-3-small&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

string description = &quot;Best hotel in town if you like luxury hotels. They have an amazing infinity pool, a spa,&quot;
    + &quot; and a really helpful concierge. The location is perfect -- right downtown, close to all the tourist&quot;
    + &quot; attractions. We highly recommend this hotel.&quot;;

OpenAIEmbedding embedding = client.GenerateEmbedding(description);
ReadOnlyMemory&amp;lt;float&amp;gt; vector = embedding.ToFloats();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice that the resulting embedding is a list (also called a vector) of floating point numbers represented as an instance of &lt;code&gt;ReadOnlyMemory&amp;lt;float&amp;gt;&lt;/code&gt;. By default, the length of the embedding vector will be 1536 when using the &lt;code&gt;text-embedding-3-small&lt;/code&gt; model or 3072 when using the &lt;code&gt;text-embedding-3-large&lt;/code&gt; model. Generally, larger embeddings perform better, but using them also tends to cost more in terms of compute, memory, and storage. You can reduce the dimensions of the embedding by creating an instance of the &lt;code&gt;EmbeddingGenerationOptions&lt;/code&gt; class, setting the &lt;code&gt;Dimensions&lt;/code&gt; property, and passing it as an argument in your call to the &lt;code&gt;GenerateEmbedding&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;EmbeddingGenerationOptions options = new() { Dimensions = 512 };

OpenAIEmbedding embedding = client.GenerateEmbedding(description, options);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to generate images&lt;/h2&gt; 
&lt;p&gt;In this example, you want to build an app to help interior designers prototype new ideas based on the latest design trends. As part of the creative process, an interior designer can use this app to generate images for inspiration simply by describing the scene in their head as a prompt. As expected, high-quality, strikingly dramatic images with finer details deliver the best results for this application.&lt;/p&gt; 
&lt;p&gt;To generate an image, use &lt;code&gt;ImageClient&lt;/code&gt; from the &lt;code&gt;OpenAI.Images&lt;/code&gt; namespace:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Images;

ImageClient client = new(&quot;dall-e-3&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generating an image always requires a &lt;code&gt;prompt&lt;/code&gt; that describes what should be generated. To further tailor the image generation to your specific needs, you can create an instance of the &lt;code&gt;ImageGenerationOptions&lt;/code&gt; class and set the &lt;code&gt;Quality&lt;/code&gt;, &lt;code&gt;Size&lt;/code&gt;, and &lt;code&gt;Style&lt;/code&gt; properties accordingly. Note that you can also set the &lt;code&gt;ResponseFormat&lt;/code&gt; property of &lt;code&gt;ImageGenerationOptions&lt;/code&gt; to &lt;code&gt;GeneratedImageFormat.Bytes&lt;/code&gt; in order to receive the resulting PNG as &lt;code&gt;BinaryData&lt;/code&gt; (instead of the default remote &lt;code&gt;Uri&lt;/code&gt;) if this is convenient for your use case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;string prompt = &quot;The concept for a living room that blends Scandinavian simplicity with Japanese minimalism for&quot;
    + &quot; a serene and cozy atmosphere. It&#39;s a space that invites relaxation and mindfulness, with natural light&quot;
    + &quot; and fresh air. Using neutral tones, including colors like white, beige, gray, and black, that create a&quot;
    + &quot; sense of harmony. Featuring sleek wood furniture with clean lines and subtle curves to add warmth and&quot;
    + &quot; elegance. Plants and flowers in ceramic pots adding color and life to a space. They can serve as focal&quot;
    + &quot; points, creating a connection with nature. Soft textiles and cushions in organic fabrics adding comfort&quot;
    + &quot; and softness to a space. They can serve as accents, adding contrast and texture.&quot;;

ImageGenerationOptions options = new()
{
    Quality = GeneratedImageQuality.High,
    Size = GeneratedImageSize.W1792xH1024,
    Style = GeneratedImageStyle.Vivid,
    ResponseFormat = GeneratedImageFormat.Bytes
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, call the &lt;code&gt;ImageClient&lt;/code&gt;&#39;s &lt;code&gt;GenerateImage&lt;/code&gt; method by passing the prompt and the &lt;code&gt;ImageGenerationOptions&lt;/code&gt; instance as arguments:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;GeneratedImage image = client.GenerateImage(prompt, options);
BinaryData bytes = image.ImageBytes;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For illustrative purposes, you could then save the generated image to local storage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using FileStream stream = File.OpenWrite($&quot;{Guid.NewGuid()}.png&quot;);
bytes.ToStream().CopyTo(stream);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to transcribe audio&lt;/h2&gt; 
&lt;p&gt;In this example, an audio file is transcribed using the Whisper speech-to-text model, including both word- and audio-segment-level timestamp information.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Audio;

AudioClient client = new(&quot;whisper-1&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

string audioFilePath = Path.Combine(&quot;Assets&quot;, &quot;audio_houseplant_care.mp3&quot;);

AudioTranscriptionOptions options = new()
{
    ResponseFormat = AudioTranscriptionFormat.Verbose,
    TimestampGranularities = AudioTimestampGranularities.Word | AudioTimestampGranularities.Segment,
};

AudioTranscription transcription = client.TranscribeAudio(audioFilePath, options);

Console.WriteLine(&quot;Transcription:&quot;);
Console.WriteLine($&quot;{transcription.Text}&quot;);

Console.WriteLine();
Console.WriteLine($&quot;Words:&quot;);
foreach (TranscribedWord word in transcription.Words)
{
    Console.WriteLine($&quot;  {word.Word,15} : {word.StartTime.TotalMilliseconds,5:0} - {word.EndTime.TotalMilliseconds,5:0}&quot;);
}

Console.WriteLine();
Console.WriteLine($&quot;Segments:&quot;);
foreach (TranscribedSegment segment in transcription.Segments)
{
    Console.WriteLine($&quot;  {segment.Text,90} : {segment.StartTime.TotalMilliseconds,5:0} - {segment.EndTime.TotalMilliseconds,5:0}&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use assistants with retrieval augmented generation (RAG)&lt;/h2&gt; 
&lt;p&gt;In this example, you have a JSON document with the monthly sales information of different products, and you want to build an assistant capable of analyzing it and answering questions about it.&lt;/p&gt; 
&lt;p&gt;To achieve this, use both &lt;code&gt;OpenAIFileClient&lt;/code&gt; from the &lt;code&gt;OpenAI.Files&lt;/code&gt; namespace and &lt;code&gt;AssistantClient&lt;/code&gt; from the &lt;code&gt;OpenAI.Assistants&lt;/code&gt; namespace.&lt;/p&gt; 
&lt;p&gt;Important: The Assistants REST API is currently in beta. As such, the details are subject to change, and correspondingly the &lt;code&gt;AssistantClient&lt;/code&gt; is attributed as &lt;code&gt;[Experimental]&lt;/code&gt;. To use it, you must suppress the &lt;code&gt;OPENAI001&lt;/code&gt; warning first.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Assistants;
using OpenAI.Files;

OpenAIClient openAIClient = new(Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));
OpenAIFileClient fileClient = openAIClient.GetOpenAIFileClient();
AssistantClient assistantClient = openAIClient.GetAssistantClient();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here is an example of what the JSON document might look like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using Stream document = BinaryData.FromBytes(&quot;&quot;&quot;
    {
        &quot;description&quot;: &quot;This document contains the sale history data for Contoso products.&quot;,
        &quot;sales&quot;: [
            {
                &quot;month&quot;: &quot;January&quot;,
                &quot;by_product&quot;: {
                    &quot;113043&quot;: 15,
                    &quot;113045&quot;: 12,
                    &quot;113049&quot;: 2
                }
            },
            {
                &quot;month&quot;: &quot;February&quot;,
                &quot;by_product&quot;: {
                    &quot;113045&quot;: 22
                }
            },
            {
                &quot;month&quot;: &quot;March&quot;,
                &quot;by_product&quot;: {
                    &quot;113045&quot;: 16,
                    &quot;113055&quot;: 5
                }
            }
        ]
    }
    &quot;&quot;&quot;u8.ToArray()).ToStream();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Upload this document to OpenAI using the &lt;code&gt;OpenAIFileClient&lt;/code&gt;&#39;s &lt;code&gt;UploadFile&lt;/code&gt; method, ensuring that you use &lt;code&gt;FileUploadPurpose.Assistants&lt;/code&gt; to allow your assistant to access it later:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIFile salesFile = fileClient.UploadFile(
    document,
    &quot;monthly_sales.json&quot;,
    FileUploadPurpose.Assistants);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a new assistant using an instance of the &lt;code&gt;AssistantCreationOptions&lt;/code&gt; class to customize it. Here, we use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A friendly &lt;code&gt;Name&lt;/code&gt; for the assistant, as will display in the Playground&lt;/li&gt; 
 &lt;li&gt;Tool definition instances for the tools that the assistant should have access to; here, we use &lt;code&gt;FileSearchToolDefinition&lt;/code&gt; to process the sales document we just uploaded and &lt;code&gt;CodeInterpreterToolDefinition&lt;/code&gt; so we can analyze and visualize the numeric data&lt;/li&gt; 
 &lt;li&gt;Resources for the assistant to use with its tools, here using the &lt;code&gt;VectorStoreCreationHelper&lt;/code&gt; type to automatically make a new vector store that indexes the sales file; alternatively, you could use &lt;code&gt;VectorStoreClient&lt;/code&gt; to manage the vector store separately&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;AssistantCreationOptions assistantOptions = new()
{
    Name = &quot;Example: Contoso sales RAG&quot;,
    Instructions =
        &quot;You are an assistant that looks up sales data and helps visualize the information based&quot;
        + &quot; on user queries. When asked to generate a graph, chart, or other visualization, use&quot;
        + &quot; the code interpreter tool to do so.&quot;,
    Tools =
    {
        new FileSearchToolDefinition(),
        new CodeInterpreterToolDefinition(),
    },
    ToolResources = new()
    {
        FileSearch = new()
        {
            NewVectorStores =
            {
                new VectorStoreCreationHelper([salesFile.Id]),
            }
        }
    },
};

Assistant assistant = assistantClient.CreateAssistant(&quot;gpt-4o&quot;, assistantOptions);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create a new thread. For illustrative purposes, you could include an initial user message asking about the sales information of a given product and then use the &lt;code&gt;AssistantClient&lt;/code&gt;&#39;s &lt;code&gt;CreateThreadAndRun&lt;/code&gt; method to get it started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;ThreadCreationOptions threadOptions = new()
{
    InitialMessages = { &quot;How well did product 113045 sell in February? Graph its trend over time.&quot; }
};

ThreadRun threadRun = assistantClient.CreateThreadAndRun(assistant.Id, threadOptions);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Poll the status of the run until it is no longer queued or in progress:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;do
{
    Thread.Sleep(TimeSpan.FromSeconds(1));
    threadRun = assistantClient.GetRun(threadRun.ThreadId, threadRun.Id);
} while (!threadRun.Status.IsTerminal);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything went well, the terminal status of the run will be &lt;code&gt;RunStatus.Completed&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you can use the &lt;code&gt;AssistantClient&lt;/code&gt;&#39;s &lt;code&gt;GetMessages&lt;/code&gt; method to retrieve the messages associated with this thread, which now include the responses from the assistant to the initial user message.&lt;/p&gt; 
&lt;p&gt;For illustrative purposes, you could print the messages to the console and also save any images produced by the assistant to local storage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;CollectionResult&amp;lt;ThreadMessage&amp;gt; messages
    = assistantClient.GetMessages(threadRun.ThreadId, new MessageCollectionOptions() { Order = MessageCollectionOrder.Ascending });

foreach (ThreadMessage message in messages)
{
    Console.Write($&quot;[{message.Role.ToString().ToUpper()}]: &quot;);
    foreach (MessageContent contentItem in message.Content)
    {
        if (!string.IsNullOrEmpty(contentItem.Text))
        {
            Console.WriteLine($&quot;{contentItem.Text}&quot;);

            if (contentItem.TextAnnotations.Count &amp;gt; 0)
            {
                Console.WriteLine();
            }

            // Include annotations, if any.
            foreach (TextAnnotation annotation in contentItem.TextAnnotations)
            {
                if (!string.IsNullOrEmpty(annotation.InputFileId))
                {
                    Console.WriteLine($&quot;* File citation, file ID: {annotation.InputFileId}&quot;);
                }
                if (!string.IsNullOrEmpty(annotation.OutputFileId))
                {
                    Console.WriteLine($&quot;* File output, new file ID: {annotation.OutputFileId}&quot;);
                }
            }
        }
        if (!string.IsNullOrEmpty(contentItem.ImageFileId))
        {
            OpenAIFile imageInfo = fileClient.GetFile(contentItem.ImageFileId);
            BinaryData imageBytes = fileClient.DownloadFile(contentItem.ImageFileId);
            using FileStream stream = File.OpenWrite($&quot;{imageInfo.Filename}.png&quot;);
            imageBytes.ToStream().CopyTo(stream);

            Console.WriteLine($&quot;&amp;lt;image: {imageInfo.Filename}.png&amp;gt;&quot;);
        }
    }
    Console.WriteLine();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And it would yield something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[USER]: How well did product 113045 sell in February? Graph its trend over time.

[ASSISTANT]: Product 113045 sold 22 units in February【4:0†monthly_sales.json】.

Now, I will generate a graph to show its sales trend over time.

* File citation, file ID: file-hGOiwGNftMgOsjbynBpMCPFn

[ASSISTANT]: &amp;lt;image: 015d8e43-17fe-47de-af40-280f25452280.png&amp;gt;
The sales trend for Product 113045 over the past three months shows that:

- In January, 12 units were sold.
- In February, 22 units were sold, indicating significant growth.
- In March, sales dropped slightly to 16 units.

The graph above visualizes this trend, showing a peak in sales during February.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use assistants with streaming and vision&lt;/h2&gt; 
&lt;p&gt;This example shows how to use the v2 Assistants API to provide image data to an assistant and then stream the run&#39;s response.&lt;/p&gt; 
&lt;p&gt;As before, you will use a &lt;code&gt;OpenAIFileClient&lt;/code&gt; and an &lt;code&gt;AssistantClient&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIClient openAIClient = new(Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));
OpenAIFileClient fileClient = openAIClient.GetOpenAIFileClient();
AssistantClient assistantClient = openAIClient.GetAssistantClient();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For this example, we will use both image data from a local file as well as an image located at a URL. For the local data, we upload the file with the &lt;code&gt;Vision&lt;/code&gt; upload purpose, which would also allow it to be downloaded and retrieved later.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIFile pictureOfAppleFile = fileClient.UploadFile(
    Path.Combine(&quot;Assets&quot;, &quot;images_apple.png&quot;),
    FileUploadPurpose.Vision);

Uri linkToPictureOfOrange = new(&quot;https://raw.githubusercontent.com/openai/openai-dotnet/refs/heads/main/examples/Assets/images_orange.png&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create a new assistant with a vision-capable model like &lt;code&gt;gpt-4o&lt;/code&gt; and a thread with the image information referenced:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Assistant assistant = assistantClient.CreateAssistant(
    &quot;gpt-4o&quot;,
    new AssistantCreationOptions()
    {
        Instructions = &quot;When asked a question, attempt to answer very concisely. &quot;
            + &quot;Prefer one-sentence answers whenever feasible.&quot;
    });

AssistantThread thread = assistantClient.CreateThread(new ThreadCreationOptions()
{
    InitialMessages =
        {
            new ThreadInitializationMessage(
                MessageRole.User,
                [
                    &quot;Hello, assistant! Please compare these two images for me:&quot;,
                    MessageContent.FromImageFileId(pictureOfAppleFile.Id),
                    MessageContent.FromImageUri(linkToPictureOfOrange),
                ]),
        }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the assistant and thread prepared, use the &lt;code&gt;CreateRunStreaming&lt;/code&gt; method to get an enumerable &lt;code&gt;CollectionResult&amp;lt;StreamingUpdate&amp;gt;&lt;/code&gt;. You can then iterate over this collection with &lt;code&gt;foreach&lt;/code&gt;. For async calling patterns, use &lt;code&gt;CreateRunStreamingAsync&lt;/code&gt; and iterate over the &lt;code&gt;AsyncCollectionResult&amp;lt;StreamingUpdate&amp;gt;&lt;/code&gt; with &lt;code&gt;await foreach&lt;/code&gt;, instead. Note that streaming variants also exist for &lt;code&gt;CreateThreadAndRunStreaming&lt;/code&gt; and &lt;code&gt;SubmitToolOutputsToRunStreaming&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;CollectionResult&amp;lt;StreamingUpdate&amp;gt; streamingUpdates = assistantClient.CreateRunStreaming(
    thread.Id,
    assistant.Id,
    new RunCreationOptions()
    {
        AdditionalInstructions = &quot;When possible, try to sneak in puns if you&#39;re asked to compare things.&quot;,
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, to handle the &lt;code&gt;StreamingUpdates&lt;/code&gt; as they arrive, you can use the &lt;code&gt;UpdateKind&lt;/code&gt; property on the base &lt;code&gt;StreamingUpdate&lt;/code&gt; and/or downcast to a specifically desired update type, like &lt;code&gt;MessageContentUpdate&lt;/code&gt; for &lt;code&gt;thread.message.delta&lt;/code&gt; events or &lt;code&gt;RequiredActionUpdate&lt;/code&gt; for streaming tool calls.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;foreach (StreamingUpdate streamingUpdate in streamingUpdates)
{
    if (streamingUpdate.UpdateKind == StreamingUpdateReason.RunCreated)
    {
        Console.WriteLine($&quot;--- Run started! ---&quot;);
    }
    if (streamingUpdate is MessageContentUpdate contentUpdate)
    {
        Console.Write(contentUpdate.Text);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will yield streamed output from the run like the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;--- Run started! ---
The first image depicts a multicolored apple with a blend of red and green hues, while the second image shows an orange with a bright, textured orange peel; one might say it’s comparing apples to oranges!
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to work with Azure OpenAI&lt;/h2&gt; 
&lt;p&gt;For Azure OpenAI scenarios use the &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net&quot;&gt;Azure SDK&lt;/a&gt; and more specifically the &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/raw/main/sdk/openai/Azure.AI.OpenAI/README.md&quot;&gt;Azure OpenAI client library for .NET&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Azure OpenAI client library for .NET is a companion to this library and all common capabilities between OpenAI and Azure OpenAI share the same scenario clients, methods, and request/response types. It is designed to make Azure specific scenarios straightforward, with extensions for Azure-specific concepts like Responsible AI content filter results and On Your Data integration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;AzureOpenAIClient azureClient = new(
    new Uri(&quot;https://your-azure-openai-resource.com&quot;),
    new DefaultAzureCredential());
ChatClient chatClient = azureClient.GetChatClient(&quot;my-gpt-35-turbo-deployment&quot;);

ChatCompletion completion = chatClient.CompleteChat(
    [
        // System messages represent instructions or other guidance about how the assistant should behave
        new SystemChatMessage(&quot;You are a helpful assistant that talks like a pirate.&quot;),
        // User messages represent user input, whether historical or the most recen tinput
        new UserChatMessage(&quot;Hi, can you help me?&quot;),
        // Assistant messages in a request represent conversation history for responses
        new AssistantChatMessage(&quot;Arrr! Of course, me hearty! What can I do for ye?&quot;),
        new UserChatMessage(&quot;What&#39;s the best way to train a parrot?&quot;),
    ]);

Console.WriteLine($&quot;{completion.Role}: {completion.Content[0].Text}&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Advanced scenarios&lt;/h2&gt; 
&lt;h3&gt;Using protocol methods&lt;/h3&gt; 
&lt;p&gt;In addition to the client methods that use strongly-typed request and response objects, the .NET library also provides &lt;em&gt;protocol methods&lt;/em&gt; that enable more direct access to the REST API. Protocol methods are &quot;binary in, binary out&quot; accepting &lt;code&gt;BinaryContent&lt;/code&gt; as request bodies and providing &lt;code&gt;BinaryData&lt;/code&gt; as response bodies.&lt;/p&gt; 
&lt;p&gt;For example, to use the protocol method variant of the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method, pass the request body as &lt;code&gt;BinaryContent&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;ChatClient client = new(&quot;gpt-4o&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

BinaryData input = BinaryData.FromBytes(&quot;&quot;&quot;
    {
       &quot;model&quot;: &quot;gpt-4o&quot;,
       &quot;messages&quot;: [
           {
               &quot;role&quot;: &quot;user&quot;,
               &quot;content&quot;: &quot;Say &#39;this is a test.&#39;&quot;
           }
       ]
    }
    &quot;&quot;&quot;u8.ToArray());

using BinaryContent content = BinaryContent.Create(input);
ClientResult result = client.CompleteChat(content);
BinaryData output = result.GetRawResponse().Content;

using JsonDocument outputAsJson = JsonDocument.Parse(output.ToString());
string message = outputAsJson.RootElement
    .GetProperty(&quot;choices&quot;u8)[0]
    .GetProperty(&quot;message&quot;u8)
    .GetProperty(&quot;content&quot;u8)
    .GetString();

Console.WriteLine($&quot;[ASSISTANT]: {message}&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice how you can then call the resulting &lt;code&gt;ClientResult&lt;/code&gt;&#39;s &lt;code&gt;GetRawResponse&lt;/code&gt; method and retrieve the response body as &lt;code&gt;BinaryData&lt;/code&gt; via the &lt;code&gt;PipelineResponse&lt;/code&gt;&#39;s &lt;code&gt;Content&lt;/code&gt; property.&lt;/p&gt; 
&lt;h3&gt;Mock a client for testing&lt;/h3&gt; 
&lt;p&gt;The OpenAI .NET library has been designed to support mocking, providing key features such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Client methods made virtual to allow overriding.&lt;/li&gt; 
 &lt;li&gt;Model factories to assist in instantiating API output models that lack public constructors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To illustrate how mocking works, suppose you want to validate the behavior of the following method using the &lt;a href=&quot;https://github.com/devlooped/moq&quot;&gt;Moq&lt;/a&gt; library. Given the path to an audio file, it determines whether it contains a specified secret word:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public bool ContainsSecretWord(AudioClient client, string audioFilePath, string secretWord)
{
    AudioTranscription transcription = client.TranscribeAudio(audioFilePath);
    return transcription.Text.Contains(secretWord);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create mocks of &lt;code&gt;AudioClient&lt;/code&gt; and &lt;code&gt;ClientResult&amp;lt;AudioTranscription&amp;gt;&lt;/code&gt;, set up methods and properties that will be invoked, then test the behavior of the &lt;code&gt;ContainsSecretWord&lt;/code&gt; method. Since the &lt;code&gt;AudioTranscription&lt;/code&gt; class does not provide public constructors, it must be instantiated by the &lt;code&gt;OpenAIAudioModelFactory&lt;/code&gt; static class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Instantiate mocks and the AudioTranscription object.

Mock&amp;lt;AudioClient&amp;gt; mockClient = new();
Mock&amp;lt;ClientResult&amp;lt;AudioTranscription&amp;gt;&amp;gt; mockResult = new(null, Mock.Of&amp;lt;PipelineResponse&amp;gt;());
AudioTranscription transcription = OpenAIAudioModelFactory.AudioTranscription(text: &quot;I swear I saw an apple flying yesterday!&quot;);

// Set up mocks&#39; properties and methods.

mockResult
    .SetupGet(result =&amp;gt; result.Value)
    .Returns(transcription);

mockClient.Setup(client =&amp;gt; client.TranscribeAudio(
        It.IsAny&amp;lt;string&amp;gt;(),
        It.IsAny&amp;lt;AudioTranscriptionOptions&amp;gt;()))
    .Returns(mockResult.Object);

// Perform validation.

AudioClient client = mockClient.Object;
bool containsSecretWord = ContainsSecretWord(client, &quot;&amp;lt;audioFilePath&amp;gt;&quot;, &quot;apple&quot;);

Assert.That(containsSecretWord, Is.True);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All namespaces have their corresponding model factory to support mocking with the exception of the &lt;code&gt;OpenAI.Assistants&lt;/code&gt; and &lt;code&gt;OpenAI.VectorStores&lt;/code&gt; namespaces, for which model factories are coming soon.&lt;/p&gt; 
&lt;h3&gt;Automatically retrying errors&lt;/h3&gt; 
&lt;p&gt;By default, the client classes will automatically retry the following errors up to three additional times using exponential backoff:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;408 Request Timeout&lt;/li&gt; 
 &lt;li&gt;429 Too Many Requests&lt;/li&gt; 
 &lt;li&gt;500 Internal Server Error&lt;/li&gt; 
 &lt;li&gt;502 Bad Gateway&lt;/li&gt; 
 &lt;li&gt;503 Service Unavailable&lt;/li&gt; 
 &lt;li&gt;504 Gateway Timeout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Observability&lt;/h3&gt; 
&lt;p&gt;OpenAI .NET library supports experimental distributed tracing and metrics with OpenTelemetry. Check out &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/docs/observability.md&quot;&gt;Observability with OpenTelemetry&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/aspnetcore</title>
      <link>https://github.com/dotnet/aspnetcore</link>
      <description>&lt;p&gt;ASP.NET Core is a cross-platform .NET framework for building modern cloud-based web applications on Windows, Mac, or Linux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ASP.NET Core&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.dotnetfoundation.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/.NET%20Foundation-blueviolet.svg?sanitize=true&quot; alt=&quot;.NET Foundation&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspnetcore/raw/main/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/dotnet/aspnetcore?color=%230b0&amp;amp;style=flat-square&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspnetcore/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/aspnetcore/help%20wanted?color=%232EA043&amp;amp;label=help%20wanted&amp;amp;style=flat-square&quot; alt=&quot;Help Wanted&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspnetcore/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/aspnetcore/good%20first%20issue?color=%23512BD4&amp;amp;label=good%20first%20issue&amp;amp;style=flat-square&quot; alt=&quot;Good First Issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/dotnet-discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/732297728826277939?style=flat-square&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=7289DA&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ASP.NET Core is an open-source and cross-platform framework for building modern cloud-based internet-connected applications, such as web apps, IoT apps, and mobile backends. ASP.NET Core apps run on &lt;a href=&quot;https://dot.net&quot;&gt;.NET&lt;/a&gt;, a free, cross-platform, and open-source application runtime. It was architected to provide an optimized development framework for apps that are deployed to the cloud or run on-premises. It consists of modular components with minimal overhead, so you retain flexibility while constructing your solutions. You can develop and run your ASP.NET Core apps cross-platform on Windows, Mac, and Linux. &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/&quot;&gt;Learn more about ASP.NET Core&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/getting-started&quot;&gt;Getting Started&lt;/a&gt; instructions.&lt;/p&gt; 
&lt;p&gt;Also check out the &lt;a href=&quot;https://www.microsoft.com/net&quot;&gt;.NET Homepage&lt;/a&gt; for released versions of .NET, getting started guides, and learning resources.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/dotnet/aspnetcore/raw/main/docs/TriageProcess.md&quot;&gt;Triage Process&lt;/a&gt; document for more information on how we handle incoming issues.&lt;/p&gt; 
&lt;h2&gt;How to engage, contribute, and give feedback&lt;/h2&gt; 
&lt;p&gt;Some of the best ways to contribute are to try things out, file issues, join in design conversations, and make pull-requests.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspnetcore/main/docs/DailyBuilds.md&quot;&gt;Download our latest daily builds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow along with the development of ASP.NET Core: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://live.asp.net&quot;&gt;Community Standup&lt;/a&gt;: The community standup is held every week and streamed live on YouTube. You can view past standups in the linked playlist.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://aka.ms/aspnet/roadmap&quot;&gt;Roadmap&lt;/a&gt;: The schedule and milestone themes for ASP.NET Core.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspnetcore/main/docs/BuildFromSource.md&quot;&gt;Build ASP.NET Core source code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspnetcore/main/CONTRIBUTING.md&quot;&gt;contributing&lt;/a&gt; page to see the best places to log issues and start discussions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting security issues and bugs&lt;/h2&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&quot;https://technet.microsoft.com/en-us/security/ff852094.aspx&quot;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Related projects&lt;/h2&gt; 
&lt;p&gt;These are some other repos for related projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aspnet/Docs&quot;&gt;Documentation&lt;/a&gt; - documentation sources for &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/&quot;&gt;https://learn.microsoft.com/aspnet/core/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/efcore&quot;&gt;Entity Framework Core&lt;/a&gt; - data access technology&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/runtime&quot;&gt;Runtime&lt;/a&gt; - cross-platform runtime for cloud, mobile, desktop, and IoT apps&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/razor&quot;&gt;Razor&lt;/a&gt; - the Razor compiler and tooling for working with Razor syntax (.cshtml, .razor)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code of conduct&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspnetcore/main/CODE-OF-CONDUCT.md&quot;&gt;CODE-OF-CONDUCT&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Nightly builds&lt;/h2&gt; 
&lt;p&gt;This table includes links to download the latest builds of the ASP.NET Core Shared Framework. Also included are links to download the Windows Hosting Bundle, which includes the ASP.NET Core Shared Framework, the .NET Runtime Shared Framework, and the IIS plugin (ASP.NET Core Module). You can download the latest .NET Runtime builds &lt;a href=&quot;https://github.com/dotnet/runtime/raw/main/docs/project/dogfooding.md#nightly-builds-table&quot;&gt;here&lt;/a&gt;, and the latest .NET SDK builds &lt;a href=&quot;https://github.com/dotnet/installer#table&quot;&gt;here&lt;/a&gt;. &lt;strong&gt;If you&#39;re unsure what you need, then install the SDK; it has everything except the IIS plugin.&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Platform&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Shared Framework (Installer)&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Shared Framework (Binaries)&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Hosting Bundle (Installer)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Windows x64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-win-x64.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-win-x64.zip&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/dotnet-hosting-win.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Windows x86&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-win-x86.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-win-x86.zip&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/dotnet-hosting-win.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Windows arm64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-win-arm64.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-win-arm64.zip&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/dotnet-hosting-win.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;macOS x64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-osx-x64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;macOS arm64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-osx-arm64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux x64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-x64.deb&quot;&gt;Deb Installer&lt;/a&gt; - &lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-x64.rpm&quot;&gt;RPM Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-x64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux arm&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-arm.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux arm64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-aarch64.rpm&quot;&gt;RPM Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-arm64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux-musl-x64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-musl-x64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux-musl-arm&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-musl-arm.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux-musl-arm64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/9.0/daily/aspnetcore-runtime-linux-musl-arm64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>dotnet/runtime</title>
      <link>https://github.com/dotnet/runtime</link>
      <description>&lt;p&gt;.NET is a cross-platform runtime for cloud, mobile, desktop, and IoT apps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Runtime&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=129&amp;amp;branchName=main&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/runtime/runtime?branchName=main&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/runtime/labels/help%20wanted&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/runtime/help%20wanted?style=flat-square&amp;amp;color=%232EA043&amp;amp;label=help%20wanted&quot; alt=&quot;Help Wanted&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/runtime/labels/good%20first%20issue&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/runtime/good%20first%20issue?style=flat-square&amp;amp;color=%232EA043&amp;amp;label=good%20first%20issue&quot; alt=&quot;Good First Issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/dotnet/runtime&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/dotnet-discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/732297728826277939?style=flat-square&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=7289DA&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#what-is-net&quot;&gt;What is .NET?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#how-can-i-contribute&quot;&gt;How can I contribute?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#reporting-security-issues-and-security-bugs&quot;&gt;Reporting security issues and security bugs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#filing-issues&quot;&gt;Filing issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#useful-links&quot;&gt;Useful Links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#net-foundation&quot;&gt;.NET Foundation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This repo contains the code to build the .NET runtime, libraries and shared host (&lt;code&gt;dotnet&lt;/code&gt;) installers for all supported platforms, as well as the sources to .NET runtime and libraries.&lt;/p&gt; 
&lt;h2&gt;What is .NET?&lt;/h2&gt; 
&lt;p&gt;Official Starting Page: &lt;a href=&quot;https://dotnet.microsoft.com&quot;&gt;https://dotnet.microsoft.com&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/get-started&quot;&gt;How to use .NET&lt;/a&gt; (with VS, VS Code, command-line CLI) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download&quot;&gt;Install official releases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core&quot;&gt;Documentation&lt;/a&gt; (Get Started, Tutorials, Porting from .NET Framework, API reference, ...) 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/deploying&quot;&gt;Deploying apps&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/core/raw/main/support.md&quot;&gt;Support&lt;/a&gt; (Releases, OS Versions, ...)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/core/raw/main/roadmap.md&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How can I contribute?&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Many people all over the world have helped make this project better.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; explains what kinds of contributions we welcome&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/docs/workflow/README.md&quot;&gt;Workflow Instructions&lt;/a&gt; explains how to build and test&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/docs/project/dogfooding.md&quot;&gt;Dogfooding .NET&lt;/a&gt; explains how to get nightly builds of the runtime and its libraries to test them in your own projects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting security issues and security bugs&lt;/h2&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&quot;https://www.microsoft.com/msrc/faqs-report-an-issue&quot;&gt;Security TechCenter&lt;/a&gt;. You can also find these instructions in this repo&#39;s &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/SECURITY.md&quot;&gt;Security doc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also see info about related &lt;a href=&quot;https://www.microsoft.com/msrc/bounty-dot-net-core&quot;&gt;Microsoft .NET Bounty Program&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Filing issues&lt;/h2&gt; 
&lt;p&gt;This repo should contain issues that are tied to the runtime, the class libraries and frameworks, the installation of the &lt;code&gt;dotnet&lt;/code&gt; binary (sometimes known as the &lt;code&gt;muxer&lt;/code&gt;) and the installation of the .NET runtime and libraries.&lt;/p&gt; 
&lt;p&gt;For other issues, please file them to their appropriate sibling repos. We have links to many of them on &lt;a href=&quot;https://github.com/dotnet/runtime/issues/new/choose&quot;&gt;our new issue page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Useful Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://source.dot.net&quot;&gt;.NET source index&lt;/a&gt; / &lt;a href=&quot;https://referencesource.microsoft.com&quot;&gt;.NET Framework source index&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/api&quot;&gt;API Reference docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apisof.net&quot;&gt;.NET API Catalog&lt;/a&gt; (incl. APIs from daily builds and API usage info)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/dotnet-api-docs/wiki&quot;&gt;API docs writing guidelines&lt;/a&gt; - useful when writing /// comments&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/dotnet-discord&quot;&gt;.NET Discord Server&lt;/a&gt; - a place to discuss the development of .NET and its ecosystem&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;.NET Foundation&lt;/h2&gt; 
&lt;p&gt;.NET Runtime is a &lt;a href=&quot;https://www.dotnetfoundation.org/projects&quot;&gt;.NET Foundation&lt;/a&gt; project.&lt;/p&gt; 
&lt;p&gt;There are many .NET related projects on GitHub.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/dotnet&quot;&gt;.NET home repo&lt;/a&gt;&amp;nbsp;- links to 100s of .NET projects, from Microsoft and the community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/aspnet/core&quot;&gt;ASP.NET Core home&lt;/a&gt; - the best place to start learning about ASP.NET Core.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This project has adopted the code of conduct defined by the &lt;a href=&quot;https://contributor-covenant.org&quot;&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community. For more information, see the &lt;a href=&quot;https://www.dotnetfoundation.org/code-of-conduct&quot;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;General .NET OSS discussions: &lt;a href=&quot;https://github.com/dotnet-foundation/Home/discussions&quot;&gt;.NET Foundation Discussions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;.NET (including the runtime repo) is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/LICENSE.TXT&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
