<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub R Weekly Trending</title>
    <description>Weekly Trending of R in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 01:49:59 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>sqjin/CellChat</title>
      <link>https://github.com/sqjin/CellChat</link>
      <description>&lt;p&gt;R toolkit for inference, visualization and analysis of cell-cell communication from single-cell data&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;200&quot; src=&quot;https://github.com/sqjin/CellChat/raw/master/CellChat_Logo.png&quot;&gt; &lt;/p&gt; 
&lt;h1&gt;CAUTION&lt;/h1&gt; 
&lt;p&gt;We have updated CellChat to v2 and migrated CellChat to a new repository. This repository will be NOT updated and maintained any more. Please check the new repository &lt;a href=&quot;https://github.com/jinworks/CellChat&quot;&gt;jinworks/CellChat&lt;/a&gt; for the new updates, and the &lt;a href=&quot;https://biorxiv.org/cgi/content/short/2023.11.05.565674v1&quot;&gt;CellChat v2 paper&lt;/a&gt; for a comprehensive protocol of CellChat.&lt;/p&gt; 
&lt;h1&gt;About CellChat and CellChatDB&lt;/h1&gt; 
&lt;p&gt;CellChat is an R package designed for inference, analysis, and visualization of cell-cell communication from single-cell data. CellChat aims to enable users to identify and interpret cell-cell communication within an easily interpretable framework, with the emphasis of clear, attractive, and interpretable visualizations.&lt;/p&gt; 
&lt;p&gt;CellChatDB is a manually curated database of literature-supported ligand-receptor interactions in mutiple species, leading to a comprehensive recapitulation of known molecular interaction mechanisms including multi-subunit structure of ligand-receptor complexes and co-factors.&lt;/p&gt; 
&lt;p&gt;If you use CellChat in your research, please considering citing our papers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://biorxiv.org/cgi/content/short/2023.11.05.565674v1&quot;&gt;Suoqin Jin et al., CellChat for systematic analysis of cell-cell communication from single-cell and spatially resolved transcriptomics, bioRxiv 2023&lt;/a&gt; [CellChat v2]&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nature.com/articles/s41467-021-21246-9&quot;&gt;Suoqin Jin et al., Inference and analysis of cell-cell communication using CellChat, Nature Communications 2021&lt;/a&gt; [CellChat v1]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Capabilities&lt;/h1&gt; 
&lt;p&gt;In addition to infer the intercellular communication from any given single-cell data, CellChat provides functionality for further data exploration, analysis, and visualization.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It can quantitatively characterize and compare the inferred cell-cell communication networks using a systems approach by combining social network analysis, pattern recognition, and manifold learning approaches.&lt;/li&gt; 
 &lt;li&gt;It provides an easy-to-use tool for extracting and visualizing high-order information of the inferred networks. For example, it allows ready prediction of major signaling inputs and outputs for all cell populations and how these populations and signals coordinate together for functions.&lt;/li&gt; 
 &lt;li&gt;It enables comparative analysis of cell-cell communication across different conditions and identification of altered signaling and cell populations.&lt;/li&gt; 
 &lt;li&gt;It provides several visualization outputs to facilitate intuitive user-guided data interpretation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;700&quot; src=&quot;https://github.com/sqjin/CellChat/raw/master/overview_CellChat.png&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://clustrmaps.com/site/1bpq2&quot;&gt; &lt;img width=&quot;200&quot; src=&quot;https://clustrmaps.com/map_v2.png?cl=ffffff&amp;amp;w=a&amp;amp;t=n&amp;amp;d=42WqeykSXznN_NSaBlpf6CtSXQxhqmIs6QusUsguFdY&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/sqjin/CellChat/master/#&quot;&gt; &lt;img src=&quot;https://api.visitorbadge.io/api/visitors?path=https%3A%2F%2Fgithub.com%2Fsqjin%2FCellChat&amp;amp;labelColor=%233499cc&amp;amp;countColor=%2370c168&quot;&gt; &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rdatatable/data.table</title>
      <link>https://github.com/Rdatatable/data.table</link>
      <description>&lt;p&gt;R&#39;s data.table package extends data.frame:&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;data.table &lt;a href=&quot;https://r-datatable.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Rdatatable/data.table/master/.graphics/logo.png&quot; align=&quot;right&quot; height=&quot;140&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;!-- badges: start --&gt; 
&lt;p&gt;&lt;a href=&quot;https://cran.r-project.org/web/checks/check_results_data.table.html&quot;&gt;&lt;img src=&quot;https://badges.cranchecks.info/flavor/release/data.table.svg?sanitize=true&quot; alt=&quot;CRAN status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Rdatatable/data.table/actions&quot;&gt;&lt;img src=&quot;https://github.com/Rdatatable/data.table/workflows/R-CMD-check/badge.svg?sanitize=true&quot; alt=&quot;R-CMD-check&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.codecov.io/github/Rdatatable/data.table?branch=master&quot;&gt;&lt;img src=&quot;https://codecov.io/github/Rdatatable/data.table/coverage.svg?branch=master&quot; alt=&quot;Codecov test coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitlab.com/Rdatatable/data.table/-/pipelines&quot;&gt;&lt;img src=&quot;https://gitlab.com/Rdatatable/data.table/badges/master/pipeline.svg?sanitize=true&quot; alt=&quot;GitLab CI build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.rdocumentation.org/trends&quot;&gt;&lt;img src=&quot;https://cranlogs.r-pkg.org/badges/data.table&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitlab.com/jangorecki/rdeps&quot;&gt;&lt;img src=&quot;https://jangorecki.gitlab.io/rdeps/data.table/CRAN_usage.svg?sanitize=true&quot; alt=&quot;CRAN usage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitlab.com/jangorecki/rdeps&quot;&gt;&lt;img src=&quot;https://jangorecki.gitlab.io/rdeps/data.table/BioC_usage.svg?sanitize=true&quot; alt=&quot;BioC usage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitlab.com/jangorecki/rdeps&quot;&gt;&lt;img src=&quot;https://jangorecki.gitlab.io/rdeps/data.table/indirect_usage.svg?sanitize=true&quot; alt=&quot;indirect usage&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- badges: end --&gt; 
&lt;p&gt;&lt;code&gt;data.table&lt;/code&gt; provides a high-performance version of &lt;a href=&quot;https://www.r-project.org/about.html&quot;&gt;base R&lt;/a&gt;&#39;s &lt;code&gt;data.frame&lt;/code&gt; with syntax and feature enhancements for ease of use, convenience and programming speed.&lt;/p&gt; 
&lt;h2&gt;Why &lt;code&gt;data.table&lt;/code&gt;?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;concise syntax: fast to type, fast to read&lt;/li&gt; 
 &lt;li&gt;fast speed&lt;/li&gt; 
 &lt;li&gt;memory efficient&lt;/li&gt; 
 &lt;li&gt;careful API lifecycle management&lt;/li&gt; 
 &lt;li&gt;community&lt;/li&gt; 
 &lt;li&gt;feature rich&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;fast and friendly delimited &lt;strong&gt;file reader&lt;/strong&gt;: &lt;strong&gt;&lt;a href=&quot;https://rdatatable.gitlab.io/data.table/reference/fread.html&quot;&gt;&lt;code&gt;?fread&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;, see also &lt;a href=&quot;https://github.com/Rdatatable/data.table/wiki/Convenience-features-of-fread&quot;&gt;convenience features for &lt;em&gt;small&lt;/em&gt; data&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fast and feature rich delimited &lt;strong&gt;file writer&lt;/strong&gt;: &lt;strong&gt;&lt;a href=&quot;https://rdatatable.gitlab.io/data.table/reference/fwrite.html&quot;&gt;&lt;code&gt;?fwrite&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;low-level &lt;strong&gt;parallelism&lt;/strong&gt;: many common operations are internally parallelized to use multiple CPU threads&lt;/li&gt; 
 &lt;li&gt;fast and scalable aggregations; e.g. 100GB in RAM (see &lt;a href=&quot;https://duckdblabs.github.io/db-benchmark/&quot;&gt;benchmarks&lt;/a&gt; on up to &lt;strong&gt;two billion rows&lt;/strong&gt;)&lt;/li&gt; 
 &lt;li&gt;fast and feature rich joins: &lt;strong&gt;ordered joins&lt;/strong&gt; (e.g. rolling forwards, backwards, nearest and limited staleness), &lt;strong&gt;&lt;a href=&quot;https://github.com/Rdatatable/data.table/wiki/talks/EARL2014_OverlapRangeJoin_Arun.pdf&quot;&gt;overlapping range joins&lt;/a&gt;&lt;/strong&gt; (similar to &lt;code&gt;IRanges::findOverlaps&lt;/code&gt;), &lt;strong&gt;&lt;a href=&quot;https://github.com/Rdatatable/data.table/wiki/talks/ArunSrinivasanUseR2016.pdf&quot;&gt;non-equi joins&lt;/a&gt;&lt;/strong&gt; (i.e. joins using operators &lt;code&gt;&amp;gt;, &amp;gt;=, &amp;lt;, &amp;lt;=&lt;/code&gt;), &lt;strong&gt;aggregate on join&lt;/strong&gt; (&lt;code&gt;by=.EACHI&lt;/code&gt;), &lt;strong&gt;update on join&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;fast add/update/delete columns &lt;strong&gt;by reference&lt;/strong&gt; by group using no copies at all&lt;/li&gt; 
 &lt;li&gt;fast and feature rich &lt;strong&gt;reshaping&lt;/strong&gt; data: &lt;strong&gt;&lt;a href=&quot;https://rdatatable.gitlab.io/data.table/reference/dcast.data.table.html&quot;&gt;&lt;code&gt;?dcast&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; (&lt;em&gt;pivot/wider/spread&lt;/em&gt;) and &lt;strong&gt;&lt;a href=&quot;https://rdatatable.gitlab.io/data.table/reference/melt.data.table.html&quot;&gt;&lt;code&gt;?melt&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; (&lt;em&gt;unpivot/longer/gather&lt;/em&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;any R function from any R package&lt;/strong&gt; can be used in queries not just the subset of functions made available by a database backend, also columns of type &lt;code&gt;list&lt;/code&gt; are supported&lt;/li&gt; 
 &lt;li&gt;has &lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Dependency_hell&quot;&gt;no dependencies&lt;/a&gt;&lt;/strong&gt; at all other than base R itself, for simpler production/maintenance&lt;/li&gt; 
 &lt;li&gt;the R dependency is &lt;strong&gt;as old as possible for as long as possible&lt;/strong&gt;, dated April 2014, and we continuously test against that version; e.g. v1.11.0 released on 5 May 2018 bumped the dependency up from 5 year old R 3.0.0 to 4 year old R 3.1.0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;install.packages(&quot;data.table&quot;)

# latest development version (only if newer available)
data.table::update_dev_pkg()

# latest development version (force install)
install.packages(&quot;data.table&quot;, repos=&quot;https://rdatatable.gitlab.io/data.table&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/Rdatatable/data.table/wiki/Installation&quot;&gt;the Installation wiki&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Use &lt;code&gt;data.table&lt;/code&gt; subset &lt;code&gt;[&lt;/code&gt; operator the same way you would use &lt;code&gt;data.frame&lt;/code&gt; one, but...&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;no need to prefix each column with &lt;code&gt;DT$&lt;/code&gt; (like &lt;code&gt;subset()&lt;/code&gt; and &lt;code&gt;with()&lt;/code&gt; but built-in)&lt;/li&gt; 
 &lt;li&gt;any R expression using any package is allowed in &lt;code&gt;j&lt;/code&gt; argument, not just list of columns&lt;/li&gt; 
 &lt;li&gt;extra argument &lt;code&gt;by&lt;/code&gt; to compute &lt;code&gt;j&lt;/code&gt; expression by group&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;library(data.table)
DT = as.data.table(iris)

# FROM[WHERE, SELECT, GROUP BY]
# DT  [i,     j,      by]

DT[Petal.Width &amp;gt; 1.0, mean(Petal.Length), by = Species]
#      Species       V1
#1: versicolor 4.362791
#2:  virginica 5.552000
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Getting started&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cran.r-project.org/package=data.table/vignettes/datatable-intro.html&quot;&gt;Introduction to data.table&lt;/a&gt; vignette&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Rdatatable/data.table/wiki/Getting-started&quot;&gt;Getting started&lt;/a&gt; wiki page&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rdatatable.gitlab.io/data.table/reference/data.table.html#examples&quot;&gt;Examples&lt;/a&gt; produced by &lt;code&gt;example(data.table)&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cheatsheets&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rstudio/cheatsheets/master/datatable.pdf&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rstudio/cheatsheets/master/pngs/datatable.png&quot; width=&quot;615&quot; height=&quot;242&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;data.table&lt;/code&gt; is widely used by the R community. It is being directly used by hundreds of CRAN and Bioconductor packages, and indirectly by thousands. It is one of the &lt;a href=&quot;https://medium.datadriveninvestor.com/most-starred-and-forked-github-repos-for-r-in-data-science-fb87a54d2a6a&quot;&gt;top most starred&lt;/a&gt; R packages on GitHub, and was highly rated by the &lt;a href=&quot;http://depsy.org/package/r/data.table&quot;&gt;Depsy project&lt;/a&gt;. If you need help, the &lt;code&gt;data.table&lt;/code&gt; community is active on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/data.table&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A list of packages that significantly support, extend, or make use of &lt;code&gt;data.table&lt;/code&gt; can be found in the &lt;a href=&quot;https://github.com/Rdatatable/data.table/raw/master/Seal_of_Approval.md&quot;&gt;Seal of Approval&lt;/a&gt; document.&lt;/p&gt; 
&lt;h3&gt;Stay up-to-date&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;click the &lt;strong&gt;Watch&lt;/strong&gt; button at the top and right of GitHub project page&lt;/li&gt; 
 &lt;li&gt;read &lt;a href=&quot;https://github.com/Rdatatable/data.table/raw/master/NEWS.md&quot;&gt;NEWS file&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;follow &lt;a href=&quot;https://twitter.com/hashtag/rdatatable&quot;&gt;#rdatatable&lt;/a&gt; and the &lt;a href=&quot;https://x.com/r_data_table&quot;&gt;r_data_table&lt;/a&gt; account on X/Twitter&lt;/li&gt; 
 &lt;li&gt;follow &lt;a href=&quot;https://fosstodon.org/tags/rdatatable&quot;&gt;#rdatatable&lt;/a&gt; and the &lt;a href=&quot;https://fosstodon.org/@r_data_table&quot;&gt;r_data_table account&lt;/a&gt; on fosstodon&lt;/li&gt; 
 &lt;li&gt;follow the &lt;a href=&quot;https://www.linkedin.com/company/data-table-community&quot;&gt;data.table community page&lt;/a&gt; on LinkedIn&lt;/li&gt; 
 &lt;li&gt;watch recent &lt;a href=&quot;https://github.com/Rdatatable/data.table/wiki/Presentations&quot;&gt;Presentations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;read recent &lt;a href=&quot;https://github.com/Rdatatable/data.table/wiki/Articles&quot;&gt;Articles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;read posts on &lt;a href=&quot;https://rdatatable-community.github.io/The-Raft/&quot;&gt;The Raft&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Guidelines for filing issues / pull requests: &lt;a href=&quot;https://github.com/Rdatatable/data.table/raw/master/.github/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>benjjneb/dada2</title>
      <link>https://github.com/benjjneb/dada2</link>
      <description>&lt;p&gt;Accurate sample inference from amplicon data with single nucleotide resolution&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://app.travis-ci.com/benjjneb/dada2&quot;&gt;&lt;img src=&quot;https://app.travis-ci.com/benjjneb/dada2.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;dada2&lt;/h1&gt; 
&lt;p&gt;Exact sample inference from high-throughput amplicon data. Resolves real variants differing by as little as one nucleotide. Visit &lt;a href=&quot;https://benjjneb.github.io/dada2/index.html&quot;&gt;the DADA2 website&lt;/a&gt; for the most detailed and up-to-date documentation.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;The dada2 package binaries are available through Bioconductor:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-S&quot;&gt;## try http:// if https:// URLs are not supported
if (!requireNamespace(&quot;BiocManager&quot;, quietly=TRUE))
    install.packages(&quot;BiocManager&quot;)
BiocManager::install(&quot;dada2&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order to install dada2 from source (and get the latest and greatest new features) see our &lt;a href=&quot;https://benjjneb.github.io/dada2/dada-installation.html&quot;&gt;installation from source instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://benjjneb.github.io/dada2/tutorial.html&quot;&gt;tutorial walkthrough of the DADA2 pipeline on paired end Illumina Miseq data&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.bioconductor.org/packages/3.6/bioc/manuals/dada2/man/dada2.pdf&quot;&gt;dada2 R package manual&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Further documentation is available on &lt;a href=&quot;http://benjjneb.github.io/dada2/&quot;&gt;the DADA2 front page&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;DADA2 Articles&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://dx.doi.org/10.1038/nmeth.3869&quot;&gt;DADA2: High resolution sample inference from Illumina amplicon data. Nature Methods, 2016.&lt;/a&gt; &lt;a href=&quot;http://rdcu.be/ipGh&quot;&gt;(Open Access link.)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://f1000research.com/articles/5-1492&quot;&gt;Bioconductor workflow for microbiome data analysis: from raw reads to community analyses. F1000 Research, 2016.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://dx.doi.org/10.1038/ismej.2017.119&quot;&gt;Exact sequence variants should replace operational taxonomic units in marker-gene data analysis. ISMEJ, 2017.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://dx.doi.org/10.1093/nar/gkz569&quot;&gt;High-throughput amplicon sequencing of the full-length 16S rRNA gene with single-nucleotide resolution. Nucleic Acids Research, 2019.&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Other Resources&lt;/h3&gt; 
&lt;p&gt;Planned feature improvements are publicly catalogued at the main DADA2 development site on github, specifically on the &quot;Issues&quot; page for DADA2:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/benjjneb/dada2/issues&quot;&gt;https://github.com/benjjneb/dada2/issues&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If the feature you are hoping for is not listed, you are welcome to add it as a feature request &quot;issue&quot; on this page. This request will be publicly available and listed on the page.&lt;/p&gt; 
&lt;p&gt;Bugs and difficulties in using DADA2 are also welcome on &lt;a href=&quot;https://github.com/benjjneb/dada2/issues&quot;&gt;the issue tracker&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>stuart-lab/signac</title>
      <link>https://github.com/stuart-lab/signac</link>
      <description>&lt;p&gt;R toolkit for the analysis of single-cell chromatin data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Signac &lt;img align=&quot;right&quot; src=&quot;https://raw.githubusercontent.com/stuart-lab/signac/master/man/figures/logo.svg?sanitize=true&quot; style=&quot;height:100px;&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/stuart-lab/signac/actions&quot;&gt;&lt;img src=&quot;https://github.com/stuart-lab/signac/workflows/R-CMD-check/badge.svg?sanitize=true&quot; alt=&quot;R-CMD-check&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cran.r-project.org/package=Signac&quot;&gt;&lt;img src=&quot;https://www.r-pkg.org/badges/version/Signac&quot; alt=&quot;CRAN Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cran.r-project.org/package=Signac&quot;&gt;&lt;img src=&quot;https://cranlogs.r-pkg.org/badges/Signac&quot; alt=&quot;CRAN Downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Signac is a comprehensive R package for the analysis of single-cell chromatin data. Signac includes functions for quality control, normalization, dimension reduction, clustering, differential activity, and more.&lt;/p&gt; 
&lt;p&gt;Documentation and tutorials can be found at &lt;a href=&quot;https://stuartlab.org/signac/&quot;&gt;https://stuartlab.org/signac/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;To install the latest release of Signac from CRAN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;setRepositories(ind=1:3) # needed to automatically install Bioconductor dependencies
install.packages(&quot;Signac&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To release the latest develop version from GitHub:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;if (!requireNamespace(&quot;remotes&quot;, quietly = TRUE))
    install.packages(&quot;remotes&quot;)
remotes::install_github(&quot;stuart-lab/signac&quot;, ref = &quot;develop&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Release notes&lt;/h2&gt; 
&lt;p&gt;For a changelog please see the &lt;a href=&quot;https://github.com/stuart-lab/signac/raw/develop/NEWS.md&quot;&gt;NEWS file&lt;/a&gt;, also available on the &lt;a href=&quot;https://stuartlab.org/signac/news/index.html&quot;&gt;Signac website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions to the Signac package. Please see the &lt;a href=&quot;https://github.com/stuart-lab/signac/raw/develop/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;If you encounter a bug or have a feature request, please open an &lt;a href=&quot;https://github.com/stuart-lab/signac/issues&quot;&gt;issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you would like to discuss questions related to single-cell analysis, you can open a &lt;a href=&quot;https://github.com/stuart-lab/signac/discussions&quot;&gt;discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;Signac runs on a quarterly release schedule. Additional releases will be scheduled in the case of urgent bug fixes. The development roadmap can be viewed on GitHub &lt;a href=&quot;https://github.com/orgs/stuart-lab/projects/1&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Citing Signac&lt;/h2&gt; 
&lt;p&gt;If you use the Signac package in your work please cite &lt;a href=&quot;https://doi.org/10.1038/s41592-021-01282-5&quot;&gt;Stuart et al. 2021&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@ARTICLE{signac,
  title     = &quot;Single-cell chromatin state analysis with Signac&quot;,
  author    = &quot;Stuart, Tim and Srivastava, Avi and Madad, Shaista and Lareau,
               Caleb A and Satija, Rahul&quot;,
  journal   = &quot;Nat. Methods&quot;,
  publisher = &quot;Nature Publishing Group&quot;,
  pages     = &quot;1--9&quot;,
  month     =  nov,
  year      =  2021,
  url       = &quot;https://www.nature.com/articles/s41592-021-01282-5&quot;,
  language  = &quot;en&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Related packages&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/satijalab/seurat&quot;&gt;Seurat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/satijalab/seurat-object&quot;&gt;SeuratObject&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mojaveazure/seurat-disk&quot;&gt;SeuratDisk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/satijalab/seurat-data&quot;&gt;SeuratData&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/satijalab/seurat-wrappers&quot;&gt;SeuratWrappers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/satijalab/azimuth&quot;&gt;Azimuth&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>joey711/phyloseq</title>
      <link>https://github.com/joey711/phyloseq</link>
      <description>&lt;p&gt;phyloseq is a set of classes, wrappers, and tools (in R) to make it easier to import, store, and analyze phylogenetic sequencing data; and to reproducibly share that data and analysis with others. See the phyloseq front page:&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;http://joey711.github.com/phyloseq/&quot;&gt;phyloseq&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/joey711/phyloseq&quot;&gt;&lt;img src=&quot;https://travis-ci.org/joey711/phyloseq.svg?branch=master&quot; alt=&quot;Travis-CI Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/joey711/phyloseq/master/inst/extdata/phyloseq.png&quot; alt=&quot;phyloseq&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Install&lt;/h2&gt; 
&lt;p&gt;In R terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;if(!requireNamespace(&quot;BiocManager&quot;)){
  install.packages(&quot;BiocManager&quot;)
}
BiocManager::install(&quot;phyloseq&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;http://joey711.github.io/phyloseq/install.html&quot;&gt;the phyloseq installation page&lt;/a&gt; for further details, examples.&lt;/p&gt; 
&lt;h2&gt;Article on Improved Microbiome Analysis&lt;/h2&gt; 
&lt;p&gt;McMurdie and Holmes (2014) &lt;a href=&quot;http://dx.plos.org/10.1371/journal.pcbi.1003531&quot;&gt;Waste Not, Want Not: Why Rarefying Microbiome Data is Statistically Inadmissible&lt;/a&gt; &lt;em&gt;PLoS Computational Biology&lt;/em&gt; 10(4): e1003531&lt;/p&gt; 
&lt;p&gt;Presubmission versions ahead of acceptance (2013): &lt;a href=&quot;http://arxiv.org/pdf/1310.0424v2.pdf&quot;&gt;PDF version 2&lt;/a&gt;, &lt;a href=&quot;http://arxiv.org/pdf/1310.0424v1.pdf&quot;&gt;PDF version 1&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Peer-reviewed articles about phyloseq&lt;/h2&gt; 
&lt;p&gt;McMurdie and Holmes (2014) &lt;a href=&quot;http://bioinformatics.oxfordjournals.org/content/early/2014/10/02/bioinformatics.btu616&quot;&gt;Shiny-phyloseq: Web Application for Interactive Microbiome Analysis with Provenance Tracking&lt;/a&gt;. &lt;em&gt;Bioinformatics (Oxford, England)&lt;/em&gt; 31(2), 282–283.&lt;/p&gt; 
&lt;p&gt;McMurdie and Holmes (2013) &lt;a href=&quot;http://dx.plos.org/10.1371/journal.pone.0061217&quot;&gt;phyloseq: An R package for reproducible interactive analysis and graphics of microbiome census data&lt;/a&gt; &lt;em&gt;PLoS ONE&lt;/em&gt; 8(4):e61217&lt;/p&gt; 
&lt;h2&gt;Other resources&lt;/h2&gt; 
&lt;p&gt;The phyloseq project also has a number of supporting online resources, including (but probably not limited to)&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;http://joey711.github.com/phyloseq/&quot;&gt;the phyloseq home page&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.bioconductor.org/packages/release/bioc/vignettes/phyloseq/inst/doc/phyloseq-FAQ.html&quot;&gt;the phyloseq FAQ&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;I recommend checking this page, and the issues tracker, before posting new issues.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;http://bioconductor.org/packages/release/bioc/html/phyloseq.html&quot;&gt;Bioconductor stable release&lt;/a&gt;.&lt;/h3&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/joey711/phyloseq/issues&quot;&gt;the phyloseq Issue Tracker&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;This is the recommended location to post&lt;/p&gt; 
&lt;p&gt;(1) feature requests (2) bug reports (3) theoretical considerations (4) other issues, feedback (5) ask for help&lt;/p&gt; 
&lt;p&gt;Search previous posts, and check &lt;a href=&quot;https://www.bioconductor.org/packages/release/bioc/vignettes/phyloseq/inst/doc/phyloseq-FAQ.html&quot;&gt;the phyloseq FAQ&lt;/a&gt; before posting a new issue.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>satijalab/seurat</title>
      <link>https://github.com/satijalab/seurat</link>
      <description>&lt;p&gt;R toolkit for single cell genomics&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://cran.r-project.org/package=Seurat&quot;&gt;&lt;img src=&quot;https://www.r-pkg.org/badges/version/Seurat&quot; alt=&quot;CRAN Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cran.r-project.org/package=Seurat&quot;&gt;&lt;img src=&quot;https://cranlogs.r-pkg.org/badges/Seurat&quot; alt=&quot;CRAN Downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Seurat v5&lt;/h1&gt; 
&lt;p&gt;Seurat is an R toolkit for single cell genomics, developed and maintained by the Satija Lab at NYGC.&lt;/p&gt; 
&lt;p&gt;We are excited to release Seurat v5! This updates introduces new functionality for spatial, multimodal, and scalable single-cell analysis.&lt;/p&gt; 
&lt;p&gt;Seurat v5 is backwards-compatible with previous versions, so that users will continue to be able to re-run existing workflows.&lt;/p&gt; 
&lt;p&gt;Instructions, documentation, and tutorials can be found at:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://satijalab.org/seurat&quot;&gt;https://satijalab.org/seurat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Seurat is also hosted on GitHub, you can view and clone the repository at&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/satijalab/seurat&quot;&gt;https://github.com/satijalab/seurat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Seurat has been successfully installed on Mac OS X, Linux, and Windows, using the devtools package to install directly from GitHub&lt;/p&gt; 
&lt;p&gt;Improvements and new features will be added on a regular basis, please post on the &lt;a href=&quot;https://github.com/satijalab/seurat&quot;&gt;github page&lt;/a&gt; with any questions or if you would like to contribute&lt;/p&gt; 
&lt;p&gt;For a version history/changelog, please see the &lt;a href=&quot;https://github.com/satijalab/seurat/raw/master/NEWS.md&quot;&gt;NEWS file&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tidyverse/ggplot2</title>
      <link>https://github.com/tidyverse/ggplot2</link>
      <description>&lt;p&gt;An implementation of the Grammar of Graphics in R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggplot2 &lt;a href=&quot;https://ggplot2.tidyverse.org&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/tidyverse/ggplot2/main/man/figures/logo.png&quot; align=&quot;right&quot; height=&quot;138&quot; alt=&quot;ggplot2 website&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;!-- badges: start --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/tidyverse/ggplot2/actions/workflows/R-CMD-check.yaml&quot;&gt;&lt;img src=&quot;https://github.com/tidyverse/ggplot2/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&quot; alt=&quot;R-CMD-check&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cran.r-project.org/package=ggplot2&quot;&gt;&lt;img src=&quot;https://www.r-pkg.org/badges/version/ggplot2&quot; alt=&quot;CRAN_Status_Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.codecov.io/gh/tidyverse/ggplot2&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/tidyverse/ggplot2/graph/badge.svg?sanitize=true&quot; alt=&quot;Codecov test coverage&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- badges: end --&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;ggplot2 is a system for declaratively creating graphics, based on &lt;a href=&quot;https://www.amazon.com/Grammar-Graphics-Statistics-Computing/dp/0387245448/ref=as_li_ss_tl&quot;&gt;The Grammar of Graphics&lt;/a&gt;. You provide the data, tell ggplot2 how to map variables to aesthetics, what graphical primitives to use, and it takes care of the details.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;# The easiest way to get ggplot2 is to install the whole tidyverse:
install.packages(&quot;tidyverse&quot;)

# Alternatively, install just ggplot2:
install.packages(&quot;ggplot2&quot;)

# Or the development version from GitHub:
# install.packages(&quot;pak&quot;)
pak::pak(&quot;tidyverse/ggplot2&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Cheatsheet&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rstudio/cheatsheets/raw/master/data-visualization.pdf&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rstudio/cheatsheets/master/pngs/thumbnails/data-visualization-cheatsheet-thumbs.png&quot; width=&quot;630&quot; height=&quot;252&quot; alt=&quot;ggplot2 cheatsheet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;It’s hard to succinctly describe how ggplot2 works because it embodies a deep philosophy of visualisation. However, in most cases you start with &lt;code&gt;ggplot()&lt;/code&gt;, supply a dataset and aesthetic mapping (with &lt;code&gt;aes()&lt;/code&gt;). You then add on layers (like &lt;code&gt;geom_point()&lt;/code&gt; or &lt;code&gt;geom_histogram()&lt;/code&gt;), scales (like &lt;code&gt;scale_colour_brewer()&lt;/code&gt;), faceting specifications (like &lt;code&gt;facet_wrap()&lt;/code&gt;) and coordinate systems (like &lt;code&gt;coord_flip()&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;library(ggplot2)

ggplot(mpg, aes(displ, hwy, colour = class)) + 
  geom_point()
&lt;/code&gt;&lt;/pre&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/tidyverse/ggplot2/main/man/figures/README-example-1.png&quot; alt=&quot;Scatterplot of engine displacement versus highway miles per gallon, for 234 cars coloured by 7 &#39;types&#39; of car. The displacement and miles per gallon are inversely correlated.&quot;&gt; 
&lt;h2&gt;Lifecycle&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://lifecycle.r-lib.org/articles/stages.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lifecycle-stable-brightgreen.svg?sanitize=true&quot; alt=&quot;lifecycle&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ggplot2 is now over 10 years old and is used by hundreds of thousands of people to make millions of plots. That means, by-and-large, ggplot2 itself changes relatively little. When we do make changes, they will be generally to add new functions or arguments rather than changing the behaviour of existing functions, and if we do make changes to existing behaviour we will do them for compelling reasons.&lt;/p&gt; 
&lt;p&gt;If you are looking for innovation, look to ggplot2’s rich ecosystem of extensions. See a community maintained list at &lt;a href=&quot;https://exts.ggplot2.tidyverse.org/gallery/&quot;&gt;https://exts.ggplot2.tidyverse.org/gallery/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Learning ggplot2&lt;/h2&gt; 
&lt;p&gt;If you are new to ggplot2 you are better off starting with a systematic introduction, rather than trying to learn from reading individual documentation pages. Currently, there are several good places to start:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;a href=&quot;https://r4ds.hadley.nz/data-visualize&quot;&gt;Data Visualization&lt;/a&gt; and &lt;a href=&quot;https://r4ds.hadley.nz/communication&quot;&gt;Communication&lt;/a&gt; chapters in &lt;a href=&quot;https://r4ds.hadley.nz&quot;&gt;R for Data Science&lt;/a&gt;. R for Data Science is designed to give you a comprehensive introduction to the &lt;a href=&quot;https://www.tidyverse.org&quot;&gt;tidyverse&lt;/a&gt;, and these two chapters will get you up to speed with the essentials of ggplot2 as quickly as possible.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you’d like to take an online course, try &lt;a href=&quot;https://learning.oreilly.com/videos/data-visualization-in/9781491963661/&quot;&gt;Data Visualization in R With ggplot2&lt;/a&gt; by Kara Woo.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you’d like to follow a webinar, try &lt;a href=&quot;https://youtu.be/h29g21z0a68&quot;&gt;Plotting Anything with ggplot2&lt;/a&gt; by Thomas Lin Pedersen.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you want to dive into making common graphics as quickly as possible, I recommend &lt;a href=&quot;https://r-graphics.org&quot;&gt;The R Graphics Cookbook&lt;/a&gt; by Winston Chang. It provides a set of recipes to solve common graphics problems.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you’ve mastered the basics and want to learn more, read &lt;a href=&quot;https://ggplot2-book.org&quot;&gt;ggplot2: Elegant Graphics for Data Analysis&lt;/a&gt;. It describes the theoretical underpinnings of ggplot2 and shows you how all the pieces fit together. This book helps you understand the theory that underpins ggplot2, and will help you create new types of graphics specifically tailored to your needs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For articles about announcements and deep-dives you can visit the &lt;a href=&quot;https://www.tidyverse.org/tags/ggplot2/&quot;&gt;tidyverse blog&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;There are two main places to get help with ggplot2:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;a href=&quot;https://forum.posit.co/&quot;&gt;RStudio community&lt;/a&gt; is a friendly place to ask any questions about ggplot2.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/tagged/ggplot2?sort=frequent&amp;amp;pageSize=50&quot;&gt;Stack Overflow&lt;/a&gt; is a great source of answers to common ggplot2 questions. It is also a great place to get help, once you have created a reproducible example that illustrates your problem.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>rdpeng/ProgrammingAssignment2</title>
      <link>https://github.com/rdpeng/ProgrammingAssignment2</link>
      <description>&lt;p&gt;Repository for Programming Assignment 2 for R Programming on Coursera&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;Introduction&lt;/h3&gt; 
&lt;p&gt;This second programming assignment will require you to write an R function that is able to cache potentially time-consuming computations. For example, taking the mean of a numeric vector is typically a fast operation. However, for a very long vector, it may take too long to compute the mean, especially if it has to be computed repeatedly (e.g. in a loop). If the contents of a vector are not changing, it may make sense to cache the value of the mean so that when we need it again, it can be looked up in the cache rather than recomputed. In this Programming Assignment you will take advantage of the scoping rules of the R language and how they can be manipulated to preserve state inside of an R object.&lt;/p&gt; 
&lt;h3&gt;Example: Caching the Mean of a Vector&lt;/h3&gt; 
&lt;p&gt;In this example we introduce the &lt;code&gt;&amp;lt;&amp;lt;-&lt;/code&gt; operator which can be used to assign a value to an object in an environment that is different from the current environment. Below are two functions that are used to create a special object that stores a numeric vector and caches its mean.&lt;/p&gt; 
&lt;p&gt;The first function, &lt;code&gt;makeVector&lt;/code&gt; creates a special &quot;vector&quot;, which is really a list containing a function to&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;set the value of the vector&lt;/li&gt; 
 &lt;li&gt;get the value of the vector&lt;/li&gt; 
 &lt;li&gt;set the value of the mean&lt;/li&gt; 
 &lt;li&gt;get the value of the mean&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- --&gt; 
&lt;pre&gt;&lt;code&gt;makeVector &amp;lt;- function(x = numeric()) {
        m &amp;lt;- NULL
        set &amp;lt;- function(y) {
                x &amp;lt;&amp;lt;- y
                m &amp;lt;&amp;lt;- NULL
        }
        get &amp;lt;- function() x
        setmean &amp;lt;- function(mean) m &amp;lt;&amp;lt;- mean
        getmean &amp;lt;- function() m
        list(set = set, get = get,
             setmean = setmean,
             getmean = getmean)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The following function calculates the mean of the special &quot;vector&quot; created with the above function. However, it first checks to see if the mean has already been calculated. If so, it &lt;code&gt;get&lt;/code&gt;s the mean from the cache and skips the computation. Otherwise, it calculates the mean of the data and sets the value of the mean in the cache via the &lt;code&gt;setmean&lt;/code&gt; function.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cachemean &amp;lt;- function(x, ...) {
        m &amp;lt;- x$getmean()
        if(!is.null(m)) {
                message(&quot;getting cached data&quot;)
                return(m)
        }
        data &amp;lt;- x$get()
        m &amp;lt;- mean(data, ...)
        x$setmean(m)
        m
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Assignment: Caching the Inverse of a Matrix&lt;/h3&gt; 
&lt;p&gt;Matrix inversion is usually a costly computation and there may be some benefit to caching the inverse of a matrix rather than computing it repeatedly (there are also alternatives to matrix inversion that we will not discuss here). Your assignment is to write a pair of functions that cache the inverse of a matrix.&lt;/p&gt; 
&lt;p&gt;Write the following functions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;makeCacheMatrix&lt;/code&gt;: This function creates a special &quot;matrix&quot; object that can cache its inverse.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cacheSolve&lt;/code&gt;: This function computes the inverse of the special &quot;matrix&quot; returned by &lt;code&gt;makeCacheMatrix&lt;/code&gt; above. If the inverse has already been calculated (and the matrix has not changed), then &lt;code&gt;cacheSolve&lt;/code&gt; should retrieve the inverse from the cache.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Computing the inverse of a square matrix can be done with the &lt;code&gt;solve&lt;/code&gt; function in R. For example, if &lt;code&gt;X&lt;/code&gt; is a square invertible matrix, then &lt;code&gt;solve(X)&lt;/code&gt; returns its inverse.&lt;/p&gt; 
&lt;p&gt;For this assignment, assume that the matrix supplied is always invertible.&lt;/p&gt; 
&lt;p&gt;In order to complete this assignment, you must do the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the GitHub repository containing the stub R files at &lt;a href=&quot;https://github.com/rdpeng/ProgrammingAssignment2&quot;&gt;https://github.com/rdpeng/ProgrammingAssignment2&lt;/a&gt; to create a copy under your own account.&lt;/li&gt; 
 &lt;li&gt;Clone your forked GitHub repository to your computer so that you can edit the files locally on your own machine.&lt;/li&gt; 
 &lt;li&gt;Edit the R file contained in the git repository and place your solution in that file (please do not rename the file).&lt;/li&gt; 
 &lt;li&gt;Commit your completed R file into YOUR git repository and push your git branch to the GitHub repository under your account.&lt;/li&gt; 
 &lt;li&gt;Submit to Coursera the URL to your GitHub repository that contains the completed R code for the assignment.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Grading&lt;/h3&gt; 
&lt;p&gt;This assignment will be graded via peer assessment.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>YuLab-SMU/clusterProfiler</title>
      <link>https://github.com/YuLab-SMU/clusterProfiler</link>
      <description>&lt;p&gt;📊 A universal enrichment tool for interpreting omics data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;clusterProfiler&lt;/h1&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/Bioconductor/BiocStickers/master/clusterProfiler/clusterProfiler.png&quot; height=&quot;200&quot; align=&quot;right&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.repostatus.org/#active&quot;&gt;&lt;img src=&quot;http://www.repostatus.org/badges/latest/active.svg?sanitize=true&quot; alt=&quot;Project Status: Active - The project has reached a stable, usable state and is being actively developed.&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.bioconductor.org/packages/clusterProfiler&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/release%20version-4.12.6-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/guangchuangyu/clusterProfiler&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/devel%20version-4.13.4-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.bioconductor.org/packages/devel/bioc/html/clusterProfiler.html#since&quot;&gt;&lt;img src=&quot;http://www.bioconductor.org/shields/years-in-bioc/clusterProfiler.svg?sanitize=true&quot; alt=&quot;Bioc&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.bioconductor.org/packages/devel/bioc/html/clusterProfiler.html#archives&quot;&gt;&lt;img src=&quot;http://www.bioconductor.org/shields/availability/devel/clusterProfiler.svg?sanitize=true&quot; alt=&quot;platform&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bioconductor.org/checkResults/devel/bioc-LATEST/clusterProfiler/&quot;&gt;&lt;img src=&quot;http://www.bioconductor.org/shields/build/devel/bioc/clusterProfiler.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/GuangchuangYu/clusterProfiler/&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/GuangchuangYu/clusterProfiler/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!--
[![Last-changedate](https://img.shields.io/badge/last%20change-2024--10--07-green.svg)](https://github.com/GuangchuangYu/clusterProfiler/commits/master)
--&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://bioconductor.org/packages/clusterProfiler&quot;&gt;clusterProfiler&lt;/a&gt; supports exploring functional characteristics of both coding and non-coding genomics data for thousands of species with up-to-date gene annotation.&lt;/li&gt; 
 &lt;li&gt;It provides a universal interface for gene functional annotation from a variety of sources and thus can be applied in diverse scenarios.&lt;/li&gt; 
 &lt;li&gt;It provides a tidy interface to access, manipulate, and visualize enrichment results to help users achieve efficient data interpretation&lt;/li&gt; 
 &lt;li&gt;Datasets obtained from multiple treatments and time points can be analyzed and compared in a single run, easily revealing functional consensus and differences among distinct conditions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For details, please visit:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yulab-smu.top/contribution-knowledge-mining/&quot;&gt;https://yulab-smu.top/contribution-knowledge-mining/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yulab-smu.top/biomedical-knowledge-mining-book/&quot;&gt;https://yulab-smu.top/biomedical-knowledge-mining-book/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/YuLab-SMU/clusterProfiler/devel/graphic-abstract-The-Innovation-2021.jpg&quot; width=&quot;890&quot;&gt; 
&lt;h2&gt;&lt;span&gt;✍&lt;/span&gt; Authors&lt;/h2&gt; 
&lt;p&gt;Guangchuang YU &lt;a href=&quot;https://yulab-smu.top&quot;&gt;https://yulab-smu.top&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;School of Basic Medical Sciences, Southern Medical University&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;If you use &lt;a href=&quot;http://bioconductor.org/packages/clusterProfiler&quot;&gt;clusterProfiler&lt;/a&gt; in published research, please cite the most appropriate paper(s) from this list:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;S Xu&lt;sup&gt;#&lt;/sup&gt;, E Hu&lt;sup&gt;#&lt;/sup&gt;, Y Cai&lt;sup&gt;#&lt;/sup&gt;, Z Xie&lt;sup&gt;#&lt;/sup&gt;, X Luo&lt;sup&gt;#&lt;/sup&gt;, L Zhan, W Tang, Q Wang, B Liu, R Wang, W Xie, T Wu, L Xie, &lt;strong&gt;G Yu&lt;/strong&gt;&lt;sup&gt;*&lt;/sup&gt;. Using clusterProfiler to characterise Multi-Omics Data. &lt;em&gt;&lt;strong&gt;Nature Protocols&lt;/strong&gt;&lt;/em&gt;. 2024, accepted. doi: &lt;a href=&quot;https://doi.org/10.1038/s41596-024-01020-z&quot;&gt;10.1038/s41596-024-01020-z&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;T Wu&lt;sup&gt;#&lt;/sup&gt;, E Hu&lt;sup&gt;#&lt;/sup&gt;, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan, X Fu, S Liu, X Bo&lt;sup&gt;*&lt;/sup&gt;, &lt;strong&gt;G Yu&lt;/strong&gt;&lt;sup&gt;*&lt;/sup&gt;. clusterProfiler 4.0: A universal enrichment tool for interpreting omics data. &lt;em&gt;&lt;strong&gt;The Innovation&lt;/strong&gt;&lt;/em&gt;. 2021, 2(3):100141. doi: &lt;a href=&quot;https://doi.org/10.1016/j.xinn.2021.100141&quot;&gt;10.1016/j.xinn.2021.100141&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;&lt;sup&gt;*&lt;/sup&gt;. Gene Ontology Semantic Similarity Analysis Using GOSemSim. In: Kidder B. (eds) Stem Cell Transcriptional Networks. &lt;em&gt;&lt;strong&gt;Methods in Molecular Biology&lt;/strong&gt;&lt;/em&gt;. 2020, 2117:207-215. Humana, New York, NY. doi: &lt;a href=&quot;https://doi.org/10.1007/978-1-0716-0301-7_11&quot;&gt;10.1007/978-1-0716-0301-7_11&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;&lt;sup&gt;*&lt;/sup&gt;. Using meshes for MeSH term enrichment and semantic analyses. &lt;em&gt;&lt;strong&gt;Bioinformatics&lt;/strong&gt;&lt;/em&gt;. 2018, 34(21):3766–3767. doi: &lt;a href=&quot;https://doi.org/10.1093/bioinformatics/bty410&quot;&gt;10.1093/bioinformatics/bty410&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;, QY He&lt;sup&gt;*&lt;/sup&gt;. ReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization. &lt;em&gt;&lt;strong&gt;Molecular BioSystems&lt;/strong&gt;&lt;/em&gt;. 2016, 12(2):477-479. doi: &lt;a href=&quot;https://doi.org/10.1039/C5MB00663E&quot;&gt;10.1039/C5MB00663E&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;&lt;sup&gt;*&lt;/sup&gt;, LG Wang, and QY He&lt;sup&gt;*&lt;/sup&gt;. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. &lt;em&gt;&lt;strong&gt;Bioinformatics&lt;/strong&gt;&lt;/em&gt;. 2015, 31(14):2382-2383. doi: &lt;a href=&quot;https://doi.org/10.1093/bioinformatics/btv145&quot;&gt;10.1093/bioinformatics/btv145&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;&lt;sup&gt;*&lt;/sup&gt;, LG Wang, GR Yan, QY He&lt;sup&gt;*&lt;/sup&gt;. DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis. &lt;em&gt;&lt;strong&gt;Bioinformatics&lt;/strong&gt;&lt;/em&gt;. 2015, 31(4):608-609. doi: &lt;a href=&quot;https://doi.org/10.1093/bioinformatics/btu684&quot;&gt;10.1093/bioinformatics/btu684&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;, LG Wang, Y Han and QY He&lt;sup&gt;*&lt;/sup&gt;. clusterProfiler: an R package for comparing biological themes among gene clusters. &lt;em&gt;&lt;strong&gt;OMICS: A Journal of Integrative Biology&lt;/strong&gt;&lt;/em&gt;. 2012, 16(5):284-287. doi: &lt;a href=&quot;https://doi.org/10.1089/omi.2011.0118&quot;&gt;10.1089/omi.2011.0118&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;G Yu&lt;/strong&gt;, F Li, Y Qin, X Bo&lt;sup&gt;*&lt;/sup&gt;, Y Wu, S Wang&lt;sup&gt;*&lt;/sup&gt;. GOSemSim: an R package for measuring semantic similarity among GO terms and gene products. &lt;em&gt;&lt;strong&gt;Bioinformatics&lt;/strong&gt;&lt;/em&gt;. 2010, 26(7):976-978. doi: &lt;a href=&quot;https://doi.org/10.1093/bioinformatics/btq064&quot;&gt;10.1093/bioinformatics/btq064&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!--
&amp;#10;
&amp;#10; r badge_custom(&quot;1st most cited paper&quot;, &quot;in OMICS&quot;, &quot;green&quot;,
  &quot;http://online.liebertpub.com/action/showMostCitedArticles?journalCode=omi&quot;)`
 r badge_custom(&quot;ESI&quot;, &quot;Highly Cited Paper&quot;, &quot;green&quot;)`
 r badge_doi(&quot;10.1089/omi.2011.0118&quot;, &quot;green&quot;)`
&amp;#10;
------------------------------------------------------------------------
&amp;#10;### Citation
&amp;#10;
&amp;#10;
&lt;img src=&quot;https://guangchuangyu.github.io/software/citation_trend/clusterProfiler.png&quot; width=&quot;890&quot;/&gt;
&amp;#10;
### Download stats
&amp;#10;r badge_download_bioc(&quot;clusterProfiler&quot;)
r badge_bioc_download(&quot;clusterProfiler&quot;, &quot;total&quot;, &quot;blue&quot;)
r badge_bioc_download(&quot;clusterProfiler&quot;, &quot;month&quot;, &quot;blue&quot;)
&amp;#10;
&lt;img src=&quot;https://guangchuangyu.github.io/software/dlstats/clusterProfiler.png&quot; width=&quot;890&quot;/&gt;
&amp;#10;--&gt;</description>
    </item>
    
    <item>
      <title>jokergoo/ComplexHeatmap</title>
      <link>https://github.com/jokergoo/ComplexHeatmap</link>
      <description>&lt;p&gt;Make Complex Heatmaps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Make Complex Heatmaps &lt;a href=&quot;https://jokergoo.github.io/ComplexHeatmap-reference/book/&quot;&gt;&lt;img src=&quot;https://jokergoo.github.io/ComplexHeatmap-reference/book/complexheatmap-cover.jpg&quot; width=&quot;240&quot; align=&quot;right&quot; style=&quot;border:2px solid black;&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/jokergoo/ComplexHeatmap/actions&quot;&gt;&lt;img src=&quot;https://github.com/jokergoo/ComplexHeatmap/workflows/R-CMD-check/badge.svg?sanitize=true&quot; alt=&quot;R-CMD-check&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/github/jokergoo/ComplexHeatmap&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/jokergoo/ComplexHeatmap.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bioconductor.org/packages/stats/bioc/ComplexHeatmap/&quot;&gt;&lt;img src=&quot;http://www.bioconductor.org/shields/downloads/devel/ComplexHeatmap.svg?sanitize=true&quot; alt=&quot;bioc&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://bioconductor.org/packages/devel/bioc/html/ComplexHeatmap.html&quot;&gt;&lt;img src=&quot;http://www.bioconductor.org/shields/years-in-bioc/ComplexHeatmap.svg?sanitize=true&quot; alt=&quot;bioc&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;img src=&quot;http://jokergoo.github.io/complexheatmap_logo.svg?sanitize=true&quot; width=&quot;550&quot;&gt; 
&lt;p&gt;Complex heatmaps are efficient to visualize associations between different sources of data sets and reveal potential patterns. Here the &lt;strong&gt;ComplexHeatmap&lt;/strong&gt; package provides a highly flexible way to arrange multiple heatmaps and supports various annotation graphics.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/jokergoo/InteractiveComplexHeatmap&quot;&gt;&lt;strong&gt;InteractiveComplexHeatmap&lt;/strong&gt;&lt;/a&gt; package can directly export static complex heatmaps into an interactive Shiny app. Have a try!&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;Zuguang Gu, et al., &lt;a href=&quot;http://bioinformatics.oxfordjournals.org/content/early/2016/05/20/bioinformatics.btw313.abstract&quot;&gt;Complex heatmaps reveal patterns and correlations in multidimensional genomic data&lt;/a&gt;, Bioinformatics, 2016.&lt;/p&gt; 
&lt;p&gt;Zuguang Gu. &lt;a href=&quot;https://doi.org/10.1002/imt2.43&quot;&gt;Complex Heatmap Visualization&lt;/a&gt;, iMeta, 2022.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;ComplexHeatmap&lt;/code&gt; is available on &lt;a href=&quot;http://www.bioconductor.org/packages/devel/bioc/html/ComplexHeatmap.html&quot;&gt;Bioconductor&lt;/a&gt;, you can install it by:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;if (!requireNamespace(&quot;BiocManager&quot;, quietly=TRUE))
    install.packages(&quot;BiocManager&quot;)
BiocManager::install(&quot;ComplexHeatmap&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want the latest version, install it directly from GitHub:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;library(devtools)
install_github(&quot;jokergoo/ComplexHeatmap&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Make a single heatmap:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;Heatmap(mat, ...)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A single Heatmap with column annotations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;ha = HeatmapAnnotation(df = anno1, anno_fun = anno2, ...)
Heatmap(mat, ..., top_annotation = ha)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Make a list of heatmaps:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;Heatmap(mat1, ...) + Heatmap(mat2, ...)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Make a list of heatmaps and row annotations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;ha = HeatmapAnnotation(df = anno1, anno_fun = anno2, ..., which = &quot;row&quot;)
Heatmap(mat1, ...) + Heatmap(mat2, ...) + ha
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The full documentations are available at &lt;a href=&quot;https://jokergoo.github.io/ComplexHeatmap-reference/book/&quot;&gt;https://jokergoo.github.io/ComplexHeatmap-reference/book/&lt;/a&gt; and the website is at &lt;a href=&quot;https://jokergoo.github.io/ComplexHeatmap&quot;&gt;https://jokergoo.github.io/ComplexHeatmap&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Blog posts&lt;/h2&gt; 
&lt;p&gt;There are following blog posts focusing on specific topics:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jokergoo.github.io/2021/03/24/3d-heatmap/&quot;&gt;Make 3D heatmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jokergoo.github.io/2020/05/06/translate-from-pheatmap-to-complexheatmap/&quot;&gt;Translate from pheatmap to ComplexHeatmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jokergoo.github.io/2020/05/11/set-cell-width/height-in-the-heatmap/&quot;&gt;Set cell width/height in the heatmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jokergoo.github.io/2020/05/15/interactive-complexheatmap/&quot;&gt;Interactive ComplexHeatmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jokergoo.github.io/2020/05/31/word-cloud-as-heatmap-annotation/&quot;&gt;Word cloud as heatmap annotation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jokergoo.github.io/2020/06/19/which-heatmap-function-is-faster/&quot;&gt;Which heatmap function is faster?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jokergoo.github.io/2020/06/30/rasterization-in-complexheatmap/&quot;&gt;Rasterization in ComplexHeatmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jokergoo.github.io/2020/07/06/block-annotation-over-several-slices/&quot;&gt;Block annotation over several slices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jokergoo.github.io/2020/07/14/integrate-complexheatmap-with-cowplot-package/&quot;&gt;Integrate ComplexHeatmap with cowplot package&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;h3&gt;Visualize Methylation Profile with Complex Annotations&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/449218/47718635-2ec22980-dc49-11e8-9f01-37becb19e0d5.png&quot; alt=&quot;complexheatmap_example4&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Correlations between methylation, expression and other genomic features&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/449218/47718636-2ec22980-dc49-11e8-8db0-1659c27dcf40.png&quot; alt=&quot;complexheatmap_example3&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Visualize Cell Heterogeneity from Single Cell RNASeq&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/449218/47718637-2ec22980-dc49-11e8-925e-955c16cfa982.png&quot; alt=&quot;complexheatmap_example2&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Making Enhanced OncoPrint&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/449218/47718638-2ec22980-dc49-11e8-845e-21e51d3b8e73.png&quot; alt=&quot;complexheatmap_example1&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;UpSet plot&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/449218/102615477-48c76a80-4136-11eb-98d9-3c528844fbe8.png&quot; width=&quot;500&quot;&gt; 
&lt;h3&gt;3D heatmap&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/449218/112284448-8c77c600-8c89-11eb-8d38-c5538900df20.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT @ Zuguang Gu&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cole-trapnell-lab/monocle3</title>
      <link>https://github.com/cole-trapnell-lab/monocle3</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MONOCLE 3&lt;/h1&gt; 
&lt;p&gt;Monocle 3 is an analysis toolkit for single-cell RNA-Seq experiments. To use this package, you will need the R statistical computing environment (version 3.0 or later) and several packages available through Bioconductor and CRAN.&lt;/p&gt; 
&lt;p&gt;Details on how to install and use Monocle 3 are available on our website:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://cole-trapnell-lab.github.io/monocle3/&quot;&gt;http://cole-trapnell-lab.github.io/monocle3/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chris-mcginnis-ucsf/DoubletFinder</title>
      <link>https://github.com/chris-mcginnis-ucsf/DoubletFinder</link>
      <description>&lt;p&gt;R package for detecting doublets in single-cell RNA sequencing data&lt;/p&gt;&lt;hr&gt;&lt;p&gt;~~ Announcement (11/24/21) ~~ I&#39;m now a postdoc at Stanford and my UCSF email will be decommissioned soon. I also only check my github repos about once per month, so please reach out directly at cmcginni@stanford[dot]edu if you run into any issues.&lt;/p&gt; 
&lt;h1&gt;DoubletFinder&lt;/h1&gt; 
&lt;p&gt;DoubletFinder is an R package that predicts doublets in single-cell RNA sequencing data.&lt;/p&gt; 
&lt;p&gt;DoubletFinder is implemented to interface with Seurat &amp;gt;= 2.0 (&lt;a href=&quot;https://satijalab.org/seurat/&quot;&gt;https://satijalab.org/seurat/&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;DoubletFinder was published by Cell Systems in April, 2019: &lt;a href=&quot;https://www.cell.com/cell-systems/fulltext/S2405-4712(19)30073-0&quot;&gt;https://www.cell.com/cell-systems/fulltext/S2405-4712(19)30073-0&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Updates&lt;/h2&gt; 
&lt;p&gt;(02/02/2025) Haibo Liu (Senior Bioinformatician at UMass, @haibol2016) added as maintainer after his much-needed improvement updates to the package.&lt;/p&gt; 
&lt;p&gt;(11/21/2023) Made compatible with Seurat v5 and removed &#39;_v3&#39; flag from relevant function names.&lt;/p&gt; 
&lt;p&gt;(03/31/2020) Internalized functions normally in &#39;modes&#39; package to enable compatibility with R v3.6 and highger.&lt;/p&gt; 
&lt;p&gt;(06/21/2019) Added parallelization to paramSweep_v3 (thanks NathanSkeen!) -- Note: progress no longer updated, but the process is much faster! Fixed bug with smaller datasets. Updated readme.&lt;/p&gt; 
&lt;p&gt;(04/12/2019) Added SCTransform compatibilities to &#39;paramSweep_v3&#39; and &#39;doubletFinder_v3&#39;&lt;/p&gt; 
&lt;p&gt;(04/08/2019) Added &#39;PCs&#39; argument to &#39;doubletFinder&#39;, &#39;doubletFinder_v3&#39;, &#39;paramSweep&#39;, and &#39;paramSweep_v3&#39; to avoid conflicts with dimension reduction preferences. Updated readme.&lt;/p&gt; 
&lt;p&gt;(01/12/2019) Seurat V3 compatibility: &#39;doubletFinder_v3&#39; and &#39;paramSweep_v3&#39; functions added, other functions for parameter estimation remain compatible.&lt;/p&gt; 
&lt;h2&gt;DoubletFinder V2.0 (11/28/2018)&lt;/h2&gt; 
&lt;p&gt;New Features:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Increased computational efficiency during pANN computation&lt;/li&gt; 
 &lt;li&gt;Implemented strategy for determining optimal pK values for any scRNA-seq data using pN-pK parameter sweeps and mean-variance-normalized bimodality coefficient (BCmvn)&lt;/li&gt; 
 &lt;li&gt;Included vignette describing &#39;best-practices&#39; for applying DoubletFinder to scRNA-seq data generated without sample multiplexing&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Installation (in R/RStudio)&lt;/h2&gt; 
&lt;p&gt;remotes::install_github(&#39;chris-mcginnis-ucsf/DoubletFinder&#39;)&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;DoubletFinder requires the following R packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Seurat (&amp;gt;= 2.0)&lt;/li&gt; 
 &lt;li&gt;Matrix (1.2.14)&lt;/li&gt; 
 &lt;li&gt;fields (9.6)&lt;/li&gt; 
 &lt;li&gt;KernSmooth (2.23-15)&lt;/li&gt; 
 &lt;li&gt;ROCR (1.0-7)&lt;/li&gt; 
 &lt;li&gt;parallel (3.5.1)&lt;/li&gt; 
 &lt;li&gt;NOTE: These package versions were used in the bioRxiv paper, but other versions may work, as well.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Question: What is my anticipated doublet rate? Answer: This is dependent on your platform (10x, parse, etc.) and will vary with the number of input cells. It will not always be 7.5% as is used in the tutorial. This information is available in the user guides for each technology. See &lt;a href=&quot;https://github.com/chris-mcginnis-ucsf/DoubletFinder/issues/76&quot;&gt;https://github.com/chris-mcginnis-ucsf/DoubletFinder/issues/76&lt;/a&gt; and &lt;a href=&quot;https://github.com/chris-mcginnis-ucsf/DoubletFinder/issues/156&quot;&gt;https://github.com/chris-mcginnis-ucsf/DoubletFinder/issues/156&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Question: Can I run DoubletFinder on merged data from multiple 10x lanes? Answer: Technically yes but I would only do this if you were splitting the same sample across multiple lanes. You want to avoid instances where DoubletFinder is attempting to find doublets that do not actually exist in the data. I would also not advise running DF on integrated Seurat objects. See &lt;a href=&quot;https://github.com/chris-mcginnis-ucsf/DoubletFinder/issues/101&quot;&gt;https://github.com/chris-mcginnis-ucsf/DoubletFinder/issues/101&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Question: I see multiple potential pK values when visualizing BCmvn -- what should I do? Answer: I would spot check the results in GEX space to see what makes the most sense given your understanding of the data. See &lt;a href=&quot;https://github.com/chris-mcginnis-ucsf/DoubletFinder/issues/62&quot;&gt;https://github.com/chris-mcginnis-ucsf/DoubletFinder/issues/62&lt;/a&gt; and &lt;a href=&quot;https://github.com/chris-mcginnis-ucsf/DoubletFinder/issues/40&quot;&gt;https://github.com/chris-mcginnis-ucsf/DoubletFinder/issues/40&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;DoubletFinder Overview&lt;/h1&gt; 
&lt;p&gt;DoubletFinder can be broken up into 4 steps:&lt;/p&gt; 
&lt;p&gt;(1) Generate artificial doublets from existing scRNA-seq data&lt;/p&gt; 
&lt;p&gt;(2) Pre-process merged real-artificial data&lt;/p&gt; 
&lt;p&gt;(3) Perform PCA and use the PC distance matrix to find each cell&#39;s proportion of artificial k nearest neighbors (pANN)&lt;/p&gt; 
&lt;p&gt;(4) Rank order and threshold pANN values according to the expected number of doublets&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chris-mcginnis-ucsf/DoubletFinder/master/DF.screenshots/DoubletFinderOverview.png&quot; alt=&quot;alternativetext&quot;&gt;&lt;/p&gt; 
&lt;p&gt;DoubletFinder takes the following arguments:&lt;/p&gt; 
&lt;p&gt;seu ~ This is a fully-processed Seurat object (i.e., after NormalizeData, FindVariableGenes, ScaleData, RunPCA, and RunTSNE have all been run).&lt;/p&gt; 
&lt;p&gt;PCs ~ The number of statistically-significant principal components, specified as a range (e.g., PCs = 1:10)&lt;/p&gt; 
&lt;p&gt;pN ~ This defines the number of generated artificial doublets, expressed as a proportion of the merged real-artificial data. Default is set to 25%, based on observation that DoubletFinder performance is largely pN-invariant (see McGinnis, Murrow and Gartner 2019, Cell Systems).&lt;/p&gt; 
&lt;p&gt;pK ~ This defines the PC neighborhood size used to compute pANN, expressed as a proportion of the merged real-artificial data. No default is set, as pK should be adjusted for each scRNA-seq dataset. Optimal pK values should be estimated using the strategy described below.&lt;/p&gt; 
&lt;p&gt;nExp ~ This defines the pANN threshold used to make final doublet/singlet predictions. This value can best be estimated from cell loading densities into the 10X/Drop-Seq device, and adjusted according to the estimated proportion of homotypic doublets.&lt;/p&gt; 
&lt;h2&gt;Application to Cell Hashing and Demuxlet data&lt;/h2&gt; 
&lt;p&gt;DoubletFinder successfully recapitulates ground-truth doublet classifications determined using antibody-barcode sample multiplexing (Cell Hashing) and SNP deconvolution (Demuxlet). DoubletFinder identifies false-negative Demuxlet classifications caused by doublets formed from cells with identical SNP profiles. DoubletFinder is insensitive to homotypic doublets -- i.e., doublets dervied from transcriptionally-similar cell states.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chris-mcginnis-ucsf/DoubletFinder/master/DF.screenshots/Results_Demux.png&quot; alt=&quot;alternativetext&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/chris-mcginnis-ucsf/DoubletFinder/master/DF.screenshots/Results_Hashing.png&quot; alt=&quot;alternativetext&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;&#39;Best-Practices&#39; for scRNA-seq data generated without sample multiplexing&lt;/h1&gt; 
&lt;h2&gt;Input scRNA-seq Data&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Do not apply DoubletFinder to aggregated scRNA-seq data representing multiple &lt;em&gt;distinct&lt;/em&gt; samples (e.g., multiple 10X lanes). For example, if you run DoubletFinder on aggregated data representing WT and mutant cell lines sequenced across different 10X lanes, artificial doublets will be generated from WT and mutant cells, which cannot exist in your data. These artificial doublets will skew results. Notably, it is okay to run DoubletFinder on data generated by splitting a single sample across multiple 10X lanes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ensure that input data is cleared of low-quality cell clusters. There are a variety of ways to do this, but I usually use the following workflow:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;Manually threshold raw gene expression matrices according to RNA nUMIs (especially important when dealing with super-loaded 10X data because of the way CellRanger threholds data -- See Lun et al., 2019, Genome Biology.&lt;/li&gt; 
 &lt;li&gt;Pre-process data using standard workflow.&lt;/li&gt; 
 &lt;li&gt;Identify clusters with (A) low RNA UMIs, (B) High % mitochondrial reads, and/or (C) Uninformative marker genes.&lt;/li&gt; 
 &lt;li&gt;Remove clusters, pre-process again, and run DoubletFinder.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;pK Selection&lt;/h2&gt; 
&lt;p&gt;ROC analysis across pN-pK parameter sweeps for Cell Hashing and Demuxlet datasets demonstrate that DoubletFinder performance is largely invariant of pN value selection:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chris-mcginnis-ucsf/DoubletFinder/master/DF.screenshots/ParamSweep_Schematic.png&quot; alt=&quot;alternativetext&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/chris-mcginnis-ucsf/DoubletFinder/master/DF.screenshots/ParamSweep_HeatMap.png&quot; alt=&quot;alternativetext&quot;&gt;&lt;/p&gt; 
&lt;p&gt;ROC analysis across pN-pK parameter sweeps for simulated scRNA-seq data with (I) Variable numbers of cell states and (II) Variable magnitudes of transcriptional heterogeneity demonstrates that (I) Optimal pK value selection depends on the total number of cell states and (II) DoubletFinder performance suffers when applied to transcriptionally-homogenous data. Simulated data was generated using a strategy similar to as described in Wolock, Lopex &amp;amp; Klein 2019, Cell Systems.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chris-mcginnis-ucsf/DoubletFinder/master/DF.screenshots/Simulation_Schematic.png&quot; alt=&quot;alternativetext&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/chris-mcginnis-ucsf/DoubletFinder/master/DF.screenshots/Results_Simulation.png&quot; alt=&quot;alternativetext&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Simulated and sample-multiplexed data are unique in that ground-truth doublet classifications can be leveraged to characterize how DoubletFinder parameters must be &#39;fit&#39; to distinct scRNA-seq datasets. However, doublets remain unknown in real-world contexts -- which is likely why you are interested in DoubletFinder, at all!&lt;/p&gt; 
&lt;p&gt;To maximize the accuracy of DoubletFinder predictions, we sought a ground-truth-agnostic metric that coincides with pK values that maximize AUC in Cell Hashing and Demuxlet data. Mean-variance normalized bimodality coefficient (BCmvn) achieves this goal, featuring a single, easily-discernible maximum at pK values that optimize AUC.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chris-mcginnis-ucsf/DoubletFinder/master/DF.screenshots/BCmvn.png&quot; alt=&quot;alternativetext&quot;&gt;&lt;/p&gt; 
&lt;p&gt;BCmvn distributions also feature a single maximum for scRNA-seq datasets generated without sample-multiplexing (e.g., Mouse pancreas, Byrnes et al., 2018, Nature Communcations; Mouse kidney, Park et al., 2018, Science), enabling pK selection.&lt;/p&gt; 
&lt;h2&gt;Doublet Number Estimation&lt;/h2&gt; 
&lt;p&gt;DoubletFinder is sensitive to heterotypic doublets -- i.e., doublets formed from transcriptionally-distinct cell states -- but is insensitive to homotypic doublets -- i.e., doublets formed from transcriptionally-similar cell states. In our original manuscript, we suggested using DoubletFinder to predict the number of doublets expected from Poisson statistical estimates realting to the droplet microfluidics cell loading density. However, Poisson estimates are agnostic of homotypic doublets, and will thus invariably overestimate the number of &lt;em&gt;detectable&lt;/em&gt; doublets.&lt;/p&gt; 
&lt;p&gt;To address this issue, we suggest users utilize literature-supported cell type annotations to model the proportion of homotypic doublets present in their data. As an example, we present an analysis of mouse kidney scRNA-seq data (Park et al., 2018, Science):&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chris-mcginnis-ucsf/DoubletFinder/master/DF.screenshots/HomotypicAdjustment.png&quot; alt=&quot;alternativetext&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Notably, it is conceivable that literature-suppoted cell type annotations may not accurately recapitulate the magnitude of transcriptional divergence necessary for DoubletFinder sensitivity. For example, nominally-homogenous cells (e.g., CD4+ T-cells) may exist along a spectrum of gene expression states (e.g., distinct anatomical locations, disease states, naive/Tregs/Th17 cells, etc.), and doublets formed by cell sub-types may be detectable by DoubletFinder. Thus, we consider doublet number estimates based on Poisson statistics with and without homotypic doublet proportion adjustment to &#39;bookend&#39; the real detectable doublet rate.&lt;/p&gt; 
&lt;h2&gt;Example code for &#39;real-world&#39; applications&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-R&quot;&gt;## Pre-process Seurat object (standard) --------------------------------------------------------------------------------------
seu_kidney &amp;lt;- CreateSeuratObject(kidney.data)
seu_kidney &amp;lt;- NormalizeData(seu_kidney)
seu_kidney &amp;lt;- FindVariableFeatures(seu_kidney, selection.method = &quot;vst&quot;, nfeatures = 2000)
seu_kidney &amp;lt;- ScaleData(seu_kidney)
seu_kidney &amp;lt;- RunPCA(seu_kidney)
seu_kidney &amp;lt;- RunUMAP(seu_kidney, dims = 1:10)

## Pre-process Seurat object (sctransform) -----------------------------------------------------------------------------------
seu_kidney &amp;lt;- CreateSeuratObject(kidney.data)
seu_kidney &amp;lt;- SCTransform(seu_kidney)
seu_kidney &amp;lt;- RunPCA(seu_kidney)
seu_kidney &amp;lt;- RunUMAP(seu_kidney, dims = 1:10)

## pK Identification (no ground-truth) ---------------------------------------------------------------------------------------
sweep.res.list_kidney &amp;lt;- paramSweep(seu_kidney, PCs = 1:10, sct = FALSE)
sweep.stats_kidney &amp;lt;- summarizeSweep(sweep.res.list_kidney, GT = FALSE)
bcmvn_kidney &amp;lt;- find.pK(sweep.stats_kidney)

## pK Identification (ground-truth) ------------------------------------------------------------------------------------------
sweep.res.list_kidney &amp;lt;- paramSweep(seu_kidney, PCs = 1:10, sct = FALSE)
gt.calls &amp;lt;- seu_kidney@meta.data[rownames(sweep.res.list_kidney[[1]]), &quot;GT&quot;].   ## GT is a vector containing &quot;Singlet&quot; and &quot;Doublet&quot; calls recorded using sample multiplexing classification and/or in silico geneotyping results 
sweep.stats_kidney &amp;lt;- summarizeSweep(sweep.res.list_kidney, GT = TRUE, GT.calls = gt.calls)
bcmvn_kidney &amp;lt;- find.pK(sweep.stats_kidney)

## Homotypic Doublet Proportion Estimate -------------------------------------------------------------------------------------
homotypic.prop &amp;lt;- modelHomotypic(annotations)           ## ex: annotations &amp;lt;- seu_kidney@meta.data$ClusteringResults
nExp_poi &amp;lt;- round(0.075*nrow(seu_kidney@meta.data))  ## Assuming 7.5% doublet formation rate - tailor for your dataset
nExp_poi.adj &amp;lt;- round(nExp_poi*(1-homotypic.prop))

## Run DoubletFinder with varying classification stringencies ----------------------------------------------------------------
seu_kidney &amp;lt;- doubletFinder(seu_kidney, PCs = 1:10, pN = 0.25, pK = 0.09, nExp = nExp_poi, reuse.pANN = NULL, sct = FALSE)
seu_kidney &amp;lt;- doubletFinder(seu_kidney, PCs = 1:10, pN = 0.25, pK = 0.09, nExp = nExp_poi.adj, reuse.pANN = &quot;pANN_0.25_0.09_913&quot;, sct = FALSE)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chris-mcginnis-ucsf/DoubletFinder/master/DF.screenshots/DFkidney_low.vs.high.png&quot; alt=&quot;alternativetext&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Other Doublet Detection Methods&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/AllonKleinLab/scrublet&quot;&gt;Scrublet&lt;/a&gt; &lt;a href=&quot;https://github.com/EDePasquale/DoubletDecon&quot;&gt;DoubletDecon&lt;/a&gt; &lt;a href=&quot;https://github.com/JonathanShor/DoubletDetection&quot;&gt;DoubletDetection&lt;/a&gt; &lt;a href=&quot;https://github.com/calico/solo&quot;&gt;Solo&lt;/a&gt; &lt;a href=&quot;https://github.com/kostkalab/scds&quot;&gt;scds&lt;/a&gt; &lt;a href=&quot;https://github.com/plger/scDblFinder&quot;&gt;scDblFinder&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Stoeckius M, Zheng S, Houck-Loomis B, Hao S, Yeung BZ, Smibert P, Satija R. Cell Hashing with barcoded antibodies enables multiplexing and doublet detection for single cell genomics. Genome Biology. 2018. 19:224.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Kang HM, Subramaniam M, Targ S, Nguyen M, Maliskova L, McCarthy E, Wan E, Wong S, Byrnes L, Lanata CM, Gate RE, Mostafavi S, Marson A, Zaitlen N, Criswell LA, Ye JC. Multiplexed droplet single-cell RNA-sequencing using natural genetic variation. Nature Biotechnology. 2018. 36(1):89-94.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Wolock SL, Lopez R, Klein AM. Scrublet: Computational Identification of Cell Doublets in Single-Cell Transcriptomic Data. Cell Systems. 2019. 8(4):281-291.e9.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Park J, Shrestha R, Qiu C, Kondo A, Huang S, Werth M, Li M, Barasch J, Suszták K. Single-cell transcriptomics of the mouse kidney reveals potential cellular targets of kidney disease. Science. 2018. 360(6390):758-63.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Byrnes LE, Wong DM, Subramaniam M, Meyer NP, Gilchrist CL, Knox SM, Tward AD, Ye CJ, Sneddon JB. Lineage dynamics of murine pancreatic development at single-cell resolution. Nature Communications. 2018; 9:3922.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Bais AS, Kostka D. scds: computational annotation of doublets in single-cell RNA sequencing data. Bioinformatics. 2020. 36(4):1150-8.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Bernstein NJ, Fong NL, Lam I, Roy MA, Hendrickson DG, Kelley DR. Solo: Doublet Identification in Single-Cell RNA-Seq via Semi-Supervised Deep Learning. Cell Systems. 2020. S2405-4712(20)30195-2.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;DePasquale EAK, Schnell DJ, Van Camp PJ, Valiente-Alandi I, Blaxall BC, Grimes HL, Singh H, Salomonis N. DoubletDecon: Deconvoluting Doublets from Single-Cell RNA-Sequencing Data. Cell Reports. 2019. 29(6):1718-27.e8.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>r-spatial/sf</title>
      <link>https://github.com/r-spatial/sf</link>
      <description>&lt;p&gt;Simple Features for R&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/r-spatial/sf/actions/workflows/R-CMD-check.yaml&quot;&gt;&lt;img src=&quot;https://github.com/r-spatial/sf/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&quot; alt=&quot;R-CMD-check&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/r-spatial/sf/actions/workflows/tic-db.yml&quot;&gt;&lt;img src=&quot;https://github.com/r-spatial/sf/actions/workflows/tic-db.yml/badge.svg?sanitize=true&quot; alt=&quot;tic-db&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.codecov.io/gh/r-spatial/sf&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/r-spatial/sf/main.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/license-GPL%20%28%3E=%202%29-brightgreen.svg?style=flat&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cran.r-project.org/package=sf&quot;&gt;&lt;img src=&quot;https://www.r-pkg.org/badges/version/sf&quot; alt=&quot;CRAN&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cran.r-project.org/web/checks/check_results_sf.html&quot;&gt;&lt;img src=&quot;https://badges.cranchecks.info/worst/sf.svg?sanitize=true&quot; alt=&quot;cran checks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.r-pkg.org/pkg/sf&quot;&gt;&lt;img src=&quot;https://cranlogs.r-pkg.org/badges/sf?color=brightgreen&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://CRAN.R-project.org/package=sf&quot;&gt;&lt;img src=&quot;https://tinyverse.netlify.app/badge/sf&quot; alt=&quot;status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- badges: end --&gt; 
&lt;h1&gt;Simple Features for R&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/edzer/f461a3a95570c4ab7edf3125c2f19d20&quot;&gt;&lt;img align=&quot;right&quot; src=&quot;https://user-images.githubusercontent.com/520851/34887433-ce1d130e-f7c6-11e7-83fc-d60ad4fae6bd.gif&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A package that provides &lt;a href=&quot;https://en.wikipedia.org/wiki/Simple_Features&quot;&gt;simple features access&lt;/a&gt; for R.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/r-spatial/sf/main/#blogs-presentations-vignettes-sp-sf-wiki&quot;&gt;Blogs, links&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/r-spatial/sf/main/#cheatsheet&quot;&gt;Cheatsheet&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/r-spatial/sf/main/#installing&quot;&gt;Installing&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/r-spatial/sf/main/#contributing&quot;&gt;Contributing&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/r-spatial/sf/main/#acknowledgment&quot;&gt;Acknowledgment&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/r-spatial/sf/main/#how-to-cite&quot;&gt;How to cite&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Package sf:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;represents simple features as records in a &lt;code&gt;data.frame&lt;/code&gt; or &lt;code&gt;tibble&lt;/code&gt; with a geometry list-column&lt;/li&gt; 
 &lt;li&gt;represents natively in R all 17 simple feature types for all dimensions (XY, XYZ, XYM, XYZM)&lt;/li&gt; 
 &lt;li&gt;interfaces to &lt;a href=&quot;https://libgeos.org&quot;&gt;GEOS&lt;/a&gt; for geometrical operations on projected coordinates, and (through R package &lt;a href=&quot;https://cran.r-project.org/package=s2&quot;&gt;s2&lt;/a&gt;) to &lt;a href=&quot;http://s2geometry.io/&quot;&gt;s2geometry&lt;/a&gt; for geometrical operations on ellipsoidal coordinates&lt;/li&gt; 
 &lt;li&gt;interfaces to &lt;a href=&quot;https://gdal.org/&quot;&gt;GDAL&lt;/a&gt;, supporting all driver options, &lt;code&gt;Date&lt;/code&gt; and &lt;code&gt;POSIXct&lt;/code&gt; and list-columns&lt;/li&gt; 
 &lt;li&gt;interfaces to &lt;a href=&quot;http://proj.org/&quot;&gt;PRØJ&lt;/a&gt; for coordinate reference system conversion and transformation&lt;/li&gt; 
 &lt;li&gt;uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Well-known_text#Well-known_binary&quot;&gt;well-known-binary&lt;/a&gt; serialisations written in C++/Rcpp for fast I/O with GDAL and GEOS&lt;/li&gt; 
 &lt;li&gt;reads from and writes to spatial databases such as &lt;a href=&quot;http://postgis.net/&quot;&gt;PostGIS&lt;/a&gt; using &lt;a href=&quot;https://cran.r-project.org/package=DBI&quot;&gt;DBI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;is extended by 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/r-spatial/lwgeom/&quot;&gt;lwgeom&lt;/a&gt; for selected liblwgeom/PostGIS functions&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/r-spatial/stars/&quot;&gt;stars&lt;/a&gt; for raster data, and raster or vector data cubes (spatial time series)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://luukvdmeer.github.io/sfnetworks/&quot;&gt;sfnetworks&lt;/a&gt; for geospatial network data&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/edzer/442d74a5775abcd5068cf3e73b23687b&quot;&gt;&lt;img align=&quot;left&quot; src=&quot;https://user-images.githubusercontent.com/520851/50280460-e35c1880-044c-11e9-9ed7-cc46754e49db.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;(Illustration (c) 2018 by &lt;a href=&quot;https://twitter.com/allison_horst/status/1071456081308614656&quot;&gt;Allison Horst&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;Books, journal articles, blogs, presentations, vignettes, sp-sf wiki&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;an open access &lt;a href=&quot;https://journal.r-project.org/archive/2018/RJ-2018-009/index.html&quot;&gt;R Journal article&lt;/a&gt; summarizes the package&lt;/li&gt; 
 &lt;li&gt;two books: &lt;a href=&quot;https://r-spatial.org/book/&quot;&gt;Spatial Data Science: with applications in R&lt;/a&gt;, &lt;a href=&quot;https://r.geocompx.org/&quot;&gt;Geocomputation with R&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;package vignettes: &lt;a href=&quot;https://r-spatial.github.io/sf/articles/sf1.html&quot;&gt;first&lt;/a&gt;, &lt;a href=&quot;https://r-spatial.github.io/sf/articles/sf2.html&quot;&gt;second&lt;/a&gt;, &lt;a href=&quot;https://r-spatial.github.io/sf/articles/sf3.html&quot;&gt;third&lt;/a&gt;, &lt;a href=&quot;https://r-spatial.github.io/sf/articles/sf4.html&quot;&gt;fourth&lt;/a&gt;, &lt;a href=&quot;https://r-spatial.github.io/sf/articles/sf5.html&quot;&gt;fifth&lt;/a&gt;, &lt;a href=&quot;https://r-spatial.github.io/sf/articles/sf6.html&quot;&gt;sixth&lt;/a&gt;, &lt;a href=&quot;https://r-spatial.github.io/sf/articles/sf7.html&quot;&gt;seventh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;blog posts: &lt;a href=&quot;https://r-spatial.org/r/2016/02/15/simple-features-for-r.html&quot;&gt;first&lt;/a&gt;, &lt;a href=&quot;https://r-spatial.org/r/2016/07/18/sf2.html&quot;&gt;second&lt;/a&gt;, &lt;a href=&quot;https://r-spatial.org/r/2016/11/02/sfcran.html&quot;&gt;third&lt;/a&gt;, &lt;a href=&quot;https://r-spatial.org/r/2017/01/12/newssf.html&quot;&gt;fourth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;the original R Consortium ISC &lt;a href=&quot;https://raw.githubusercontent.com/r-spatial/sf/main/PROPOSAL.md&quot;&gt;proposal&lt;/a&gt;, the R Consortium &lt;a href=&quot;https://www.r-consortium.org/blog/2017/01/03/simple-features-now-on-cran&quot;&gt;blog post&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;presentations: &lt;a href=&quot;https://edzer.github.io/rstudio_conf/#1&quot;&gt;rstudio::conf 2018&lt;/a&gt; (&lt;a href=&quot;https://posit.co/resources/videos/tidy-spatial-data-analysis/&quot;&gt;video&lt;/a&gt;), &lt;a href=&quot;http://pebesma.staff.ifgi.de/pebesma_sfr.pdf&quot;&gt;UseR! 2016&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;wiki page describing &lt;a href=&quot;https://github.com/r-spatial/sf/wiki/Migrating&quot;&gt;sp-sf migration&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Cheatsheet&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;CC 4.0&lt;/a&gt; BY &lt;a href=&quot;https://github.com/ryangarnett&quot;&gt;Ryan Garnett&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rstudio/cheatsheets/raw/main/sf.pdf&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rstudio/cheatsheets/main/pngs/sf.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;Install either from CRAN with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;install.packages(&quot;sf&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will install binary packages on Windows and MacOS, unless you configured R such that it tries to install source packages; in that case, see below.&lt;/p&gt; 
&lt;p&gt;Install development versions from GitHub with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;library(remotes)
install_github(&quot;r-spatial/sf&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;Installing sf from source works under Windows when &lt;a href=&quot;https://cran.r-project.org/bin/windows/Rtools/&quot;&gt;Rtools&lt;/a&gt; is installed.&lt;/p&gt; 
&lt;h3&gt;MacOS&lt;/h3&gt; 
&lt;p&gt;MacOS users are strongly encouraged to install the &lt;code&gt;sf&lt;/code&gt; binary packages from CRAN, unless they are familiar with compilers, linking, C++ source code, and homebrew.&lt;/p&gt; 
&lt;p&gt;The easiest way to install &lt;code&gt;gdal&lt;/code&gt; is using Homebrew. Recent versions of Homebrew include a full-featured up-to-date &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/raw/master/Formula/g/gdal.rb&quot;&gt;gdal formula&lt;/a&gt;, which installs &lt;code&gt;proj&lt;/code&gt; and &lt;code&gt;gdal&lt;/code&gt; at the same time:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;brew install pkg-config
brew install gdal
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once gdal is installed, you will be able to install &lt;code&gt;sf&lt;/code&gt; package from source in R. With the current version of &lt;code&gt;proj&lt;/code&gt; on homebrew, installation requires additional configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;install.packages(&quot;sf&quot;, type = &quot;source&quot;, configure.args = &quot;--with-proj-lib=$(brew --prefix)/lib/&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or the development version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;library(remotes)
install_github(&quot;r-spatial/sf&quot;, configure.args = &quot;--with-proj-lib=$(brew --prefix)/lib/&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are using &lt;code&gt;sf&lt;/code&gt; and &lt;code&gt;rgdal&lt;/code&gt; together, it is necessary to install &lt;code&gt;rgdal&lt;/code&gt; from source using this configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;install.packages(&quot;rgdal&quot;, type = &quot;source&quot;, configure.args = c(&quot;--with-proj-lib=$(brew --prefix)/lib/&quot;, &quot;--with-proj-include=$(brew --prefix)/include/&quot;))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, &lt;a href=&quot;https://stat.ethz.ch/pipermail/r-sig-mac/2017-June/012429.html&quot;&gt;these instructions&lt;/a&gt; explain how to install gdal using kyngchaos frameworks.&lt;/p&gt; 
&lt;p&gt;For Mac OS 11 Big Sur source install instruction, see &lt;a href=&quot;https://github.com/r-spatial/sf/issues/1536#issuecomment-727342736&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;For Unix-alikes, GDAL (&amp;gt;= 2.0.1), GEOS (&amp;gt;= 3.4.0) and Proj.4 (&amp;gt;= 4.8.0) are required.&lt;/p&gt; 
&lt;h4&gt;Ubuntu&lt;/h4&gt; 
&lt;p&gt;Dependencies for recent versions of Ubuntu (18.04 and later) are available in the official repositories; you can install them with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;apt-get -y update &amp;amp;&amp;amp; apt-get install -y  libudunits2-dev libgdal-dev libgeos-dev libproj-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, to get more up-to-date versions of dependencies such as GDAL, we recommend adding the &lt;a href=&quot;http://ppa.launchpad.net/ubuntugis/ubuntugis-unstable/ubuntu/&quot;&gt;ubuntugis-unstable&lt;/a&gt; PPA to the package repositories and installing them as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
sudo apt-get update
sudo apt-get install libudunits2-dev libgdal-dev libgeos-dev libproj-dev libsqlite0-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Adding this PPA is required for installing &lt;code&gt;sf&lt;/code&gt; on older versions of Ubuntu (e.g. Xenial).&lt;/p&gt; 
&lt;p&gt;Another option, for advanced users, is to install dependencies from source; see e.g. an older &lt;a href=&quot;https://github.com/r-spatial/sf/raw/593ee48b34001fe3b383ea73ea57063ecf690732/.travis.yml&quot;&gt;Travis&lt;/a&gt; config file for hints.&lt;/p&gt; 
&lt;h4&gt;Fedora&lt;/h4&gt; 
&lt;p&gt;The following command installs all required dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo dnf install gdal-devel proj-devel geos-devel sqlite-devel udunits2-devel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arch&lt;/h4&gt; 
&lt;p&gt;Get gdal, proj, geos and podofo from the main repos, and udunits from the AUR:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pacman -S gdal proj geos arrow podofo
yay/pacaur/yaourt/whatever -S udunits
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;renv&lt;/code&gt; or &lt;code&gt;conda&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;There are several reports that &lt;code&gt;sf&lt;/code&gt; fails to install as a source package when R is used with &lt;code&gt;renv&lt;/code&gt;, or when R is installed in a &lt;code&gt;conda&lt;/code&gt; environment. If you experience this, please do not raise an issue here, but&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;try to sort this out with the &lt;code&gt;renv&lt;/code&gt; developers or the &lt;code&gt;conda&lt;/code&gt; maintainers, or&lt;/li&gt; 
 &lt;li&gt;try to use binary installs of the &lt;code&gt;sf&lt;/code&gt; package, e.g. from &lt;a href=&quot;https://github.com/eddelbuettel/r2u&quot;&gt;r2u&lt;/a&gt;, or the Posit package manager&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Other&lt;/h4&gt; 
&lt;p&gt;To install on Debian, the &lt;a href=&quot;https://github.com/rocker-org/geospatial&quot;&gt;rocker geospatial&lt;/a&gt; Dockerfiles may be helpful. Ubuntu Dockerfiles are found &lt;a href=&quot;https://github.com/r-spatial/sf/tree/main/inst/docker&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Multiple GDAL, GEOS and/or PROJ versions on your system&lt;/h3&gt; 
&lt;p&gt;If you use dynamic linking (installation from source) and have multiple versions of these libraries installed (e.g. one from ubuntugis-unstable, another installed from source in &lt;code&gt;/usr/local/lib&lt;/code&gt;) then this will in general not work, even when setting &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; manually. See &lt;a href=&quot;https://github.com/r-spatial/sf/issues/844&quot;&gt;here&lt;/a&gt; for the reason why.&lt;/p&gt; 
&lt;h3&gt;lwgeom&lt;/h3&gt; 
&lt;p&gt;Functions and methods that require &lt;code&gt;liblwgeom&lt;/code&gt;, including ellipsoidal (not spherical or Euclidean) metrics (area, distances), are provide by and used from &lt;a href=&quot;https://github.com/r-spatial/lwgeom&quot;&gt;lwgeom&lt;/a&gt;, which is also on &lt;a href=&quot;https://cran.r-project.org/package=lwgeom&quot;&gt;CRAN&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Contributions of all sorts are most welcome, issues and pull requests are the preferred ways of sharing them.&lt;/li&gt; 
 &lt;li&gt;When contributing pull requests, please adhere to the package style (in package code use &lt;code&gt;=&lt;/code&gt; rather than &lt;code&gt;&amp;lt;-&lt;/code&gt;; don&#39;t change indentation; tab stops of 4 spaces are preferred).&lt;/li&gt; 
 &lt;li&gt;This project is released with a &lt;a href=&quot;https://raw.githubusercontent.com/r-spatial/sf/main/CONDUCT.md&quot;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project, you agree to abide by its terms.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to cite&lt;/h2&gt; 
&lt;p&gt;Package &lt;code&gt;sf&lt;/code&gt; can be cited as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Edzer Pebesma, 2018. Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal &lt;a href=&quot;https://journal.r-project.org/archive/2018/RJ-2018-009/index.html&quot;&gt;10:1, 439-446.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Pebesma, E.; Bivand, R. (2023). &lt;a href=&quot;https://r-spatial.org/book/&quot;&gt;Spatial Data Science: With Applications in R&lt;/a&gt; (1st ed.). 314 pages. &lt;a href=&quot;https://doi.org/10.1201/9780429459016&quot;&gt;Chapman and Hall/CRC&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgment&lt;/h2&gt; 
&lt;p&gt;This project gratefully acknowledges financial &lt;a href=&quot;https://www.r-consortium.org/projects&quot;&gt;support&lt;/a&gt; from the&lt;/p&gt; 
&lt;a href=&quot;https://r-consortium.org/all-projects/2016-group-1.html#simple-features-for-r&quot;&gt; &lt;img src=&quot;https://r-consortium.org/images/RConsortium_Horizontal_Pantone.webp&quot; width=&quot;300&quot;&gt; &lt;/a&gt; 
&lt;!--
&lt;img src=&quot;http://pebesma.staff.ifgi.de/RConsortium_Horizontal_Pantone.png&quot; width=&quot;300&quot;&gt;
--&gt;</description>
    </item>
    
    <item>
      <title>rmaia/pavo</title>
      <link>https://github.com/rmaia/pavo</link>
      <description>&lt;p&gt;tools for the analysis of color data in R&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;pavo&lt;/code&gt;&lt;/h1&gt; 
&lt;!-- badges: start --&gt; 
&lt;p&gt;&lt;a href=&quot;https://cran.r-project.org/package=pavo/&quot;&gt;&lt;img src=&quot;https://www.r-pkg.org/badges/version-ago/pavo&quot; alt=&quot;cran version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cran.r-project.org/package=pavo/&quot;&gt;&lt;img src=&quot;https://cranlogs.r-pkg.org/badges/grand-total/pavo&quot; alt=&quot;cran downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rmaia/pavo/actions&quot;&gt;&lt;img src=&quot;https://github.com/rmaia/pavo/workflows/R-CMD-check/badge.svg?sanitize=true&quot; alt=&quot;R build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cran.r-project.org/web/checks/check_results_pavo.html&quot;&gt;&lt;img src=&quot;https://badges.cranchecks.info/worst/pavo.svg?sanitize=true&quot; alt=&quot;cran checks&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- badges: end --&gt; 
&lt;h2&gt;An &lt;code&gt;R&lt;/code&gt; package for the spectral and spatial analysis of color patterns&lt;/h2&gt; 
&lt;h3&gt;Currently maintained by &lt;a href=&quot;https://github.com/thomased&quot;&gt;Thomas White&lt;/a&gt; and &lt;a href=&quot;https://github.com/bisaloo&quot;&gt;Hugo Gruson&lt;/a&gt;.&lt;/h3&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;pavo&lt;/code&gt; is an R package developed with the goal of establishing a flexible and integrated workflow for working with spectral and spatial colour data. It includes functions that take advantage of new data classes to work seamlessly from importing raw spectra and images, to visualisation and analysis. It provides flexible ways to input spectral data from a variety of equipment manufacturers, process these data, extract variables, and produce publication-quality figures.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;pavo&lt;/code&gt; was written with the following workflow in mind:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Organise&lt;/strong&gt; data by importing and processing spectra and images (e.g., to remove noise, negative values, smooth curves, etc.).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Analyse&lt;/strong&gt; the resulting files, using spectral analyses of shape (hue, saturation, brightness), visual models based on perceptual data, and/or spatial adjacency and boundary strength analyses.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Visualise&lt;/strong&gt; the output, with multiple options provided for exploration, presentation, and analysis.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Need more information, or help with the package?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Take a look at the &lt;a href=&quot;https://book.colrverse.com&quot;&gt;package documentation&lt;/a&gt; for detailed examples and discussion.&lt;/li&gt; 
 &lt;li&gt;Check out the &lt;a href=&quot;http://pavo.colrverse.com/news/index.html&quot;&gt;latest news&lt;/a&gt; for changes and updates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Need help or advice and can&#39;t find what you&#39;re looking for?&lt;/strong&gt; Head over to the &lt;a href=&quot;https://github.com/colrverse/colRverse/discussions&quot;&gt;colRverse discussion board&lt;/a&gt; and feel free to post a message.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;If all else fails&lt;/strong&gt; (or you don&#39;t have a GitHub account), &lt;a href=&quot;mailto:thomas.white@sydney.edu.au&quot;&gt;email Tom&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Citing pavo&lt;/h2&gt; 
&lt;p&gt;The manuscript describing the current iteration of the package has been published and is free to access:&lt;/p&gt; 
&lt;p&gt;Maia R., Gruson H., Endler J.A., and White T.E. 2019 &lt;a href=&quot;https://doi.org/10.1111/2041-210X.13174&quot;&gt;pavo 2: New tools for the spectral and spatial analysis of colour in R&lt;/a&gt;. &lt;em&gt;Methods in Ecology and Evolution&lt;/em&gt;, 10(7):1097‑1107.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;This is the development page for &lt;code&gt;pavo&lt;/code&gt;. The stable release is available from CRAN. Simply use &lt;code&gt;install.packages(&quot;pavo&quot;)&lt;/code&gt; to install.&lt;/p&gt; 
&lt;p&gt;If you want to install the bleeding edge version of &lt;code&gt;pavo&lt;/code&gt;, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;use the &lt;a href=&quot;https://github.com/r-lib/remotes&quot;&gt;&lt;code&gt;remotes&lt;/code&gt;&lt;/a&gt; package:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;# install.packages(&quot;remotes&quot;)
remotes::install_github(&quot;rmaia/pavo&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;download files from GitHub and install using &lt;code&gt;$R CMD INSTALL&lt;/code&gt; or, from within R:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;install.packages(path, type = &quot;source&quot;, repos = NULL)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>MRCIEU/TwoSampleMR</title>
      <link>https://github.com/MRCIEU/TwoSampleMR</link>
      <description>&lt;p&gt;R package for performing 2-sample MR using MR-Base database&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mendelian randomization with GWAS summary data&lt;/h1&gt; 
&lt;!-- badges: start --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/MRCIEU/TwoSampleMR/actions/workflows/check-full.yaml&quot;&gt;&lt;img src=&quot;https://github.com/MRCIEU/TwoSampleMR/actions/workflows/check-full.yaml/badge.svg?sanitize=true&quot; alt=&quot;R-CMD-check&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lifecycle.r-lib.org/articles/stages.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lifecycle-experimental-orange.svg?sanitize=true&quot; alt=&quot;Lifecycle: experimental&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://zenodo.org/badge/latestdoi/49515156&quot;&gt;&lt;img src=&quot;https://zenodo.org/badge/49515156.svg?sanitize=true&quot; alt=&quot;DOI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.codecov.io/gh/MRCIEU/TwoSampleMR?branch=master&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/MRCIEU/TwoSampleMR/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;Codecov test coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://mrcieu.r-universe.dev/TwoSampleMR&quot;&gt;&lt;img src=&quot;https://mrcieu.r-universe.dev/badges/TwoSampleMR&quot; alt=&quot;TwoSampleMR status badge&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- badges: end --&gt; 
&lt;p&gt;A package for performing Mendelian randomization using GWAS summary data. It uses the &lt;a href=&quot;https://gwas.mrcieu.ac.uk/&quot;&gt;IEU OpenGWAS database&lt;/a&gt; to obtain data automatically, and a wide range of methods to run the analysis.&lt;/p&gt; 
&lt;h2&gt;January 2020 major update&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;We have made substantial changes to the package, database and reference panels.&lt;/strong&gt; For full details of the changes, please visit &lt;a href=&quot;https://mrcieu.github.io/TwoSampleMR/articles/gwas2020.html&quot;&gt;https://mrcieu.github.io/TwoSampleMR/articles/gwas2020.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Users running Windows and macOS, to install the latest version of TwoSampleMR please install from our MRC IEU r-universe&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;install.packages(&quot;TwoSampleMR&quot;, repos = c(&quot;https://mrcieu.r-universe.dev&quot;, &quot;https://cloud.r-project.org&quot;))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Users running Linux or WebR please see the &lt;a href=&quot;https://github.com/MRCIEU/mrcieu.r-universe.dev#readme&quot;&gt;following instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To update the package run the same command again.&lt;/p&gt; 
&lt;h3&gt;Installing from source&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-r&quot;&gt;install.packages(&quot;remotes&quot;)
remotes::install_github(&quot;MRCIEU/TwoSampleMR&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To update the package just run the &lt;code&gt;remotes::install_github(&quot;MRCIEU/TwoSampleMR&quot;)&lt;/code&gt; command again.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;p&gt;A multi-platform docker image containing R with the TwoSampleMR package pre-installed (for both x86_64 and ARM computers) is available here: &lt;a href=&quot;https://hub.docker.com/r/mrcieu/twosamplemr&quot;&gt;https://hub.docker.com/r/mrcieu/twosamplemr&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Additional content --&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Full documentation available here:&lt;/strong&gt; &lt;a href=&quot;https://mrcieu.github.io/TwoSampleMR/&quot;&gt;https://mrcieu.github.io/TwoSampleMR/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rstudio/tinytex</title>
      <link>https://github.com/rstudio/tinytex</link>
      <description>&lt;p&gt;A lightweight, cross-platform, portable, and easy-to-maintain LaTeX distribution based on TeX Live&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TinyTeX&lt;/h1&gt; 
&lt;!-- badges: start --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rstudio/tinytex/actions/workflows/R-CMD-check.yaml&quot;&gt;&lt;img src=&quot;https://github.com/rstudio/tinytex/actions/workflows/R-CMD-check.yaml/badge.svg?sanitize=true&quot; alt=&quot;R-CMD-check&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.codecov.io/gh/rstudio/tinytex?branch=main&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/rstudio/tinytex/branch/main/graph/badge.svg?sanitize=true&quot; alt=&quot;Codecov test coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cran.r-project.org/package=tinytex&quot;&gt;&lt;img src=&quot;https://www.r-pkg.org/badges/version/tinytex&quot; alt=&quot;CRAN release&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- badges: end --&gt; 
&lt;p&gt;&lt;a href=&quot;https://yihui.org/tinytex/&quot;&gt;&lt;img src=&quot;https://yihui.org/images/logo-tinytex.png&quot; alt=&quot;tinytex logo&quot; align=&quot;right&quot; width=&quot;200px&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The motivation behind TinyTeX was from two common problems in installing and maintaining LaTeX distributions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;You have to either install a basic version that is relatively small (several hundred MB) but basically doesn&#39;t work, because it is very likely that certain frequently used LaTeX packages are missing; or you install the full version that is several GB, but in your whole life, you probably will only use 1% of the packages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The documentation for installation and maintenance is often too long for beginners. For example, &lt;a href=&quot;https://www.tug.org/texlive/doc/tlmgr.html&quot;&gt;the &lt;code&gt;tlmgr&lt;/code&gt; manual&lt;/a&gt; is comprehensive and very useful, but it is often hard to figure out what to do when running into a LaTeX issue that says a certain &lt;code&gt;.sty&lt;/code&gt; file is not found.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;I believe these problems can be solved by TinyTeX, a custom LaTeX distribution based on TeX Live that is small in size but still functions well in most cases. Even if you run into the problem of missing LaTeX packages, it should be super clear to you what you need to do. In fact, if you are an R Markdown user, there is nothing you need to do, because missing packages will just be installed automatically. You may not even know the existence of LaTeX at all since it should rarely bother you.&lt;/p&gt; 
&lt;p&gt;This repo contains the installation scripts of TinyTeX (under the &lt;code&gt;tools&lt;/code&gt; directory) and the R companion package &lt;strong&gt;tinytex&lt;/strong&gt;. Please see the full documentation at &lt;a href=&quot;https://yihui.org/tinytex/&quot;&gt;https://yihui.org/tinytex/&lt;/a&gt;. Obviously I hope it is not too long.&lt;/p&gt; 
&lt;p&gt;The R package &lt;strong&gt;tinytex&lt;/strong&gt; is licensed under MIT. The LaTeX distribution TinyTeX is &lt;a href=&quot;https://github.com/rstudio/tinytex-releases#license&quot;&gt;licensed under GPL-2&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>broadinstitute/infercnv</title>
      <link>https://github.com/broadinstitute/infercnv</link>
      <description>&lt;p&gt;Inferring CNV from Single-Cell RNA-Seq&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Subclustering&lt;/h1&gt; 
&lt;p&gt;Subclustering resolution is one of the primary settings that will need to be adjusted in most runs to avoid oversplitting. The tutorial below explains how it works and details about it can also be found on the &lt;a href=&quot;https://github.com/broadinstitute/infercnv/wiki/infercnv-tumor-subclusters#tumor-subclustering-by-leiden-clustering-preferred&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;h3&gt;Full documentation&lt;/h3&gt; 
&lt;p&gt;Visit project &lt;a href=&quot;https://github.com/broadinstitute/inferCNV/wiki&quot;&gt;wiki&lt;/a&gt; for InferCNV documentation.&lt;/p&gt; 
&lt;h3&gt;Infercnv video tutorial&lt;/h3&gt; 
&lt;p&gt;A &lt;strong&gt;video&lt;/strong&gt; tutorial giving on overview of infercnv features and how to run an analysis can be found below &lt;strong&gt;(click on the image)&lt;/strong&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=-qOcHAavZT8&quot; title=&quot;Tutorial: Running infercnv&quot;&gt;&lt;img src=&quot;http://img.youtube.com/vi/-qOcHAavZT8/0.jpg&quot; alt=&quot;Tutorial: Running infercnv&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>prisma-flowdiagram/PRISMA2020</title>
      <link>https://github.com/prisma-flowdiagram/PRISMA2020</link>
      <description>&lt;p&gt;Produce PRISMA-2020 compliant flow diagrams&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/prisma-flowdiagram/PRISMA2020/actions/workflows/check-and-deploy.yml&quot;&gt;&lt;img src=&quot;https://github.com/prisma-flowdiagram/PRISMA2020/actions/workflows/check-and-deploy.yml/badge.svg?sanitize=true&quot; alt=&quot;Check &amp;amp; Deploy&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/v/release/prisma-flowdiagram/PRISMA2020&quot; alt=&quot;GitHub release (latest by date)&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/prisma-flowdiagram/PRISMA2020?style=social&quot; alt=&quot;GitHub Repo stars&quot;&gt; &lt;a href=&quot;https://doi.org/10.5281/zenodo.4287834&quot;&gt;&lt;img src=&quot;https://zenodo.org/badge/DOI/10.5281/zenodo.4287834.svg?sanitize=true&quot; alt=&quot;DOI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://doi.org/10.1002/cl2.1230&quot;&gt;&lt;img src=&quot;https://zenodo.org/badge/DOI/10.1002/cl2.1230.svg?sanitize=true&quot; alt=&quot;DOI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://ko-fi.com/O5O4JQJ5W&quot;&gt;&lt;img src=&quot;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&quot; alt=&quot;ko-fi&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- badges: end --&gt; 
&lt;h1&gt;PRISMA2020 Flow Diagram &lt;img src=&quot;https://raw.githubusercontent.com/prisma-flowdiagram/PRISMA2020/master/PRISMA2020-hex.png&quot; align=&quot;right&quot; width=&quot;15%&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;You can use this package to produce a flow diagram that conforms to the PRISMA 2020 standards using the &lt;code&gt;PRISMA_flowdiagram()&lt;/code&gt; function. The data can be manually entered into the function, or loaded up using the template CSV file provided in &#39;INST/EXTDATA/&#39;. The function, (if &#39;interactive = TRUE&#39;) produces an interactive HTML ouput with each box linking to a specific page (e.g. of search results or methods details), and hover-over tooltips for further information. &lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/prisma-flowdiagram/PRISMA2020/master/inst/extdata/PRISMA.png&quot; width=&quot;70%&quot;&gt; &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;The &#39;Previous&#39; and &#39;Other&#39; study arms of the flowchart can be toggled on and off and removed or added to the diagram by specifying this in the function inputs.&lt;/p&gt; 
&lt;p&gt;A static version is produced otherwise.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://srflowdiagram.github.io/template.html&quot; target=&quot;_blank&quot;&gt;See the interactive template here.&lt;/a&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://estech.shinyapps.io/prisma_flowdiagram/&quot; target=&quot;_blank&quot;&gt;Visit the web-based Shiny app for a point-and-click user interface here.&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Docker Installation&lt;/h2&gt; 
&lt;p&gt;You can quickly install the PRISMA2020 package and run the included example shinyapp using &lt;a href=&quot;https://docs.docker.com/engine/install/&quot;&gt;Docker&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker build . -t prisma-shiny:1
docker run -it --rm -p 3838:3838 prisma-shiny:1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href=&quot;http://localhost:3838/app&quot;&gt;http://localhost:3838/app&lt;/a&gt; in your web browser. To stop the app, press &lt;code&gt;Ctrl+C&lt;/code&gt; in the terminal.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Please cite as:&lt;br&gt; Haddaway, N. R., Page, M. J., Pritchard, C. C., &amp;amp; McGuinness, L. A. (2022). PRISMA2020: An R package and Shiny app for producing PRISMA 2020-compliant flow diagrams, with interactivity for optimised digital transparency and Open Synthesis. Campbell Systematic Reviews, 18, e1230. &lt;a href=&quot;https://doi.org/10.1002/cl2.1230&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://doi.org/10.1002/cl2.1230&quot;&gt;https://doi.org/10.1002/cl2.1230&lt;/a&gt;&lt;br&gt; &lt;a id=&quot;raw-url&quot; href=&quot;https://raw.githubusercontent.com/nealhaddaway/PRISMA2020/master/inst/extdata/citation.ris&quot;&gt;Citation in .ris format (right click &#39;Save Link As&#39;)&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
