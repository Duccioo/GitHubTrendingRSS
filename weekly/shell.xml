<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Shell Weekly Trending</title>
    <description>Weekly Trending of Shell in GitHub</description>
    <pubDate>Sun, 16 Mar 2025 01:55:25 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>juewuy/ShellCrash</title>
      <link>https://github.com/juewuy/ShellCrash</link>
      <description>&lt;p&gt;Run sing-box/mihomo as client in shell&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;br&gt;ShellCrash&lt;br&gt; &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/juewuy/ShellCrash/releases&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/release/juewuy/ShellCrash.svg?style=flat-square&amp;amp;label=ShellCrash&amp;amp;colorB=green&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/juewuy/ShellCrash/dev/README_CN.md&quot;&gt;中文&lt;/a&gt; | English&lt;/p&gt; 
&lt;h2&gt;Function introduction:&lt;/h2&gt; 
&lt;p&gt;~Convenient use in Shell environment through management script &lt;a href=&quot;https://github.com/Dreamacro/Crash&quot;&gt;Crash&lt;/a&gt;&lt;br&gt;~Support management of &lt;a href=&quot;https://lancellc.gitbook.io/Crash&quot;&gt;Crash functions&lt;/a&gt;&lt;br&gt;~Support online import &lt;a href=&quot;https://github.com/Dreamacro/Crash&quot;&gt;Crash&lt;/a&gt; supports sharing, subscription and configuration links&lt;br&gt;~Support configuration timing tasks, support configuration file timing updates&lt;br&gt;~Support online installation and Use local web panel to manage built-in rules&lt;br&gt;~Support routing mode, native mode and other mode switching&lt;br&gt;~Support online update&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Equipment support:&lt;/h2&gt; 
&lt;p&gt;~Support various router devices based on OpenWrt or secondary custom development using OpenWrt&lt;br&gt;~Support various devices running standard Linux systems (such as Debian/CenOS/Armbian, etc.)&lt;br&gt;~Compatible with Padavan firmware (conservative mode), Pandora firmware&lt;br&gt;~Compatible with various types of devices customized and developed using the Linux kernel&lt;br&gt;——————————&lt;br&gt;~For more device support, please submit an issue or go to the TG group for feedback (the device name and the device core information returned by running uname -a must be provided)&lt;br&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>d3/d3</title>
      <link>https://github.com/d3/d3</link>
      <description>&lt;p&gt;Bring data to life with SVG, Canvas and HTML. 📊📈🎉&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;D3: Data-Driven Documents&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://d3js.org&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3/main/docs/public/logo.svg?sanitize=true&quot; width=&quot;256&quot; height=&quot;256&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;D3&lt;/strong&gt; (or &lt;strong&gt;D3.js&lt;/strong&gt;) is a free, open-source JavaScript library for visualizing data. Its low-level approach built on web standards offers unparalleled flexibility in authoring dynamic, data-driven graphics. For more than a decade D3 has powered groundbreaking and award-winning visualizations, become a foundational building block of higher-level chart libraries, and fostered a vibrant community of data practitioners around the world.&lt;/p&gt; 
&lt;a href=&quot;https://observablehq.observablehq.cloud/oss-analytics/@d3/d3&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://observablehq.observablehq.cloud/oss-analytics/d3/downloads-dark.svg&quot;&gt; 
  &lt;img alt=&quot;Daily downloads of Observable Framework&quot; src=&quot;https://observablehq.observablehq.cloud/oss-analytics/d3/downloads.svg?sanitize=true&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;p&gt;&lt;sub&gt;Daily downloads of D3 · &lt;a href=&quot;https://observablehq.observablehq.cloud/oss-analytics/&quot;&gt;oss-analytics&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://d3js.org&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/gallery&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/releases&quot;&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://d3js.org/community&quot;&gt;Getting help&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>acmesh-official/acme.sh</title>
      <link>https://github.com/acmesh-official/acme.sh</link>
      <description>&lt;p&gt;A pure Unix shell script implementing ACME client protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;An ACME Shell script: acme.sh&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;FreeBSD&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;OpenBSD&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;NetBSD&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml/badge.svg?sanitize=true&quot; alt=&quot;MacOS&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml/badge.svg?sanitize=true&quot; alt=&quot;Ubuntu&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml/badge.svg?sanitize=true&quot; alt=&quot;Windows&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml/badge.svg?sanitize=true&quot; alt=&quot;Solaris&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;DragonFlyBSD&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml/badge.svg?sanitize=true&quot; alt=&quot;Omnios&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/workflows/Shellcheck/badge.svg?sanitize=true&quot; alt=&quot;Shellcheck&quot;&gt; &lt;img src=&quot;https://github.com/acmesh-official/acme.sh/workflows/PebbleStrict/badge.svg?sanitize=true&quot; alt=&quot;PebbleStrict&quot;&gt; &lt;img src=&quot;https://github.com/acmesh-official/acme.sh/workflows/Build%20DockerHub/badge.svg?sanitize=true&quot; alt=&quot;DockerHub&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/acmesh&quot; alt=&quot;Financial Contributors on Open Collective&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/all/badge.svg?label=financial+contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/acme-sh/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/acme-sh/Lobby.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/acme-sh/Lobby&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/neilpang/acme.sh&quot; title=&quot;Click to view the image on Docker Hub&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/stars/neilpang/acme.sh.svg?sanitize=true&quot; alt=&quot;Docker stars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/neilpang/acme.sh&quot; title=&quot;Click to view the image on Docker Hub&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/neilpang/acme.sh.svg?sanitize=true&quot; alt=&quot;Docker pulls&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An ACME protocol client written purely in Shell (Unix shell) language.&lt;/li&gt; 
 &lt;li&gt;Full ACME protocol implementation.&lt;/li&gt; 
 &lt;li&gt;Support ECDSA certs&lt;/li&gt; 
 &lt;li&gt;Support SAN and wildcard certs&lt;/li&gt; 
 &lt;li&gt;Simple, powerful and very easy to use. You only need 3 minutes to learn it.&lt;/li&gt; 
 &lt;li&gt;Bash, dash and sh compatible.&lt;/li&gt; 
 &lt;li&gt;Purely written in Shell with no dependencies on python.&lt;/li&gt; 
 &lt;li&gt;Just one script to issue, renew and install your certificates automatically.&lt;/li&gt; 
 &lt;li&gt;DOES NOT require &lt;code&gt;root/sudoer&lt;/code&gt; access.&lt;/li&gt; 
 &lt;li&gt;Docker ready&lt;/li&gt; 
 &lt;li&gt;IPv6 ready&lt;/li&gt; 
 &lt;li&gt;Cron job notifications for renewal or error etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It&#39;s probably the &lt;code&gt;easiest &amp;amp; smartest&lt;/code&gt; shell script to automatically issue &amp;amp; renew the free certificates.&lt;/p&gt; 
&lt;p&gt;Wiki: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For Docker Fans: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Run-acme.sh-in-docker&quot;&gt;acme.sh &lt;span&gt;💕&lt;/span&gt; Docker &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Twitter: &lt;a href=&quot;https://twitter.com/neilpangxa&quot;&gt;@neilpangxa&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E&quot;&gt;中文说明&lt;/a&gt;&lt;/h1&gt; 
&lt;h1&gt;Who:&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.crashed.org/letsencrypt-in-freebsd-org/&quot;&gt;FreeBSD.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ruby-china.org/topics/31983&quot;&gt;ruby-china.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pve.proxmox.com/wiki/Certificate_Management&quot;&gt;Proxmox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pfsense/FreeBSD-ports/pull/89&quot;&gt;pfsense&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.loadbalancer.org/blog/loadbalancer-org-with-lets-encrypt-quick-and-dirty&quot;&gt;Loadbalancer.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meta.discourse.org/t/setting-up-lets-encrypt/40709&quot;&gt;discourse.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://centminmod.com/letsencrypt-acmetool-https.html&quot;&gt;Centminmod&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forum.splynx.com/t/free-ssl-cert-for-splynx-lets-encrypt/297&quot;&gt;splynx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/opnsense/plugins/tree/master/security/acme-client/src/opnsense/scripts/OPNsense/AcmeClient&quot;&gt;opnsense.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://control-webpanel.com&quot;&gt;CentOS Web Panel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lnmp.org/&quot;&gt;lnmp.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Blogs-and-tutorials&quot;&gt;more...&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Tested OS&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;NO&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml/badge.svg?sanitize=true&quot; alt=&quot;MacOS&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mac OSX&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml/badge.svg?sanitize=true&quot; alt=&quot;Windows&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows (cygwin with curl, openssl and crontab included)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;FreeBSD&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;FreeBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml/badge.svg?sanitize=true&quot; alt=&quot;Solaris&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Solaris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml/badge.svg?sanitize=true&quot; alt=&quot;Ubuntu&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;NA&lt;/td&gt; 
   &lt;td&gt;pfsense&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;OpenBSD&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;OpenBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;NetBSD&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;NetBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;DragonFlyBSD&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;DragonFlyBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml/badge.svg?sanitize=true&quot; alt=&quot;Omnios&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Omnios&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Debian&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;CentOS&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;openSUSE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Alpine Linux (with curl)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Archlinux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;fedora&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Kali Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Oracle Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mageia&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Gentoo Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ClearLinux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td&gt;-----&lt;/td&gt; 
   &lt;td&gt;Cloud Linux &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/issues/111&quot;&gt;https://github.com/acmesh-official/acme.sh/issues/111&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td&gt;-----&lt;/td&gt; 
   &lt;td&gt;OpenWRT: Tested and working. See &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-run-on-OpenWRT&quot;&gt;wiki page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/letest#here-are-the-latest-status&quot;&gt;&lt;img src=&quot;https://acmesh-official.github.io/acmetest/status/proxmox.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Proxmox: See Proxmox VE Wiki. Version &lt;a href=&quot;https://pve.proxmox.com/wiki/HTTPS_Certificate_Configuration_(Version_4.x,_5.0_and_5.1)#Let.27s_Encrypt_using_acme.sh&quot;&gt;4.x, 5.0, 5.1&lt;/a&gt;, version &lt;a href=&quot;https://pve.proxmox.com/wiki/Certificate_Management&quot;&gt;5.2 and up&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Check our &lt;a href=&quot;https://github.com/acmesh-official/acmetest&quot;&gt;testing project&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acmetest&quot;&gt;https://github.com/acmesh-official/acmetest&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Supported CA&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA&quot;&gt;ZeroSSL.com CA&lt;/a&gt;(default)&lt;/li&gt; 
 &lt;li&gt;Letsencrypt.org CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/BuyPass.com-CA&quot;&gt;BuyPass.com CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/SSL.com-CA&quot;&gt;SSL.com CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Google-Public-CA&quot;&gt;Google.com Public CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/letsencrypt/pebble&quot;&gt;Pebble strict Mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Any other &lt;a href=&quot;https://tools.ietf.org/html/rfc8555&quot;&gt;RFC8555&lt;/a&gt;-compliant CA&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Supported modes&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Webroot mode&lt;/li&gt; 
 &lt;li&gt;Standalone mode&lt;/li&gt; 
 &lt;li&gt;Standalone tls-alpn mode&lt;/li&gt; 
 &lt;li&gt;Apache mode&lt;/li&gt; 
 &lt;li&gt;Nginx mode&lt;/li&gt; 
 &lt;li&gt;DNS mode&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/DNS-alias-mode&quot;&gt;DNS alias mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Stateless-Mode&quot;&gt;Stateless mode&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;1. How to install&lt;/h1&gt; 
&lt;h3&gt;1. Install online&lt;/h3&gt; 
&lt;p&gt;Check this project: &lt;a href=&quot;https://github.com/acmesh-official/get.acme.sh&quot;&gt;https://github.com/acmesh-official/get.acme.sh&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl https://get.acme.sh | sh -s email=my@example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;wget -O -  https://get.acme.sh | sh -s email=my@example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Or, Install from git&lt;/h3&gt; 
&lt;p&gt;Clone this project and launch installation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/acmesh-official/acme.sh.git
cd ./acme.sh
./acme.sh --install -m my@example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You &lt;code&gt;don&#39;t have to be root&lt;/code&gt; then, although &lt;code&gt;it is recommended&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Advanced Installation: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-install&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-install&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The installer will perform 3 actions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create and copy &lt;code&gt;acme.sh&lt;/code&gt; to your home dir (&lt;code&gt;$HOME&lt;/code&gt;): &lt;code&gt;~/.acme.sh/&lt;/code&gt;. All certs will be placed in this folder too.&lt;/li&gt; 
 &lt;li&gt;Create alias for: &lt;code&gt;acme.sh=~/.acme.sh/acme.sh&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Create daily cron job to check and renew the certs if needed.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Cron entry example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;0 0 * * * &quot;/home/user/.acme.sh&quot;/acme.sh --cron --home &quot;/home/user/.acme.sh&quot; &amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After the installation, you must close the current terminal and reopen it to make the alias take effect.&lt;/p&gt; 
&lt;p&gt;Ok, you are ready to issue certs now.&lt;/p&gt; 
&lt;p&gt;Show help message:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;root@v1:~# acme.sh -h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;2. Just issue a cert&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt; Single domain.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -d example.com -w /home/wwwroot/example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -d example.com -w /home/username/public_html
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -d example.com -w /var/www/html
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt; Multiple domains in the same cert.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -d example.com -d www.example.com -d cp.example.com -w /home/wwwroot/example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The parameter &lt;code&gt;/home/wwwroot/example.com&lt;/code&gt; or &lt;code&gt;/home/username/public_html&lt;/code&gt; or &lt;code&gt;/var/www/html&lt;/code&gt; is the web root folder where you host your website files. You &lt;strong&gt;MUST&lt;/strong&gt; have &lt;code&gt;write access&lt;/code&gt; to this folder.&lt;/p&gt; 
&lt;p&gt;Second argument &lt;strong&gt;&quot;example.com&quot;&lt;/strong&gt; is the main domain you want to issue the cert for. You must have at least one domain there.&lt;/p&gt; 
&lt;p&gt;You must point and bind all the domains to the same webroot dir: &lt;code&gt;/home/wwwroot/example.com&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The certs will be placed in &lt;code&gt;~/.acme.sh/example.com/&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The certs will be renewed automatically every &lt;strong&gt;60&lt;/strong&gt; days.&lt;/p&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;3. Install the cert to Apache/Nginx etc.&lt;/h1&gt; 
&lt;p&gt;After the cert is generated, you probably want to install/copy the cert to your Apache/Nginx or other servers. You &lt;strong&gt;MUST&lt;/strong&gt; use this command to copy the certs to the target files, &lt;strong&gt;DO NOT&lt;/strong&gt; use the certs files in &lt;strong&gt;~/.acme.sh/&lt;/strong&gt; folder, they are for internal use only, the folder structure may change in the future.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Apache&lt;/strong&gt; example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --install-cert -d example.com \
--cert-file      /path/to/certfile/in/apache/cert.pem  \
--key-file       /path/to/keyfile/in/apache/key.pem  \
--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \
--reloadcmd     &quot;service apache2 force-reload&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Nginx&lt;/strong&gt; example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --install-cert -d example.com \
--key-file       /path/to/keyfile/in/nginx/key.pem  \
--fullchain-file /path/to/fullchain/nginx/cert.pem \
--reloadcmd     &quot;service nginx force-reload&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Only the domain is required, all the other parameters are optional.&lt;/p&gt; 
&lt;p&gt;The ownership and permission info of existing files are preserved. You can pre-create the files to define the ownership and permission.&lt;/p&gt; 
&lt;p&gt;Install/copy the cert/key to the production Apache or Nginx path.&lt;/p&gt; 
&lt;p&gt;The cert will be renewed every &lt;strong&gt;60&lt;/strong&gt; days by default (which is configurable). Once the cert is renewed, the Apache/Nginx service will be reloaded automatically by the command: &lt;code&gt;service apache2 force-reload&lt;/code&gt; or &lt;code&gt;service nginx force-reload&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please take care: The reloadcmd is very important. The cert can be automatically renewed, but, without a correct &#39;reloadcmd&#39; the cert may not be flushed to your server(like nginx or apache), then your website will not be able to show renewed cert in 60 days.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;4. Use Standalone server to issue cert&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer or have permission to listen on port 80 (TCP))&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Port &lt;code&gt;80&lt;/code&gt; (TCP) &lt;strong&gt;MUST&lt;/strong&gt; be free to listen on, otherwise you will be prompted to free it and try again.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue --standalone -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;5. Use Standalone ssl server to issue cert&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer or have permission to listen on port 443 (TCP))&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Port &lt;code&gt;443&lt;/code&gt; (TCP) &lt;strong&gt;MUST&lt;/strong&gt; be free to listen on, otherwise you will be prompted to free it and try again.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue --alpn -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;6. Use Apache mode&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer, since it is required to interact with Apache server)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you are running a web server, it is recommended to use the &lt;code&gt;Webroot mode&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Particularly, if you are running an Apache server, you can use Apache mode instead. This mode doesn&#39;t write any files to your web root folder.&lt;/p&gt; 
&lt;p&gt;Just set string &quot;apache&quot; as the second argument and it will force use of apache plugin automatically.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --issue --apache -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;This apache mode is only to issue the cert, it will not change your apache config files. You will need to configure your website config files to use the cert by yourself. We don&#39;t want to mess with your apache server, don&#39;t worry.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;7. Use Nginx mode&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer, since it is required to interact with Nginx server)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you are running a web server, it is recommended to use the &lt;code&gt;Webroot mode&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Particularly, if you are running an nginx server, you can use nginx mode instead. This mode doesn&#39;t write any files to your web root folder.&lt;/p&gt; 
&lt;p&gt;Just set string &quot;nginx&quot; as the second argument.&lt;/p&gt; 
&lt;p&gt;It will configure nginx server automatically to verify the domain and then restore the nginx config to the original version.&lt;/p&gt; 
&lt;p&gt;So, the config is not changed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --issue --nginx -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;This nginx mode is only to issue the cert, it will not change your nginx config files. You will need to configure your website config files to use the cert by yourself. We don&#39;t want to mess with your nginx server, don&#39;t worry.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;8. Automatic DNS API integration&lt;/h1&gt; 
&lt;p&gt;If your DNS provider supports API access, we can use that API to automatically issue the certs.&lt;/p&gt; 
&lt;p&gt;You don&#39;t have to do anything manually!&lt;/p&gt; 
&lt;h3&gt;Currently acme.sh supports most of the dns providers:&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;9. Use DNS manual mode:&lt;/h1&gt; 
&lt;p&gt;See: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode&lt;/a&gt; first.&lt;/p&gt; 
&lt;p&gt;If your dns provider doesn&#39;t support any api access, you can add the txt record by hand.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue --dns -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should get an output like below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Add the following txt record:
Domain:_acme-challenge.example.com
Txt value:9ihDbjYfTExAYeDs4DBUeuTo18KBzwvTEjUnSwd32-c

Add the following txt record:
Domain:_acme-challenge.www.example.com
Txt value:9ihDbjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Please add those txt records to the domains. Waiting for the dns to take effect.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then just rerun with &lt;code&gt;renew&lt;/code&gt; argument:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --renew -d example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ok, it&#39;s done.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Take care, this is dns manual mode, it can not be renewed automatically. you will have to add a new txt record to your domain by your hand when you renew your cert.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please use dns api mode instead.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;10. Issue ECC certificates&lt;/h1&gt; 
&lt;p&gt;Just set the &lt;code&gt;keylength&lt;/code&gt; parameter with a prefix &lt;code&gt;ec-&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;h3&gt;Single domain ECC certificate&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -w /home/wwwroot/example.com -d example.com --keylength ec-256
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SAN multi domain ECC certificate&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -w /home/wwwroot/example.com -d example.com -d www.example.com --keylength ec-256
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please look at the &lt;code&gt;keylength&lt;/code&gt; parameter above.&lt;/p&gt; 
&lt;p&gt;Valid values are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ec-256 (prime256v1, &quot;ECDSA P-256&quot;, which is the default key type)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ec-384 (secp384r1, &quot;ECDSA P-384&quot;)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ec-521 (secp521r1, &quot;ECDSA P-521&quot;, which is not supported by Let&#39;s Encrypt yet.)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2048 (RSA2048)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;3072 (RSA3072)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4096 (RSA4096)&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;11. Issue Wildcard certificates&lt;/h1&gt; 
&lt;p&gt;It&#39;s simple, just give a wildcard domain as the &lt;code&gt;-d&lt;/code&gt; parameter.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh  --issue -d example.com  -d &#39;*.example.com&#39;  --dns dns_cf
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;12. How to renew the certs&lt;/h1&gt; 
&lt;p&gt;No, you don&#39;t need to renew the certs manually. All the certs will be renewed automatically every &lt;strong&gt;60&lt;/strong&gt; days.&lt;/p&gt; 
&lt;p&gt;However, you can also force to renew a cert:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --renew -d example.com --force
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, for ECC cert:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --renew -d example.com --force --ecc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;13. How to stop cert renewal&lt;/h1&gt; 
&lt;p&gt;To stop renewal of a cert, you can execute the following to remove the cert from the renewal list:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --remove -d example.com [--ecc]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The cert/key file is not removed from the disk.&lt;/p&gt; 
&lt;p&gt;You can remove the respective directory (e.g. &lt;code&gt;~/.acme.sh/example.com&lt;/code&gt;) by yourself.&lt;/p&gt; 
&lt;h1&gt;14. How to upgrade &lt;code&gt;acme.sh&lt;/code&gt;&lt;/h1&gt; 
&lt;p&gt;acme.sh is in constant development, so it&#39;s strongly recommended to use the latest code.&lt;/p&gt; 
&lt;p&gt;You can update acme.sh to the latest code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --upgrade
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also enable auto upgrade:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --upgrade --auto-upgrade
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then &lt;strong&gt;acme.sh&lt;/strong&gt; will be kept up to date automatically.&lt;/p&gt; 
&lt;p&gt;Disable auto upgrade:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --upgrade --auto-upgrade 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;15. Issue a cert from an existing CSR&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Issue-a-cert-from-existing-CSR&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/Issue-a-cert-from-existing-CSR&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;16. Send notifications in cronjob&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/notify&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/notify&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;17. Under the Hood&lt;/h1&gt; 
&lt;p&gt;Speak ACME language using shell, directly to &quot;Let&#39;s Encrypt&quot;.&lt;/p&gt; 
&lt;p&gt;TODO:&lt;/p&gt; 
&lt;h1&gt;18. Acknowledgments&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;Acme-tiny: &lt;a href=&quot;https://github.com/diafygi/acme-tiny&quot;&gt;https://github.com/diafygi/acme-tiny&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ACME protocol: &lt;a href=&quot;https://github.com/ietf-wg-acme/acme&quot;&gt;https://github.com/ietf-wg-acme/acme&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;h3&gt;Code Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Financial Contributors&lt;/h3&gt; 
&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&quot;https://opencollective.com/acmesh/contribute&quot;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;h4&gt;Individuals&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/acmesh&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/individuals.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Organizations&lt;/h4&gt; 
&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/acmesh/contribute&quot;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/acmesh/organization/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;19. License &amp;amp; Others&lt;/h1&gt; 
&lt;p&gt;License is GPLv3&lt;/p&gt; 
&lt;p&gt;Please Star and Fork me.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/issues&quot;&gt;Issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/pulls&quot;&gt;pull requests&lt;/a&gt; are welcome.&lt;/p&gt; 
&lt;h1&gt;20. Donate&lt;/h1&gt; 
&lt;p&gt;Your donation makes &lt;strong&gt;acme.sh&lt;/strong&gt; better:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;PayPal/Alipay(支付宝)/Wechat(微信): &lt;a href=&quot;https://donate.acme.sh/&quot;&gt;https://donate.acme.sh/&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Donate-list&quot;&gt;Donate List&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ohmyzsh/ohmyzsh</title>
      <link>https://github.com/ohmyzsh/ohmyzsh</link>
      <description>&lt;p&gt;🙃 A delightful community-driven (with 2,400+ contributors) framework for managing your zsh configuration. Includes 300+ optional plugins (rails, git, macOS, hub, docker, homebrew, node, php, python, etc), 140+ themes to spice up your morning, and an auto-update tool that makes it easy to keep up with the latest updates from the community.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://ohmyzsh.s3.amazonaws.com/omz-ansi-github.png&quot; alt=&quot;Oh My Zsh&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Oh My Zsh is an open source, community-driven framework for managing your &lt;a href=&quot;https://www.zsh.org/&quot;&gt;zsh&lt;/a&gt; configuration.&lt;/p&gt; 
&lt;p&gt;Sounds boring. Let&#39;s try again.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Oh My Zsh will not make you a 10x developer...but you may feel like one.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Once installed, your terminal shell will become the talk of the town &lt;em&gt;or your money back!&lt;/em&gt; With each keystroke in your command prompt, you&#39;ll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in cafés and ask you, &lt;em&gt;&quot;that is amazing! are you some sort of genius?&quot;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Finally, you&#39;ll begin to get the sort of attention that you have always felt you deserved. ...or maybe you&#39;ll use the time that you&#39;re saving to start flossing more often. 😬&lt;/p&gt; 
&lt;p&gt;To learn more, visit &lt;a href=&quot;https://ohmyz.sh&quot;&gt;ohmyz.sh&lt;/a&gt;, follow &lt;a href=&quot;https://x.com/ohmyzsh&quot;&gt;@ohmyzsh&lt;/a&gt; on X (formerly Twitter), and join us on &lt;a href=&quot;https://discord.gg/ohmyzsh&quot;&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/actions?query=workflow%3ACI&quot;&gt;&lt;img src=&quot;https://github.com/ohmyzsh/ohmyzsh/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=ohmyzsh&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/ohmyzsh?label=%40ohmyzsh&amp;amp;logo=x&amp;amp;style=flat&quot; alt=&quot;X (formerly Twitter) Follow&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://mstdn.social/@ohmyzsh&quot;&gt;&lt;img src=&quot;https://img.shields.io/mastodon/follow/111169632522566717?label=%40ohmyzsh&amp;amp;domain=https%3A%2F%2Fmstdn.social&amp;amp;logo=mastodon&amp;amp;style=flat&quot; alt=&quot;Mastodon Follow&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/ohmyzsh&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/642496866407284746&quot; alt=&quot;Discord server&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitpod.io/#https://github.com/ohmyzsh/ohmyzsh&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-ready-blue?logo=gitpod&quot; alt=&quot;Gitpod ready&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Table of Contents&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#getting-started&quot;&gt;Getting Started&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#operating-system-compatibility&quot;&gt;Operating System Compatibility&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#basic-installation&quot;&gt;Basic Installation&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-inspection&quot;&gt;Manual Inspection&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#using-oh-my-zsh&quot;&gt;Using Oh My Zsh&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#plugins&quot;&gt;Plugins&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#enabling-plugins&quot;&gt;Enabling Plugins&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#using-plugins&quot;&gt;Using Plugins&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#themes&quot;&gt;Themes&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#selecting-a-theme&quot;&gt;Selecting A Theme&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#advanced-topics&quot;&gt;Advanced Topics&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#advanced-installation&quot;&gt;Advanced Installation&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#custom-directory&quot;&gt;Custom Directory&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#unattended-install&quot;&gt;Unattended Install&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#installing-from-a-forked-repository&quot;&gt;Installing From A Forked Repository&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-installation&quot;&gt;Manual Installation&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#installation-problems&quot;&gt;Installation Problems&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#custom-plugins-and-themes&quot;&gt;Custom Plugins And Themes&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#enable-gnu-ls-in-macos-and-freebsd-systems&quot;&gt;Enable GNU ls In macOS And freeBSD Systems&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#skip-aliases&quot;&gt;Skip Aliases&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#async-git-prompt&quot;&gt;Async git prompt&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#getting-updates&quot;&gt;Getting Updates&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#updates-verbosity&quot;&gt;Updates Verbosity&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-updates&quot;&gt;Manual Updates&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#uninstalling-oh-my-zsh&quot;&gt;Uninstalling Oh My Zsh&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#how-do-i-contribute-to-oh-my-zsh&quot;&gt;How Do I Contribute To Oh My Zsh?&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#do-not-send-us-themes&quot;&gt;Do Not Send Us Themes&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#follow-us&quot;&gt;Follow Us&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#merchandise&quot;&gt;Merchandise&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#about-planet-argon&quot;&gt;About Planet Argon&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Operating System Compatibility&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;O/S&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Android&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;freeBSD&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;LCARS&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🛸&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Linux&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;macOS&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;OS/2 Warp&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Windows (WSL2)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zsh.org&quot;&gt;Zsh&lt;/a&gt; should be installed (v4.3.9 or more recent is fine but we prefer 5.0.8 and newer). If not pre-installed (run &lt;code&gt;zsh --version&lt;/code&gt; to confirm), check the following wiki instructions here: &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH&quot;&gt;Installing ZSH&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;wget&lt;/code&gt; should be installed&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git&lt;/code&gt; should be installed (recommended v2.4.11 or higher)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Basic Installation&lt;/h3&gt; 
&lt;p&gt;Oh My Zsh is installed by running one of the following commands in your terminal. You can install this via the command-line with either &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;wget&lt;/code&gt; or another similar tool.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Method&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;wget&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;fetch&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(fetch -o - https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Alternatively, the installer is also mirrored outside GitHub. Using this URL instead may be required if you&#39;re in a country like China or India (for certain ISPs), that blocks &lt;code&gt;raw.githubusercontent.com&lt;/code&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Method&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(curl -fsSL https://install.ohmyz.sh/)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;wget&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(wget -O- https://install.ohmyz.sh/)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;fetch&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(fetch -o - https://install.ohmyz.sh/)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;em&gt;Note that any previous &lt;code&gt;.zshrc&lt;/code&gt; will be renamed to &lt;code&gt;.zshrc.pre-oh-my-zsh&lt;/code&gt;. After installation, you can move the configuration you want to preserve into the new &lt;code&gt;.zshrc&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Manual Inspection&lt;/h4&gt; 
&lt;p&gt;It&#39;s a good idea to inspect the install script from projects you don&#39;t yet know. You can do that by downloading the install script first, looking through it so everything looks normal, then running it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
sh install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the above URL times out or otherwise fails, you may have to substitute the URL for &lt;code&gt;https://install.ohmyz.sh&lt;/code&gt; to be able to get the script.&lt;/p&gt; 
&lt;h2&gt;Using Oh My Zsh&lt;/h2&gt; 
&lt;h3&gt;Plugins&lt;/h3&gt; 
&lt;p&gt;Oh My Zsh comes with a shitload of plugins for you to take advantage of. You can take a look in the &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins&quot;&gt;plugins&lt;/a&gt; directory and/or the &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins&quot;&gt;wiki&lt;/a&gt; to see what&#39;s currently available.&lt;/p&gt; 
&lt;h4&gt;Enabling Plugins&lt;/h4&gt; 
&lt;p&gt;Once you spot a plugin (or several) that you&#39;d like to use with Oh My Zsh, you&#39;ll need to enable them in the &lt;code&gt;.zshrc&lt;/code&gt; file. You&#39;ll find the zshrc file in your &lt;code&gt;$HOME&lt;/code&gt; directory. Open it with your favorite text editor and you&#39;ll see a spot to list all the plugins you want to load.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;vi ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, this might begin to look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;plugins=(
  git
  bundler
  dotenv
  macos
  rake
  rbenv
  ruby
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note that the plugins are separated by whitespace (spaces, tabs, new lines...). &lt;strong&gt;Do not&lt;/strong&gt; use commas between them or it will break.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Using Plugins&lt;/h4&gt; 
&lt;p&gt;Each built-in plugin includes a &lt;strong&gt;README&lt;/strong&gt;, documenting it. This README should show the aliases (if the plugin adds any) and extra goodies that are included in that particular plugin.&lt;/p&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;We&#39;ll admit it. Early in the Oh My Zsh world, we may have gotten a bit too theme happy. We have over one hundred and fifty themes now bundled. Most of them have &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/Themes&quot;&gt;screenshots&lt;/a&gt; on the wiki (We are working on updating this!). Check them out!&lt;/p&gt; 
&lt;h4&gt;Selecting A Theme&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Robby&#39;s theme is the default one. It&#39;s not the fanciest one. It&#39;s not the simplest one. It&#39;s just the right one (for him).&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Once you find a theme that you&#39;d like to use, you will need to edit the &lt;code&gt;~/.zshrc&lt;/code&gt; file. You&#39;ll see an environment variable (all caps) in there that looks like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME=&quot;robbyrussell&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use a different theme, simply change the value to match the name of your desired theme. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME=&quot;agnoster&quot; # (this is one of the fancy ones)
# see https://github.com/ohmyzsh/ohmyzsh/wiki/Themes#agnoster
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You will many times see screenshots for a zsh theme, and try it out, and find that it doesn&#39;t look the same for you.&lt;/p&gt; 
 &lt;p&gt;This is because many themes require installing a &lt;a href=&quot;https://github.com/powerline/fonts&quot;&gt;Powerline Font&lt;/a&gt; or a &lt;a href=&quot;https://github.com/ryanoasis/nerd-fonts&quot;&gt;Nerd Font&lt;/a&gt; in order to render properly. Without them, these themes will render weird prompt symbols. Check out &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ#i-have-a-weird-character-in-my-prompt&quot;&gt;the FAQ&lt;/a&gt; for more information.&lt;/p&gt; 
 &lt;p&gt;Also, beware that themes only control what your prompt looks like. This is, the text you see before or after your cursor, where you&#39;ll type your commands. Themes don&#39;t control things such as the colors of your terminal window (known as &lt;em&gt;color scheme&lt;/em&gt;) or the font of your terminal. These are settings that you can change in your terminal emulator. For more information, see &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ#what-is-a-zsh-theme&quot;&gt;what is a zsh theme&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;p&gt;Open up a new terminal window and your prompt should look something like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png&quot; alt=&quot;Agnoster theme&quot;&gt;&lt;/p&gt; 
&lt;p&gt;In case you did not find a suitable theme for your needs, please have a look at the wiki for &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes&quot;&gt;more of them&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you&#39;re feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME=&quot;random&quot; # (...please let it be pie... please be some pie..)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And if you want to pick random theme from a list of your favorite themes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME_RANDOM_CANDIDATES=(
  &quot;robbyrussell&quot;
  &quot;agnoster&quot;
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you only know which themes you don&#39;t like, you can add them similarly to an ignored list:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME_RANDOM_IGNORED=(pygmalion tjkirch_mod)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;p&gt;If you have some more questions or issues, you might find a solution in our &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Advanced Topics&lt;/h2&gt; 
&lt;p&gt;If you&#39;re the type that likes to get their hands dirty, these sections might resonate.&lt;/p&gt; 
&lt;h3&gt;Advanced Installation&lt;/h3&gt; 
&lt;p&gt;Some users may want to manually install Oh My Zsh, or change the default path or other settings that the installer accepts (these settings are also documented at the top of the install script).&lt;/p&gt; 
&lt;h4&gt;Custom Directory&lt;/h4&gt; 
&lt;p&gt;The default location is &lt;code&gt;~/.oh-my-zsh&lt;/code&gt; (hidden in your home directory, you can access it with &lt;code&gt;cd ~/.oh-my-zsh&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;If you&#39;d like to change the install directory with the &lt;code&gt;ZSH&lt;/code&gt; environment variable, either by running &lt;code&gt;export ZSH=/your/path&lt;/code&gt; before installing, or by setting it before the end of the install pipeline like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH=&quot;$HOME/.dotfiles/oh-my-zsh&quot; sh install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Unattended Install&lt;/h4&gt; 
&lt;p&gt;If you&#39;re running the Oh My Zsh install script as part of an automated install, you can pass the &lt;code&gt;--unattended&lt;/code&gt; flag to the &lt;code&gt;install.sh&lt;/code&gt; script. This will have the effect of not trying to change the default shell, and it also won&#39;t run &lt;code&gt;zsh&lt;/code&gt; when the installation has finished.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot; &quot;&quot; --unattended
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;re in China, India, or another country that blocks &lt;code&gt;raw.githubusercontent.com&lt;/code&gt;, you may have to substitute the URL for &lt;code&gt;https://install.ohmyz.sh&lt;/code&gt; for it to install.&lt;/p&gt; 
&lt;h4&gt;Installing From A Forked Repository&lt;/h4&gt; 
&lt;p&gt;The install script also accepts these variables to allow the installation of a different repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;REPO&lt;/code&gt; (default: &lt;code&gt;ohmyzsh/ohmyzsh&lt;/code&gt;): this takes the form of &lt;code&gt;owner/repository&lt;/code&gt;. If you set this variable, the installer will look for a repository at &lt;code&gt;https://github.com/{owner}/{repository}&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;REMOTE&lt;/code&gt; (default: &lt;code&gt;https://github.com/${REPO}.git&lt;/code&gt;): this is the full URL of the git repository clone. You can use this setting if you want to install from a fork that is not on GitHub (GitLab, Bitbucket...) or if you want to clone with SSH instead of HTTPS (&lt;code&gt;git@github.com:user/project.git&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;&lt;em&gt;NOTE: it&#39;s incompatible with setting the &lt;code&gt;REPO&lt;/code&gt; variable. This setting will take precedence.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;BRANCH&lt;/code&gt; (default: &lt;code&gt;master&lt;/code&gt;): you can use this setting if you want to change the default branch to be checked out when cloning the repository. This might be useful for testing a Pull Request, or if you want to use a branch other than &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;REPO=apjanke/oh-my-zsh BRANCH=edge sh install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Manual Installation&lt;/h4&gt; 
&lt;h5&gt;1. Clone The Repository 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;2. &lt;em&gt;Optionally&lt;/em&gt;, Backup Your Existing &lt;code&gt;~/.zshrc&lt;/code&gt; File 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cp ~/.zshrc ~/.zshrc.orig
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;3. Create A New Zsh Configuration File 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;p&gt;You can create a new zsh config file by copying the template that we have included for you.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;4. Change Your Default Shell 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;chsh -s $(which zsh)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You must log out from your user session and log back in to see this change.&lt;/p&gt; 
&lt;h5&gt;5. Initialize Your New Zsh Configuration 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;p&gt;Once you open up a new terminal window, it should load zsh with Oh My Zsh&#39;s configuration.&lt;/p&gt; 
&lt;h3&gt;Installation Problems&lt;/h3&gt; 
&lt;p&gt;If you have any hiccups installing, here are a few common fixes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You &lt;em&gt;might&lt;/em&gt; need to modify your &lt;code&gt;PATH&lt;/code&gt; in &lt;code&gt;~/.zshrc&lt;/code&gt; if you&#39;re not able to find some commands after switching to &lt;code&gt;oh-my-zsh&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If you installed manually or changed the install location, check the &lt;code&gt;ZSH&lt;/code&gt; environment variable in &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Custom Plugins And Themes&lt;/h3&gt; 
&lt;p&gt;If you want to override any of the default behaviors, just add a new file (ending in &lt;code&gt;.zsh&lt;/code&gt;) in the &lt;code&gt;custom/&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;If you have many functions that go well together, you can put them as a &lt;code&gt;XYZ.plugin.zsh&lt;/code&gt; file in the &lt;code&gt;custom/plugins/&lt;/code&gt; directory and then enable this plugin.&lt;/p&gt; 
&lt;p&gt;If you would like to override the functionality of a plugin distributed with Oh My Zsh, create a plugin of the same name in the &lt;code&gt;custom/plugins/&lt;/code&gt; directory and it will be loaded instead of the one in &lt;code&gt;plugins/&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Enable GNU ls In macOS And freeBSD Systems&lt;/h3&gt; 
&lt;p&gt;&lt;a name=&quot;enable-gnu-ls&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The default behaviour in Oh My Zsh is to use BSD &lt;code&gt;ls&lt;/code&gt; in macOS and FreeBSD systems. If GNU &lt;code&gt;ls&lt;/code&gt; is installed (as &lt;code&gt;gls&lt;/code&gt; command), you can choose to use it instead. To do it, you can use zstyle-based config before sourcing &lt;code&gt;oh-my-zsh.sh&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;zstyle &#39;:omz:lib:theme-and-appearance&#39; gnu-ls yes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: this is not compatible with &lt;code&gt;DISABLE_LS_COLORS=true&lt;/code&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Skip Aliases&lt;/h3&gt; 
&lt;p&gt;&lt;a name=&quot;remove-directories-aliases&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you want to skip default Oh My Zsh aliases (those defined in &lt;code&gt;lib/*&lt;/code&gt; files) or plugin aliases, you can use the settings below in your &lt;code&gt;~/.zshrc&lt;/code&gt; file, &lt;strong&gt;before Oh My Zsh is loaded&lt;/strong&gt;. Note that there are many different ways to skip aliases, depending on your needs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Skip all aliases, in lib files and enabled plugins
zstyle &#39;:omz:*&#39; aliases no

# Skip all aliases in lib files
zstyle &#39;:omz:lib:*&#39; aliases no
# Skip only aliases defined in the directories.zsh lib file
zstyle &#39;:omz:lib:directories&#39; aliases no

# Skip all plugin aliases
zstyle &#39;:omz:plugins:*&#39; aliases no
# Skip only the aliases from the git plugin
zstyle &#39;:omz:plugins:git&#39; aliases no
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can combine these in other ways taking into account that more specific scopes take precedence:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Skip all plugin aliases, except for the git plugin
zstyle &#39;:omz:plugins:*&#39; aliases no
zstyle &#39;:omz:plugins:git&#39; aliases yes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A previous version of this feature was using the setting below, which has been removed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:directories&#39; aliases no
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Instead, you can now use the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:lib:directories&#39; aliases no
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Notice 
 &lt;!-- omit in toc --&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This feature is currently in a testing phase and it may be subject to change in the future. It is also not currently compatible with plugin managers such as zpm or zinit, which don&#39;t source the init script (&lt;code&gt;oh-my-zsh.sh&lt;/code&gt;) where this feature is implemented in.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It is also not currently aware of &quot;aliases&quot; that are defined as functions. Example of such are &lt;code&gt;gccd&lt;/code&gt;, &lt;code&gt;ggf&lt;/code&gt;, or &lt;code&gt;ggl&lt;/code&gt; functions from the git plugin.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Async git prompt&lt;/h3&gt; 
&lt;p&gt;Async prompt functions are an experimental feature (included on April 3, 2024) that allows Oh My Zsh to render prompt information asynchronously. This can improve prompt rendering performance, but it might not work well with some setups. We hope that&#39;s not an issue, but if you&#39;re seeing problems with this new feature, you can turn it off by setting the following in your .zshrc file, before Oh My Zsh is sourced:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:alpha:lib:git&#39; async-prompt no
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your problem is that the git prompt just stopped appearing, you can try to force it setting the following configuration before &lt;code&gt;oh-my-zsh.sh&lt;/code&gt; is sourced. If it still does not work, please open an issue with your case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:alpha:lib:git&#39; async-prompt force
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Updates&lt;/h2&gt; 
&lt;p&gt;By default, you will be prompted to check for updates every 2 weeks. You can choose other update modes by adding a line to your &lt;code&gt;~/.zshrc&lt;/code&gt; file, &lt;strong&gt;before Oh My Zsh is loaded&lt;/strong&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Automatic update without confirmation prompt:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:update&#39; mode auto
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Just offer a reminder every few days, if there are updates available:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:update&#39; mode reminder
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To disable automatic updates entirely:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:update&#39; mode disabled
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;NOTE: you can control how often Oh My Zsh checks for updates with the following setting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# This will check for updates every 7 days
zstyle &#39;:omz:update&#39; frequency 7
# This will check for updates every time you open the terminal (not recommended)
zstyle &#39;:omz:update&#39; frequency 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Updates Verbosity&lt;/h3&gt; 
&lt;p&gt;You can also limit the update verbosity with the following settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:update&#39; verbose default # default update prompt

zstyle &#39;:omz:update&#39; verbose minimal # only few lines

zstyle &#39;:omz:update&#39; verbose silent # only errors
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Updates&lt;/h3&gt; 
&lt;p&gt;If you&#39;d like to update at any point in time (maybe someone just released a new plugin and you don&#39;t want to wait a week?) you just need to run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;omz update
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you want to automate this process in a script, you should call directly the &lt;code&gt;upgrade&lt;/code&gt; script, like this:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ZSH/tools/upgrade.sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;See more options in the &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ#how-do-i-update-oh-my-zsh&quot;&gt;FAQ: How do I update Oh My Zsh?&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;USE OF &lt;code&gt;omz update --unattended&lt;/code&gt; HAS BEEN REMOVED, AS IT HAS SIDE EFFECTS&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Magic! 🎉&lt;/p&gt; 
&lt;h2&gt;Uninstalling Oh My Zsh&lt;/h2&gt; 
&lt;p&gt;Oh My Zsh isn&#39;t for everyone. We&#39;ll miss you, but we want to make this an easy breakup.&lt;/p&gt; 
&lt;p&gt;If you want to uninstall &lt;code&gt;oh-my-zsh&lt;/code&gt;, just run &lt;code&gt;uninstall_oh_my_zsh&lt;/code&gt; from the command-line. It will remove itself and revert your previous &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt; configuration.&lt;/p&gt; 
&lt;h2&gt;How Do I Contribute To Oh My Zsh?&lt;/h2&gt; 
&lt;p&gt;Before you participate in our delightful community, please read the &lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/CODE_OF_CONDUCT.md&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;I&#39;m far from being a &lt;a href=&quot;https://www.zsh.org/&quot;&gt;Zsh&lt;/a&gt; expert and suspect there are many ways to improve – if you have ideas on how to make the configuration easier to maintain (and faster), don&#39;t hesitate to fork and send pull requests!&lt;/p&gt; 
&lt;p&gt;We also need people to test out pull requests. So take a look through &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/issues&quot;&gt;the open issues&lt;/a&gt; and help where you can.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Do Not Send Us Themes&lt;/h3&gt; 
&lt;p&gt;We have (more than) enough themes for the time being. Please add your theme to the &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes&quot;&gt;external themes&lt;/a&gt; wiki page.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Oh My Zsh has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn&#39;t be so awesome.&lt;/p&gt; 
&lt;p&gt;Thank you so much!&lt;/p&gt; 
&lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=ohmyzsh/ohmyzsh&quot; width=&quot;100%&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;Follow Us&lt;/h2&gt; 
&lt;p&gt;We&#39;re on social media:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://x.com/ohmyzsh&quot;&gt;@ohmyzsh&lt;/a&gt; on X (formerly Twitter). You should follow it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/Oh-My-Zsh-296616263819290/&quot;&gt;Facebook&lt;/a&gt; poke us.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.instagram.com/_ohmyzsh/&quot;&gt;Instagram&lt;/a&gt; tag us in your post showing Oh My Zsh!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/ohmyzsh&quot;&gt;Discord&lt;/a&gt; to chat with us!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Merchandise&lt;/h2&gt; 
&lt;p&gt;We have &lt;a href=&quot;https://shop.planetargon.com/collections/oh-my-zsh?utm_source=github&quot;&gt;stickers, shirts, and coffee mugs available&lt;/a&gt; for you to show off your love of Oh My Zsh. Again, you will become the talk of the town!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Oh My Zsh is released under the &lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;About Planet Argon&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://pa-github-assets.s3.amazonaws.com/PARGON_logo_digital_COL-small.jpg&quot; alt=&quot;Planet Argon&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Oh My Zsh was started by the team at &lt;a href=&quot;https://www.planetargon.com/?utm_source=github&quot;&gt;Planet Argon&lt;/a&gt;, a &lt;a href=&quot;https://www.planetargon.com/services/ruby-on-rails-development?utm_source=github&quot;&gt;Ruby on Rails development agency&lt;/a&gt;. Check out our &lt;a href=&quot;https://www.planetargon.com/open-source?utm_source=github&quot;&gt;other open source projects&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>xzhih/one-key-hidpi</title>
      <link>https://github.com/xzhih/one-key-hidpi</link>
      <description>&lt;p&gt;Enable macOS HiDPI and have a native setting.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Enable macOS HiDPI&lt;/h1&gt; 
&lt;h2&gt;Explanation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/README.md&quot;&gt;English&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/README-zh.md&quot;&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt; This script can simulate macOS HiDPI on a non-retina display, and have a &quot;Native&quot; Scaled in System Preferences.&lt;/p&gt; 
&lt;p&gt;Some device have wake-up issue, script&#39;s second option may help, it inject a patched EDID, but another problem may exists here.&lt;/p&gt; 
&lt;p&gt;Logo scaling up may not be resolved, cuz the higher resolution is faked.&lt;/p&gt; 
&lt;p&gt;System Preferences&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/img/preferences.jpg&quot; alt=&quot;Preferences&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/img/hidpi.gif&quot; alt=&quot;Preferences&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;1.Remote Mode: Run this script in Terminal&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/hidpi.sh)&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;2.Local Mode: Download ZIP, decompressing it, and double click &lt;code&gt;hidpi.command&lt;/code&gt; to run&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/img/run.jpg&quot; alt=&quot;RUN&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Recovery&lt;/h2&gt; 
&lt;h3&gt;Normal&lt;/h3&gt; 
&lt;p&gt;Still running the script in the terminal, but choose option 3&lt;/p&gt; 
&lt;h3&gt;Recovery mode&lt;/h3&gt; 
&lt;p&gt;If you cant boot into system, or get any another issues, you can boot into macOS Recovery mode, and use the Terminal.app&lt;/p&gt; 
&lt;p&gt;There are two ways to close it. It is recommended to choose the first one&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ls /Volumes/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;you can see all Disk.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /Volumes/&quot;Your System Disk Part&quot;/Users/

ls
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;you can see user home directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd &quot;user name&quot;

./.hidpi-disable
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Remove all injected display&#39;s DisplayVendorID folder under &lt;code&gt;Library/Displays/Contents/Resources/Overrides&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ls /Volumes/
rm -rf /Volumes/&quot;Your System Disk Part&quot;/Library/Displays/Contents/Resources/Overrides
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Inspired&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.tonymacx86.com/threads/solved-black-screen-with-gtx-1070-lg-ultrafine-5k-sierra-10-12-4.219872/page-4#post-1644805&quot;&gt;https://www.tonymacx86.com/threads/solved-black-screen-with-gtx-1070-lg-ultrafine-5k-sierra-10-12-4.219872/page-4#post-1644805&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/syscl/Enable-HiDPI-OSX&quot;&gt;https://github.com/syscl/Enable-HiDPI-OSX&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>datawhalechina/learn-nlp-with-transformers</title>
      <link>https://github.com/datawhalechina/learn-nlp-with-transformers</link>
      <description>&lt;p&gt;we want to create a repo to illustrate usage of transformers in chinese&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;基于transformers的自然语言处理(NLP)入门&lt;/h1&gt; 
&lt;p&gt;Natural Language Processing with transformers. 本项目面向的对象是：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;NLP初学者、transformer初学者&lt;/li&gt; 
 &lt;li&gt;有一定的python、pytorch编程基础&lt;/li&gt; 
 &lt;li&gt;对前沿的transformer模型感兴趣&lt;/li&gt; 
 &lt;li&gt;了解和知道简单的深度学习模型&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本项目的愿景是：&lt;/p&gt; 
&lt;p&gt;希望结合形象生动的原理讲解和多个动手实践项目，帮助初学者快速入门深度学习时代的NLP。&lt;/p&gt; 
&lt;p&gt;本项目的主要参考资料是：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Huggingface/Transformers代码库&lt;/li&gt; 
 &lt;li&gt;多个优秀的Transformer讲解和分享&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;项目成员：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;erenup(&lt;a href=&quot;https://www.zhihu.com/people/nai-ping-46-76&quot;&gt;多多笔记&lt;/a&gt;)，北京大学，负责人&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zhangfanTJU&quot;&gt;张帆&lt;/a&gt;，Datawhale，天津大学，篇章4&lt;/li&gt; 
 &lt;li&gt;张贤，哈尔滨工业大学，篇章2&lt;/li&gt; 
 &lt;li&gt;李泺秋，浙江大学，篇章3&lt;/li&gt; 
 &lt;li&gt;蔡杰，北京大学，篇章4&lt;/li&gt; 
 &lt;li&gt;hlzhang，麦吉尔大学，篇章4&lt;/li&gt; 
 &lt;li&gt;台运鹏 篇章2&lt;/li&gt; 
 &lt;li&gt;张红旭 篇章2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本项目总结和学习了多篇优秀文档和分享，在各个章节均有标注来源，如有侵权，请及时联系项目成员，谢谢。去&lt;a href=&quot;https://github.com/datawhalechina/learn-nlp-with-transformers&quot;&gt;Github点完Star&lt;/a&gt;再学习事半功倍哦😄，谢谢。&lt;/p&gt; 
&lt;h1&gt;项目内容&lt;/h1&gt; 
&lt;h2&gt;篇章1-前言&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A01-%E5%89%8D%E8%A8%80/1.0-%E6%9C%AC%E5%9C%B0%E9%98%85%E8%AF%BB%E5%92%8C%E4%BB%A3%E7%A0%81%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE.md&quot;&gt;1.0-本地阅读和代码运行环境配置.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A01-%E5%89%8D%E8%A8%80/1.1-Transformers%E5%9C%A8NLP%E4%B8%AD%E7%9A%84%E5%85%B4%E8%B5%B7.md&quot;&gt;1.1-Transformers在NLP中的兴起&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;篇章2-Transformer相关原理&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.1-%E5%9B%BE%E8%A7%A3attention.md&quot;&gt;2.1-图解attention&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.2-%E5%9B%BE%E8%A7%A3transformer.md&quot;&gt;2.2-图解transformer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.2.1-Pytorch%E7%BC%96%E5%86%99Transformer.md&quot;&gt;2.2.1-Pytorch编写Transformer.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.2.1-Pytorch%E7%BC%96%E5%86%99Transformer-%E9%80%89%E8%AF%BB.md&quot;&gt;2.2.2-Pytorch编写Transformer-选读.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.3-%E5%9B%BE%E8%A7%A3BERT.md&quot;&gt;2.3-图解BERT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.4-%E5%9B%BE%E8%A7%A3GPT.md&quot;&gt;2.4-图解GPT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.5-%E7%AF%87%E7%AB%A0%E5%B0%8F%E6%B5%8B.md&quot;&gt;2.5-篇章小测&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;篇章3-编写一个Transformer模型：BERT&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A03-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AATransformer%E6%A8%A1%E5%9E%8B%EF%BC%9ABERT/3.1-%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AABERT.md&quot;&gt;3.1-如何实现一个BERT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A03-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AATransformer%E6%A8%A1%E5%9E%8B%EF%BC%9ABERT/3.2-%E5%A6%82%E4%BD%95%E5%BA%94%E7%94%A8%E4%B8%80%E4%B8%AABERT.md&quot;&gt;3.2-如何应用一个BERT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A03-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AATransformer%E6%A8%A1%E5%9E%8B%EF%BC%9ABERT/3.3-%E7%AF%87%E7%AB%A0%E5%B0%8F%E6%B5%8B.md&quot;&gt;3.3-篇章小测&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;篇章4-使用Transformers解决NLP任务&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.0-%E5%89%8D%E8%A8%80.md&quot;&gt;4.0-前言&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.1-%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB.md&quot;&gt;4.1-文本分类&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.2-%E5%BA%8F%E5%88%97%E6%A0%87%E6%B3%A8.md&quot;&gt;4.2-序列标注&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.3-%E9%97%AE%E7%AD%94%E4%BB%BB%E5%8A%A1-%E6%8A%BD%E5%8F%96%E5%BC%8F%E9%97%AE%E7%AD%94.md&quot;&gt;4.3-问答任务-抽取式问答&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.4-%E9%97%AE%E7%AD%94%E4%BB%BB%E5%8A%A1-%E5%A4%9A%E9%80%89%E9%97%AE%E7%AD%94.md&quot;&gt;4.4-问答任务-多选问答&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.5-%E7%94%9F%E6%88%90%E4%BB%BB%E5%8A%A1-%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B.md&quot;&gt;4.5-生成任务-语言模型&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.6-%E7%94%9F%E6%88%90%E4%BB%BB%E5%8A%A1-%E6%9C%BA%E5%99%A8%E7%BF%BB%E8%AF%91.md&quot;&gt;4.6-生成任务-机器翻译&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.7-%E7%94%9F%E6%88%90%E4%BB%BB%E5%8A%A1-%E6%91%98%E8%A6%81%E7%94%9F%E6%88%90.md&quot;&gt;4.7-生成任务-摘要生成&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.8-%E7%AF%87%E7%AB%A0%E5%B0%8F%E6%B5%8B.md&quot;&gt;4.8-篇章小测&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>zsh-users/zsh-autosuggestions</title>
      <link>https://github.com/zsh-users/zsh-autosuggestions</link>
      <description>&lt;p&gt;Fish-like autosuggestions for zsh&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;zsh-autosuggestions&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://fishshell.com/&quot;&gt;Fish&lt;/a&gt;-like fast/unobtrusive autosuggestions for zsh.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;It suggests commands as you type based on history and completions.&lt;/p&gt; 
&lt;p&gt;Requirements: Zsh v4.3.11 or later&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitter.im/zsh-users/zsh-autosuggestions&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/zsh-users/zsh-autosuggestions.svg?sanitize=true&quot; alt=&quot;Chat on Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://asciinema.org/a/37390&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://asciinema.org/a/37390.png&quot; width=&quot;400&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/zsh-users/zsh-autosuggestions/master/INSTALL.md&quot;&gt;INSTALL.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;As you type commands, you will see a completion offered after the cursor in a muted gray color. This color can be changed by setting the &lt;code&gt;ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE&lt;/code&gt; variable. See &lt;a href=&quot;https://raw.githubusercontent.com/zsh-users/zsh-autosuggestions/master/#configuration&quot;&gt;configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you press the &lt;kbd&gt;→&lt;/kbd&gt; key (&lt;code&gt;forward-char&lt;/code&gt; widget) or &lt;kbd&gt;End&lt;/kbd&gt; (&lt;code&gt;end-of-line&lt;/code&gt; widget) with the cursor at the end of the buffer, it will accept the suggestion, replacing the contents of the command line buffer with the suggestion.&lt;/p&gt; 
&lt;p&gt;If you invoke the &lt;code&gt;forward-word&lt;/code&gt; widget, it will partially accept the suggestion up to the point that the cursor moves to.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;You may want to override the default global config variables. Default values of these variables can be found &lt;a href=&quot;https://raw.githubusercontent.com/zsh-users/zsh-autosuggestions/master/src/config.zsh&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are using Oh My Zsh, you can put this configuration in a file in the &lt;code&gt;$ZSH_CUSTOM&lt;/code&gt; directory. See their comments on &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh/wiki/Customization#overriding-internals&quot;&gt;overriding internals&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Suggestion Highlight Style&lt;/h3&gt; 
&lt;p&gt;Set &lt;code&gt;ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE&lt;/code&gt; to configure the style that the suggestion is shown with. The default is &lt;code&gt;fg=8&lt;/code&gt;, which will set the foreground color to color 8 from the &lt;a href=&quot;https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg&quot;&gt;256-color palette&lt;/a&gt;. If your terminal only supports 8 colors, you will need to use a number between 0 and 7.&lt;/p&gt; 
&lt;p&gt;Background color can also be set, and the suggestion can be styled bold, underlined, or standout. For example, this would show suggestions with bold, underlined, pink text on a cyan background:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=&quot;fg=#ff00ff,bg=cyan,bold,underline&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more info, read the Character Highlighting section of the zsh manual: &lt;code&gt;man zshzle&lt;/code&gt; or &lt;a href=&quot;http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html#Character-Highlighting&quot;&gt;online&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some iTerm2 users have reported &lt;a href=&quot;https://github.com/zsh-users/zsh-autosuggestions/issues/416#issuecomment-486516333&quot;&gt;not being able to see the suggestions&lt;/a&gt;. If this affects you, the problem is likely caused by incorrect color settings. In order to correct this, go into iTerm2&#39;s setting, navigate to profile &amp;gt; colors and make sure that the colors for Basic Colors &amp;gt; Background and ANSI Colors &amp;gt; Bright Black are &lt;strong&gt;different&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Suggestion Strategy&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ZSH_AUTOSUGGEST_STRATEGY&lt;/code&gt; is an array that specifies how suggestions should be generated. The strategies in the array are tried successively until a suggestion is found. There are currently three built-in strategies to choose from:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;history&lt;/code&gt;: Chooses the most recent match from history.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;completion&lt;/code&gt;: Chooses a suggestion based on what tab-completion would suggest. (requires &lt;code&gt;zpty&lt;/code&gt; module, which is included with zsh since 4.0.1)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;match_prev_cmd&lt;/code&gt;: Like &lt;code&gt;history&lt;/code&gt;, but chooses the most recent match whose preceding history item matches the most recently executed command (&lt;a href=&quot;https://raw.githubusercontent.com/zsh-users/zsh-autosuggestions/master/src/strategies/match_prev_cmd.zsh&quot;&gt;more info&lt;/a&gt;). Note that this strategy won&#39;t work as expected with ZSH options that don&#39;t preserve the history order such as &lt;code&gt;HIST_IGNORE_ALL_DUPS&lt;/code&gt; or &lt;code&gt;HIST_EXPIRE_DUPS_FIRST&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, setting &lt;code&gt;ZSH_AUTOSUGGEST_STRATEGY=(history completion)&lt;/code&gt; will first try to find a suggestion from your history, but, if it can&#39;t find a match, will find a suggestion from the completion engine.&lt;/p&gt; 
&lt;h3&gt;Widget Mapping&lt;/h3&gt; 
&lt;p&gt;This plugin works by triggering custom behavior when certain &lt;a href=&quot;http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html#Zle-Widgets&quot;&gt;zle widgets&lt;/a&gt; are invoked. You can add and remove widgets from these arrays to change the behavior of this plugin:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ZSH_AUTOSUGGEST_CLEAR_WIDGETS&lt;/code&gt;: Widgets in this array will clear the suggestion when invoked.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ZSH_AUTOSUGGEST_ACCEPT_WIDGETS&lt;/code&gt;: Widgets in this array will accept the suggestion when invoked.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ZSH_AUTOSUGGEST_EXECUTE_WIDGETS&lt;/code&gt;: Widgets in this array will execute the suggestion when invoked.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS&lt;/code&gt;: Widgets in this array will partially accept the suggestion when invoked.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ZSH_AUTOSUGGEST_IGNORE_WIDGETS&lt;/code&gt;: Widgets in this array will not trigger any custom behavior.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Widgets that modify the buffer and are not found in any of these arrays will fetch a new suggestion after they are invoked.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; A widget shouldn&#39;t belong to more than one of the above arrays.&lt;/p&gt; 
&lt;h3&gt;Disabling suggestion for large buffers&lt;/h3&gt; 
&lt;p&gt;Set &lt;code&gt;ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE&lt;/code&gt; to an integer value to disable autosuggestion for large buffers. The default is unset, which means that autosuggestion will be tried for any buffer size. Recommended value is 20. This can be useful when pasting large amount of text in the terminal, to avoid triggering autosuggestion for strings that are too long.&lt;/p&gt; 
&lt;h3&gt;Asynchronous Mode&lt;/h3&gt; 
&lt;p&gt;Suggestions are fetched asynchronously by default in zsh versions 5.0.8 and greater. To disable asynchronous suggestions and fetch them synchronously instead, &lt;code&gt;unset ZSH_AUTOSUGGEST_USE_ASYNC&lt;/code&gt; after sourcing the plugin.&lt;/p&gt; 
&lt;p&gt;Alternatively, if you are using a version of zsh older than 5.0.8 and want to enable asynchronous mode, set the &lt;code&gt;ZSH_AUTOSUGGEST_USE_ASYNC&lt;/code&gt; variable after sourcing the plugin (it can be set to anything). Note that there is &lt;a href=&quot;https://github.com/zsh-users/zsh-autosuggestions/issues/364#issuecomment-481423232&quot;&gt;a bug&lt;/a&gt; in versions of zsh older than 5.0.8 where &lt;kbd&gt;ctrl&lt;/kbd&gt; + &lt;kbd&gt;c&lt;/kbd&gt; will fail to reset the prompt immediately after fetching a suggestion asynchronously.&lt;/p&gt; 
&lt;h3&gt;Disabling automatic widget re-binding&lt;/h3&gt; 
&lt;p&gt;Set &lt;code&gt;ZSH_AUTOSUGGEST_MANUAL_REBIND&lt;/code&gt; (it can be set to anything) to disable automatic widget re-binding on each precmd. This can be a big boost to performance, but you&#39;ll need to handle re-binding yourself if any of the widget lists change or if you or another plugin wrap any of the autosuggest widgets. To re-bind widgets, run &lt;code&gt;_zsh_autosuggest_bind_widgets&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Ignoring history suggestions that match a pattern&lt;/h3&gt; 
&lt;p&gt;Set &lt;code&gt;ZSH_AUTOSUGGEST_HISTORY_IGNORE&lt;/code&gt; to a &lt;a href=&quot;http://zsh.sourceforge.net/Doc/Release/Expansion.html#Glob-Operators&quot;&gt;glob pattern&lt;/a&gt; to prevent offering suggestions for history entries that match the pattern. For example, set it to &lt;code&gt;&quot;cd *&quot;&lt;/code&gt; to never suggest any &lt;code&gt;cd&lt;/code&gt; commands from history. Or set to &lt;code&gt;&quot;?(#c50,)&quot;&lt;/code&gt; to never suggest anything 50 characters or longer.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This only affects the &lt;code&gt;history&lt;/code&gt; and &lt;code&gt;match_prev_cmd&lt;/code&gt; suggestion strategies.&lt;/p&gt; 
&lt;h3&gt;Skipping completion suggestions for certain cases&lt;/h3&gt; 
&lt;p&gt;Set &lt;code&gt;ZSH_AUTOSUGGEST_COMPLETION_IGNORE&lt;/code&gt; to a &lt;a href=&quot;http://zsh.sourceforge.net/Doc/Release/Expansion.html#Glob-Operators&quot;&gt;glob pattern&lt;/a&gt; to prevent offering completion suggestions when the buffer matches that pattern. For example, set it to &lt;code&gt;&quot;git *&quot;&lt;/code&gt; to disable completion suggestions for git subcommands.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This only affects the &lt;code&gt;completion&lt;/code&gt; suggestion strategy.&lt;/p&gt; 
&lt;h3&gt;Key Bindings&lt;/h3&gt; 
&lt;p&gt;This plugin provides a few widgets that you can use with &lt;code&gt;bindkey&lt;/code&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;autosuggest-accept&lt;/code&gt;: Accepts the current suggestion.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;autosuggest-execute&lt;/code&gt;: Accepts and executes the current suggestion.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;autosuggest-clear&lt;/code&gt;: Clears the current suggestion.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;autosuggest-fetch&lt;/code&gt;: Fetches a suggestion (works even when suggestions are disabled).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;autosuggest-disable&lt;/code&gt;: Disables suggestions.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;autosuggest-enable&lt;/code&gt;: Re-enables suggestions.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;autosuggest-toggle&lt;/code&gt;: Toggles between enabled/disabled suggestions.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For example, this would bind &lt;kbd&gt;ctrl&lt;/kbd&gt; + &lt;kbd&gt;space&lt;/kbd&gt; to accept the current suggestion.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;bindkey &#39;^ &#39; autosuggest-accept
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you have a problem, please search through &lt;a href=&quot;https://github.com/zsh-users/zsh-autosuggestions/issues?q=&quot;&gt;the list of issues on GitHub&lt;/a&gt; to see if someone else has already reported it.&lt;/p&gt; 
&lt;h3&gt;Reporting an Issue&lt;/h3&gt; 
&lt;p&gt;Before reporting an issue, please try temporarily disabling sections of your configuration and other plugins that may be conflicting with this plugin to isolate the problem.&lt;/p&gt; 
&lt;p&gt;When reporting an issue, please include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The smallest, simplest &lt;code&gt;.zshrc&lt;/code&gt; configuration that will reproduce the problem. See &lt;a href=&quot;https://github.com/zsh-users/zsh-autosuggestions/issues/102#issuecomment-180944764&quot;&gt;this comment&lt;/a&gt; for a good example of what this means.&lt;/li&gt; 
 &lt;li&gt;The version of zsh you&#39;re using (&lt;code&gt;zsh --version&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Which operating system you&#39;re running&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Uninstallation&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Remove the code referencing this plugin from &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Remove the git repository from your hard drive&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rm -rf ~/.zsh/zsh-autosuggestions # Or wherever you installed
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Build Process&lt;/h3&gt; 
&lt;p&gt;Edit the source files in &lt;code&gt;src/&lt;/code&gt;. Run &lt;code&gt;make&lt;/code&gt; to build &lt;code&gt;zsh-autosuggestions.zsh&lt;/code&gt; from those source files.&lt;/p&gt; 
&lt;h3&gt;Pull Requests&lt;/h3&gt; 
&lt;p&gt;Pull requests are welcome! If you send a pull request, please:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Request to merge into the &lt;code&gt;develop&lt;/code&gt; branch (&lt;em&gt;NOT&lt;/em&gt; &lt;code&gt;master&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Match the existing coding conventions.&lt;/li&gt; 
 &lt;li&gt;Include helpful comments to keep the barrier-to-entry low for people new to the project.&lt;/li&gt; 
 &lt;li&gt;Write tests that cover your code as much as possible.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;p&gt;Tests are written in ruby using the &lt;a href=&quot;http://rspec.info/&quot;&gt;&lt;code&gt;rspec&lt;/code&gt;&lt;/a&gt; framework. They use &lt;a href=&quot;https://tmux.github.io/&quot;&gt;&lt;code&gt;tmux&lt;/code&gt;&lt;/a&gt; to drive a pseudoterminal, sending simulated keystrokes and making assertions on the terminal content.&lt;/p&gt; 
&lt;p&gt;Test files live in &lt;code&gt;spec/&lt;/code&gt;. To run the tests, run &lt;code&gt;make test&lt;/code&gt;. To run a specific test, run &lt;code&gt;TESTS=spec/some_spec.rb make test&lt;/code&gt;. You can also specify a &lt;code&gt;zsh&lt;/code&gt; binary to use by setting the &lt;code&gt;TEST_ZSH_BIN&lt;/code&gt; environment variable (ex: &lt;code&gt;TEST_ZSH_BIN=/bin/zsh make test&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;It&#39;s possible to run the tests for any supported version of zsh in a Docker image by building an image from the provided Dockerfile. To build the docker image for a specific version of zsh (where &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; below is substituted with the contents of a line from the &lt;a href=&quot;https://raw.githubusercontent.com/zsh-users/zsh-autosuggestions/master/ZSH_VERSIONS&quot;&gt;&lt;code&gt;ZSH_VERSIONS&lt;/code&gt;&lt;/a&gt; file), run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;docker build --build-arg TEST_ZSH_VERSION=&amp;lt;version&amp;gt; -t zsh-autosuggestions-test .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After building the image, run the tests via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;docker run -it -v $PWD:/zsh-autosuggestions zsh-autosuggestions-test make test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under &lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;. For the full text of the license, see the &lt;a href=&quot;https://raw.githubusercontent.com/zsh-users/zsh-autosuggestions/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>n8n-io/n8n-hosting</title>
      <link>https://github.com/n8n-io/n8n-hosting</link>
      <description>&lt;p&gt;Example of self-hosting n8n in various environments like docker, kubernetes, etc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;n8n-hosting&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>bioconda/bioconda-recipes</title>
      <link>https://github.com/bioconda/bioconda-recipes</link>
      <description>&lt;p&gt;Conda recipes for the bioconda channel.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bioconda/bioconda-recipes/master/logo/bioconda_monochrome_small.png&quot; alt=&quot;&quot; title=&quot;Bioconda&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;The bioconda channel&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitter.im/bioconda/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/bioconda/bioconda-recipes.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://anaconda.org&quot;&gt;Conda&lt;/a&gt; is a platform- and language-independent package manager that supports easy distribution, installation and version management of software. The &lt;a href=&quot;https://anaconda.org/bioconda&quot;&gt;bioconda channel&lt;/a&gt; is a Conda channel providing bioinformatics related packages for &lt;strong&gt;Linux&lt;/strong&gt; and &lt;strong&gt;macOS&lt;/strong&gt;, supporting both x86_64 and aarch64/arm64 architectures. This repository hosts the corresponding recipes.&lt;/p&gt; 
&lt;h2&gt;User guide&lt;/h2&gt; 
&lt;p&gt;Please visit &lt;a href=&quot;https://bioconda.github.io&quot;&gt;https://bioconda.github.io&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Developer guide&lt;/h2&gt; 
&lt;p&gt;Please visit the new docs at &lt;a href=&quot;https://bioconda.github.io/contributor/index.html&quot;&gt;https://bioconda.github.io/contributor/index.html&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Nightly build status&lt;/h2&gt; 
&lt;p&gt;The nightly uploader jobs build any recipes that exist on master but were not successfully uploaded to the &lt;a href=&quot;https://anaconda.org/bioconda&quot;&gt;bioconda channel&lt;/a&gt;. Any failure in the nightly build should be resolved with a PR for the affected recipe.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;arch&lt;/th&gt; 
   &lt;th&gt;build status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;linux-64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://dev.azure.com/bioconda/bioconda-recipes/_build/latest?definitionId=4&quot;&gt;&lt;img src=&quot;https://dev.azure.com/bioconda/bioconda-recipes/_apis/build/status/Nightly%20uploader?branchName=master&amp;amp;jobName=build_and_push_linux&amp;amp;label=Nightly%20linux-64&quot; alt=&quot;Nightly linux-64&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;osx-64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://dev.azure.com/bioconda/bioconda-recipes/_build/latest?definitionId=4&quot;&gt;&lt;img src=&quot;https://dev.azure.com/bioconda/bioconda-recipes/_apis/build/status/Nightly%20uploader?branchName=master&amp;amp;jobName=build_and_push_osx&amp;amp;label=Nightly%20osx-64&quot; alt=&quot;Nightly osx-64&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;osx-arm64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/bioconda/bioconda-recipes/actions/workflows/nightly.yml&quot;&gt;&lt;img src=&quot;https://github.com/bioconda/bioconda-recipes/actions/workflows/nightly.yml/badge.svg?sanitize=true&quot; alt=&quot;Nightly osx-arm64&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;linux-aarch64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://app.circleci.com/insights/github/bioconda/bioconda-recipes/workflows/Nightly%20(ARM)/overview?branch=master&amp;amp;reporting-window=last-24-hours&quot;&gt;&lt;img src=&quot;https://dl.circleci.com/insights-snapshot/gh/bioconda/bioconda-recipes/master/Nightly%20(ARM)/badge.svg?window=24h&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>yuaotian/go-cursor-help</title>
      <link>https://github.com/yuaotian/go-cursor-help</link>
      <description>&lt;p&gt;解决Cursor在免费订阅期间出现以下提示的问题: You&#39;ve reached your trial request limit. / Too many free trial accounts used on this machine. Please upgrade to pro. We have this limit in place to prevent abuse. Please let us know if you believe this is a mistake.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🚀 Cursor Free Trial Reset Tool&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/yuaotian/go-cursor-help/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/yuaotian/go-cursor-help?style=flat-square&amp;amp;logo=github&amp;amp;color=blue&quot; alt=&quot;Release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yuaotian/go-cursor-help/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&amp;amp;logo=bookstack&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yuaotian/go-cursor-help/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/yuaotian/go-cursor-help?style=flat-square&amp;amp;logo=github&quot; alt=&quot;Stars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/README.md&quot;&gt;🌟 English&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/README_CN.md&quot;&gt;🌏 中文&lt;/a&gt;&lt;/p&gt; 
 &lt;img src=&quot;https://ai-cursor.com/wp-content/uploads/2024/09/logo-cursor-ai-png.webp&quot; alt=&quot;Cursor Logo&quot; width=&quot;120&quot;&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;IMPORTANT NOTICE&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;This tool currently supports:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ Cursor v0.44.11 and below&lt;/li&gt; 
  &lt;li&gt;✅ Windows: Latest 0.47.x versions (Supported)&lt;/li&gt; 
  &lt;li&gt;✅ Mac/Linux: Latest 0.47.x versions (Supported, feedback welcome)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Please check your Cursor version before using this tool.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;📦 Version History &amp;amp; Downloads&lt;/b&gt;&lt;/summary&gt; 
 &lt;div class=&quot;version-card&quot; style=&quot;background: linear-gradient(135deg, #6e8efb, #a777e3); border-radius: 8px; padding: 15px; margin: 10px 0; color: white;&quot;&gt; 
  &lt;h3&gt;🌟 Latest Versions&lt;/h3&gt; 
  &lt;ul&gt; 
   &lt;li&gt;v0.45.11 (2025-02-07) - Latest Release&lt;/li&gt; 
   &lt;li&gt;v0.44.11 (2025-01-03) - Most Stable Release&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/CursorHistoryDown.md&quot;&gt;View Full Version History&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;📥 Direct Download Links&lt;/h3&gt; 
 &lt;p&gt;&lt;strong&gt;v0.44.11 (Recommended Stable Version)&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Windows: &lt;a href=&quot;https://downloader.cursor.sh/builds/250103fqxdt5u9z/windows/nsis/x64&quot;&gt;Official&lt;/a&gt; | &lt;a href=&quot;https://download.todesktop.com/230313mzl4w4u92/Cursor%20Setup%200.44.11%20-%20Build%20250103fqxdt5u9z-x64.exe&quot;&gt;Mirror&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Mac: &lt;a href=&quot;https://dl.todesktop.com/230313mzl4w4u92/versions/0.44.11/mac/zip/arm64&quot;&gt;Apple Silicon&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;⚠️ &lt;strong&gt;MAC Address Modification Warning&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For Mac users: This script includes a MAC address modification feature that will:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Modify your network interface&#39;s MAC address&lt;/li&gt; 
  &lt;li&gt;Backup original MAC addresses before modification&lt;/li&gt; 
  &lt;li&gt;This modification may temporarily affect network connectivity&lt;/li&gt; 
  &lt;li&gt;You can skip this step when prompted during execution&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;💾 &lt;strong&gt;Download Cursor v0.44.11&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Windows:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://downloader.cursor.sh/builds/250103fqxdt5u9z/windows/nsis/x64&quot;&gt;Download from Cursor Official&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://download.todesktop.com/230313mzl4w4u92/Cursor%20Setup%200.44.11%20-%20Build%20250103fqxdt5u9z-x64.exe&quot;&gt;Download from ToDesktop&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Mac:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://dl.todesktop.com/230313mzl4w4u92/versions/0.44.11/mac/zip/arm64&quot;&gt;Download for Mac (Apple Silicon)&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🔒 Disable Auto-Update Feature&lt;/b&gt;&lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;To prevent Cursor from automatically updating to unsupported new versions, you can choose to disable the auto-update feature.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;Method 1: Using Built-in Script (Recommended)&lt;/h4&gt; 
 &lt;p&gt;When running the reset tool, the script will ask if you want to disable auto-updates:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[Question] Do you want to disable Cursor auto-update feature?
0) No - Keep default settings (Press Enter)
1) Yes - Disable auto-update
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Select &lt;code&gt;1&lt;/code&gt; to automatically complete the disable operation.&lt;/p&gt; 
 &lt;h4&gt;Method 2: Manual Disable&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Close all Cursor processes&lt;/li&gt; 
  &lt;li&gt;Delete directory: &lt;code&gt;%LOCALAPPDATA%\cursor-updater&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Create a file with the same name (without extension) in the same location&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;strong&gt;macOS:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# NOTE: As tested, this method only works for version 0.45.11 and below.
# Close Cursor
pkill -f &quot;Cursor&quot;
# Replacing app-update.yml with a blank/read-only file
cd /Applications/Cursor.app/Contents/Resources
mv app-update.yml app-update.yml.bak
touch app-update.yml
chmod 444 app-update.yml

# Go to Settings -&amp;gt; Application -&amp;gt; Update, set Mode to none.
# This must be done to prevent Cursor from checking for updates.

# NOTE: The cursor-updater modification method may no longer be effective
# In any case, remove update directory and create blocking file
rm -rf ~/Library/Application\ Support/Caches/cursor-updater
touch ~/Library/Application\ Support/Caches/cursor-updater
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Close Cursor
pkill -f &quot;Cursor&quot;
# Remove update directory and create blocking file
rm -rf ~/.config/cursor-updater
touch ~/.config/cursor-updater
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;⚠️ &lt;strong&gt;Note:&lt;/strong&gt; After disabling auto-updates, you&#39;ll need to manually download and install new versions. It&#39;s recommended to update only after confirming the new version is compatible.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;📝 Description&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;When you encounter any of these messages:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Issue 1: Trial Account Limit &lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/#issue1&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Move%20to%20Solution-Blue?style=plastic&quot; alt=&quot;Back To Top&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Too many free trial accounts used on this machine.
Please upgrade to pro. We have this limit in place
to prevent abuse. Please let us know if you believe
this is a mistake.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Issue 2: API Key Limitation &lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/#issue2&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Move%20to%20Solution-green?style=plastic&quot; alt=&quot;Back To Top&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[New Issue]

Composer relies on custom models that cannot be billed to an API key.
Please disable API keys and use a Pro or Business subscription.
Request ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Issue 3: Trial Request Limit&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This indicates you&#39;ve reached the usage limit during the VIP free trial period:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;You&#39;ve reached your trial request limit.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Issue 4: Claude 3.7 High Load &lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/#issue4&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Move%20to%20Solution-purple?style=plastic&quot; alt=&quot;Back To Top&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;High Load 
We&#39;re experiencing high demand for Claude 3.7 Sonnet right now. Please upgrade to Pro, or switch to the
&#39;default&#39; model, Claude 3.5 sonnet, another model, or try again in a few moments.
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;p id=&quot;issue2&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Solution : Uninstall Cursor Completely And Reinstall (API key Issue)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download &lt;a href=&quot;https://geekuninstaller.com/download&quot;&gt;Geek.exe Uninstaller[Free]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Uninstall Cursor app completely&lt;/li&gt; 
 &lt;li&gt;Re-Install Cursor app&lt;/li&gt; 
 &lt;li&gt;Continue to Solution 1&lt;/li&gt; 
&lt;/ol&gt; 
&lt;br&gt; 
&lt;p id=&quot;issue1&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Temporary Solution:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Solution 1: Quick Reset (Recommended)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Close Cursor application&lt;/li&gt; 
 &lt;li&gt;Run the machine code reset script (see installation instructions below)&lt;/li&gt; 
 &lt;li&gt;Reopen Cursor to continue using&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Solution 2: Account Switch&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;File -&amp;gt; Cursor Settings -&amp;gt; Sign Out&lt;/li&gt; 
 &lt;li&gt;Close Cursor&lt;/li&gt; 
 &lt;li&gt;Run the machine code reset script&lt;/li&gt; 
 &lt;li&gt;Login with a new account&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Solution 3: Network Optimization&lt;/h4&gt; 
&lt;p&gt;If the above solutions don&#39;t work, try:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Switch to low-latency nodes (Recommended regions: Japan, Singapore, US, Hong Kong)&lt;/li&gt; 
 &lt;li&gt;Ensure network stability&lt;/li&gt; 
 &lt;li&gt;Clear browser cache and retry&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Solution 4: Claude 3.7 Access Issue (High Load)&lt;/h4&gt; 
&lt;p&gt;If you see the &quot;High Load&quot; message for Claude 3.7 Sonnet, this indicates Cursor is limiting free trial accounts from using the 3.7 model during certain times of the day. Try:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Switch to a new account created with Gmail, possibly connecting through a different IP address&lt;/li&gt; 
 &lt;li&gt;Try accessing during off-peak hours (typically 5-10 AM or 3-7 PM when restrictions are often lighter)&lt;/li&gt; 
 &lt;li&gt;Consider upgrading to Pro for guaranteed access&lt;/li&gt; 
 &lt;li&gt;Use Claude 3.5 Sonnet as a fallback option&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: These access patterns may change as Cursor adjusts their resource allocation policies.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;💻 System Support&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt; ✅&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;x64 (64-bit)&lt;/li&gt; 
     &lt;li&gt;x86 (32-bit)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt; ✅&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Intel (x64)&lt;/li&gt; 
     &lt;li&gt;Apple Silicon (M1/M2)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt; ✅&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;x64 (64-bit)&lt;/li&gt; 
     &lt;li&gt;x86 (32-bit)&lt;/li&gt; 
     &lt;li&gt;ARM64&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;🚀 One-Click Solution&lt;/h3&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;Global Users&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh | sudo bash 
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh | sudo bash 
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;irm https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div align=&quot;center&quot;&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/run_success.png&quot; alt=&quot;Run Success&quot; width=&quot;600&quot;&gt; 
 &lt;/div&gt; 
&lt;/details&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;China Users (Recommended)&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_linux_id_modifier.sh | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;Windows Terminal Run and Configuration&lt;/b&gt;&lt;/summary&gt; 
 &lt;h4&gt;How to Open Administrator Terminal in Windows:&lt;/h4&gt; 
 &lt;h5&gt;Method 1: Using Win + X Shortcut&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;1. Press Win + X key combination
2. Select one of these options from the menu:
   - &quot;Windows PowerShell (Administrator)&quot;
   - &quot;Windows Terminal (Administrator)&quot;
   - &quot;Terminal (Administrator)&quot;
   (Options may vary depending on Windows version)
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Method 2: Using Win + R Run Command&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;1. Press Win + R key combination
2. Type powershell or pwsh in the Run dialog
3. Press Ctrl + Shift + Enter to run as administrator
   or type in the opened window: Start-Process pwsh -Verb RunAs
4. Enter the reset script in the administrator terminal:

irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Method 3: Using Search&lt;/h5&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/pwsh_1.png&quot; alt=&quot;Search PowerShell&quot;&gt;&lt;/p&gt; 
  &lt;p&gt;Type pwsh in the search box, right-click and select &quot;Run as administrator&quot; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/pwsh_2.png&quot; alt=&quot;Run as Administrator&quot;&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;Enter the reset script in the administrator terminal:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;🔧 PowerShell Installation Guide&lt;/h3&gt; 
 &lt;p&gt;If PowerShell is not installed on your system, you can install it using one of these methods:&lt;/p&gt; 
 &lt;h4&gt;Method 1: Install via Winget (Recommended)&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open Command Prompt or PowerShell&lt;/li&gt; 
  &lt;li&gt;Run the following command:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;winget install --id Microsoft.PowerShell --source winget
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Method 2: Manual Installation&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Download the installer for your system:&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/PowerShell-7.4.6-win-x64.msi&quot;&gt;PowerShell-7.4.6-win-x64.msi&lt;/a&gt; (64-bit systems)&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/PowerShell-7.4.6-win-x86.msi&quot;&gt;PowerShell-7.4.6-win-x86.msi&lt;/a&gt; (32-bit systems)&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/PowerShell-7.4.6-win-arm64.msi&quot;&gt;PowerShell-7.4.6-win-arm64.msi&lt;/a&gt; (ARM64 systems)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Double-click the downloaded installer and follow the installation prompts&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;💡 If you encounter any issues, please refer to the &lt;a href=&quot;https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows&quot;&gt;Microsoft Official Installation Guide&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;h4&gt;Windows 安装特性:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔍 Automatically detects and uses PowerShell 7 if available&lt;/li&gt; 
 &lt;li&gt;🛡️ Requests administrator privileges via UAC prompt&lt;/li&gt; 
 &lt;li&gt;📝 Falls back to Windows PowerShell if PS7 isn&#39;t found&lt;/li&gt; 
 &lt;li&gt;💡 Provides manual instructions if elevation fails&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;That&#39;s it! The script will:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;✨ Install the tool automatically&lt;/li&gt; 
 &lt;li&gt;🔄 Reset your Cursor trial immediately&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;📦 Manual Installation&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Download the appropriate file for your system from &lt;a href=&quot;https://github.com/yuaotian/go-cursor-help/releases/latest&quot;&gt;releases&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;Windows Packages&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;64-bit: &lt;code&gt;cursor-id-modifier_windows_x64.exe&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;32-bit: &lt;code&gt;cursor-id-modifier_windows_x86.exe&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;macOS Packages&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Intel: &lt;code&gt;cursor-id-modifier_darwin_x64_intel&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;M1/M2: &lt;code&gt;cursor-id-modifier_darwin_arm64_apple_silicon&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Linux Packages&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;64-bit: &lt;code&gt;cursor-id-modifier_linux_x64&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;32-bit: &lt;code&gt;cursor-id-modifier_linux_x86&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;ARM64: &lt;code&gt;cursor-id-modifier_linux_arm64&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;🔧 Technical Details&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Configuration Files&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The program modifies Cursor&#39;s &lt;code&gt;storage.json&lt;/code&gt; config file located at:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Windows: &lt;code&gt;%APPDATA%\Cursor\User\globalStorage\storage.json&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;macOS: &lt;code&gt;~/Library/Application Support/Cursor/User/globalStorage/storage.json&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Linux: &lt;code&gt;~/.config/Cursor/User/globalStorage/storage.json&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Modified Fields&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The tool generates new unique identifiers for:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;telemetry.machineId&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;telemetry.macMachineId&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;telemetry.devDeviceId&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;telemetry.sqmId&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Manual Auto-Update Disable&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Windows users can manually disable the auto-update feature:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Close all Cursor processes&lt;/li&gt; 
  &lt;li&gt;Delete directory: &lt;code&gt;C:\Users\username\AppData\Local\cursor-updater&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Create a file with the same name: &lt;code&gt;cursor-updater&lt;/code&gt; (without extension)&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;macOS/Linux users can try to locate similar &lt;code&gt;cursor-updater&lt;/code&gt; directory in their system and perform the same operation.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Safety Features&lt;/b&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ Safe process termination&lt;/li&gt; 
  &lt;li&gt;✅ Atomic file operations&lt;/li&gt; 
  &lt;li&gt;✅ Error handling and recovery&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Registry Modification Notice&lt;/b&gt;&lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;⚠️ &lt;strong&gt;Important: This tool modifies the Windows Registry&lt;/strong&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;Modified Registry&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Path: &lt;code&gt;Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Cryptography&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Key: &lt;code&gt;MachineGuid&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Potential Impact&lt;/h4&gt; 
 &lt;p&gt;Modifying this registry key may affect:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Windows system&#39;s unique device identification&lt;/li&gt; 
  &lt;li&gt;Device recognition and authorization status of certain software&lt;/li&gt; 
  &lt;li&gt;System features based on hardware identification&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Safety Measures&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Automatic Backup&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Original value is automatically backed up before modification&lt;/li&gt; 
    &lt;li&gt;Backup location: &lt;code&gt;%APPDATA%\Cursor\User\globalStorage\backups&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Backup file format: &lt;code&gt;MachineGuid.backup_YYYYMMDD_HHMMSS&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Manual Recovery Steps&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Open Registry Editor (regedit)&lt;/li&gt; 
    &lt;li&gt;Navigate to: &lt;code&gt;Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Cryptography&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Right-click on &lt;code&gt;MachineGuid&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Select &quot;Modify&quot;&lt;/li&gt; 
    &lt;li&gt;Paste the value from backup file&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h4&gt;Important Notes&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Verify backup file existence before modification&lt;/li&gt; 
  &lt;li&gt;Use backup file to restore original value if needed&lt;/li&gt; 
  &lt;li&gt;Administrator privileges required for registry modification&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;📚 Recommended Reading&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/pnJrH7Ifx4WZvseeP1fcEA&quot;&gt;Cursor Issues Collection and Solutions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/PRPz-qVkFJSgkuEKkTdzwg&quot;&gt;AI Universal Development Assistant Prompt Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;b&gt;If you find this helpful, consider buying me a spicy gluten snack (Latiao) as appreciation~ 💁☕️&lt;/b&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;b&gt;微信赞赏&lt;/b&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/wx_zsm2.png&quot; width=&quot;500&quot; alt=&quot;微信赞赏码&quot;&gt;&lt;br&gt; &lt;small&gt;要到饭咧？啊咧？啊咧？不给也没事~ 请随意打赏&lt;/small&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;b&gt;支付宝赞赏&lt;/b&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/alipay.png&quot; width=&quot;500&quot; alt=&quot;支付宝赞赏码&quot;&gt;&lt;br&gt; &lt;small&gt;如果觉得有帮助,来包辣条犒劳一下吧~&lt;/small&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;b&gt;Alipay&lt;/b&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/alipay_scan_pay.jpg&quot; width=&quot;500&quot; alt=&quot;Alipay&quot;&gt;&lt;br&gt; &lt;em&gt;1 Latiao = 1 AI thought cycle&lt;/em&gt; &lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt; &lt;b&gt;WeChat&lt;/b&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yuaotian/go-cursor-help/master/img/wx_group6.jpg&quot; width=&quot;500&quot; alt=&quot;WeChat&quot;&gt;&lt;br&gt; &lt;em&gt;二维码7天内(3月19日前)有效，过期请加微信&lt;/em&gt; &lt;/td&gt; 
    &lt;!-- &lt;td align=&quot;center&quot;&gt;
&lt;b&gt;ETC&lt;/b&gt;&lt;br&gt;
&lt;img src=&quot;img/etc.png&quot; width=&quot;100&quot; alt=&quot;ETC Address&quot;&gt;&lt;br&gt;
ETC: 0xa2745f4CD5d32310AC01694ABDB28bA32D125a6b
&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt; --&gt;  
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;⭐ Project Stats&lt;/h2&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://star-history.com/#yuaotian/go-cursor-help&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=yuaotian/go-cursor-help&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://repobeats.axiom.co/api/embed/ddaa9df9a94b0029ec3fad399e1c1c4e75755477.svg?sanitize=true&quot; alt=&quot;Repobeats analytics image&quot; title=&quot;Repobeats analytics image&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;MIT License&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Copyright (c) 2024&lt;/p&gt; 
 &lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
 &lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>geerlingguy/mac-dev-playbook</title>
      <link>https://github.com/geerlingguy/mac-dev-playbook</link>
      <description>&lt;p&gt;Mac setup and configuration via Ansible.&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/geerlingguy/mac-dev-playbook/master/files/Mac-Dev-Playbook-Logo.png&quot; width=&quot;250&quot; height=&quot;156&quot; alt=&quot;Mac Dev Playbook Logo&quot;&gt; 
&lt;h1&gt;Mac Development Ansible Playbook&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/geerlingguy/mac-dev-playbook/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/geerlingguy/mac-dev-playbook/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This playbook installs and configures most of the software I use on my Mac for web and software development. Some things in macOS are slightly difficult to automate, so I still have a few manual installation steps, but at least it&#39;s all documented here.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Ensure Apple&#39;s command line tools are installed (&lt;code&gt;xcode-select --install&lt;/code&gt; to launch the installer).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://docs.ansible.com/ansible/latest/installation_guide/index.html&quot;&gt;Install Ansible&lt;/a&gt;:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Run the following command to add Python 3 to your $PATH: &lt;code&gt;export PATH=&quot;$HOME/Library/Python/3.9/bin:/opt/homebrew/bin:$PATH&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Upgrade Pip: &lt;code&gt;sudo pip3 install --upgrade pip&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Install Ansible: &lt;code&gt;pip3 install ansible&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone or download this repository to your local drive.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;ansible-galaxy install -r requirements.yml&lt;/code&gt; inside this directory to install required Ansible roles.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;ansible-playbook main.yml --ask-become-pass&lt;/code&gt; inside this directory. Enter your macOS account password when prompted for the &#39;BECOME&#39; password.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If some Homebrew commands fail, you might need to agree to Xcode&#39;s license or fix some other Brew issue. Run &lt;code&gt;brew doctor&lt;/code&gt; to see if this is the case.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Use with a remote Mac&lt;/h3&gt; 
&lt;p&gt;You can use this playbook to manage other Macs as well; the playbook doesn&#39;t even need to be run from a Mac at all! If you want to manage a remote Mac, either another Mac on your network, or a hosted Mac like the ones from &lt;a href=&quot;https://www.macstadium.com&quot;&gt;MacStadium&lt;/a&gt;, you just need to make sure you can connect to it with SSH:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;(On the Mac you want to connect to:) Go to System Preferences &amp;gt; Sharing.&lt;/li&gt; 
 &lt;li&gt;Enable &#39;Remote Login&#39;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You can also enable remote login on the command line:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;sudo systemsetup -setremotelogin on
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Then edit the &lt;code&gt;inventory&lt;/code&gt; file in this repository and change the line that starts with &lt;code&gt;127.0.0.1&lt;/code&gt; to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[ip address or hostname of mac]  ansible_user=[mac ssh username]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you need to supply an SSH password (if you don&#39;t use SSH keys), make sure to pass the &lt;code&gt;--ask-pass&lt;/code&gt; parameter to the &lt;code&gt;ansible-playbook&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;Running a specific set of tagged tasks&lt;/h3&gt; 
&lt;p&gt;You can filter which part of the provisioning process to run by specifying a set of tags using &lt;code&gt;ansible-playbook&lt;/code&gt;&#39;s &lt;code&gt;--tags&lt;/code&gt; flag. The tags available are &lt;code&gt;dotfiles&lt;/code&gt;, &lt;code&gt;homebrew&lt;/code&gt;, &lt;code&gt;mas&lt;/code&gt;, &lt;code&gt;extra-packages&lt;/code&gt; and &lt;code&gt;osx&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ansible-playbook main.yml -K --tags &quot;dotfiles,homebrew&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Overriding Defaults&lt;/h2&gt; 
&lt;p&gt;Not everyone&#39;s development environment and preferred software configuration is the same.&lt;/p&gt; 
&lt;p&gt;You can override any of the defaults configured in &lt;code&gt;default.config.yml&lt;/code&gt; by creating a &lt;code&gt;config.yml&lt;/code&gt; file and setting the overrides in that file. For example, you can customize the installed packages and apps with something like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;homebrew_installed_packages:
  - git
  - go

mas_installed_apps:
  - { id: 443987910, name: &quot;1Password&quot; }
  - { id: 498486288, name: &quot;Quick Resizer&quot; }
  - { id: 557168941, name: &quot;Tweetbot&quot; }
  - { id: 497799835, name: &quot;Xcode&quot; }

composer_packages:
  - name: hirak/prestissimo
  - name: drush/drush
    version: &#39;^8.1&#39;

gem_packages:
  - name: bundler
    state: latest

npm_packages:
  - name: webpack

pip_packages:
  - name: mkdocs

configure_dock: true
dockitems_remove:
  - Launchpad
  - TV
dockitems_persist:
  - name: &quot;Sublime Text&quot;
    path: &quot;/Applications/Sublime Text.app/&quot;
    pos: 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Any variable can be overridden in &lt;code&gt;config.yml&lt;/code&gt;; see the supporting roles&#39; documentation for a complete list of available variables.&lt;/p&gt; 
&lt;h2&gt;Included Applications / Configuration (Default)&lt;/h2&gt; 
&lt;p&gt;Applications (installed with Homebrew Cask):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sites.google.com/chromium.org/driver/&quot;&gt;ChromeDriver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/new/&quot;&gt;Firefox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Google Chrome&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://handbrake.fr/&quot;&gt;Handbrake&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cockos.com/licecap/&quot;&gt;LICEcap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://brettterpstra.com/projects/nvalt/&quot;&gt;nvALT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sequel-ace.com&quot;&gt;Sequel Ace&lt;/a&gt; (MySQL client)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://panic.com/transmit/&quot;&gt;Transmit&lt;/a&gt; (S/FTP client)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Packages (installed with Homebrew):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;autoconf&lt;/li&gt; 
 &lt;li&gt;bash-completion&lt;/li&gt; 
 &lt;li&gt;doxygen&lt;/li&gt; 
 &lt;li&gt;gettext&lt;/li&gt; 
 &lt;li&gt;gifsicle&lt;/li&gt; 
 &lt;li&gt;git&lt;/li&gt; 
 &lt;li&gt;gh&lt;/li&gt; 
 &lt;li&gt;go&lt;/li&gt; 
 &lt;li&gt;gpg&lt;/li&gt; 
 &lt;li&gt;httpie&lt;/li&gt; 
 &lt;li&gt;iperf&lt;/li&gt; 
 &lt;li&gt;libevent&lt;/li&gt; 
 &lt;li&gt;sqlite&lt;/li&gt; 
 &lt;li&gt;nmap&lt;/li&gt; 
 &lt;li&gt;node&lt;/li&gt; 
 &lt;li&gt;nvm&lt;/li&gt; 
 &lt;li&gt;php&lt;/li&gt; 
 &lt;li&gt;ssh-copy-id&lt;/li&gt; 
 &lt;li&gt;readline&lt;/li&gt; 
 &lt;li&gt;openssl&lt;/li&gt; 
 &lt;li&gt;pv&lt;/li&gt; 
 &lt;li&gt;wget&lt;/li&gt; 
 &lt;li&gt;wrk&lt;/li&gt; 
 &lt;li&gt;zsh-history-substring-search&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;My &lt;a href=&quot;https://github.com/geerlingguy/dotfiles&quot;&gt;dotfiles&lt;/a&gt; are also installed into the current user&#39;s home directory, including the &lt;code&gt;.osx&lt;/code&gt; dotfile for configuring many aspects of macOS for better performance and ease of use. You can disable dotfiles management by setting &lt;code&gt;configure_dotfiles: no&lt;/code&gt; in your configuration.&lt;/p&gt; 
&lt;p&gt;Finally, there are a few other preferences and settings added on for various apps and services.&lt;/p&gt; 
&lt;h2&gt;Full / From-scratch setup guide&lt;/h2&gt; 
&lt;p&gt;Since I&#39;ve used this playbook to set up something like 20 different Macs, I decided to write up a full 100% from-scratch install for my own reference (everyone&#39;s particular install will be slightly different).&lt;/p&gt; 
&lt;p&gt;You can see my full from-scratch setup document here: &lt;a href=&quot;https://raw.githubusercontent.com/geerlingguy/mac-dev-playbook/master/full-mac-setup.md&quot;&gt;full-mac-setup.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Testing the Playbook&lt;/h2&gt; 
&lt;p&gt;Many people have asked me if I often wipe my entire workstation and start from scratch just to test changes to the playbook. Nope! This project is &lt;a href=&quot;https://github.com/geerlingguy/mac-dev-playbook/actions?query=workflow%3ACI&quot;&gt;continuously tested on GitHub Actions&#39; macOS infrastructure&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also run macOS itself inside a VM, for at least some of the required testing (App Store apps and some proprietary software might not install properly). I currently recommend:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mac.getutm.app&quot;&gt;UTM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cirruslabs/tart&quot;&gt;Tart&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ansible for DevOps&lt;/h2&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://www.ansiblefordevops.com/&quot;&gt;Ansible for DevOps&lt;/a&gt;, which teaches you how to automate almost anything with Ansible.&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;This project was created by &lt;a href=&quot;https://www.jeffgeerling.com/&quot;&gt;Jeff Geerling&lt;/a&gt; (originally inspired by &lt;a href=&quot;https://github.com/MWGriffin/ansible-playbooks&quot;&gt;MWGriffin/ansible-playbooks&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VSCodium/vscodium</title>
      <link>https://github.com/VSCodium/vscodium</link>
      <description>&lt;p&gt;binary releases of VS Code without MS branding/telemetry/licensing&lt;/p&gt;&lt;hr&gt;&lt;div id=&quot;vscodium-logo&quot; align=&quot;center&quot;&gt; 
 &lt;br&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/icons/stable/codium_cnl.svg?sanitize=true&quot; alt=&quot;VSCodium Logo&quot; width=&quot;200&quot;&gt; 
 &lt;h1&gt;VSCodium&lt;/h1&gt; 
 &lt;h3&gt;Free/Libre Open Source Software Binaries of VS Code&lt;/h3&gt; 
&lt;/div&gt; 
&lt;div id=&quot;badges&quot; align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/vscodium/vscodium/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/vscodium/vscodium.svg?sanitize=true&quot; alt=&quot;current release&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/VSCodium/vscodium/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/VSCodium/vscodium.svg?sanitize=true&quot; alt=&quot;license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/VSCodium/Lobby&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/vscodium/vscodium.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snapcraft.io/codium&quot;&gt;&lt;img src=&quot;https://snapcraft.io//codium/badge.svg?sanitize=true&quot; alt=&quot;codium&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snapcraft.io/codium&quot;&gt;&lt;img src=&quot;https://snapcraft.io//codium/trending.svg?name=0&quot; alt=&quot;codium&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/VSCodium/vscodium/actions/workflows/stable-linux.yml?query=branch%3Amaster&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/VSCodium/vscodium/stable-linux.yml?branch=master&amp;amp;label=build%28linux%29&quot; alt=&quot;build status (linux)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/VSCodium/vscodium/actions/workflows/stable-macos.yml?query=branch%3Amaster&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/VSCodium/vscodium/stable-macos.yml?branch=master&amp;amp;label=build%28macOS%29&quot; alt=&quot;build status (macos)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/VSCodium/vscodium/actions/workflows/stable-windows.yml?query=branch%3Amaster&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/VSCodium/vscodium/stable-windows.yml?branch=master&amp;amp;label=build%28windows%29&quot; alt=&quot;build status (windows)&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;This is not a fork. This is a repository of scripts to automatically build &lt;a href=&quot;https://github.com/microsoft/vscode&quot;&gt;Microsoft&#39;s &lt;code&gt;vscode&lt;/code&gt; repository&lt;/a&gt; into freely-licensed binaries with a community-driven default configuration.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#download-install&quot;&gt;Download/Install&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#install-with-brew&quot;&gt;Install with Brew&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#install-with-winget&quot;&gt;Install with Windows Package Manager (WinGet)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#install-with-choco&quot;&gt;Install with Chocolatey&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#install-with-scoop&quot;&gt;Install with Scoop&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#install-with-snap&quot;&gt;Install with snap&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#install-with-package-manager&quot;&gt;Install with Package Manager&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#install-on-arch-linux&quot;&gt;Install on Arch Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#flatpak&quot;&gt;Flatpak Option&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#build&quot;&gt;Build&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#why&quot;&gt;Why Does This Exist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#more-info&quot;&gt;More Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VSCodium/vscodium/master/#supported-platforms&quot;&gt;Supported Platforms&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a id=&quot;download-install&quot;&gt;&lt;/a&gt;Download/Install&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;🎉&lt;/span&gt; &lt;span&gt;🎉&lt;/span&gt; Download latest release here: &lt;a href=&quot;https://github.com/VSCodium/vscodium/releases&quot;&gt;stable&lt;/a&gt; or &lt;a href=&quot;https://github.com/VSCodium/vscodium-insiders/releases&quot;&gt;insiders&lt;/a&gt; &lt;span&gt;🎉&lt;/span&gt; &lt;span&gt;🎉&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/VSCodium/vscodium/raw/master/docs/index.md&quot;&gt;More info / helpful tips are here.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;install-with-brew&quot;&gt;&lt;/a&gt;Install with Brew (Mac)&lt;/h4&gt; 
&lt;p&gt;If you are on a Mac and have &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# stable
brew install --cask vscodium

# insiders
brew tap homebrew/cask-versions
brew install --cask vscodium-insiders
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note for macOS users: if you can&#39;t open the App, please read &lt;a href=&quot;https://github.com/VSCodium/vscodium/raw/master/docs/troubleshooting.md#macos&quot;&gt;the following troubleshooting&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;install-with-winget&quot;&gt;&lt;/a&gt;Install with Windows Package Manager (WinGet)&lt;/h4&gt; 
&lt;p&gt;If you use Windows and have &lt;a href=&quot;https://github.com/microsoft/winget-cli&quot;&gt;Windows Package Manager&lt;/a&gt; installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;:: stable
winget install -e --id VSCodium.VSCodium

:: insider
winget install -e --id VSCodium.VSCodium.Insiders
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;install-with-choco&quot;&gt;&lt;/a&gt;Install with Chocolatey (Windows)&lt;/h4&gt; 
&lt;p&gt;If you use Windows and have &lt;a href=&quot;https://chocolatey.org&quot;&gt;Chocolatey&lt;/a&gt; installed (thanks to &lt;a href=&quot;https://github.com/Thilas&quot;&gt;@Thilas&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;:: stable
choco install vscodium

:: insider
choco install vscodium-insiders
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;install-with-scoop&quot;&gt;&lt;/a&gt;Install with Scoop (Windows)&lt;/h4&gt; 
&lt;p&gt;If you use Windows and have &lt;a href=&quot;https://scoop.sh&quot;&gt;Scoop&lt;/a&gt; installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scoop bucket add extras
scoop install vscodium
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;install-with-snap&quot;&gt;&lt;/a&gt;Install with snap (GNU/Linux)&lt;/h4&gt; 
&lt;p&gt;VSCodium is available in the &lt;a href=&quot;https://snapcraft.io/&quot;&gt;Snap Store&lt;/a&gt; as &lt;a href=&quot;https://snapcraft.io/codium&quot;&gt;Codium&lt;/a&gt;, thanks to the help of the &lt;a href=&quot;https://github.com/snapcrafters/codium&quot;&gt;Snapcrafters&lt;/a&gt; community. If your GNU/Linux distribution has support for &lt;a href=&quot;https://snapcraft.io/docs/installing-snapd&quot;&gt;snaps&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;snap install codium --classic
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;install-with-package-manager&quot;&gt;&lt;/a&gt;Install with Package Manager (GNU/Linux)&lt;/h4&gt; 
&lt;p&gt;You can always install using the downloads (deb, rpm, tar) on the releases page for &lt;a href=&quot;https://github.com/VSCodium/vscodium/releases&quot;&gt;stable&lt;/a&gt; or &lt;a href=&quot;https://github.com/VSCodium/vscodium-insiders/releases&quot;&gt;insiders&lt;/a&gt;, but you can also install using your favorite package manager and get automatic updates.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/paulcarroty&quot;&gt;@paulcarroty&lt;/a&gt; has set up a repository with instructions for &lt;code&gt;apt&lt;/code&gt;, &lt;code&gt;dnf&lt;/code&gt; and &lt;code&gt;zypper&lt;/code&gt; &lt;a href=&quot;https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Any issues installing VSCodium using your package manager should be directed to that repository&#39;s issue tracker.&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;install-on-arch-linux&quot;&gt;&lt;/a&gt;Install on Arch Linux&lt;/h4&gt; 
&lt;p&gt;VSCodium is available in &lt;a href=&quot;https://wiki.archlinux.org/index.php/Arch_User_Repository&quot;&gt;AUR&lt;/a&gt;, maintained by &lt;a href=&quot;https://github.com/binex-dsk&quot;&gt;@binex-dsk&lt;/a&gt; as package &lt;a href=&quot;https://aur.archlinux.org/packages/vscodium-bin/&quot;&gt;vscodium-bin&lt;/a&gt; (stable) and as &lt;a href=&quot;https://aur.archlinux.org/packages/vscodium-insiders-bin&quot;&gt;vscodium-insiders-bin&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to save disk space by having VSCodium use the Electron system-wide, you also have &lt;a href=&quot;https://aur.archlinux.org/packages/vscodium-electron&quot;&gt;vscodium-electron&lt;/a&gt;, maintained by &lt;a href=&quot;https://aur.archlinux.org/account/m00nw4tch3r&quot;&gt;@m00nw4tch3r&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;An alternative package &lt;a href=&quot;https://aur.archlinux.org/packages/vscodium-git/&quot;&gt;vscodium-git&lt;/a&gt;, maintained by &lt;a href=&quot;https://github.com/cedricroijakkers&quot;&gt;@cedricroijakkers&lt;/a&gt;, is also available should you wish to compile from source yourself.&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;flatpak&quot;&gt;&lt;/a&gt;Flatpak Option (GNU/Linux)&lt;/h4&gt; 
&lt;p&gt;VSCodium is available as a Flatpak app &lt;a href=&quot;https://flathub.org/apps/details/com.vscodium.codium&quot;&gt;here&lt;/a&gt; and the build repo is &lt;a href=&quot;https://github.com/flathub/com.vscodium.codium&quot;&gt;here&lt;/a&gt;. If your distribution has support for &lt;a href=&quot;https://flathub.org&quot;&gt;flatpak&lt;/a&gt;, and you have enabled the &lt;a href=&quot;https://flatpak.org/setup/&quot;&gt;flathub repo&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;flatpak install flathub com.vscodium.codium
flatpak run com.vscodium.codium
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;a id=&quot;build&quot;&gt;&lt;/a&gt;Build&lt;/h2&gt; 
&lt;p&gt;Build instructions can be found &lt;a href=&quot;https://github.com/VSCodium/vscodium/raw/master/docs/howto-build.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;why&quot;&gt;&lt;/a&gt;Why Does This Exist&lt;/h2&gt; 
&lt;p&gt;This repository contains build files to generate free release binaries of Microsoft&#39;s VS Code. When we speak of &quot;free software&quot;, we&#39;re talking about freedom, not price.&lt;/p&gt; 
&lt;p&gt;Microsoft&#39;s releases of Visual Studio Code are licensed under &lt;a href=&quot;https://code.visualstudio.com/license&quot;&gt;this not-FLOSS license&lt;/a&gt; and contain telemetry/tracking. According to &lt;a href=&quot;https://github.com/Microsoft/vscode/issues/60#issuecomment-161792005&quot;&gt;this comment&lt;/a&gt; from a Visual Studio Code maintainer:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;When we [Microsoft] build Visual Studio Code, we do exactly this. We clone the vscode repository, we lay down a customized product.json that has Microsoft specific functionality (telemetry, gallery, logo, etc.), and then produce a build that we release under our license.&lt;/p&gt; 
 &lt;p&gt;When you clone and build from the vscode repo, none of these endpoints are configured in the default product.json. Therefore, you generate a &quot;clean&quot; build, without the Microsoft customizations, which is by default licensed under the MIT license&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This repo exists so that you don&#39;t have to download+build from source. The build scripts in this repo clone Microsoft&#39;s vscode repo, run the build commands, and upload the resulting binaries to &lt;a href=&quot;https://github.com/VSCodium/vscodium/releases&quot;&gt;GitHub releases&lt;/a&gt;. &lt;strong&gt;These binaries are licensed under the MIT license. Telemetry is disabled.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you want to build from source yourself, head over to &lt;a href=&quot;https://github.com/Microsoft/vscode&quot;&gt;Microsoft&#39;s vscode repo&lt;/a&gt; and follow their &lt;a href=&quot;https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run&quot;&gt;instructions&lt;/a&gt;. This repo exists to make it easier to get the latest version of MIT-licensed VS Code.&lt;/p&gt; 
&lt;p&gt;Microsoft&#39;s build process (which we are running to build the binaries) does download additional files. Those packages downloaded during build are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pre-built extensions from the GitHub: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/vscode-js-debug-companion&quot;&gt;ms-vscode.js-debug-companion&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/vscode-js-debug&quot;&gt;ms-vscode.js-debug&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/vscode-js-profile-visualizer&quot;&gt;ms-vscode.vscode-js-profile-table&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;From &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;Electron releases&lt;/a&gt; (using &lt;a href=&quot;https://github.com/joaomoreno/gulp-atom-electron&quot;&gt;gulp-atom-electron&lt;/a&gt;) 
  &lt;ul&gt; 
   &lt;li&gt;electron&lt;/li&gt; 
   &lt;li&gt;ffmpeg&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a id=&quot;more-info&quot;&gt;&lt;/a&gt;More Info&lt;/h2&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;For more information on getting all the telemetry disabled, tips for migrating from Visual Studio Code to VSCodium and more, have a look at &lt;a href=&quot;https://github.com/VSCodium/vscodium/raw/master/docs/index.md&quot;&gt;the Docs page&lt;/a&gt; page.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;If you have any issue, please check &lt;a href=&quot;https://github.com/VSCodium/vscodium/raw/master/docs/troubleshooting.md&quot;&gt;the Troubleshooting page&lt;/a&gt; or the existing issues.&lt;/p&gt; 
&lt;h3&gt;Extensions and the Marketplace&lt;/h3&gt; 
&lt;p&gt;According to the VS Code Marketplace &lt;a href=&quot;https://aka.ms/vsmarketplace-ToU&quot;&gt;Terms of Use&lt;/a&gt;, &lt;em&gt;you may only install and use Marketplace Offerings with Visual Studio Products and Services.&lt;/em&gt; For this reason, VSCodium uses &lt;a href=&quot;https://open-vsx.org/&quot;&gt;open-vsx.org&lt;/a&gt;, an open source registry for VS Code extensions. See the &lt;a href=&quot;https://github.com/VSCodium/vscodium/raw/master/docs/index.md#extensions-marketplace&quot;&gt;Extensions + Marketplace&lt;/a&gt; section on the Docs page for more details.&lt;/p&gt; 
&lt;p&gt;Please note that some Visual Studio Code extensions have licenses that restrict their use to the official Visual Studio Code builds and therefore do not work with VSCodium. See &lt;a href=&quot;https://github.com/VSCodium/vscodium/raw/master/docs/index.md#proprietary-debugging-tools&quot;&gt;this note&lt;/a&gt; on the Docs page for what&#39;s been found so far and possible workarounds.&lt;/p&gt; 
&lt;h3&gt;How are the VSCodium binaries built?&lt;/h3&gt; 
&lt;p&gt;If you would like to see the commands we run to build &lt;code&gt;vscode&lt;/code&gt; into VSCodium binaries, have a look at the workflow files in &lt;code&gt;.github/workflows&lt;/code&gt; for Windows, GNU/Linux and macOS. These build files call all the other scripts in the repo. If you find something that doesn&#39;t make sense, feel free to ask about it &lt;a href=&quot;https://gitter.im/VSCodium/Lobby&quot;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The builds are run every day, but exit early if there isn&#39;t a new release from Microsoft.&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;supported-platforms&quot;&gt;&lt;/a&gt;Supported Platforms&lt;/h2&gt; 
&lt;p&gt;The minimal version is limited by the core component Electron, you may want to check its &lt;a href=&quot;https://www.electronjs.org/docs/latest/development/build-instructions-gn#platform-prerequisites&quot;&gt;platform prerequisites&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; macOS (&lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;dmg&lt;/code&gt;) macOS 10.15 or newer x64&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; macOS (&lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;dmg&lt;/code&gt;) macOS 11.0 or newer arm64&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; GNU/Linux x64 (&lt;code&gt;deb&lt;/code&gt;, &lt;code&gt;rpm&lt;/code&gt;, &lt;code&gt;AppImage&lt;/code&gt;, &lt;code&gt;snap&lt;/code&gt;, &lt;code&gt;tar.gz&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; GNU/Linux arm64 (&lt;code&gt;deb&lt;/code&gt;, &lt;code&gt;rpm&lt;/code&gt;, &lt;code&gt;snap&lt;/code&gt;, &lt;code&gt;tar.gz&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; GNU/Linux armhf (&lt;code&gt;deb&lt;/code&gt;, &lt;code&gt;rpm&lt;/code&gt;, &lt;code&gt;tar.gz&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; GNU/Linux riscv64 (&lt;code&gt;tar.gz&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; GNU/Linux loong64 (&lt;code&gt;tar.gz&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; GNU/Linux ppc64le (&lt;code&gt;tar.gz&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Windows 10 / Server 2012 R2 or newer x64&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Windows 10 / Server 2012 R2 or newer arm64&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a id=&quot;thanks&quot;&gt;&lt;/a&gt;Special thanks&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/jaredreich&quot; target=&quot;_blank&quot;&gt;@jaredreich&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;for the logo&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/PalinuroSec&quot; target=&quot;_blank&quot;&gt;@PalinuroSec&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;for CDN and domain name&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.macstadium.com&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://images.prismic.io/macstadium/66fbce64-707e-41f3-b547-241908884716_MacStadium_Logo.png?w=128&amp;amp;q=75&quot; width=&quot;128&quot; height=&quot;49&quot; alt=&quot;MacStadium logo&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;for providing a Mac mini M1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/daiyam&quot; target=&quot;_blank&quot;&gt;@daiyam&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;for macOS certificate&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://signpath.org/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/34448643&quot; height=&quot;30&quot; alt=&quot;SignPath logo&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;free code signing on Windows provided by &lt;a href=&quot;https://signpath.io/&quot; target=&quot;_blank&quot;&gt;SignPath.io&lt;/a&gt;, certificate by &lt;a href=&quot;https://signpath.org/&quot; target=&quot;_blank&quot;&gt;SignPath Foundation&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;&lt;a id=&quot;license&quot;&gt;&lt;/a&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/VSCodium/vscodium/raw/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nvm-sh/nvm</title>
      <link>https://github.com/nvm-sh/nvm</link>
      <description>&lt;p&gt;Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions&lt;/p&gt;&lt;hr&gt;&lt;a href=&quot;https://github.com/nvm-sh/logos&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/nvm-sh/logos/HEAD/nvm-logo-white.svg&quot;&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/nvm-sh/logos/HEAD/nvm-logo-color.svg?sanitize=true&quot; height=&quot;50&quot; alt=&quot;nvm project logo&quot;&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h1&gt;Node Version Manager &lt;a href=&quot;https://app.travis-ci.com/nvm-sh/nvm&quot;&gt;&lt;img src=&quot;https://app.travis-ci.com/nvm-sh/nvm.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nvm-sh/nvm/releases/tag/v0.40.2&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/version-v0.40.2-yellow.svg?sanitize=true&quot; alt=&quot;nvm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bestpractices.dev/projects/684&quot;&gt;&lt;img src=&quot;https://bestpractices.dev/projects/684/badge&quot; alt=&quot;CII Best Practices&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;!-- To update this table of contents, ensure you have run `npm install` then `npm run doctoc` --&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#intro&quot;&gt;Intro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-and-updating&quot;&gt;Installing and Updating&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#install--update-script&quot;&gt;Install &amp;amp; Update Script&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#additional-notes&quot;&gt;Additional Notes&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-in-docker&quot;&gt;Installing in Docker&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-in-docker-for-cicd-jobs&quot;&gt;Installing in Docker for CICD-Jobs&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#troubleshooting-on-linux&quot;&gt;Troubleshooting on Linux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#troubleshooting-on-macos&quot;&gt;Troubleshooting on macOS&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#ansible&quot;&gt;Ansible&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#verify-installation&quot;&gt;Verify Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#important-notes&quot;&gt;Important Notes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#git-install&quot;&gt;Git Install&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-install&quot;&gt;Manual Install&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-upgrade&quot;&gt;Manual Upgrade&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#long-term-support&quot;&gt;Long-term Support&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#migrating-global-packages-while-installing&quot;&gt;Migrating Global Packages While Installing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#default-global-packages-from-file-while-installing&quot;&gt;Default Global Packages From File While Installing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#iojs&quot;&gt;io.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#system-version-of-node&quot;&gt;System Version of Node&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#listing-versions&quot;&gt;Listing Versions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#setting-custom-colors&quot;&gt;Setting Custom Colors&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#persisting-custom-colors&quot;&gt;Persisting custom colors&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#suppressing-colorized-output&quot;&gt;Suppressing colorized output&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#restoring-path&quot;&gt;Restoring PATH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#set-default-node-version&quot;&gt;Set default node version&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#use-a-mirror-of-node-binaries&quot;&gt;Use a mirror of node binaries&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#pass-authorization-header-to-mirror&quot;&gt;Pass Authorization header to mirror&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#nvmrc&quot;&gt;.nvmrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#deeper-shell-integration&quot;&gt;Deeper Shell Integration&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#calling-nvm-use-automatically-in-a-directory-with-a-nvmrc-file&quot;&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#bash&quot;&gt;bash&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#zsh&quot;&gt;zsh&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#fish&quot;&gt;fish&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#running-tests&quot;&gt;Running Tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#environment-variables&quot;&gt;Environment variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#bash-completion&quot;&gt;Bash Completion&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage-1&quot;&gt;Usage&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#compatibility-issues&quot;&gt;Compatibility Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-nvm-on-alpine-linux&quot;&gt;Installing nvm on Alpine Linux&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#alpine-linux-313&quot;&gt;Alpine Linux 3.13+&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#alpine-linux-35---312&quot;&gt;Alpine Linux 3.5 - 3.12&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#uninstalling--removal&quot;&gt;Uninstalling / Removal&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-uninstall&quot;&gt;Manual Uninstall&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#docker-for-development-environment&quot;&gt;Docker For Development Environment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#problems&quot;&gt;Problems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#macos-troubleshooting&quot;&gt;macOS Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#wsl-troubleshooting&quot;&gt;WSL Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#maintainers&quot;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#project-support&quot;&gt;Project Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#enterprise-support&quot;&gt;Enterprise Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#copyright-notice&quot;&gt;Copyright notice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;Intro&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; allows you to quickly install and use different versions of node via the command line.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm use 16
Now using node v16.9.1 (npm v7.21.1)
$ node -v
v16.9.1
$ nvm use 14
Now using node v14.18.0 (npm v6.14.15)
$ node -v
v14.18.0
$ nvm install 12
Now using node v12.22.6 (npm v6.14.5)
$ node -v
v12.22.6
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Simple as that!&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;nvm is a version manager for &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;, designed to be installed per-user, and invoked per-shell. &lt;code&gt;nvm&lt;/code&gt; works on any POSIX-compliant shell (sh, dash, ksh, zsh, bash), in particular on these platforms: unix, macOS, and &lt;a href=&quot;https://github.com/nvm-sh/nvm#important-notes&quot;&gt;windows WSL&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;installation-and-update&quot;&gt;&lt;/a&gt; &lt;a id=&quot;install-script&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installing and Updating&lt;/h2&gt; 
&lt;h3&gt;Install &amp;amp; Update Script&lt;/h3&gt; 
&lt;p&gt;To &lt;strong&gt;install&lt;/strong&gt; or &lt;strong&gt;update&lt;/strong&gt; nvm, you should run the &lt;a href=&quot;https://github.com/nvm-sh/nvm/raw/v0.40.2/install.sh&quot;&gt;install script&lt;/a&gt;. To do that, you may either download and run the script manually, or use the following cURL or Wget command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running either of the above commands downloads a script and runs it. The script clones the nvm repository to &lt;code&gt;~/.nvm&lt;/code&gt;, and attempts to add the source lines from the snippet below to the correct profile file (&lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, or &lt;code&gt;~/.profile&lt;/code&gt;). If you find the install script is updating the wrong profile file, set the &lt;code&gt;$PROFILE&lt;/code&gt; env var to the profile file’s path, and then rerun the installation script.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;profile_snippet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$([ -z &quot;${XDG_CONFIG_HOME-}&quot; ] &amp;amp;&amp;amp; printf %s &quot;${HOME}/.nvm&quot; || printf %s &quot;${XDG_CONFIG_HOME}/nvm&quot;)&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Additional Notes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If the environment variable &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is present, it will place the &lt;code&gt;nvm&lt;/code&gt; files there.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can add &lt;code&gt;--no-use&lt;/code&gt; to the end of the above script to postpone using &lt;code&gt;nvm&lt;/code&gt; until you manually &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; it:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$([ -z &quot;${XDG_CONFIG_HOME-}&quot; ] &amp;amp;&amp;amp; printf %s &quot;${HOME}/.nvm&quot; || printf %s &quot;${XDG_CONFIG_HOME}/nvm&quot;)&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot; --no-use # This loads nvm, without auto-using the default version
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;You can customize the install source, directory, profile, and version using the &lt;code&gt;NVM_SOURCE&lt;/code&gt;, &lt;code&gt;NVM_DIR&lt;/code&gt;, &lt;code&gt;PROFILE&lt;/code&gt;, and &lt;code&gt;NODE_VERSION&lt;/code&gt; variables. Eg: &lt;code&gt;curl ... | NVM_DIR=&quot;path/to/nvm&quot;&lt;/code&gt;. Ensure that the &lt;code&gt;NVM_DIR&lt;/code&gt; does not contain a trailing slash.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The installer can use &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, or &lt;code&gt;wget&lt;/code&gt; to download &lt;code&gt;nvm&lt;/code&gt;, whichever is available.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can instruct the installer to not edit your shell config (for example if you already get completions via a &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/nvm&quot;&gt;zsh nvm plugin&lt;/a&gt;) by setting &lt;code&gt;PROFILE=/dev/null&lt;/code&gt; before running the &lt;code&gt;install.sh&lt;/code&gt; script. Here&#39;s an example one-line command to do that: &lt;code&gt;PROFILE=/dev/null bash -c &#39;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash&#39;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Installing in Docker&lt;/h4&gt; 
&lt;p&gt;When invoking bash as a non-interactive shell, like in a Docker container, none of the regular profile files are sourced. In order to use &lt;code&gt;nvm&lt;/code&gt;, &lt;code&gt;node&lt;/code&gt;, and &lt;code&gt;npm&lt;/code&gt; like normal, you can instead specify the special &lt;code&gt;BASH_ENV&lt;/code&gt; variable, which bash sources when invoked non-interactively.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Use bash for the shell
SHELL [&quot;/bin/bash&quot;, &quot;-o&quot;, &quot;pipefail&quot;, &quot;-c&quot;]

# Create a script file sourced by both interactive and non-interactive bash shells
ENV BASH_ENV /home/user/.bash_env
RUN touch &quot;${BASH_ENV}&quot;
RUN echo &#39;. &quot;${BASH_ENV}&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc

# Download and install nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | PROFILE=&quot;${BASH_ENV}&quot; bash
RUN echo node &amp;gt; .nvmrc
RUN nvm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Installing in Docker for CICD-Jobs&lt;/h5&gt; 
&lt;p&gt;More robust, works in CI/CD-Jobs. Can be run in interactive and non-interactive containers. See &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/3531&quot;&gt;https://github.com/nvm-sh/nvm/issues/3531&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;FROM ubuntu:latest
ARG NODE_VERSION=20

# install curl
RUN apt update &amp;amp;&amp;amp; apt install curl -y

# install nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash

# set env
ENV NVM_DIR=/root/.nvm

# install node
RUN bash -c &quot;source $NVM_DIR/nvm.sh &amp;amp;&amp;amp; nvm install $NODE_VERSION&quot;

# set ENTRYPOINT for reloading nvm-environment
ENTRYPOINT [&quot;bash&quot;, &quot;-c&quot;, &quot;source $NVM_DIR/nvm.sh &amp;amp;&amp;amp; exec \&quot;$@\&quot;&quot;, &quot;--&quot;]

# set cmd to bash
CMD [&quot;/bin/bash&quot;]

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example defaults to installation of nodejs version 20.x.y. Optionally you can easily override the version with docker build args like:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker build -t nvmimage --build-arg NODE_VERSION=19 .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After creation of the image you can start container interactively and run commands, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --rm -it nvmimage

root@0a6b5a237c14:/# nvm -v
0.40.2

root@0a6b5a237c14:/# node -v
v19.9.0

root@0a6b5a237c14:/# npm -v
9.6.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Noninteractive example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;user@host:/tmp/test $ docker run --rm -it nvmimage node -v
v19.9.0
user@host:/tmp/test $ docker run --rm -it nvmimage npm -v
9.6.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Troubleshooting on Linux&lt;/h4&gt; 
&lt;p&gt;On Linux, after running the install script, if you get &lt;code&gt;nvm: command not found&lt;/code&gt; or see no feedback from your terminal after you type &lt;code&gt;command -v nvm&lt;/code&gt;, simply close your current terminal, open a new terminal, and try verifying again. Alternatively, you can run the following commands for the different shells on the command line:&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;bash&lt;/em&gt;: &lt;code&gt;source ~/.bashrc&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;zsh&lt;/em&gt;: &lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;ksh&lt;/em&gt;: &lt;code&gt;. ~/.profile&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;These should pick up the &lt;code&gt;nvm&lt;/code&gt; command.&lt;/p&gt; 
&lt;h4&gt;Troubleshooting on macOS&lt;/h4&gt; 
&lt;p&gt;Since OS X 10.9, &lt;code&gt;/usr/bin/git&lt;/code&gt; has been preset by Xcode command line tools, which means we can&#39;t properly detect if Git is installed or not. You need to manually install the Xcode command line tools before running the install script, otherwise, it&#39;ll fail. (see &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/1782&quot;&gt;#1782&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;If you get &lt;code&gt;nvm: command not found&lt;/code&gt; after running the install script, one of the following might be the reason:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Since macOS 10.15, the default shell is &lt;code&gt;zsh&lt;/code&gt; and nvm will look for &lt;code&gt;.zshrc&lt;/code&gt; to update, none is installed by default. Create one with &lt;code&gt;touch ~/.zshrc&lt;/code&gt; and run the install script again.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you use bash, the previous default shell, your system may not have &lt;code&gt;.bash_profile&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt; files where the command is set up. Create one of them with &lt;code&gt;touch ~/.bash_profile&lt;/code&gt; or &lt;code&gt;touch ~/.bashrc&lt;/code&gt; and run the install script again. Then, run &lt;code&gt;. ~/.bash_profile&lt;/code&gt; or &lt;code&gt;. ~/.bashrc&lt;/code&gt; to pick up the &lt;code&gt;nvm&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You have previously used &lt;code&gt;bash&lt;/code&gt;, but you have &lt;code&gt;zsh&lt;/code&gt; installed. You need to manually add &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-install&quot;&gt;these lines&lt;/a&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt; and run &lt;code&gt;. ~/.zshrc&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You might need to restart your terminal instance or run &lt;code&gt;. ~/.nvm/nvm.sh&lt;/code&gt;. Restarting your terminal/opening a new tab/window, or running the source command will load the command and the new configuration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If the above didn&#39;t help, you might need to restart your terminal instance. Try opening a new tab/window in your terminal and retry.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the above doesn&#39;t fix the problem, you may try the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you use bash, it may be that your &lt;code&gt;.bash_profile&lt;/code&gt; (or &lt;code&gt;~/.profile&lt;/code&gt;) does not source your &lt;code&gt;~/.bashrc&lt;/code&gt; properly. You could fix this by adding &lt;code&gt;source ~/&amp;lt;your_profile_file&amp;gt;&lt;/code&gt; to it or following the next step below.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Try adding &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#profile_snippet&quot;&gt;the snippet from the install section&lt;/a&gt;, that finds the correct nvm directory and loads nvm, to your usual profile (&lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information about this issue and possible workarounds, please &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/576&quot;&gt;refer here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; For Macs with the Apple Silicon chip, node started offering &lt;strong&gt;arm64&lt;/strong&gt; arch Darwin packages since v16.0.0 and experimental &lt;strong&gt;arm64&lt;/strong&gt; support when compiling from source since v14.17.0. If you are facing issues installing node using &lt;code&gt;nvm&lt;/code&gt;, you may want to update to one of those versions or later.&lt;/p&gt; 
&lt;h4&gt;Ansible&lt;/h4&gt; 
&lt;p&gt;You can use a task:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- name: Install nvm
  ansible.builtin.shell: &amp;gt;
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
  args:
    creates: &quot;{{ ansible_env.HOME }}/.nvm/nvm.sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Verify Installation&lt;/h3&gt; 
&lt;p&gt;To verify that nvm has been installed, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;command -v nvm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;which should output &lt;code&gt;nvm&lt;/code&gt; if the installation was successful. Please note that &lt;code&gt;which nvm&lt;/code&gt; will not work, since &lt;code&gt;nvm&lt;/code&gt; is a sourced shell function, not an executable binary.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On Linux, after running the install script, if you get &lt;code&gt;nvm: command not found&lt;/code&gt; or see no feedback from your terminal after you type &lt;code&gt;command -v nvm&lt;/code&gt;, simply close your current terminal, open a new terminal, and try verifying again.&lt;/p&gt; 
&lt;h3&gt;Important Notes&lt;/h3&gt; 
&lt;p&gt;If you&#39;re running a system without prepackaged binary available, which means you&#39;re going to install node or io.js from its source code, you need to make sure your system has a C++ compiler. For OS X, Xcode will work, for Debian/Ubuntu based GNU/Linux, the &lt;code&gt;build-essential&lt;/code&gt; and &lt;code&gt;libssl-dev&lt;/code&gt; packages work.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;nvm&lt;/code&gt; also supports Windows in some cases. It should work through WSL (Windows Subsystem for Linux) depending on the version of WSL. It should also work with &lt;a href=&quot;https://gitforwindows.org/&quot;&gt;GitBash&lt;/a&gt; (MSYS) or &lt;a href=&quot;https://cygwin.com&quot;&gt;Cygwin&lt;/a&gt;. Otherwise, for Windows, a few alternatives exist, which are neither supported nor developed by us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/coreybutler/nvm-windows&quot;&gt;nvm-windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcelklehr/nodist&quot;&gt;nodist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasongin/nvs&quot;&gt;nvs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;nvm&lt;/code&gt; does not support &lt;a href=&quot;https://fishshell.com&quot;&gt;Fish&lt;/a&gt; either (see &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/303&quot;&gt;#303&lt;/a&gt;). Alternatives exist, which are neither supported nor developed by us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/edc/bass&quot;&gt;bass&lt;/a&gt; allows you to use utilities written for Bash in fish shell&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brigand/fast-nvm-fish&quot;&gt;fast-nvm-fish&lt;/a&gt; only works with version numbers (not aliases) but doesn&#39;t significantly slow your shell startup&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/derekstavis/plugin-nvm&quot;&gt;plugin-nvm&lt;/a&gt; plugin for &lt;a href=&quot;https://github.com/oh-my-fish/oh-my-fish&quot;&gt;Oh My Fish&lt;/a&gt;, which makes nvm and its completions available in fish shell&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jorgebucaran/nvm.fish&quot;&gt;nvm.fish&lt;/a&gt; - The Node.js version manager you&#39;ll adore, crafted just for Fish&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FabioAntunes/fish-nvm&quot;&gt;fish-nvm&lt;/a&gt; - Wrapper around nvm for fish, delays sourcing nvm until it&#39;s actually used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We still have some problems with FreeBSD, because there is no official pre-built binary for FreeBSD, and building from source may need &lt;a href=&quot;https://www.freshports.org/www/node/files/patch-deps_v8_src_base_platform_platform-posix.cc&quot;&gt;patches&lt;/a&gt;; see the issue ticket:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/900&quot;&gt;[#900] [Bug] node on FreeBSD may need to be patched&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/3716&quot;&gt;nodejs/node#3716&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On OS X, if you do not have Xcode installed and you do not wish to download the ~4.3GB file, you can install the &lt;code&gt;Command Line Tools&lt;/code&gt;. You can check out this blog post on how to just that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/&quot;&gt;How to Install Command Line Tools in OS X Mavericks &amp;amp; Yosemite (Without Xcode)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On OS X, if you have/had a &quot;system&quot; node installed and want to install modules globally, keep in mind that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When using &lt;code&gt;nvm&lt;/code&gt; you do not need &lt;code&gt;sudo&lt;/code&gt; to globally install a module with &lt;code&gt;npm -g&lt;/code&gt;, so instead of doing &lt;code&gt;sudo npm install -g grunt&lt;/code&gt;, do instead &lt;code&gt;npm install -g grunt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;If you have an &lt;code&gt;~/.npmrc&lt;/code&gt; file, make sure it does not contain any &lt;code&gt;prefix&lt;/code&gt; settings (which is not compatible with &lt;code&gt;nvm&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;You can (but should not?) keep your previous &quot;system&quot; node install, but &lt;code&gt;nvm&lt;/code&gt; will only be available to your user account (the one used to install nvm). This might cause version mismatches, as other users will be using &lt;code&gt;/usr/local/lib/node_modules/*&lt;/code&gt; VS your user account using &lt;code&gt;~/.nvm/versions/node/vX.X.X/lib/node_modules/*&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Homebrew installation is not supported. If you have issues with homebrew-installed &lt;code&gt;nvm&lt;/code&gt;, please &lt;code&gt;brew uninstall&lt;/code&gt; it, and install it using the instructions below, before filing an issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you&#39;re using &lt;code&gt;zsh&lt;/code&gt; you can easily install &lt;code&gt;nvm&lt;/code&gt; as a zsh plugin. Install &lt;a href=&quot;https://github.com/lukechilds/zsh-nvm&quot;&gt;&lt;code&gt;zsh-nvm&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;nvm upgrade&lt;/code&gt; to upgrade (&lt;a href=&quot;https://github.com/lukechilds/zsh-nvm#auto-use&quot;&gt;you can set&lt;/a&gt; &lt;code&gt;NVM_AUTO_USE=true&lt;/code&gt; to have it automatically detect and use &lt;code&gt;.nvmrc&lt;/code&gt; files).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Git versions before v1.7 may face a problem of cloning &lt;code&gt;nvm&lt;/code&gt; source from GitHub via https protocol, and there is also different behavior of git before v1.6, and git prior to &lt;a href=&quot;https://github.com/git/git/commit/5a7d5b683f869d3e3884a89775241afa515da9e7&quot;&gt;v1.17.10&lt;/a&gt; can not clone tags, so the minimum required git version is v1.7.10. If you are interested in the problem we mentioned here, please refer to GitHub&#39;s &lt;a href=&quot;https://help.github.com/articles/https-cloning-errors/&quot;&gt;HTTPS cloning errors&lt;/a&gt; article.&lt;/p&gt; 
&lt;h3&gt;Git Install&lt;/h3&gt; 
&lt;p&gt;If you have &lt;code&gt;git&lt;/code&gt; installed (requires git v1.7.10+):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;clone this repo in the root of your user profile 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;cd ~/&lt;/code&gt; from anywhere then &lt;code&gt;git clone https://github.com/nvm-sh/nvm.git .nvm&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd ~/.nvm&lt;/code&gt; and check out the latest version with &lt;code&gt;git checkout v0.40.2&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;activate &lt;code&gt;nvm&lt;/code&gt; by sourcing it from your shell: &lt;code&gt;. ./nvm.sh&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Now add these lines to your &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.zshrc&lt;/code&gt; file to have it automatically sourced upon login: (you may have to add to more than one of the above files)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm
[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Install&lt;/h3&gt; 
&lt;p&gt;For a fully manual install, execute the following lines to first clone the &lt;code&gt;nvm&lt;/code&gt; repository into &lt;code&gt;$HOME/.nvm&lt;/code&gt;, and then load &lt;code&gt;nvm&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot; &amp;amp;&amp;amp; (
  git clone https://github.com/nvm-sh/nvm.git &quot;$NVM_DIR&quot;
  cd &quot;$NVM_DIR&quot;
  git checkout `git describe --abbrev=0 --tags --match &quot;v[0-9]*&quot; $(git rev-list --tags --max-count=1)`
) &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now add these lines to your &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.zshrc&lt;/code&gt; file to have it automatically sourced upon login: (you may have to add to more than one of the above files)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm
[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Upgrade&lt;/h3&gt; 
&lt;p&gt;For manual upgrade with &lt;code&gt;git&lt;/code&gt; (requires git v1.7.10+):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;change to the &lt;code&gt;$NVM_DIR&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;pull down the latest changes&lt;/li&gt; 
 &lt;li&gt;check out the latest version&lt;/li&gt; 
 &lt;li&gt;activate the new version&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;(
  cd &quot;$NVM_DIR&quot;
  git fetch --tags origin
  git checkout `git describe --abbrev=0 --tags --match &quot;v[0-9]*&quot; $(git rev-list --tags --max-count=1)`
) &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To download, compile, and install the latest release of node, do this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install node # &quot;node&quot; is an alias for the latest version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install a specific version of node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install 14.7.0 # or 16.3.0, 12.22.1, etc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To set an alias:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm alias my_alias v14.4.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Make sure that your alias does not contain any spaces or slashes.&lt;/p&gt; 
&lt;p&gt;The first version installed becomes the default. New shells will start with the default version of node (e.g., &lt;code&gt;nvm alias default&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;You can list available versions using &lt;code&gt;ls-remote&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm ls-remote
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then in any new shell just use the installed version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm use node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can just run it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm run node --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, you can run any arbitrary command in a subshell with the desired version of node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm exec 4.2 node --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also get the path to the executable to where it was installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm which 12.22
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In place of a version pointer like &quot;14.7&quot; or &quot;16.3&quot; or &quot;12.22.1&quot;, you can use the following special default aliases with &lt;code&gt;nvm install&lt;/code&gt;, &lt;code&gt;nvm use&lt;/code&gt;, &lt;code&gt;nvm run&lt;/code&gt;, &lt;code&gt;nvm exec&lt;/code&gt;, &lt;code&gt;nvm which&lt;/code&gt;, etc:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;node&lt;/code&gt;: this installs the latest version of &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;&lt;code&gt;node&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;iojs&lt;/code&gt;: this installs the latest version of &lt;a href=&quot;https://iojs.org/en/&quot;&gt;&lt;code&gt;io.js&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stable&lt;/code&gt;: this alias is deprecated, and only truly applies to &lt;code&gt;node&lt;/code&gt; &lt;code&gt;v0.12&lt;/code&gt; and earlier. Currently, this is an alias for &lt;code&gt;node&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;unstable&lt;/code&gt;: this alias points to &lt;code&gt;node&lt;/code&gt; &lt;code&gt;v0.11&lt;/code&gt; - the last &quot;unstable&quot; node release, since post-1.0, all node versions are stable. (in SemVer, versions communicate breakage, not stability).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Long-term Support&lt;/h3&gt; 
&lt;p&gt;Node has a &lt;a href=&quot;https://github.com/nodejs/Release#release-schedule&quot;&gt;schedule&lt;/a&gt; for long-term support (LTS) You can reference LTS versions in aliases and &lt;code&gt;.nvmrc&lt;/code&gt; files with the notation &lt;code&gt;lts/*&lt;/code&gt; for the latest LTS, and &lt;code&gt;lts/argon&lt;/code&gt; for LTS releases from the &quot;argon&quot; line, for example. In addition, the following commands support LTS arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;nvm install --lts&lt;/code&gt; / &lt;code&gt;nvm install --lts=argon&lt;/code&gt; / &lt;code&gt;nvm install &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm install lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm uninstall --lts&lt;/code&gt; / &lt;code&gt;nvm uninstall --lts=argon&lt;/code&gt; / &lt;code&gt;nvm uninstall &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm uninstall lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm use --lts&lt;/code&gt; / &lt;code&gt;nvm use --lts=argon&lt;/code&gt; / &lt;code&gt;nvm use &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm use lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm exec --lts&lt;/code&gt; / &lt;code&gt;nvm exec --lts=argon&lt;/code&gt; / &lt;code&gt;nvm exec &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm exec lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm run --lts&lt;/code&gt; / &lt;code&gt;nvm run --lts=argon&lt;/code&gt; / &lt;code&gt;nvm run &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm run lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm ls-remote --lts&lt;/code&gt; / &lt;code&gt;nvm ls-remote --lts=argon&lt;/code&gt; &lt;code&gt;nvm ls-remote &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm ls-remote lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm version-remote --lts&lt;/code&gt; / &lt;code&gt;nvm version-remote --lts=argon&lt;/code&gt; / &lt;code&gt;nvm version-remote &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm version-remote lts/argon&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Any time your local copy of &lt;code&gt;nvm&lt;/code&gt; connects to &lt;a href=&quot;https://nodejs.org&quot;&gt;https://nodejs.org&lt;/a&gt;, it will re-create the appropriate local aliases for all available LTS lines. These aliases (stored under &lt;code&gt;$NVM_DIR/alias/lts&lt;/code&gt;), are managed by &lt;code&gt;nvm&lt;/code&gt;, and you should not modify, remove, or create these files - expect your changes to be undone, and expect meddling with these files to cause bugs that will likely not be supported.&lt;/p&gt; 
&lt;p&gt;To get the latest LTS version of node and migrate your existing installed packages, use&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=current &#39;lts/*&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Migrating Global Packages While Installing&lt;/h3&gt; 
&lt;p&gt;If you want to install a new version of Node.js and migrate npm packages from a previous version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=node node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will first use &quot;nvm version node&quot; to identify the current version you&#39;re migrating packages from. Then it resolves the new version to install from the remote server and installs it. Lastly, it runs &quot;nvm reinstall-packages&quot; to reinstall the npm packages from your prior version of Node to the new one.&lt;/p&gt; 
&lt;p&gt;You can also install and migrate npm packages from specific versions of Node like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=5 6
nvm install --reinstall-packages-from=iojs v4.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that reinstalling packages &lt;em&gt;explicitly does not update the npm version&lt;/em&gt; — this is to ensure that npm isn&#39;t accidentally upgraded to a broken version for the new node version.&lt;/p&gt; 
&lt;p&gt;To update npm at the same time add the &lt;code&gt;--latest-npm&lt;/code&gt; flag, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=default --latest-npm &#39;lts/*&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, you can at any time run the following command to get the latest supported npm version on the current node version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install-latest-npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;ve already gotten an error to the effect of &quot;npm does not support Node.js&quot;, you&#39;ll need to (1) revert to a previous node version (&lt;code&gt;nvm ls&lt;/code&gt; &amp;amp; &lt;code&gt;nvm use &amp;lt;your latest _working_ version from the ls&amp;gt;&lt;/code&gt;), (2) delete the newly created node version (&lt;code&gt;nvm uninstall &amp;lt;your _broken_ version of node from the ls&amp;gt;&lt;/code&gt;), then (3) rerun your &lt;code&gt;nvm install&lt;/code&gt; with the &lt;code&gt;--latest-npm&lt;/code&gt; flag.&lt;/p&gt; 
&lt;h3&gt;Default Global Packages From File While Installing&lt;/h3&gt; 
&lt;p&gt;If you have a list of default packages you want installed every time you install a new version, we support that too -- just add the package names, one per line, to the file &lt;code&gt;$NVM_DIR/default-packages&lt;/code&gt;. You can add anything npm would accept as a package argument on the command line.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# $NVM_DIR/default-packages

rimraf
object-inspect@1.0.2
stevemao/left-pad
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;io.js&lt;/h3&gt; 
&lt;p&gt;If you want to install &lt;a href=&quot;https://github.com/iojs/io.js/&quot;&gt;io.js&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install iojs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to install a new version of io.js and migrate npm packages from a previous version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=iojs iojs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The same guidelines mentioned for migrating npm packages in node are applicable to io.js.&lt;/p&gt; 
&lt;h3&gt;System Version of Node&lt;/h3&gt; 
&lt;p&gt;If you want to use the system-installed version of node, you can use the special default alias &quot;system&quot;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm use system
nvm run system --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Listing Versions&lt;/h3&gt; 
&lt;p&gt;If you want to see what versions are installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm ls
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to see what versions are available to install:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm ls-remote
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Setting Custom Colors&lt;/h3&gt; 
&lt;p&gt;You can set five colors that will be used to display version and alias information. These colors replace the default colors. Initial colors are: g b y r e&lt;/p&gt; 
&lt;p&gt;Color codes:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;r/R = red / bold red

g/G = green / bold green

b/B = blue / bold blue

c/C = cyan / bold cyan

m/M = magenta / bold magenta

y/Y = yellow / bold yellow

k/K = black / bold black

e/W = light grey / white
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm set-colors rgBcm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Persisting custom colors&lt;/h4&gt; 
&lt;p&gt;If you want the custom colors to persist after terminating the shell, export the &lt;code&gt;NVM_COLORS&lt;/code&gt; variable in your shell profile. For example, if you want to use cyan, magenta, green, bold red and bold yellow, add the following line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_COLORS=&#39;cmgRY&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Suppressing colorized output&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;nvm help (or -h or --help)&lt;/code&gt;, &lt;code&gt;nvm ls&lt;/code&gt;, &lt;code&gt;nvm ls-remote&lt;/code&gt; and &lt;code&gt;nvm alias&lt;/code&gt; usually produce colorized output. You can disable colors with the &lt;code&gt;--no-colors&lt;/code&gt; option (or by setting the environment variable &lt;code&gt;TERM=dumb&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm ls --no-colors
nvm help --no-colors
TERM=dumb nvm ls
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Restoring PATH&lt;/h3&gt; 
&lt;p&gt;To restore your PATH, you can deactivate it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm deactivate
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Set default node version&lt;/h3&gt; 
&lt;p&gt;To set a default Node version to be used in any new shell, use the alias &#39;default&#39;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm alias default node # this refers to the latest installed version of node
nvm alias default 18 # this refers to the latest installed v18.x version of node
nvm alias default 18.12  # this refers to the latest installed v18.12.x version of node
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Use a mirror of node binaries&lt;/h3&gt; 
&lt;p&gt;To use a mirror of the node binaries, set &lt;code&gt;$NVM_NODEJS_ORG_MIRROR&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist
nvm install node

NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist nvm install 4.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use a mirror of the io.js binaries, set &lt;code&gt;$NVM_IOJS_ORG_MIRROR&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_IOJS_ORG_MIRROR=https://iojs.org/dist
nvm install iojs-v1.0.3

NVM_IOJS_ORG_MIRROR=https://iojs.org/dist nvm install iojs-v1.0.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;nvm use&lt;/code&gt; will not, by default, create a &quot;current&quot; symlink. Set &lt;code&gt;$NVM_SYMLINK_CURRENT&lt;/code&gt; to &quot;true&quot; to enable this behavior, which is sometimes useful for IDEs. Note that using &lt;code&gt;nvm&lt;/code&gt; in multiple shell tabs with this environment variable enabled can cause race conditions.&lt;/p&gt; 
&lt;h4&gt;Pass Authorization header to mirror&lt;/h4&gt; 
&lt;p&gt;To pass an Authorization header through to the mirror url, set &lt;code&gt;$NVM_AUTH_HEADER&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;NVM_AUTH_HEADER=&quot;Bearer secret-token&quot; nvm install node
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;.nvmrc&lt;/h3&gt; 
&lt;p&gt;You can create a &lt;code&gt;.nvmrc&lt;/code&gt; file containing a node version number (or any other string that &lt;code&gt;nvm&lt;/code&gt; understands; see &lt;code&gt;nvm --help&lt;/code&gt; for details) in the project root directory (or any parent directory). Afterwards, &lt;code&gt;nvm use&lt;/code&gt;, &lt;code&gt;nvm install&lt;/code&gt;, &lt;code&gt;nvm exec&lt;/code&gt;, &lt;code&gt;nvm run&lt;/code&gt;, and &lt;code&gt;nvm which&lt;/code&gt; will use the version specified in the &lt;code&gt;.nvmrc&lt;/code&gt; file if no version is supplied on the command line.&lt;/p&gt; 
&lt;p&gt;For example, to make nvm default to the latest 5.9 release, the latest LTS version, or the latest node version for the current directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ echo &quot;5.9&quot; &amp;gt; .nvmrc

$ echo &quot;lts/*&quot; &amp;gt; .nvmrc # to default to the latest LTS version

$ echo &quot;node&quot; &amp;gt; .nvmrc # to default to the latest version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[NB these examples assume a POSIX-compliant shell version of &lt;code&gt;echo&lt;/code&gt;. If you use a Windows &lt;code&gt;cmd&lt;/code&gt; development environment, eg the &lt;code&gt;.nvmrc&lt;/code&gt; file is used to configure a remote Linux deployment, then keep in mind the &lt;code&gt;&quot;&lt;/code&gt;s will be copied leading to an invalid file. Remove them.]&lt;/p&gt; 
&lt;p&gt;Then when you run nvm use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm use
Found &#39;/path/to/project/.nvmrc&#39; with version &amp;lt;5.9&amp;gt;
Now using node v5.9.1 (npm v3.7.3)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running nvm install will also switch over to the correct version, but if the correct node version isn&#39;t already installed, it will install it for you.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm install
Found &#39;/path/to/project/.nvmrc&#39; with version &amp;lt;5.9&amp;gt;
Downloading and installing node v5.9.1...
Downloading https://nodejs.org/dist/v5.9.1/node-v5.9.1-linux-x64.tar.xz...
#################################################################################### 100.0%
Computing checksum with sha256sum
Checksums matched!
Now using node v5.9.1 (npm v3.7.3)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;nvm use&lt;/code&gt; et. al. will traverse directory structure upwards from the current directory looking for the &lt;code&gt;.nvmrc&lt;/code&gt; file. In other words, running &lt;code&gt;nvm use&lt;/code&gt; et. al. in any subdirectory of a directory with an &lt;code&gt;.nvmrc&lt;/code&gt; will result in that &lt;code&gt;.nvmrc&lt;/code&gt; being utilized.&lt;/p&gt; 
&lt;p&gt;The contents of a &lt;code&gt;.nvmrc&lt;/code&gt; file &lt;strong&gt;must&lt;/strong&gt; contain precisely one &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; (as described by &lt;code&gt;nvm --help&lt;/code&gt;) followed by a newline. &lt;code&gt;.nvmrc&lt;/code&gt; files may also have comments. The comment delimiter is &lt;code&gt;#&lt;/code&gt;, and it and any text after it, as well as blank lines, and leading and trailing white space, will be ignored when parsing.&lt;/p&gt; 
&lt;p&gt;Key/value pairs using &lt;code&gt;=&lt;/code&gt; are also allowed and ignored, but are reserved for future use, and may cause validation errors in the future.&lt;/p&gt; 
&lt;p&gt;Run &lt;a href=&quot;https://npmjs.com/nvmrc&quot;&gt;&lt;code&gt;npx nvmrc&lt;/code&gt;&lt;/a&gt; to validate an &lt;code&gt;.nvmrc&lt;/code&gt; file. If that tool’s results do not agree with nvm, one or the other has a bug - please file an issue.&lt;/p&gt; 
&lt;h3&gt;Deeper Shell Integration&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://github.com/iamogbz/nvshim&quot;&gt;&lt;code&gt;nvshim&lt;/code&gt;&lt;/a&gt; to shim the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;npm&lt;/code&gt;, and &lt;code&gt;npx&lt;/code&gt; bins to automatically use the &lt;code&gt;nvm&lt;/code&gt; config in the current directory. &lt;code&gt;nvshim&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; supported by the &lt;code&gt;nvm&lt;/code&gt; maintainers. Please &lt;a href=&quot;https://github.com/iamogbz/nvshim/issues/new&quot;&gt;report issues to the &lt;code&gt;nvshim&lt;/code&gt; team&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you prefer a lighter-weight solution, the recipes below have been contributed by &lt;code&gt;nvm&lt;/code&gt; users. They are &lt;strong&gt;not&lt;/strong&gt; supported by the &lt;code&gt;nvm&lt;/code&gt; maintainers. We are, however, accepting pull requests for more examples.&lt;/p&gt; 
&lt;h4&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/h4&gt; 
&lt;p&gt;In your profile (&lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt;), add the following to &lt;code&gt;nvm use&lt;/code&gt; whenever you enter a new directory:&lt;/p&gt; 
&lt;h5&gt;bash&lt;/h5&gt; 
&lt;p&gt;Put the following at the end of your &lt;code&gt;$HOME/.bashrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cdnvm() {
    command cd &quot;$@&quot; || return $?
    nvm_path=&quot;$(nvm_find_up .nvmrc | command tr -d &#39;\n&#39;)&quot;

    # If there are no .nvmrc file, use the default nvm version
    if [[ ! $nvm_path = *[^[:space:]]* ]]; then

        declare default_version
        default_version=&quot;$(nvm version default)&quot;

        # If there is no default version, set it to `node`
        # This will use the latest version on your machine
        if [ $default_version = &#39;N/A&#39; ]; then
            nvm alias default node
            default_version=$(nvm version default)
        fi

        # If the current version is not the default version, set it to use the default version
        if [ &quot;$(nvm current)&quot; != &quot;${default_version}&quot; ]; then
            nvm use default
        fi
    elif [[ -s &quot;${nvm_path}/.nvmrc&quot; &amp;amp;&amp;amp; -r &quot;${nvm_path}/.nvmrc&quot; ]]; then
        declare nvm_version
        nvm_version=$(&amp;lt;&quot;${nvm_path}&quot;/.nvmrc)

        declare locally_resolved_nvm_version
        # `nvm ls` will check all locally-available versions
        # If there are multiple matching versions, take the latest one
        # Remove the `-&amp;gt;` and `*` characters and spaces
        # `locally_resolved_nvm_version` will be `N/A` if no local versions are found
        locally_resolved_nvm_version=$(nvm ls --no-colors &quot;${nvm_version}&quot; | command tail -1 | command tr -d &#39;\-&amp;gt;*&#39; | command tr -d &#39;[:space:]&#39;)

        # If it is not already installed, install it
        # `nvm install` will implicitly use the newly-installed version
        if [ &quot;${locally_resolved_nvm_version}&quot; = &#39;N/A&#39; ]; then
            nvm install &quot;${nvm_version}&quot;;
        elif [ &quot;$(nvm current)&quot; != &quot;${locally_resolved_nvm_version}&quot; ]; then
            nvm use &quot;${nvm_version}&quot;;
        fi
    fi
}

alias cd=&#39;cdnvm&#39;
cdnvm &quot;$PWD&quot; || exit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This alias would search &#39;up&#39; from your current directory in order to detect a &lt;code&gt;.nvmrc&lt;/code&gt; file. If it finds it, it will switch to that version; if not, it will use the default version.&lt;/p&gt; 
&lt;h5&gt;zsh&lt;/h5&gt; 
&lt;p&gt;This shell function will install (if needed) and &lt;code&gt;nvm use&lt;/code&gt; the specified Node version when an &lt;code&gt;.nvmrc&lt;/code&gt; is found, and &lt;code&gt;nvm use default&lt;/code&gt; otherwise.&lt;/p&gt; 
&lt;p&gt;Put this into your &lt;code&gt;$HOME/.zshrc&lt;/code&gt; to call &lt;code&gt;nvm use&lt;/code&gt; automatically whenever you enter a directory that contains an &lt;code&gt;.nvmrc&lt;/code&gt; file with a string telling nvm which node to &lt;code&gt;use&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;# place this after nvm initialization!
autoload -U add-zsh-hook

load-nvmrc() {
  local nvmrc_path
  nvmrc_path=&quot;$(nvm_find_nvmrc)&quot;

  if [ -n &quot;$nvmrc_path&quot; ]; then
    local nvmrc_node_version
    nvmrc_node_version=$(nvm version &quot;$(cat &quot;${nvmrc_path}&quot;)&quot;)

    if [ &quot;$nvmrc_node_version&quot; = &quot;N/A&quot; ]; then
      nvm install
    elif [ &quot;$nvmrc_node_version&quot; != &quot;$(nvm version)&quot; ]; then
      nvm use
    fi
  elif [ -n &quot;$(PWD=$OLDPWD nvm_find_nvmrc)&quot; ] &amp;amp;&amp;amp; [ &quot;$(nvm version)&quot; != &quot;$(nvm version default)&quot; ]; then
    echo &quot;Reverting to nvm default version&quot;
    nvm use default
  fi
}

add-zsh-hook chpwd load-nvmrc
load-nvmrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After saving the file, run &lt;code&gt;source ~/.zshrc&lt;/code&gt; to reload the configuration with the latest changes made.&lt;/p&gt; 
&lt;h5&gt;fish&lt;/h5&gt; 
&lt;p&gt;This requires that you have &lt;a href=&quot;https://github.com/edc/bass&quot;&gt;bass&lt;/a&gt; installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-fish&quot;&gt;# ~/.config/fish/functions/nvm.fish
function nvm
  bass source ~/.nvm/nvm.sh --no-use &#39;;&#39; nvm $argv
end

# ~/.config/fish/functions/nvm_find_nvmrc.fish
function nvm_find_nvmrc
  bass source ~/.nvm/nvm.sh --no-use &#39;;&#39; nvm_find_nvmrc
end

# ~/.config/fish/functions/load_nvm.fish
function load_nvm --on-variable=&quot;PWD&quot;
  set -l default_node_version (nvm version default)
  set -l node_version (nvm version)
  set -l nvmrc_path (nvm_find_nvmrc)
  if test -n &quot;$nvmrc_path&quot;
    set -l nvmrc_node_version (nvm version (cat $nvmrc_path))
    if test &quot;$nvmrc_node_version&quot; = &quot;N/A&quot;
      nvm install (cat $nvmrc_path)
    else if test &quot;$nvmrc_node_version&quot; != &quot;$node_version&quot;
      nvm use $nvmrc_node_version
    end
  else if test &quot;$node_version&quot; != &quot;$default_node_version&quot;
    echo &quot;Reverting to default Node version&quot;
    nvm use default
  end
end

# ~/.config/fish/config.fish
# You must call it on initialization or listening to directory switching won&#39;t work
load_nvm &amp;gt; /dev/stderr
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running Tests&lt;/h2&gt; 
&lt;p&gt;Tests are written in &lt;a href=&quot;https://git.sdf.org/tlevine/urchin&quot;&gt;Urchin&lt;/a&gt;. Install Urchin (and other dependencies) like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are slow tests and fast tests. The slow tests do things like install node and check that the right versions are used. The fast tests fake this to test things like aliases and uninstalling. From the root of the nvm git repository, run the fast tests like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run test/fast
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the slow tests like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run test/slow
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run all of the tests like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Nota bene: Avoid running nvm while the tests are running.&lt;/p&gt; 
&lt;h2&gt;Environment variables&lt;/h2&gt; 
&lt;p&gt;nvm exposes the following environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;NVM_DIR&lt;/code&gt; - nvm&#39;s installation directory.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_BIN&lt;/code&gt; - where node, npm, and global packages for the active version of node are installed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_INC&lt;/code&gt; - node&#39;s include file directory (useful for building C/C++ addons for node).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_CD_FLAGS&lt;/code&gt; - used to maintain compatibility with zsh.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_RC_VERSION&lt;/code&gt; - version from .nvmrc file if being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Additionally, nvm modifies &lt;code&gt;PATH&lt;/code&gt;, and, if present, &lt;code&gt;MANPATH&lt;/code&gt; and &lt;code&gt;NODE_PATH&lt;/code&gt; when changing versions.&lt;/p&gt; 
&lt;h2&gt;Bash Completion&lt;/h2&gt; 
&lt;p&gt;To activate, you need to source &lt;code&gt;bash_completion&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;[[ -r $NVM_DIR/bash_completion ]] &amp;amp;&amp;amp; \. $NVM_DIR/bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Put the above sourcing line just below the sourcing line for nvm in your profile (&lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.bash_profile&lt;/code&gt;).&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;nvm:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;alias               deactivate          install             list-remote         reinstall-packages  uninstall           version
cache               exec                install-latest-npm  ls                  run                 unload              version-remote
current             help                list                ls-remote           unalias             use                 which
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;nvm alias:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm alias&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;default      iojs         lts/*        lts/argon    lts/boron    lts/carbon   lts/dubnium  lts/erbium   node         stable       unstable
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm alias my_alias&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;v10.22.0       v12.18.3      v14.8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;nvm use:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm use&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;my_alias        default        v10.22.0       v12.18.3      v14.8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;nvm uninstall:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm uninstall&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;my_alias        default        v10.22.0       v12.18.3      v14.8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Compatibility Issues&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; will encounter some issues if you have some non-default settings set. (see &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/606&quot;&gt;#606&lt;/a&gt;) The following are known to cause issues:&lt;/p&gt; 
&lt;p&gt;Inside &lt;code&gt;~/.npmrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;prefix=&#39;some/path&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Environment Variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$NPM_CONFIG_PREFIX
$PREFIX
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Shell settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;set -e
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installing nvm on Alpine Linux&lt;/h2&gt; 
&lt;p&gt;In order to provide the best performance (and other optimizations), nvm will download and install pre-compiled binaries for Node (and npm) when you run &lt;code&gt;nvm install X&lt;/code&gt;. The Node project compiles, tests and hosts/provides these pre-compiled binaries which are built for mainstream/traditional Linux distributions (such as Debian, Ubuntu, CentOS, RedHat et al).&lt;/p&gt; 
&lt;p&gt;Alpine Linux, unlike mainstream/traditional Linux distributions, is based on &lt;a href=&quot;https://www.busybox.net/&quot;&gt;BusyBox&lt;/a&gt;, a very compact (~5MB) Linux distribution. BusyBox (and thus Alpine Linux) uses a different C/C++ stack to most mainstream/traditional Linux distributions - &lt;a href=&quot;https://www.musl-libc.org/&quot;&gt;musl&lt;/a&gt;. This makes binary programs built for such mainstream/traditional incompatible with Alpine Linux, thus we cannot simply &lt;code&gt;nvm install X&lt;/code&gt; on Alpine Linux and expect the downloaded binary to run correctly - you&#39;ll likely see &quot;...does not exist&quot; errors if you try that.&lt;/p&gt; 
&lt;p&gt;There is a &lt;code&gt;-s&lt;/code&gt; flag for &lt;code&gt;nvm install&lt;/code&gt; which requests nvm download Node source and compile it locally.&lt;/p&gt; 
&lt;p&gt;If installing nvm on Alpine Linux &lt;em&gt;is&lt;/em&gt; still what you want or need to do, you should be able to achieve this by running the following from you Alpine Linux shell, depending on which version you are using:&lt;/p&gt; 
&lt;h3&gt;Alpine Linux 3.13+&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;apk add -U curl bash ca-certificates openssl ncurses coreutils python3 make gcc g++ libgcc linux-headers grep util-linux binutils findutils
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Alpine Linux 3.5 - 3.12&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;apk add -U curl bash ca-certificates openssl ncurses coreutils python2 make gcc g++ libgcc linux-headers grep util-linux binutils findutils
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: Alpine 3.5 can only install NodeJS versions up to v6.9.5, Alpine 3.6 can only install versions up to v6.10.3, Alpine 3.7 installs versions up to v8.9.3, Alpine 3.8 installs versions up to v8.14.0, Alpine 3.9 installs versions up to v10.19.0, Alpine 3.10 installs versions up to v10.24.1, Alpine 3.11 installs versions up to v12.22.6, Alpine 3.12 installs versions up to v12.22.12, Alpine 3.13 &amp;amp; 3.14 install versions up to v14.20.0, Alpine 3.15 &amp;amp; 3.16 install versions up to v16.16.0 (&lt;strong&gt;These are all versions on the main branch&lt;/strong&gt;). Alpine 3.5 - 3.12 required the package &lt;code&gt;python2&lt;/code&gt; to build NodeJS, as they are older versions to build. Alpine 3.13+ requires &lt;code&gt;python3&lt;/code&gt; to successfully build newer NodeJS versions, but you can use &lt;code&gt;python2&lt;/code&gt; with Alpine 3.13+ if you need to build versions of node supported in Alpine 3.5 - 3.15, you just need to specify what version of NodeJS you need to install in the package install script.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The Node project has some desire but no concrete plans (due to the overheads of building, testing and support) to offer Alpine-compatible binaries.&lt;/p&gt; 
&lt;p&gt;As a potential alternative, @mhart (a Node contributor) has some &lt;a href=&quot;https://github.com/mhart/alpine-node&quot;&gt;Docker images for Alpine Linux with Node and optionally, npm, pre-installed&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;removal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Uninstalling / Removal&lt;/h2&gt; 
&lt;h3&gt;Manual Uninstall&lt;/h3&gt; 
&lt;p&gt;To remove &lt;code&gt;nvm&lt;/code&gt; manually, execute the following:&lt;/p&gt; 
&lt;p&gt;First, use &lt;code&gt;nvm unload&lt;/code&gt; to remove the nvm command from your terminal session and delete the installation directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm_dir=&quot;${NVM_DIR:-~/.nvm}&quot;
$ nvm unload
$ rm -rf &quot;$nvm_dir&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Edit &lt;code&gt;~/.bashrc&lt;/code&gt; (or other shell resource config) and remove the lines below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm
[[ -r $NVM_DIR/bash_completion ]] &amp;amp;&amp;amp; \. $NVM_DIR/bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Docker For Development Environment&lt;/h2&gt; 
&lt;p&gt;To make the development and testing work easier, we have a Dockerfile for development usage, which is based on Ubuntu 18.04 base image, prepared with essential and useful tools for &lt;code&gt;nvm&lt;/code&gt; development, to build the docker image of the environment, run the docker command at the root of &lt;code&gt;nvm&lt;/code&gt; repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ docker build -t nvm-dev .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will package your current nvm repository with our pre-defined development environment into a docker image named &lt;code&gt;nvm-dev&lt;/code&gt;, once it&#39;s built with success, validate your image via &lt;code&gt;docker images&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ docker images

REPOSITORY         TAG                 IMAGE ID            CREATED             SIZE
nvm-dev            latest              9ca4c57a97d8        7 days ago          650 MB
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you got no error message, now you can easily involve in:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ docker run -h nvm-dev -it nvm-dev

nvm@nvm-dev:~/.nvm$
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that it&#39;ll take about 8 minutes to build the image and the image size would be about 650MB, so it&#39;s not suitable for production usage.&lt;/p&gt; 
&lt;p&gt;For more information and documentation about docker, please refer to its official website:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;https://www.docker.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/&quot;&gt;https://docs.docker.com/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Problems&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you try to install a node version and the installation fails, be sure to run &lt;code&gt;nvm cache clear&lt;/code&gt; to delete cached node downloads, or you might get an error like the following:&lt;/p&gt; &lt;p&gt;curl: (33) HTTP server doesn&#39;t seem to support byte ranges. Cannot resume.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Where&#39;s my &lt;code&gt;sudo node&lt;/code&gt;? Check out &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/43&quot;&gt;#43&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After the v0.8.6 release of node, nvm tries to install from binary packages. But in some systems, the official binary packages don&#39;t work due to incompatibility of shared libs. In such cases, use &lt;code&gt;-s&lt;/code&gt; option to force install from source:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install -s 0.8.6
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;If setting the &lt;code&gt;default&lt;/code&gt; alias does not establish the node version in new shells (i.e. &lt;code&gt;nvm current&lt;/code&gt; yields &lt;code&gt;system&lt;/code&gt;), ensure that the system&#39;s node &lt;code&gt;PATH&lt;/code&gt; is set before the &lt;code&gt;nvm.sh&lt;/code&gt; source line in your shell profile (see &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/658&quot;&gt;#658&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;macOS Troubleshooting&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;nvm node version not found in vim shell&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you set node version to a version other than your system node version &lt;code&gt;nvm use 6.2.1&lt;/code&gt; and open vim and run &lt;code&gt;:!node -v&lt;/code&gt; you should see &lt;code&gt;v6.2.1&lt;/code&gt; if you see your system version &lt;code&gt;v0.12.7&lt;/code&gt;. You need to run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo chmod ugo-x /usr/libexec/path_helper
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More on this issue in &lt;a href=&quot;https://github.com/dotphiles/dotzsh#mac-os-x&quot;&gt;dotphiles/dotzsh&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;nvm is not compatible with the npm config &quot;prefix&quot; option&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Some solutions for this issue can be found &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/1245&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;There is one more edge case causing this issue, and that&#39;s a &lt;strong&gt;mismatch between the &lt;code&gt;$HOME&lt;/code&gt; path and the user&#39;s home directory&#39;s actual name&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;You have to make sure that the user directory name in &lt;code&gt;$HOME&lt;/code&gt; and the user directory name you&#39;d see from running &lt;code&gt;ls /Users/&lt;/code&gt; &lt;strong&gt;are capitalized the same way&lt;/strong&gt; (&lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/2261&quot;&gt;See this issue&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;To change the user directory and/or account name follow the instructions &lt;a href=&quot;https://support.apple.com/en-us/HT201548&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Homebrew makes zsh directories unsecure&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;zsh compinit: insecure directories, run compaudit for list.
Ignore insecure directories and continue [y] or abort compinit [n]? y
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Homebrew causes insecure directories like &lt;code&gt;/usr/local/share/zsh/site-functions&lt;/code&gt; and &lt;code&gt;/usr/local/share/zsh&lt;/code&gt;. This is &lt;strong&gt;not&lt;/strong&gt; an &lt;code&gt;nvm&lt;/code&gt; problem - it is a homebrew problem. Refer &lt;a href=&quot;https://github.com/zsh-users/zsh-completions/issues/680&quot;&gt;here&lt;/a&gt; for some solutions related to the issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Macs with Apple Silicon chips&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Experimental support for the Apple Silicon chip architecture was added in node.js v15.3 and full support was added in v16.0. Because of this, if you try to install older versions of node as usual, you will probably experience either compilation errors when installing node or out-of-memory errors while running your code.&lt;/p&gt; 
&lt;p&gt;So, if you want to run a version prior to v16.0 on an Apple Silicon Mac, it may be best to compile node targeting the &lt;code&gt;x86_64&lt;/code&gt; Intel architecture so that Rosetta 2 can translate the &lt;code&gt;x86_64&lt;/code&gt; processor instructions to ARM-based Apple Silicon instructions. Here&#39;s what you will need to do:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Install Rosetta, if you haven&#39;t already done so&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ softwareupdate --install-rosetta
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You might wonder, &quot;how will my Apple Silicon Mac know to use Rosetta for a version of node compiled for an Intel chip?&quot;. If an executable contains only Intel instructions, macOS will automatically use Rosetta to translate the instructions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open a shell that&#39;s running using Rosetta&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ arch -x86_64 zsh
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: This same thing can also be accomplished by finding the Terminal or iTerm App in Finder, right clicking, selecting &quot;Get Info&quot;, and then checking the box labeled &quot;Open using Rosetta&quot;.&lt;/p&gt; &lt;p&gt;Note: This terminal session is now running in &lt;code&gt;zsh&lt;/code&gt;. If &lt;code&gt;zsh&lt;/code&gt; is not the shell you typically use, &lt;code&gt;nvm&lt;/code&gt; may not be &lt;code&gt;source&lt;/code&gt;&#39;d automatically like it probably is for your usual shell through your dotfiles. If that&#39;s the case, make sure to source &lt;code&gt;nvm&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ source &quot;${NVM_DIR}/nvm.sh&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install whatever older version of node you are interested in. Let&#39;s use 12.22.1 as an example. This will fetch the node source code and compile it, which will take several minutes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm install v12.22.1 --shared-zlib
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: You&#39;re probably curious why &lt;code&gt;--shared-zlib&lt;/code&gt; is included. There&#39;s a bug in recent versions of Apple&#39;s system &lt;code&gt;clang&lt;/code&gt; compiler. If one of these broken versions is installed on your system, the above step will likely still succeed even if you didn&#39;t include the &lt;code&gt;--shared-zlib&lt;/code&gt; flag. However, later, when you attempt to &lt;code&gt;npm install&lt;/code&gt; something using your old version of node.js, you will see &lt;code&gt;incorrect data check&lt;/code&gt; errors. If you want to avoid the possible hassle of dealing with this, include that flag. For more details, see &lt;a href=&quot;https://github.com/nodejs/node/issues/39313&quot;&gt;this issue&lt;/a&gt; and &lt;a href=&quot;https://github.com/nodejs/node/issues/39313#issuecomment-90.40.276&quot;&gt;this comment&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Exit back to your native shell.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ exit
$ arch
arm64
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: If you selected the box labeled &quot;Open using Rosetta&quot; rather than running the CLI command in the second step, you will see &lt;code&gt;i386&lt;/code&gt; here. Unless you have another reason to have that box selected, you can deselect it now.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Check to make sure the architecture is correct. &lt;code&gt;x64&lt;/code&gt; is the abbreviation for &lt;code&gt;x86_64&lt;/code&gt;, which is what you want to see.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ node -p process.arch
x64
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Now you should be able to use node as usual.&lt;/p&gt; 
&lt;h2&gt;WSL Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you&#39;ve encountered this error on WSL-2:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                Dload  Upload  Total   Spent    Left  Speed
0     0    0     0    0     0      0      0 --:--:--  0:00:09 --:--:--     0curl: (6) Could not resolve host: raw.githubusercontent.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It may be due to your antivirus, VPN, or other reasons.&lt;/p&gt; 
&lt;p&gt;Where you can &lt;code&gt;ping 8.8.8.8&lt;/code&gt; while you can&#39;t &lt;code&gt;ping google.com&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This could simply be solved by running this in your root directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo rm /etc/resolv.conf
sudo bash -c &#39;echo &quot;nameserver 8.8.8.8&quot; &amp;gt; /etc/resolv.conf&#39;
sudo bash -c &#39;echo &quot;[network]&quot; &amp;gt; /etc/wsl.conf&#39;
sudo bash -c &#39;echo &quot;generateResolvConf = false&quot; &amp;gt;&amp;gt; /etc/wsl.conf&#39;
sudo chattr +i /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This deletes your &lt;code&gt;resolv.conf&lt;/code&gt; file that is automatically generated when you run WSL, creates a new file and puts &lt;code&gt;nameserver 8.8.8.8&lt;/code&gt;, then creates a &lt;code&gt;wsl.conf&lt;/code&gt; file and adds &lt;code&gt;[network]&lt;/code&gt; and &lt;code&gt;generateResolveConf = false&lt;/code&gt; to prevent auto-generation of that file.&lt;/p&gt; 
&lt;p&gt;You can check the contents of the file by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cat /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;Currently, the sole maintainer is &lt;a href=&quot;https://github.com/ljharb&quot;&gt;@ljharb&lt;/a&gt; - more maintainers are quite welcome, and we hope to add folks to the team over time. &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/GOVERNANCE.md&quot;&gt;Governance&lt;/a&gt; will be re-evaluated as the project evolves.&lt;/p&gt; 
&lt;h2&gt;Project Support&lt;/h2&gt; 
&lt;p&gt;Only the latest version (v0.40.2 at this time) is supported.&lt;/p&gt; 
&lt;h2&gt;Enterprise Support&lt;/h2&gt; 
&lt;p&gt;If you are unable to update to the latest version of &lt;code&gt;nvm&lt;/code&gt;, our &lt;a href=&quot;https://openjsf.org/ecosystem-sustainability-program&quot;&gt;partners&lt;/a&gt; provide commercial security fixes for all unsupported versions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.herodevs.com/support?utm_source=OpenJS&amp;amp;utm_medium=Link&amp;amp;utm_campaign=nvm_openjs&quot;&gt;HeroDevs Never-Ending Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/LICENSE.md&quot;&gt;LICENSE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Copyright notice&lt;/h2&gt; 
&lt;p&gt;Copyright &lt;a href=&quot;https://openjsf.org&quot;&gt;OpenJS Foundation&lt;/a&gt; and &lt;code&gt;nvm&lt;/code&gt; contributors. All rights reserved. The &lt;a href=&quot;https://openjsf.org&quot;&gt;OpenJS Foundation&lt;/a&gt; has registered trademarks and uses trademarks. For a list of trademarks of the &lt;a href=&quot;https://openjsf.org&quot;&gt;OpenJS Foundation&lt;/a&gt;, please see our &lt;a href=&quot;https://trademark-policy.openjsf.org/&quot;&gt;Trademark Policy&lt;/a&gt; and &lt;a href=&quot;https://trademark-list.openjsf.org/&quot;&gt;Trademark List&lt;/a&gt;. Trademarks and logos not indicated on the &lt;a href=&quot;https://trademark-list.openjsf.org&quot;&gt;list of OpenJS Foundation trademarks&lt;/a&gt; are trademarks™ or registered® trademarks of their respective holders. Use of them does not imply any affiliation with or endorsement by them. &lt;a href=&quot;https://openjsf.org/&quot;&gt;The OpenJS Foundation&lt;/a&gt; | &lt;a href=&quot;https://terms-of-use.openjsf.org/&quot;&gt;Terms of Use&lt;/a&gt; | &lt;a href=&quot;https://privacy-policy.openjsf.org/&quot;&gt;Privacy Policy&lt;/a&gt; | &lt;a href=&quot;https://bylaws.openjsf.org/&quot;&gt;Bylaws&lt;/a&gt; | &lt;a href=&quot;https://code-of-conduct.openjsf.org&quot;&gt;Code of Conduct&lt;/a&gt; | &lt;a href=&quot;https://trademark-policy.openjsf.org/&quot;&gt;Trademark Policy&lt;/a&gt; | &lt;a href=&quot;https://trademark-list.openjsf.org/&quot;&gt;Trademark List&lt;/a&gt; | &lt;a href=&quot;https://www.linuxfoundation.org/cookies/&quot;&gt;Cookie Policy&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nicolaka/netshoot</title>
      <link>https://github.com/nicolaka/netshoot</link>
      <description>&lt;p&gt;a Docker + Kubernetes network trouble-shooting swiss-army container&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;netshoot: a Docker + Kubernetes network trouble-shooting swiss-army container&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;                    dP            dP                           dP
                    88            88                           88
88d888b. .d8888b. d8888P .d8888b. 88d888b. .d8888b. .d8888b. d8888P
88&#39;  `88 88ooood8   88   Y8ooooo. 88&#39;  `88 88&#39;  `88 88&#39;  `88   88
88    88 88.  ...   88         88 88    88 88.  .88 88.  .88   88
dP    dP `88888P&#39;   dP   `88888P&#39; dP    dP `88888P&#39; `88888P&#39;   dP
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Purpose:&lt;/strong&gt; Docker and Kubernetes network troubleshooting can become complex. With proper understanding of how Docker and Kubernetes networking works and the right set of tools, you can troubleshoot and resolve these networking issues. The &lt;code&gt;netshoot&lt;/code&gt; container has a set of powerful networking troubleshooting tools that can be used to troubleshoot Docker networking issues. Along with these tools come a set of use-cases that show how this container can be used in real-world scenarios.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Network Namespaces:&lt;/strong&gt; Before starting to use this tool, it&#39;s important to go over one key topic: &lt;strong&gt;Network Namespaces&lt;/strong&gt;. Network namespaces provide isolation of the system resources associated with networking. Docker uses network and other type of namespaces (&lt;code&gt;pid&lt;/code&gt;,&lt;code&gt;mount&lt;/code&gt;,&lt;code&gt;user&lt;/code&gt;..etc) to create an isolated environment for each container. Everything from interfaces, routes, and IPs is completely isolated within the network namespace of the container.&lt;/p&gt; 
&lt;p&gt;Kubernetes also uses network namespaces. Kubelets creates a network namespace per pod where all containers in that pod share that same network namespace (eths,IP, tcp sockets...etc). This is a key difference between Docker containers and Kubernetes pods.&lt;/p&gt; 
&lt;p&gt;Cool thing about namespaces is that you can switch between them. You can enter a different container&#39;s network namespace, perform some troubleshooting on its network&#39;s stack with tools that aren&#39;t even installed on that container. Additionally, &lt;code&gt;netshoot&lt;/code&gt; can be used to troubleshoot the host itself by using the host&#39;s network namespace. This allows you to perform any troubleshooting without installing any new packages directly on the host or your application&#39;s package.&lt;/p&gt; 
&lt;h2&gt;Netshoot with Docker&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Container&#39;s Network Namespace:&lt;/strong&gt; If you&#39;re having networking issues with your application&#39;s container, you can launch &lt;code&gt;netshoot&lt;/code&gt; with that container&#39;s network namespace like this:&lt;/p&gt; &lt;p&gt;&lt;code&gt;$ docker run -it --net container:&amp;lt;container_name&amp;gt; nicolaka/netshoot&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Host&#39;s Network Namespace:&lt;/strong&gt; If you think the networking issue is on the host itself, you can launch &lt;code&gt;netshoot&lt;/code&gt; with that host&#39;s network namespace:&lt;/p&gt; &lt;p&gt;&lt;code&gt;$ docker run -it --net host nicolaka/netshoot&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Network&#39;s Network Namespace:&lt;/strong&gt; If you want to troubleshoot a Docker network, you can enter the network&#39;s namespace using &lt;code&gt;nsenter&lt;/code&gt;. This is explained in the &lt;code&gt;nsenter&lt;/code&gt; section below.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Netshoot with Docker Compose&lt;/h2&gt; 
&lt;p&gt;You can easily deploy &lt;code&gt;netshoot&lt;/code&gt; using Docker Compose using something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;version: &quot;3.6&quot;
services:
  tcpdump:
    image: nicolaka/netshoot
    depends_on:
      - nginx
    command: tcpdump -i eth0 -w /data/nginx.pcap
    network_mode: service:nginx
    volumes:
      - $PWD/data:/data

  nginx:
    image: nginx:alpine
    ports:
      - 80:80
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Netshoot with Kubernetes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;if you want to debug using an &lt;a href=&quot;https://kubernetes.io/docs/tasks/debug/debug-application/debug-running-pod/#ephemeral-container-example&quot;&gt;ephemeral container&lt;/a&gt; in an existing pod:&lt;/p&gt; &lt;p&gt;&lt;code&gt;$ kubectl debug mypod -it --image=nicolaka/netshoot&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;if you want to spin up a throw away pod for debugging.&lt;/p&gt; &lt;p&gt;&lt;code&gt;$ kubectl run tmp-shell --rm -i --tty --image nicolaka/netshoot&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;if you want to spin up a container on the host&#39;s network namespace.&lt;/p&gt; &lt;p&gt;&lt;code&gt;$ kubectl run tmp-shell --rm -i --tty --overrides=&#39;{&quot;spec&quot;: {&quot;hostNetwork&quot;: true}}&#39; --image nicolaka/netshoot&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;if you want to use netshoot as a sidecar container to troubleshoot your application container&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;   $ cat netshoot-sidecar.yaml
   apiVersion: apps/v1
   kind: Deployment
   metadata:
       name: nginx-netshoot
       labels:
           app: nginx-netshoot
   spec:
   replicas: 1
   selector:
       matchLabels:
           app: nginx-netshoot
   template:
       metadata:
       labels:
           app: nginx-netshoot
       spec:
           containers:
           - name: nginx
           image: nginx:1.14.2
           ports:
               - containerPort: 80
           - name: netshoot
           image: nicolaka/netshoot
           command: [&quot;/bin/bash&quot;]
           args: [&quot;-c&quot;, &quot;while true; do ping localhost; sleep 60;done&quot;]

   $ kubectl apply -f netshoot-sidecar.yaml
     deployment.apps/nginx-netshoot created

   $ kubectl get pod
NAME                              READY   STATUS    RESTARTS   AGE
nginx-netshoot-7f9c6957f8-kr8q6   2/2     Running   0          4m27s

   $ kubectl exec -it nginx-netshoot-7f9c6957f8-kr8q6 -c netshoot -- /bin/zsh
                       dP            dP                           dP
                       88            88                           88
   88d888b. .d8888b. d8888P .d8888b. 88d888b. .d8888b. .d8888b. d8888P
   88&#39;  `88 88ooood8   88   Y8ooooo. 88&#39;  `88 88&#39;  `88 88&#39;  `88   88
   88    88 88.  ...   88         88 88    88 88.  .88 88.  .88   88
   dP    dP `88888P&#39;   dP   `88888P&#39; dP    dP `88888P&#39; `88888P&#39;   dP

   Welcome to Netshoot! (github.com/nicolaka/netshoot)


   nginx-netshoot-7f9c6957f8-kr8q6 $ 
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;The netshoot kubectl plugin&lt;/h2&gt; 
&lt;p&gt;To easily troubleshoot networking issues in your k8s environment, you can leverage the &lt;a href=&quot;https://github.com/nilic/kubectl-netshoot&quot;&gt;Netshoot Kubectl Plugin&lt;/a&gt; (shout out to Nebojsa Ilic for creating it!). Using this kubectl plugin, you can easily create ephemeral &lt;code&gt;netshoot&lt;/code&gt; containers to troubleshoot existing pods, k8s controller or worker nodes. To install the plugin, follow &lt;a href=&quot;https://github.com/nilic/kubectl-netshoot#installation&quot;&gt;these steps&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Sample Usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# spin up a throwaway pod for troubleshooting
kubectl netshoot run tmp-shell

# debug using an ephemeral container in an existing pod
kubectl netshoot debug my-existing-pod

# create a debug session on a node
kubectl netshoot debug node/my-node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Network Problems&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Many network issues could result in application performance degradation. Some of those issues could be related to the underlying networking infrastructure(underlay). Others could be related to misconfiguration at the host or Docker level. Let&#39;s take a look at common networking issues:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;latency&lt;/li&gt; 
 &lt;li&gt;routing&lt;/li&gt; 
 &lt;li&gt;DNS resolution&lt;/li&gt; 
 &lt;li&gt;firewall&lt;/li&gt; 
 &lt;li&gt;incomplete ARPs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To troubleshoot these issues, &lt;code&gt;netshoot&lt;/code&gt; includes a set of powerful tools as recommended by this diagram.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;http://www.brendangregg.com/Perf/linux_observability_tools.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Included Packages:&lt;/strong&gt; The following packages are included in &lt;code&gt;netshoot&lt;/code&gt;. We&#39;ll go over some with some sample use-cases.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;apache2-utils \
bash \
bind-tools \
bird \
bridge-utils \
busybox-extras \
conntrack-tools \
curl \
dhcping \
drill \
ethtool \
file\
fping \
grpcurl \
iftop \
iperf \
iperf3 \
iproute2 \
ipset \
iptables \
iptraf-ng \
iputils \
ipvsadm \
jq \
libc6-compat \
liboping \
ltrace \
mtr \
net-snmp-tools \
netcat-openbsd \
nftables \
ngrep \
nmap \
nmap-nping \
nmap-scripts \
openssl \
py3-pip \
py3-setuptools \
scapy \
socat \
speedtest-cli \
openssh \
strace \
tcpdump \
tcptraceroute \
tshark \
util-linux \
vim \
git \
zsh \
websocat \
swaks \
perl-crypt-ssleay \
perl-net-ssleay
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;strong&gt;Sample Use-cases&lt;/strong&gt;&lt;/h2&gt; 
&lt;h2&gt;iperf&lt;/h2&gt; 
&lt;p&gt;Purpose: test networking performance between two containers/hosts.&lt;/p&gt; 
&lt;p&gt;Create Overlay network:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ docker network create -d overlay perf-test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Launch two containers:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;🐳  → docker service create --name perf-test-a --network perf-test nicolaka/netshoot iperf -s -p 9999
7dkcckjs0g7b4eddv8e5ez9nv


🐳  → docker service create --name perf-test-b --network perf-test nicolaka/netshoot iperf -c perf-test-a -p 9999
2yb6fxls5ezfnav2z93lua8xl



 🐳  → docker service ls
ID            NAME         REPLICAS  IMAGE              COMMAND
2yb6fxls5ezf  perf-test-b  1/1       nicolaka/netshoot  iperf -c perf-test-a -p 9999
7dkcckjs0g7b  perf-test-a  1/1       nicolaka/netshoot  iperf -s -p 9999



🐳  → docker ps
CONTAINER ID        IMAGE                      COMMAND                  CREATED             STATUS              PORTS               NAMES
ce4ff40a5456        nicolaka/netshoot:latest   &quot;iperf -s -p 9999&quot;       31 seconds ago      Up 30 seconds                           perf-test-a.1.bil2mo8inj3r9nyrss1g15qav

🐳  → docker logs ce4ff40a5456
------------------------------------------------------------
Server listening on TCP port 9999
TCP window size: 85.3 KByte (default)
------------------------------------------------------------
[  4] local 10.0.3.3 port 9999 connected with 10.0.3.5 port 35102
[ ID] Interval       Transfer     Bandwidth
[  4]  0.0-10.0 sec  32.7 GBytes  28.1 Gbits/sec
[  5] local 10.0.3.3 port 9999 connected with 10.0.3.5 port 35112

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;tcpdump&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;tcpdump&lt;/strong&gt; is a powerful and common packet analyzer that runs under the command line. It allows the user to display TCP/IP and other packets being transmitted or received over an attached network interface.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Continuing on the iperf example. Let&#39;s launch netshoot with perf-test-a&#39;s container network namespace.

🐳  → docker run -it --net container:perf-test-a.1.0qlf1kaka0cq38gojf7wcatoa  nicolaka/netshoot 

# Capturing packets on eth0 and tcp port 9999.

/ # tcpdump -i eth0 port 9999 -c 1 -Xvv
tcpdump: listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes
23:14:09.771825 IP (tos 0x0, ttl 64, id 60898, offset 0, flags [DF], proto TCP (6), length 64360)
    10.0.3.5.60032 &amp;gt; 0e2ccbf3d608.9999: Flags [.], cksum 0x1563 (incorrect -&amp;gt; 0x895d), seq 222376702:222441010, ack 3545090958, win 221, options [nop,nop,TS val 2488870 ecr 2488869], length 64308
	0x0000:  4500 fb68 ede2 4000 4006 37a5 0a00 0305  E..h..@.@.7.....
	0x0010:  0a00 0303 ea80 270f 0d41 32fe d34d cb8e  ......&#39;..A2..M..
	0x0020:  8010 00dd 1563 0000 0101 080a 0025 fa26  .....c.......%.&amp;amp;
	0x0030:  0025 fa25 0000 0000 0000 0001 0000 270f  .%.%..........&#39;.
	0x0040:  0000 0000 0000 0000 ffff d8f0 3435 3637  ............4567
	0x0050:  3839 3031 3233 3435 3637 3839 3031 3233  8901234567890123
	0x0060:  3435 3637 3839 3031 3233 3435 3637 3839  4567890123456789
	0x0070:  3031 3233 3435 3637 3839 3031 3233 3435  0123456789012345
	0x0080:  3637 3839 3031 3233 3435 3637 3839 3031  6789012345678901
	0x0090:  3233 3435 3637 3839 3031 3233 3435 3637  2345678901234567
	0x00a0:  3839 3031 3233 3435 3637 3839 3031 3233  8901234567890123
	0x00b0:  3435 3637 3839 3031 3233 3435 3637 3839  4567890123456789
	0x00c0:  3031 3233 3435 3637 3839 3031 3233 3435  0123456789012345
	0x00d0:  3637 3839 3031 3233 3435 3637 3839 3031  6789012345678901
	0x00e0:  3233 3435 3637 3839 3031 3233 3435 3637  2345678901234567
	0x00f0:  3839 3031 3233 3435 3637 3839 3031 3233  8901234567890123
	0x0100:  3435 3637 3839 3031 3233 3435 3637 3839  4567890123456789
	
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More info on &lt;code&gt;tcpdump&lt;/code&gt; can be found &lt;a href=&quot;http://www.tcpdump.org/tcpdump_man.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;netstat&lt;/h2&gt; 
&lt;p&gt;Purpose: &lt;code&gt;netstat&lt;/code&gt; is a useful tool for checking your network configuration and activity.&lt;/p&gt; 
&lt;p&gt;Continuing on from &lt;code&gt;iperf&lt;/code&gt; example. Let&#39;s use &lt;code&gt;netstat&lt;/code&gt; to confirm that it&#39;s listening on port &lt;code&gt;9999&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;🐳  → docker run -it --net container:perf-test-a.1.0qlf1kaka0cq38gojf7wcatoa  nicolaka/netshoot 

/ # netstat -tulpn
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 127.0.0.11:46727        0.0.0.0:*               LISTEN      -
tcp        0      0 0.0.0.0:9999            0.0.0.0:*               LISTEN      -
udp        0      0 127.0.0.11:39552        0.0.0.0:*                           -
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;nmap&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;nmap&lt;/code&gt; (&quot;Network Mapper&quot;) is an open source tool for network exploration and security auditing. It is very useful for scanning to see which ports are open between a given set of hosts. This is a common thing to check for when installing Swarm or UCP because a range of ports is required for cluster communication. The command analyzes the connection pathway between the host where &lt;code&gt;nmap&lt;/code&gt; is running and the given target address.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;🐳  → docker run -it --privileged nicolaka/netshoot nmap -p 12376-12390 -dd 172.31.24.25

...
Discovered closed port 12388/tcp on 172.31.24.25
Discovered closed port 12379/tcp on 172.31.24.25
Discovered closed port 12389/tcp on 172.31.24.25
Discovered closed port 12376/tcp on 172.31.24.25
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are several states that ports will be discovered as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;open&lt;/code&gt;: the pathway to the port is open and there is an application listening on this port.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;closed&lt;/code&gt;: the pathway to the port is open but there is no application listening on this port.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;filtered&lt;/code&gt;: the pathway to the port is closed, blocked by a firewall, routing rules, or host-based rules.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;iftop&lt;/h2&gt; 
&lt;p&gt;Purpose: iftop does for network usage what top does for CPU usage. It listens to network traffic on a named interface and displays a table of current bandwidth usage by pairs of hosts.&lt;/p&gt; 
&lt;p&gt;Continuing the &lt;code&gt;iperf&lt;/code&gt; example.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt; → docker ps
CONTAINER ID        IMAGE                      COMMAND                  CREATED             STATUS              PORTS               NAMES
ce4ff40a5456        nicolaka/netshoot:latest   &quot;iperf -s -p 9999&quot;       5 minutes ago       Up 5 minutes                            perf-test-a.1.bil2mo8inj3r9nyrss1g15qav

🐳  → docker run -it --net container:perf-test-a.1.bil2mo8inj3r9nyrss1g15qav nicolaka/netshoot iftop -i eth0

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nicolaka/netshoot/master/img/iftop.png&quot; alt=&quot;iftop.png&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;drill&lt;/h2&gt; 
&lt;p&gt;Purpose: drill is a tool to designed to get all sorts of information out of the DNS.&lt;/p&gt; 
&lt;p&gt;Continuing the &lt;code&gt;iperf&lt;/code&gt; example, we&#39;ll use &lt;code&gt;drill&lt;/code&gt; to understand how services&#39; DNS is resolved in Docker.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;🐳  → docker run -it --net container:perf-test-a.1.bil2mo8inj3r9nyrss1g15qav nicolaka/netshoot drill -V 5 perf-test-b
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, rcode: NOERROR, id: 0
;; flags: rd ; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 0
;; QUESTION SECTION:
;; perf-test-b.	IN	A

;; ANSWER SECTION:

;; AUTHORITY SECTION:

;; ADDITIONAL SECTION:

;; Query time: 0 msec
;; WHEN: Thu Aug 18 02:08:47 2016
;; MSG SIZE  rcvd: 0
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, rcode: NOERROR, id: 52723
;; flags: qr rd ra ; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0
;; QUESTION SECTION:
;; perf-test-b.	IN	A

;; ANSWER SECTION:
perf-test-b.	600	IN	A	10.0.3.4 &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; Service VIP

;; AUTHORITY SECTION:

;; ADDITIONAL SECTION:

;; Query time: 1 msec
;; SERVER: 127.0.0.11 &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; Local resolver 
;; WHEN: Thu Aug 18 02:08:47 2016
;; MSG SIZE  rcvd: 56
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;netcat&lt;/h2&gt; 
&lt;p&gt;Purpose: a simple Unix utility that reads and writes data across network connections, using the TCP or UDP protocol. It&#39;s useful for testing and troubleshooting TCP/UDP connections. &lt;code&gt;netcat&lt;/code&gt; can be used to detect if there&#39;s a firewall rule blocking certain ports.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;🐳  →  docker network create -d overlay my-ovl
55rohpeerwqx8og4n0byr0ehu

🐳  → docker service create --name service-a --network my-ovl -p 8080:8080 nicolaka/netshoot nc -l 8080
bnj517hh4ylpf7ewawsp9unrc

🐳  → docker service create --name service-b --network my-ovl nicolaka/netshoot nc -vz service-a 8080
3xv1ukbd3kr03j4uybmmlp27j

🐳  → docker logs service-b.1.0c5wy4104aosovtl1z9oixiso
Connection to service-a 8080 port [tcp/http-alt] succeeded!

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;netgen&lt;/h2&gt; 
&lt;p&gt;Purpose: &lt;code&gt;netgen&lt;/code&gt; is a simple &lt;a href=&quot;https://raw.githubusercontent.com/nicolaka/netshoot/master/netgen.sh&quot;&gt;script&lt;/a&gt; that will generate a packet of data between containers periodically using &lt;code&gt;netcat&lt;/code&gt;. The generated traffic can be used to demonstrate different features of the networking stack.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;netgen &amp;lt;host&amp;gt; &amp;lt;ip&amp;gt;&lt;/code&gt; will create a &lt;code&gt;netcat&lt;/code&gt; server and client listening and sending to the same port.&lt;/p&gt; 
&lt;p&gt;Using &lt;code&gt;netgen&lt;/code&gt; with &lt;code&gt;docker run&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;🐳  →  docker network create -d bridge br
01b167971453700cf0a40d7e1a0dc2b0021e024bbb119541cc8c1858343c9cfc

🐳  →  docker run -d --rm --net br --name c1 nicolaka/netshoot netgen c2 5000
8c51eb2100c35d14244dcecb80839c780999159985415a684258c7154ec6bd42

🐳  →  docker run -it --rm --net br --name c2 nicolaka/netshoot netgen c1 5000
Listener started on port 5000
Sending traffic to c1 on port 5000 every 10 seconds
Sent 1 messages to c1:5000
Sent 2 messages to c1:5000

🐳  →  sudo tcpdump -vvvn -i eth0 port 5000
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;code&gt;netgen&lt;/code&gt; with &lt;code&gt;docker services&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;🐳  →  docker network create -d overlay ov
01b167971453700cf0a40d7e1a0dc2b0021e024bbb119541cc8c1858343c9cfc

🐳  →  docker service create --network ov --replicas 3 --name srvc netshoot netgen srvc 5000
y93t8mb9wgzsc27f7l2rdu5io

🐳  →  docker service logs srvc
srvc.1.vwklts5ybq5w@moby    | Listener started on port 5000
srvc.1.vwklts5ybq5w@moby    | Sending traffic to srvc on port 5000 every 10 seconds
srvc.1.vwklts5ybq5w@moby    | Sent 1 messages to srvc:5000
srvc.3.dv4er00inlxo@moby    | Listener started on port 5000
srvc.2.vu47gf0sdmje@moby    | Listener started on port 5000
...


🐳  →  sudo tcpdump -vvvn -i eth0 port 5000
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;iproute2&lt;/h2&gt; 
&lt;p&gt;purpose: a collection of utilities for controlling TCP / IP networking and traffic control in Linux.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Sample routing and arp table of the docker host.

🐳  → docker run -it --net host nicolaka/netshoot

/ # ip route show
default via 192.168.65.1 dev eth0  metric 204
172.17.0.0/16 dev docker0  proto kernel  scope link  src 172.17.0.1
172.19.0.0/16 dev br-fd694678f5c3  proto kernel  scope link  src 172.19.0.1 linkdown
172.20.0.0/16 dev docker_gwbridge  proto kernel  scope link  src 172.20.0.1
172.21.0.0/16 dev br-0d73cc4ac114  proto kernel  scope link  src 172.21.0.1 linkdown
172.22.0.0/16 dev br-1eb1f1e84df8  proto kernel  scope link  src 172.22.0.1 linkdown
172.23.0.0/16 dev br-aafed4ec941f  proto kernel  scope link  src 172.23.0.1 linkdown
192.168.65.0/29 dev eth0  proto kernel  scope link  src 192.168.65.2

/ # ip neigh show
192.168.65.1 dev eth0 lladdr f6:16:36:bc:f9:c6 STALE
172.17.0.7 dev docker0 lladdr 02:42:ac:11:00:07 STALE
172.17.0.6 dev docker0 lladdr 02:42:ac:11:00:06 STALE
172.17.0.5 dev docker0 lladdr 02:42:ac:11:00:05 STALE
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More info on &lt;code&gt;iproute2&lt;/code&gt; &lt;a href=&quot;http://lartc.org/howto/lartc.iproute2.tour.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;nsenter&lt;/h2&gt; 
&lt;p&gt;Purpose: &lt;code&gt;nsenter&lt;/code&gt; is a powerful tool allowing you to enter into any namespaces. &lt;code&gt;nsenter&lt;/code&gt; is available inside &lt;code&gt;netshoot&lt;/code&gt; but requires &lt;code&gt;netshoot&lt;/code&gt; to be run as a privileged container. Additionally, you may want to mount the &lt;code&gt;/var/run/docker/netns&lt;/code&gt; directory to be able to enter any network namespace including bridge and overlay networks.&lt;/p&gt; 
&lt;p&gt;With &lt;code&gt;docker run --name container-B --net container:container-A &lt;/code&gt;, docker uses &lt;code&gt;container-A&lt;/code&gt;&#39;s network namespace ( including interfaces and routes) when creating &lt;code&gt;container-B&lt;/code&gt;. This approach is helpful for troubleshooting network issues at the container level. To troubleshoot network issues at the bridge or overlay network level, you need to enter the &lt;code&gt;namespace&lt;/code&gt; of the network &lt;em&gt;itself&lt;/em&gt;. &lt;code&gt;nsenter&lt;/code&gt; allows you to do that.&lt;/p&gt; 
&lt;p&gt;For example, if we wanted to check the L2 forwarding table for a overlay network. We need to enter the overlay network namespace and use same tools in &lt;code&gt;netshoot&lt;/code&gt; to check these entries. The following examples go over some use cases for using &lt;code&gt;nsenter&lt;/code&gt; to understand what&#39;s happening within a docker network ( overlay in this case).&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Creating an overlay network
🐳  → docker network create -d overlay nsenter-test
9tp0f348donsdj75pktssd97b

# Launching a simple busybox service with 3 replicas
🐳  → docker service create --name nsenter-l2-table-test --replicas 3 --network nsenter-test busybox ping localhost
3692i3q3u8nephdco2c10ro4c

# Inspecting the service
🐳  → docker network inspect nsenter-test
[
    {
        &quot;Name&quot;: &quot;nsenter-test&quot;,
        &quot;Id&quot;: &quot;9tp0f348donsdj75pktssd97b&quot;,
        &quot;Scope&quot;: &quot;swarm&quot;,
        &quot;Driver&quot;: &quot;overlay&quot;,
        &quot;EnableIPv6&quot;: false,
        &quot;IPAM&quot;: {
            &quot;Driver&quot;: &quot;default&quot;,
            &quot;Options&quot;: null,
            &quot;Config&quot;: [
                {
                    &quot;Subnet&quot;: &quot;10.0.1.0/24&quot;,
                    &quot;Gateway&quot;: &quot;10.0.1.1&quot;
                }
            ]
        },
        &quot;Internal&quot;: false,
        &quot;Containers&quot;: {
            &quot;0ebe0fab555d2e2ef2fcda634bef2071ad3f5842b06bd134b40f259ab9be4f13&quot;: {
                &quot;Name&quot;: &quot;nsenter-l2-table-test.2.83uezc16jcaz2rp6cjwyf4605&quot;,
                &quot;EndpointID&quot;: &quot;3064946bb0224a4b3647cefcba18dcbea71b90a2ba1c09212a7bc599ec1ed3eb&quot;,
                &quot;MacAddress&quot;: &quot;02:42:0a:00:01:04&quot;,
                &quot;IPv4Address&quot;: &quot;10.0.1.4/24&quot;,
                &quot;IPv6Address&quot;: &quot;&quot;
            },
            &quot;55065360ac1c71638fdef50a073a661dec53b693409c5e09f8f854abc7dbb373&quot;: {
                &quot;Name&quot;: &quot;nsenter-l2-table-test.1.4ryh3wmmv21nsrfwmilanypqq&quot;,
                &quot;EndpointID&quot;: &quot;f81ae5f979d6c54f60636ca9bb2107d95ebf9a08f64786c549e87a66190f1b1f&quot;,
                &quot;MacAddress&quot;: &quot;02:42:0a:00:01:03&quot;,
                &quot;IPv4Address&quot;: &quot;10.0.1.3/24&quot;,
                &quot;IPv6Address&quot;: &quot;&quot;
            },
            &quot;57eca277749bb01a488f0e6c4e91dc6720b7c8f08531536377b29a972971f54b&quot;: {
                &quot;Name&quot;: &quot;nsenter-l2-table-test.3.9cuoq5m2ue1wi4lsw64k88tvz&quot;,
                &quot;EndpointID&quot;: &quot;ff1a251ffd6c674cd5fd117386d1a197ab68b4ed708187035d91ff5bd5fe0251&quot;,
                &quot;MacAddress&quot;: &quot;02:42:0a:00:01:05&quot;,
                &quot;IPv4Address&quot;: &quot;10.0.1.5/24&quot;,
                &quot;IPv6Address&quot;: &quot;&quot;
            }
        },
        &quot;Options&quot;: {
            &quot;com.docker.network.driver.overlay.vxlanid_list&quot;: &quot;260&quot;
        },
        &quot;Labels&quot;: {}
    }
]

# Launching netshoot in privileged mode
 🐳  → docker run -it --rm -v /var/run/docker/netns:/var/run/docker/netns --privileged=true nicolaka/netshoot
 
# Listing all docker-created network namespaces
 
/ # cd /var/run/docker/netns/
/var/run/docker/netns # ls
0b1b36d33313  1-9tp0f348do  14d1428c3962  645eb414b538  816b96054426  916dbaa7ea76  db9fd2d68a9b  e79049ce9994  f857b5c01ced
1-9r17dodsxt  1159c401b8d8  1a508036acc8  7ca29d89293c  83b743f2f087  aeed676a57a5  default       f22ffa5115a0

# The overlay network that we created had an id of 9tp0f348donsdj75pktssd97b. All overlay networks are named &amp;lt;number&amp;gt;-&amp;lt;id&amp;gt;. We can see it in the list as `1-9tp0f348do`. To enter it:

/ # nsenter --net=/var/run/docker/netns/1-9tp0f348do sh

# Now all the commands we issue are within that namespace. 

/ # ifconfig
br0       Link encap:Ethernet  HWaddr 02:15:B8:E7:DE:B3
          inet addr:10.0.1.1  Bcast:0.0.0.0  Mask:255.255.255.0
          inet6 addr: fe80::20ce:a5ff:fe63:437d%32621/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1450  Metric:1
          RX packets:36 errors:0 dropped:0 overruns:0 frame:0
          TX packets:18 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:2224 (2.1 KiB)  TX bytes:1348 (1.3 KiB)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1%32621/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:4 errors:0 dropped:0 overruns:0 frame:0
          TX packets:4 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1
          RX bytes:336 (336.0 B)  TX bytes:336 (336.0 B)

veth2     Link encap:Ethernet  HWaddr 02:15:B8:E7:DE:B3
          inet6 addr: fe80::15:b8ff:fee7:deb3%32621/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1450  Metric:1
          RX packets:9 errors:0 dropped:0 overruns:0 frame:0
          TX packets:32 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:690 (690.0 B)  TX bytes:2460 (2.4 KiB)

veth3     Link encap:Ethernet  HWaddr 7E:55:C3:5C:C2:78
          inet6 addr: fe80::7c55:c3ff:fe5c:c278%32621/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1450  Metric:1
          RX packets:13 errors:0 dropped:0 overruns:0 frame:0
          TX packets:26 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:970 (970.0 B)  TX bytes:1940 (1.8 KiB)

veth4     Link encap:Ethernet  HWaddr 72:95:AB:A1:6A:87
          inet6 addr: fe80::7095:abff:fea1:6a87%32621/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1450  Metric:1
          RX packets:14 errors:0 dropped:0 overruns:0 frame:0
          TX packets:27 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:1068 (1.0 KiB)  TX bytes:2038 (1.9 KiB)

vxlan1    Link encap:Ethernet  HWaddr EA:EC:1D:B1:7D:D7
          inet6 addr: fe80::e8ec:1dff:feb1:7dd7%32621/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1450  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:33 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

# Let&#39;s check out the L2 forwarding table. These MAC addresses belong to the tasks/containers in this service. 

/ # bridge  fdb show br br0
33:33:00:00:00:01 dev br0 self permanent
01:00:5e:00:00:01 dev br0 self permanent
33:33:ff:63:43:7d dev br0 self permanent
ea:ec:1d:b1:7d:d7 dev vxlan1 master br0 permanent
02:15:b8:e7&lt;span&gt;🇩🇪&lt;/span&gt;b3 dev veth2 master br0 permanent
33:33:00:00:00:01 dev veth2 self permanent
01:00:5e:00:00:01 dev veth2 self permanent
33:33:ff:e7&lt;span&gt;🇩🇪&lt;/span&gt;b3 dev veth2 self permanent
7e:55:c3:5c:c2:78 dev veth3 master br0 permanent
33:33:00:00:00:01 dev veth3 self permanent
01:00:5e:00:00:01 dev veth3 self permanent
33:33:ff:5c:c2:78 dev veth3 self permanent
72:95&lt;span&gt;🆎&lt;/span&gt;a1:6a:87 dev veth4 master br0 permanent
33:33:00:00:00:01 dev veth4 self permanent
01:00:5e:00:00:01 dev veth4 self permanent
33:33:ff:a1:6a:87 dev veth4 self permanent


# ARP and routing tables. Note that an overlay network only routes traffic for that network. It only has a single route that matches the subnet of that network.

/ # ip neigh show
/ # ip route
10.0.1.0/24 dev br0  proto kernel  scope link  src 10.0.1.1

# Looks like the arp table is flushed. Let&#39;s ping some of the containers on this network.

/ # ping 10.0.1.4
PING 10.0.1.4 (10.0.1.4) 56(84) bytes of data.
64 bytes from 10.0.1.4: icmp_seq=1 ttl=64 time=0.207 ms
64 bytes from 10.0.1.4: icmp_seq=2 ttl=64 time=0.087 ms
^C
--- 10.0.1.4 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1002ms
rtt min/avg/max/mdev = 0.087/0.147/0.207/0.060 ms

/ # ip neigh show
10.0.1.4 dev br0 lladdr 02:42:0a:00:01:04 REACHABLE

# and using bridge-utils to show interfaces of the overlay network local bridge.

/ # brctl show
bridge name	bridge id		STP enabled	interfaces
br0		8000.0215b8e7deb3	no		vxlan1
							veth2
							veth3
							veth4
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;CTOP&lt;/h2&gt; 
&lt;p&gt;ctop is a free open source, simple and cross-platform top-like command-line tool for monitoring container metrics in real-time. It allows you to get an overview of metrics concerning CPU, memory, network, I/O for multiple containers and also supports inspection of a specific container.&lt;/p&gt; 
&lt;p&gt;To get data into ctop, you&#39;ll need to bind docker.sock into the netshoot container.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;/ # docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock nicolaka/netshoot ctop&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nicolaka/netshoot/master/img/ctop.png&quot; alt=&quot;ctop.png&quot;&gt;&lt;/p&gt; 
&lt;p&gt;It will display running and existed containers with useful metrics to help troubleshoot resource issues; hit &quot;q&quot; to exit.&lt;/p&gt; 
&lt;h2&gt;Termshark&lt;/h2&gt; 
&lt;p&gt;Termshark is a terminal user-interface for tshark. It allows user to read pcap files or sniff live interfaces with Wireshark&#39;s display filters.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Launching netshoot with NET_ADMIN and CAP_NET_RAW capabilities. Capturing packets on eth0 with icmp 
/ # docker run --rm --cap-add=NET_ADMIN --cap-add=NET_RAW -it nicolaka/netshoot termshark -i eth0 icmp
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;# Launching netshoot with NET_ADMIN and CAP_NET_RAW capabilities Reading packets from ipv4frags.pcap

/ # docker run --rm --cap-add=NET_ADMIN --cap-add=NET_RAW -v /tmp/ipv4frags.pcap:/tmp/ipv4frags.pcap -it nicolaka/netshoot termshark -r /tmp/ipv4frags.pcap
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More info on &lt;code&gt;termshark&lt;/code&gt; &lt;a href=&quot;https://github.com/gcla/termshark&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Swaks&lt;/h2&gt; 
&lt;p&gt;Swaks (Swiss Army Knife for SMTP) is a featureful, flexible, scriptable, transaction-oriented SMTP test tool. It is free to use and licensed under the GNU GPLv2.&lt;/p&gt; 
&lt;p&gt;You can use it to test and troubleshoot email servers with a crystal-clear syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;swaks --to user@example.com \
  --from fred@example.com --h-From: &#39;&quot;Fred Example&quot; &amp;lt;fred@example.com&amp;gt;&#39; \
  --auth CRAM-MD5 --auth-user me@example.com \
  --header-X-Test &quot;test email&quot; \
  --tls \
  --data &quot;Example body&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More info, examples and lots of documentation on &lt;code&gt;Swaks&lt;/code&gt; &lt;a href=&quot;http://www.jetmore.org/john/code/swaks/&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Grpcurl&lt;/h2&gt; 
&lt;p&gt;grpcurl is a command-line tool that lets you interact with gRPC servers. It&#39;s basically curl for gRPC servers.&lt;/p&gt; 
&lt;p&gt;Invoking an RPC on a trusted server (e.g. TLS without self-signed key or custom CA) that requires no client certs and supports server reflection is the simplest thing to do with grpcurl. This minimal invocation sends an empty request body:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;grpcurl grpc.server.com:443 my.custom.server.Service/Method

# no TLS
grpcurl -plaintext grpc.server.com:80 my.custom.server.Service/Method
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More info, examples and lots of documentation on &lt;code&gt;Grpcurl&lt;/code&gt; &lt;a href=&quot;https://github.com/fullstorydev/grpcurl&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Fortio&lt;/h2&gt; 
&lt;p&gt;Fortio is a fast, small (4Mb docker image, minimal dependencies), reusable, embeddable go library as well as a command line tool and server process, the server includes a simple web UI and REST API to trigger run and see graphical representation of the results (both a single latency graph and a multiple results comparative min, max, avg, qps and percentiles graphs).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ fortio load http://www.google.com
Fortio X.Y.Z running at 8 queries per second, 8-&amp;gt;8 procs, for 5s: http://www.google.com
19:10:33 I httprunner.go:84&amp;gt; Starting http test for http://www.google.com with 4 threads at 8.0 qps
Starting at 8 qps with 4 thread(s) [gomax 8] for 5s : 10 calls each (total 40)
19:10:39 I periodic.go:314&amp;gt; T002 ended after 5.056753279s : 10 calls. qps=1.9775534712220633
19:10:39 I periodic.go:314&amp;gt; T001 ended after 5.058085991s : 10 calls. qps=1.9770324224999916
19:10:39 I periodic.go:314&amp;gt; T000 ended after 5.058796046s : 10 calls. qps=1.9767549252963101
19:10:39 I periodic.go:314&amp;gt; T003 ended after 5.059557593s : 10 calls. qps=1.9764573910247019
Ended after 5.059691387s : 40 calls. qps=7.9056
Sleep times : count 36 avg 0.49175757 +/- 0.007217 min 0.463508712 max 0.502087879 sum 17.7032725
Aggregated Function Time : count 40 avg 0.060587641 +/- 0.006564 min 0.052549016 max 0.089893269 sum 2.42350566
# range, mid point, percentile, count
&amp;gt;= 0.052549 &amp;lt; 0.06 , 0.0562745 , 47.50, 19
&amp;gt;= 0.06 &amp;lt; 0.07 , 0.065 , 92.50, 18
&amp;gt;= 0.07 &amp;lt; 0.08 , 0.075 , 97.50, 2
&amp;gt;= 0.08 &amp;lt;= 0.0898933 , 0.0849466 , 100.00, 1
# target 50% 0.0605556
# target 75% 0.0661111
# target 99% 0.085936
# target 99.9% 0.0894975
Code 200 : 40
Response Header Sizes : count 40 avg 690.475 +/- 15.77 min 592 max 693 sum 27619
Response Body/Total Sizes : count 40 avg 12565.2 +/- 301.9 min 12319 max 13665 sum 502608
All done 40 calls (plus 4 warmup) 60.588 ms avg, 7.9 qps
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More info, examples and lots of documentation on &lt;code&gt;Fortio&lt;/code&gt; &lt;a href=&quot;https://github.com/fortio/fortio&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Feel free to provide to contribute networking troubleshooting tools and use-cases by opening PRs. If you would like to add any package, please follow these steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the PR, please include some rationale as to why this tool is useful to be included in netshoot. 
  &lt;blockquote&gt; 
   &lt;p&gt;Note: If the functionality of the tool is already addressed by an existing tool, I might not accept the PR&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt;Change the Dockerfile to include the new package/tool&lt;/li&gt; 
 &lt;li&gt;If you&#39;re building the tool from source, make sure you leverage the multi-stage build process and update the &lt;code&gt;build/fetch_binaries.sh&lt;/code&gt; script&lt;/li&gt; 
 &lt;li&gt;Update the README&#39;s list of included packages AND include a section on how to use the tool&lt;/li&gt; 
 &lt;li&gt;If the tool you&#39;re adding supports multi-platform, please make sure you highlight that.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>dokku/dokku</title>
      <link>https://github.com/dokku/dokku</link>
      <description>&lt;p&gt;A docker-powered PaaS that helps you build and manage the lifecycle of applications&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dokku&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/dokku/dokku/actions?query=branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/dokku/dokku/actions/workflows/ci.yml/badge.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://packagecloud.io/dokku/dokku&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/package-ubuntu-brightgreen.svg?style=flat-square&quot; alt=&quot;Ubuntu Package&quot; title=&quot;Ubuntu Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://aur.archlinux.org/packages/dokku/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/package-arch-brightgreen.svg?style=flat-square&quot; alt=&quot;Arch Package&quot; title=&quot;Arch Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://slack.dokku.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/irc-slack-blue.svg?style=flat-square&quot; alt=&quot;Slack Group&quot; title=&quot;Slack Group&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dokku.com/docs/getting-started/installation/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-site-blue.svg?style=flat-square&quot; alt=&quot;Documentation&quot; title=&quot;Site&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/dokku/dokku/master/#sponsors&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsors/badge.svg?style=flat-square&quot; alt=&quot;OpenCollective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/dokku/dokku/master/#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backers/badge.svg?style=flat-square&quot; alt=&quot;OpenCollective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.patreon.com/dokku/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/patreon-donate-green.svg?style=flat-square&quot; alt=&quot;Patreon&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Docker powered mini-Heroku. The smallest PaaS implementation you&#39;ve ever seen.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Become a sponsor and get your logo on our README on GitHub with a link to your site. [&lt;a href=&quot;https://opencollective.com/dokku#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/dokku/sponsor/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/0/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 0&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/1/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 1&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/2/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 2&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/3/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 3&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/4/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 4&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/5/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 5&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/6/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 6&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/7/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 7&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/8/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 8&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/9/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/10/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/10/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 10&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/11/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/11/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 11&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/12/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/12/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 12&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/13/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/13/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 13&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/14/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/14/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 14&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/15/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 15&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/16/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/16/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 6&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/17/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/17/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 17&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/sponsor/18/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/sponsor/18/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Sponsor 18&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href=&quot;https://opencollective.com/dokku#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/dokku/backer/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/0/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 0&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/1/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 1&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/2/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 2&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/3/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 3&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/4/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 4&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/5/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 5&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/6/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 6&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/7/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 7&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/8/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 8&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/9/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 9&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/10/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/10/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 10&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/11/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/11/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 11&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/12/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/12/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 12&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/13/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/13/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 13&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/14/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/14/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 14&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/15/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/15/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 15&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/16/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/16/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/17/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/17/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 17&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/18/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/18/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 18&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/19/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/19/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 19&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/20/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/20/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 20&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/21/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/21/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 21&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/22/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/22/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 22&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/23/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/23/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 23&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/24/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/24/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 24&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/25/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/25/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 25&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/26/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/26/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 26&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/27/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/27/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 27&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/28/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/28/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 28&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dokku/backer/29/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokku/backer/29/avatar.svg?sanitize=true&quot; alt=&quot;OpenCollective Backer 29&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;A fresh VM running any of the following operating systems:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ubuntu 20.04 / 22.04 / 24.04 (amd64/arm64) - Any currently supported release&lt;/li&gt; 
 &lt;li&gt;Debian 11+ (amd64/arm64)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;An SSH keypair that can be used for application deployment. If this exists before installation, it will be automatically imported into dokku. Otherwise, you will need to import the keypair manually after installation using &lt;code&gt;dokku ssh-keys:add&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;To install the latest stable release, run the following commands as a user who has access to &lt;code&gt;sudo&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;wget -NP . https://dokku.com/install/v0.35.16/bootstrap.sh
sudo DOKKU_TAG=v0.35.16 bash bootstrap.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can then proceed to configure your server domain (via &lt;code&gt;dokku domains:set-global&lt;/code&gt;) and user access (via &lt;code&gt;dokku ssh-keys:add&lt;/code&gt;) to complete the installation.&lt;/p&gt; 
&lt;p&gt;If you wish for a more unattended installation method, see &lt;a href=&quot;https://dokku.com/docs/getting-started/install/debian/#unattended-installation&quot;&gt;these&lt;/a&gt; docs.&lt;/p&gt; 
&lt;h3&gt;Upgrade&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://dokku.com/docs/getting-started/upgrading/&quot;&gt;View the docs&lt;/a&gt; for upgrading from an older version of Dokku.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Full documentation - including advanced installation docs - are available online at &lt;a href=&quot;https://dokku.com/docs/getting-started/installation/&quot;&gt;https://dokku.com/docs/getting-started/installation/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://github.com/dokku/dokku/issues&quot;&gt;GitHub Issues&lt;/a&gt;, check &lt;a href=&quot;https://dokku.com/docs/getting-started/troubleshooting/&quot;&gt;Troubleshooting&lt;/a&gt; in the documentation, or join us on &lt;a href=&quot;https://slack.dokku.com/&quot;&gt;Gliderlabs Slack in the #dokku channel&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;After checking &lt;a href=&quot;https://github.com/dokku/dokku/issues&quot;&gt;GitHub Issues&lt;/a&gt;, the &lt;a href=&quot;https://dokku.com/docs/getting-started/troubleshooting/&quot;&gt;Troubleshooting Guide&lt;/a&gt; or having a chat with us on &lt;a href=&quot;https://slack.dokku.com/&quot;&gt;Gliderlabs Slack in the #dokku channel&lt;/a&gt;, feel free to fork and create a Pull Request.&lt;/p&gt; 
&lt;p&gt;While we may not merge your PR as is, they serve to start conversations and improve the general Dokku experience for all users.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/dokku/dokku/raw/master/LICENSE&quot;&gt;MIT License&lt;/a&gt; © Jeff Lindsay&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>romkatv/powerlevel10k</title>
      <link>https://github.com/romkatv/powerlevel10k</link>
      <description>&lt;p&gt;A Zsh theme&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Powerlevel10k&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitter.im/powerlevel10k/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/powerlevel10k/community.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;THE PROJECT HAS VERY LIMITED SUPPORT&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NO NEW FEATURES ARE IN THE WORKS&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MOST BUGS WILL GO UNFIXED&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HELP REQUESTS WILL BE IGNORED&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Powerlevel10k is a theme for Zsh. It emphasizes &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#uncompromising-performance&quot;&gt;speed&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#extremely-customizable&quot;&gt;flexibility&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#configuration-wizard&quot;&gt;out-of-the-box experience&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/prompt-styles-high-contrast.png&quot; alt=&quot;Powerlevel10k&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#configuration&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#fonts&quot;&gt;Fonts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#try-it-in-docker&quot;&gt;Try it in Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;Install the recommended font&lt;/a&gt;. &lt;em&gt;Optional but highly recommended.&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#installation&quot;&gt;Install Powerlevel10k&lt;/a&gt; itself.&lt;/li&gt; 
 &lt;li&gt;Restart Zsh with &lt;code&gt;exec zsh&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Type &lt;code&gt;p10k configure&lt;/code&gt; if the configuration wizard doesn&#39;t start automatically.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#configuration-wizard&quot;&gt;Configuration wizard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#uncompromising-performance&quot;&gt;Uncompromising performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#powerlevel9k-compatibility&quot;&gt;Powerlevel9k compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#pure-compatibility&quot;&gt;Pure compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#instant-prompt&quot;&gt;Instant prompt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#show-on-command&quot;&gt;Show on command&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#transient-prompt&quot;&gt;Transient prompt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#current-directory-that-just-works&quot;&gt;Current directory that just works&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#extremely-customizable&quot;&gt;Extremely customizable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#batteries-included&quot;&gt;Batteries included&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#extensible&quot;&gt;Extensible&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configuration wizard&lt;/h3&gt; 
&lt;p&gt;Type &lt;code&gt;p10k configure&lt;/code&gt; to access the builtin configuration wizard right from your terminal.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Screen recording&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/configuration-wizard.gif&quot; alt=&quot;Powerlevel10k Configuration Wizard&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;All styles except &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#pure-compatibility&quot;&gt;Pure&lt;/a&gt; are functionally equivalent. They display the same information and differ only in presentation.&lt;/p&gt; 
&lt;p&gt;Configuration wizard creates &lt;code&gt;~/.p10k.zsh&lt;/code&gt; based on your preferences. Additional prompt customization can be done by editing this file. It has plenty of comments to help you navigate through configuration options.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Tip&lt;/em&gt;: Install &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;the recommended font&lt;/a&gt; before running &lt;code&gt;p10k configure&lt;/code&gt; to unlock all prompt styles.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;FAQ:&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#what-is-the-best-prompt-style-in-the-configuration-wizard&quot;&gt;What is the best prompt style in the configuration wizard?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#what-do-different-symbols-in-git-status-mean&quot;&gt;What do different symbols in Git status mean?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-change-prompt-colors&quot;&gt;How do I change prompt colors?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Troubleshooting&lt;/em&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#some-prompt-styles-are-missing-from-the-configuration-wizard&quot;&gt;Some prompt styles are missing from the configuration wizard&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#question-mark-in-prompt&quot;&gt;Question mark in prompt&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#icons-glyphs-or-powerline-symbols-dont-render&quot;&gt;Icons, glyphs or powerline symbols don&#39;t render&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#sub-pixel-imperfections-around-powerline-symbols&quot;&gt;Sub-pixel imperfections around powerline symbols&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#directory-is-difficult-to-see-in-prompt-when-using-rainbow-style&quot;&gt;Directory is difficult to see in prompt when using Rainbow style&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Uncompromising performance&lt;/h3&gt; 
&lt;p&gt;When you hit &lt;em&gt;ENTER&lt;/em&gt;, the next prompt appears instantly. With Powerlevel10k there is no prompt lag. If you install Cygwin on Raspberry Pi, &lt;code&gt;cd&lt;/code&gt; into a Linux Git repository and activate enough prompt segments to fill four prompt lines on both sides of the screen... wait, that&#39;s just crazy and no one ever does that. Probably impossible, too. The point is, Powerlevel10k prompt is always fast, no matter what you do!&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Screen recording&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/performance.gif&quot; alt=&quot;Powerlevel10k Performance&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Note how the effect of every command is instantly reflected by the very next prompt.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Prompt Indicator&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;Meaning&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;timew start hack linux&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;⌚ hack linux&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;time tracking enabled in &lt;a href=&quot;https://timewarrior.net/&quot;&gt;timewarrior&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;touch x y&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;?2&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2 untracked files in the Git repo&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;rm COPYING&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;!1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;1 unstaged change in the Git repo&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;echo 3.7.3 &amp;gt;.python-version&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;🐍 3.7.3&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;the current python version in &lt;a href=&quot;https://github.com/pyenv/pyenv&quot;&gt;pyenv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Other Zsh themes capable of displaying the same information either produce prompt lag or print prompt that doesn&#39;t reflect the current state of the system and then refresh it later. With Powerlevel10k you get fast prompt &lt;em&gt;and&lt;/em&gt; up-to-date information.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;FAQ&lt;/em&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#is-it-really-fast&quot;&gt;Is it really fast?&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Powerlevel9k compatibility&lt;/h3&gt; 
&lt;p&gt;Powerlevel10k understands all &lt;a href=&quot;https://github.com/Powerlevel9k/powerlevel9k&quot;&gt;Powerlevel9k&lt;/a&gt; configuration parameters.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Screen recording&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/9k-compatibility.gif&quot; alt=&quot;Powerlevel10k Compatibility with 9k&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#installation&quot;&gt;Migration&lt;/a&gt; from Powerlevel9k to Powerlevel10k is a straightforward process. All your &lt;code&gt;POWERLEVEL9K&lt;/code&gt; configuration parameters will still work. Prompt will look the same as before (&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#does-powerlevel10k-always-render-exactly-the-same-prompt-as-powerlevel9k-given-the-same-config&quot;&gt;almost&lt;/a&gt;) but it will be &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#uncompromising-performance&quot;&gt;much faster&lt;/a&gt; (&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#is-it-really-fast&quot;&gt;certainly&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;FAQ&lt;/em&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#im-using-powerlevel9k-with-oh-my-zsh-how-do-i-migrate&quot;&gt;I&#39;m using Powerlevel9k with Oh My Zsh. How do I migrate?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#does-powerlevel10k-always-render-exactly-the-same-prompt-as-powerlevel9k-given-the-same-config&quot;&gt;Does Powerlevel10k always render exactly the same prompt as Powerlevel9k given the same config?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#What-is-the-relationship-between-powerlevel9k-and-powerlevel10k&quot;&gt;What is the relationship between Powerlevel9k and Powerlevel10k?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Pure compatibility&lt;/h3&gt; 
&lt;p&gt;Powerlevel10k can produce the same prompt as &lt;a href=&quot;https://github.com/sindresorhus/pure&quot;&gt;Pure&lt;/a&gt;. Type &lt;code&gt;p10k configure&lt;/code&gt; and select &lt;em&gt;Pure&lt;/em&gt; style.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Screen recording&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/pure-style.gif&quot; alt=&quot;Powerlevel10k Pure Style&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;You can still use Powerlevel10k features such as &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#transient-prompt&quot;&gt;transient prompt&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#instant-prompt&quot;&gt;instant prompt&lt;/a&gt; when sporting Pure style.&lt;/p&gt; 
&lt;p&gt;To customize prompt, edit &lt;code&gt;~/.p10k.zsh&lt;/code&gt;. Powerlevel10k doesn&#39;t recognize Pure configuration parameters, so you&#39;ll need to use &lt;code&gt;POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=3&lt;/code&gt; instead of &lt;code&gt;PURE_CMD_MAX_EXEC_TIME=3&lt;/code&gt;, etc. All relevant parameters are in &lt;code&gt;~/.p10k.zsh&lt;/code&gt;. This file has plenty of comments to help you navigate through it.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;FAQ:&lt;/em&gt; &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#what-is-the-best-prompt-style-in-the-configuration-wizard&quot;&gt;What is the best prompt style in the configuration wizard?&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a name=&quot;what-is-instant-prompt&quot;&gt;&lt;/a&gt;Instant prompt&lt;/h3&gt; 
&lt;p&gt;If your &lt;code&gt;~/.zshrc&lt;/code&gt; loads many plugins, or perhaps just a few slow ones (for example, &lt;a href=&quot;https://github.com/pyenv/pyenv&quot;&gt;pyenv&lt;/a&gt; or &lt;a href=&quot;https://github.com/nvm-sh/nvm&quot;&gt;nvm&lt;/a&gt;), you may have noticed that it takes some time for Zsh to start.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Screen recording&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/no-instant-prompt.gif&quot; alt=&quot;Powerlevel10k No Instant Prompt&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Powerlevel10k can remove Zsh startup lag &lt;strong&gt;even if it&#39;s not caused by a theme&lt;/strong&gt;.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Screen recording&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/instant-prompt.gif&quot; alt=&quot;Powerlevel10k Instant Prompt&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;This feature is called &lt;em&gt;Instant Prompt&lt;/em&gt;. You need to explicitly enable it through &lt;code&gt;p10k configure&lt;/code&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-configure-instant-prompt&quot;&gt;manually&lt;/a&gt;. It does what it says on the tin -- prints prompt instantly upon Zsh startup allowing you to start typing while plugins are still loading.&lt;/p&gt; 
&lt;p&gt;Other themes &lt;em&gt;increase&lt;/em&gt; Zsh startup lag -- some by a lot, others by a just a little. Powerlevel10k &lt;em&gt;removes&lt;/em&gt; it outright.&lt;/p&gt; 
&lt;p&gt;If you are curious about how &lt;em&gt;Instant Prompt&lt;/em&gt; works, see &lt;a href=&quot;https://github.com/romkatv/zsh-bench#instant-prompt&quot;&gt;this section in zsh-bench&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;FAQ:&lt;/em&gt; &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-configure-instant-prompt&quot;&gt;How do I configure instant prompt?&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Show on command&lt;/h3&gt; 
&lt;p&gt;The behavior of some commands depends on global environment. For example, &lt;code&gt;kubectl run ...&lt;/code&gt; runs an image on the cluster defined by the current kubernetes context. If you frequently change context between &quot;prod&quot; and &quot;testing&quot;, you might want to display the current context in Zsh prompt. If you do likewise for AWS, Azure and Google Cloud credentials, prompt will get pretty crowded.&lt;/p&gt; 
&lt;p&gt;Enter &lt;em&gt;Show On Command&lt;/em&gt;. This feature makes prompt segments appear only when they are relevant to the command you are currently typing.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Screen recording&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/show-on-command.gif&quot; alt=&quot;Powerlevel10k Show On Command&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Configs created by &lt;code&gt;p10k configure&lt;/code&gt; enable show on command for several prompt segments by default. Here&#39;s the relevant parameter for kubernetes context:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;# Show prompt segment &quot;kubecontext&quot; only when the command you are typing invokes one of these tools.
typeset -g POWERLEVEL9K_KUBECONTEXT_SHOW_ON_COMMAND=&#39;kubectl|helm|kubens&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To customize when different prompt segments are shown, open &lt;code&gt;~/.p10k.zsh&lt;/code&gt;, search for &lt;code&gt;SHOW_ON_COMMAND&lt;/code&gt; and either remove these parameters to display affected segments unconditionally, or change their values.&lt;/p&gt; 
&lt;h3&gt;Transient prompt&lt;/h3&gt; 
&lt;p&gt;When &lt;em&gt;Transient Prompt&lt;/em&gt; is enabled through &lt;code&gt;p10k configure&lt;/code&gt;, Powerlevel10k will trim down every prompt when accepting a command line.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Screen recording&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/transient-prompt.gif&quot; alt=&quot;Powerlevel10k Transient Prompt&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Transient prompt makes it much easier to copy-paste series of commands from the terminal scrollback.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Tip&lt;/em&gt;: If you enable transient prompt, take advantage of two-line prompt. You&#39;ll get the benefit of extra space for typing commands without the usual drawback of reduced scrollback density. Sparse prompt (with an empty line before prompt) also works great in combination with transient prompt.&lt;/p&gt; 
&lt;h3&gt;Current directory that just works&lt;/h3&gt; 
&lt;p&gt;The current working directory is perhaps the most important prompt segment. Powerlevel10k goes to great length to highlight its important parts and to truncate it with the least loss of information when horizontal space gets scarce.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Screen recording&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/directory-truncation.gif&quot; alt=&quot;Powerlevel10k Directory Truncation&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;When the full directory doesn&#39;t fit, the leftmost segment gets truncated to its shortest unique prefix. In the screencast, &lt;code&gt;~/work&lt;/code&gt; becomes &lt;code&gt;~/wo&lt;/code&gt;. It couldn&#39;t be truncated to &lt;code&gt;~/w&lt;/code&gt; because it would be ambiguous (there was &lt;code&gt;~/wireguard&lt;/code&gt; when the session was recorded). The next segment -- &lt;code&gt;projects&lt;/code&gt; -- turns into &lt;code&gt;p&lt;/code&gt; as there was nothing else that started with &lt;code&gt;p&lt;/code&gt; in &lt;code&gt;~/work/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Directory segments are shown in one of three colors:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Truncated segments are bleak.&lt;/li&gt; 
 &lt;li&gt;Important segments are bright and never truncated. These include the first and the last segment, roots of Git repositories, etc.&lt;/li&gt; 
 &lt;li&gt;Regular segments (not truncated but can be) use in-between color.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Tip&lt;/em&gt;: If you copy-paste a truncated directory and hit &lt;em&gt;TAB&lt;/em&gt;, it&#39;ll complete to the original.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Troubleshooting&lt;/em&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#directory-is-difficult-to-see-in-prompt-when-using-rainbow-style&quot;&gt;Directory is difficult to see in prompt when using Rainbow style.&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Extremely customizable&lt;/h3&gt; 
&lt;p&gt;Powerlevel10k can be configured to look like any other Zsh theme out there.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Screen recording&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/other-theme-emulation.gif&quot; alt=&quot;Powerlevel10k Other Theme Emulation&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#pure-compatibility&quot;&gt;Pure&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#powerlevel9k-compatibility&quot;&gt;Powerlevel9k&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-to-make-powerlevel10k-look-like-robbyrussell-oh-my-zsh-theme&quot;&gt;robbyrussell&lt;/a&gt; emulations are built-in. To emulate the appearance of other themes, you&#39;ll need to write a suitable configuration file. The best way to go about it is to run &lt;code&gt;p10k configure&lt;/code&gt;, select the style that is the closest to your goal and then edit &lt;code&gt;~/.p10k.zsh&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The full range of Powerlevel10k appearance spans from spartan:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/spartan-style.png&quot; alt=&quot;Powerlevel10k Spartan Style&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To &lt;del&gt;ridiculous&lt;/del&gt; extravagant:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/extravagant-style.png&quot; alt=&quot;Powerlevel10k Extravagant Style&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Batteries included&lt;/h3&gt; 
&lt;p&gt;Powerlevel10k comes with dozens of built-in high quality prompt segments that can display information from a variety of sources. When you run &lt;code&gt;p10k configure&lt;/code&gt; and choose any style except &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#pure-compatibility&quot;&gt;Pure&lt;/a&gt;, many of these segments get enabled by default while others can be manually enabled by opening &lt;code&gt;~/.p10k.zsh&lt;/code&gt; and uncommenting them. You can enable as many segments as you like. It won&#39;t slow down your prompt or Zsh startup.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;right&quot;&gt;Segment&lt;/th&gt; 
   &lt;th&gt;Meaning&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;anaconda&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;virtual environment from &lt;a href=&quot;https://conda.io/&quot;&gt;conda&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;asdf&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;tool versions from &lt;a href=&quot;https://github.com/asdf-vm/asdf&quot;&gt;asdf&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;aws&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html&quot;&gt;aws profile&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;aws_eb_env&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aws.amazon.com/elasticbeanstalk/&quot;&gt;aws elastic beanstalk&lt;/a&gt; environment&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;azure&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/cli/azure&quot;&gt;azure&lt;/a&gt; account name&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;background_jobs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;presence of background jobs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;battery&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;internal battery state and charge level (yep, batteries &lt;em&gt;literally&lt;/em&gt; included)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;command_execution_time&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;duration (wall time) of the last command&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;user@hostname&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;cpu_arch&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;CPU architecture&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;dir&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;current working directory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;direnv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://direnv.net/&quot;&gt;direnv&lt;/a&gt; status&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;disk_usage&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;disk usage&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;dotnet_version&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://dotnet.microsoft.com&quot;&gt;dotnet&lt;/a&gt; version&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;fvm&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;flutter environment from &lt;a href=&quot;https://github.com/leoafarias/fvm&quot;&gt;fvm&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;gcloud&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://cloud.google.com/&quot;&gt;google cloud&lt;/a&gt; cli account and project&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;goenv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;go environment from &lt;a href=&quot;https://github.com/syndbg/goenv&quot;&gt;goenv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;google_app_cred&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://cloud.google.com/docs/authentication/production&quot;&gt;google application credentials&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;go_version&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://golang.org&quot;&gt;go&lt;/a&gt; version&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;haskell_stack&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;haskell version from &lt;a href=&quot;https://haskellstack.org/&quot;&gt;stack&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;IP address and bandwidth usage for a specified network interface&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;java_version&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.java.com/&quot;&gt;java&lt;/a&gt; version&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;jenv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;java environment from &lt;a href=&quot;https://github.com/jenv/jenv&quot;&gt;jenv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;kubecontext&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;current &lt;a href=&quot;https://kubernetes.io/&quot;&gt;kubernetes&lt;/a&gt; context&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;laravel_version&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://laravel.com/&quot;&gt;laravel php framework&lt;/a&gt; version&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;CPU load&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;luaenv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;lua environment from &lt;a href=&quot;https://github.com/cehoffman/luaenv&quot;&gt;luaenv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;midnight_commander&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://midnight-commander.org/&quot;&gt;midnight commander&lt;/a&gt; shell&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;nix_shell&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://nixos.org/nixos/nix-pills/developing-with-nix-shell.html&quot;&gt;nix shell&lt;/a&gt; indicator&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;nnn&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/jarun/nnn&quot;&gt;nnn&lt;/a&gt; shell&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;lf&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/gokcehan/lf&quot;&gt;lf&lt;/a&gt; shell&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;chezmoi_shell&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.chezmoi.io/&quot;&gt;chezmoi&lt;/a&gt; shell&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;nodeenv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;node.js environment from &lt;a href=&quot;https://github.com/ekalinin/nodeenv&quot;&gt;nodeenv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;nodenv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;node.js environment from &lt;a href=&quot;https://github.com/nodenv/nodenv&quot;&gt;nodenv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;node_version&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://nodejs.org/&quot;&gt;node.js&lt;/a&gt; version&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;nordvpn&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://nordvpn.com/&quot;&gt;nordvpn&lt;/a&gt; connection status&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;nvm&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;node.js environment from &lt;a href=&quot;https://github.com/nvm-sh/nvm&quot;&gt;nvm&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;os_icon&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;your OS logo (apple for macOS, swirl for debian, etc.)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;package&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;name@version&lt;/code&gt; from &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;per_directory_history&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Oh My Zsh &lt;a href=&quot;https://github.com/jimhester/per-directory-history&quot;&gt;per-directory-history&lt;/a&gt; local/global indicator&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;perlbrew&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;perl version from &lt;a href=&quot;https://github.com/gugod/App-perlbrew&quot;&gt;perlbrew&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;phpenv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;php environment from &lt;a href=&quot;https://github.com/phpenv/phpenv&quot;&gt;phpenv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;php_version&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.php.net/&quot;&gt;php&lt;/a&gt; version&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;plenv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;perl environment from &lt;a href=&quot;https://github.com/tokuhirom/plenv&quot;&gt;plenv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;prompt_char&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;multi-functional prompt symbol; changes depending on vi mode: &lt;code&gt;❯&lt;/code&gt;, &lt;code&gt;❮&lt;/code&gt;, &lt;code&gt;V&lt;/code&gt;, &lt;code&gt;▶&lt;/code&gt; for insert, command, visual and replace mode respectively; turns red on error&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;proxy&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;system-wide http/https/ftp proxy&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;public_ip&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;public IP address&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;pyenv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;python environment from &lt;a href=&quot;https://github.com/pyenv/pyenv&quot;&gt;pyenv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;ram&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;free RAM&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;ranger&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ranger/ranger&quot;&gt;ranger&lt;/a&gt; shell&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;yazi&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/sxyazi/yazi&quot;&gt;yazi&lt;/a&gt; shell&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;rbenv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;ruby environment from &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;rust_version&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.rust-lang.org&quot;&gt;rustc&lt;/a&gt; version&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;rvm&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;ruby environment from &lt;a href=&quot;https://rvm.io&quot;&gt;rvm&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;scalaenv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;scala version from &lt;a href=&quot;https://github.com/scalaenv/scalaenv&quot;&gt;scalaenv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;status&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;exit code of the last command&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;swap&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;used swap&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;taskwarrior&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://taskwarrior.org/&quot;&gt;taskwarrior&lt;/a&gt; task count&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;terraform&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.terraform.io&quot;&gt;terraform&lt;/a&gt; workspace&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;terraform_version&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.terraform.io&quot;&gt;terraform&lt;/a&gt; version&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;current time&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;timewarrior&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://timewarrior.net/&quot;&gt;timewarrior&lt;/a&gt; tracking status&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;todo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/todotxt/todo.txt-cli&quot;&gt;todo&lt;/a&gt; items&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;toolbox&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/containers/toolbox&quot;&gt;toolbox&lt;/a&gt; name&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;vcs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Git repository status&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;vim_shell&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.vim.org/&quot;&gt;vim&lt;/a&gt; shell (&lt;code&gt;:sh&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;virtualenv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;python environment from &lt;a href=&quot;https://docs.python.org/3/library/venv.html&quot;&gt;venv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;vi_mode&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;vi mode (you don&#39;t need this if you&#39;ve enabled prompt_char)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;vpn_ip&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;virtual private network indicator&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;wifi&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;WiFi speed&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;xplr&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/sayanarijit/xplr&quot;&gt;xplr&lt;/a&gt; shell&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Extensible&lt;/h3&gt; 
&lt;p&gt;If there is no prompt segment that does what you need, implement your own. Powerlevel10k provides public API for defining segments that are as fast and as flexible as built-in ones.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Screen recording&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/custom-segment.gif&quot; alt=&quot;Powerlevel10k Custom Segment&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;On Linux you can fetch current CPU temperature by reading &lt;code&gt;/sys/class/thermal/thermal_zone0/temp&lt;/code&gt;. The screencast shows how to define a prompt segment to display this value. Once the segment is defined, you can use it like any other segment. All standard customization parameters will work for it out of the box.&lt;/p&gt; 
&lt;p&gt;Type &lt;code&gt;p10k help segment&lt;/code&gt; for reference.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: If you modify &lt;code&gt;POWERLEVEL9K_*&lt;/code&gt; parameters in an already initialized interactive shell (as opposed to editing &lt;code&gt;~/.p10k.zsh&lt;/code&gt;), the changes might not be immediately effective. To apply the modifications, invoke &lt;code&gt;p10k reload&lt;/code&gt;. Setting &lt;code&gt;POWERLEVEL9K_DISABLE_HOT_RELOAD=false&lt;/code&gt; eliminates the necessity for &lt;code&gt;p10k reload&lt;/code&gt; but results in a marginally slower prompt.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Tip&lt;/em&gt;: Prefix names of your own segments with &lt;code&gt;my_&lt;/code&gt; to avoid clashes with future versions of Powerlevel10k.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#manual&quot;&gt;Manual&lt;/a&gt; 👈 &lt;strong&gt;choose this if confused or uncertain&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#oh-my-zsh&quot;&gt;Oh My Zsh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#prezto&quot;&gt;Prezto&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zim&quot;&gt;Zim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#antibody&quot;&gt;Antibody&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#antidote&quot;&gt;Antidote&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#antigen&quot;&gt;Antigen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zplug&quot;&gt;Zplug&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zgen&quot;&gt;Zgen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zplugin&quot;&gt;Zplugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zinit&quot;&gt;Zinit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zi&quot;&gt;Zi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zap&quot;&gt;Zap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#homebrew&quot;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#arch-linux&quot;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#alpine-linux&quot;&gt;Alpine Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#fig&quot;&gt;Fig&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Manual&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
echo &#39;source ~/powerlevel10k/powerlevel10k.zsh-theme&#39; &amp;gt;&amp;gt;~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Users in China can use the official mirror on gitee.com for faster download.&lt;br&gt; 中国用户可以使用 gitee.com 上的官方镜像加速下载.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git ~/powerlevel10k
echo &#39;source ~/powerlevel10k/powerlevel10k.zsh-theme&#39; &amp;gt;&amp;gt;~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is the simplest kind of installation and it works even if you are using a plugin manager. Just make sure to disable the current theme in your plugin manager. See &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#cannot-make-powerlevel10k-work-with-my-plugin-manager&quot;&gt;troubleshooting&lt;/a&gt; for help.&lt;/p&gt; 
&lt;h3&gt;Oh My Zsh&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;git clone --depth=1 https://github.com/romkatv/powerlevel10k.git &quot;${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Users in China can use the official mirror on gitee.com for faster download.&lt;br&gt; 中国用户可以使用 gitee.com 上的官方镜像加速下载.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git &quot;${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open &lt;code&gt;~/.zshrc&lt;/code&gt;, find the line that sets &lt;code&gt;ZSH_THEME&lt;/code&gt;, and change its value to &lt;code&gt;&quot;powerlevel10k/powerlevel10k&quot;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Prezto&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;zstyle :prezto:module:prompt theme powerlevel10k&lt;/code&gt; to &lt;code&gt;~/.zpreztorc&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Zim&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;zmodule romkatv/powerlevel10k --use degit&lt;/code&gt; to &lt;code&gt;~/.zimrc&lt;/code&gt; and run &lt;code&gt;zimfw install&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Antibody&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;antibody bundle romkatv/powerlevel10k&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Antidote&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;romkatv/powerlevel10k&lt;/code&gt; to &lt;code&gt;~/.zsh_plugins.txt&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Antigen&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;antigen theme romkatv/powerlevel10k&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt;. Make sure you have &lt;code&gt;antigen apply&lt;/code&gt; somewhere after it.&lt;/p&gt; 
&lt;h3&gt;Zplug&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;zplug romkatv/powerlevel10k, as:theme, depth:1&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Zgen&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;zgen load romkatv/powerlevel10k powerlevel10k&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Zplugin&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;zplugin ice depth=1; zplugin light romkatv/powerlevel10k&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The use of &lt;code&gt;depth=1&lt;/code&gt; ice is optional. Other types of ice are neither recommended nor officially supported by Powerlevel10k.&lt;/p&gt; 
&lt;h3&gt;Zinit&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;zinit ice depth=1; zinit light romkatv/powerlevel10k&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The use of &lt;code&gt;depth=1&lt;/code&gt; ice is optional. Other types of ice are neither recommended nor officially supported by Powerlevel10k.&lt;/p&gt; 
&lt;h3&gt;Zi&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;zi ice depth=1; zi light romkatv/powerlevel10k&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The use of &lt;code&gt;depth=1&lt;/code&gt; ice is optional. Other types of ice are neither recommended nor officially supported by Powerlevel10k.&lt;/p&gt; 
&lt;h3&gt;Zap&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;plug &quot;romkatv/powerlevel10k&quot;&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Homebrew&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;brew install powerlevel10k
echo &quot;source $(brew --prefix)/share/powerlevel10k/powerlevel10k.zsh-theme&quot; &amp;gt;&amp;gt;~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Arch Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;yay -S --noconfirm zsh-theme-powerlevel10k-git
echo &#39;source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme&#39; &amp;gt;&amp;gt;~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://aur.archlinux.org/packages/zsh-theme-powerlevel10k-git/&quot;&gt;zsh-theme-powerlevel10k-git&lt;/a&gt; referenced above is the official Powerlevel10k package.&lt;/p&gt; 
&lt;h3&gt;Alpine Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;apk add zsh zsh-theme-powerlevel10k
mkdir -p ~/.local/share/zsh/plugins
ln -s /usr/share/zsh/plugins/powerlevel10k ~/.local/share/zsh/plugins/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fig&lt;/h3&gt; 
&lt;p&gt;Follow the instructions on &lt;a href=&quot;https://fig.io/plugins/other/powerlevel10k&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#for-new-users&quot;&gt;For new users&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#for-powerlevel9k-users&quot;&gt;For Powerlevel9k users&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;For new users&lt;/h3&gt; 
&lt;p&gt;On the first run, Powerlevel10k &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#configuration-wizard&quot;&gt;configuration wizard&lt;/a&gt; will ask you a few questions and configure your prompt. If it doesn&#39;t trigger automatically, type &lt;code&gt;p10k configure&lt;/code&gt;. Configuration wizard creates &lt;code&gt;~/.p10k.zsh&lt;/code&gt; based on your preferences. Additional prompt customization can be done by editing this file. It has plenty of comments to help you navigate through configuration options.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;FAQ&lt;/em&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#what-is-the-best-prompt-style-in-the-configuration-wizard&quot;&gt;What is the best prompt style in the configuration wizard?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#what-do-different-symbols-in-git-status-mean&quot;&gt;What do different symbols in Git status mean?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-change-the-format-of-git-status&quot;&gt;How do I change the format of Git status?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-add-username-andor-hostname-to-prompt&quot;&gt;How do I add username and/or hostname to prompt?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-change-prompt-colors&quot;&gt;How do I change prompt colors?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#why-some-prompt-segments-appear-and-disappear-as-im-typing&quot;&gt;Why some prompt segments appear and disappear as I&#39;m typing?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Troubleshooting&lt;/em&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#question-mark-in-prompt&quot;&gt;Question mark in prompt&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#icons-glyphs-or-powerline-symbols-dont-render&quot;&gt;Icons, glyphs or powerline symbols don&#39;t render&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#sub-pixel-imperfections-around-powerline-symbols&quot;&gt;Sub-pixel imperfections around powerline symbols&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#directory-is-difficult-to-see-in-prompt-when-using-rainbow-style&quot;&gt;Directory is difficult to see in prompt when using Rainbow style&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;For Powerlevel9k users&lt;/h3&gt; 
&lt;p&gt;If you&#39;ve been using Powerlevel9k before, &lt;strong&gt;do not remove the configuration options&lt;/strong&gt;. Powerlevel10k will pick them up and provide you with the same prompt UI you are used to. See &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#powerlevel9k-compatibility&quot;&gt;Powerlevel9k compatibility&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;FAQ&lt;/em&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#im-using-powerlevel9k-with-oh-my-zsh-how-do-i-migrate&quot;&gt;I&#39;m using Powerlevel9k with Oh My Zsh. How do I migrate?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#what-is-the-relationship-between-powerlevel9k-and-powerlevel10k&quot;&gt;What is the relationship between Powerlevel9k and Powerlevel10k?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#does-powerlevel10k-always-render-exactly-the-same-prompt-as-powerlevel9k-given-the-same-config&quot;&gt;Does Powerlevel10k always render exactly the same prompt as Powerlevel9k given the same config?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Troubleshooting&lt;/em&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#extra-or-missing-spaces-in-prompt-compared-to-powerlevel9k&quot;&gt;Extra or missing spaces in prompt compared to Powerlevel9k&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Fonts&lt;/h2&gt; 
&lt;p&gt;Powerlevel10k doesn&#39;t require custom fonts but can take advantage of them if they are available. It works well with &lt;a href=&quot;https://github.com/ryanoasis/nerd-fonts&quot;&gt;Nerd Fonts&lt;/a&gt;, &lt;a href=&quot;https://github.com/adobe-fonts/source-code-pro&quot;&gt;Source Code Pro&lt;/a&gt;, &lt;a href=&quot;https://fontawesome.com/&quot;&gt;Font Awesome&lt;/a&gt;, &lt;a href=&quot;https://github.com/powerline/fonts&quot;&gt;Powerline&lt;/a&gt;, and even the default system fonts. The full choice of style options is available only when using &lt;a href=&quot;https://github.com/ryanoasis/nerd-fonts&quot;&gt;Nerd Fonts&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;👇 &lt;strong&gt;Recommended font&lt;/strong&gt;: Meslo Nerd Font patched for Powerlevel10k. 👇&lt;/p&gt; 
&lt;h3&gt;&lt;a name=&quot;recommended-meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;&lt;/a&gt;&lt;a name=&quot;font&quot;&gt;&lt;/a&gt;Meslo Nerd Font patched for Powerlevel10k&lt;/h3&gt; 
&lt;p&gt;Gorgeous monospace font designed by Jim Lyles for Bitstream, customized by the same for Apple, further customized by André Berg, and finally patched by yours truly with customized scripts originally developed by Ryan L McIntyre of Nerd Fonts. Contains all glyphs and symbols that Powerlevel10k may need. Battle-tested in dozens of different terminals on all major operating systems.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;FAQ&lt;/em&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-was-the-recommended-font-created&quot;&gt;How was the recommended font created?&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Automatic font installation&lt;/h4&gt; 
&lt;p&gt;If you are using iTerm2 or Termux, &lt;code&gt;p10k configure&lt;/code&gt; can install the recommended font for you. Simply answer &lt;code&gt;Yes&lt;/code&gt; when asked whether to install &lt;em&gt;Meslo Nerd Font&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;If you are using a different terminal, proceed with manual font installation. 👇&lt;/p&gt; 
&lt;h4&gt;Manual font installation&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download these four ttf files: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf&quot;&gt;MesloLGS NF Regular.ttf&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf&quot;&gt;MesloLGS NF Bold.ttf&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf&quot;&gt;MesloLGS NF Italic.ttf&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf&quot;&gt;MesloLGS NF Bold Italic.ttf&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Double-click on each file and click &quot;Install&quot;. This will make &lt;code&gt;MesloLGS NF&lt;/code&gt; font available to all applications on your system.&lt;/li&gt; 
 &lt;li&gt;Configure your terminal to use this font: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;iTerm2&lt;/strong&gt;: Type &lt;code&gt;p10k configure&lt;/code&gt; and answer &lt;code&gt;Yes&lt;/code&gt; when asked whether to install &lt;em&gt;Meslo Nerd Font&lt;/em&gt;. Alternatively, open &lt;em&gt;iTerm2 → Preferences → Profiles → Text&lt;/em&gt; and set &lt;em&gt;Font&lt;/em&gt; to &lt;code&gt;MesloLGS NF&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Apple Terminal&lt;/strong&gt;: Open &lt;em&gt;Terminal → Preferences → Profiles → Text&lt;/em&gt;, click &lt;em&gt;Change&lt;/em&gt; under &lt;em&gt;Font&lt;/em&gt; and select &lt;code&gt;MesloLGS NF&lt;/code&gt; family.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Hyper&lt;/strong&gt;: Open &lt;em&gt;Hyper → Edit → Preferences&lt;/em&gt; and change the value of &lt;code&gt;fontFamily&lt;/code&gt; under &lt;code&gt;module.exports.config&lt;/code&gt; to &lt;code&gt;MesloLGS NF&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Visual Studio Code&lt;/strong&gt;: Open &lt;em&gt;File → Preferences → Settings&lt;/em&gt; (PC) or &lt;em&gt;Code → Preferences → Settings&lt;/em&gt; (Mac), enter &lt;code&gt;terminal.integrated.fontFamily&lt;/code&gt; in the search box at the top of &lt;em&gt;Settings&lt;/em&gt; tab and set the value below to &lt;code&gt;MesloLGS NF&lt;/code&gt;. Consult &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/389133fb8c9a2347929a23702ce3039aacc46c3d/visual-studio-code-font-settings.jpg&quot;&gt;this screenshot&lt;/a&gt; to see how it should look like or see &lt;a href=&quot;https://github.com/romkatv/powerlevel10k/issues/671&quot;&gt;this issue&lt;/a&gt; for extra information.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;GNOME Terminal&lt;/strong&gt; (the default Ubuntu terminal): Open &lt;em&gt;Terminal → Preferences&lt;/em&gt; and click on the selected profile under &lt;em&gt;Profiles&lt;/em&gt;. Check &lt;em&gt;Custom font&lt;/em&gt; under &lt;em&gt;Text Appearance&lt;/em&gt; and select &lt;code&gt;MesloLGS NF Regular&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Konsole&lt;/strong&gt;: Open &lt;em&gt;Settings → Edit Current Profile → Appearance&lt;/em&gt;, click &lt;em&gt;Select Font&lt;/em&gt; and select &lt;code&gt;MesloLGS NF Regular&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Tilix&lt;/strong&gt;: Open &lt;em&gt;Tilix → Preferences&lt;/em&gt; and click on the selected profile under &lt;em&gt;Profiles&lt;/em&gt;. Check &lt;em&gt;Custom font&lt;/em&gt; under &lt;em&gt;Text Appearance&lt;/em&gt; and select &lt;code&gt;MesloLGS NF Regular&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Windows Console Host&lt;/strong&gt; (the old thing): Click the icon in the top left corner, then &lt;em&gt;Properties → Font&lt;/em&gt; and set &lt;em&gt;Font&lt;/em&gt; to &lt;code&gt;MesloLGS NF&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Windows Terminal&lt;/strong&gt; by Microsoft (the new thing): Open &lt;em&gt;Settings&lt;/em&gt; (&lt;kbd&gt;Ctrl+,&lt;/kbd&gt;), click either on the selected profile under &lt;em&gt;Profiles&lt;/em&gt; or on &lt;em&gt;Defaults&lt;/em&gt;, click &lt;em&gt;Appearance&lt;/em&gt; and set &lt;em&gt;Font face&lt;/em&gt; to &lt;code&gt;MesloLGS NF&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Conemu&lt;/strong&gt;: Open &lt;em&gt;Setup → General → Fonts&lt;/em&gt; and set &lt;em&gt;Main console font&lt;/em&gt; to &lt;code&gt;MesloLGS NF&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;IntelliJ&lt;/strong&gt; (and other IDEs by Jet Brains): Open &lt;em&gt;IDE → Edit → Preferences → Editor → Color Scheme → Console Font&lt;/em&gt;. Select &lt;em&gt;Use console font instead of the default&lt;/em&gt; and set the font name to &lt;code&gt;MesloLGS NF&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Termux&lt;/strong&gt;: Type &lt;code&gt;p10k configure&lt;/code&gt; and answer &lt;code&gt;Yes&lt;/code&gt; when asked whether to install &lt;em&gt;Meslo Nerd Font&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Blink&lt;/strong&gt;: Type &lt;code&gt;config&lt;/code&gt;, go to &lt;em&gt;Appearance&lt;/em&gt;, tap &lt;em&gt;Add a new font&lt;/em&gt;, tap &lt;em&gt;Open Gallery&lt;/em&gt;, select &lt;em&gt;MesloLGS NF.css&lt;/em&gt;, tap &lt;em&gt;import&lt;/em&gt; and type &lt;code&gt;exit&lt;/code&gt; in the home view to reload the font.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Tabby&lt;/strong&gt; (formerly &lt;strong&gt;Terminus&lt;/strong&gt;): Open &lt;em&gt;Settings → Appearance&lt;/em&gt; and set &lt;em&gt;Font&lt;/em&gt; to &lt;code&gt;MesloLGS NF&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Terminator&lt;/strong&gt;: Open &lt;em&gt;Preferences&lt;/em&gt; using the context menu. Under &lt;em&gt;Profiles&lt;/em&gt; select the &lt;em&gt;General&lt;/em&gt; tab (should be selected already), uncheck &lt;em&gt;Use the system fixed width font&lt;/em&gt; (if not already) and select &lt;code&gt;MesloLGS NF Regular&lt;/code&gt;. Exit the Preferences dialog by clicking &lt;em&gt;Close&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Guake&lt;/strong&gt;: Right Click on an open terminal and open &lt;em&gt;Preferences&lt;/em&gt;. Under &lt;em&gt;Appearance&lt;/em&gt; tab, uncheck &lt;em&gt;Use the system fixed width font&lt;/em&gt; (if not already) and select &lt;code&gt;MesloLGS NF Regular&lt;/code&gt;. Exit the Preferences dialog by clicking &lt;em&gt;Close&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;MobaXterm&lt;/strong&gt;: Open &lt;em&gt;Settings&lt;/em&gt; → &lt;em&gt;Configuration&lt;/em&gt; → &lt;em&gt;Terminal&lt;/em&gt; → (under &lt;em&gt;Terminal look and feel&lt;/em&gt;) and change &lt;em&gt;Font&lt;/em&gt; to &lt;code&gt;MesloLGS NF&lt;/code&gt;. If you have &lt;em&gt;sessions&lt;/em&gt;, you need to change the font in each of them through &lt;em&gt;Settings&lt;/em&gt; → right click on an individual session → &lt;em&gt;Edit Session&lt;/em&gt; → &lt;em&gt;Terminal Settings&lt;/em&gt; → &lt;em&gt;Font settings&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Asbrú Connection Manager&lt;/strong&gt;: Open &lt;em&gt;Preferences → Local Shell Options → Look and Feel&lt;/em&gt;, enable &lt;em&gt;Use these personal options&lt;/em&gt; and change &lt;em&gt;Font:&lt;/em&gt; under &lt;em&gt;Terminal UI&lt;/em&gt; to &lt;code&gt;MesloLGS NF Regular&lt;/code&gt;. To change the font for the remote host connections, go to &lt;em&gt;Preferences → Terminal Options → Look and Feel&lt;/em&gt; and change &lt;em&gt;Font:&lt;/em&gt; under &lt;em&gt;Terminal UI&lt;/em&gt; to &lt;code&gt;MesloLGS NF Regular&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Warp&lt;/strong&gt;: Open Warp and Navigate to &lt;em&gt;Settings&lt;/em&gt; then &lt;em&gt;Appearance&lt;/em&gt;. Scroll down to &lt;em&gt;Text&lt;/em&gt; Section and under &lt;em&gt;&quot;Terminal Font&quot;&lt;/em&gt;, select the &lt;code&gt;MesloLGS NF&lt;/code&gt; font.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;WSLtty&lt;/strong&gt;: Right click on an open terminal and then on &lt;em&gt;Options&lt;/em&gt;. In the &lt;em&gt;Text&lt;/em&gt; section, under &lt;em&gt;Font&lt;/em&gt;, click &lt;em&gt;&quot;Select...&quot;&lt;/em&gt; and set Font to &lt;code&gt;MesloLGS NF Regular&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Yakuake&lt;/strong&gt;: Click &lt;em&gt;≡&lt;/em&gt; → &lt;em&gt;Manage Profiles&lt;/em&gt; → &lt;em&gt;New&lt;/em&gt; → &lt;em&gt;Appearance&lt;/em&gt;. Click &lt;em&gt;Choose&lt;/em&gt; next to the &lt;em&gt;Font&lt;/em&gt; dropdown, select &lt;code&gt;MesloLGS NF&lt;/code&gt; and click &lt;em&gt;OK&lt;/em&gt;. Click &lt;em&gt;OK&lt;/em&gt; to save the profile. Select the new profile and click &lt;em&gt;Set as Default&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Alacritty&lt;/strong&gt;: Create or open &lt;code&gt;~/.config/alacritty/alacritty.toml&lt;/code&gt; and add the following section to it: &lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;[font.normal]
family = &quot;MesloLGS NF&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;foot&lt;/strong&gt;: Create or open &lt;code&gt;~/.config/foot/foot.ini&lt;/code&gt; and add the following section to it: &lt;pre&gt;&lt;code class=&quot;language-ini&quot;&gt;font=MesloLGS NF:size=12
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;kitty&lt;/strong&gt;: Create or open &lt;code&gt;~/.config/kitty/kitty.conf&lt;/code&gt; and add the following line to it: &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;font_family MesloLGS NF
&lt;/code&gt;&lt;/pre&gt; Restart kitty by closing all sessions and opening a new session.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;puTTY&lt;/strong&gt;: Set &lt;em&gt;Window&lt;/em&gt; → &lt;em&gt;Appearance&lt;/em&gt; → &lt;em&gt;Font&lt;/em&gt; to &lt;code&gt;MesloLGS NF&lt;/code&gt;. Requires puTTY version &amp;gt;= 0.75.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;WezTerm&lt;/strong&gt;: Create or open &lt;code&gt;$HOME/.config/wezterm/wezterm.lua&lt;/code&gt; and add the following: &lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;local wezterm = require &#39;wezterm&#39;;
return {
    font = wezterm.font(&quot;MesloLGS NF&quot;),
}
&lt;/code&gt;&lt;/pre&gt; If the file already exists, only add the line with the font to the existing return. Also add the first line if it is not already present.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;urxvt&lt;/strong&gt;: Create or open &lt;code&gt;~/.Xresources&lt;/code&gt; and add the following line to it: &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;URxvt.font: xft:MesloLGS NF:size=11
&lt;/code&gt;&lt;/pre&gt; You can adjust the font size to your preference. After changing the config run &lt;code&gt;xrdb ~/.Xresources&lt;/code&gt; to reload it. The new config is applied to all new terminals.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;xterm&lt;/strong&gt;: Create or open &lt;code&gt;~/.Xresources&lt;/code&gt; and add the following line to it: &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;xterm*faceName: MesloLGS NF
&lt;/code&gt;&lt;/pre&gt; After changing the config run &lt;code&gt;xrdb ~/.Xresources&lt;/code&gt; to reload it. The new config is applied to all new terminals.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Zed&lt;/strong&gt;: Open &lt;code&gt;~/.config/zed/settings.json&lt;/code&gt; and set &lt;code&gt;terminal.font_family&lt;/code&gt; to &lt;code&gt;&quot;MesloLGS NF&quot;&lt;/code&gt;. &lt;pre&gt;&lt;code class=&quot;language-jsonc&quot;&gt;{
  &quot;terminal&quot;: {
    &quot;font_family&quot;: &quot;MesloLGS NF&quot;
  },
  // Other settings.
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Crostini (Linux on Chrome OS): Open chrome-untrusted://terminal/html/nassh_preferences_editor.html, set &lt;em&gt;Text font family&lt;/em&gt; to &lt;code&gt;&#39;MesloLGS NF&#39;&lt;/code&gt; (including the quotes) and &lt;em&gt;Custom CSS (inline text)&lt;/em&gt; to the following: &lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;@font-face {
 font-family: &quot;MesloLGS NF&quot;;
 src: url(&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/MesloLGS%20NF%20Regular.ttf&quot;);
 font-weight: normal;
 font-style: normal;
}
@font-face {
    font-family: &quot;MesloLGS NF&quot;;
    src: url(&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/MesloLGS%20NF%20Bold.ttf&quot;);
    font-weight: bold;
    font-style: normal;
}
@font-face {
    font-family: &quot;MesloLGS NF&quot;;
    src: url(&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/MesloLGS%20NF%20Italic.ttf&quot;);
    font-weight: normal;
    font-style: italic;
}
@font-face {
    font-family: &quot;MesloLGS NF&quot;;
    src: url(&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/MesloLGS%20NF%20Bold%20Italic.ttf&quot;);
    font-weight: bold;
    font-style: italic;
}
&lt;/code&gt;&lt;/pre&gt; &lt;strong&gt;&lt;em&gt;CAVEAT&lt;/em&gt;&lt;/strong&gt;: If you open the normal terminal preferences these settings will be overwritten.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Deepin Terminal&lt;/strong&gt;: Create or open &lt;code&gt;~/.config/deepin/deepin-terminal/config.conf&lt;/code&gt; and add the following section to it: &lt;pre&gt;&lt;code class=&quot;language-ini&quot;&gt;[basic.interface.font]
value = &quot;MesloLGS NF&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Ghostty&lt;/strong&gt;: Open &lt;em&gt;Menu → Open Configuration&lt;/em&gt; (Linux) or &lt;em&gt;Ghostty → Settings...&lt;/em&gt; (Mac) and add the following line: &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;font-family = &quot;MesloLGS NF&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;p10k configure&lt;/code&gt; to generate a new &lt;code&gt;~/.p10k.zsh&lt;/code&gt;. The old config may work incorrectly with the new font.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;Using a different terminal and know how to set the font for it? Share your knowledge by sending a PR to expand the list!&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Try it in Docker&lt;/h2&gt; 
&lt;p&gt;Try Powerlevel10k in Docker. You can safely make any changes to the file system while trying out the theme. Once you exit Zsh, the container is deleted.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;docker run -e TERM -e COLORTERM -e LC_ALL=C.UTF-8 -it --rm alpine sh -uec &#39;
  apk add git zsh nano vim
  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
  echo &quot;source ~/powerlevel10k/powerlevel10k.zsh-theme&quot; &amp;gt;&amp;gt;~/.zshrc
  cd ~/powerlevel10k
  exec zsh&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Tip&lt;/em&gt;: Install &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;the recommended font&lt;/a&gt; before running the Docker command to get access to all prompt styles.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Tip&lt;/em&gt;: Run &lt;code&gt;p10k configure&lt;/code&gt; while in Docker to try a different prompt style.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Powerlevel10k is released under the &lt;a href=&quot;https://github.com/romkatv/powerlevel10k/raw/master/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-update-powerlevel10k&quot;&gt;How do I update Powerlevel10k?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-uninstall-powerlevel10k&quot;&gt;How do I uninstall Powerlevel10k?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-install-powerlevel10k-on-a-machine-without-internet-access&quot;&gt;How do I install Powerlevel10k on a machine without Internet access?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#where-can-i-ask-for-help-and-report-bugs&quot;&gt;Where can I ask for help and report bugs?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#which-aspects-of-shell-and-terminal-does-powerlevel10k-affect&quot;&gt;Which aspects of shell and terminal does Powerlevel10k affect?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#im-using-powerlevel9k-with-oh-my-zsh-how-do-i-migrate&quot;&gt;I&#39;m using Powerlevel9k with Oh My Zsh. How do I migrate?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#is-it-really-fast&quot;&gt;Is it really fast?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-configure-instant-prompt&quot;&gt;How do I configure instant prompt?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-initialize-direnv-when-using-instant-prompt&quot;&gt;How do I initialize direnv when using instant prompt?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-export-gpg_tty-when-using-instant-prompt&quot;&gt;How do I export GPG_TTY when using instant prompt?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#what-do-different-symbols-in-git-status-mean&quot;&gt;What do different symbols in Git status mean?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-change-the-format-of-git-status&quot;&gt;How do I change the format of Git status?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#why-is-git-status-from-homegit-not-displayed-in-prompt&quot;&gt;Why is Git status from &lt;code&gt;$HOME/.git&lt;/code&gt; not displayed in prompt?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#why-does-git-status-sometimes-appear-grey-and-then-gets-colored-after-a-short-period-of-time&quot;&gt;Why does Git status sometimes appear grey and then gets colored after a short period of time?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-add-username-andor-hostname-to-prompt&quot;&gt;How do I add username and/or hostname to prompt?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#why-some-prompt-segments-appear-and-disappear-as-im-typing&quot;&gt;Why some prompt segments appear and disappear as I&#39;m typing?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-change-prompt-colors&quot;&gt;How do I change prompt colors?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#why-does-powerlevel10k-spawn-extra-processes&quot;&gt;Why does Powerlevel10k spawn extra processes?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#are-there-configuration-options-that-make-powerlevel10k-slow&quot;&gt;Are there configuration options that make Powerlevel10k slow?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#is-powerlevel10k-fast-to-load&quot;&gt;Is Powerlevel10k fast to load?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#what-is-the-relationship-between-powerlevel9k-and-powerlevel10k&quot;&gt;What is the relationship between Powerlevel9k and Powerlevel10k?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#does-powerlevel10k-always-render-exactly-the-same-prompt-as-powerlevel9k-given-the-same-config&quot;&gt;Does Powerlevel10k always render exactly the same prompt as Powerlevel9k given the same config?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#what-is-the-best-prompt-style-in-the-configuration-wizard&quot;&gt;What is the best prompt style in the configuration wizard?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-to-make-powerlevel10k-look-like-robbyrussell-oh-my-zsh-theme&quot;&gt;How to make Powerlevel10k look like robbyrussell Oh My Zsh theme?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#can-prompts-for-completed-commands-display-error-status-for-those-commands-instead-of-the-commands-preceding-them&quot;&gt;Can prompts for completed commands display error status for &lt;em&gt;those&lt;/em&gt; commands instead of the commands preceding them?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#what-is-the-minimum-supported-zsh-version&quot;&gt;What is the minimum supported Zsh version?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-were-these-screenshots-and-animated-gifs-created&quot;&gt;How were these screenshots and animated gifs created?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-was-the-recommended-font-created&quot;&gt;How was the recommended font created?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-to-package-powerlevel10k-for-distribution&quot;&gt;How to package Powerlevel10k for distribution?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How do I update Powerlevel10k?&lt;/h3&gt; 
&lt;p&gt;The command to update Powerlevel10k depends on how it was installed.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Installation&lt;/th&gt; 
   &lt;th&gt;Update command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#manual&quot;&gt;Manual&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git -C ~/powerlevel10k pull&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#oh-my-zsh&quot;&gt;Oh My Zsh&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git -C &quot;${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k&quot; pull&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#prezto&quot;&gt;Prezto&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zprezto-update&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zim&quot;&gt;Zim&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zimfw update&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#antigen&quot;&gt;Antigen&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;antigen update&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#antidote&quot;&gt;Antidote&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;antidote update&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zplug&quot;&gt;Zplug&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zplug update&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zgen&quot;&gt;Zgen&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zgen update&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zplugin&quot;&gt;Zplugin&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zplugin update&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zinit&quot;&gt;Zinit&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zinit update&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zi&quot;&gt;Zi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zi update&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zap&quot;&gt;Zap&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zap update&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#homebrew&quot;&gt;Homebrew&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;brew update &amp;amp;&amp;amp; brew upgrade&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#arch-linux&quot;&gt;Arch Linux&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;yay -S --noconfirm zsh-theme-powerlevel10k-git&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#alpine-linux&quot;&gt;Alpine Linux&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;apk update &amp;amp;&amp;amp; apk upgrade&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: Restart Zsh after updating Powerlevel10k. &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#weird-things-happen-after-typing-source-zshrc&quot;&gt;Do not use &lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;How do I uninstall Powerlevel10k?&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Remove all references to &quot;p10k&quot; from &lt;code&gt;~/.zshrc&lt;/code&gt;. You might have this snippet at the top:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;if [[ -r &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot; ]]; then
  source &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot;
fi
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And this at the bottom:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These are added by the &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#configuration-wizard&quot;&gt;configuration wizard&lt;/a&gt;. Remove them.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Remove all references to &quot;powerlevel10k&quot; from &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.zpreztorc&lt;/code&gt; and &lt;code&gt;~/.zimrc&lt;/code&gt; (some of these files may be missing -- this is normal). These references have been added manually by yourself when installing Powerlevel10k. Refer to the &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#installation&quot;&gt;installation instructions&lt;/a&gt; if you need a reminder.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Verify that all references to &quot;p10k&quot; and &quot;powerlevel10k&quot; are gone from &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.zpreztorc&lt;/code&gt; and &lt;code&gt;~/.zimrc&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;grep -E &#39;p10k|powerlevel10k&#39; ~/.zshrc ~/.zpreztorc ~/.zimrc 2&amp;gt;/dev/null
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If this command produces output, there are still references to &quot;p10k&quot; or &quot;powerlevel10k&quot;. You need to remove them.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Delete Powerlevel10k configuration file. This file is created by the &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#configuration-wizard&quot;&gt;configuration wizard&lt;/a&gt; and may contain manual edits by yourself.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;rm -f ~/.p10k.zsh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Delete Powerlevel10k source files. These files have been downloaded when you&#39;ve installed Powerlevel10k. The command to delete them depends on which installation method you&#39;d chosen. Refer to the &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#installation&quot;&gt;installation instructions&lt;/a&gt; if you need a reminder.&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Installation&lt;/th&gt; 
     &lt;th&gt;Uninstall command&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#manual&quot;&gt;Manual&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;rm -rf ~/powerlevel10k&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#oh-my-zsh&quot;&gt;Oh My Zsh&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;rm -rf -- &quot;${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k&quot;&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#prezto&quot;&gt;Prezto&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;n/a&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zim&quot;&gt;Zim&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;zimfw uninstall&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#antigen&quot;&gt;Antigen&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;antigen purge romkatv/powerlevel10k&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#antidote&quot;&gt;Antidote&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;antidote purge romkatv/powerlevel10k&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zplug&quot;&gt;Zplug&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;zplug clean&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zgen&quot;&gt;Zgen&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;zgen reset&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zplugin&quot;&gt;Zplugin&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;zplugin delete romkatv/powerlevel10k&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zinit&quot;&gt;Zinit&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;zinit delete romkatv/powerlevel10k&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zi&quot;&gt;Zi&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;zi delete romkatv/powerlevel10k&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zap&quot;&gt;Zap&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;zsh -ic &#39;zap clean&#39;&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#homebrew&quot;&gt;Homebrew&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;brew uninstall powerlevel10k&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#arch-linux&quot;&gt;Arch Linux&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;yay -R --noconfirm zsh-theme-powerlevel10k-git&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#alpine-linux&quot;&gt;Alpine Linux&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;&lt;code&gt;apk del zsh-theme-powerlevel10k&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Restart Zsh. &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#weird-things-happen-after-typing-source-zshrc&quot;&gt;Do not use &lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Delete Powerlevel10k cache files.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;rm -rf -- &quot;${XDG_CACHE_HOME:-$HOME/.cache}&quot;/p10k-*(N) &quot;${XDG_CACHE_HOME:-$HOME/.cache}&quot;/gitstatus
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;How do I install Powerlevel10k on a machine without Internet access?&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run this command on the machine without Internet access: &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;uname -sm | tr &#39;[A-Z]&#39; &#39;[a-z]&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Run these commands on a machine connected to the Internet after replacing the value of &lt;code&gt;target_uname&lt;/code&gt; with the output of the previous command: &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;target_uname=&quot;replace this with the output of the previous command&quot;
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
GITSTATUS_CACHE_DIR=&quot;$HOME&quot;/powerlevel10k/gitstatus/usrbin ~/powerlevel10k/gitstatus/install -f -s &quot;${target_uname% *}&quot; -m &quot;${target_uname#* }&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Copy &lt;code&gt;~/powerlevel10k&lt;/code&gt; from the machine connected to the Internet to the one without Internet access.&lt;/li&gt; 
 &lt;li&gt;Add &lt;code&gt;source ~/powerlevel10k/powerlevel10k.zsh-theme&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt; on the machine without Internet access: &lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;echo &#39;source ~/powerlevel10k/powerlevel10k.zsh-theme&#39; &amp;gt;&amp;gt;~/.zshrc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;If &lt;code&gt;~/.zshrc&lt;/code&gt; on the machine without Internet access sets &lt;code&gt;ZSH_THEME&lt;/code&gt;, remove that line. &lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;sed -i.bak &#39;/^ZSH_THEME=/d&#39; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To update, remove &lt;code&gt;~/powerlevel10k&lt;/code&gt; on both machines and repeat steps 1-3.&lt;/p&gt; 
&lt;h3&gt;Where can I ask for help and report bugs?&lt;/h3&gt; 
&lt;p&gt;The best way to ask for help and to report bugs is to &lt;a href=&quot;https://github.com/romkatv/powerlevel10k/issues&quot;&gt;open an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitter.im/powerlevel10k/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;Gitter&lt;/a&gt; is another option.&lt;/p&gt; 
&lt;p&gt;If all else fails, email &lt;a href=&quot;mailto:roman.perepelitsa@gmail.com&quot;&gt;roman.perepelitsa@gmail.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If necessary, encrypt your communication with &lt;a href=&quot;https://api.github.com/users/romkatv/gpg_keys&quot;&gt;this PGP key&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Which aspects of shell and terminal does Powerlevel10k affect?&lt;/h3&gt; 
&lt;p&gt;Powerlevel10k defines prompt and nothing else. It sets &lt;a href=&quot;http://zsh.sourceforge.net/Doc/Release/Options.html#Prompting&quot;&gt;prompt-related options&lt;/a&gt;, and parameters &lt;code&gt;PS1&lt;/code&gt; and &lt;code&gt;RPS1&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/prompt-highlight.png&quot; alt=&quot;Prompt Highlight&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Everything within the highlighted areas on the screenshot is produced by Powerlevel10k. Powerlevel10k has no control over the terminal content or colors outside these areas.&lt;/p&gt; 
&lt;p&gt;Powerlevel10k does not affect:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Terminal window/tab title.&lt;/li&gt; 
 &lt;li&gt;Colors used by &lt;code&gt;ls&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;The behavior of &lt;code&gt;git&lt;/code&gt; command.&lt;/li&gt; 
 &lt;li&gt;The content and style of &lt;kbd&gt;Tab&lt;/kbd&gt; completions.&lt;/li&gt; 
 &lt;li&gt;Command line colors (syntax highlighting, autosuggestions, etc.).&lt;/li&gt; 
 &lt;li&gt;Key bindings.&lt;/li&gt; 
 &lt;li&gt;Aliases.&lt;/li&gt; 
 &lt;li&gt;Prompt parameters other than &lt;code&gt;PS1&lt;/code&gt; and &lt;code&gt;RPS1&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Zsh options other than those &lt;a href=&quot;http://zsh.sourceforge.net/Doc/Release/Options.html#Prompting&quot;&gt;related to prompt&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The set of available commands. Powerlevel10k does not install any new commands with the only exception of &lt;code&gt;p10k&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;I&#39;m using Powerlevel9k with Oh My Zsh. How do I migrate?&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run this command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;# Add powerlevel10k to the list of Oh My Zsh themes.
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git &quot;${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k&quot;
# Replace ZSH_THEME=&quot;powerlevel9k/powerlevel9k&quot; with ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;.
sed -i.bak &#39;s/powerlevel9k/powerlevel10k/g&#39; ~/.zshrc
# Restart Zsh.
exec zsh
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;&lt;em&gt;Optional but highly recommended:&lt;/em&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Install &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;the recommended font&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Type &lt;code&gt;p10k configure&lt;/code&gt; and choose your favorite prompt style.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;Related:&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#powerlevel9k-compatibility&quot;&gt;Powerlevel9k compatibility.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#does-powerlevel10k-always-render-exactly-the-same-prompt-as-powerlevel9k-given-the-same-config&quot;&gt;Does Powerlevel10k always render exactly the same prompt as Powerlevel9k given the same config?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#extra-or-missing-spaces-in-prompt-compared-to-powerlevel9k&quot;&gt;Extra or missing spaces in prompt compared to Powerlevel9k.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#configuration-wizard&quot;&gt;Configuration wizard.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Is it really fast?&lt;/h3&gt; 
&lt;p&gt;Yes. See &lt;a href=&quot;https://github.com/romkatv/zsh-bench&quot;&gt;zsh-bench&lt;/a&gt; or a direct comparison with &lt;a href=&quot;https://asciinema.org/a/NHRjK3BMePw66jtRVY2livHwZ&quot;&gt;Powerlevel9k&lt;/a&gt; and &lt;a href=&quot;https://asciinema.org/a/253094&quot;&gt;Spaceship&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a name=&quot;how-do-i-enable-instant-prompt&quot;&gt;&lt;/a&gt;How do I configure instant prompt?&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#instant-prompt&quot;&gt;instant prompt&lt;/a&gt; to learn about instant prompt. This section explains how you can enable and configure it and lists caveats that you should be aware of.&lt;/p&gt; 
&lt;p&gt;Instant prompt can be enabled either through &lt;code&gt;p10k configure&lt;/code&gt; or by manually adding the following code snippet at the top of &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot; ]]; then
  source &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot;
fi
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It&#39;s important that you copy the lines verbatim. Don&#39;t replace &lt;code&gt;source&lt;/code&gt; with something else, don&#39;t call &lt;code&gt;zcompile&lt;/code&gt;, don&#39;t redirect output, etc.&lt;/p&gt; 
&lt;p&gt;When instant prompt is enabled, for the duration of Zsh initialization standard input is redirected to &lt;code&gt;/dev/null&lt;/code&gt; and standard output with standard error are redirected to a temporary file. Once Zsh is fully initialized, standard file descriptors are restored and the content of the temporary file is printed out.&lt;/p&gt; 
&lt;p&gt;When using instant prompt, you should carefully check any output that appears on Zsh startup as it may indicate that initialization has been altered, or perhaps even broken, by instant prompt. Initialization code that may require console input, such as asking for a keyring password or for a &lt;em&gt;[y/n]&lt;/em&gt; confirmation, must be moved above the instant prompt preamble in &lt;code&gt;~/.zshrc&lt;/code&gt;. Initialization code that merely prints to console but never reads from it will work correctly with instant prompt, although output that normally has colors may appear uncolored. You can either leave it be, suppress the output, or move it above the instant prompt preamble.&lt;/p&gt; 
&lt;p&gt;Here&#39;s an example of &lt;code&gt;~/.zshrc&lt;/code&gt; that breaks when instant prompt is enabled:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;if [[ -r &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot; ]]; then
  source &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot;
fi

keychain id_rsa --agents ssh  # asks for password
chatty-script                 # spams to stdout even when everything is fine
# ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Fixed version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;keychain id_rsa --agents ssh  # moved before instant prompt

# OK to perform console I/O before this point.
if [[ -r &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot; ]]; then
  source &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot;
fi
# From this point on, until zsh is fully initialized, console input won&#39;t work and
# console output may appear uncolored.

chatty-script &amp;gt;/dev/null      # spam output suppressed
# ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;POWERLEVEL9K_INSTANT_PROMPT&lt;/code&gt; is unset or set to &lt;code&gt;verbose&lt;/code&gt;, Powerlevel10k will print a warning when it detects console output during initialization to bring attention to potential issues. You can silence this warning (without suppressing console output) with &lt;code&gt;POWERLEVEL9K_INSTANT_PROMPT=quiet&lt;/code&gt;. This is recommended if some initialization code in &lt;code&gt;~/.zshrc&lt;/code&gt; prints to console and it&#39;s infeasible to move it above the instant prompt preamble or to suppress its output. You can completely disable instant prompt with &lt;code&gt;POWERLEVEL9K_INSTANT_PROMPT=off&lt;/code&gt;. Do this if instant prompt breaks Zsh initialization and you don&#39;t know how to fix it.&lt;/p&gt; 
&lt;p&gt;The value of &lt;code&gt;POWERLEVEL9K_INSTANT_PROMPT&lt;/code&gt; can be changed by running &lt;code&gt;p10k configure&lt;/code&gt; and selecting the appropriate option on the &lt;em&gt;Instant Prompt&lt;/em&gt; screen. Alternatively, you can search for &lt;code&gt;POWERLEVEL9K_INSTANT_PROMPT&lt;/code&gt; in the existing &lt;code&gt;~/.p10k.zsh&lt;/code&gt; and change its value there.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: Instant prompt requires Zsh &amp;gt;= 5.4. It&#39;s OK to enable it even when using an older version of Zsh but it won&#39;t do anything.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;FAQ&lt;/em&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-initialize-direnv-when-using-instant-prompt&quot;&gt;How do I initialize direnv when using instant prompt?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-export-gpg_tty-when-using-instant-prompt&quot;&gt;How do I export GPG_TTY when using instant prompt?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How do I initialize direnv when using instant prompt?&lt;/h3&gt; 
&lt;p&gt;If you&#39;ve enabled &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#instant-prompt&quot;&gt;instant prompt&lt;/a&gt;, you should have these lines at the top of &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;if [[ -r &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot; ]]; then
  source &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot;
fi
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To initialize direnv you need to add one line above that block and one line below it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;(( ${+commands[direnv]} )) &amp;amp;&amp;amp; emulate zsh -c &quot;$(direnv export zsh)&quot;

if [[ -r &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot; ]]; then
  source &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot;
fi

(( ${+commands[direnv]} )) &amp;amp;&amp;amp; emulate zsh -c &quot;$(direnv hook zsh)&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Related&lt;/em&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-export-gpg_tty-when-using-instant-prompt&quot;&gt;How do I export GPG_TTY when using instant prompt?&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;How do I export GPG_TTY when using instant prompt?&lt;/h3&gt; 
&lt;p&gt;You can export &lt;code&gt;GPG_TTY&lt;/code&gt; like this anywhere in &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;export GPG_TTY=$TTY
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This works whether you are using &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#instant-prompt&quot;&gt;instant prompt&lt;/a&gt; or not. It works even if you aren&#39;t using powerlevel10k. As an extra bonus, it&#39;s much faster than the commonly used &lt;code&gt;export GPG_TTY=$(tty)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related&lt;/em&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-initialize-direnv-when-using-instant-prompt&quot;&gt;How do I initialize direnv when using instant prompt?&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;What do different symbols in Git status mean?&lt;/h3&gt; 
&lt;p&gt;When using Lean, Classic or Rainbow style, Git status may look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;feature:master wip ⇣42⇡42 ⇠42⇢42 *42 merge ~42 +42 !42 ?42
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Symbol&lt;/th&gt; 
   &lt;th&gt;Meaning&lt;/th&gt; 
   &lt;th&gt;Source&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;feature&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;current branch; replaced with &lt;code&gt;#tag&lt;/code&gt; or &lt;code&gt;@commit&lt;/code&gt; if not on a branch&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git status --ignore-submodules=dirty&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;master&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;remote tracking branch; only shown if different from local branch&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git rev-parse --abbrev-ref --symbolic-full-name @{upstream}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;wip&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;the latest commit&#39;s summary contains &quot;wip&quot; or &quot;WIP&quot;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git show --pretty=%s --no-patch HEAD&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;up to date with the remote (neither ahead nor behind)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git rev-list --count HEAD...@{upstream}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;⇣42&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;this many commits behind the remote&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git rev-list --right-only --count HEAD...@{upstream}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;⇡42&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;this many commits ahead of the remote&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git rev-list --left-only --count HEAD...@{upstream}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;⇠42&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;this many commits behind the push remote&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git rev-list --right-only --count HEAD...@{push}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;⇢42&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;this many commits ahead of the push remote&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git rev-list --left-only --count HEAD...@{push}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;*42&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;this many stashes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git stash list&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;merge&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;repository state&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git status --ignore-submodules=dirty&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;~42&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;this many merge conflicts&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git status --ignore-submodules=dirty&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;+42&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;this many staged changes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git status --ignore-submodules=dirty&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;!42&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;this many unstaged changes&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git status --ignore-submodules=dirty&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;?42&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;this many untracked files&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git status --ignore-submodules=dirty&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;─&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;the number of staged, unstaged or untracked files is unknown&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;echo $POWERLEVEL9K_VCS_MAX_INDEX_SIZE_DIRTY&lt;/code&gt; or &lt;code&gt;git config --get bash.showDirtyState&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;em&gt;Related&lt;/em&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-change-the-format-of-git-status&quot;&gt;How do I change the format of Git status?&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;How do I change the format of Git status?&lt;/h3&gt; 
&lt;p&gt;To change the format of Git status, open &lt;code&gt;~/.p10k.zsh&lt;/code&gt;, search for &lt;code&gt;my_git_formatter&lt;/code&gt; and edit its source code.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related&lt;/em&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#what-do-different-symbols-in-git-status-mean&quot;&gt;What do different symbols in Git status mean?&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Why is Git status from &lt;code&gt;$HOME/.git&lt;/code&gt; not displayed in prompt?&lt;/h3&gt; 
&lt;p&gt;When using Lean, Classic or Rainbow style, &lt;code&gt;~/.p10k.zsh&lt;/code&gt; contains the following parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;# Don&#39;t show Git status in prompt for repositories whose workdir matches this pattern.
# For example, if set to &#39;~&#39;, the Git repository at $HOME/.git will be ignored.
# Multiple patterns can be combined with &#39;|&#39;: &#39;~(|/foo)|/bar/baz/*&#39;.
typeset -g POWERLEVEL9K_VCS_DISABLED_WORKDIR_PATTERN=&#39;~&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To see Git status for &lt;code&gt;$HOME/.git&lt;/code&gt; in prompt, open &lt;code&gt;~/.p10k.zsh&lt;/code&gt; and remove &lt;code&gt;POWERLEVEL9K_VCS_DISABLED_WORKDIR_PATTERN&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Why does Git status sometimes appear grey and then gets colored after a short period of time?&lt;/h3&gt; 
&lt;p&gt;tl;dr: When Git status in prompt is greyed out, it means Powerlevel10k is currently computing up-to-date Git status in the background. Prompt will get automatically refreshed when this computation completes.&lt;/p&gt; 
&lt;p&gt;When your current directory is within a Git repository, Powerlevel10k computes up-to-date Git status after every command. If the repository is large, or the machine is slow, this computation can take quite a bit of time. If it takes longer than 10 milliseconds (configurable via &lt;code&gt;POWERLEVEL9K_VCS_MAX_SYNC_LATENCY_SECONDS&lt;/code&gt;), Powerlevel10k displays the last known Git status in grey and continues to compute up-to-date Git status in the background. When the computation completes, Powerlevel10k refreshes prompt with new information, this time with colored Git status.&lt;/p&gt; 
&lt;p&gt;When using &lt;em&gt;Rainbow&lt;/em&gt; style, Git status is displayed as black on grey while it&#39;s still being computed. Depending on the terminal color palette, this may be difficult to read. In this case you might want to change the background color to something lighter for more contrast. To do that, open &lt;code&gt;~/.p10k.zsh&lt;/code&gt;, search for &lt;code&gt;POWERLEVEL9K_VCS_LOADING_BACKGROUND&lt;/code&gt;, uncomment it if it&#39;s commented out, and change the value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;typeset -g POWERLEVEL9K_VCS_LOADING_BACKGROUND=244
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Type &lt;code&gt;source ~/.p10k.zsh&lt;/code&gt; to apply your changes to the current Zsh session.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related&lt;/em&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#how-do-i-change-prompt-colors&quot;&gt;How do I change prompt colors?&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;How do I add username and/or hostname to prompt?&lt;/h3&gt; 
&lt;p&gt;When using Lean, Classic or Rainbow style, prompt shows &lt;code&gt;username@hostname&lt;/code&gt; when you are logged in as root or via SSH. There is little value in showing &lt;code&gt;username&lt;/code&gt; or &lt;code&gt;hostname&lt;/code&gt; when you are logged in to your local machine as a normal user. So the absence of &lt;code&gt;username@hostname&lt;/code&gt; in your prompt is an indication that you are working locally and that you aren&#39;t root. You can change it, however.&lt;/p&gt; 
&lt;p&gt;Open &lt;code&gt;~/.p10k.zsh&lt;/code&gt;. Close to the top you can see the most important parameters that define which segments are shown in your prompt. All generally useful prompt segments are listed in there. Some of them are enabled, others are commented out. One of them is of interest to you.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
  ...
  context  # user@hostname
  ...
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Search for &lt;code&gt;context&lt;/code&gt; to find the section in the config that lists parameters specific to this prompt segment. You should see the following lines:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;# Don&#39;t show context unless running with privileges or in SSH.
# Tip: Remove the next line to always show context.
typeset -g POWERLEVEL9K_CONTEXT_{DEFAULT,SUDO}_{CONTENT,VISUAL_IDENTIFIER}_EXPANSION=
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you follow the tip and remove (or comment out) the last line, you&#39;ll always see &lt;code&gt;username@hostname&lt;/code&gt; in prompt. You can change the format to just &lt;code&gt;username&lt;/code&gt;, or change the color, by adjusting the values of parameters nearby. There are plenty of comments to help you navigate.&lt;/p&gt; 
&lt;p&gt;You can also move &lt;code&gt;context&lt;/code&gt; to a different position in &lt;code&gt;POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS&lt;/code&gt; or even to &lt;code&gt;POWERLEVEL9K_LEFT_PROMPT_ELEMENTS&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Why some prompt segments appear and disappear as I&#39;m typing?&lt;/h3&gt; 
&lt;p&gt;Prompt segments can be configured to be shown only when the current command you are typing invokes a relevant tool.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;# Show prompt segment &quot;kubecontext&quot; only when the command you are typing invokes
# invokes kubectl, helm, or kubens.
typeset -g POWERLEVEL9K_KUBECONTEXT_SHOW_ON_COMMAND=&#39;kubectl|helm|kubens&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Configs created by &lt;code&gt;p10k configure&lt;/code&gt; may contain parameters of this kind. To customize when different prompt segments are shown, open &lt;code&gt;~/.p10k.zsh&lt;/code&gt;, search for &lt;code&gt;SHOW_ON_COMMAND&lt;/code&gt; and either remove these parameters or change their values.&lt;/p&gt; 
&lt;p&gt;You can also define a function in &lt;code&gt;~/.zshrc&lt;/code&gt; to toggle the display of a prompt segment between &lt;em&gt;always&lt;/em&gt; and &lt;em&gt;on command&lt;/em&gt;. This is similar to &lt;code&gt;kubeon&lt;/code&gt;/&lt;code&gt;kubeoff&lt;/code&gt; from &lt;a href=&quot;https://github.com/jonmosco/kube-ps1&quot;&gt;kube-ps1&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;function kube-toggle() {
  if (( ${+POWERLEVEL9K_KUBECONTEXT_SHOW_ON_COMMAND} )); then
    unset POWERLEVEL9K_KUBECONTEXT_SHOW_ON_COMMAND
  else
    POWERLEVEL9K_KUBECONTEXT_SHOW_ON_COMMAND=&#39;kubectl|helm|kubens&#39;
  fi
  p10k reload
  if zle; then
    zle push-input
    zle accept-line
  fi
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Invoke this function by typing &lt;code&gt;kube-toggle&lt;/code&gt;. You can also bind it to a key by adding two more lines to &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;zle -N kube-toggle
bindkey &#39;^]&#39; kube-toggle  # ctrl-] to toggle kubecontext in powerlevel10k prompt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How do I change prompt colors?&lt;/h3&gt; 
&lt;p&gt;You can either &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#change-the-color-palette-used-by-your-terminal&quot;&gt;change the color palette used by your terminal&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#set-colors-through-Powerlevel10k-configuration-parameters&quot;&gt;set colors through Powerlevel10k configuration parameters&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Change the color palette used by your terminal&lt;/h4&gt; 
&lt;p&gt;How exactly you change the terminal color palette (a.k.a. color scheme, or theme) depends on the kind of terminal you are using. Look around in terminal&#39;s settings/preferences or consult documentation.&lt;/p&gt; 
&lt;p&gt;When you change the terminal color palette, it usually affects only the first 16 colors, numbered from 0 to 15. In order to see any effect on Powerlevel10k prompt, you need to use prompt style that utilizes these low-numbered colors. Type &lt;code&gt;p10k configure&lt;/code&gt; and select &lt;em&gt;Rainbow&lt;/em&gt;, &lt;em&gt;Lean&lt;/em&gt; → &lt;em&gt;8 colors&lt;/em&gt; or &lt;em&gt;Pure&lt;/em&gt; → &lt;em&gt;Original&lt;/em&gt;. Other styles use higher-numbered colors, so they look the same in any terminal color palette.&lt;/p&gt; 
&lt;h4&gt;Set colors through Powerlevel10k configuration parameters&lt;/h4&gt; 
&lt;p&gt;Open &lt;code&gt;~/.p10k.zsh&lt;/code&gt;, search for &quot;color&quot;, &quot;foreground&quot; and &quot;background&quot; and change values of appropriate parameters. For example, here&#39;s how you can set the foreground of &lt;code&gt;time&lt;/code&gt; prompt segment to bright red:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;typeset -g POWERLEVEL9K_TIME_FOREGROUND=160
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Colors are specified using numbers from 0 to 255. Colors from 0 to 15 look differently in different terminals. Many terminals also support customization of these colors through color palettes (a.k.a. color schemes, or themes). Colors from 16 to 255 always look the same.&lt;/p&gt; 
&lt;p&gt;Type &lt;code&gt;source ~/.p10k.zsh&lt;/code&gt; to apply your changes to the current Zsh session.&lt;/p&gt; 
&lt;p&gt;To see how different numbered colors look in your terminal, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;for i in {0..255}; do print -Pn &quot;%K{$i}  %k%F{$i}${(l:3::0:)i}%f &quot; ${${(M)$((i%6)):#3}:+$&#39;\n&#39;}; done
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your terminal supports truecolor, you can use 24-bit colors in the &lt;code&gt;#RRGGBB&lt;/code&gt; format in addition to the numbered colors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;typeset -g POWERLEVEL9K_TIME_FOREGROUND=&#39;#FF0000&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Related:&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#directory-is-difficult-to-see-in-prompt-when-using-rainbow-style&quot;&gt;Directory is difficult to see in prompt when using Rainbow style.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#incorrect-foreground-color-in-vscode-terminal&quot;&gt;Incorrect foreground color in VSCode Terminal.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;By default, VSCode Terminal may arbitrarily replace the foreground color of your choice with a different color. This behavior can be &lt;a href=&quot;https://code.visualstudio.com/docs/terminal/appearance#_minimum-contrast-ratio&quot;&gt;turned off&lt;/a&gt; in VSCode settings.&lt;/p&gt; 
&lt;h3&gt;Why does Powerlevel10k spawn extra processes?&lt;/h3&gt; 
&lt;p&gt;Powerlevel10k uses &lt;a href=&quot;https://github.com/romkatv/gitstatus&quot;&gt;gitstatus&lt;/a&gt; as the backend behind &lt;code&gt;vcs&lt;/code&gt; prompt; gitstatus spawns &lt;code&gt;gitstatusd&lt;/code&gt; and &lt;code&gt;zsh&lt;/code&gt;. See &lt;a href=&quot;https://github.com/romkatv/gitstatus&quot;&gt;gitstatus&lt;/a&gt; for details. Powerlevel10k may also spawn &lt;code&gt;zsh&lt;/code&gt; to perform computation without blocking prompt. To avoid security hazard, these background processes aren&#39;t shared by different interactive shells. They terminate automatically when the parent &lt;code&gt;zsh&lt;/code&gt; process terminates or runs &lt;code&gt;exec(3)&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Are there configuration options that make Powerlevel10k slow?&lt;/h3&gt; 
&lt;p&gt;No, Powerlevel10k is always fast, with any configuration you throw at it. If you have noticeable prompt latency when using Powerlevel10k, please &lt;a href=&quot;https://github.com/romkatv/powerlevel10k/issues&quot;&gt;open an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Is Powerlevel10k fast to load?&lt;/h3&gt; 
&lt;p&gt;Yes. See &lt;a href=&quot;https://github.com/romkatv/zsh-bench&quot;&gt;zsh-bench&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;What is the relationship between Powerlevel9k and Powerlevel10k?&lt;/h3&gt; 
&lt;p&gt;Powerlevel10k was forked from Powerlevel9k in March 2019 after a week-long discussion in &lt;a href=&quot;https://github.com/Powerlevel9k/powerlevel9k/issues/1170&quot;&gt;powerlevel9k#1170&lt;/a&gt;. Powerlevel9k was already a mature project with a large user base and a release cycle measured in months. Powerlevel10k was spun off to iterate on performance improvements and new features at much higher pace.&lt;/p&gt; 
&lt;p&gt;Powerlevel9k and Powerlevel10k are independent projects. When using one, you shouldn&#39;t install the other. Issues should be filed against the project that you actually use. There are no individuals that have commit rights in both repositories. All bug fixes and new features committed to Powerlevel9k repository get ported to Powerlevel10k.&lt;/p&gt; 
&lt;p&gt;Over time, virtually all code in Powerlevel10k has been rewritten. There is currently no meaningful overlap between the implementations of Powerlevel9k and Powerlevel10k.&lt;/p&gt; 
&lt;p&gt;Powerlevel10k is committed to maintaining backward compatibility with all configs indefinitely. This commitment covers all configuration parameters recognized by Powerlevel9k (see &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#powerlevel9k-compatibility&quot;&gt;Powerlevel9k compatibility&lt;/a&gt;) and additional parameters that only Powerlevel10k understands. Names of all parameters in Powerlevel10k start with &lt;code&gt;POWERLEVEL9K_&lt;/code&gt; for consistency.&lt;/p&gt; 
&lt;h3&gt;Does Powerlevel10k always render exactly the same prompt as Powerlevel9k given the same config?&lt;/h3&gt; 
&lt;p&gt;Almost. There are a few differences.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default only &lt;code&gt;git&lt;/code&gt; vcs backend is enabled in Powerlevel10k. If you need &lt;code&gt;svn&lt;/code&gt; and &lt;code&gt;hg&lt;/code&gt;, add them to &lt;code&gt;POWERLEVEL9K_VCS_BACKENDS&lt;/code&gt;. These backends aren&#39;t yet optimized in Powerlevel10k, so enabling them will make prompt &lt;em&gt;very slow&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;Powerlevel10k doesn&#39;t support &lt;code&gt;POWERLEVEL9K_VCS_SHOW_SUBMODULE_DIRTY=true&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Powerlevel10k strives to be bug-compatible with Powerlevel9k but not when it comes to egregious bugs. If you accidentally rely on these bugs, your prompt will differ between Powerlevel9k and Powerlevel10k. Some examples: 
  &lt;ul&gt; 
   &lt;li&gt;Powerlevel9k ignores some options that are set after the theme is sourced while Powerlevel10k respects all options. If you see different icons in Powerlevel9k and Powerlevel10k, you&#39;ve probably defined &lt;code&gt;POWERLEVEL9K_MODE&lt;/code&gt; before sourcing the theme. This parameter gets ignored by Powerlevel9k but honored by Powerlevel10k. If you want your prompt to look in Powerlevel10k the same as in Powerlevel9k, remove &lt;code&gt;POWERLEVEL9K_MODE&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Powerlevel9k doesn&#39;t respect &lt;code&gt;ZLE_RPROMPT_INDENT&lt;/code&gt;. As a result, right prompt in Powerlevel10k can have an extra space at the end compared to Powerlevel9k. Set &lt;code&gt;ZLE_RPROMPT_INDENT=0&lt;/code&gt; if you don&#39;t want that space. More details in &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#extra-space-without-background-on-the-right-side-of-right-prompt&quot;&gt;troubleshooting&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Powerlevel9k has inconsistent spacing around icons. This was fixed in Powerlevel10k. Set &lt;code&gt;POWERLEVEL9K_LEGACY_ICON_SPACING=true&lt;/code&gt; to get the same spacing as in Powerlevel9k. More details in &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#extra-or-missing-spaces-around-icons&quot;&gt;troubleshooting&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;There are dozens more bugs in Powerlevel9k that don&#39;t exist in Powerlevel10k.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you notice any other changes in prompt appearance when switching from Powerlevel9k to Powerlevel10k, please &lt;a href=&quot;https://github.com/romkatv/powerlevel10k/issues&quot;&gt;open an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;What is the best prompt style in the configuration wizard?&lt;/h3&gt; 
&lt;p&gt;There are as many opinions on what constitutes the best prompt as there are people. It mostly comes down to personal preference. There are, however, a few hidden implications of different choices.&lt;/p&gt; 
&lt;p&gt;Pure style is an exact replication of &lt;a href=&quot;https://github.com/sindresorhus/pure&quot;&gt;Pure Zsh theme&lt;/a&gt;. It exists to ease the migration for users of this theme. Unless you are one of them, choose Lean style over Pure.&lt;/p&gt; 
&lt;p&gt;If you want to confine prompt colors to the selected terminal color palette (say, &lt;em&gt;Solarized Dark&lt;/em&gt;), use &lt;em&gt;Rainbow&lt;/em&gt;, &lt;em&gt;Lean&lt;/em&gt; → &lt;em&gt;8 colors&lt;/em&gt; or &lt;em&gt;Pure&lt;/em&gt; → &lt;em&gt;Original&lt;/em&gt;. Other styles use fixed colors and thus look the same in any terminal color palette.&lt;/p&gt; 
&lt;p&gt;All styles except Pure have an option to use &lt;em&gt;ASCII&lt;/em&gt; charset. Prompt will look less pretty but will render correctly with all fonts and in all locales.&lt;/p&gt; 
&lt;p&gt;If you enable transient prompt, take advantage of two-line prompt. You&#39;ll get the benefit of extra space for typing commands without the usual drawback of reduced scrollback density. Having all commands start from the same offset is also nice.&lt;/p&gt; 
&lt;p&gt;Similarly, if you enable transient prompt, sparse prompt (with an empty line before prompt) is a great choice.&lt;/p&gt; 
&lt;p&gt;If you are using vi keymap, choose prompt with &lt;code&gt;prompt_char&lt;/code&gt; in it (shown as green &lt;code&gt;❯&lt;/code&gt; in the wizard). This symbol changes depending on vi mode: &lt;code&gt;❯&lt;/code&gt;, &lt;code&gt;❮&lt;/code&gt;, &lt;code&gt;V&lt;/code&gt;, &lt;code&gt;▶&lt;/code&gt; for insert, command, visual and replace mode respectively. When a command fails, the symbol turns red. &lt;em&gt;Lean&lt;/em&gt; style always has &lt;code&gt;prompt_char&lt;/code&gt; in it. &lt;em&gt;Rainbow&lt;/em&gt; and &lt;em&gt;Classic&lt;/em&gt; styles have it only in the two-line configuration without left frame.&lt;/p&gt; 
&lt;p&gt;If you value horizontal space or prefer minimalist aesthetics:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use a monospace font, such as &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;the recommended font&lt;/a&gt;. Non-monospace fonts require extra space after icons that are larger than a single column.&lt;/li&gt; 
 &lt;li&gt;Use Lean style. Compared to Classic and Rainbow, it saves two characters per prompt segment.&lt;/li&gt; 
 &lt;li&gt;Disable &lt;em&gt;current time&lt;/em&gt; and &lt;em&gt;frame&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;Use &lt;em&gt;few icons&lt;/em&gt;. The extra icons enabled by the &lt;em&gt;many icons&lt;/em&gt; option primarily serve decorative function. Informative icons, such as background job indicator, will be shown either way.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: You can run configuration wizard as many times as you like. Type &lt;code&gt;p10k configure&lt;/code&gt; to try new prompt style.&lt;/p&gt; 
&lt;h3&gt;How to make Powerlevel10k look like robbyrussell Oh My Zsh theme?&lt;/h3&gt; 
&lt;p&gt;Use &lt;a href=&quot;https://github.com/romkatv/powerlevel10k/raw/master/config/p10k-robbyrussell.zsh&quot;&gt;this config&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can either download it, save as &lt;code&gt;~/.p10k.zsh&lt;/code&gt; and &lt;code&gt;source ~/.p10k.zsh&lt;/code&gt; from &lt;code&gt;~/.zshrc&lt;/code&gt;, or source &lt;code&gt;p10k-robbyrussell.zsh&lt;/code&gt; directly from your cloned &lt;code&gt;powerlevel10k&lt;/code&gt; repository.&lt;/p&gt; 
&lt;h3&gt;Can prompts for completed commands display error status for &lt;em&gt;those&lt;/em&gt; commands instead of the commands preceding them?&lt;/h3&gt; 
&lt;p&gt;No. When you hit &lt;em&gt;ENTER&lt;/em&gt; and the command you&#39;ve typed starts running, its error status isn&#39;t yet known, so it cannot be shown in prompt. When the command completes, the error status gets known but it&#39;s no longer possible to update prompt for &lt;em&gt;that&lt;/em&gt; command. This is why the error status for every command is reflected in the &lt;em&gt;next&lt;/em&gt; prompt.&lt;/p&gt; 
&lt;p&gt;For details, see &lt;a href=&quot;https://www.reddit.com/r/zsh/comments/eg49ff/powerlevel10k_prompt_history_exit_code_colors/fc5huku&quot;&gt;this post on /r/zsh&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;What is the minimum supported Zsh version?&lt;/h3&gt; 
&lt;p&gt;Zsh 5.3 or newer should work. Fast startup requires Zsh &amp;gt;= 5.4.&lt;/p&gt; 
&lt;h3&gt;How were these screenshots and animated gifs created?&lt;/h3&gt; 
&lt;p&gt;All screenshots and animated gifs were recorded in GNOME Terminal with &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;the recommended font&lt;/a&gt; and Tango Dark color palette with custom background color (&lt;code&gt;#171A1B&lt;/code&gt; instead of &lt;code&gt;#2E3436&lt;/code&gt; -- twice as dark).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/gnome-terminal-colors.png&quot; alt=&quot;GNOME Terminal Color Settings&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Syntax highlighting, where present, was provided by &lt;a href=&quot;https://github.com/zsh-users/zsh-syntax-highlighting&quot;&gt;zsh-syntax-highlighting&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;How was the recommended font created?&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;The recommended font&lt;/a&gt; is the product of many individuals. Its origin is &lt;em&gt;Bitstream Vera Sans Mono&lt;/em&gt;, which has given birth to &lt;em&gt;Menlo&lt;/em&gt;, which in turn has spawned &lt;em&gt;Meslo&lt;/em&gt;. Finally, extra glyphs have been added to &lt;em&gt;Meslo&lt;/em&gt; with scripts forked from Nerd Fonts. The final font is released under the terms of &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/MesloLGS%20NF%20License.txt&quot;&gt;Apache License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;MesloLGS NF font can be recreated with the following command (requires &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;docker&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;git clone --depth=1 https://github.com/romkatv/nerd-fonts.git
cd nerd-fonts
./build &#39;Meslo/S/*&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything goes well, four &lt;code&gt;ttf&lt;/code&gt; files will appear in &lt;code&gt;./out&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;How to package Powerlevel10k for distribution?&lt;/h3&gt; 
&lt;p&gt;It&#39;s currently neither easy nor recommended to package and distribute Powerlevel10k. There are no instructions you can follow that would allow you to easily update your package when new versions of Powerlevel10k are released. This may change in the future but not soon.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#oh-my-zsh-theme-powerlevel10kpowerlevel10k-not-found&quot;&gt;&lt;code&gt;[oh-my-zsh] theme &#39;powerlevel10k/powerlevel10k&#39; not found&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#question-mark-in-prompt&quot;&gt;Question mark in prompt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#icons-glyphs-or-powerline-symbols-dont-render&quot;&gt;Icons, glyphs or powerline symbols don&#39;t render&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#sub-pixel-imperfections-around-powerline-symbols&quot;&gt;Sub-pixel imperfections around powerline symbols&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#error-character-not-in-range&quot;&gt;Error: character not in range&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#cursor-is-in-the-wrong-place&quot;&gt;Cursor is in the wrong place&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#prompt-wrapping-around-in-a-weird-way&quot;&gt;Prompt wrapping around in a weird way&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#right-prompt-is-in-the-wrong-place&quot;&gt;Right prompt is in the wrong place&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#configuration-wizard-runs-automatically-every-time-zsh-is-started&quot;&gt;Configuration wizard runs automatically every time Zsh is started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#some-prompt-styles-are-missing-from-the-configuration-wizard&quot;&gt;Some prompt styles are missing from the configuration wizard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#cannot-install-the-recommended-font&quot;&gt;Cannot install the recommended font&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#extra-or-missing-spaces-in-prompt-compared-to-powerlevel9k&quot;&gt;Extra or missing spaces in prompt compared to Powerlevel9k&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#extra-space-without-background-on-the-right-side-of-right-prompt&quot;&gt;Extra space without background on the right side of right prompt&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#extra-or-missing-spaces-around-icons&quot;&gt;Extra or missing spaces around icons&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#weird-things-happen-after-typing-source-zshrc&quot;&gt;Weird things happen after typing &lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#transient-prompt-stops-working-after-some-time&quot;&gt;Transient prompt stops working after some time&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#cannot-make-powerlevel10k-work-with-my-plugin-manager&quot;&gt;Cannot make Powerlevel10k work with my plugin manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#directory-is-difficult-to-see-in-prompt-when-using-rainbow-style&quot;&gt;Directory is difficult to see in prompt when using Rainbow style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#incorrect-foreground-color-in-vscode-terminal&quot;&gt;Incorrect foreground color in VSCode Terminal.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#horrific-mess-when-resizing-terminal-window&quot;&gt;Horrific mess when resizing terminal window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#icons-cut-off-in-konsole&quot;&gt;Icons cut off in Konsole&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#arch-linux-logo-has-a-dot-in-the-bottom-right-corner&quot;&gt;Arch Linux logo has a dot in the bottom right corner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#incorrect-git-status-in-prompt&quot;&gt;Incorrect git status in prompt&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;[oh-my-zsh] theme &#39;powerlevel10k/powerlevel10k&#39; not found&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;When opening a terminal, or starting zsh manually, you may encounter this error message:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[oh-my-zsh] theme &#39;powerlevel10k/powerlevel10k&#39; not found
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt;First, run &lt;code&gt;typeset -p P9K_VERSION&lt;/code&gt; to check whether Powerlevel10k has been loaded. 
  &lt;ul&gt; 
   &lt;li&gt;If &lt;code&gt;typeset -p P9K_VERSION&lt;/code&gt; succeeds and prints something like &lt;code&gt;typeset P9K_VERSION=1.19.14&lt;/code&gt; (the version could be different), remove the following line from &lt;code&gt;~/.zshrc&lt;/code&gt;: &lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;If &lt;code&gt;typeset -p P9K_VERSION&lt;/code&gt; fails with the error &lt;code&gt;typeset: no such variable: P9K_VERSION&lt;/code&gt;, run the following command: &lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;git clone --depth=1 https://github.com/romkatv/powerlevel10k.git &quot;${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Restart Zsh with &lt;code&gt;exec zsh&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Question mark in prompt&lt;/h3&gt; 
&lt;p&gt;If it looks like a regular &lt;code&gt;?&lt;/code&gt;, that&#39;s normal. It means you have untracked files in the current Git repository. Type &lt;code&gt;git status&lt;/code&gt; to see these files. You can change this symbol or disable the display of untracked files altogether. Search for &lt;code&gt;untracked files&lt;/code&gt; in &lt;code&gt;~/.p10k.zsh&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;FAQ&lt;/em&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#what-do-different-symbols-in-git-status-mean&quot;&gt;What do different symbols in Git status mean?&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can also get a weird-looking question mark in your prompt if your terminal&#39;s font is missing some glyphs. See &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#icons-glyphs-or-powerline-symbols-dont-render&quot;&gt;icons, glyphs or powerline symbols don&#39;t render&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Icons, glyphs or powerline symbols don&#39;t render&lt;/h3&gt; 
&lt;p&gt;Restart your terminal, &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;install the recommended font&lt;/a&gt; and run &lt;code&gt;p10k configure&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Sub-pixel imperfections around powerline symbols&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/powerline-imperfections.png&quot; alt=&quot;Powerline Prompt Imperfections&quot;&gt;&lt;/p&gt; 
&lt;p&gt;There are three imperfections on the screenshot. From left to right:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;A thin blue line (a sub-pixel gap) between the content of a prompt segment and the following powerline connection.&lt;/li&gt; 
 &lt;li&gt;Incorrect alignment of a powerline connection and the following prompt segment. The connection appears shifted to the right.&lt;/li&gt; 
 &lt;li&gt;A thin red line below a powerline connection. The connection appears shifted up.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Zsh themes don&#39;t have down-to-pixel control over the terminal content. Everything you see on the screen is made of monospace characters. A white powerline prompt segment is made of text on white background followed by U+E0B0 (a right-pointing triangle).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/powerline-anatomy.png&quot; alt=&quot;Powerline Prompt Imperfections&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If Powerlevel10k prompt has imperfections around powerline symbols, you&#39;ll see exactly the same imperfections with all powerline themes (Agnoster, Powerlevel9k, Powerline, etc.)&lt;/p&gt; 
&lt;p&gt;There are several things you can try to deal with these imperfections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Try &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;the recommended font&lt;/a&gt;. If you are already using it, switching to another font may help but is unlikely.&lt;/li&gt; 
 &lt;li&gt;Change terminal font size one point up or down. For example, in iTerm2 powerline prompt looks perfect at font sizes 11 and 13 but breaks down at 12.&lt;/li&gt; 
 &lt;li&gt;Enable builtin powerline glyphs in terminal settings if your terminal supports it (iTerm2 does).&lt;/li&gt; 
 &lt;li&gt;Change font hinting and/or anti-aliasing mode in the terminal settings.&lt;/li&gt; 
 &lt;li&gt;Shift all text one pixel up/down/left/right if your terminal has an option to do so.&lt;/li&gt; 
 &lt;li&gt;Try a different terminal.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A more radical solution is to switch to prompt style without background. Type &lt;code&gt;p10k configure&lt;/code&gt; and select &lt;em&gt;Lean&lt;/em&gt;. This style has a modern lightweight look. As a bonus, it doesn&#39;t suffer from rendering imperfections that afflict powerline-style prompt.&lt;/p&gt; 
&lt;h3&gt;Error: character not in range&lt;/h3&gt; 
&lt;p&gt;Type &lt;code&gt;echo &#39;\u276F&#39;&lt;/code&gt;. If you get an error saying &quot;zsh: character not in range&quot;, your locale doesn&#39;t support UTF-8. You need to fix it. If you are running Zsh over SSH, see &lt;a href=&quot;https://github.com/romkatv/powerlevel10k/issues/153#issuecomment-518347833&quot;&gt;this&lt;/a&gt;. If you are running Zsh locally, Google &quot;set UTF-8 locale in &lt;em&gt;your OS&lt;/em&gt;&quot;.&lt;/p&gt; 
&lt;h3&gt;Cursor is in the wrong place&lt;/h3&gt; 
&lt;p&gt;Type &lt;code&gt;echo &#39;\u276F&#39;&lt;/code&gt;. If you get an error saying &quot;zsh: character not in range&quot;, see the &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zsh-character-not-in-range&quot;&gt;previous section&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If the &lt;code&gt;echo&lt;/code&gt; command prints &lt;code&gt;❯&lt;/code&gt; but the cursor is still in the wrong place, install &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;the recommended font&lt;/a&gt; and run &lt;code&gt;p10k configure&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If this doesn&#39;t help, add &lt;code&gt;unset ZLE_RPROMPT_INDENT&lt;/code&gt; at the bottom of &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Still having issues? Run the following command to diagnose the problem:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;() {
  emulate -L zsh
  setopt err_return no_unset
  local text
  print -rl -- &#39;Select a part of your prompt from the terminal window and paste it below.&#39; &#39;&#39;
  read -r &#39;?Prompt: &#39; text
  local -i len=${(m)#text}
  local frame=&quot;+-${(pl.$len..-.):-}-+&quot;
  print -lr -- $frame &quot;| $text |&quot; $frame
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;If the prompt line aligns with the frame&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;+------------------------------+
| romka@adam ✓ ~/powerlevel10k |
+------------------------------+
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the output of the command is aligned for every part of your prompt (left and right), this indicates a bug in the theme or your config. Use this command to diagnose it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;print -rl -- ${(eq+)PROMPT} ${(eq+)RPROMPT}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Look for &lt;code&gt;%{...%}&lt;/code&gt; and backslash escapes in the output. If there are any, they are the likely culprits. Open an issue if you get stuck.&lt;/p&gt; 
&lt;h4&gt;If the prompt line is longer than the frame&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;+-----------------------------+
| romka@adam ✓ ~/powerlevel10k |
+-----------------------------+
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is usually caused by a terminal bug or misconfiguration that makes it print ambiguous-width characters as double-width instead of single width. For example, &lt;a href=&quot;https://github.com/romkatv/powerlevel10k/issues/165&quot;&gt;this issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;If the prompt line is shorter than the frame and is mangled&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;+------------------------------+
| romka@adam ✓~/powerlevel10k |
+------------------------------+
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that this prompt is different from the original as it&#39;s missing a space after the check mark.&lt;/p&gt; 
&lt;p&gt;This can be caused by a low-level bug in macOS. See &lt;a href=&quot;https://github.com/romkatv/powerlevel10k/issues/241&quot;&gt;this issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This can also happen if prompt contains glyphs designated as &quot;wide&quot; in the Unicode standard and your terminal incorrectly displays them as non-wide. Terminals suffering from this limitation include Konsole, Hyper and the integrated VSCode Terminal. The solution is to use a different terminal or remove all wide glyphs from prompt.&lt;/p&gt; 
&lt;h4&gt;If the prompt line is shorter than the frame and is not mangled&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;+--------------------------------+
| romka@adam ✓ ~/powerlevel10k |
+--------------------------------+
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This can be caused by misconfigured locale. See &lt;a href=&quot;https://github.com/romkatv/powerlevel10k/issues/251&quot;&gt;this issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Prompt wrapping around in a weird way&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#cursor-is-in-the-wrong-place&quot;&gt;cursor is in the wrong place&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Right prompt is in the wrong place&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#cursor-is-in-the-wrong-place&quot;&gt;cursor is in the wrong place&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Configuration wizard runs automatically every time Zsh is started&lt;/h3&gt; 
&lt;p&gt;When Powerlevel10k starts, it automatically runs &lt;code&gt;p10k configure&lt;/code&gt; if no &lt;code&gt;POWERLEVEL9K_*&lt;/code&gt; parameters are defined. Based on your prompt style choices, the configuration wizard creates &lt;code&gt;~/.p10k.zsh&lt;/code&gt; with a bunch of &lt;code&gt;POWERLEVEL9K_*&lt;/code&gt; parameters in it and adds a line to &lt;code&gt;~/.zshrc&lt;/code&gt; to source this file. The next time you start Zsh, the configuration wizard shouldn&#39;t run automatically. If it does, this means the evaluation of &lt;code&gt;~/.zshrc&lt;/code&gt; terminates prematurely before it reaches the line that sources &lt;code&gt;~/.p10k.zsh&lt;/code&gt;. This most often happens due to syntax errors in &lt;code&gt;~/.zshrc&lt;/code&gt;. These errors get hidden by the configuration wizard screen, so you don&#39;t notice them. When you exit configuration wizard, look for error messages. You can also use &lt;code&gt;POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true zsh&lt;/code&gt; to start Zsh without automatically running the configuration wizard. Once you can see the errors, fix &lt;code&gt;~/.zshrc&lt;/code&gt; to get rid of them.&lt;/p&gt; 
&lt;h3&gt;Some prompt styles are missing from the configuration wizard&lt;/h3&gt; 
&lt;p&gt;If Zsh version is below 5.7.1 or &lt;code&gt;COLORTERM&lt;/code&gt; environment variable is neither &lt;code&gt;24bit&lt;/code&gt; nor &lt;code&gt;truecolor&lt;/code&gt;, configuration wizard won&#39;t offer Pure style with Snazzy color scheme. &lt;em&gt;Fix&lt;/em&gt;: Install Zsh &amp;gt;= 5.7.1 and use a terminal with truecolor support. Verify with &lt;code&gt;print -P &#39;%F{#ff0000}red%f&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If the terminal can display fewer than 256 colors, configuration wizard preselects Lean style with 8 colors. All other styles require at least 256 colors. &lt;em&gt;Fix&lt;/em&gt;: Use a terminal with 256 color support and make sure that &lt;code&gt;TERM&lt;/code&gt; environment variable is set correctly. Verify with &lt;code&gt;print $terminfo[colors]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If there is no UTF-8 locale on the system, configuration wizard won&#39;t offer prompt styles that use Unicode characters. &lt;em&gt;Fix&lt;/em&gt;: Install a UTF-8 locale. Verify with &lt;code&gt;locale -a&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Another case in which configuration wizard may not offer Unicode prompt styles is when the &lt;code&gt;MULTIBYTE&lt;/code&gt; shell option is disabled. &lt;em&gt;Fix&lt;/em&gt;: Enable the &lt;code&gt;MULTIBYTE&lt;/code&gt; option, or rather don&#39;t disable it (this option is enabled in Zsh by default). Verify with &lt;code&gt;print -r -- ${options[MULTIBYTE]}&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;When &lt;code&gt;MULTIBYTE&lt;/code&gt; is enabled and a UTF-8 locale is available, the first few questions asked by the configuration wizard assess capabilities of the terminal font. If your answers indicate that some glyphs don&#39;t render correctly, configuration wizard won&#39;t offer prompt styles that use them. &lt;em&gt;Fix&lt;/em&gt;: Restart your terminal and install &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;the recommended font&lt;/a&gt;. Verify by running &lt;code&gt;p10k configure&lt;/code&gt; and checking that all glyphs render correctly.&lt;/p&gt; 
&lt;h3&gt;Cannot install the recommended font&lt;/h3&gt; 
&lt;p&gt;Once you download &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;the recommended font&lt;/a&gt;, you can install it just like any other font. Google &quot;how to install fonts on &lt;em&gt;your OS&lt;/em&gt;&quot;.&lt;/p&gt; 
&lt;h3&gt;Extra or missing spaces in prompt compared to Powerlevel9k&lt;/h3&gt; 
&lt;p&gt;tl;dr: Add &lt;code&gt;ZLE_RPROMPT_INDENT=0&lt;/code&gt; and &lt;code&gt;POWERLEVEL9K_LEGACY_ICON_SPACING=true&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt; to get the same prompt spacing as in Powerlevel9k.&lt;/p&gt; 
&lt;p&gt;When using Powerlevel10k with a Powerlevel9k config, you might get additional spaces in prompt here and there. These come in two flavors.&lt;/p&gt; 
&lt;h4&gt;Extra space without background on the right side of right prompt&lt;/h4&gt; 
&lt;p&gt;tl;dr: Add &lt;code&gt;ZLE_RPROMPT_INDENT=0&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt; to get rid of that space.&lt;/p&gt; 
&lt;p&gt;From &lt;a href=&quot;http://zsh.sourceforge.net/Doc/Release/Parameters.html#index-ZLE_005fRPROMPT_005fINDENT&quot;&gt;Zsh documentation&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;ZLE_RPROMPT_INDENT &amp;lt;S&amp;gt;&lt;/code&gt;&lt;/p&gt; 
 &lt;p&gt;If set, used to give the indentation between the right hand side of the right prompt in the line editor as given by &lt;code&gt;RPS1&lt;/code&gt; or &lt;code&gt;RPROMPT&lt;/code&gt; and the right hand side of the screen. If not set, the value &lt;code&gt;1&lt;/code&gt; is used.&lt;/p&gt; 
 &lt;p&gt;Typically this will be used to set the value to &lt;code&gt;0&lt;/code&gt; so that the prompt appears flush with the right hand side of the screen.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Powerlevel10k respects this parameter. If you set &lt;code&gt;ZLE_RPROMPT_INDENT=1&lt;/code&gt; (or leave it unset, which is the same thing as setting it to &lt;code&gt;1&lt;/code&gt;), you&#39;ll get an empty space to the right of right prompt. If you set &lt;code&gt;ZLE_RPROMPT_INDENT=0&lt;/code&gt;, your prompt will go to the edge of the terminal. This is how it works in every theme except Powerlevel9k.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/p9k-vs-p10k-zle-rprompt-indent.png&quot; alt=&quot;ZLE_RPROMPT_INDENT: Powerlevel10k vs Powerlevel9k&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Powerlevel9k issue: &lt;a href=&quot;https://github.com/Powerlevel9k/powerlevel9k/issues/1292&quot;&gt;powerlevel9k#1292&lt;/a&gt;. It&#39;s been fixed in the development branch of Powerlevel9k but the fix hasn&#39;t yet made it to &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Add &lt;code&gt;ZLE_RPROMPT_INDENT=0&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt; to get the same spacing on the right edge of prompt as in Powerlevel9k.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Several versions of Zsh have bugs that get triggered when you set &lt;code&gt;ZLE_RPROMPT_INDENT=0&lt;/code&gt;. Powerlevel10k can work around these bugs when using powerline prompt style. If you notice visual artifacts in prompt, or wrong cursor position, try removing &lt;code&gt;ZLE_RPROMPT_INDENT&lt;/code&gt; from &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Extra or missing spaces around icons&lt;/h4&gt; 
&lt;p&gt;tl;dr: Add &lt;code&gt;POWERLEVEL9K_LEGACY_ICON_SPACING=true&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt; to get the same spacing around icons as in Powerlevel9k.&lt;/p&gt; 
&lt;p&gt;Spacing around icons in Powerlevel9k is inconsistent.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/p9k-vs-p10k-icon-spacing.png&quot; alt=&quot;ZLE_RPROMPT_INDENT: Powerlevel10k vs Powerlevel9k&quot;&gt;&lt;/p&gt; 
&lt;p&gt;This inconsistency is a constant source of annoyance, so it was fixed in Powerlevel10k. You can add &lt;code&gt;POWERLEVEL9K_LEGACY_ICON_SPACING=true&lt;/code&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt; to get the same spacing around icons as in Powerlevel9k.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; It&#39;s not a good idea to define &lt;code&gt;POWERLEVEL9K_LEGACY_ICON_SPACING&lt;/code&gt; when using &lt;code&gt;p10k configure&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Weird things happen after typing &lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;It&#39;s almost always a bad idea to run &lt;code&gt;source ~/.zshrc&lt;/code&gt;, whether you are using Powerlevel10k or not. This command may result in random errors, misbehaving code and progressive slowdown of Zsh.&lt;/p&gt; 
&lt;p&gt;If you&#39;ve made changes to &lt;code&gt;~/.zshrc&lt;/code&gt; or to files sourced by it, restart Zsh to apply them. The most reliable way to do this is to type &lt;code&gt;exit&lt;/code&gt; and then start a new Zsh session. You can also use &lt;code&gt;exec zsh&lt;/code&gt;. While not exactly equivalent to complete Zsh restart, this command is much more reliable than &lt;code&gt;source ~/.zshrc&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Transient prompt stops working after some time&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#weird-things-happen-after-typing-source-zshrc&quot;&gt;weird things happen after typing &lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Cannot make Powerlevel10k work with my plugin manager&lt;/h3&gt; 
&lt;p&gt;If the &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#installation&quot;&gt;installation instructions&lt;/a&gt; didn&#39;t work for you, try disabling your current theme (so that you end up with no theme) and then installing Powerlevel10k manually.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Disable the current theme in your framework / plugin manager.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;oh-my-zsh:&lt;/strong&gt; Open &lt;code&gt;~/.zshrc&lt;/code&gt; and remove the line that sets &lt;code&gt;ZSH_THEME&lt;/code&gt;. It might look like this: &lt;code&gt;ZSH_THEME=&quot;powerlevel9k/powerlevel9k&quot;&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;zplug:&lt;/strong&gt; Open &lt;code&gt;~/.zshrc&lt;/code&gt; and remove the &lt;code&gt;zplug&lt;/code&gt; command that refers to your current theme. For example, if you are currently using Powerlevel9k, look for &lt;code&gt;zplug bhilburn/powerlevel9k, use:powerlevel9k.zsh-theme&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;prezto:&lt;/strong&gt; Open &lt;code&gt;~/.zpreztorc&lt;/code&gt; and put &lt;code&gt;zstyle :prezto:module:prompt theme off&lt;/code&gt; in it. Remove any other command that sets &lt;code&gt;theme&lt;/code&gt; such as &lt;code&gt;zstyle :prezto:module:prompt theme powerlevel9k&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;antigen:&lt;/strong&gt; Open &lt;code&gt;~/.zshrc&lt;/code&gt; and remove the line that sets &lt;code&gt;antigen theme&lt;/code&gt;. It might look like this: &lt;code&gt;antigen theme powerlevel9k/powerlevel9k&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Install Powerlevel10k manually.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
echo &#39;source ~/powerlevel10k/powerlevel10k.zsh-theme&#39; &amp;gt;&amp;gt;~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This method of installation won&#39;t make anything slower or otherwise sub-par.&lt;/p&gt; 
&lt;h3&gt;Directory is difficult to see in prompt when using Rainbow style&lt;/h3&gt; 
&lt;p&gt;In Rainbow style the current working directory is shown with bright white text on blue background. The white is fixed and always looks the same but the appearance of &quot;blue&quot; is defined by your terminal color palette. If it&#39;s very light, it may be difficult to see white text on it.&lt;/p&gt; 
&lt;p&gt;There are several ways to fix this.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type &lt;code&gt;p10k configure&lt;/code&gt; and choose a more readable prompt style.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#change-the-color-palette-used-by-your-terminal&quot;&gt;Change terminal color palette&lt;/a&gt;. Try Tango Dark or Solarized Dark, or change just the &quot;blue&quot; color.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#set-colors-through-Powerlevel10k-configuration-parameters&quot;&gt;Change directory background and/or foreground color&lt;/a&gt;. The parameters you are looking for are called &lt;code&gt;POWERLEVEL9K_DIR_BACKGROUND&lt;/code&gt;, &lt;code&gt;POWERLEVEL9K_DIR_FOREGROUND&lt;/code&gt;, &lt;code&gt;POWERLEVEL9K_DIR_SHORTENED_FOREGROUND&lt;/code&gt;, &lt;code&gt;POWERLEVEL9K_DIR_ANCHOR_FOREGROUND&lt;/code&gt; and &lt;code&gt;POWERLEVEL9K_DIR_ANCHOR_BOLD&lt;/code&gt;. You can find them in &lt;code&gt;~/.p10k.zsh&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Related&lt;/em&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#incorrect-foreground-color-in-vscode-terminal&quot;&gt;Incorrect foreground color in VSCode Terminal.&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Incorrect foreground color in VSCode Terminal&lt;/h3&gt; 
&lt;p&gt;By default, VSCode Terminal may arbitrarily replace the foreground color of your choice with a different color. This behavior can be &lt;a href=&quot;https://code.visualstudio.com/docs/terminal/appearance#_minimum-contrast-ratio&quot;&gt;turned off&lt;/a&gt; in VSCode settings.&lt;/p&gt; 
&lt;h3&gt;Horrific mess when resizing terminal window&lt;/h3&gt; 
&lt;p&gt;When you resize a terminal window horizontally back and forth a few times, you might see this ugly picture.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/resizing-mess.png&quot; alt=&quot;Powerlevel10k Resizing Mess&quot;&gt;&lt;/p&gt; 
&lt;p&gt;tl;dr: This issue arises when a terminal reflows Zsh prompt upon resizing. It isn&#39;t specific to Powerlevel10k. See &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#mitigation&quot;&gt;mitigation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: This section &lt;a href=&quot;https://github.com/romkatv/powerlevel10k/raw/dce00cdb5daaa8a519df234a7012ba3257b644d4/README.md#horrific-mess-when-resizing-terminal-window&quot;&gt;used to say&lt;/a&gt; that the problem is caused by a bug in Zsh. While it&#39;s true that it&#39;s possible to avoid the problem in many circumstances by modifying Zsh, it cannot be completely resolved this way. Thus it&#39;s unfair to pin the blame on Zsh.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;The anatomy of the problem&lt;/h4&gt; 
&lt;p&gt;The issue is manifested when the vertical distance between the start of the current prompt and the cursor (henceforth &lt;code&gt;VD&lt;/code&gt;) changes when the terminal window is resized.&lt;/p&gt; 
&lt;p&gt;When a terminal window gets shrunk horizontally, there are two ways for a terminal to handle long lines that no longer fit: &lt;em&gt;reflow&lt;/em&gt; or &lt;em&gt;truncate&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;Terminal content before shrinking:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/resize-original.png&quot; alt=&quot;Terminal Content Before Shrinking&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Terminal reflows text when shrinking:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/resize-reflow.png&quot; alt=&quot;Terminal Reflows Text When Shrinking&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Terminal truncates text when shrinking:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/resize-truncate.png&quot; alt=&quot;Terminal Truncates Text When Shrinking&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Reflowing strategy can change the height of terminal content. If such content happens to be between the start of the current prompt and the cursor, Zsh will print prompt on the wrong line. Truncation strategy never changes the height of terminal content, so it doesn&#39;t trigger this issue.&lt;/p&gt; 
&lt;p&gt;Let&#39;s see how the issue plays out in slow motion. We&#39;ll start by launching &lt;code&gt;zsh -f&lt;/code&gt; and pasting the following code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;function pause() { read -s }
functions -M pause 0

reset
print -l {1..3}
setopt prompt_subst
PROMPT=$&#39;${$((pause()))+}left&amp;gt;${(pl.$((COLUMNS-12))..-.)}&amp;lt;right\n&amp;gt; &#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When &lt;code&gt;PROMPT&lt;/code&gt; gets expanded, it calls &lt;code&gt;pause&lt;/code&gt; to let us observe the state of the terminal. Here&#39;s the initial state:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/resize-bug-1.png&quot; alt=&quot;Terminal Resizing Bug 1&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Zsh keeps track of the cursor position relative to the start of the current prompt. In this case it knows that the cursor is one line below. When we shrink the terminal window, it looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/resize-bug-2.png&quot; alt=&quot;Terminal Resizing Bug 2&quot;&gt;&lt;/p&gt; 
&lt;p&gt;At this point the terminal sends &lt;code&gt;SIGWINCH&lt;/code&gt; to Zsh to notify it about changes in the terminal dimensions. Note that this signal is sent &lt;em&gt;after&lt;/em&gt; the content of the terminal has been reflown.&lt;/p&gt; 
&lt;p&gt;When Zsh receives &lt;code&gt;SIGWINCH&lt;/code&gt;, it attempts to erase the current prompt and print it anew. It goes to the position where it &lt;em&gt;thinks&lt;/em&gt; the current prompt is -- one line above the cursor (!) -- erases all terminal content that follows and prints reexpanded prompt there. However, after resizing prompt is no longer one line above the cursor. It&#39;s two lines above! Zsh ends up printing new prompt one line too low.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/resize-bug-3.png&quot; alt=&quot;Terminal Resizing Bug 3&quot;&gt;&lt;/p&gt; 
&lt;p&gt;In this case we ended up with unwanted junk content because &lt;code&gt;VD&lt;/code&gt; has &lt;em&gt;increased&lt;/em&gt;. When you make terminal window wider, &lt;code&gt;VD&lt;/code&gt; can also &lt;em&gt;decrease&lt;/em&gt;, which would result in the new prompt being printed higher than intended, potentially erasing useful content in the process.&lt;/p&gt; 
&lt;p&gt;Here are a few more examples where shrinking terminal window increased &lt;code&gt;VD&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple one-line left prompt with right prompt. No &lt;code&gt;prompt_subst&lt;/code&gt;. Note that the cursor is below the prompt line (hit &lt;em&gt;ESC-ENTER&lt;/em&gt; to get it there). &lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/resize-breakable-1.png&quot; alt=&quot;Zsh Prompt That Breaks on Terminal Shrinking 1&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Simple one-line left prompt. No &lt;code&gt;prompt_subst&lt;/code&gt;, no right prompt. Here &lt;code&gt;VD&lt;/code&gt; is bound to increase upon terminal shrinking due to the command line wrapping around. &lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/resize-breakable-2.png&quot; alt=&quot;Zsh Prompt That Breaks on Terminal Shrinking 2&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Zsh patch&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/romkatv/zsh/tree/fix-winchanged&quot;&gt;This Zsh patch&lt;/a&gt; fixes the issue on some terminals. The idea behind the patch is to use &lt;code&gt;sc&lt;/code&gt; (save cursor) terminal capability before printing prompt and &lt;code&gt;rc&lt;/code&gt; (restore cursor) to move cursor back to the original position when prompt needs to be refreshed.&lt;/p&gt; 
&lt;p&gt;The patch works only on terminals that reflow saved cursor position together with text when the terminal window is resized. The patch has no observable effect on terminals that don&#39;t reflow text on resize (both patched and unpatched Zsh behave correctly) and on terminals that reflow text but not the saved cursor position (both patched and unpatched Zsh redraw prompt at the same incorrect position). In other words, the patch fixes the resizing issue on some terminals while keeping the behavior unchanged on others.&lt;/p&gt; 
&lt;p&gt;There are two alternative approaches to patching Zsh that may seem to work at first glance but in fact don&#39;t:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Instead of &lt;code&gt;sc&lt;/code&gt;, use &lt;code&gt;u7&lt;/code&gt; terminal capability to query the current cursor position and then &lt;code&gt;cup&lt;/code&gt; to go back to it. This doesn&#39;t work because the absolute position of the start of the current prompt changes when text gets reflown.&lt;/li&gt; 
 &lt;li&gt;Recompute &lt;code&gt;VD&lt;/code&gt; based on new terminal dimensions before attempting to refresh prompt. This doesn&#39;t work because Zsh doesn&#39;t know whether terminal reflows text or truncates it. If Zsh could somehow know that the terminal reflows text, this approach still wouldn&#39;t work on terminals that continuously reflow text and rapid-fire &lt;code&gt;SIGWINCH&lt;/code&gt; when the window is being resized. In such environment real terminal dimensions go out of sync with what Zsh thinks the dimensions are.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There is no ETA for the patch making its way into upstream Zsh. See &lt;a href=&quot;https://www.zsh.org/mla/workers//2019/msg00561.html&quot;&gt;discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Mitigation&lt;/h4&gt; 
&lt;p&gt;There are a few mitigation options for this issue.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://sw.kovidgoyal.net/kitty/&quot;&gt;kitty&lt;/a&gt; terminal version &amp;gt;= 0.24.0 and enable terminal-shell integration in Powerlevel10k by defining &lt;code&gt;POWERLEVEL9K_TERM_SHELL_INTEGRATION=true&lt;/code&gt; in &lt;code&gt;~/.p10k.zsh&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Apply &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#zsh-patch&quot;&gt;the patch&lt;/a&gt; and &lt;a href=&quot;https://github.com/zsh-users/zsh/raw/master/INSTALL&quot;&gt;rebuild Zsh from source&lt;/a&gt;. It won&#39;t help if you are using Alacritty, kitty or some other terminal that reflows text on resize but doesn&#39;t reflow saved cursor position. On such terminals the patch will have no visible effect.&lt;/li&gt; 
 &lt;li&gt;Disable text reflowing on window resize in terminal settings. If your terminal doesn&#39;t have this setting, try a different terminal.&lt;/li&gt; 
 &lt;li&gt;Avoid long lines between the start of prompt and cursor. 
  &lt;ol&gt; 
   &lt;li&gt;Disable ruler with &lt;code&gt;POWERLEVEL9K_SHOW_RULER=false&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Disable prompt connection with &lt;code&gt;POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR=&#39; &#39;&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Disable right frame with &lt;code&gt;POWERLEVEL9K_MULTILINE_FIRST_PROMPT_SUFFIX=&#39;&#39;&lt;/code&gt;, &lt;code&gt;POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_SUFFIX=&#39;&#39;&lt;/code&gt; and &lt;code&gt;POWERLEVEL9K_MULTILINE_LAST_PROMPT_SUFFIX=&#39;&#39;&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()&lt;/code&gt;. Right prompt on the last prompt line will cause resizing issues only when the cursor is below it. This isn&#39;t very common, so you might want to keep some elements in &lt;code&gt;POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS&lt;/code&gt; provided that none of them are succeeded by &lt;code&gt;newline&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Icons cut off in Konsole&lt;/h3&gt; 
&lt;p&gt;When using Konsole with a non-monospace font, icons may be cut off on the right side. Here &quot;non-monospace&quot; refers to any font with glyphs wider than a single column, or wider than two columns for glyphs designated as &quot;wide&quot; in the Unicode standard.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/konsole-non-monospace-font.png&quot; alt=&quot;Icons cut off in Konsole&quot;&gt;&lt;/p&gt; 
&lt;p&gt;The last line on the screenshot shows a cut off Arch Linux logo.&lt;/p&gt; 
&lt;p&gt;There are several mitigation options for this issue.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Use a different terminal. Konsole is the only terminal that exhibits this behavior.&lt;/li&gt; 
 &lt;li&gt;Use a monospace font.&lt;/li&gt; 
 &lt;li&gt;Manually add an extra space after the icon that gets cut off. For example, if the content of &lt;code&gt;os_icon&lt;/code&gt; prompt segment gets cut off, open &lt;code&gt;~/.p10k.zsh&lt;/code&gt;, search for &lt;code&gt;POWERLEVEL9K_OS_ICON_CONTENT_EXPANSION&lt;/code&gt; and change it as follows:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;typeset -g POWERLEVEL9K_OS_ICON_CONTENT_EXPANSION=&#39;${P9K_CONTENT} &#39;  # extra space at the end
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Use a different icon that is monospace. For example, if Arch Linux logo gets cut off, add the following parameter to &lt;code&gt;~/.p10k.zsh&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;typeset -g POWERLEVEL9K_LINUX_ARCH_ICON=&#39;Arch&#39;  # plain &quot;Arch&quot; in place of a logo
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;Disable the display of the icon that gets cut off. For example, if the content of &lt;code&gt;os_icon&lt;/code&gt; prompt segment gets cut off, open &lt;code&gt;~/.p10k.zsh&lt;/code&gt; and remove &lt;code&gt;os_icon&lt;/code&gt; from &lt;code&gt;POWERLEVEL9K_LEFT_PROMPT_ELEMENTS&lt;/code&gt; and &lt;code&gt;POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: &lt;a href=&quot;https://bugs.kde.org/show_bug.cgi?id=418553#c5&quot;&gt;Non-monospace fonts are not officially supported by Konsole&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Arch Linux logo has a dot in the bottom right corner&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/arch-linux-logo-dot.png&quot; alt=&quot;Arch Linux Logo with a dot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Some fonts have this incorrect dotted icon in bold typeface. There are two ways to fix this issue.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Use a font with a correct Arch Linux logo in bold typeface. For example, &lt;a href=&quot;https://raw.githubusercontent.com/romkatv/powerlevel10k/master/#meslo-nerd-font-patched-for-powerlevel10k&quot;&gt;the recommended Powerlevel10k font&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Display the icon in regular (non-bold) typeface. To do this, open &lt;code&gt;~/.p10k.zsh&lt;/code&gt;, search for &lt;code&gt;POWERLEVEL9K_OS_ICON_CONTENT_EXPANSION&lt;/code&gt; and remove &lt;code&gt;%B&lt;/code&gt; from its value.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;typeset -g POWERLEVEL9K_OS_ICON_CONTENT_EXPANSION=&#39;${P9K_CONTENT}&#39;  # not bold
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Incorrect git status in prompt&lt;/h3&gt; 
&lt;p&gt;Powerlevel10k uses &lt;a href=&quot;https://github.com/romkatv/gitstatus&quot;&gt;gitstatusd&lt;/a&gt; to inspect the state of git repositories. The project relies on the &lt;a href=&quot;https://github.com/libgit2/libgit2&quot;&gt;libgit2&lt;/a&gt; library, which has some gaps in its implementation. Under some conditions, this may result in discrepancies between the real state of a git repository (reflected by &lt;code&gt;git status&lt;/code&gt;) and what gets shown in the Powerlevel10k prompt.&lt;/p&gt; 
&lt;p&gt;Most notably, &lt;a href=&quot;https://github.com/libgit2/libgit2/issues/6531&quot;&gt;libgit2 does not support &lt;code&gt;skipHash&lt;/code&gt;&lt;/a&gt;. If you see incorrect git status in prompt, run &lt;code&gt;git config -l&lt;/code&gt; and check whether &lt;code&gt;skipHash&lt;/code&gt; is enabled. If it is, consider disabling it. Keep in mind that &lt;code&gt;skipHash&lt;/code&gt; may be implicitly enabled when activating certain git features, such as &lt;code&gt;manyFiles&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
